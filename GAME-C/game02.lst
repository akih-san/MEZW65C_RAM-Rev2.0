ca65 V2.19 - Git 03d824e
Main file   : .\game02_refine.s
Current file: .\game02_refine.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.19 - Git 03d824e
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.19 - Git 03d824e"
000000r 1               	.setcpu		"65C02"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.forceimport	__STARTUP__
000000r 1               ;	.forceimport	initmainargs
000000r 1               	.import		_c_kbhit
000000r 1               	.import		_c_getch
000000r 1               	.import		_c_putch
000000r 1               	.import		_srand
000000r 1               	.import		_rand
000000r 1               	.import		_warm_boot
000000r 1               	.import		_mach_fin
000000r 1               	.export		_newline
000000r 1               	.export		_main
000000r 1               
000000r 1               ;.segment	"DATA"
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               _open_msg:
000000r 1  rr rr        	.addr	S0001
000002r 1               _rdy_msg:
000002r 1  rr rr        	.addr	S0002
000004r 1               _t_lock:
000004r 1  rr rr        	.addr	S0003
000006r 1               _bk_msg:
000006r 1  rr rr        	.addr	S0004
000008r 1               
000008r 1               .segment	"RODATA"
000008r 1               
000008r 1               S0001:
000008r 1  47 41 4D 45  	.byte	$47,$41,$4D,$45,$2D,$43,$20,$4D,$45,$5A,$57,$36,$35,$43,$5F,$52
00000Cr 1  2D 43 20 4D  
000010r 1  45 5A 57 36  
000018r 1  41 4D 20 45  	.byte	$41,$4D,$20,$45,$64,$69,$74,$69,$6F,$6E,$0D,$0A,$00
00001Cr 1  64 69 74 69  
000020r 1  6F 6E 0D 0A  
000025r 1               S0002:
000025r 1  2A 52 45 41  	.byte	$2A,$52,$45,$41,$44,$59,$0D,$0A,$00
000029r 1  44 59 0D 0A  
00002Dr 1  00           
00002Er 1               S0004:
00002Er 1  0D 0A 53 74  	.byte	$0D,$0A,$53,$74,$6F,$70,$21,$00
000032r 1  6F 70 21 00  
000036r 1               S000D:
000036r 1  0D 0A 45 72  	.byte	$0D,$0A,$45,$72,$72,$00
00003Ar 1  72 00        
00003Cr 1               S000F	:=	S000D+0
00003Cr 1               S000E:
00003Cr 1  20 69 6E 20  	.byte	$20,$69,$6E,$20,$00
000040r 1  00           
000041r 1               S000C:
000041r 1  20 29 3F 00  	.byte	$20,$29,$3F,$00
000045r 1               S000B:
000045r 1  20 22 3F 00  	.byte	$20,$22,$3F,$00
000049r 1               S000A	:=	S000C+0
000049r 1               S0009:
000049r 1  20 3F 00     	.byte	$20,$3F,$00
00004Cr 1               S0010	:=	S0001+26
00004Cr 1               S0006:
00004Cr 1  33 00        	.byte	$33,$00
00004Er 1               S0007:
00004Er 1  34 00        	.byte	$34,$00
000050r 1               S0008:
000050r 1  35 00        	.byte	$35,$00
000052r 1               S0005:
000052r 1  32 00        	.byte	$32,$00
000054r 1               S0003:
000054r 1  31 00        	.byte	$31,$00
000056r 1               
000056r 1               .segment	"BSS"
000000r 1               
000000r 1               _text_buf:
000000r 1  00 00 00 00  	.res	30720,$00
000004r 1  00 00 00 00  
000008r 1  00 00 00 00  
007800r 1               _lin:
007800r 1  00 00 00 00  	.res	160,$00
007804r 1  00 00 00 00  
007808r 1  00 00 00 00  
0078A0r 1               _lky_buf:
0078A0r 1  00 00 00 00  	.res	160,$00
0078A4r 1  00 00 00 00  
0078A8r 1  00 00 00 00  
007940r 1               _pc:
007940r 1  00 00        	.res	2,$00
007942r 1               _sp:
007942r 1  00 00        	.res	2,$00
007944r 1               _stack:
007944r 1  00 00 00 00  	.res	200,$00
007948r 1  00 00 00 00  
00794Cr 1  00 00 00 00  
007A0Cr 1               _lno:
007A0Cr 1  00 00        	.res	2,$00
007A0Er 1               _var:
007A0Er 1  00 00 00 00  	.res	256,$00
007A12r 1  00 00 00 00  
007A16r 1  00 00 00 00  
007B0Er 1               _mm:
007B0Er 1  00 00 00 00  	.res	4,$00
007B12r 1               
007B12r 1               ; ---------------------------------------------------------------
007B12r 1               ; void __near__ newline (void)
007B12r 1               ; ---------------------------------------------------------------
007B12r 1               
007B12r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_newline: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  A9 rr        	lda     #<(S0010)
000002r 1  A2 rr        	ldx     #>(S0010)
000004r 1  20 rr rr     	jsr     pushax
000007r 1  20 rr rr     	jsr     ldax0sp
00000Ar 1  20 rr rr     	jsr     _c_puts
00000Dr 1  4C rr rr     	jmp     incsp2
000010r 1               
000010r 1               .endproc
000010r 1               
000010r 1               ; ---------------------------------------------------------------
000010r 1               ; void __near__ c_puts (const unsigned char *s)
000010r 1               ; ---------------------------------------------------------------
000010r 1               
000010r 1               .segment	"CODE"
000010r 1               
000010r 1               .proc	_c_puts: near
000010r 1               
000010r 1               .segment	"CODE"
000010r 1               
000010r 1  20 rr rr     	jsr     pushax
000013r 1  80 1B        	bra     L0004
000015r 1  20 rr rr     L0002:	jsr     ldax0sp
000018r 1  85 rr        	sta     ptr1
00001Ar 1  86 rr        	stx     ptr1+1
00001Cr 1  A2 00        	ldx     #$00
00001Er 1  B2 rr        	lda     (ptr1)
000020r 1  85 rr        	sta     regsave
000022r 1  64 rr        	stz     regsave+1
000024r 1  A9 01        	lda     #$01
000026r 1  20 rr rr     	jsr     addeq0sp
000029r 1  A5 rr        	lda     regsave
00002Br 1  A6 rr        	ldx     regsave+1
00002Dr 1  20 rr rr     	jsr     _c_putch
000030r 1  20 rr rr     L0004:	jsr     ldax0sp
000033r 1  85 rr        	sta     ptr1
000035r 1  86 rr        	stx     ptr1+1
000037r 1  B2 rr        	lda     (ptr1)
000039r 1  D0 DA        	bne     L0002
00003Br 1  4C rr rr     	jmp     incsp2
00003Er 1               
00003Er 1               .endproc
00003Er 1               
00003Er 1               ; ---------------------------------------------------------------
00003Er 1               ; void __near__ newText1 (void)
00003Er 1               ; ---------------------------------------------------------------
00003Er 1               
00003Er 1               .segment	"CODE"
00003Er 1               
00003Er 1               .proc	_newText1: near
00003Er 1               
00003Er 1               .segment	"CODE"
00003Er 1               
00003Er 1  AD rr rr     	lda     _var+122
000041r 1  AE rr rr     	ldx     _var+122+1
000044r 1  8D rr rr     	sta     _var+76
000047r 1  8E rr rr     	stx     _var+76+1
00004Ar 1  85 rr        	sta     ptr1
00004Cr 1  86 rr        	stx     ptr1+1
00004Er 1  A9 FF        	lda     #$FF
000050r 1  92 rr        	sta     (ptr1)
000052r 1  60           	rts
000053r 1               
000053r 1               .endproc
000053r 1               
000053r 1               ; ---------------------------------------------------------------
000053r 1               ; int __near__ c_gets (unsigned char *lbuf)
000053r 1               ; ---------------------------------------------------------------
000053r 1               
000053r 1               .segment	"CODE"
000053r 1               
000053r 1               .proc	_c_gets: near
000053r 1               
000053r 1               .segment	"CODE"
000053r 1               
000053r 1  20 rr rr     	jsr     pushax
000056r 1  20 rr rr     	jsr     decsp3
000059r 1  A2 00        	ldx     #$00
00005Br 1  8A           	txa
00005Cr 1  20 rr rr     	jsr     stax0sp
00005Fr 1  80 72        	bra     L000E
000061r 1  B1 rr        L0019:	lda     (sp),y
000063r 1  C9 09        	cmp     #$09
000065r 1  D0 04        	bne     L001B
000067r 1  A9 20        	lda     #$20
000069r 1  91 rr        	sta     (sp),y
00006Br 1  B1 rr        L001B:	lda     (sp),y
00006Dr 1  C9 08        	cmp     #$08
00006Fr 1  F0 04        	beq     L001C
000071r 1  C9 7F        	cmp     #$7F
000073r 1  D0 22        	bne     L0023
000075r 1  B2 rr        L001C:	lda     (sp)
000077r 1  88           	dey
000078r 1  11 rr        	ora     (sp),y
00007Ar 1  F0 1A        	beq     L0006
00007Cr 1  A2 00        	ldx     #$00
00007Er 1  98           	tya
00007Fr 1  20 rr rr     	jsr     subeq0sp
000082r 1  A2 00        	ldx     #$00
000084r 1  A9 08        	lda     #$08
000086r 1  20 rr rr     	jsr     _c_putch
000089r 1  A2 00        	ldx     #$00
00008Br 1  A9 20        	lda     #$20
00008Dr 1  20 rr rr     	jsr     _c_putch
000090r 1  A2 00        	ldx     #$00
000092r 1  A9 08        	lda     #$08
000094r 1  80 3A        	bra     L0018
000096r 1  C8           L0006:	iny
000097r 1  B1 rr        L0023:	lda     (sp),y
000099r 1  20 rr rr     	jsr     _c_isprint
00009Cr 1  AA           	tax
00009Dr 1  F0 34        	beq     L000E
00009Fr 1  A0 01        	ldy     #$01
0000A1r 1  B1 rr        	lda     (sp),y
0000A3r 1  C9 00        	cmp     #$00
0000A5r 1  D0 04        	bne     L0010
0000A7r 1  B2 rr        	lda     (sp)
0000A9r 1  C9 9F        	cmp     #$9F
0000ABr 1  B0 26        L0010:	bcs     L000E
0000ADr 1  20 rr rr     	jsr     ldax0sp
0000B0r 1  18           	clc
0000B1r 1  A0 03        	ldy     #$03
0000B3r 1  71 rr        	adc     (sp),y
0000B5r 1  85 rr        	sta     ptr1
0000B7r 1  8A           	txa
0000B8r 1  C8           	iny
0000B9r 1  71 rr        	adc     (sp),y
0000BBr 1  85 rr        	sta     ptr1+1
0000BDr 1  A0 02        	ldy     #$02
0000BFr 1  B1 rr        	lda     (sp),y
0000C1r 1  92 rr        	sta     (ptr1)
0000C3r 1  A2 00        	ldx     #$00
0000C5r 1  A9 01        	lda     #$01
0000C7r 1  20 rr rr     	jsr     addeq0sp
0000CAr 1  A0 02        	ldy     #$02
0000CCr 1  A2 00        	ldx     #$00
0000CEr 1  B1 rr        	lda     (sp),y
0000D0r 1  20 rr rr     L0018:	jsr     _c_putch
0000D3r 1  20 rr rr     L000E:	jsr     _c_getch
0000D6r 1  A0 02        	ldy     #$02
0000D8r 1  91 rr        	sta     (sp),y
0000DAr 1  C9 0D        	cmp     #$0D
0000DCr 1  D0 83        	bne     L0019
0000DEr 1  20 rr rr     	jsr     _newline
0000E1r 1  20 rr rr     	jsr     ldax0sp
0000E4r 1  18           	clc
0000E5r 1  A0 03        	ldy     #$03
0000E7r 1  71 rr        	adc     (sp),y
0000E9r 1  85 rr        	sta     ptr1
0000EBr 1  8A           	txa
0000ECr 1  C8           	iny
0000EDr 1  71 rr        	adc     (sp),y
0000EFr 1  85 rr        	sta     ptr1+1
0000F1r 1  A9 00        	lda     #$00
0000F3r 1  92 rr        	sta     (ptr1)
0000F5r 1  B2 rr        	lda     (sp)
0000F7r 1  A0 01        	ldy     #$01
0000F9r 1  11 rr        	ora     (sp),y
0000FBr 1  F0 37        	beq     L0022
0000FDr 1  A2 00        L0015:	ldx     #$00
0000FFr 1  A9 01        	lda     #$01
000101r 1  20 rr rr     	jsr     subeq0sp
000104r 1  20 rr rr     	jsr     ldax0sp
000107r 1  18           	clc
000108r 1  A0 03        	ldy     #$03
00010Ar 1  71 rr        	adc     (sp),y
00010Cr 1  85 rr        	sta     ptr1
00010Er 1  8A           	txa
00010Fr 1  C8           	iny
000110r 1  71 rr        	adc     (sp),y
000112r 1  85 rr        	sta     ptr1+1
000114r 1  B2 rr        	lda     (ptr1)
000116r 1  20 rr rr     	jsr     _c_isspace
000119r 1  AA           	tax
00011Ar 1  D0 E1        	bne     L0015
00011Cr 1  1A           	ina
00011Dr 1  20 rr rr     	jsr     addeq0sp
000120r 1  20 rr rr     	jsr     ldax0sp
000123r 1  18           	clc
000124r 1  A0 03        	ldy     #$03
000126r 1  71 rr        	adc     (sp),y
000128r 1  85 rr        	sta     ptr1
00012Ar 1  8A           	txa
00012Br 1  C8           	iny
00012Cr 1  71 rr        	adc     (sp),y
00012Er 1  85 rr        	sta     ptr1+1
000130r 1  A9 00        	lda     #$00
000132r 1  92 rr        	sta     (ptr1)
000134r 1  20 rr rr     L0022:	jsr     ldax0sp
000137r 1  4C rr rr     	jmp     incsp5
00013Ar 1               
00013Ar 1               .endproc
00013Ar 1               
00013Ar 1               ; ---------------------------------------------------------------
00013Ar 1               ; void __near__ skipBlank (void)
00013Ar 1               ; ---------------------------------------------------------------
00013Ar 1               
00013Ar 1               .segment	"CODE"
00013Ar 1               
00013Ar 1               .proc	_skipBlank: near
00013Ar 1               
00013Ar 1               .segment	"CODE"
00013Ar 1               
00013Ar 1  AD rr rr     L0005:	lda     _pc+1
00013Dr 1  85 rr        	sta     ptr1+1
00013Fr 1  AD rr rr     	lda     _pc
000142r 1  85 rr        	sta     ptr1
000144r 1  B2 rr        	lda     (ptr1)
000146r 1  C9 20        	cmp     #$20
000148r 1  D0 0A        	bne     L0003
00014Ar 1  EE rr rr     	inc     _pc
00014Dr 1  D0 EB        	bne     L0005
00014Fr 1  EE rr rr     	inc     _pc+1
000152r 1  80 E6        	bra     L0005
000154r 1  60           L0003:	rts
000155r 1               
000155r 1               .endproc
000155r 1               
000155r 1               ; ---------------------------------------------------------------
000155r 1               ; int __near__ getNum (f) int *f;
000155r 1               ; ---------------------------------------------------------------
000155r 1               
000155r 1               .segment	"CODE"
000155r 1               
000155r 1               .proc	_getNum: near
000155r 1               
000155r 1               .segment	"CODE"
000155r 1               
000155r 1  20 rr rr     	jsr     pushax
000158r 1  20 rr rr     	jsr     decsp1
00015Br 1  20 rr rr     	jsr     push0
00015Er 1  A0 04        	ldy     #$04
000160r 1  20 rr rr     	jsr     ldaxysp
000163r 1  85 rr        	sta     ptr1
000165r 1  86 rr        	stx     ptr1+1
000167r 1  A9 00        	lda     #$00
000169r 1  92 rr        	sta     (ptr1)
00016Br 1  A0 01        	ldy     #$01
00016Dr 1  91 rr        	sta     (ptr1),y
00016Fr 1  AD rr rr     	lda     _pc+1
000172r 1  85 rr        	sta     ptr1+1
000174r 1  AD rr rr     	lda     _pc
000177r 1  85 rr        	sta     ptr1
000179r 1  B2 rr        	lda     (ptr1)
00017Br 1  C8           	iny
00017Cr 1  91 rr        	sta     (sp),y
00017Er 1  80 4A        	bra     L000B
000180r 1  20 rr rr     L0002:	jsr     ldax0sp
000183r 1  20 rr rr     	jsr     mulax10
000186r 1  85 rr        	sta     ptr1
000188r 1  86 rr        	stx     ptr1+1
00018Ar 1  A2 00        	ldx     #$00
00018Cr 1  A0 02        	ldy     #$02
00018Er 1  B1 rr        	lda     (sp),y
000190r 1  A0 30        	ldy     #$30
000192r 1  20 rr rr     	jsr     decaxy
000195r 1  18           	clc
000196r 1  65 rr        	adc     ptr1
000198r 1  48           	pha
000199r 1  8A           	txa
00019Ar 1  65 rr        	adc     ptr1+1
00019Cr 1  AA           	tax
00019Dr 1  68           	pla
00019Er 1  20 rr rr     	jsr     stax0sp
0001A1r 1  EE rr rr     	inc     _pc
0001A4r 1  D0 03        	bne     L0008
0001A6r 1  EE rr rr     	inc     _pc+1
0001A9r 1  AD rr rr     L0008:	lda     _pc+1
0001ACr 1  85 rr        	sta     ptr1+1
0001AEr 1  AD rr rr     	lda     _pc
0001B1r 1  85 rr        	sta     ptr1
0001B3r 1  B2 rr        	lda     (ptr1)
0001B5r 1  A0 02        	ldy     #$02
0001B7r 1  91 rr        	sta     (sp),y
0001B9r 1  A0 04        	ldy     #$04
0001BBr 1  20 rr rr     	jsr     ldaxysp
0001BEr 1  85 rr        	sta     ptr1
0001C0r 1  86 rr        	stx     ptr1+1
0001C2r 1  A9 01        	lda     #$01
0001C4r 1  92 rr        	sta     (ptr1)
0001C6r 1  A8           	tay
0001C7r 1  3A           	dea
0001C8r 1  91 rr        	sta     (ptr1),y
0001CAr 1  A9 30        L000B:	lda     #$30
0001CCr 1  A0 02        	ldy     #$02
0001CEr 1  D1 rr        	cmp     (sp),y
0001D0r 1  F0 02        	beq     L000D
0001D2r 1  B0 06        	bcs     L0009
0001D4r 1  B1 rr        L000D:	lda     (sp),y
0001D6r 1  C9 3A        	cmp     #$3A
0001D8r 1  90 A6        	bcc     L0002
0001DAr 1  20 rr rr     L0009:	jsr     ldax0sp
0001DDr 1  4C rr rr     	jmp     incsp5
0001E0r 1               
0001E0r 1               .endproc
0001E0r 1               
0001E0r 1               ; ---------------------------------------------------------------
0001E0r 1               ; void __near__ exqt (void)
0001E0r 1               ; ---------------------------------------------------------------
0001E0r 1               
0001E0r 1               .segment	"CODE"
0001E0r 1               
0001E0r 1               .proc	_exqt: near
0001E0r 1               
0001E0r 1               .segment	"CODE"
0001E0r 1               
0001E0r 1  20 rr rr     L0005:	jsr     _skipBlank
0001E3r 1  20 rr rr     	jsr     _do_cmd
0001E6r 1  80 F8        	bra     L0005
0001E8r 1               
0001E8r 1               .endproc
0001E8r 1               
0001E8r 1               ; ---------------------------------------------------------------
0001E8r 1               ; int __near__ edit (n) int n;
0001E8r 1               ; ---------------------------------------------------------------
0001E8r 1               
0001E8r 1               .segment	"CODE"
0001E8r 1               
0001E8r 1               .proc	_edit: near
0001E8r 1               
0001E8r 1               .segment	"CODE"
0001E8r 1               
0001E8r 1  20 rr rr     	jsr     pushax
0001EBr 1  20 rr rr     	jsr     decsp4
0001EEr 1  A0 04        	ldy     #$04
0001F0r 1  B1 rr        	lda     (sp),y
0001F2r 1  C8           	iny
0001F3r 1  11 rr        	ora     (sp),y
0001F5r 1  D0 0F        	bne     L000A
0001F7r 1  AD rr rr     	lda     _var+122
0001FAr 1  AE rr rr     	ldx     _var+122+1
0001FDr 1  20 rr rr     	jsr     _dispList
000200r 1  A2 00        	ldx     #$00
000202r 1  8A           	txa
000203r 1  20 rr rr     	jsr     _w_boot
000206r 1  A0 07        L000A:	ldy     #$07
000208r 1  20 rr rr     	jsr     pushwysp
00020Br 1  A9 02        	lda     #$02
00020Dr 1  20 rr rr     	jsr     leaa0sp
000210r 1  20 rr rr     	jsr     _searchLine
000213r 1  A0 02        	ldy     #$02
000215r 1  20 rr rr     	jsr     staxysp
000218r 1  AD rr rr     	lda     _pc+1
00021Br 1  85 rr        	sta     ptr1+1
00021Dr 1  AD rr rr     	lda     _pc
000220r 1  85 rr        	sta     ptr1
000222r 1  B2 rr        	lda     (ptr1)
000224r 1  C9 2F        	cmp     #$2F
000226r 1  D0 10        	bne     L0004
000228r 1  A0 03        	ldy     #$03
00022Ar 1  20 rr rr     	jsr     ldaxysp
00022Dr 1  20 rr rr     	jsr     _dispList
000230r 1  A2 00        	ldx     #$00
000232r 1  8A           	txa
000233r 1  20 rr rr     	jsr     _w_boot
000236r 1  80 4E        	bra     L0005
000238r 1  AD rr rr     L0004:	lda     _var+76+1
00023Br 1  85 rr        	sta     ptr1+1
00023Dr 1  AD rr rr     	lda     _var+76
000240r 1  85 rr        	sta     ptr1
000242r 1  B2 rr        	lda     (ptr1)
000244r 1  C9 FF        	cmp     #$FF
000246r 1  F0 09        	beq     L0006
000248r 1  AD rr rr     	lda     _t_lock
00024Br 1  AE rr rr     	ldx     _t_lock+1
00024Er 1  20 rr rr     	jsr     _er_boot
000251r 1  A0 01        L0006:	ldy     #$01
000253r 1  B1 rr        	lda     (sp),y
000255r 1  12 rr        	ora     (sp)
000257r 1  F0 08        	beq     L0007
000259r 1  A0 03        	ldy     #$03
00025Br 1  20 rr rr     	jsr     ldaxysp
00025Er 1  20 rr rr     	jsr     _deleteLine
000261r 1  AD rr rr     L0007:	lda     _pc+1
000264r 1  85 rr        	sta     ptr1+1
000266r 1  AD rr rr     	lda     _pc
000269r 1  85 rr        	sta     ptr1
00026Br 1  B2 rr        	lda     (ptr1)
00026Dr 1  D0 04        	bne     L0008
00026Fr 1  AA           	tax
000270r 1  4C rr rr     	jmp     incsp6
000273r 1  A0 07        L0008:	ldy     #$07
000275r 1  20 rr rr     	jsr     pushwysp
000278r 1  A0 07        	ldy     #$07
00027Ar 1  20 rr rr     	jsr     pushwysp
00027Dr 1  AD rr rr     	lda     _pc
000280r 1  AE rr rr     	ldx     _pc+1
000283r 1  20 rr rr     	jsr     _addLine
000286r 1  A2 00        L0005:	ldx     #$00
000288r 1  8A           	txa
000289r 1  4C rr rr     	jmp     incsp6
00028Cr 1               
00028Cr 1               .endproc
00028Cr 1               
00028Cr 1               ; ---------------------------------------------------------------
00028Cr 1               ; void __near__ dispList (p) unsigned char *p;
00028Cr 1               ; ---------------------------------------------------------------
00028Cr 1               
00028Cr 1               .segment	"CODE"
00028Cr 1               
00028Cr 1               .proc	_dispList: near
00028Cr 1               
00028Cr 1               .segment	"CODE"
00028Cr 1               
00028Cr 1  20 rr rr     	jsr     pushax
00028Fr 1  20 rr rr     L0002:	jsr     ldax0sp
000292r 1  85 rr        	sta     ptr1
000294r 1  86 rr        	stx     ptr1+1
000296r 1  B2 rr        	lda     (ptr1)
000298r 1  29 80        	and     #$80
00029Ar 1  D0 0E        	bne     L0003
00029Cr 1  20 rr rr     	jsr     _breakCheck
00029Fr 1  20 rr rr     	jsr     ldax0sp
0002A2r 1  20 rr rr     	jsr     _dispLine
0002A5r 1  20 rr rr     	jsr     stax0sp
0002A8r 1  80 E5        	bra     L0002
0002AAr 1  4C rr rr     L0003:	jmp     incsp2
0002ADr 1               
0002ADr 1               .endproc
0002ADr 1               
0002ADr 1               ; ---------------------------------------------------------------
0002ADr 1               ; int __near__ w_boot (unsigned char *msg)
0002ADr 1               ; ---------------------------------------------------------------
0002ADr 1               
0002ADr 1               .segment	"CODE"
0002ADr 1               
0002ADr 1               .proc	_w_boot: near
0002ADr 1               
0002ADr 1               .segment	"CODE"
0002ADr 1               
0002ADr 1  20 rr rr     	jsr     pushax
0002B0r 1  20 rr rr     	jsr     _newline
0002B3r 1  A0 01        	ldy     #$01
0002B5r 1  B1 rr        	lda     (sp),y
0002B7r 1  12 rr        	ora     (sp)
0002B9r 1  F0 06        	beq     L0002
0002BBr 1  20 rr rr     	jsr     ldax0sp
0002BEr 1  20 rr rr     	jsr     _c_puts
0002C1r 1  20 rr rr     L0002:	jsr     _warm_boot
0002C4r 1  A2 00        	ldx     #$00
0002C6r 1  8A           	txa
0002C7r 1  4C rr rr     	jmp     incsp2
0002CAr 1               
0002CAr 1               .endproc
0002CAr 1               
0002CAr 1               ; ---------------------------------------------------------------
0002CAr 1               ; int __near__ er_boot (unsigned char *msg)
0002CAr 1               ; ---------------------------------------------------------------
0002CAr 1               
0002CAr 1               .segment	"CODE"
0002CAr 1               
0002CAr 1               .proc	_er_boot: near
0002CAr 1               
0002CAr 1               .segment	"CODE"
0002CAr 1               
0002CAr 1  20 rr rr     	jsr     pushax
0002CDr 1  A9 rr        	lda     #<(S000F)
0002CFr 1  A2 rr        	ldx     #>(S000F)
0002D1r 1  20 rr rr     	jsr     _c_puts
0002D4r 1  A0 01        	ldy     #$01
0002D6r 1  B1 rr        	lda     (sp),y
0002D8r 1  12 rr        	ora     (sp)
0002DAr 1  F0 06        	beq     L0002
0002DCr 1  20 rr rr     	jsr     ldax0sp
0002DFr 1  20 rr rr     	jsr     _c_puts
0002E2r 1  20 rr rr     L0002:	jsr     _warm_boot
0002E5r 1  A2 00        	ldx     #$00
0002E7r 1  8A           	txa
0002E8r 1  4C rr rr     	jmp     incsp2
0002EBr 1               
0002EBr 1               .endproc
0002EBr 1               
0002EBr 1               ; ---------------------------------------------------------------
0002EBr 1               ; void __near__ deleteLine (p) unsigned char *p;
0002EBr 1               ; ---------------------------------------------------------------
0002EBr 1               
0002EBr 1               .segment	"CODE"
0002EBr 1               
0002EBr 1               .proc	_deleteLine: near
0002EBr 1               
0002EBr 1               .segment	"CODE"
0002EBr 1               
0002EBr 1  20 rr rr     	jsr     pushax
0002EEr 1  20 rr rr     	jsr     decsp2
0002F1r 1  A0 03        	ldy     #$03
0002F3r 1  20 rr rr     	jsr     ldaxysp
0002F6r 1  20 rr rr     	jsr     incax2
0002F9r 1  20 rr rr     	jsr     _strlen
0002FCr 1  20 rr rr     	jsr     incax2
0002FFr 1  1A           	ina
000300r 1  D0 01        	bne     L0002
000302r 1  E8           	inx
000303r 1  20 rr rr     L0002:	jsr     stax0sp
000306r 1  A0 05        	ldy     #$05
000308r 1  20 rr rr     	jsr     pushwysp
00030Br 1  A0 03        	ldy     #$03
00030Dr 1  20 rr rr     	jsr     ldaxysp
000310r 1  18           	clc
000311r 1  A0 04        	ldy     #$04
000313r 1  71 rr        	adc     (sp),y
000315r 1  48           	pha
000316r 1  8A           	txa
000317r 1  C8           	iny
000318r 1  71 rr        	adc     (sp),y
00031Ar 1  AA           	tax
00031Br 1  68           	pla
00031Cr 1  20 rr rr     	jsr     pushax
00031Fr 1  AD rr rr     	lda     _var+76
000322r 1  38           	sec
000323r 1  A0 06        	ldy     #$06
000325r 1  F1 rr        	sbc     (sp),y
000327r 1  48           	pha
000328r 1  AD rr rr     	lda     _var+76+1
00032Br 1  C8           	iny
00032Cr 1  F1 rr        	sbc     (sp),y
00032Er 1  AA           	tax
00032Fr 1  68           	pla
000330r 1  38           	sec
000331r 1  A0 04        	ldy     #$04
000333r 1  F1 rr        	sbc     (sp),y
000335r 1  48           	pha
000336r 1  8A           	txa
000337r 1  C8           	iny
000338r 1  F1 rr        	sbc     (sp),y
00033Ar 1  AA           	tax
00033Br 1  68           	pla
00033Cr 1  1A           	ina
00033Dr 1  D0 01        	bne     L0003
00033Fr 1  E8           	inx
000340r 1  20 rr rr     L0003:	jsr     _memmove
000343r 1  20 rr rr     	jsr     ldax0sp
000346r 1  49 FF        	eor     #$FF
000348r 1  38           	sec
000349r 1  6D rr rr     	adc     _var+76
00034Cr 1  8D rr rr     	sta     _var+76
00034Fr 1  8A           	txa
000350r 1  49 FF        	eor     #$FF
000352r 1  6D rr rr     	adc     _var+76+1
000355r 1  8D rr rr     	sta     _var+76+1
000358r 1  4C rr rr     	jmp     incsp4
00035Br 1               
00035Br 1               .endproc
00035Br 1               
00035Br 1               ; ---------------------------------------------------------------
00035Br 1               ; void __near__ addLine (n, p, new) int n; unsigned char *p; unsigned char *new;
00035Br 1               ; ---------------------------------------------------------------
00035Br 1               
00035Br 1               .segment	"CODE"
00035Br 1               
00035Br 1               .proc	_addLine: near
00035Br 1               
00035Br 1               .segment	"CODE"
00035Br 1               
00035Br 1  20 rr rr     	jsr     pushax
00035Er 1  20 rr rr     	jsr     decsp2
000361r 1  A0 03        	ldy     #$03
000363r 1  20 rr rr     	jsr     ldaxysp
000366r 1  20 rr rr     	jsr     _strlen
000369r 1  20 rr rr     	jsr     incax2
00036Cr 1  1A           	ina
00036Dr 1  D0 01        	bne     L0002
00036Fr 1  E8           	inx
000370r 1  20 rr rr     L0002:	jsr     stax0sp
000373r 1  18           	clc
000374r 1  A0 04        	ldy     #$04
000376r 1  71 rr        	adc     (sp),y
000378r 1  48           	pha
000379r 1  8A           	txa
00037Ar 1  C8           	iny
00037Br 1  71 rr        	adc     (sp),y
00037Dr 1  AA           	tax
00037Er 1  68           	pla
00037Fr 1  20 rr rr     	jsr     pushax
000382r 1  A0 09        	ldy     #$09
000384r 1  20 rr rr     	jsr     pushwysp
000387r 1  AD rr rr     	lda     _var+76
00038Ar 1  38           	sec
00038Br 1  A0 08        	ldy     #$08
00038Dr 1  F1 rr        	sbc     (sp),y
00038Fr 1  48           	pha
000390r 1  AD rr rr     	lda     _var+76+1
000393r 1  C8           	iny
000394r 1  F1 rr        	sbc     (sp),y
000396r 1  AA           	tax
000397r 1  68           	pla
000398r 1  1A           	ina
000399r 1  D0 01        	bne     L0003
00039Br 1  E8           	inx
00039Cr 1  20 rr rr     L0003:	jsr     _memmove
00039Fr 1  A0 05        	ldy     #$05
0003A1r 1  20 rr rr     	jsr     ldaxysp
0003A4r 1  85 rr        	sta     ptr1
0003A6r 1  86 rr        	stx     ptr1+1
0003A8r 1  A0 07        	ldy     #$07
0003AAr 1  B1 rr        	lda     (sp),y
0003ACr 1  92 rr        	sta     (ptr1)
0003AEr 1  A0 05        	ldy     #$05
0003B0r 1  20 rr rr     	jsr     ldaxysp
0003B3r 1  1A           	ina
0003B4r 1  D0 01        	bne     L0005
0003B6r 1  E8           	inx
0003B7r 1  85 rr        L0005:	sta     ptr1
0003B9r 1  86 rr        	stx     ptr1+1
0003BBr 1  A0 06        	ldy     #$06
0003BDr 1  B1 rr        	lda     (sp),y
0003BFr 1  92 rr        	sta     (ptr1)
0003C1r 1  88           	dey
0003C2r 1  20 rr rr     	jsr     ldaxysp
0003C5r 1  20 rr rr     	jsr     incax2
0003C8r 1  20 rr rr     	jsr     pushax
0003CBr 1  A0 05        	ldy     #$05
0003CDr 1  20 rr rr     	jsr     ldaxysp
0003D0r 1  20 rr rr     	jsr     _strcpy
0003D3r 1  20 rr rr     	jsr     ldax0sp
0003D6r 1  18           	clc
0003D7r 1  6D rr rr     	adc     _var+76
0003DAr 1  8D rr rr     	sta     _var+76
0003DDr 1  8A           	txa
0003DEr 1  6D rr rr     	adc     _var+76+1
0003E1r 1  8D rr rr     	sta     _var+76+1
0003E4r 1  4C rr rr     	jmp     incsp8
0003E7r 1               
0003E7r 1               .endproc
0003E7r 1               
0003E7r 1               ; ---------------------------------------------------------------
0003E7r 1               ; int __near__ strlen (const unsigned char *s)
0003E7r 1               ; ---------------------------------------------------------------
0003E7r 1               
0003E7r 1               .segment	"CODE"
0003E7r 1               
0003E7r 1               .proc	_strlen: near
0003E7r 1               
0003E7r 1               .segment	"CODE"
0003E7r 1               
0003E7r 1  20 rr rr     	jsr     pushax
0003EAr 1  20 rr rr     	jsr     push0
0003EDr 1  80 07        	bra     L0004
0003EFr 1  A2 00        L0002:	ldx     #$00
0003F1r 1  A9 01        	lda     #$01
0003F3r 1  20 rr rr     	jsr     addeq0sp
0003F6r 1  A0 03        L0004:	ldy     #$03
0003F8r 1  20 rr rr     	jsr     ldaxysp
0003FBr 1  85 rr        	sta     ptr1
0003FDr 1  86 rr        	stx     ptr1+1
0003FFr 1  B2 rr        	lda     (ptr1)
000401r 1  08           	php
000402r 1  A0 02        	ldy     #$02
000404r 1  A2 00        	ldx     #$00
000406r 1  A9 01        	lda     #$01
000408r 1  20 rr rr     	jsr     addeqysp
00040Br 1  28           	plp
00040Cr 1  D0 E1        	bne     L0002
00040Er 1  20 rr rr     	jsr     ldax0sp
000411r 1  4C rr rr     	jmp     incsp4
000414r 1               
000414r 1               .endproc
000414r 1               
000414r 1               ; ---------------------------------------------------------------
000414r 1               ; void __near__ breakCheck (void)
000414r 1               ; ---------------------------------------------------------------
000414r 1               
000414r 1               .segment	"CODE"
000414r 1               
000414r 1               .proc	_breakCheck: near
000414r 1               
000414r 1               .segment	"CODE"
000414r 1               
000414r 1               ;	jsr     decsp2
000414r 1  20 rr rr     	jsr     _c_kbhit
000417r 1  AA           	tax
000418r 1  F0 17        	beq     L0005
00041Ar 1  20 rr rr     	jsr     _c_getch
00041Dr 1               ;	jsr     stax0sp
00041Dr 1               ;	cpx     #$00
00041Dr 1               ;	bne     L0003
00041Dr 1  C9 03        	cmp     #$03
00041Fr 1  D0 09        	bne     L0003
000421r 1  AD rr rr     	lda     _bk_msg
000424r 1  AE rr rr     	ldx     _bk_msg+1
000427r 1  20 rr rr     	jsr     _w_boot
00042Ar 1               L0003:
00042Ar 1               ;	ldy     #$01
00042Ar 1               ;	lda     (sp),y
00042Ar 1               ;	bne     L0005
00042Ar 1               ;	lda     (sp)
00042Ar 1  C9 13        	cmp     #$13
00042Cr 1  D0 03        	bne     L0005
00042Er 1  20 rr rr     	jsr     _c_getch
000431r 1               L0005:
000431r 1               ;	jmp     incsp2
000431r 1  60           	rts
000432r 1               
000432r 1               .endproc
000432r 1               
000432r 1               ; ---------------------------------------------------------------
000432r 1               ; int __near__ do_cmd (void)
000432r 1               ; ---------------------------------------------------------------
000432r 1               
000432r 1               .segment	"CODE"
000432r 1               
000432r 1               .proc	_do_cmd: near
000432r 1               
000432r 1               .segment	"CODE"
000432r 1               
000432r 1  A0 0D        	ldy     #$0D
000434r 1  20 rr rr     	jsr     subysp
000437r 1  20 rr rr     	jsr     _breakCheck
00043Ar 1  AD rr rr     	lda     _pc+1
00043Dr 1  85 rr        	sta     ptr1+1
00043Fr 1  AD rr rr     	lda     _pc
000442r 1  85 rr        	sta     ptr1
000444r 1  A2 00        	ldx     #$00
000446r 1  B2 rr        	lda     (ptr1)
000448r 1  A0 0B        	ldy     #$0B
00044Ar 1  20 rr rr     	jsr     staxysp
00044Dr 1  EE rr rr     	inc     _pc
000450r 1  D0 03        	bne     L0002
000452r 1  EE rr rr     	inc     _pc+1
000455r 1  AD rr rr     L0002:	lda     _pc+1
000458r 1  85 rr        	sta     ptr1+1
00045Ar 1  AD rr rr     	lda     _pc
00045Dr 1  85 rr        	sta     ptr1
00045Fr 1  B2 rr        	lda     (ptr1)
000461r 1  A0 09        	ldy     #$09
000463r 1  20 rr rr     	jsr     staxysp
000466r 1  A0 0C        	ldy     #$0C
000468r 1  20 rr rr     	jsr     ldaxysp
00046Br 1  E0 00        	cpx     #$00
00046Dr 1  F0 03 4C rr  	jne     L0004
000471r 1  rr           
000472r 1  C9 00        	cmp     #$00
000474r 1  F0 1A        	beq     L0005
000476r 1  C9 22        	cmp     #$22
000478r 1  F0 31        	beq     L0007
00047Ar 1  C9 2F        	cmp     #$2F
00047Cr 1  F0 33        	beq     L0008
00047Er 1  C9 3F        	cmp     #$3F
000480r 1  F0 75        	beq     L000D
000482r 1  C9 40        	cmp     #$40
000484r 1  F0 31        	beq     L0009
000486r 1  C9 5C        	cmp     #$5C
000488r 1  F0 78        	beq     L000E
00048Ar 1  C9 5D        	cmp     #$5D
00048Cr 1  F0 0C        	beq     L0006
00048Er 1  80 75        	bra     L0004
000490r 1  20 rr rr     L0005:	jsr     _topOfLine
000493r 1  A2 00        	ldx     #$00
000495r 1  A9 01        	lda     #$01
000497r 1  4C rr rr     	jmp     L0001
00049Ar 1  20 rr rr     L0006:	jsr     _pop
00049Dr 1  A0 01        	ldy     #$01
00049Fr 1  20 rr rr     	jsr     staxysp
0004A2r 1  8D rr rr     	sta     _pc
0004A5r 1  8E rr rr     	stx     _pc+1
0004A8r 1  4C rr rr     	jmp     L002C
0004ABr 1  20 rr rr     L0007:	jsr     _do_pr
0004AEr 1  4C rr rr     	jmp     L002C
0004B1r 1  20 rr rr     L0008:	jsr     _newline
0004B4r 1  4C rr rr     	jmp     L002C
0004B7r 1  A0 0A        L0009:	ldy     #$0A
0004B9r 1  B1 rr        	lda     (sp),y
0004BBr 1  D0 34        	bne     L000A
0004BDr 1  88           	dey
0004BEr 1  B1 rr        	lda     (sp),y
0004C0r 1  C9 3D        	cmp     #$3D
0004C2r 1  D0 2D        	bne     L000A
0004C4r 1  AD rr rr     	lda     _pc
0004C7r 1  AE rr rr     	ldx     _pc+1
0004CAr 1  1A           	ina
0004CBr 1  D0 01        	bne     L000C
0004CDr 1  E8           	inx
0004CEr 1  85 rr        L000C:	sta     ptr1
0004D0r 1  86 rr        	stx     ptr1+1
0004D2r 1  A2 00        	ldx     #$00
0004D4r 1  B2 rr        	lda     (ptr1)
0004D6r 1  A0 07        	ldy     #$07
0004D8r 1  20 rr rr     	jsr     staxysp
0004DBr 1  20 rr rr     	jsr     _operand
0004DEr 1  A0 05        	ldy     #$05
0004E0r 1  20 rr rr     	jsr     staxysp
0004E3r 1  20 rr rr     	jsr     pushax
0004E6r 1  A0 0A        	ldy     #$0A
0004E8r 1  20 rr rr     	jsr     ldaxysp
0004EBr 1  20 rr rr     	jsr     _do_until
0004EEr 1  4C rr rr     	jmp     L002C
0004F1r 1  20 rr rr     L000A:	jsr     _do_do
0004F4r 1  4C rr rr     	jmp     L002C
0004F7r 1  A0 0A        L000D:	ldy     #$0A
0004F9r 1  20 rr rr     	jsr     ldaxysp
0004FCr 1  20 rr rr     	jsr     _do_prNum
0004FFr 1  4C rr rr     	jmp     L002C
000502r 1  20 rr rr     L000E:	jsr     _mach_fin
000505r 1  A0 0A        L0004:	ldy     #$0A
000507r 1  B1 rr        	lda     (sp),y
000509r 1  F0 03 4C rr  	jne     L0012
00050Dr 1  rr           
00050Er 1  88           	dey
00050Fr 1  B1 rr        	lda     (sp),y
000511r 1  C9 3D        	cmp     #$3D
000513r 1  F0 03 4C rr  	jne     L0012
000517r 1  rr           
000518r 1  A0 0C        	ldy     #$0C
00051Ar 1  20 rr rr     	jsr     ldaxysp
00051Dr 1  E0 00        	cpx     #$00
00051Fr 1  F0 03 4C rr  	jne     L0012
000523r 1  rr           
000524r 1  C9 21        	cmp     #$21
000526r 1  F0 28        	beq     L0014
000528r 1  C9 23        	cmp     #$23
00052Ar 1  F0 16        	beq     L0013
00052Cr 1  C9 24        	cmp     #$24
00052Er 1  F0 2E        	beq     L0015
000530r 1  C9 26        	cmp     #$26
000532r 1  F0 62        	beq     L0019
000534r 1  C9 27        	cmp     #$27
000536r 1  F0 50        	beq     L0018
000538r 1  C9 2E        	cmp     #$2E
00053Ar 1  F0 30        	beq     L0016
00053Cr 1  C9 3B        	cmp     #$3B
00053Er 1  F0 3A        	beq     L0017
000540r 1  80 70        	bra     L0012
000542r 1  20 rr rr     L0013:	jsr     _operand
000545r 1  A0 05        	ldy     #$05
000547r 1  20 rr rr     	jsr     staxysp
00054Ar 1  20 rr rr     	jsr     _do_goto
00054Dr 1  4C rr rr     	jmp     L002C
000550r 1  20 rr rr     L0014:	jsr     _operand
000553r 1  A0 05        	ldy     #$05
000555r 1  20 rr rr     	jsr     staxysp
000558r 1  20 rr rr     	jsr     _do_gosub
00055Br 1  4C rr rr     	jmp     L002C
00055Er 1  20 rr rr     L0015:	jsr     _operand
000561r 1  A0 05        	ldy     #$05
000563r 1  20 rr rr     	jsr     staxysp
000566r 1  20 rr rr     	jsr     _c_putch
000569r 1  4C rr rr     	jmp     L002C
00056Cr 1  20 rr rr     L0016:	jsr     _operand
00056Fr 1  A0 05        	ldy     #$05
000571r 1  20 rr rr     	jsr     staxysp
000574r 1  20 rr rr     	jsr     _do_prSpc
000577r 1  4C rr rr     	jmp     L002C
00057Ar 1  20 rr rr     L0017:	jsr     _operand
00057Dr 1  A0 05        	ldy     #$05
00057Fr 1  20 rr rr     	jsr     staxysp
000582r 1  20 rr rr     	jsr     _do_if
000585r 1  4C rr rr     	jmp     L002C
000588r 1  20 rr rr     L0018:	jsr     _operand
00058Br 1  A0 05        	ldy     #$05
00058Dr 1  20 rr rr     	jsr     staxysp
000590r 1  20 rr rr     	jsr     _srand
000593r 1  4C rr rr     	jmp     L002C
000596r 1  20 rr rr     L0019:	jsr     _operand
000599r 1  A0 05        	ldy     #$05
00059Br 1  20 rr rr     	jsr     staxysp
00059Er 1  E0 00        	cpx     #$00
0005A0r 1  F0 03 4C rr  	jne     L002C
0005A4r 1  rr           
0005A5r 1  C9 00        	cmp     #$00
0005A7r 1  F0 03 4C rr  	jne     L0027
0005ABr 1  rr           
0005ACr 1  20 rr rr     	jsr     _newText
0005AFr 1  4C rr rr     	jmp     L002C
0005B2r 1  20 rr rr     L0012:	jsr     _skipAlpha
0005B5r 1  92 rr        	sta     (sp)
0005B7r 1  C9 3A        	cmp     #$3A
0005B9r 1  F0 09        	beq     L0028
0005BBr 1  B2 rr        	lda     (sp)
0005BDr 1  C9 28        	cmp     #$28
0005BFr 1  F0 03 4C rr  	jne     L001C
0005C3r 1  rr           
0005C4r 1  EE rr rr     L0028:	inc     _pc
0005C7r 1  D0 03        	bne     L001F
0005C9r 1  EE rr rr     	inc     _pc+1
0005CCr 1  AD rr rr     L001F:	lda     _pc+1
0005CFr 1  85 rr        	sta     ptr1+1
0005D1r 1  AD rr rr     	lda     _pc
0005D4r 1  85 rr        	sta     ptr1
0005D6r 1  B2 rr        	lda     (ptr1)
0005D8r 1  EE rr rr     	inc     _pc
0005DBr 1  D0 03        	bne     L0020
0005DDr 1  EE rr rr     	inc     _pc+1
0005E0r 1  20 rr rr     L0020:	jsr     _expr
0005E3r 1  A0 03        	ldy     #$03
0005E5r 1  20 rr rr     	jsr     staxysp
0005E8r 1  AD rr rr     	lda     _pc
0005EBr 1  AE rr rr     	ldx     _pc+1
0005EEr 1  20 rr rr     	jsr     decax1
0005F1r 1  85 rr        	sta     ptr1
0005F3r 1  86 rr        	stx     ptr1+1
0005F5r 1  B2 rr        	lda     (ptr1)
0005F7r 1  C9 29        	cmp     #$29
0005F9r 1  F0 07        	beq     L0021
0005FBr 1  A9 rr        	lda     #<(S0005)
0005FDr 1  A2 rr        	ldx     #>(S0005)
0005FFr 1  20 rr rr     	jsr     _er_boot
000602r 1  20 rr rr     L0021:	jsr     _operand
000605r 1  A0 05        	ldy     #$05
000607r 1  20 rr rr     	jsr     staxysp
00060Ar 1  A2 00        	ldx     #$00
00060Cr 1  B2 rr        	lda     (sp)
00060Er 1  C9 3A        	cmp     #$3A
000610r 1  D0 32        	bne     L002A
000612r 1  A0 0C        	ldy     #$0C
000614r 1  20 rr rr     	jsr     ldaxysp
000617r 1  20 rr rr     	jsr     aslax1
00061Ar 1  18           	clc
00061Br 1  69 rr        	adc     #<(_var)
00061Dr 1  A8           	tay
00061Er 1  8A           	txa
00061Fr 1  69 rr        	adc     #>(_var)
000621r 1  AA           	tax
000622r 1  98           	tya
000623r 1  20 rr rr     	jsr     ldaxi
000626r 1  85 rr        	sta     ptr1
000628r 1  86 rr        	stx     ptr1+1
00062Ar 1  A0 04        	ldy     #$04
00062Cr 1  20 rr rr     	jsr     ldaxysp
00062Fr 1  18           	clc
000630r 1  65 rr        	adc     ptr1
000632r 1  85 rr        	sta     ptr1
000634r 1  8A           	txa
000635r 1  65 rr        	adc     ptr1+1
000637r 1  85 rr        	sta     ptr1+1
000639r 1  A2 00        	ldx     #$00
00063Br 1  A0 05        	ldy     #$05
00063Dr 1  B1 rr        	lda     (sp),y
00063Fr 1  92 rr        	sta     (ptr1)
000641r 1  4C rr rr     	jmp     L0027
000644r 1  B2 rr        L002A:	lda     (sp)
000646r 1  C9 28        	cmp     #$28
000648r 1  F0 03 4C rr  	jne     L0027
00064Cr 1  rr           
00064Dr 1  A0 0C        	ldy     #$0C
00064Fr 1  20 rr rr     	jsr     ldaxysp
000652r 1  20 rr rr     	jsr     aslax1
000655r 1  18           	clc
000656r 1  69 rr        	adc     #<(_var)
000658r 1  A8           	tay
000659r 1  8A           	txa
00065Ar 1  69 rr        	adc     #>(_var)
00065Cr 1  AA           	tax
00065Dr 1  98           	tya
00065Er 1  20 rr rr     	jsr     ldaxi
000661r 1  85 rr        	sta     ptr1
000663r 1  86 rr        	stx     ptr1+1
000665r 1  A0 04        	ldy     #$04
000667r 1  20 rr rr     	jsr     ldaxysp
00066Ar 1  20 rr rr     	jsr     aslax1
00066Dr 1  18           	clc
00066Er 1  65 rr        	adc     ptr1
000670r 1  85 rr        	sta     ptr1
000672r 1  8A           	txa
000673r 1  65 rr        	adc     ptr1+1
000675r 1  85 rr        	sta     ptr1+1
000677r 1  A0 06        	ldy     #$06
000679r 1  20 rr rr     	jsr     ldaxysp
00067Cr 1  92 rr        	sta     (ptr1)
00067Er 1  A0 01        	ldy     #$01
000680r 1  8A           	txa
000681r 1  91 rr        	sta     (ptr1),y
000683r 1  80 71        	bra     L002C
000685r 1  20 rr rr     L001C:	jsr     _operand
000688r 1  A0 05        	ldy     #$05
00068Ar 1  20 rr rr     	jsr     staxysp
00068Dr 1  A0 0C        	ldy     #$0C
00068Fr 1  20 rr rr     	jsr     ldaxysp
000692r 1  20 rr rr     	jsr     aslax1
000695r 1  18           	clc
000696r 1  69 rr        	adc     #<(_var)
000698r 1  85 rr        	sta     ptr1
00069Ar 1  8A           	txa
00069Br 1  69 rr        	adc     #>(_var)
00069Dr 1  85 rr        	sta     ptr1+1
00069Fr 1  A0 06        	ldy     #$06
0006A1r 1  20 rr rr     	jsr     ldaxysp
0006A4r 1  92 rr        	sta     (ptr1)
0006A6r 1  A0 01        	ldy     #$01
0006A8r 1  8A           	txa
0006A9r 1  91 rr        	sta     (ptr1),y
0006ABr 1  AD rr rr     	lda     _pc
0006AEr 1  AE rr rr     	ldx     _pc+1
0006B1r 1  20 rr rr     	jsr     decax1
0006B4r 1  85 rr        	sta     ptr1
0006B6r 1  86 rr        	stx     ptr1+1
0006B8r 1  A2 00        	ldx     #$00
0006BAr 1  B2 rr        	lda     (ptr1)
0006BCr 1  C9 2C        	cmp     #$2C
0006BEr 1  D0 38        	bne     L0027
0006C0r 1  AD rr rr     	lda     _pc+1
0006C3r 1  85 rr        	sta     ptr1+1
0006C5r 1  AD rr rr     	lda     _pc
0006C8r 1  85 rr        	sta     ptr1
0006CAr 1  B2 rr        	lda     (ptr1)
0006CCr 1  A0 0B        	ldy     #$0B
0006CEr 1  20 rr rr     	jsr     staxysp
0006D1r 1  EE rr rr     	inc     _pc
0006D4r 1  D0 03        	bne     L0026
0006D6r 1  EE rr rr     	inc     _pc+1
0006D9r 1  A0 0B        L0026:	ldy     #$0B
0006DBr 1  B1 rr        	lda     (sp),y
0006DDr 1  20 rr rr     	jsr     _expr
0006E0r 1  A0 05        	ldy     #$05
0006E2r 1  20 rr rr     	jsr     staxysp
0006E5r 1  AD rr rr     	lda     _pc
0006E8r 1  AE rr rr     	ldx     _pc+1
0006EBr 1  20 rr rr     	jsr     _push
0006EEr 1  A0 06        	ldy     #$06
0006F0r 1  20 rr rr     	jsr     ldaxysp
0006F3r 1  20 rr rr     	jsr     _push
0006F6r 1  A2 00        L002C:	ldx     #$00
0006F8r 1  8A           L0027:	txa
0006F9r 1  A0 0D        L0001:	ldy     #$0D
0006FBr 1  4C rr rr     	jmp     addysp
0006FEr 1               
0006FEr 1               .endproc
0006FEr 1               
0006FEr 1               ; ---------------------------------------------------------------
0006FEr 1               ; int __near__ pop (void)
0006FEr 1               ; ---------------------------------------------------------------
0006FEr 1               
0006FEr 1               .segment	"CODE"
0006FEr 1               
0006FEr 1               .proc	_pop: near
0006FEr 1               
0006FEr 1               .segment	"CODE"
0006FEr 1               
0006FEr 1  AE rr rr     	ldx     _sp+1
000701r 1  E0 80        	cpx     #$80
000703r 1  90 07        	bcc     L0002
000705r 1  A9 rr        	lda     #<(S0007)
000707r 1  A2 rr        	ldx     #>(S0007)
000709r 1  20 rr rr     	jsr     _er_boot
00070Cr 1  AD rr rr     L0002:	lda     _sp
00070Fr 1  AE rr rr     	ldx     _sp+1
000712r 1  20 rr rr     	jsr     aslax1
000715r 1  18           	clc
000716r 1  69 rr        	adc     #<(_stack)
000718r 1  A8           	tay
000719r 1  8A           	txa
00071Ar 1  69 rr        	adc     #>(_stack)
00071Cr 1  AA           	tax
00071Dr 1  98           	tya
00071Er 1  20 rr rr     	jsr     ldaxi
000721r 1  85 rr        	sta     regsave
000723r 1  86 rr        	stx     regsave+1
000725r 1  AD rr rr     	lda     _sp
000728r 1  D0 03        	bne     L0003
00072Ar 1  CE rr rr     	dec     _sp+1
00072Dr 1  CE rr rr     L0003:	dec     _sp
000730r 1  A5 rr        	lda     regsave
000732r 1  A6 rr        	ldx     regsave+1
000734r 1  60           	rts
000735r 1               
000735r 1               .endproc
000735r 1               
000735r 1               ; ---------------------------------------------------------------
000735r 1               ; void __near__ do_pr (void)
000735r 1               ; ---------------------------------------------------------------
000735r 1               
000735r 1               .segment	"CODE"
000735r 1               
000735r 1               .proc	_do_pr: near
000735r 1               
000735r 1               .segment	"CODE"
000735r 1               
000735r 1  20 rr rr     	jsr     decsp2
000738r 1  A9 22        L0005:	lda     #$22
00073Ar 1  20 rr rr     	jsr     pusha0
00073Dr 1  AD rr rr     	lda     _pc+1
000740r 1  85 rr        	sta     ptr1+1
000742r 1  AD rr rr     	lda     _pc
000745r 1  85 rr        	sta     ptr1
000747r 1  B2 rr        	lda     (ptr1)
000749r 1  A0 02        	ldy     #$02
00074Br 1  20 rr rr     	jsr     staxysp
00074Er 1  20 rr rr     	jsr     toseqa0
000751r 1  08           	php
000752r 1  EE rr rr     	inc     _pc
000755r 1  D0 03        	bne     L0007
000757r 1  EE rr rr     	inc     _pc+1
00075Ar 1  28           L0007:	plp
00075Br 1  D0 1E        	bne     L0003
00075Dr 1  B2 rr        	lda     (sp)
00075Fr 1  A0 01        	ldy     #$01
000761r 1  11 rr        	ora     (sp),y
000763r 1  D0 0E        	bne     L000B
000765r 1  AD rr rr     	lda     _pc
000768r 1  D0 03        	bne     L000A
00076Ar 1  CE rr rr     	dec     _pc+1
00076Dr 1  CE rr rr     L000A:	dec     _pc
000770r 1  4C rr rr     	jmp     incsp2
000773r 1  20 rr rr     L000B:	jsr     ldax0sp
000776r 1  20 rr rr     	jsr     _c_putch
000779r 1  80 BD        	bra     L0005
00077Br 1  4C rr rr     L0003:	jmp     incsp2
00077Er 1               
00077Er 1               .endproc
00077Er 1               
00077Er 1               ; ---------------------------------------------------------------
00077Er 1               ; int __near__ operand (void)
00077Er 1               ; ---------------------------------------------------------------
00077Er 1               
00077Er 1               .segment	"CODE"
00077Er 1               
00077Er 1               .proc	_operand: near
00077Er 1               
00077Er 1               .segment	"CODE"
00077Er 1               
00077Er 1  20 rr rr     	jsr     decsp4
000781r 1  AD rr rr     L0005:	lda     _pc+1
000784r 1  85 rr        	sta     ptr1+1
000786r 1  AD rr rr     	lda     _pc
000789r 1  85 rr        	sta     ptr1
00078Br 1  A2 00        	ldx     #$00
00078Dr 1  B2 rr        	lda     (ptr1)
00078Fr 1  A0 02        	ldy     #$02
000791r 1  20 rr rr     	jsr     staxysp
000794r 1  EE rr rr     	inc     _pc
000797r 1  D0 03        	bne     L0006
000799r 1  EE rr rr     	inc     _pc+1
00079Cr 1  A0 03        L0006:	ldy     #$03
00079Er 1  B1 rr        	lda     (sp),y
0007A0r 1  D0 07        	bne     L000B
0007A2r 1  88           	dey
0007A3r 1  B1 rr        	lda     (sp),y
0007A5r 1  C9 3D        	cmp     #$3D
0007A7r 1  F0 11        	beq     L0003
0007A9r 1  A0 02        L000B:	ldy     #$02
0007ABr 1  B1 rr        	lda     (sp),y
0007ADr 1  29 DF        	and     #$DF
0007AFr 1  D0 D0        	bne     L0005
0007B1r 1  A9 rr        	lda     #<(S0009)
0007B3r 1  A2 rr        	ldx     #>(S0009)
0007B5r 1  20 rr rr     	jsr     _errMsg
0007B8r 1  80 C7        	bra     L0005
0007BAr 1  AD rr rr     L0003:	lda     _pc+1
0007BDr 1  85 rr        	sta     ptr1+1
0007BFr 1  AD rr rr     	lda     _pc
0007C2r 1  85 rr        	sta     ptr1
0007C4r 1  B2 rr        	lda     (ptr1)
0007C6r 1  A0 02        	ldy     #$02
0007C8r 1  20 rr rr     	jsr     staxysp
0007CBr 1  EE rr rr     	inc     _pc
0007CEr 1  D0 03        	bne     L000A
0007D0r 1  EE rr rr     	inc     _pc+1
0007D3r 1  A0 02        L000A:	ldy     #$02
0007D5r 1  B1 rr        	lda     (sp),y
0007D7r 1  20 rr rr     	jsr     _expr
0007DAr 1  20 rr rr     	jsr     stax0sp
0007DDr 1  4C rr rr     	jmp     incsp4
0007E0r 1               
0007E0r 1               .endproc
0007E0r 1               
0007E0r 1               ; ---------------------------------------------------------------
0007E0r 1               ; void __near__ do_until (int e, int val)
0007E0r 1               ; ---------------------------------------------------------------
0007E0r 1               
0007E0r 1               .segment	"CODE"
0007E0r 1               
0007E0r 1               .proc	_do_until: near
0007E0r 1               
0007E0r 1               .segment	"CODE"
0007E0r 1               
0007E0r 1  20 rr rr     	jsr     pushax
0007E3r 1  20 rr rr     	jsr     ldax0sp
0007E6r 1  20 rr rr     	jsr     aslax1
0007E9r 1  18           	clc
0007EAr 1  69 rr        	adc     #<(_var)
0007ECr 1  85 rr        	sta     ptr1
0007EEr 1  8A           	txa
0007EFr 1  69 rr        	adc     #>(_var)
0007F1r 1  85 rr        	sta     ptr1+1
0007F3r 1  A0 03        	ldy     #$03
0007F5r 1  20 rr rr     	jsr     ldaxysp
0007F8r 1  92 rr        	sta     (ptr1)
0007FAr 1  A0 01        	ldy     #$01
0007FCr 1  8A           	txa
0007FDr 1  91 rr        	sta     (ptr1),y
0007FFr 1  A0 05        	ldy     #$05
000801r 1  20 rr rr     	jsr     pushwysp
000804r 1  AD rr rr     	lda     _sp
000807r 1  AE rr rr     	ldx     _sp+1
00080Ar 1  20 rr rr     	jsr     aslax1
00080Dr 1  18           	clc
00080Er 1  69 rr        	adc     #<(_stack)
000810r 1  A8           	tay
000811r 1  8A           	txa
000812r 1  69 rr        	adc     #>(_stack)
000814r 1  AA           	tax
000815r 1  98           	tya
000816r 1  20 rr rr     	jsr     ldaxi
000819r 1  20 rr rr     	jsr     tosicmp
00081Cr 1  30 13        	bmi     L0002
00081Er 1  F0 11        	beq     L0002
000820r 1  AD rr rr     	lda     _sp
000823r 1  38           	sec
000824r 1  E9 02        	sbc     #$02
000826r 1  8D rr rr     	sta     _sp
000829r 1  B0 24        	bcs     L0001
00082Br 1  CE rr rr     	dec     _sp+1
00082Er 1  4C rr rr     	jmp     incsp4
000831r 1  AD rr rr     L0002:	lda     _sp
000834r 1  AE rr rr     	ldx     _sp+1
000837r 1  20 rr rr     	jsr     decax1
00083Ar 1  20 rr rr     	jsr     aslax1
00083Dr 1  18           	clc
00083Er 1  69 rr        	adc     #<(_stack)
000840r 1  A8           	tay
000841r 1  8A           	txa
000842r 1  69 rr        	adc     #>(_stack)
000844r 1  AA           	tax
000845r 1  98           	tya
000846r 1  20 rr rr     	jsr     ldaxi
000849r 1  8D rr rr     	sta     _pc
00084Cr 1  8E rr rr     	stx     _pc+1
00084Fr 1  4C rr rr     L0001:	jmp     incsp4
000852r 1               
000852r 1               .endproc
000852r 1               
000852r 1               ; ---------------------------------------------------------------
000852r 1               ; void __near__ do_do (void)
000852r 1               ; ---------------------------------------------------------------
000852r 1               
000852r 1               .segment	"CODE"
000852r 1               
000852r 1               .proc	_do_do: near
000852r 1               
000852r 1               .segment	"CODE"
000852r 1               
000852r 1  AD rr rr     	lda     _pc
000855r 1  AE rr rr     	ldx     _pc+1
000858r 1  20 rr rr     	jsr     _push
00085Br 1  A2 00        	ldx     #$00
00085Dr 1  8A           	txa
00085Er 1  4C rr rr     	jmp     _push
000861r 1               
000861r 1               .endproc
000861r 1               
000861r 1               ; ---------------------------------------------------------------
000861r 1               ; void __near__ do_prNum (int c1)
000861r 1               ; ---------------------------------------------------------------
000861r 1               
000861r 1               .segment	"CODE"
000861r 1               
000861r 1               .proc	_do_prNum: near
000861r 1               
000861r 1               .segment	"CODE"
000861r 1               
000861r 1  20 rr rr     	jsr     pushax
000864r 1  20 rr rr     	jsr     decsp4
000867r 1  A0 05        	ldy     #$05
000869r 1  B1 rr        	lda     (sp),y
00086Br 1  D0 35        	bne     L0002
00086Dr 1  88           	dey
00086Er 1  B1 rr        	lda     (sp),y
000870r 1  C9 28        	cmp     #$28
000872r 1  D0 2E        	bne     L0002
000874r 1  EE rr rr     	inc     _pc
000877r 1  D0 03        	bne     L000D
000879r 1  EE rr rr     	inc     _pc+1
00087Cr 1  B1 rr        L000D:	lda     (sp),y
00087Er 1  20 rr rr     	jsr     _term
000881r 1  20 rr rr     	jsr     stax0sp
000884r 1  20 rr rr     	jsr     _operand
000887r 1  A0 02        	ldy     #$02
000889r 1  20 rr rr     	jsr     staxysp
00088Cr 1  A9 rr        	lda     #<(_lky_buf)
00088Er 1  A2 rr        	ldx     #>(_lky_buf)
000890r 1  20 rr rr     	jsr     pushax
000893r 1  A0 07        	ldy     #$07
000895r 1  20 rr rr     	jsr     pushwysp
000898r 1  A0 05        	ldy     #$05
00089Ar 1  20 rr rr     	jsr     ldaxysp
00089Dr 1  20 rr rr     	jsr     _mk_dStr
0008A0r 1  80 63        	bra     L0006
0008A2r 1  20 rr rr     L0002:	jsr     _operand
0008A5r 1  A0 02        	ldy     #$02
0008A7r 1  20 rr rr     	jsr     staxysp
0008AAr 1  A0 05        	ldy     #$05
0008ACr 1  20 rr rr     	jsr     ldaxysp
0008AFr 1  E0 00        	cpx     #$00
0008B1r 1  D0 4B        	bne     L000A
0008B3r 1  C9 24        	cmp     #$24
0008B5r 1  F0 1D        	beq     L0008
0008B7r 1  C9 3D        	cmp     #$3D
0008B9r 1  F0 2E        	beq     L0009
0008BBr 1  C9 3F        	cmp     #$3F
0008BDr 1  D0 3F        	bne     L000A
0008BFr 1  A9 rr        	lda     #<(_lky_buf)
0008C1r 1  A2 rr        	ldx     #>(_lky_buf)
0008C3r 1  20 rr rr     	jsr     pushax
0008C6r 1  A0 07        	ldy     #$07
0008C8r 1  20 rr rr     	jsr     pushwysp
0008CBr 1  A2 00        	ldx     #$00
0008CDr 1  A9 04        	lda     #$04
0008CFr 1  20 rr rr     	jsr     _g_hexStr
0008D2r 1  80 31        	bra     L0006
0008D4r 1  A9 rr        L0008:	lda     #<(_lky_buf)
0008D6r 1  A2 rr        	ldx     #>(_lky_buf)
0008D8r 1  20 rr rr     	jsr     pushax
0008DBr 1  A0 07        	ldy     #$07
0008DDr 1  20 rr rr     	jsr     pushwysp
0008E0r 1  A2 00        	ldx     #$00
0008E2r 1  A9 02        	lda     #$02
0008E4r 1  20 rr rr     	jsr     _g_hexStr
0008E7r 1  80 1C        	bra     L0006
0008E9r 1  A9 rr        L0009:	lda     #<(_lky_buf)
0008EBr 1  A2 rr        	ldx     #>(_lky_buf)
0008EDr 1  20 rr rr     	jsr     pushax
0008F0r 1  A0 07        	ldy     #$07
0008F2r 1  20 rr rr     	jsr     pushwysp
0008F5r 1  A2 00        	ldx     #$00
0008F7r 1  A9 01        	lda     #$01
0008F9r 1  20 rr rr     	jsr     _mk_dStr
0008FCr 1  80 07        	bra     L0006
0008FEr 1  A9 rr        L000A:	lda     #<(S0006)
000900r 1  A2 rr        	ldx     #>(S0006)
000902r 1  20 rr rr     	jsr     _er_boot
000905r 1  A9 rr        L0006:	lda     #<(_lky_buf)
000907r 1  A2 rr        	ldx     #>(_lky_buf)
000909r 1  20 rr rr     	jsr     _c_puts
00090Cr 1  4C rr rr     	jmp     incsp6
00090Fr 1               
00090Fr 1               .endproc
00090Fr 1               
00090Fr 1               ; ---------------------------------------------------------------
00090Fr 1               ; void __near__ do_goto (int n)
00090Fr 1               ; ---------------------------------------------------------------
00090Fr 1               
00090Fr 1               .segment	"CODE"
00090Fr 1               
00090Fr 1               .proc	_do_goto: near
00090Fr 1               
00090Fr 1               .segment	"CODE"
00090Fr 1               
00090Fr 1  20 rr rr     	jsr     pushax
000912r 1  20 rr rr     	jsr     decsp4
000915r 1  A0 05        	ldy     #$05
000917r 1  B1 rr        	lda     (sp),y
000919r 1  C9 FF        	cmp     #$FF
00091Br 1  D0 0D        	bne     L0004
00091Dr 1  88           	dey
00091Er 1  B1 rr        	lda     (sp),y
000920r 1  C9 FF        	cmp     #$FF
000922r 1  D0 06        	bne     L0004
000924r 1  A2 00        	ldx     #$00
000926r 1  8A           	txa
000927r 1  20 rr rr     	jsr     _w_boot
00092Ar 1  A0 07        L0004:	ldy     #$07
00092Cr 1  20 rr rr     	jsr     pushwysp
00092Fr 1  A9 04        	lda     #$04
000931r 1  20 rr rr     	jsr     leaa0sp
000934r 1  20 rr rr     	jsr     _searchLine
000937r 1  20 rr rr     	jsr     stax0sp
00093Ar 1  8D rr rr     	sta     _pc
00093Dr 1  8E rr rr     	stx     _pc+1
000940r 1  20 rr rr     	jsr     _topOfLine
000943r 1  4C rr rr     	jmp     incsp6
000946r 1               
000946r 1               .endproc
000946r 1               
000946r 1               ; ---------------------------------------------------------------
000946r 1               ; void __near__ do_gosub (int n)
000946r 1               ; ---------------------------------------------------------------
000946r 1               
000946r 1               .segment	"CODE"
000946r 1               
000946r 1               .proc	_do_gosub: near
000946r 1               
000946r 1               .segment	"CODE"
000946r 1               
000946r 1  20 rr rr     	jsr     pushax
000949r 1  20 rr rr     	jsr     decsp4
00094Cr 1  A0 07        	ldy     #$07
00094Er 1  20 rr rr     	jsr     pushwysp
000951r 1  A9 04        	lda     #$04
000953r 1  20 rr rr     	jsr     leaa0sp
000956r 1  20 rr rr     	jsr     _searchLine
000959r 1  20 rr rr     	jsr     stax0sp
00095Cr 1  AD rr rr     	lda     _pc
00095Fr 1  AE rr rr     	ldx     _pc+1
000962r 1  20 rr rr     	jsr     _push
000965r 1  20 rr rr     	jsr     ldax0sp
000968r 1  8D rr rr     	sta     _pc
00096Br 1  8E rr rr     	stx     _pc+1
00096Er 1  20 rr rr     	jsr     _topOfLine
000971r 1  4C rr rr     	jmp     incsp6
000974r 1               
000974r 1               .endproc
000974r 1               
000974r 1               ; ---------------------------------------------------------------
000974r 1               ; void __near__ do_prSpc (int e)
000974r 1               ; ---------------------------------------------------------------
000974r 1               
000974r 1               .segment	"CODE"
000974r 1               
000974r 1               .proc	_do_prSpc: near
000974r 1               
000974r 1               .segment	"CODE"
000974r 1               
000974r 1  20 rr rr     	jsr     pushax
000977r 1  20 rr rr     	jsr     decsp2
00097Ar 1  A2 00        	ldx     #$00
00097Cr 1  8A           	txa
00097Dr 1  20 rr rr     	jsr     stax0sp
000980r 1  20 rr rr     L0002:	jsr     ldax0sp
000983r 1  A0 02        	ldy     #$02
000985r 1  D1 rr        	cmp     (sp),y
000987r 1  8A           	txa
000988r 1  C8           	iny
000989r 1  F1 rr        	sbc     (sp),y
00098Br 1  50 02        	bvc     L0006
00098Dr 1  49 80        	eor     #$80
00098Fr 1  10 10        L0006:	bpl     L0003
000991r 1  A2 00        	ldx     #$00
000993r 1  A9 20        	lda     #$20
000995r 1  20 rr rr     	jsr     _c_putch
000998r 1  A2 00        	ldx     #$00
00099Ar 1  A9 01        	lda     #$01
00099Cr 1  20 rr rr     	jsr     addeq0sp
00099Fr 1  80 DF        	bra     L0002
0009A1r 1  4C rr rr     L0003:	jmp     incsp4
0009A4r 1               
0009A4r 1               .endproc
0009A4r 1               
0009A4r 1               ; ---------------------------------------------------------------
0009A4r 1               ; void __near__ do_if (int e)
0009A4r 1               ; ---------------------------------------------------------------
0009A4r 1               
0009A4r 1               .segment	"CODE"
0009A4r 1               
0009A4r 1               .proc	_do_if: near
0009A4r 1               
0009A4r 1               .segment	"CODE"
0009A4r 1               
0009A4r 1  20 rr rr     	jsr     pushax
0009A7r 1  B2 rr        	lda     (sp)
0009A9r 1  A0 01        	ldy     #$01
0009ABr 1  11 rr        	ora     (sp),y
0009ADr 1  D0 12        	bne     L0002
0009AFr 1  AD rr rr     	lda     _pc
0009B2r 1  AE rr rr     	ldx     _pc+1
0009B5r 1  20 rr rr     	jsr     _skipLine
0009B8r 1  8D rr rr     	sta     _pc
0009BBr 1  8E rr rr     	stx     _pc+1
0009BEr 1  20 rr rr     	jsr     _topOfLine
0009C1r 1  4C rr rr     L0002:	jmp     incsp2
0009C4r 1               
0009C4r 1               .endproc
0009C4r 1               
0009C4r 1               ; ---------------------------------------------------------------
0009C4r 1               ; void __near__ newText (void)
0009C4r 1               ; ---------------------------------------------------------------
0009C4r 1               
0009C4r 1               .segment	"CODE"
0009C4r 1               
0009C4r 1               .proc	_newText: near
0009C4r 1               
0009C4r 1               .segment	"CODE"
0009C4r 1               
0009C4r 1  AD rr rr     	lda     _var+76+1
0009C7r 1  85 rr        	sta     ptr1+1
0009C9r 1  AD rr rr     	lda     _var+76
0009CCr 1  85 rr        	sta     ptr1
0009CEr 1  B2 rr        	lda     (ptr1)
0009D0r 1  C9 FF        	cmp     #$FF
0009D2r 1  F0 09        	beq     L0002
0009D4r 1  AD rr rr     	lda     _t_lock
0009D7r 1  AE rr rr     	ldx     _t_lock+1
0009DAr 1  20 rr rr     	jsr     _er_boot
0009DDr 1  4C rr rr     L0002:	jmp     _newText1
0009E0r 1               
0009E0r 1               .endproc
0009E0r 1               
0009E0r 1               ; ---------------------------------------------------------------
0009E0r 1               ; int __near__ expr (unsigned char c)
0009E0r 1               ; ---------------------------------------------------------------
0009E0r 1               
0009E0r 1               .segment	"CODE"
0009E0r 1               
0009E0r 1               .proc	_expr: near
0009E0r 1               
0009E0r 1               .segment	"CODE"
0009E0r 1               
0009E0r 1  20 rr rr     	jsr     pusha
0009E3r 1  20 rr rr     	jsr     decsp8
0009E6r 1  A0 08        	ldy     #$08
0009E8r 1  B1 rr        	lda     (sp),y
0009EAr 1  20 rr rr     	jsr     _term
0009EDr 1  20 rr rr     L0031:	jsr     stax0sp
0009F0r 1  AD rr rr     L0005:	lda     _pc+1
0009F3r 1  85 rr        	sta     ptr1+1
0009F5r 1  AD rr rr     	lda     _pc
0009F8r 1  85 rr        	sta     ptr1
0009FAr 1  A2 00        	ldx     #$00
0009FCr 1  B2 rr        	lda     (ptr1)
0009FEr 1  A0 06        	ldy     #$06
000A00r 1  20 rr rr     	jsr     staxysp
000A03r 1  EE rr rr     	inc     _pc
000A06r 1  D0 03        	bne     L0006
000A08r 1  EE rr rr     	inc     _pc+1
000A0Br 1  A0 07        L0006:	ldy     #$07
000A0Dr 1  20 rr rr     	jsr     ldaxysp
000A10r 1  E0 00        	cpx     #$00
000A12r 1  F0 03 4C rr  	jne     L002F
000A16r 1  rr           
000A17r 1  C9 00        	cmp     #$00
000A19r 1  F0 3D        	beq     L0009
000A1Br 1  C9 20        	cmp     #$20
000A1Dr 1  F0 44        	beq     L000B
000A1Fr 1  C9 29        	cmp     #$29
000A21r 1  F0 40        	beq     L000B
000A23r 1  C9 2A        	cmp     #$2A
000A25r 1  D0 03 4C rr  	jeq     L0022
000A29r 1  rr           
000A2Ar 1  C9 2B        	cmp     #$2B
000A2Cr 1  D0 03 4C rr  	jeq     L001A
000A30r 1  rr           
000A31r 1  C9 2C        	cmp     #$2C
000A33r 1  F0 2E        	beq     L000B
000A35r 1  C9 2D        	cmp     #$2D
000A37r 1  D0 03 4C rr  	jeq     L0020
000A3Br 1  rr           
000A3Cr 1  C9 2F        	cmp     #$2F
000A3Er 1  D0 03 4C rr  	jeq     L0024
000A42r 1  rr           
000A43r 1  C9 3C        	cmp     #$3C
000A45r 1  F0 22        	beq     L000E
000A47r 1  C9 3D        	cmp     #$3D
000A49r 1  D0 03 4C rr  	jeq     L0026
000A4Dr 1  rr           
000A4Er 1  C9 3E        	cmp     #$3E
000A50r 1  D0 03 4C rr  	jeq     L0011
000A54r 1  rr           
000A55r 1  4C rr rr     	jmp     L002F
000A58r 1  AD rr rr     L0009:	lda     _pc
000A5Br 1  D0 03        	bne     L000A
000A5Dr 1  CE rr rr     	dec     _pc+1
000A60r 1  CE rr rr     L000A:	dec     _pc
000A63r 1  20 rr rr     L000B:	jsr     ldax0sp
000A66r 1  4C rr rr     	jmp     L0003
000A69r 1  AD rr rr     L000E:	lda     _pc+1
000A6Cr 1  85 rr        	sta     ptr1+1
000A6Er 1  AD rr rr     	lda     _pc
000A71r 1  85 rr        	sta     ptr1
000A73r 1  B2 rr        	lda     (ptr1)
000A75r 1  A0 04        	ldy     #$04
000A77r 1  20 rr rr     	jsr     staxysp
000A7Ar 1  EE rr rr     	inc     _pc
000A7Dr 1  D0 03        	bne     L000F
000A7Fr 1  EE rr rr     	inc     _pc+1
000A82r 1  A0 05        L000F:	ldy     #$05
000A84r 1  20 rr rr     	jsr     ldaxysp
000A87r 1  E0 00        	cpx     #$00
000A89r 1  D0 61        	bne     L0016
000A8Br 1  C9 3D        	cmp     #$3D
000A8Dr 1  F0 33        	beq     L0014
000A8Fr 1  C9 3E        	cmp     #$3E
000A91r 1  D0 59        	bne     L0016
000A93r 1  AD rr rr     	lda     _pc+1
000A96r 1  85 rr        	sta     ptr1+1
000A98r 1  AD rr rr     	lda     _pc
000A9Br 1  85 rr        	sta     ptr1
000A9Dr 1  B2 rr        	lda     (ptr1)
000A9Fr 1  EE rr rr     	inc     _pc
000AA2r 1  D0 03        	bne     L0013
000AA4r 1  EE rr rr     	inc     _pc+1
000AA7r 1  20 rr rr     L0013:	jsr     _term
000AAAr 1  A0 02        	ldy     #$02
000AACr 1  20 rr rr     	jsr     staxysp
000AAFr 1  20 rr rr     	jsr     ldax0sp
000AB2r 1  A0 02        	ldy     #$02
000AB4r 1  D1 rr        	cmp     (sp),y
000AB6r 1  D0 04        	bne     L0029
000AB8r 1  8A           	txa
000AB9r 1  C8           	iny
000ABAr 1  D1 rr        	cmp     (sp),y
000ABCr 1  20 rr rr     L0029:	jsr     boolne
000ABFr 1  4C rr rr     	jmp     L0031
000AC2r 1  AD rr rr     L0014:	lda     _pc+1
000AC5r 1  85 rr        	sta     ptr1+1
000AC7r 1  AD rr rr     	lda     _pc
000ACAr 1  85 rr        	sta     ptr1
000ACCr 1  B2 rr        	lda     (ptr1)
000ACEr 1  EE rr rr     	inc     _pc
000AD1r 1  D0 03        	bne     L0015
000AD3r 1  EE rr rr     	inc     _pc+1
000AD6r 1  20 rr rr     L0015:	jsr     _term
000AD9r 1  A0 02        	ldy     #$02
000ADBr 1  20 rr rr     	jsr     staxysp
000ADEr 1  20 rr rr     	jsr     pushw0sp
000AE1r 1  A0 05        	ldy     #$05
000AE3r 1  20 rr rr     	jsr     ldaxysp
000AE6r 1  20 rr rr     	jsr     tosleax
000AE9r 1  4C rr rr     	jmp     L0031
000AECr 1  A0 04        L0016:	ldy     #$04
000AEEr 1  B1 rr        	lda     (sp),y
000AF0r 1  20 rr rr     	jsr     _term
000AF3r 1  A0 02        	ldy     #$02
000AF5r 1  20 rr rr     	jsr     staxysp
000AF8r 1  20 rr rr     	jsr     ldax0sp
000AFBr 1  A0 02        	ldy     #$02
000AFDr 1  D1 rr        	cmp     (sp),y
000AFFr 1  8A           	txa
000B00r 1  C8           	iny
000B01r 1  F1 rr        	sbc     (sp),y
000B03r 1  50 02        	bvc     L002A
000B05r 1  49 80        	eor     #$80
000B07r 1  0A           L002A:	asl     a
000B08r 1  A9 00        	lda     #$00
000B0Ar 1  AA           	tax
000B0Br 1  2A           	rol     a
000B0Cr 1  4C rr rr     	jmp     L0031
000B0Fr 1  AD rr rr     L0011:	lda     _pc+1
000B12r 1  85 rr        	sta     ptr1+1
000B14r 1  AD rr rr     	lda     _pc
000B17r 1  85 rr        	sta     ptr1
000B19r 1  B2 rr        	lda     (ptr1)
000B1Br 1  A0 04        	ldy     #$04
000B1Dr 1  20 rr rr     	jsr     staxysp
000B20r 1  EE rr rr     	inc     _pc
000B23r 1  D0 03        	bne     L0018
000B25r 1  EE rr rr     	inc     _pc+1
000B28r 1  A0 05        L0018:	ldy     #$05
000B2Ar 1  B1 rr        	lda     (sp),y
000B2Cr 1  D0 3A        	bne     L001D
000B2Er 1  88           	dey
000B2Fr 1  B1 rr        	lda     (sp),y
000B31r 1  C9 3D        	cmp     #$3D
000B33r 1  D0 34        	bne     L002E
000B35r 1  AD rr rr     	lda     _pc+1
000B38r 1  85 rr        	sta     ptr1+1
000B3Ar 1  AD rr rr     	lda     _pc
000B3Dr 1  85 rr        	sta     ptr1
000B3Fr 1  B2 rr        	lda     (ptr1)
000B41r 1  EE rr rr     	inc     _pc
000B44r 1  D0 03        	bne     L001C
000B46r 1  EE rr rr     	inc     _pc+1
000B49r 1  20 rr rr     L001C:	jsr     _term
000B4Cr 1  A0 02        	ldy     #$02
000B4Er 1  20 rr rr     	jsr     staxysp
000B51r 1  20 rr rr     	jsr     ldax0sp
000B54r 1  A0 02        	ldy     #$02
000B56r 1  D1 rr        	cmp     (sp),y
000B58r 1  8A           	txa
000B59r 1  C8           	iny
000B5Ar 1  F1 rr        	sbc     (sp),y
000B5Cr 1  70 02        	bvs     L002B
000B5Er 1  49 80        	eor     #$80
000B60r 1  0A           L002B:	asl     a
000B61r 1  A9 00        	lda     #$00
000B63r 1  AA           	tax
000B64r 1  2A           	rol     a
000B65r 1  4C rr rr     	jmp     L0031
000B68r 1  88           L001D:	dey
000B69r 1  B1 rr        L002E:	lda     (sp),y
000B6Br 1  20 rr rr     	jsr     _term
000B6Er 1  A0 02        	ldy     #$02
000B70r 1  20 rr rr     	jsr     staxysp
000B73r 1  20 rr rr     	jsr     pushw0sp
000B76r 1  A0 05        	ldy     #$05
000B78r 1  20 rr rr     	jsr     ldaxysp
000B7Br 1  20 rr rr     	jsr     tosgtax
000B7Er 1  4C rr rr     	jmp     L0031
000B81r 1  AD rr rr     L001A:	lda     _pc+1
000B84r 1  85 rr        	sta     ptr1+1
000B86r 1  AD rr rr     	lda     _pc
000B89r 1  85 rr        	sta     ptr1
000B8Br 1  B2 rr        	lda     (ptr1)
000B8Dr 1  EE rr rr     	inc     _pc
000B90r 1  D0 03        	bne     L001F
000B92r 1  EE rr rr     	inc     _pc+1
000B95r 1  20 rr rr     L001F:	jsr     _term
000B98r 1  A0 02        	ldy     #$02
000B9Ar 1  20 rr rr     	jsr     staxysp
000B9Dr 1  18           	clc
000B9Er 1  72 rr        	adc     (sp)
000BA0r 1  48           	pha
000BA1r 1  8A           	txa
000BA2r 1  A0 01        	ldy     #$01
000BA4r 1  71 rr        	adc     (sp),y
000BA6r 1  AA           	tax
000BA7r 1  68           	pla
000BA8r 1  4C rr rr     	jmp     L0031
000BABr 1  AD rr rr     L0020:	lda     _pc+1
000BAEr 1  85 rr        	sta     ptr1+1
000BB0r 1  AD rr rr     	lda     _pc
000BB3r 1  85 rr        	sta     ptr1
000BB5r 1  B2 rr        	lda     (ptr1)
000BB7r 1  EE rr rr     	inc     _pc
000BBAr 1  D0 03        	bne     L0021
000BBCr 1  EE rr rr     	inc     _pc+1
000BBFr 1  20 rr rr     L0021:	jsr     _term
000BC2r 1  A0 02        	ldy     #$02
000BC4r 1  20 rr rr     	jsr     staxysp
000BC7r 1  20 rr rr     	jsr     ldax0sp
000BCAr 1  38           	sec
000BCBr 1  A0 02        	ldy     #$02
000BCDr 1  F1 rr        	sbc     (sp),y
000BCFr 1  48           	pha
000BD0r 1  8A           	txa
000BD1r 1  C8           	iny
000BD2r 1  F1 rr        	sbc     (sp),y
000BD4r 1  AA           	tax
000BD5r 1  68           	pla
000BD6r 1  4C rr rr     	jmp     L0031
000BD9r 1  AD rr rr     L0022:	lda     _pc+1
000BDCr 1  85 rr        	sta     ptr1+1
000BDEr 1  AD rr rr     	lda     _pc
000BE1r 1  85 rr        	sta     ptr1
000BE3r 1  B2 rr        	lda     (ptr1)
000BE5r 1  EE rr rr     	inc     _pc
000BE8r 1  D0 03        	bne     L0023
000BEAr 1  EE rr rr     	inc     _pc+1
000BEDr 1  20 rr rr     L0023:	jsr     _term
000BF0r 1  A0 02        	ldy     #$02
000BF2r 1  20 rr rr     	jsr     staxysp
000BF5r 1  20 rr rr     	jsr     pushw0sp
000BF8r 1  A0 05        	ldy     #$05
000BFAr 1  20 rr rr     	jsr     ldaxysp
000BFDr 1  20 rr rr     	jsr     tosmulax
000C00r 1  4C rr rr     	jmp     L0031
000C03r 1  AD rr rr     L0024:	lda     _pc+1
000C06r 1  85 rr        	sta     ptr1+1
000C08r 1  AD rr rr     	lda     _pc
000C0Br 1  85 rr        	sta     ptr1
000C0Dr 1  B2 rr        	lda     (ptr1)
000C0Fr 1  EE rr rr     	inc     _pc
000C12r 1  D0 03        	bne     L0025
000C14r 1  EE rr rr     	inc     _pc+1
000C17r 1  20 rr rr     L0025:	jsr     _term
000C1Ar 1  A0 02        	ldy     #$02
000C1Cr 1  20 rr rr     	jsr     staxysp
000C1Fr 1  20 rr rr     	jsr     pushw0sp
000C22r 1  A0 05        	ldy     #$05
000C24r 1  20 rr rr     	jsr     ldaxysp
000C27r 1  20 rr rr     	jsr     tosmodax
000C2Ar 1  8D rr rr     	sta     _var+74
000C2Dr 1  8E rr rr     	stx     _var+74+1
000C30r 1  20 rr rr     	jsr     pushw0sp
000C33r 1  A0 05        	ldy     #$05
000C35r 1  20 rr rr     	jsr     ldaxysp
000C38r 1  20 rr rr     	jsr     tosdivax
000C3Br 1  4C rr rr     	jmp     L0031
000C3Er 1  AD rr rr     L0026:	lda     _pc+1
000C41r 1  85 rr        	sta     ptr1+1
000C43r 1  AD rr rr     	lda     _pc
000C46r 1  85 rr        	sta     ptr1
000C48r 1  B2 rr        	lda     (ptr1)
000C4Ar 1  EE rr rr     	inc     _pc
000C4Dr 1  D0 03        	bne     L0027
000C4Fr 1  EE rr rr     	inc     _pc+1
000C52r 1  20 rr rr     L0027:	jsr     _term
000C55r 1  A0 02        	ldy     #$02
000C57r 1  20 rr rr     	jsr     staxysp
000C5Ar 1  20 rr rr     	jsr     ldax0sp
000C5Dr 1  A0 02        	ldy     #$02
000C5Fr 1  D1 rr        	cmp     (sp),y
000C61r 1  D0 04        	bne     L002C
000C63r 1  8A           	txa
000C64r 1  C8           	iny
000C65r 1  D1 rr        	cmp     (sp),y
000C67r 1  20 rr rr     L002C:	jsr     booleq
000C6Ar 1  4C rr rr     	jmp     L0031
000C6Dr 1  A9 20        L002F:	lda     #$20
000C6Fr 1  8D rr rr     	sta     _mm
000C72r 1  A0 06        	ldy     #$06
000C74r 1  B1 rr        	lda     (sp),y
000C76r 1  8D rr rr     	sta     _mm+1
000C79r 1  A9 3F        	lda     #$3F
000C7Br 1  8D rr rr     	sta     _mm+2
000C7Er 1  9C rr rr     	stz     _mm+3
000C81r 1  A9 rr        	lda     #<(_mm)
000C83r 1  A2 rr        	ldx     #>(_mm)
000C85r 1  20 rr rr     	jsr     _errMsg
000C88r 1  4C rr rr     	jmp     L0005
000C8Br 1  A0 09        L0003:	ldy     #$09
000C8Dr 1  4C rr rr     	jmp     addysp
000C90r 1               
000C90r 1               .endproc
000C90r 1               
000C90r 1               ; ---------------------------------------------------------------
000C90r 1               ; void __near__ push (int x)
000C90r 1               ; ---------------------------------------------------------------
000C90r 1               
000C90r 1               .segment	"CODE"
000C90r 1               
000C90r 1               .proc	_push: near
000C90r 1               
000C90r 1               .segment	"CODE"
000C90r 1               
000C90r 1  20 rr rr     	jsr     pushax
000C93r 1  AD rr rr     	lda     _sp
000C96r 1  C9 63        	cmp     #$63
000C98r 1  AD rr rr     	lda     _sp+1
000C9Br 1  E9 00        	sbc     #$00
000C9Dr 1  70 02        	bvs     L0003
000C9Fr 1  49 80        	eor     #$80
000CA1r 1  10 07        L0003:	bpl     L0002
000CA3r 1  A9 rr        	lda     #<(S0008)
000CA5r 1  A2 rr        	ldx     #>(S0008)
000CA7r 1  20 rr rr     	jsr     _er_boot
000CAAr 1  EE rr rr     L0002:	inc     _sp
000CADr 1  D0 03        	bne     L0004
000CAFr 1  EE rr rr     	inc     _sp+1
000CB2r 1  AD rr rr     L0004:	lda     _sp
000CB5r 1  AE rr rr     	ldx     _sp+1
000CB8r 1  20 rr rr     	jsr     aslax1
000CBBr 1  18           	clc
000CBCr 1  69 rr        	adc     #<(_stack)
000CBEr 1  85 rr        	sta     ptr1
000CC0r 1  8A           	txa
000CC1r 1  69 rr        	adc     #>(_stack)
000CC3r 1  85 rr        	sta     ptr1+1
000CC5r 1  20 rr rr     	jsr     ldax0sp
000CC8r 1  92 rr        	sta     (ptr1)
000CCAr 1  A0 01        	ldy     #$01
000CCCr 1  8A           	txa
000CCDr 1  91 rr        	sta     (ptr1),y
000CCFr 1  4C rr rr     	jmp     incsp2
000CD2r 1               
000CD2r 1               .endproc
000CD2r 1               
000CD2r 1               ; ---------------------------------------------------------------
000CD2r 1               ; int __near__ term (unsigned char c)
000CD2r 1               ; ---------------------------------------------------------------
000CD2r 1               
000CD2r 1               .segment	"CODE"
000CD2r 1               
000CD2r 1               .proc	_term: near
000CD2r 1               
000CD2r 1               .segment	"CODE"
000CD2r 1               
000CD2r 1  20 rr rr     	jsr     pusha
000CD5r 1  20 rr rr     	jsr     decsp2
000CD8r 1  20 rr rr     	jsr     push0
000CDBr 1  20 rr rr     	jsr     decsp3
000CDEr 1  A0 07        	ldy     #$07
000CE0r 1  B1 rr        	lda     (sp),y
000CE2r 1  C9 22        	cmp     #$22
000CE4r 1  D0 03 4C rr  	jeq     L0019
000CE8r 1  rr           
000CE9r 1  C9 23        	cmp     #$23
000CEBr 1  D0 03 4C rr  	jeq     L0010
000CEFr 1  rr           
000CF0r 1  C9 24        	cmp     #$24
000CF2r 1  F0 27        	beq     L0004
000CF4r 1  C9 25        	cmp     #$25
000CF6r 1  D0 03 4C rr  	jeq     L0015
000CFAr 1  rr           
000CFBr 1  C9 27        	cmp     #$27
000CFDr 1  D0 03 4C rr  	jeq     L0012
000D01r 1  rr           
000D02r 1  C9 28        	cmp     #$28
000D04r 1  F0 39        	beq     L0007
000D06r 1  C9 2B        	cmp     #$2B
000D08r 1  F0 73        	beq     L000A
000D0Ar 1  C9 2D        	cmp     #$2D
000D0Cr 1  D0 03 4C rr  	jeq     L000E
000D10r 1  rr           
000D11r 1  C9 3F        	cmp     #$3F
000D13r 1  D0 03 4C rr  	jeq     L0017
000D17r 1  rr           
000D18r 1  4C rr rr     	jmp     L0034
000D1Br 1  A9 03        L0004:	lda     #$03
000D1Dr 1  20 rr rr     	jsr     leaa0sp
000D20r 1  20 rr rr     	jsr     _getHex
000D23r 1  A0 05        	ldy     #$05
000D25r 1  20 rr rr     	jsr     staxysp
000D28r 1  A0 03        	ldy     #$03
000D2Ar 1  B1 rr        	lda     (sp),y
000D2Cr 1  C8           	iny
000D2Dr 1  11 rr        	ora     (sp),y
000D2Fr 1  D0 06        	bne     L0005
000D31r 1  20 rr rr     	jsr     _c_getch
000D34r 1  4C rr rr     	jmp     incsp8
000D37r 1  A0 06        L0005:	ldy     #$06
000D39r 1  20 rr rr     	jsr     ldaxysp
000D3Cr 1  4C rr rr     	jmp     incsp8
000D3Fr 1  AD rr rr     L0007:	lda     _pc+1
000D42r 1  85 rr        	sta     ptr1+1
000D44r 1  AD rr rr     	lda     _pc
000D47r 1  85 rr        	sta     ptr1
000D49r 1  B2 rr        	lda     (ptr1)
000D4Br 1  EE rr rr     	inc     _pc
000D4Er 1  D0 03        	bne     L0008
000D50r 1  EE rr rr     	inc     _pc+1
000D53r 1  20 rr rr     L0008:	jsr     _expr
000D56r 1  A0 05        	ldy     #$05
000D58r 1  20 rr rr     	jsr     staxysp
000D5Br 1  AD rr rr     	lda     _pc
000D5Er 1  AE rr rr     	ldx     _pc+1
000D61r 1  20 rr rr     	jsr     decax1
000D64r 1  85 rr        	sta     ptr1
000D66r 1  86 rr        	stx     ptr1+1
000D68r 1  B2 rr        	lda     (ptr1)
000D6Ar 1  C9 29        	cmp     #$29
000D6Cr 1  F0 07        	beq     L0009
000D6Er 1  A9 rr        	lda     #<(S000A)
000D70r 1  A2 rr        	ldx     #>(S000A)
000D72r 1  20 rr rr     	jsr     _errMsg
000D75r 1  A0 06        L0009:	ldy     #$06
000D77r 1  20 rr rr     	jsr     ldaxysp
000D7Ar 1  4C rr rr     	jmp     incsp8
000D7Dr 1  AD rr rr     L000A:	lda     _pc+1
000D80r 1  85 rr        	sta     ptr1+1
000D82r 1  AD rr rr     	lda     _pc
000D85r 1  85 rr        	sta     ptr1
000D87r 1  B2 rr        	lda     (ptr1)
000D89r 1  EE rr rr     	inc     _pc
000D8Cr 1  D0 03        	bne     L000B
000D8Er 1  EE rr rr     	inc     _pc+1
000D91r 1  20 rr rr     L000B:	jsr     _term
000D94r 1  A0 05        	ldy     #$05
000D96r 1  20 rr rr     	jsr     staxysp
000D99r 1  E0 80        	cpx     #$80
000D9Br 1  90 0B        	bcc     L000C
000D9Dr 1  A0 06        	ldy     #$06
000D9Fr 1  20 rr rr     	jsr     ldaxysp
000DA2r 1  20 rr rr     	jsr     negax
000DA5r 1  4C rr rr     	jmp     incsp8
000DA8r 1  A0 06        L000C:	ldy     #$06
000DAAr 1  20 rr rr     	jsr     ldaxysp
000DADr 1  4C rr rr     	jmp     incsp8
000DB0r 1  AD rr rr     L000E:	lda     _pc+1
000DB3r 1  85 rr        	sta     ptr1+1
000DB5r 1  AD rr rr     	lda     _pc
000DB8r 1  85 rr        	sta     ptr1
000DBAr 1  B2 rr        	lda     (ptr1)
000DBCr 1  EE rr rr     	inc     _pc
000DBFr 1  D0 03        	bne     L000F
000DC1r 1  EE rr rr     	inc     _pc+1
000DC4r 1  20 rr rr     L000F:	jsr     _term
000DC7r 1  20 rr rr     	jsr     negax
000DCAr 1  4C rr rr     	jmp     incsp8
000DCDr 1  AD rr rr     L0010:	lda     _pc+1
000DD0r 1  85 rr        	sta     ptr1+1
000DD2r 1  AD rr rr     	lda     _pc
000DD5r 1  85 rr        	sta     ptr1
000DD7r 1  B2 rr        	lda     (ptr1)
000DD9r 1  EE rr rr     	inc     _pc
000DDCr 1  D0 03        	bne     L0011
000DDEr 1  EE rr rr     	inc     _pc+1
000DE1r 1  20 rr rr     L0011:	jsr     _term
000DE4r 1  20 rr rr     	jsr     bnegax
000DE7r 1  4C rr rr     	jmp     incsp8
000DEAr 1  20 rr rr     L0012:	jsr     _rand
000DEDr 1  20 rr rr     	jsr     pushax
000DF0r 1  AD rr rr     	lda     _pc+1
000DF3r 1  85 rr        	sta     ptr1+1
000DF5r 1  AD rr rr     	lda     _pc
000DF8r 1  85 rr        	sta     ptr1
000DFAr 1  B2 rr        	lda     (ptr1)
000DFCr 1  EE rr rr     	inc     _pc
000DFFr 1  D0 03        	bne     L0013
000E01r 1  EE rr rr     	inc     _pc+1
000E04r 1  20 rr rr     L0013:	jsr     _term
000E07r 1  20 rr rr     	jsr     tosmodax
000E0Ar 1  1A           	ina
000E0Br 1  F0 03 4C rr  	jne     L0001
000E0Fr 1  rr           
000E10r 1  E8           	inx
000E11r 1  4C rr rr     	jmp     incsp8
000E14r 1  AD rr rr     L0015:	lda     _pc+1
000E17r 1  85 rr        	sta     ptr1+1
000E19r 1  AD rr rr     	lda     _pc
000E1Cr 1  85 rr        	sta     ptr1
000E1Er 1  B2 rr        	lda     (ptr1)
000E20r 1  EE rr rr     	inc     _pc
000E23r 1  D0 03        	bne     L0016
000E25r 1  EE rr rr     	inc     _pc+1
000E28r 1  20 rr rr     L0016:	jsr     _term
000E2Br 1  A0 05        	ldy     #$05
000E2Dr 1  20 rr rr     	jsr     staxysp
000E30r 1  AD rr rr     	lda     _var+74
000E33r 1  AE rr rr     	ldx     _var+74+1
000E36r 1  4C rr rr     	jmp     incsp8
000E39r 1  A9 rr        L0017:	lda     #<(_lky_buf)
000E3Br 1  A2 rr        	ldx     #>(_lky_buf)
000E3Dr 1  20 rr rr     	jsr     _c_gets
000E40r 1  AD rr rr     	lda     _pc
000E43r 1  AE rr rr     	ldx     _pc+1
000E46r 1  20 rr rr     	jsr     stax0sp
000E49r 1  A9 rr        	lda     #<(_lky_buf)
000E4Br 1  A2 rr        	ldx     #>(_lky_buf)
000E4Dr 1  8D rr rr     	sta     _pc
000E50r 1  8E rr rr     	stx     _pc+1
000E53r 1  85 rr        	sta     ptr1
000E55r 1  86 rr        	stx     ptr1+1
000E57r 1  B2 rr        	lda     (ptr1)
000E59r 1  EE rr rr     	inc     _pc
000E5Cr 1  D0 03        	bne     L0018
000E5Er 1  EE rr rr     	inc     _pc+1
000E61r 1  20 rr rr     L0018:	jsr     _expr
000E64r 1  A0 05        	ldy     #$05
000E66r 1  20 rr rr     	jsr     staxysp
000E69r 1  20 rr rr     	jsr     ldax0sp
000E6Cr 1  8D rr rr     	sta     _pc
000E6Fr 1  8E rr rr     	stx     _pc+1
000E72r 1  A0 06        	ldy     #$06
000E74r 1  20 rr rr     	jsr     ldaxysp
000E77r 1  4C rr rr     	jmp     incsp8
000E7Ar 1  AD rr rr     L0019:	lda     _pc+1
000E7Dr 1  85 rr        	sta     ptr1+1
000E7Fr 1  AD rr rr     	lda     _pc
000E82r 1  85 rr        	sta     ptr1
000E84r 1  B2 rr        	lda     (ptr1)
000E86r 1  A0 05        	ldy     #$05
000E88r 1  20 rr rr     	jsr     staxysp
000E8Br 1  EE rr rr     	inc     _pc
000E8Er 1  D0 03        	bne     L001A
000E90r 1  EE rr rr     	inc     _pc+1
000E93r 1  AD rr rr     L001A:	lda     _pc+1
000E96r 1  85 rr        	sta     ptr1+1
000E98r 1  AD rr rr     	lda     _pc
000E9Br 1  85 rr        	sta     ptr1
000E9Dr 1  B2 rr        	lda     (ptr1)
000E9Fr 1  C9 22        	cmp     #$22
000EA1r 1  20 rr rr     	jsr     boolne
000EA4r 1  08           	php
000EA5r 1  EE rr rr     	inc     _pc
000EA8r 1  D0 03        	bne     L001C
000EAAr 1  EE rr rr     	inc     _pc+1
000EADr 1  28           L001C:	plp
000EAEr 1  F0 07        	beq     L001B
000EB0r 1  A9 rr        	lda     #<(S000B)
000EB2r 1  A2 rr        	ldx     #>(S000B)
000EB4r 1  20 rr rr     	jsr     _errMsg
000EB7r 1  A0 06        L001B:	ldy     #$06
000EB9r 1  20 rr rr     	jsr     ldaxysp
000EBCr 1  4C rr rr     	jmp     incsp8
000EBFr 1  A9 30        L0034:	lda     #$30
000EC1r 1  D1 rr        	cmp     (sp),y
000EC3r 1  F0 02        	beq     L0036
000EC5r 1  B0 21        	bcs     L001D
000EC7r 1  B1 rr        L0036:	lda     (sp),y
000EC9r 1  C9 3A        	cmp     #$3A
000ECBr 1  B0 1B        	bcs     L001D
000ECDr 1  AD rr rr     	lda     _pc
000ED0r 1  D0 03        	bne     L0021
000ED2r 1  CE rr rr     	dec     _pc+1
000ED5r 1  CE rr rr     L0021:	dec     _pc
000ED8r 1  A9 03        	lda     #$03
000EDAr 1  20 rr rr     	jsr     leaa0sp
000EDDr 1  20 rr rr     	jsr     _getNum
000EE0r 1  A0 05        	ldy     #$05
000EE2r 1  20 rr rr     	jsr     staxysp
000EE5r 1  4C rr rr     	jmp     incsp8
000EE8r 1  20 rr rr     L001D:	jsr     _skipAlpha
000EEBr 1  A0 02        	ldy     #$02
000EEDr 1  91 rr        	sta     (sp),y
000EEFr 1  C9 3A        	cmp     #$3A
000EF1r 1  F0 09        	beq     L0039
000EF3r 1  B1 rr        	lda     (sp),y
000EF5r 1  C9 28        	cmp     #$28
000EF7r 1  F0 03 4C rr  	jne     L0029
000EFBr 1  rr           
000EFCr 1  EE rr rr     L0039:	inc     _pc
000EFFr 1  D0 03        	bne     L0025
000F01r 1  EE rr rr     	inc     _pc+1
000F04r 1  AD rr rr     L0025:	lda     _pc+1
000F07r 1  85 rr        	sta     ptr1+1
000F09r 1  AD rr rr     	lda     _pc
000F0Cr 1  85 rr        	sta     ptr1
000F0Er 1  B2 rr        	lda     (ptr1)
000F10r 1  EE rr rr     	inc     _pc
000F13r 1  D0 03        	bne     L0026
000F15r 1  EE rr rr     	inc     _pc+1
000F18r 1  20 rr rr     L0026:	jsr     _expr
000F1Br 1  A0 05        	ldy     #$05
000F1Dr 1  20 rr rr     	jsr     staxysp
000F20r 1  AD rr rr     	lda     _pc
000F23r 1  AE rr rr     	ldx     _pc+1
000F26r 1  20 rr rr     	jsr     decax1
000F29r 1  85 rr        	sta     ptr1
000F2Br 1  86 rr        	stx     ptr1+1
000F2Dr 1  B2 rr        	lda     (ptr1)
000F2Fr 1  C9 29        	cmp     #$29
000F31r 1  F0 07        	beq     L0027
000F33r 1  A9 rr        	lda     #<(S000C)
000F35r 1  A2 rr        	ldx     #>(S000C)
000F37r 1  20 rr rr     	jsr     _errMsg
000F3Ar 1  A0 02        L0027:	ldy     #$02
000F3Cr 1  B1 rr        	lda     (sp),y
000F3Er 1  C9 28        	cmp     #$28
000F40r 1  F0 34        	beq     L002B
000F42r 1  C9 3A        	cmp     #$3A
000F44r 1  D0 5D        	bne     L0029
000F46r 1  A0 07        	ldy     #$07
000F48r 1  A2 00        	ldx     #$00
000F4Ar 1  B1 rr        	lda     (sp),y
000F4Cr 1  0A           	asl     a
000F4Dr 1  90 02        	bcc     L0030
000F4Fr 1  E8           	inx
000F50r 1  18           	clc
000F51r 1  69 rr        L0030:	adc     #<(_var)
000F53r 1  A8           	tay
000F54r 1  8A           	txa
000F55r 1  69 rr        	adc     #>(_var)
000F57r 1  AA           	tax
000F58r 1  98           	tya
000F59r 1  20 rr rr     	jsr     ldaxi
000F5Cr 1  85 rr        	sta     ptr1
000F5Er 1  86 rr        	stx     ptr1+1
000F60r 1  A0 06        	ldy     #$06
000F62r 1  20 rr rr     	jsr     ldaxysp
000F65r 1  18           	clc
000F66r 1  65 rr        	adc     ptr1
000F68r 1  85 rr        	sta     ptr1
000F6Ar 1  8A           	txa
000F6Br 1  65 rr        	adc     ptr1+1
000F6Dr 1  85 rr        	sta     ptr1+1
000F6Fr 1  A2 00        	ldx     #$00
000F71r 1  B2 rr        	lda     (ptr1)
000F73r 1  4C rr rr     	jmp     incsp8
000F76r 1  A0 07        L002B:	ldy     #$07
000F78r 1  A2 00        	ldx     #$00
000F7Ar 1  B1 rr        	lda     (sp),y
000F7Cr 1  0A           	asl     a
000F7Dr 1  90 02        	bcc     L0031
000F7Fr 1  E8           	inx
000F80r 1  18           	clc
000F81r 1  69 rr        L0031:	adc     #<(_var)
000F83r 1  A8           	tay
000F84r 1  8A           	txa
000F85r 1  69 rr        	adc     #>(_var)
000F87r 1  AA           	tax
000F88r 1  98           	tya
000F89r 1  20 rr rr     	jsr     ldaxi
000F8Cr 1  85 rr        	sta     ptr1
000F8Er 1  86 rr        	stx     ptr1+1
000F90r 1  A0 06        	ldy     #$06
000F92r 1  20 rr rr     	jsr     ldaxysp
000F95r 1  20 rr rr     	jsr     aslax1
000F98r 1  18           	clc
000F99r 1  65 rr        	adc     ptr1
000F9Br 1  48           	pha
000F9Cr 1  8A           	txa
000F9Dr 1  65 rr        	adc     ptr1+1
000F9Fr 1  AA           	tax
000FA0r 1  68           	pla
000FA1r 1  80 13        	bra     L003A
000FA3r 1  A0 07        L0029:	ldy     #$07
000FA5r 1  A2 00        	ldx     #$00
000FA7r 1  B1 rr        	lda     (sp),y
000FA9r 1  0A           	asl     a
000FAAr 1  90 02        	bcc     L0032
000FACr 1  E8           	inx
000FADr 1  18           	clc
000FAEr 1  69 rr        L0032:	adc     #<(_var)
000FB0r 1  A8           	tay
000FB1r 1  8A           	txa
000FB2r 1  69 rr        	adc     #>(_var)
000FB4r 1  AA           	tax
000FB5r 1  98           	tya
000FB6r 1  20 rr rr     L003A:	jsr     ldaxi
000FB9r 1  4C rr rr     L0001:	jmp     incsp8
000FBCr 1               
000FBCr 1               .endproc
000FBCr 1               
000FBCr 1               ; ---------------------------------------------------------------
000FBCr 1               ; void __near__ errMsg (s) unsigned char *s;
000FBCr 1               ; ---------------------------------------------------------------
000FBCr 1               
000FBCr 1               .segment	"CODE"
000FBCr 1               
000FBCr 1               .proc	_errMsg: near
000FBCr 1               
000FBCr 1               .segment	"CODE"
000FBCr 1               
000FBCr 1  20 rr rr     	jsr     pushax
000FBFr 1  20 rr rr     	jsr     decsp8
000FC2r 1  A9 rr        	lda     #<(S000D)
000FC4r 1  A2 rr        	ldx     #>(S000D)
000FC6r 1  20 rr rr     	jsr     _c_puts
000FC9r 1  A0 09        	ldy     #$09
000FCBr 1  20 rr rr     	jsr     ldaxysp
000FCEr 1  20 rr rr     	jsr     _c_puts
000FD1r 1  AD rr rr     	lda     _lno
000FD4r 1  0D rr rr     	ora     _lno+1
000FD7r 1  F0 25        	beq     L0002
000FD9r 1  A9 rr        	lda     #<(S000E)
000FDBr 1  A2 rr        	ldx     #>(S000E)
000FDDr 1  20 rr rr     	jsr     _c_puts
000FE0r 1  A5 rr        	lda     sp
000FE2r 1  A6 rr        	ldx     sp+1
000FE4r 1  20 rr rr     	jsr     pushax
000FE7r 1  AD rr rr     	lda     _lno
000FEAr 1  AE rr rr     	ldx     _lno+1
000FEDr 1  20 rr rr     	jsr     pushax
000FF0r 1  A2 00        	ldx     #$00
000FF2r 1  A9 01        	lda     #$01
000FF4r 1  20 rr rr     	jsr     _mk_dStr
000FF7r 1  A5 rr        	lda     sp
000FF9r 1  A6 rr        	ldx     sp+1
000FFBr 1  20 rr rr     	jsr     _c_puts
000FFEr 1  A2 00        L0002:	ldx     #$00
001000r 1  8A           	txa
001001r 1  20 rr rr     	jsr     _w_boot
001004r 1  A0 0A        	ldy     #$0A
001006r 1  4C rr rr     	jmp     addysp
001009r 1               
001009r 1               .endproc
001009r 1               
001009r 1               ; ---------------------------------------------------------------
001009r 1               ; int __near__ getHex (f) int *f;
001009r 1               ; ---------------------------------------------------------------
001009r 1               
001009r 1               .segment	"CODE"
001009r 1               
001009r 1               .proc	_getHex: near
001009r 1               
001009r 1               .segment	"CODE"
001009r 1               
001009r 1  20 rr rr     	jsr     pushax
00100Cr 1  20 rr rr     	jsr     decsp2
00100Fr 1  20 rr rr     	jsr     push0
001012r 1  A0 05        	ldy     #$05
001014r 1  20 rr rr     	jsr     ldaxysp
001017r 1  85 rr        	sta     ptr1
001019r 1  86 rr        	stx     ptr1+1
00101Br 1  A9 00        	lda     #$00
00101Dr 1  92 rr        	sta     (ptr1)
00101Fr 1  A0 01        	ldy     #$01
001021r 1  91 rr        	sta     (ptr1),y
001023r 1  AD rr rr     	lda     _pc+1
001026r 1  85 rr        	sta     ptr1+1
001028r 1  AD rr rr     	lda     _pc
00102Br 1  85 rr        	sta     ptr1
00102Dr 1  A2 00        	ldx     #$00
00102Fr 1  B2 rr        	lda     (ptr1)
001031r 1  C8           	iny
001032r 1  20 rr rr     	jsr     staxysp
001035r 1  4C rr rr     	jmp     L0022
001038r 1  20 rr rr     L0002:	jsr     ldax0sp
00103Br 1  20 rr rr     	jsr     aslax4
00103Er 1  85 rr        	sta     ptr1
001040r 1  86 rr        	stx     ptr1+1
001042r 1  A0 03        	ldy     #$03
001044r 1  20 rr rr     	jsr     ldaxysp
001047r 1  C9 41        	cmp     #$41
001049r 1  8A           	txa
00104Ar 1  E9 00        	sbc     #$00
00104Cr 1  50 02        	bvc     L0013
00104Er 1  49 80        	eor     #$80
001050r 1  10 0C        L0013:	bpl     L0014
001052r 1  A0 03        	ldy     #$03
001054r 1  20 rr rr     	jsr     ldaxysp
001057r 1  A0 30        	ldy     #$30
001059r 1  20 rr rr     	jsr     decaxy
00105Cr 1  80 28        	bra     L0015
00105Er 1  A0 03        L0014:	ldy     #$03
001060r 1  20 rr rr     	jsr     ldaxysp
001063r 1  C9 61        	cmp     #$61
001065r 1  8A           	txa
001066r 1  E9 00        	sbc     #$00
001068r 1  50 02        	bvc     L0016
00106Ar 1  49 80        	eor     #$80
00106Cr 1  10 09        L0016:	bpl     L0017
00106Er 1  A0 03        	ldy     #$03
001070r 1  20 rr rr     	jsr     ldaxysp
001073r 1  A0 41        	ldy     #$41
001075r 1  80 07        	bra     L001E
001077r 1  A0 03        L0017:	ldy     #$03
001079r 1  20 rr rr     	jsr     ldaxysp
00107Cr 1  A0 61        	ldy     #$61
00107Er 1  20 rr rr     L001E:	jsr     decaxy
001081r 1  A0 0A        	ldy     #$0A
001083r 1  20 rr rr     	jsr     incaxy
001086r 1  18           L0015:	clc
001087r 1  65 rr        	adc     ptr1
001089r 1  48           	pha
00108Ar 1  8A           	txa
00108Br 1  65 rr        	adc     ptr1+1
00108Dr 1  AA           	tax
00108Er 1  68           	pla
00108Fr 1  20 rr rr     	jsr     stax0sp
001092r 1  EE rr rr     	inc     _pc
001095r 1  D0 03        	bne     L0019
001097r 1  EE rr rr     	inc     _pc+1
00109Ar 1  AD rr rr     L0019:	lda     _pc+1
00109Dr 1  85 rr        	sta     ptr1+1
00109Fr 1  AD rr rr     	lda     _pc
0010A2r 1  85 rr        	sta     ptr1
0010A4r 1  A2 00        	ldx     #$00
0010A6r 1  B2 rr        	lda     (ptr1)
0010A8r 1  A0 02        	ldy     #$02
0010AAr 1  20 rr rr     	jsr     staxysp
0010ADr 1  A0 05        	ldy     #$05
0010AFr 1  20 rr rr     	jsr     ldaxysp
0010B2r 1  85 rr        	sta     ptr1
0010B4r 1  86 rr        	stx     ptr1+1
0010B6r 1  A9 01        	lda     #$01
0010B8r 1  92 rr        	sta     (ptr1)
0010BAr 1  A8           	tay
0010BBr 1  3A           	dea
0010BCr 1  91 rr        	sta     (ptr1),y
0010BEr 1  A9 30        L0022:	lda     #$30
0010C0r 1  20 rr rr     	jsr     pusha0
0010C3r 1  A0 05        	ldy     #$05
0010C5r 1  20 rr rr     	jsr     ldaxysp
0010C8r 1  20 rr rr     	jsr     tosicmp
0010CBr 1  F0 02        	beq     L001F
0010CDr 1  10 13        	bpl     L0005
0010CFr 1  A0 03        L001F:	ldy     #$03
0010D1r 1  20 rr rr     	jsr     ldaxysp
0010D4r 1  C9 3A        	cmp     #$3A
0010D6r 1  8A           	txa
0010D7r 1  E9 00        	sbc     #$00
0010D9r 1  50 02        	bvc     L0006
0010DBr 1  49 80        	eor     #$80
0010DDr 1  10 03 4C rr  L0006:	jmi     L0002
0010E1r 1  rr           
0010E2r 1  A9 41        L0005:	lda     #$41
0010E4r 1  20 rr rr     	jsr     pusha0
0010E7r 1  A0 05        	ldy     #$05
0010E9r 1  20 rr rr     	jsr     ldaxysp
0010ECr 1  20 rr rr     	jsr     tosicmp
0010EFr 1  F0 02        	beq     L0020
0010F1r 1  10 13        	bpl     L000A
0010F3r 1  A0 03        L0020:	ldy     #$03
0010F5r 1  20 rr rr     	jsr     ldaxysp
0010F8r 1  C9 47        	cmp     #$47
0010FAr 1  8A           	txa
0010FBr 1  E9 00        	sbc     #$00
0010FDr 1  50 02        	bvc     L000B
0010FFr 1  49 80        	eor     #$80
001101r 1  10 03 4C rr  L000B:	jmi     L0002
001105r 1  rr           
001106r 1  A9 61        L000A:	lda     #$61
001108r 1  20 rr rr     	jsr     pusha0
00110Br 1  A0 05        	ldy     #$05
00110Dr 1  20 rr rr     	jsr     ldaxysp
001110r 1  20 rr rr     	jsr     tosicmp
001113r 1  F0 02        	beq     L0021
001115r 1  10 13        	bpl     L001D
001117r 1  A0 03        L0021:	ldy     #$03
001119r 1  20 rr rr     	jsr     ldaxysp
00111Cr 1  C9 67        	cmp     #$67
00111Er 1  8A           	txa
00111Fr 1  E9 00        	sbc     #$00
001121r 1  50 02        	bvc     L000F
001123r 1  49 80        	eor     #$80
001125r 1  10 03 4C rr  L000F:	jmi     L0002
001129r 1  rr           
00112Ar 1  20 rr rr     L001D:	jsr     ldax0sp
00112Dr 1  4C rr rr     	jmp     incsp6
001130r 1               
001130r 1               .endproc
001130r 1               
001130r 1               ; ---------------------------------------------------------------
001130r 1               ; void __near__ memmove (void *dest, const void *src, int n)
001130r 1               ; ---------------------------------------------------------------
001130r 1               
001130r 1               .segment	"CODE"
001130r 1               
001130r 1               .proc	_memmove: near
001130r 1               
001130r 1               .segment	"CODE"
001130r 1               
001130r 1  20 rr rr     	jsr     pushax
001133r 1  20 rr rr     	jsr     decsp4
001136r 1  A0 09        	ldy     #$09
001138r 1  20 rr rr     	jsr     ldaxysp
00113Br 1  38           	sec
00113Cr 1  A0 06        	ldy     #$06
00113Er 1  F1 rr        	sbc     (sp),y
001140r 1  85 rr        	sta     tmp1
001142r 1  8A           	txa
001143r 1  C8           	iny
001144r 1  F1 rr        	sbc     (sp),y
001146r 1  05 rr        	ora     tmp1
001148r 1  F0 02        	beq     L000A
00114Ar 1  B0 4C        	bcs     L0002
00114Cr 1  A0 09        L000A:	ldy     #$09
00114Er 1  20 rr rr     	jsr     ldaxysp
001151r 1  A0 02        	ldy     #$02
001153r 1  20 rr rr     	jsr     staxysp
001156r 1  A0 07        	ldy     #$07
001158r 1  20 rr rr     	jsr     ldaxysp
00115Br 1  20 rr rr     	jsr     stax0sp
00115Er 1  80 24        	bra     L0005
001160r 1  A0 03        L0003:	ldy     #$03
001162r 1  20 rr rr     	jsr     ldaxysp
001165r 1  85 rr        	sta     sreg
001167r 1  86 rr        	stx     sreg+1
001169r 1  20 rr rr     	jsr     ldax0sp
00116Cr 1  85 rr        	sta     ptr1
00116Er 1  86 rr        	stx     ptr1+1
001170r 1  B2 rr        	lda     (ptr1)
001172r 1  92 rr        	sta     (sreg)
001174r 1  A0 02        	ldy     #$02
001176r 1  A2 00        	ldx     #$00
001178r 1  A9 01        	lda     #$01
00117Ar 1  20 rr rr     	jsr     addeqysp
00117Dr 1  A2 00        	ldx     #$00
00117Fr 1  A9 01        	lda     #$01
001181r 1  20 rr rr     	jsr     addeq0sp
001184r 1  A0 05        L0005:	ldy     #$05
001186r 1  B1 rr        	lda     (sp),y
001188r 1  88           	dey
001189r 1  11 rr        	ora     (sp),y
00118Br 1  08           	php
00118Cr 1  A2 00        	ldx     #$00
00118Er 1  A9 01        	lda     #$01
001190r 1  20 rr rr     	jsr     subeqysp
001193r 1  28           	plp
001194r 1  D0 CA        	bne     L0003
001196r 1  80 54        	bra     L0008
001198r 1  A0 09        L0002:	ldy     #$09
00119Ar 1  20 rr rr     	jsr     ldaxysp
00119Dr 1  A0 02        	ldy     #$02
00119Fr 1  20 rr rr     	jsr     staxysp
0011A2r 1  A0 05        	ldy     #$05
0011A4r 1  20 rr rr     	jsr     ldaxysp
0011A7r 1  A0 02        	ldy     #$02
0011A9r 1  20 rr rr     	jsr     addeqysp
0011ACr 1  A0 07        	ldy     #$07
0011AEr 1  20 rr rr     	jsr     ldaxysp
0011B1r 1  20 rr rr     	jsr     stax0sp
0011B4r 1  A0 05        	ldy     #$05
0011B6r 1  20 rr rr     	jsr     ldaxysp
0011B9r 1  20 rr rr     	jsr     addeq0sp
0011BCr 1  80 1C        	bra     L0009
0011BEr 1  A2 00        L0007:	ldx     #$00
0011C0r 1  A9 01        	lda     #$01
0011C2r 1  A0 02        	ldy     #$02
0011C4r 1  20 rr rr     	jsr     subeqysp
0011C7r 1  85 rr        	sta     sreg
0011C9r 1  86 rr        	stx     sreg+1
0011CBr 1  A2 00        	ldx     #$00
0011CDr 1  A9 01        	lda     #$01
0011CFr 1  20 rr rr     	jsr     subeq0sp
0011D2r 1  85 rr        	sta     ptr1
0011D4r 1  86 rr        	stx     ptr1+1
0011D6r 1  B2 rr        	lda     (ptr1)
0011D8r 1  92 rr        	sta     (sreg)
0011DAr 1  A0 05        L0009:	ldy     #$05
0011DCr 1  B1 rr        	lda     (sp),y
0011DEr 1  88           	dey
0011DFr 1  11 rr        	ora     (sp),y
0011E1r 1  08           	php
0011E2r 1  A2 00        	ldx     #$00
0011E4r 1  A9 01        	lda     #$01
0011E6r 1  20 rr rr     	jsr     subeqysp
0011E9r 1  28           	plp
0011EAr 1  D0 D2        	bne     L0007
0011ECr 1  A0 0A        L0008:	ldy     #$0A
0011EEr 1  4C rr rr     	jmp     addysp
0011F1r 1               
0011F1r 1               .endproc
0011F1r 1               
0011F1r 1               ; ---------------------------------------------------------------
0011F1r 1               ; void __near__ strcpy (unsigned char *p1, unsigned char *p2)
0011F1r 1               ; ---------------------------------------------------------------
0011F1r 1               
0011F1r 1               .segment	"CODE"
0011F1r 1               
0011F1r 1               .proc	_strcpy: near
0011F1r 1               
0011F1r 1               .segment	"CODE"
0011F1r 1               
0011F1r 1  20 rr rr     	jsr     pushax
0011F4r 1  20 rr rr     	jsr     decsp2
0011F7r 1  A9 00        	lda     #$00
0011F9r 1  92 rr        	sta     (sp)
0011FBr 1  80 3E        	bra     L0004
0011FDr 1  A0 01        L0002:	ldy     #$01
0011FFr 1  B1 rr        	lda     (sp),y
001201r 1  C9 22        	cmp     #$22
001203r 1  D0 08        	bne     L000B
001205r 1  B2 rr        	lda     (sp)
001207r 1  49 01        	eor     #$01
001209r 1  92 rr        	sta     (sp)
00120Br 1  A0 01        	ldy     #$01
00120Dr 1  B1 rr        L000B:	lda     (sp),y
00120Fr 1  C9 61        	cmp     #$61
001211r 1  90 10        	bcc     L0006
001213r 1  C9 7B        	cmp     #$7B
001215r 1  B0 0C        	bcs     L0006
001217r 1  B2 rr        	lda     (sp)
001219r 1  D0 08        	bne     L0006
00121Br 1  A0 01        	ldy     #$01
00121Dr 1  B1 rr        	lda     (sp),y
00121Fr 1  29 DF        	and     #$DF
001221r 1  91 rr        	sta     (sp),y
001223r 1  A0 05        L0006:	ldy     #$05
001225r 1  20 rr rr     	jsr     ldaxysp
001228r 1  85 rr        	sta     ptr1
00122Ar 1  86 rr        	stx     ptr1+1
00122Cr 1  A0 01        	ldy     #$01
00122Er 1  B1 rr        	lda     (sp),y
001230r 1  92 rr        	sta     (ptr1)
001232r 1  A0 04        	ldy     #$04
001234r 1  A2 00        	ldx     #$00
001236r 1  A9 01        	lda     #$01
001238r 1  20 rr rr     	jsr     addeqysp
00123Br 1  A0 03        L0004:	ldy     #$03
00123Dr 1  20 rr rr     	jsr     ldaxysp
001240r 1  85 rr        	sta     ptr1
001242r 1  86 rr        	stx     ptr1+1
001244r 1  B2 rr        	lda     (ptr1)
001246r 1  A0 01        	ldy     #$01
001248r 1  91 rr        	sta     (sp),y
00124Ar 1  C9 00        	cmp     #$00
00124Cr 1  20 rr rr     	jsr     boolne
00124Fr 1  08           	php
001250r 1  C8           	iny
001251r 1  A9 01        	lda     #$01
001253r 1  20 rr rr     	jsr     addeqysp
001256r 1  28           	plp
001257r 1  D0 A4        	bne     L0002
001259r 1  A0 05        	ldy     #$05
00125Br 1  20 rr rr     	jsr     ldaxysp
00125Er 1  85 rr        	sta     ptr1
001260r 1  86 rr        	stx     ptr1+1
001262r 1  A9 00        	lda     #$00
001264r 1  92 rr        	sta     (ptr1)
001266r 1  4C rr rr     	jmp     incsp6
001269r 1               
001269r 1               .endproc
001269r 1               
001269r 1               ; ---------------------------------------------------------------
001269r 1               ; void __near__ __cdecl__ main (unsigned char st_flg)
001269r 1               ; ---------------------------------------------------------------
001269r 1               
001269r 1               .segment	"CODE"
001269r 1               
001269r 1               .proc	_main: near
001269r 1               
001269r 1               .segment	"CODE"
001269r 1               
001269r 1  48           	pha
00126Ar 1               
00126Ar 1  20 rr rr     	jsr     decsp6
00126Dr 1               ;	ldy     #$06
00126Dr 1               ;	lda     (sp),y
00126Dr 1               
00126Dr 1  68           	pla
00126Er 1               
00126Er 1  D0 27        	bne     L0002
001270r 1               
001270r 1  A2 19        	ldx     #$19
001272r 1  A9 66        	lda     #$66
001274r 1  20 rr rr     	jsr     _srand
001277r 1  A9 rr        	lda     #>(_text_buf)
001279r 1  8D rr rr     	sta     _var+122+1
00127Cr 1  A9 rr        	lda     #<(_text_buf)
00127Er 1  8D rr rr     	sta     _var+122
001281r 1  A2 7F        	ldx     #$7F
001283r 1  A9 FF        	lda     #$FF
001285r 1  8D rr rr     	sta     _var+84
001288r 1  8E rr rr     	stx     _var+84+1
00128Br 1  20 rr rr     	jsr     _newText1
00128Er 1  AD rr rr     	lda     _open_msg
001291r 1  AE rr rr     	ldx     _open_msg+1
001294r 1  20 rr rr     	jsr     _c_puts
001297r 1  AD rr rr     L0002:	lda     _rdy_msg
00129Ar 1  AE rr rr     	ldx     _rdy_msg+1
00129Dr 1  20 rr rr     	jsr     _c_puts
0012A0r 1  A9 FF        L0006:	lda     #$FF
0012A2r 1  8D rr rr     	sta     _sp
0012A5r 1  8D rr rr     	sta     _sp+1
0012A8r 1  9C rr rr     	stz     _lno
0012ABr 1  9C rr rr     	stz     _lno+1
0012AEr 1  A9 rr        	lda     #<(_lin)
0012B0r 1  A2 rr        	ldx     #>(_lin)
0012B2r 1  20 rr rr     	jsr     _c_gets
0012B5r 1  20 rr rr     	jsr     stax0sp
0012B8r 1  18           	clc
0012B9r 1  69 rr        	adc     #<(_lin)
0012BBr 1  A8           	tay
0012BCr 1  8A           	txa
0012BDr 1  69 rr        	adc     #>(_lin)
0012BFr 1  AA           	tax
0012C0r 1  98           	tya
0012C1r 1  1A           	ina
0012C2r 1  D0 01        	bne     L0007
0012C4r 1  E8           	inx
0012C5r 1  85 rr        L0007:	sta     ptr1
0012C7r 1  86 rr        	stx     ptr1+1
0012C9r 1  A9 80        	lda     #$80
0012CBr 1  92 rr        	sta     (ptr1)
0012CDr 1  A9 rr        	lda     #>(_lin)
0012CFr 1  8D rr rr     	sta     _pc+1
0012D2r 1  A9 rr        	lda     #<(_lin)
0012D4r 1  8D rr rr     	sta     _pc
0012D7r 1  20 rr rr     	jsr     _skipBlank
0012DAr 1  A9 02        	lda     #$02
0012DCr 1  20 rr rr     	jsr     leaa0sp
0012DFr 1  20 rr rr     	jsr     _getNum
0012E2r 1  A0 04        	ldy     #$04
0012E4r 1  20 rr rr     	jsr     staxysp
0012E7r 1  A0 02        	ldy     #$02
0012E9r 1  B1 rr        	lda     (sp),y
0012EBr 1  C8           	iny
0012ECr 1  11 rr        	ora     (sp),y
0012EEr 1  D0 08        	bne     L0008
0012F0r 1  20 rr rr     	jsr     _exqt
0012F3r 1  20 rr rr     	jsr     _newline
0012F6r 1  80 9F        	bra     L0002
0012F8r 1  A0 05        L0008:	ldy     #$05
0012FAr 1  20 rr rr     	jsr     ldaxysp
0012FDr 1  20 rr rr     	jsr     _edit
001300r 1  80 9E        	bra     L0006
001302r 1               
001302r 1               .endproc
001302r 1               
001302r 1               ; ---------------------------------------------------------------
001302r 1               ; unsigned char *__near__ skipLine (p) unsigned char *p;
001302r 1               ; ---------------------------------------------------------------
001302r 1               
001302r 1               .segment	"CODE"
001302r 1               
001302r 1               .proc	_skipLine: near
001302r 1               
001302r 1               .segment	"CODE"
001302r 1               
001302r 1  20 rr rr     	jsr     pushax
001305r 1  20 rr rr     L0002:	jsr     ldax0sp
001308r 1  85 rr        	sta     ptr1
00130Ar 1  86 rr        	stx     ptr1+1
00130Cr 1  B2 rr        	lda     (ptr1)
00130Er 1  F0 09        	beq     L0003
001310r 1  A2 00        	ldx     #$00
001312r 1  A9 01        	lda     #$01
001314r 1  20 rr rr     	jsr     addeq0sp
001317r 1  80 EC        	bra     L0002
001319r 1  20 rr rr     L0003:	jsr     ldax0sp
00131Cr 1  1A           	ina
00131Dr 1  D0 01        	bne     L0001
00131Fr 1  E8           	inx
001320r 1  4C rr rr     L0001:	jmp     incsp2
001323r 1               
001323r 1               .endproc
001323r 1               
001323r 1               ; ---------------------------------------------------------------
001323r 1               ; unsigned char *__near__ searchLine (n, f) int n; int *f;
001323r 1               ; ---------------------------------------------------------------
001323r 1               
001323r 1               .segment	"CODE"
001323r 1               
001323r 1               .proc	_searchLine: near
001323r 1               
001323r 1               .segment	"CODE"
001323r 1               
001323r 1  20 rr rr     	jsr     pushax
001326r 1  20 rr rr     	jsr     decsp4
001329r 1  AD rr rr     	lda     _var+122
00132Cr 1  AE rr rr     	ldx     _var+122+1
00132Fr 1  A0 02        L000E:	ldy     #$02
001331r 1  20 rr rr     	jsr     staxysp
001334r 1  85 rr        	sta     ptr1
001336r 1  86 rr        	stx     ptr1+1
001338r 1  B2 rr        	lda     (ptr1)
00133Ar 1  29 80        	and     #$80
00133Cr 1  D0 61        	bne     L0003
00133Er 1  A0 03        	ldy     #$03
001340r 1  20 rr rr     	jsr     ldaxysp
001343r 1  85 rr        	sta     ptr1
001345r 1  86 rr        	stx     ptr1+1
001347r 1  B2 rr        	lda     (ptr1)
001349r 1  85 rr        	sta     sreg+1
00134Br 1  A0 03        	ldy     #$03
00134Dr 1  20 rr rr     	jsr     ldaxysp
001350r 1  1A           	ina
001351r 1  D0 01        	bne     L0006
001353r 1  E8           	inx
001354r 1  85 rr        L0006:	sta     ptr1
001356r 1  86 rr        	stx     ptr1+1
001358r 1  B2 rr        	lda     (ptr1)
00135Ar 1  A6 rr        	ldx     sreg+1
00135Cr 1  20 rr rr     	jsr     stax0sp
00135Fr 1  A0 07        	ldy     #$07
001361r 1  20 rr rr     	jsr     ldaxysp
001364r 1  D2 rr        	cmp     (sp)
001366r 1  D0 18        	bne     L0007
001368r 1  8A           	txa
001369r 1  A0 01        	ldy     #$01
00136Br 1  D1 rr        	cmp     (sp),y
00136Dr 1  D0 11        	bne     L0007
00136Fr 1  A0 05        	ldy     #$05
001371r 1  20 rr rr     	jsr     ldaxysp
001374r 1  85 rr        	sta     ptr1
001376r 1  86 rr        	stx     ptr1+1
001378r 1  A9 01        	lda     #$01
00137Ar 1  92 rr        	sta     (ptr1)
00137Cr 1  A8           	tay
00137Dr 1  3A           	dea
00137Er 1  80 2E        	bra     L000F
001380r 1  A0 07        L0007:	ldy     #$07
001382r 1  20 rr rr     	jsr     ldaxysp
001385r 1  D2 rr        	cmp     (sp)
001387r 1  8A           	txa
001388r 1  A0 01        	ldy     #$01
00138Ar 1  F1 rr        	sbc     (sp),y
00138Cr 1  50 02        	bvc     L000A
00138Er 1  49 80        	eor     #$80
001390r 1  30 0D        L000A:	bmi     L0003
001392r 1  A0 03        	ldy     #$03
001394r 1  20 rr rr     	jsr     ldaxysp
001397r 1  20 rr rr     	jsr     incax2
00139Ar 1  20 rr rr     	jsr     _skipLine
00139Dr 1  80 90        	bra     L000E
00139Fr 1  A0 05        L0003:	ldy     #$05
0013A1r 1  20 rr rr     	jsr     ldaxysp
0013A4r 1  85 rr        	sta     ptr1
0013A6r 1  86 rr        	stx     ptr1+1
0013A8r 1  A9 00        	lda     #$00
0013AAr 1  92 rr        	sta     (ptr1)
0013ACr 1  A0 01        	ldy     #$01
0013AEr 1  91 rr        L000F:	sta     (ptr1),y
0013B0r 1  A0 03        	ldy     #$03
0013B2r 1  20 rr rr     	jsr     ldaxysp
0013B5r 1  4C rr rr     	jmp     incsp8
0013B8r 1               
0013B8r 1               .endproc
0013B8r 1               
0013B8r 1               ; ---------------------------------------------------------------
0013B8r 1               ; int __near__ g_decStr (unsigned char *buf, unsigned int num)
0013B8r 1               ; ---------------------------------------------------------------
0013B8r 1               
0013B8r 1               .segment	"CODE"
0013B8r 1               
0013B8r 1               .proc	_g_decStr: near
0013B8r 1               
0013B8r 1               .segment	"CODE"
0013B8r 1               
0013B8r 1  20 rr rr     	jsr     pushax
0013BBr 1  20 rr rr     	jsr     decsp2
0013BEr 1  A2 00        	ldx     #$00
0013C0r 1  8A           	txa
0013C1r 1  20 rr rr     	jsr     stax0sp
0013C4r 1  A0 07        L0002:	ldy     #$07
0013C6r 1  20 rr rr     	jsr     pushwysp
0013C9r 1  A0 07        	ldy     #$07
0013CBr 1  20 rr rr     	jsr     pushwysp
0013CEr 1  A9 0A        	lda     #$0A
0013D0r 1  20 rr rr     	jsr     tosumoda0
0013D3r 1  09 30        	ora     #$30
0013D5r 1  A0 00        	ldy     #$00
0013D7r 1  20 rr rr     	jsr     staspidx
0013DAr 1  A0 04        	ldy     #$04
0013DCr 1  A2 00        	ldx     #$00
0013DEr 1  A9 01        	lda     #$01
0013E0r 1  20 rr rr     	jsr     addeqysp
0013E3r 1  A0 05        	ldy     #$05
0013E5r 1  20 rr rr     	jsr     pushwysp
0013E8r 1  A9 0A        	lda     #$0A
0013EAr 1  20 rr rr     	jsr     tosudiva0
0013EDr 1  A0 02        	ldy     #$02
0013EFr 1  20 rr rr     	jsr     staxysp
0013F2r 1  A2 00        	ldx     #$00
0013F4r 1  A9 01        	lda     #$01
0013F6r 1  20 rr rr     	jsr     addeq0sp
0013F9r 1  A0 02        	ldy     #$02
0013FBr 1  B1 rr        	lda     (sp),y
0013FDr 1  C8           	iny
0013FEr 1  11 rr        	ora     (sp),y
001400r 1  D0 C2        	bne     L0002
001402r 1  A0 05        	ldy     #$05
001404r 1  20 rr rr     	jsr     ldaxysp
001407r 1  85 rr        	sta     ptr1
001409r 1  86 rr        	stx     ptr1+1
00140Br 1  A9 00        	lda     #$00
00140Dr 1  92 rr        	sta     (ptr1)
00140Fr 1  20 rr rr     	jsr     ldax0sp
001412r 1  4C rr rr     	jmp     incsp6
001415r 1               
001415r 1               .endproc
001415r 1               
001415r 1               ; ---------------------------------------------------------------
001415r 1               ; void __near__ mk_dStr (unsigned char *d_buf, unsigned int num, int digit)
001415r 1               ; ---------------------------------------------------------------
001415r 1               
001415r 1               .segment	"CODE"
001415r 1               
001415r 1               .proc	_mk_dStr: near
001415r 1               
001415r 1               .segment	"CODE"
001415r 1               
001415r 1  20 rr rr     	jsr     pushax
001418r 1  A0 10        	ldy     #$10
00141Ar 1  20 rr rr     	jsr     subysp
00141Dr 1  A2 00        	ldx     #$00
00141Fr 1  8A           	txa
001420r 1  20 rr rr     	jsr     stax0sp
001423r 1  A0 13        	ldy     #$13
001425r 1  20 rr rr     	jsr     ldaxysp
001428r 1  8A           	txa
001429r 1  29 80        	and     #$80
00142Br 1  F0 18        	beq     L0002
00142Dr 1  A2 00        	ldx     #$00
00142Fr 1  A9 01        	lda     #$01
001431r 1  20 rr rr     	jsr     stax0sp
001434r 1  A0 13        	ldy     #$13
001436r 1  20 rr rr     	jsr     ldaxysp
001439r 1  20 rr rr     	jsr     complax
00143Cr 1  1A           	ina
00143Dr 1  D0 01        	bne     L0003
00143Fr 1  E8           	inx
001440r 1  A0 12        L0003:	ldy     #$12
001442r 1  20 rr rr     	jsr     staxysp
001445r 1  A9 08        L0002:	lda     #$08
001447r 1  20 rr rr     	jsr     leaa0sp
00144Ar 1  20 rr rr     	jsr     pushax
00144Dr 1  A0 15        	ldy     #$15
00144Fr 1  20 rr rr     	jsr     ldaxysp
001452r 1  20 rr rr     	jsr     _g_decStr
001455r 1  A0 02        	ldy     #$02
001457r 1  20 rr rr     	jsr     staxysp
00145Ar 1  A0 04        	ldy     #$04
00145Cr 1  20 rr rr     	jsr     staxysp
00145Fr 1  A0 01        	ldy     #$01
001461r 1  B1 rr        	lda     (sp),y
001463r 1  12 rr        	ora     (sp)
001465r 1  F0 08        	beq     L0004
001467r 1  C8           	iny
001468r 1  A2 00        	ldx     #$00
00146Ar 1  A9 01        	lda     #$01
00146Cr 1  20 rr rr     	jsr     addeqysp
00146Fr 1  A2 00        L0004:	ldx     #$00
001471r 1  8A           	txa
001472r 1  A0 06        	ldy     #$06
001474r 1  20 rr rr     	jsr     staxysp
001477r 1  80 28        	bra     L0007
001479r 1  A0 07        L0005:	ldy     #$07
00147Br 1  20 rr rr     	jsr     ldaxysp
00147Er 1  18           	clc
00147Fr 1  A0 14        	ldy     #$14
001481r 1  71 rr        	adc     (sp),y
001483r 1  85 rr        	sta     ptr1
001485r 1  8A           	txa
001486r 1  C8           	iny
001487r 1  71 rr        	adc     (sp),y
001489r 1  85 rr        	sta     ptr1+1
00148Br 1  A9 20        	lda     #$20
00148Dr 1  92 rr        	sta     (ptr1)
00148Fr 1  A0 06        	ldy     #$06
001491r 1  A2 00        	ldx     #$00
001493r 1  A9 01        	lda     #$01
001495r 1  20 rr rr     	jsr     addeqysp
001498r 1  A2 00        	ldx     #$00
00149Ar 1  A9 01        	lda     #$01
00149Cr 1  A0 10        	ldy     #$10
00149Er 1  20 rr rr     	jsr     subeqysp
0014A1r 1  A0 13        L0007:	ldy     #$13
0014A3r 1  20 rr rr     	jsr     pushwysp
0014A6r 1  A0 05        	ldy     #$05
0014A8r 1  20 rr rr     	jsr     ldaxysp
0014ABr 1  20 rr rr     	jsr     tosicmp
0014AEr 1  F0 02        	beq     L000C
0014B0r 1  10 C7        	bpl     L0005
0014B2r 1  A0 01        L000C:	ldy     #$01
0014B4r 1  B1 rr        	lda     (sp),y
0014B6r 1  12 rr        	ora     (sp)
0014B8r 1  F0 62        	beq     L000B
0014BAr 1  A0 07        	ldy     #$07
0014BCr 1  20 rr rr     	jsr     ldaxysp
0014BFr 1  18           	clc
0014C0r 1  A0 14        	ldy     #$14
0014C2r 1  71 rr        	adc     (sp),y
0014C4r 1  85 rr        	sta     ptr1
0014C6r 1  8A           	txa
0014C7r 1  C8           	iny
0014C8r 1  71 rr        	adc     (sp),y
0014CAr 1  85 rr        	sta     ptr1+1
0014CCr 1  A9 2D        	lda     #$2D
0014CEr 1  92 rr        	sta     (ptr1)
0014D0r 1  A0 06        	ldy     #$06
0014D2r 1  A2 00        	ldx     #$00
0014D4r 1  A9 01        	lda     #$01
0014D6r 1  20 rr rr     	jsr     addeqysp
0014D9r 1  80 41        	bra     L000B
0014DBr 1  A0 07        L0009:	ldy     #$07
0014DDr 1  20 rr rr     	jsr     ldaxysp
0014E0r 1  18           	clc
0014E1r 1  A0 14        	ldy     #$14
0014E3r 1  71 rr        	adc     (sp),y
0014E5r 1  48           	pha
0014E6r 1  8A           	txa
0014E7r 1  C8           	iny
0014E8r 1  71 rr        	adc     (sp),y
0014EAr 1  AA           	tax
0014EBr 1  68           	pla
0014ECr 1  20 rr rr     	jsr     pushax
0014EFr 1  A0 07        	ldy     #$07
0014F1r 1  20 rr rr     	jsr     ldaxysp
0014F4r 1  20 rr rr     	jsr     decax1
0014F7r 1  A0 0A        	ldy     #$0A
0014F9r 1  20 rr rr     	jsr     incaxy
0014FCr 1  20 rr rr     	jsr     leaaxsp
0014FFr 1  85 rr        	sta     ptr1
001501r 1  86 rr        	stx     ptr1+1
001503r 1  A0 00        	ldy     #$00
001505r 1  B2 rr        	lda     (ptr1)
001507r 1  20 rr rr     	jsr     staspidx
00150Ar 1  A0 06        	ldy     #$06
00150Cr 1  A2 00        	ldx     #$00
00150Er 1  A9 01        	lda     #$01
001510r 1  20 rr rr     	jsr     addeqysp
001513r 1  A2 00        	ldx     #$00
001515r 1  A9 01        	lda     #$01
001517r 1  A0 04        	ldy     #$04
001519r 1  20 rr rr     	jsr     subeqysp
00151Cr 1  A0 05        L000B:	ldy     #$05
00151Er 1  B1 rr        	lda     (sp),y
001520r 1  88           	dey
001521r 1  11 rr        	ora     (sp),y
001523r 1  D0 B6        	bne     L0009
001525r 1  A0 07        	ldy     #$07
001527r 1  20 rr rr     	jsr     ldaxysp
00152Ar 1  18           	clc
00152Br 1  A0 14        	ldy     #$14
00152Dr 1  71 rr        	adc     (sp),y
00152Fr 1  85 rr        	sta     ptr1
001531r 1  8A           	txa
001532r 1  C8           	iny
001533r 1  71 rr        	adc     (sp),y
001535r 1  85 rr        	sta     ptr1+1
001537r 1  A9 00        	lda     #$00
001539r 1  92 rr        	sta     (ptr1)
00153Br 1  C8           	iny
00153Cr 1  4C rr rr     	jmp     addysp
00153Fr 1               
00153Fr 1               .endproc
00153Fr 1               
00153Fr 1               ; ---------------------------------------------------------------
00153Fr 1               ; void __near__ g_hexStr (unsigned char *buf, unsigned short num, int cnt)
00153Fr 1               ; ---------------------------------------------------------------
00153Fr 1               
00153Fr 1               .segment	"CODE"
00153Fr 1               
00153Fr 1               .proc	_g_hexStr: near
00153Fr 1               
00153Fr 1               .segment	"CODE"
00153Fr 1               
00153Fr 1  20 rr rr     	jsr     pushax
001542r 1  20 rr rr     	jsr     decsp5
001545r 1  A0 06        	ldy     #$06
001547r 1  B1 rr        	lda     (sp),y
001549r 1  D0 0D        	bne     L0002
00154Br 1  88           	dey
00154Cr 1  B1 rr        	lda     (sp),y
00154Er 1  C9 04        	cmp     #$04
001550r 1  D0 06        	bne     L0002
001552r 1  A2 F0        	ldx     #$F0
001554r 1  A9 00        	lda     #$00
001556r 1  80 04        	bra     L000E
001558r 1  A2 00        L0002:	ldx     #$00
00155Ar 1  A9 F0        	lda     #$F0
00155Cr 1  20 rr rr     L000E:	jsr     stax0sp
00155Fr 1  A0 06        	ldy     #$06
001561r 1  20 rr rr     	jsr     ldaxysp
001564r 1  20 rr rr     	jsr     decax1
001567r 1  20 rr rr     	jsr     aslax2
00156Ar 1  A0 03        	ldy     #$03
00156Cr 1  20 rr rr     	jsr     staxysp
00156Fr 1  20 rr rr     L0005:	jsr     ldax0sp
001572r 1  A0 07        	ldy     #$07
001574r 1  31 rr        	and     (sp),y
001576r 1  85 rr        	sta     ptr1
001578r 1  8A           	txa
001579r 1  C8           	iny
00157Ar 1  31 rr        	and     (sp),y
00157Cr 1  85 rr        	sta     ptr1+1
00157Er 1  A0 03        	ldy     #$03
001580r 1  B1 rr        	lda     (sp),y
001582r 1  A8           	tay
001583r 1  A5 rr        	lda     ptr1
001585r 1  A6 rr        	ldx     ptr1+1
001587r 1  20 rr rr     	jsr     shraxy
00158Ar 1  A0 02        	ldy     #$02
00158Cr 1  91 rr        	sta     (sp),y
00158Er 1  20 rr rr     	jsr     ldax0sp
001591r 1  20 rr rr     	jsr     shrax4
001594r 1  20 rr rr     	jsr     stax0sp
001597r 1  A0 02        	ldy     #$02
001599r 1  B1 rr        	lda     (sp),y
00159Br 1  C9 0A        	cmp     #$0A
00159Dr 1  90 05        	bcc     L0010
00159Fr 1  18           	clc
0015A0r 1  A9 37        	lda     #$37
0015A2r 1  80 02        	bra     L000F
0015A4r 1  A9 30        L0010:	lda     #$30
0015A6r 1  71 rr        L000F:	adc     (sp),y
0015A8r 1  91 rr        	sta     (sp),y
0015AAr 1  A0 0A        	ldy     #$0A
0015ACr 1  20 rr rr     	jsr     ldaxysp
0015AFr 1  85 rr        	sta     ptr1
0015B1r 1  86 rr        	stx     ptr1+1
0015B3r 1  A0 02        	ldy     #$02
0015B5r 1  B1 rr        	lda     (sp),y
0015B7r 1  92 rr        	sta     (ptr1)
0015B9r 1  A0 09        	ldy     #$09
0015BBr 1  A2 00        	ldx     #$00
0015BDr 1  A9 01        	lda     #$01
0015BFr 1  20 rr rr     	jsr     addeqysp
0015C2r 1  A2 00        	ldx     #$00
0015C4r 1  A9 04        	lda     #$04
0015C6r 1  A0 03        	ldy     #$03
0015C8r 1  20 rr rr     	jsr     subeqysp
0015CBr 1  A0 04        	ldy     #$04
0015CDr 1  20 rr rr     	jsr     ldaxysp
0015D0r 1  8A           	txa
0015D1r 1  10 9C        	bpl     L0005
0015D3r 1  A0 0A        	ldy     #$0A
0015D5r 1  20 rr rr     	jsr     ldaxysp
0015D8r 1  85 rr        	sta     ptr1
0015DAr 1  86 rr        	stx     ptr1+1
0015DCr 1  A9 00        	lda     #$00
0015DEr 1  92 rr        	sta     (ptr1)
0015E0r 1  A0 0B        	ldy     #$0B
0015E2r 1  4C rr rr     	jmp     addysp
0015E5r 1               
0015E5r 1               .endproc
0015E5r 1               
0015E5r 1               ; ---------------------------------------------------------------
0015E5r 1               ; unsigned char *__near__ dispLine (p) unsigned char *p;
0015E5r 1               ; ---------------------------------------------------------------
0015E5r 1               
0015E5r 1               .segment	"CODE"
0015E5r 1               
0015E5r 1               .proc	_dispLine: near
0015E5r 1               
0015E5r 1               .segment	"CODE"
0015E5r 1               
0015E5r 1  20 rr rr     	jsr     pushax
0015E8r 1  A0 0A        	ldy     #$0A
0015EAr 1  20 rr rr     	jsr     subysp
0015EDr 1  A0 0B        	ldy     #$0B
0015EFr 1  20 rr rr     	jsr     ldaxysp
0015F2r 1  85 rr        	sta     ptr1
0015F4r 1  86 rr        	stx     ptr1+1
0015F6r 1  B2 rr        	lda     (ptr1)
0015F8r 1  85 rr        	sta     sreg+1
0015FAr 1  A0 0B        	ldy     #$0B
0015FCr 1  20 rr rr     	jsr     ldaxysp
0015FFr 1  1A           	ina
001600r 1  D0 01        	bne     L0002
001602r 1  E8           	inx
001603r 1  85 rr        L0002:	sta     ptr1
001605r 1  86 rr        	stx     ptr1+1
001607r 1  B2 rr        	lda     (ptr1)
001609r 1  A6 rr        	ldx     sreg+1
00160Br 1  A0 08        	ldy     #$08
00160Dr 1  20 rr rr     	jsr     staxysp
001610r 1  A0 0A        	ldy     #$0A
001612r 1  A2 00        	ldx     #$00
001614r 1  A9 02        	lda     #$02
001616r 1  20 rr rr     	jsr     addeqysp
001619r 1  A5 rr        	lda     sp
00161Br 1  A6 rr        	ldx     sp+1
00161Dr 1  20 rr rr     	jsr     pushax
001620r 1  A0 0D        	ldy     #$0D
001622r 1  20 rr rr     	jsr     pushwysp
001625r 1  A2 00        	ldx     #$00
001627r 1  A9 05        	lda     #$05
001629r 1  20 rr rr     	jsr     _mk_dStr
00162Cr 1  A5 rr        	lda     sp
00162Er 1  A6 rr        	ldx     sp+1
001630r 1  20 rr rr     	jsr     _c_puts
001633r 1  A0 0B        L0003:	ldy     #$0B
001635r 1  20 rr rr     	jsr     ldaxysp
001638r 1  85 rr        	sta     ptr1
00163Ar 1  86 rr        	stx     ptr1+1
00163Cr 1  B2 rr        	lda     (ptr1)
00163Er 1  F0 21        	beq     L0004
001640r 1  A0 0B        	ldy     #$0B
001642r 1  20 rr rr     	jsr     ldaxysp
001645r 1  85 rr        	sta     ptr1
001647r 1  86 rr        	stx     ptr1+1
001649r 1  A2 00        	ldx     #$00
00164Br 1  B2 rr        	lda     (ptr1)
00164Dr 1  85 rr        	sta     regsave
00164Fr 1  64 rr        	stz     regsave+1
001651r 1  A0 0A        	ldy     #$0A
001653r 1  A9 01        	lda     #$01
001655r 1  20 rr rr     	jsr     addeqysp
001658r 1  A5 rr        	lda     regsave
00165Ar 1  A6 rr        	ldx     regsave+1
00165Cr 1  20 rr rr     	jsr     _c_putch
00165Fr 1  80 D2        	bra     L0003
001661r 1  20 rr rr     L0004:	jsr     _newline
001664r 1  A0 0B        	ldy     #$0B
001666r 1  20 rr rr     	jsr     ldaxysp
001669r 1  1A           	ina
00166Ar 1  D0 01        	bne     L0001
00166Cr 1  E8           	inx
00166Dr 1  A0 0C        L0001:	ldy     #$0C
00166Fr 1  4C rr rr     	jmp     addysp
001672r 1               
001672r 1               .endproc
001672r 1               
001672r 1               ; ---------------------------------------------------------------
001672r 1               ; unsigned char __near__ skipAlpha (void)
001672r 1               ; ---------------------------------------------------------------
001672r 1               
001672r 1               .segment	"CODE"
001672r 1               
001672r 1               .proc	_skipAlpha: near
001672r 1               
001672r 1               .segment	"CODE"
001672r 1               
001672r 1  20 rr rr     	jsr     decsp1
001675r 1  AD rr rr     L0005:	lda     _pc+1
001678r 1  85 rr        	sta     ptr1+1
00167Ar 1  AD rr rr     	lda     _pc
00167Dr 1  85 rr        	sta     ptr1
00167Fr 1  B2 rr        	lda     (ptr1)
001681r 1  92 rr        	sta     (sp)
001683r 1  C9 41        	cmp     #$41
001685r 1  90 16        	bcc     L0012
001687r 1  A9 7A        	lda     #$7A
001689r 1  D2 rr        	cmp     (sp)
00168Br 1  90 10        	bcc     L0012
00168Dr 1  A9 5A        	lda     #$5A
00168Fr 1  D2 rr        	cmp     (sp)
001691r 1  B0 11        	bcs     L0006
001693r 1  A2 00        	ldx     #$00
001695r 1  B2 rr        	lda     (sp)
001697r 1  C9 61        	cmp     #$61
001699r 1  90 04        	bcc     L0015
00169Br 1  80 07        	bra     L0006
00169Dr 1  A2 00        L0012:	ldx     #$00
00169Fr 1  B2 rr        L0015:	lda     (sp)
0016A1r 1  4C rr rr     	jmp     incsp1
0016A4r 1  EE rr rr     L0006:	inc     _pc
0016A7r 1  D0 CC        	bne     L0005
0016A9r 1  EE rr rr     	inc     _pc+1
0016ACr 1  80 C7        	bra     L0005
0016AEr 1               
0016AEr 1               .endproc
0016AEr 1               
0016AEr 1               ; ---------------------------------------------------------------
0016AEr 1               ; void __near__ topOfLine (void)
0016AEr 1               ; ---------------------------------------------------------------
0016AEr 1               
0016AEr 1               .segment	"CODE"
0016AEr 1               
0016AEr 1               .proc	_topOfLine: near
0016AEr 1               
0016AEr 1               .segment	"CODE"
0016AEr 1               
0016AEr 1  20 rr rr     	jsr     decsp2
0016B1r 1  AD rr rr     L0002:	lda     _pc+1
0016B4r 1  85 rr        	sta     ptr1+1
0016B6r 1  AD rr rr     	lda     _pc
0016B9r 1  85 rr        	sta     ptr1
0016BBr 1  A2 00        	ldx     #$00
0016BDr 1  B2 rr        	lda     (ptr1)
0016BFr 1  20 rr rr     	jsr     stax0sp
0016C2r 1  EE rr rr     	inc     _pc
0016C5r 1  D0 03        	bne     L0003
0016C7r 1  EE rr rr     	inc     _pc+1
0016CAr 1  B2 rr        L0003:	lda     (sp)
0016CCr 1  29 80        	and     #$80
0016CEr 1  F0 04        	beq     L0004
0016D0r 1  8A           	txa
0016D1r 1  20 rr rr     	jsr     _w_boot
0016D4r 1  AD rr rr     L0004:	lda     _pc+1
0016D7r 1  85 rr        	sta     ptr1+1
0016D9r 1  AD rr rr     	lda     _pc
0016DCr 1  85 rr        	sta     ptr1
0016DEr 1  B2 rr        	lda     (ptr1)
0016E0r 1  8D rr rr     	sta     _lno
0016E3r 1  B2 rr        	lda     (sp)
0016E5r 1  8D rr rr     	sta     _lno+1
0016E8r 1  EE rr rr     	inc     _pc
0016EBr 1  D0 03        	bne     L0005
0016EDr 1  EE rr rr     	inc     _pc+1
0016F0r 1  AD rr rr     L0005:	lda     _pc+1
0016F3r 1  85 rr        	sta     ptr1+1
0016F5r 1  AD rr rr     	lda     _pc
0016F8r 1  85 rr        	sta     ptr1
0016FAr 1  B2 rr        	lda     (ptr1)
0016FCr 1  C9 20        	cmp     #$20
0016FEr 1  F0 11        	beq     L0006
001700r 1  AD rr rr     	lda     _pc
001703r 1  AE rr rr     	ldx     _pc+1
001706r 1  20 rr rr     	jsr     _skipLine
001709r 1  8D rr rr     	sta     _pc
00170Cr 1  8E rr rr     	stx     _pc+1
00170Fr 1  80 A0        	bra     L0002
001711r 1  4C rr rr     L0006:	jmp     incsp2
001714r 1               
001714r 1               .endproc
001714r 1               
001714r 1               ; ---------------------------------------------------------------
001714r 1               ; unsigned char __near__ c_isprint (unsigned char c)
001714r 1               ; ---------------------------------------------------------------
001714r 1               
001714r 1               .segment	"CODE"
001714r 1               
001714r 1               .proc	_c_isprint: near
001714r 1               
001714r 1               .segment	"CODE"
001714r 1               
001714r 1  20 rr rr     	jsr     pusha
001717r 1  B2 rr        	lda     (sp)
001719r 1  C9 20        	cmp     #$20
00171Br 1  A9 00        	lda     #$00
00171Dr 1  AA           	tax
00171Er 1  90 0C        	bcc     L0008
001720r 1  B2 rr        	lda     (sp)
001722r 1  C9 7F        	cmp     #$7F
001724r 1  90 04        	bcc     L0007
001726r 1  8A           	txa
001727r 1  4C rr rr     	jmp     incsp1
00172Ar 1  A9 01        L0007:	lda     #$01
00172Cr 1  4C rr rr     L0008:	jmp     incsp1
00172Fr 1               
00172Fr 1               .endproc
00172Fr 1               
00172Fr 1               ; ---------------------------------------------------------------
00172Fr 1               ; unsigned char __near__ c_isspace (unsigned char c)
00172Fr 1               ; ---------------------------------------------------------------
00172Fr 1               
00172Fr 1               .segment	"CODE"
00172Fr 1               
00172Fr 1               .proc	_c_isspace: near
00172Fr 1               
00172Fr 1               .segment	"CODE"
00172Fr 1               
00172Fr 1  20 rr rr     	jsr     pusha
001732r 1  B2 rr        	lda     (sp)
001734r 1  C9 20        	cmp     #$20
001736r 1  F0 15        	beq     L000C
001738r 1  A2 00        	ldx     #$00
00173Ar 1  B2 rr        	lda     (sp)
00173Cr 1  C9 0E        	cmp     #$0E
00173Er 1  B0 04        	bcs     L0008
001740r 1  C9 09        	cmp     #$09
001742r 1  B0 04        	bcs     L0009
001744r 1  8A           L0008:	txa
001745r 1  4C rr rr     	jmp     incsp1
001748r 1  A9 01        L0009:	lda     #$01
00174Ar 1  4C rr rr     	jmp     incsp1
00174Dr 1  A9 01        L000C:	lda     #$01
00174Fr 1  A2 00        	ldx     #$00
001751r 1  4C rr rr     	jmp     incsp1
001754r 1               
001754r 1               .endproc
001754r 1               
001754r 1               
