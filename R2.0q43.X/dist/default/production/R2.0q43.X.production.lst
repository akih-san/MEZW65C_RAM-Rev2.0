

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 16 20:44:40 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F47Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK7,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK9,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    66                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1,group=3
    77                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1,group=3
    78                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,group=3
    79                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1,group=3
    80                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1,group=3
   107                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=3
   109                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=3
   120                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1,group=3
   147                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1,group=1
   148                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1,group=1
   150                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1,group=1
   151                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1,group=1
   152                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1,group=1
   153                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1,group=3
   154                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1,group=3
   155                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1,group=3
   156                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1,group=3
   157                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1,group=3
   158                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1,group=2
   159                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1,group=2
   160                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1,group=2
   161                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1,group=2
   162                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1,group=2
   163                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1,group=2
   165                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1,group=1
   167                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1,group=3
   169                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1,group=3
   170                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1,group=3
   172                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1,group=2
   173                           	psect	text149,global,reloc=2,class=CODE,space=0,delta=1,group=2
   174                           	psect	text150,global,reloc=2,class=CODE,space=0,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,space=0,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,space=0,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,space=0,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,space=0,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,space=0,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,space=0,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,space=0,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,space=0,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,space=0,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,space=0,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,space=0,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,space=0,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,space=0,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,space=0,delta=1,group=2
   192                           	psect	text168,global,reloc=2,class=CODE,space=0,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,space=0,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,space=0,delta=1,group=2
   195                           	psect	text171,global,reloc=4,class=CODE,space=0,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,space=0,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,space=0,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   202   000000                     
   203                           ; Generated 23/02/2024 GMT
   204                           ; 
   205                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   206                           ; All rights reserved.
   207                           ; 
   208                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   209                           ; 
   210                           ; Redistribution and use in source and binary forms, with or without modification, are
   211                           ; permitted provided that the following conditions are met:
   212                           ; 
   213                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   214                           ;        conditions and the following disclaimer.
   215                           ; 
   216                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   217                           ;        of conditions and the following disclaimer in the documentation and/or other
   218                           ;        materials provided with the distribution. Publication is not required when
   219                           ;        this file is used in an embedded application.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F47Q43 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237   0004E0                     bsr             equ	1248
   238   0004E9                     fsr0            equ	1257
   239   0004EA                     fsr0h           equ	1258
   240   0004E9                     fsr0l           equ	1257
   241   0004E1                     fsr1            equ	1249
   242   0004E2                     fsr1h           equ	1250
   243   0004E1                     fsr1l           equ	1249
   244   0004D9                     fsr2            equ	1241
   245   0004DA                     fsr2h           equ	1242
   246   0004D9                     fsr2l           equ	1241
   247   0004EF                     indf0           equ	1263
   248   0004E7                     indf1           equ	1255
   249   0004DF                     indf2           equ	1247
   250   0004D6                     intcon          equ	1238
   251   000041                     nvmcon          equ	65
   252   0004F9                     pcl             equ	1273
   253   0004FA                     pclath          equ	1274
   254   0004FB                     pclatu          equ	1275
   255   0004EB                     plusw0          equ	1259
   256   0004E3                     plusw1          equ	1251
   257   0004DB                     plusw2          equ	1243
   258   0004ED                     postdec0        equ	1261
   259   0004E5                     postdec1        equ	1253
   260   0004DD                     postdec2        equ	1245
   261   0004EE                     postinc0        equ	1262
   262   0004E6                     postinc1        equ	1254
   263   0004DE                     postinc2        equ	1246
   264   0004EC                     preinc0         equ	1260
   265   0004E4                     preinc1         equ	1252
   266   0004DC                     preinc2         equ	1244
   267   0004F3                     prod            equ	1267
   268   0004F4                     prodh           equ	1268
   269   0004F3                     prodl           equ	1267
   270   0004D8                     status          equ	1240
   271   0004F5                     tablat          equ	1269
   272   0004F6                     tblptr          equ	1270
   273   0004F7                     tblptrh         equ	1271
   274   0004F6                     tblptrl         equ	1270
   275   0004F8                     tblptru         equ	1272
   276   0004FD                     tosl            equ	1277
   277   0004E8                     wreg            equ	1256
   278   000039                     CLKRCON         equ	57	;# 
   279   00003A                     CLKRCLK         equ	58	;# 
   280   000040                     NVMCON0         equ	64	;# 
   281   000041                     NVMCON1         equ	65	;# 
   282   000042                     NVMLOCK         equ	66	;# 
   283   000043                     NVMADR          equ	67	;# 
   284   000043                     NVMADRL         equ	67	;# 
   285   000044                     NVMADRH         equ	68	;# 
   286   000045                     NVMADRU         equ	69	;# 
   287   000046                     NVMDAT          equ	70	;# 
   288   000046                     NVMDATL         equ	70	;# 
   289   000047                     NVMDATH         equ	71	;# 
   290   000048                     VREGCON         equ	72	;# 
   291   000049                     BORCON          equ	73	;# 
   292   00004A                     HLVDCON0        equ	74	;# 
   293   00004B                     HLVDCON1        equ	75	;# 
   294   00004C                     ZCDCON          equ	76	;# 
   295   000060                     PMD0            equ	96	;# 
   296   000061                     PMD1            equ	97	;# 
   297   000063                     PMD3            equ	99	;# 
   298   000064                     PMD4            equ	100	;# 
   299   000065                     PMD5            equ	101	;# 
   300   000066                     PMD6            equ	102	;# 
   301   000067                     PMD7            equ	103	;# 
   302   000068                     PMD8            equ	104	;# 
   303   00006A                     MD1CON0         equ	106	;# 
   304   00006B                     MD1CON1         equ	107	;# 
   305   00006C                     MD1SRC          equ	108	;# 
   306   00006D                     MD1CARL         equ	109	;# 
   307   00006E                     MD1CARH         equ	110	;# 
   308   00006F                     CMOUT           equ	111	;# 
   309   000070                     CM1CON0         equ	112	;# 
   310   000071                     CM1CON1         equ	113	;# 
   311   000072                     CM1NCH          equ	114	;# 
   312   000073                     CM1PCH          equ	115	;# 
   313   000074                     CM2CON0         equ	116	;# 
   314   000075                     CM2CON1         equ	117	;# 
   315   000076                     CM2NCH          equ	118	;# 
   316   000077                     CM2PCH          equ	119	;# 
   317   000078                     WDTCON0         equ	120	;# 
   318   000079                     WDTCON1         equ	121	;# 
   319   00007A                     WDTPS           equ	122	;# 
   320   00007A                     WDTPSL          equ	122	;# 
   321   00007B                     WDTPSH          equ	123	;# 
   322   00007C                     WDTTMR          equ	124	;# 
   323   00007D                     DAC1DAT         equ	125	;# 
   324   00007D                     DAC1DATL        equ	125	;# 
   325   00007F                     DAC1CON         equ	127	;# 
   326   000080                     SPI1RXB         equ	128	;# 
   327   000081                     SPI1TXB         equ	129	;# 
   328   000082                     SPI1TCNT        equ	130	;# 
   329   000082                     SPI1TCNTL       equ	130	;# 
   330   000083                     SPI1TCNTH       equ	131	;# 
   331   000084                     SPI1CON0        equ	132	;# 
   332   000085                     SPI1CON1        equ	133	;# 
   333   000086                     SPI1CON2        equ	134	;# 
   334   000087                     SPI1STATUS      equ	135	;# 
   335   000088                     SPI1TWIDTH      equ	136	;# 
   336   000089                     SPI1BAUD        equ	137	;# 
   337   00008A                     SPI1INTF        equ	138	;# 
   338   00008B                     SPI1INTE        equ	139	;# 
   339   00008C                     SPI1CLK         equ	140	;# 
   340   00008D                     SPI2RXB         equ	141	;# 
   341   00008E                     SPI2TXB         equ	142	;# 
   342   00008F                     SPI2TCNT        equ	143	;# 
   343   00008F                     SPI2TCNTL       equ	143	;# 
   344   000090                     SPI2TCNTH       equ	144	;# 
   345   000091                     SPI2CON0        equ	145	;# 
   346   000092                     SPI2CON1        equ	146	;# 
   347   000093                     SPI2CON2        equ	147	;# 
   348   000094                     SPI2STATUS      equ	148	;# 
   349   000095                     SPI2TWIDTH      equ	149	;# 
   350   000096                     SPI2BAUD        equ	150	;# 
   351   000097                     SPI2INTF        equ	151	;# 
   352   000098                     SPI2INTE        equ	152	;# 
   353   000099                     SPI2CLK         equ	153	;# 
   354   0000AC                     ACTCON          equ	172	;# 
   355   0000AD                     OSCCON1         equ	173	;# 
   356   0000AE                     OSCCON2         equ	174	;# 
   357   0000AF                     OSCCON3         equ	175	;# 
   358   0000B0                     OSCTUNE         equ	176	;# 
   359   0000B1                     OSCFRQ          equ	177	;# 
   360   0000B1                     OSCFREQ         equ	177	;# 
   361   0000B2                     OSCSTAT         equ	178	;# 
   362   0000B2                     OSCSTAT1        equ	178	;# 
   363   0000B3                     OSCEN           equ	179	;# 
   364   0000B4                     PRLOCK          equ	180	;# 
   365   0000B5                     SCANPR          equ	181	;# 
   366   0000B6                     DMA1PR          equ	182	;# 
   367   0000B7                     DMA2PR          equ	183	;# 
   368   0000B8                     DMA3PR          equ	184	;# 
   369   0000B9                     DMA4PR          equ	185	;# 
   370   0000BA                     DMA5PR          equ	186	;# 
   371   0000BB                     DMA6PR          equ	187	;# 
   372   0000BE                     MAINPR          equ	190	;# 
   373   0000BF                     ISRPR           equ	191	;# 
   374   0000D4                     CLCDATA         equ	212	;# 
   375   0000D5                     CLCSELECT       equ	213	;# 
   376   0000D6                     CLCnCON         equ	214	;# 
   377   0000D7                     CLCnPOL         equ	215	;# 
   378   0000D8                     CLCnSEL0        equ	216	;# 
   379   0000D9                     CLCnSEL1        equ	217	;# 
   380   0000DA                     CLCnSEL2        equ	218	;# 
   381   0000DB                     CLCnSEL3        equ	219	;# 
   382   0000DC                     CLCnGLS0        equ	220	;# 
   383   0000DD                     CLCnGLS1        equ	221	;# 
   384   0000DE                     CLCnGLS2        equ	222	;# 
   385   0000DF                     CLCnGLS3        equ	223	;# 
   386   0000E8                     DMASELECT       equ	232	;# 
   387   0000E9                     DMAnBUF         equ	233	;# 
   388   0000EA                     DMAnDCNT        equ	234	;# 
   389   0000EA                     DMAnDCNTL       equ	234	;# 
   390   0000EB                     DMAnDCNTH       equ	235	;# 
   391   0000EC                     DMAnDPTR        equ	236	;# 
   392   0000EC                     DMAnDPTRL       equ	236	;# 
   393   0000ED                     DMAnDPTRH       equ	237	;# 
   394   0000EE                     DMAnDSZ         equ	238	;# 
   395   0000EE                     DMAnDSZL        equ	238	;# 
   396   0000EF                     DMAnDSZH        equ	239	;# 
   397   0000F0                     DMAnDSA         equ	240	;# 
   398   0000F0                     DMAnDSAL        equ	240	;# 
   399   0000F1                     DMAnDSAH        equ	241	;# 
   400   0000F2                     DMAnSCNT        equ	242	;# 
   401   0000F2                     DMAnSCNTL       equ	242	;# 
   402   0000F3                     DMAnSCNTH       equ	243	;# 
   403   0000F4                     DMAnSPTR        equ	244	;# 
   404   0000F4                     DMAnSPTRL       equ	244	;# 
   405   0000F5                     DMAnSPTRH       equ	245	;# 
   406   0000F6                     DMAnSPTRU       equ	246	;# 
   407   0000F7                     DMAnSSZ         equ	247	;# 
   408   0000F7                     DMAnSSZL        equ	247	;# 
   409   0000F8                     DMAnSSZH        equ	248	;# 
   410   0000F9                     DMAnSSA         equ	249	;# 
   411   0000F9                     DMAnSSAL        equ	249	;# 
   412   0000FA                     DMAnSSAH        equ	250	;# 
   413   0000FB                     DMAnSSAU        equ	251	;# 
   414   0000FC                     DMAnCON0        equ	252	;# 
   415   0000FD                     DMAnCON1        equ	253	;# 
   416   0000FE                     DMAnAIRQ        equ	254	;# 
   417   0000FF                     DMAnSIRQ        equ	255	;# 
   418   000200                     PPSLOCK         equ	512	;# 
   419   000201                     RA0PPS          equ	513	;# 
   420   000202                     RA1PPS          equ	514	;# 
   421   000203                     RA2PPS          equ	515	;# 
   422   000204                     RA3PPS          equ	516	;# 
   423   000205                     RA4PPS          equ	517	;# 
   424   000206                     RA5PPS          equ	518	;# 
   425   000207                     RA6PPS          equ	519	;# 
   426   000208                     RA7PPS          equ	520	;# 
   427   000209                     RB0PPS          equ	521	;# 
   428   00020A                     RB1PPS          equ	522	;# 
   429   00020B                     RB2PPS          equ	523	;# 
   430   00020C                     RB3PPS          equ	524	;# 
   431   00020D                     RB4PPS          equ	525	;# 
   432   00020E                     RB5PPS          equ	526	;# 
   433   00020F                     RB6PPS          equ	527	;# 
   434   000210                     RB7PPS          equ	528	;# 
   435   000211                     RC0PPS          equ	529	;# 
   436   000212                     RC1PPS          equ	530	;# 
   437   000213                     RC2PPS          equ	531	;# 
   438   000214                     RC3PPS          equ	532	;# 
   439   000215                     RC4PPS          equ	533	;# 
   440   000216                     RC5PPS          equ	534	;# 
   441   000217                     RC6PPS          equ	535	;# 
   442   000218                     RC7PPS          equ	536	;# 
   443   000219                     RD0PPS          equ	537	;# 
   444   00021A                     RD1PPS          equ	538	;# 
   445   00021B                     RD2PPS          equ	539	;# 
   446   00021C                     RD3PPS          equ	540	;# 
   447   00021D                     RD4PPS          equ	541	;# 
   448   00021E                     RD5PPS          equ	542	;# 
   449   00021F                     RD6PPS          equ	543	;# 
   450   000220                     RD7PPS          equ	544	;# 
   451   000221                     RE0PPS          equ	545	;# 
   452   000222                     RE1PPS          equ	546	;# 
   453   000223                     RE2PPS          equ	547	;# 
   454   00023E                     INT0PPS         equ	574	;# 
   455   00023F                     INT1PPS         equ	575	;# 
   456   000240                     INT2PPS         equ	576	;# 
   457   000241                     T0CKIPPS        equ	577	;# 
   458   000242                     T1CKIPPS        equ	578	;# 
   459   000243                     T1GPPS          equ	579	;# 
   460   000244                     T3CKIPPS        equ	580	;# 
   461   000245                     T3GPPS          equ	581	;# 
   462   000246                     T5CKIPPS        equ	582	;# 
   463   000247                     T5GPPS          equ	583	;# 
   464   000248                     T2INPPS         equ	584	;# 
   465   000249                     T4INPPS         equ	585	;# 
   466   00024A                     T6INPPS         equ	586	;# 
   467   00024F                     CCP1PPS         equ	591	;# 
   468   000250                     CCP2PPS         equ	592	;# 
   469   000251                     CCP3PPS         equ	593	;# 
   470   000253                     PWM1ERSPPS      equ	595	;# 
   471   000254                     PWM2ERSPPS      equ	596	;# 
   472   000255                     PWM3ERSPPS      equ	597	;# 
   473   000257                     PWMIN0PPS       equ	599	;# 
   474   000258                     PWMIN1PPS       equ	600	;# 
   475   000259                     SMT1WINPPS      equ	601	;# 
   476   00025A                     SMT1SIGPPS      equ	602	;# 
   477   00025B                     CWG1PPS         equ	603	;# 
   478   00025B                     CWG1INPPS       equ	603	;# 
   479   00025C                     CWG2PPS         equ	604	;# 
   480   00025C                     CWG2INPPS       equ	604	;# 
   481   00025D                     CWG3PPS         equ	605	;# 
   482   00025D                     CWG3INPPS       equ	605	;# 
   483   00025E                     MD1CARLPPS      equ	606	;# 
   484   00025E                     MDCARLPPS       equ	606	;# 
   485   00025F                     MD1CARHPPS      equ	607	;# 
   486   00025F                     MDCARHPPS       equ	607	;# 
   487   000260                     MD1SRCPPS       equ	608	;# 
   488   000260                     MDSRCPPS        equ	608	;# 
   489   000261                     CLCIN0PPS       equ	609	;# 
   490   000262                     CLCIN1PPS       equ	610	;# 
   491   000263                     CLCIN2PPS       equ	611	;# 
   492   000264                     CLCIN3PPS       equ	612	;# 
   493   000265                     CLCIN4PPS       equ	613	;# 
   494   000266                     CLCIN5PPS       equ	614	;# 
   495   000267                     CLCIN6PPS       equ	615	;# 
   496   000268                     CLCIN7PPS       equ	616	;# 
   497   000269                     ADACTPPS        equ	617	;# 
   498   00026A                     SPI1SCKPPS      equ	618	;# 
   499   00026B                     SPI1SDIPPS      equ	619	;# 
   500   00026C                     SPI1SSPPS       equ	620	;# 
   501   00026D                     SPI2SCKPPS      equ	621	;# 
   502   00026E                     SPI2SDIPPS      equ	622	;# 
   503   00026F                     SPI2SSPPS       equ	623	;# 
   504   000270                     I2C1SDAPPS      equ	624	;# 
   505   000271                     I2C1SCLPPS      equ	625	;# 
   506   000272                     U1RXPPS         equ	626	;# 
   507   000273                     U1CTSPPS        equ	627	;# 
   508   000274                     U2RXPPS         equ	628	;# 
   509   000275                     U2CTSPPS        equ	629	;# 
   510   000276                     U3RXPPS         equ	630	;# 
   511   000277                     U3CTSPPS        equ	631	;# 
   512   000278                     U4RXPPS         equ	632	;# 
   513   000279                     U4CTSPPS        equ	633	;# 
   514   00027A                     U5RXPPS         equ	634	;# 
   515   00027B                     U5CTSPPS        equ	635	;# 
   516   000286                     RC4I2C          equ	646	;# 
   517   000287                     RC3I2C          equ	647	;# 
   518   000288                     RB2I2C          equ	648	;# 
   519   000289                     RB1I2C          equ	649	;# 
   520   00028B                     I2C1RXB         equ	651	;# 
   521   00028C                     I2C1TXB         equ	652	;# 
   522   00028D                     I2C1CNT         equ	653	;# 
   523   00028E                     I2C1ADB0        equ	654	;# 
   524   00028F                     I2C1ADB1        equ	655	;# 
   525   000290                     I2C1ADR0        equ	656	;# 
   526   000291                     I2C1ADR1        equ	657	;# 
   527   000292                     I2C1ADR2        equ	658	;# 
   528   000293                     I2C1ADR3        equ	659	;# 
   529   000294                     I2C1CON0        equ	660	;# 
   530   000295                     I2C1CON1        equ	661	;# 
   531   000296                     I2C1CON2        equ	662	;# 
   532   000297                     I2C1ERR         equ	663	;# 
   533   000298                     I2C1STAT0       equ	664	;# 
   534   000299                     I2C1STAT1       equ	665	;# 
   535   00029A                     I2C1PIR         equ	666	;# 
   536   00029B                     I2C1PIE         equ	667	;# 
   537   00029C                     I2C1CLK         equ	668	;# 
   538   00029D                     I2C1BTO         equ	669	;# 
   539   0002A1                     U1RXB           equ	673	;# 
   540   0002A1                     U1RXBL          equ	673	;# 
   541   0002A2                     U1RXCHK         equ	674	;# 
   542   0002A3                     U1TXB           equ	675	;# 
   543   0002A3                     U1TXBL          equ	675	;# 
   544   0002A4                     U1TXCHK         equ	676	;# 
   545   0002A5                     U1P1            equ	677	;# 
   546   0002A5                     U1P1L           equ	677	;# 
   547   0002A6                     U1P1H           equ	678	;# 
   548   0002A7                     U1P2            equ	679	;# 
   549   0002A7                     U1P2L           equ	679	;# 
   550   0002A8                     U1P2H           equ	680	;# 
   551   0002A9                     U1P3            equ	681	;# 
   552   0002A9                     U1P3L           equ	681	;# 
   553   0002AA                     U1P3H           equ	682	;# 
   554   0002AB                     U1CON0          equ	683	;# 
   555   0002AC                     U1CON1          equ	684	;# 
   556   0002AD                     U1CON2          equ	685	;# 
   557   0002AE                     U1BRG           equ	686	;# 
   558   0002AE                     U1BRGL          equ	686	;# 
   559   0002AF                     U1BRGH          equ	687	;# 
   560   0002B0                     U1FIFO          equ	688	;# 
   561   0002B1                     U1UIR           equ	689	;# 
   562   0002B2                     U1ERRIR         equ	690	;# 
   563   0002B3                     U1ERRIE         equ	691	;# 
   564   0002B4                     U2RXB           equ	692	;# 
   565   0002B4                     U2RXBL          equ	692	;# 
   566   0002B6                     U2TXB           equ	694	;# 
   567   0002B6                     U2TXBL          equ	694	;# 
   568   0002B8                     U2P1            equ	696	;# 
   569   0002B8                     U2P1L           equ	696	;# 
   570   0002BA                     U2P2            equ	698	;# 
   571   0002BA                     U2P2L           equ	698	;# 
   572   0002BC                     U2P3            equ	700	;# 
   573   0002BC                     U2P3L           equ	700	;# 
   574   0002BE                     U2CON0          equ	702	;# 
   575   0002BF                     U2CON1          equ	703	;# 
   576   0002C0                     U2CON2          equ	704	;# 
   577   0002C1                     U2BRG           equ	705	;# 
   578   0002C1                     U2BRGL          equ	705	;# 
   579   0002C2                     U2BRGH          equ	706	;# 
   580   0002C3                     U2FIFO          equ	707	;# 
   581   0002C4                     U2UIR           equ	708	;# 
   582   0002C5                     U2ERRIR         equ	709	;# 
   583   0002C6                     U2ERRIE         equ	710	;# 
   584   0002C7                     U3RXB           equ	711	;# 
   585   0002C7                     U3RXBL          equ	711	;# 
   586   0002C9                     U3TXB           equ	713	;# 
   587   0002C9                     U3TXBL          equ	713	;# 
   588   0002CB                     U3P1            equ	715	;# 
   589   0002CB                     U3P1L           equ	715	;# 
   590   0002CD                     U3P2            equ	717	;# 
   591   0002CD                     U3P2L           equ	717	;# 
   592   0002CF                     U3P3            equ	719	;# 
   593   0002CF                     U3P3L           equ	719	;# 
   594   0002D1                     U3CON0          equ	721	;# 
   595   0002D2                     U3CON1          equ	722	;# 
   596   0002D3                     U3CON2          equ	723	;# 
   597   0002D4                     U3BRG           equ	724	;# 
   598   0002D4                     U3BRGL          equ	724	;# 
   599   0002D5                     U3BRGH          equ	725	;# 
   600   0002D6                     U3FIFO          equ	726	;# 
   601   0002D7                     U3UIR           equ	727	;# 
   602   0002D8                     U3ERRIR         equ	728	;# 
   603   0002D9                     U3ERRIE         equ	729	;# 
   604   0002DA                     U4RXB           equ	730	;# 
   605   0002DA                     U4RXBL          equ	730	;# 
   606   0002DC                     U4TXB           equ	732	;# 
   607   0002DC                     U4TXBL          equ	732	;# 
   608   0002DE                     U4P1            equ	734	;# 
   609   0002DE                     U4P1L           equ	734	;# 
   610   0002E0                     U4P2            equ	736	;# 
   611   0002E0                     U4P2L           equ	736	;# 
   612   0002E2                     U4P3            equ	738	;# 
   613   0002E2                     U4P3L           equ	738	;# 
   614   0002E4                     U4CON0          equ	740	;# 
   615   0002E5                     U4CON1          equ	741	;# 
   616   0002E6                     U4CON2          equ	742	;# 
   617   0002E7                     U4BRG           equ	743	;# 
   618   0002E7                     U4BRGL          equ	743	;# 
   619   0002E8                     U4BRGH          equ	744	;# 
   620   0002E9                     U4FIFO          equ	745	;# 
   621   0002EA                     U4UIR           equ	746	;# 
   622   0002EB                     U4ERRIR         equ	747	;# 
   623   0002EC                     U4ERRIE         equ	748	;# 
   624   0002ED                     U5RXB           equ	749	;# 
   625   0002ED                     U5RXBL          equ	749	;# 
   626   0002EF                     U5TXB           equ	751	;# 
   627   0002EF                     U5TXBL          equ	751	;# 
   628   0002F1                     U5P1            equ	753	;# 
   629   0002F1                     U5P1L           equ	753	;# 
   630   0002F3                     U5P2            equ	755	;# 
   631   0002F3                     U5P2L           equ	755	;# 
   632   0002F5                     U5P3            equ	757	;# 
   633   0002F5                     U5P3L           equ	757	;# 
   634   0002F7                     U5CON0          equ	759	;# 
   635   0002F8                     U5CON1          equ	760	;# 
   636   0002F9                     U5CON2          equ	761	;# 
   637   0002FA                     U5BRG           equ	762	;# 
   638   0002FA                     U5BRGL          equ	762	;# 
   639   0002FB                     U5BRGH          equ	763	;# 
   640   0002FC                     U5FIFO          equ	764	;# 
   641   0002FD                     U5UIR           equ	765	;# 
   642   0002FE                     U5ERRIR         equ	766	;# 
   643   0002FF                     U5ERRIE         equ	767	;# 
   644   000300                     SMT1TMR         equ	768	;# 
   645   000300                     SMT1TMRL        equ	768	;# 
   646   000301                     SMT1TMRH        equ	769	;# 
   647   000302                     SMT1TMRU        equ	770	;# 
   648   000303                     SMT1CPR         equ	771	;# 
   649   000303                     SMT1CPRL        equ	771	;# 
   650   000304                     SMT1CPRH        equ	772	;# 
   651   000305                     SMT1CPRU        equ	773	;# 
   652   000306                     SMT1CPW         equ	774	;# 
   653   000306                     SMT1CPWL        equ	774	;# 
   654   000307                     SMT1CPWH        equ	775	;# 
   655   000308                     SMT1CPWU        equ	776	;# 
   656   000309                     SMT1PR          equ	777	;# 
   657   000309                     SMT1PRL         equ	777	;# 
   658   00030A                     SMT1PRH         equ	778	;# 
   659   00030B                     SMT1PRU         equ	779	;# 
   660   00030C                     SMT1CON0        equ	780	;# 
   661   00030D                     SMT1CON1        equ	781	;# 
   662   00030E                     SMT1STAT        equ	782	;# 
   663   00030F                     SMT1CLK         equ	783	;# 
   664   000310                     SMT1SIG         equ	784	;# 
   665   000311                     SMT1WIN         equ	785	;# 
   666   000318                     TMR0L           equ	792	;# 
   667   000318                     TMR0            equ	792	;# 
   668   000319                     TMR0H           equ	793	;# 
   669   000319                     PR0             equ	793	;# 
   670   00031A                     T0CON0          equ	794	;# 
   671   00031B                     T0CON1          equ	795	;# 
   672   00031C                     TMR1            equ	796	;# 
   673   00031C                     TMR1L           equ	796	;# 
   674   00031D                     TMR1H           equ	797	;# 
   675   00031E                     T1CON           equ	798	;# 
   676   00031E                     TMR1CON         equ	798	;# 
   677   00031F                     T1GCON          equ	799	;# 
   678   00031F                     TMR1GCON        equ	799	;# 
   679   000320                     T1GATE          equ	800	;# 
   680   000320                     TMR1GATE        equ	800	;# 
   681   000321                     T1CLK           equ	801	;# 
   682   000321                     TMR1CLK         equ	801	;# 
   683   000321                     PR1             equ	801	;# 
   684   000322                     T2TMR           equ	802	;# 
   685   000322                     TMR2            equ	802	;# 
   686   000323                     T2PR            equ	803	;# 
   687   000323                     PR2             equ	803	;# 
   688   000324                     T2CON           equ	804	;# 
   689   000325                     T2HLT           equ	805	;# 
   690   000326                     T2CLKCON        equ	806	;# 
   691   000326                     T2CLK           equ	806	;# 
   692   000327                     T2RST           equ	807	;# 
   693   000328                     TMR3            equ	808	;# 
   694   000328                     TMR3L           equ	808	;# 
   695   000329                     TMR3H           equ	809	;# 
   696   00032A                     T3CON           equ	810	;# 
   697   00032A                     TMR3CON         equ	810	;# 
   698   00032B                     T3GCON          equ	811	;# 
   699   00032B                     TMR3GCON        equ	811	;# 
   700   00032C                     T3GATE          equ	812	;# 
   701   00032C                     TMR3GATE        equ	812	;# 
   702   00032D                     T3CLK           equ	813	;# 
   703   00032D                     TMR3CLK         equ	813	;# 
   704   00032D                     PR3             equ	813	;# 
   705   00032E                     T4TMR           equ	814	;# 
   706   00032E                     TMR4            equ	814	;# 
   707   00032F                     T4PR            equ	815	;# 
   708   00032F                     PR4             equ	815	;# 
   709   000330                     T4CON           equ	816	;# 
   710   000331                     T4HLT           equ	817	;# 
   711   000332                     T4CLKCON        equ	818	;# 
   712   000332                     T4CLK           equ	818	;# 
   713   000333                     T4RST           equ	819	;# 
   714   000334                     TMR5            equ	820	;# 
   715   000334                     TMR5L           equ	820	;# 
   716   000335                     TMR5H           equ	821	;# 
   717   000336                     T5CON           equ	822	;# 
   718   000336                     TMR5CON         equ	822	;# 
   719   000337                     T5GCON          equ	823	;# 
   720   000337                     TMR5GCON        equ	823	;# 
   721   000338                     T5GATE          equ	824	;# 
   722   000338                     TMR5GATE        equ	824	;# 
   723   000339                     T5CLK           equ	825	;# 
   724   000339                     TMR5CLK         equ	825	;# 
   725   000339                     PR5             equ	825	;# 
   726   00033A                     T6TMR           equ	826	;# 
   727   00033A                     TMR6            equ	826	;# 
   728   00033B                     T6PR            equ	827	;# 
   729   00033B                     PR6             equ	827	;# 
   730   00033C                     T6CON           equ	828	;# 
   731   00033D                     T6HLT           equ	829	;# 
   732   00033E                     T6CLKCON        equ	830	;# 
   733   00033E                     T6CLK           equ	830	;# 
   734   00033F                     T6RST           equ	831	;# 
   735   000340                     CCPR1           equ	832	;# 
   736   000340                     CCPR1L          equ	832	;# 
   737   000341                     CCPR1H          equ	833	;# 
   738   000342                     CCP1CON         equ	834	;# 
   739   000343                     CCP1CAP         equ	835	;# 
   740   000344                     CCPR2           equ	836	;# 
   741   000344                     CCPR2L          equ	836	;# 
   742   000345                     CCPR2H          equ	837	;# 
   743   000346                     CCP2CON         equ	838	;# 
   744   000347                     CCP2CAP         equ	839	;# 
   745   000348                     CCPR3           equ	840	;# 
   746   000348                     CCPR3L          equ	840	;# 
   747   000349                     CCPR3H          equ	841	;# 
   748   00034A                     CCP3CON         equ	842	;# 
   749   00034B                     CCP3CAP         equ	843	;# 
   750   00034C                     CCPTMRS0        equ	844	;# 
   751   00034F                     CRCDATA         equ	847	;# 
   752   00034F                     CRCDATL         equ	847	;# 
   753   000350                     CRCDATH         equ	848	;# 
   754   000351                     CRCACC          equ	849	;# 
   755   000351                     CRCACCL         equ	849	;# 
   756   000352                     CRCACCH         equ	850	;# 
   757   000353                     CRCSHFT         equ	851	;# 
   758   000353                     CRCSHIFTL       equ	851	;# 
   759   000354                     CRCSHIFTH       equ	852	;# 
   760   000355                     CRCXOR          equ	853	;# 
   761   000355                     CRCXORL         equ	853	;# 
   762   000356                     CRCXORH         equ	854	;# 
   763   000357                     CRCCON0         equ	855	;# 
   764   000358                     CRCCON1         equ	856	;# 
   765   00035A                     SCANLADR        equ	858	;# 
   766   00035A                     SCANLADRL       equ	858	;# 
   767   00035B                     SCANLADRH       equ	859	;# 
   768   00035C                     SCANLADRU       equ	860	;# 
   769   00035D                     SCANHADR        equ	861	;# 
   770   00035D                     SCANHADRL       equ	861	;# 
   771   00035E                     SCANHADRH       equ	862	;# 
   772   00035F                     SCANHADRU       equ	863	;# 
   773   000360                     SCANCON0        equ	864	;# 
   774   000361                     SCANTRIG        equ	865	;# 
   775   000362                     IPR0            equ	866	;# 
   776   000363                     IPR1            equ	867	;# 
   777   000364                     IPR2            equ	868	;# 
   778   000365                     IPR3            equ	869	;# 
   779   000366                     IPR4            equ	870	;# 
   780   000367                     IPR5            equ	871	;# 
   781   000368                     IPR6            equ	872	;# 
   782   000369                     IPR7            equ	873	;# 
   783   00036A                     IPR8            equ	874	;# 
   784   00036B                     IPR9            equ	875	;# 
   785   00036C                     IPR10           equ	876	;# 
   786   00036D                     IPR11           equ	877	;# 
   787   00036E                     IPR12           equ	878	;# 
   788   00036F                     IPR13           equ	879	;# 
   789   000370                     IPR14           equ	880	;# 
   790   000371                     IPR15           equ	881	;# 
   791   000373                     STATUS_CSHAD    equ	883	;# 
   792   000374                     WREG_CSHAD      equ	884	;# 
   793   000375                     BSR_CSHAD       equ	885	;# 
   794   000376                     SHADCON         equ	886	;# 
   795   000377                     STATUS_SHAD     equ	887	;# 
   796   000378                     WREG_SHAD       equ	888	;# 
   797   000379                     BSR_SHAD        equ	889	;# 
   798   00037A                     PCLATH_SHAD     equ	890	;# 
   799   00037B                     PCLATU_SHAD     equ	891	;# 
   800   00037C                     FSR0SH          equ	892	;# 
   801   00037C                     FSR0L_SHAD      equ	892	;# 
   802   00037D                     FSR0H_SHAD      equ	893	;# 
   803   00037E                     FSR1SH          equ	894	;# 
   804   00037E                     FSR1L_SHAD      equ	894	;# 
   805   00037F                     FSR1H_SHAD      equ	895	;# 
   806   000380                     FSR2SH          equ	896	;# 
   807   000380                     FSR2L_SHAD      equ	896	;# 
   808   000381                     FSR2H_SHAD      equ	897	;# 
   809   000382                     PRODSH          equ	898	;# 
   810   000382                     PRODL_SHAD      equ	898	;# 
   811   000383                     PRODH_SHAD      equ	899	;# 
   812   0003BC                     CWG1CLK         equ	956	;# 
   813   0003BC                     CWG1CLKCON      equ	956	;# 
   814   0003BD                     CWG1ISM         equ	957	;# 
   815   0003BD                     CWG1DAT         equ	957	;# 
   816   0003BE                     CWG1DBR         equ	958	;# 
   817   0003BF                     CWG1DBF         equ	959	;# 
   818   0003C0                     CWG1CON0        equ	960	;# 
   819   0003C1                     CWG1CON1        equ	961	;# 
   820   0003C2                     CWG1AS0         equ	962	;# 
   821   0003C3                     CWG1AS1         equ	963	;# 
   822   0003C4                     CWG1STR         equ	964	;# 
   823   0003C5                     CWG2CLK         equ	965	;# 
   824   0003C5                     CWG2CLKCON      equ	965	;# 
   825   0003C6                     CWG2ISM         equ	966	;# 
   826   0003C6                     CWG2DAT         equ	966	;# 
   827   0003C7                     CWG2DBR         equ	967	;# 
   828   0003C8                     CWG2DBF         equ	968	;# 
   829   0003C9                     CWG2CON0        equ	969	;# 
   830   0003CA                     CWG2CON1        equ	970	;# 
   831   0003CB                     CWG2AS0         equ	971	;# 
   832   0003CC                     CWG2AS1         equ	972	;# 
   833   0003CD                     CWG2STR         equ	973	;# 
   834   0003CE                     CWG3CLK         equ	974	;# 
   835   0003CE                     CWG3CLKCON      equ	974	;# 
   836   0003CF                     CWG3ISM         equ	975	;# 
   837   0003CF                     CWG3DAT         equ	975	;# 
   838   0003D0                     CWG3DBR         equ	976	;# 
   839   0003D1                     CWG3DBF         equ	977	;# 
   840   0003D2                     CWG3CON0        equ	978	;# 
   841   0003D3                     CWG3CON1        equ	979	;# 
   842   0003D4                     CWG3AS0         equ	980	;# 
   843   0003D5                     CWG3AS1         equ	981	;# 
   844   0003D6                     CWG3STR         equ	982	;# 
   845   0003D7                     FVRCON          equ	983	;# 
   846   0003D8                     ADCPCON         equ	984	;# 
   847   0003D8                     ADCP            equ	984	;# 
   848   0003D9                     ADLTH           equ	985	;# 
   849   0003D9                     ADLTHL          equ	985	;# 
   850   0003DA                     ADLTHH          equ	986	;# 
   851   0003DB                     ADUTH           equ	987	;# 
   852   0003DB                     ADUTHL          equ	987	;# 
   853   0003DC                     ADUTHH          equ	988	;# 
   854   0003DD                     ADERR           equ	989	;# 
   855   0003DD                     ADERRL          equ	989	;# 
   856   0003DE                     ADERRH          equ	990	;# 
   857   0003DF                     ADSTPT          equ	991	;# 
   858   0003DF                     ADSTPTL         equ	991	;# 
   859   0003E0                     ADSTPTH         equ	992	;# 
   860   0003E1                     ADFLTR          equ	993	;# 
   861   0003E1                     ADFLTRL         equ	993	;# 
   862   0003E2                     ADFLTRH         equ	994	;# 
   863   0003E3                     ADACC           equ	995	;# 
   864   0003E3                     ADACCL          equ	995	;# 
   865   0003E4                     ADACCH          equ	996	;# 
   866   0003E5                     ADACCU          equ	997	;# 
   867   0003E6                     ADCNT           equ	998	;# 
   868   0003E7                     ADRPT           equ	999	;# 
   869   0003E8                     ADPREV          equ	1000	;# 
   870   0003E8                     ADPREVL         equ	1000	;# 
   871   0003E9                     ADPREVH         equ	1001	;# 
   872   0003EA                     ADRES           equ	1002	;# 
   873   0003EA                     ADRESL          equ	1002	;# 
   874   0003EB                     ADRESH          equ	1003	;# 
   875   0003EC                     ADPCH           equ	1004	;# 
   876   0003EE                     ADACQ           equ	1006	;# 
   877   0003EE                     ADACQL          equ	1006	;# 
   878   0003EF                     ADACQH          equ	1007	;# 
   879   0003F0                     ADCAP           equ	1008	;# 
   880   0003F1                     ADPRE           equ	1009	;# 
   881   0003F1                     ADPREL          equ	1009	;# 
   882   0003F2                     ADPREH          equ	1010	;# 
   883   0003F3                     ADCON0          equ	1011	;# 
   884   0003F4                     ADCON1          equ	1012	;# 
   885   0003F5                     ADCON2          equ	1013	;# 
   886   0003F6                     ADCON3          equ	1014	;# 
   887   0003F7                     ADSTAT          equ	1015	;# 
   888   0003F8                     ADREF           equ	1016	;# 
   889   0003F9                     ADACT           equ	1017	;# 
   890   0003FA                     ADCLK           equ	1018	;# 
   891   000400                     ANSELA          equ	1024	;# 
   892   000401                     WPUA            equ	1025	;# 
   893   000402                     ODCONA          equ	1026	;# 
   894   000403                     SLRCONA         equ	1027	;# 
   895   000404                     INLVLA          equ	1028	;# 
   896   000405                     IOCAP           equ	1029	;# 
   897   000406                     IOCAN           equ	1030	;# 
   898   000407                     IOCAF           equ	1031	;# 
   899   000408                     ANSELB          equ	1032	;# 
   900   000409                     WPUB            equ	1033	;# 
   901   00040A                     ODCONB          equ	1034	;# 
   902   00040B                     SLRCONB         equ	1035	;# 
   903   00040C                     INLVLB          equ	1036	;# 
   904   00040D                     IOCBP           equ	1037	;# 
   905   00040E                     IOCBN           equ	1038	;# 
   906   00040F                     IOCBF           equ	1039	;# 
   907   000410                     ANSELC          equ	1040	;# 
   908   000411                     WPUC            equ	1041	;# 
   909   000412                     ODCONC          equ	1042	;# 
   910   000413                     SLRCONC         equ	1043	;# 
   911   000414                     INLVLC          equ	1044	;# 
   912   000415                     IOCCP           equ	1045	;# 
   913   000416                     IOCCN           equ	1046	;# 
   914   000417                     IOCCF           equ	1047	;# 
   915   000418                     ANSELD          equ	1048	;# 
   916   000419                     WPUD            equ	1049	;# 
   917   00041A                     ODCOND          equ	1050	;# 
   918   00041B                     SLRCOND         equ	1051	;# 
   919   00041C                     INLVLD          equ	1052	;# 
   920   000420                     ANSELE          equ	1056	;# 
   921   000421                     WPUE            equ	1057	;# 
   922   000422                     ODCONE          equ	1058	;# 
   923   000423                     SLRCONE         equ	1059	;# 
   924   000424                     INLVLE          equ	1060	;# 
   925   000425                     IOCEP           equ	1061	;# 
   926   000426                     IOCEN           equ	1062	;# 
   927   000427                     IOCEF           equ	1063	;# 
   928   000440                     NCO1ACC         equ	1088	;# 
   929   000440                     NCO1ACCL        equ	1088	;# 
   930   000441                     NCO1ACCH        equ	1089	;# 
   931   000442                     NCO1ACCU        equ	1090	;# 
   932   000443                     NCO1INC         equ	1091	;# 
   933   000443                     NCO1INCL        equ	1091	;# 
   934   000444                     NCO1INCH        equ	1092	;# 
   935   000445                     NCO1INCU        equ	1093	;# 
   936   000446                     NCO1CON         equ	1094	;# 
   937   000447                     NCO1CLK         equ	1095	;# 
   938   000448                     NCO2ACC         equ	1096	;# 
   939   000448                     NCO2ACCL        equ	1096	;# 
   940   000449                     NCO2ACCH        equ	1097	;# 
   941   00044A                     NCO2ACCU        equ	1098	;# 
   942   00044B                     NCO2INC         equ	1099	;# 
   943   00044B                     NCO2INCL        equ	1099	;# 
   944   00044C                     NCO2INCH        equ	1100	;# 
   945   00044D                     NCO2INCU        equ	1101	;# 
   946   00044E                     NCO2CON         equ	1102	;# 
   947   00044F                     NCO2CLK         equ	1103	;# 
   948   000450                     NCO3ACC         equ	1104	;# 
   949   000450                     NCO3ACCL        equ	1104	;# 
   950   000451                     NCO3ACCH        equ	1105	;# 
   951   000452                     NCO3ACCU        equ	1106	;# 
   952   000453                     NCO3INC         equ	1107	;# 
   953   000453                     NCO3INCL        equ	1107	;# 
   954   000454                     NCO3INCH        equ	1108	;# 
   955   000455                     NCO3INCU        equ	1109	;# 
   956   000456                     NCO3CON         equ	1110	;# 
   957   000457                     NCO3CLK         equ	1111	;# 
   958   000459                     IVTLOCK         equ	1113	;# 
   959   00045A                     IVTAD           equ	1114	;# 
   960   00045A                     IVTADL          equ	1114	;# 
   961   00045B                     IVTADH          equ	1115	;# 
   962   00045C                     IVTADU          equ	1116	;# 
   963   00045D                     IVTBASE         equ	1117	;# 
   964   00045D                     IVTBASEL        equ	1117	;# 
   965   00045E                     IVTBASEH        equ	1118	;# 
   966   00045F                     IVTBASEU        equ	1119	;# 
   967   000460                     PWM1ERS         equ	1120	;# 
   968   000461                     PWM1CLK         equ	1121	;# 
   969   000462                     PWM1LDS         equ	1122	;# 
   970   000463                     PWM1PR          equ	1123	;# 
   971   000463                     PWM1PRL         equ	1123	;# 
   972   000464                     PWM1PRH         equ	1124	;# 
   973   000465                     PWM1CPRE        equ	1125	;# 
   974   000466                     PWM1PIPOS       equ	1126	;# 
   975   000467                     PWM1GIR         equ	1127	;# 
   976   000468                     PWM1GIE         equ	1128	;# 
   977   000469                     PWM1CON         equ	1129	;# 
   978   00046A                     PWM1S1CFG       equ	1130	;# 
   979   00046B                     PWM1S1P1        equ	1131	;# 
   980   00046B                     PWM1S1P1L       equ	1131	;# 
   981   00046C                     PWM1S1P1H       equ	1132	;# 
   982   00046D                     PWM1S1P2        equ	1133	;# 
   983   00046D                     PWM1S1P2L       equ	1133	;# 
   984   00046E                     PWM1S1P2H       equ	1134	;# 
   985   00046F                     PWM2ERS         equ	1135	;# 
   986   000470                     PWM2CLK         equ	1136	;# 
   987   000471                     PWM2LDS         equ	1137	;# 
   988   000472                     PWM2PR          equ	1138	;# 
   989   000472                     PWM2PRL         equ	1138	;# 
   990   000473                     PWM2PRH         equ	1139	;# 
   991   000474                     PWM2CPRE        equ	1140	;# 
   992   000475                     PWM2PIPOS       equ	1141	;# 
   993   000476                     PWM2GIR         equ	1142	;# 
   994   000477                     PWM2GIE         equ	1143	;# 
   995   000478                     PWM2CON         equ	1144	;# 
   996   000479                     PWM2S1CFG       equ	1145	;# 
   997   00047A                     PWM2S1P1        equ	1146	;# 
   998   00047A                     PWM2S1P1L       equ	1146	;# 
   999   00047B                     PWM2S1P1H       equ	1147	;# 
  1000   00047C                     PWM2S1P2        equ	1148	;# 
  1001   00047C                     PWM2S1P2L       equ	1148	;# 
  1002   00047D                     PWM2S1P2H       equ	1149	;# 
  1003   00047E                     PWM3ERS         equ	1150	;# 
  1004   00047F                     PWM3CLK         equ	1151	;# 
  1005   000480                     PWM3LDS         equ	1152	;# 
  1006   000481                     PWM3PR          equ	1153	;# 
  1007   000481                     PWM3PRL         equ	1153	;# 
  1008   000482                     PWM3PRH         equ	1154	;# 
  1009   000483                     PWM3CPRE        equ	1155	;# 
  1010   000484                     PWM3PIPOS       equ	1156	;# 
  1011   000485                     PWM3GIR         equ	1157	;# 
  1012   000486                     PWM3GIE         equ	1158	;# 
  1013   000487                     PWM3CON         equ	1159	;# 
  1014   000488                     PWM3S1CFG       equ	1160	;# 
  1015   000489                     PWM3S1P1        equ	1161	;# 
  1016   000489                     PWM3S1P1L       equ	1161	;# 
  1017   00048A                     PWM3S1P1H       equ	1162	;# 
  1018   00048B                     PWM3S1P2        equ	1163	;# 
  1019   00048B                     PWM3S1P2L       equ	1163	;# 
  1020   00048C                     PWM3S1P2H       equ	1164	;# 
  1021   00049C                     PWMLOAD         equ	1180	;# 
  1022   00049D                     PWMEN           equ	1181	;# 
  1023   00049E                     PIE0            equ	1182	;# 
  1024   00049F                     PIE1            equ	1183	;# 
  1025   0004A0                     PIE2            equ	1184	;# 
  1026   0004A1                     PIE3            equ	1185	;# 
  1027   0004A2                     PIE4            equ	1186	;# 
  1028   0004A3                     PIE5            equ	1187	;# 
  1029   0004A4                     PIE6            equ	1188	;# 
  1030   0004A5                     PIE7            equ	1189	;# 
  1031   0004A6                     PIE8            equ	1190	;# 
  1032   0004A7                     PIE9            equ	1191	;# 
  1033   0004A8                     PIE10           equ	1192	;# 
  1034   0004A9                     PIE11           equ	1193	;# 
  1035   0004AA                     PIE12           equ	1194	;# 
  1036   0004AB                     PIE13           equ	1195	;# 
  1037   0004AC                     PIE14           equ	1196	;# 
  1038   0004AD                     PIE15           equ	1197	;# 
  1039   0004AE                     PIR0            equ	1198	;# 
  1040   0004AF                     PIR1            equ	1199	;# 
  1041   0004B0                     PIR2            equ	1200	;# 
  1042   0004B1                     PIR3            equ	1201	;# 
  1043   0004B2                     PIR4            equ	1202	;# 
  1044   0004B3                     PIR5            equ	1203	;# 
  1045   0004B4                     PIR6            equ	1204	;# 
  1046   0004B5                     PIR7            equ	1205	;# 
  1047   0004B6                     PIR8            equ	1206	;# 
  1048   0004B7                     PIR9            equ	1207	;# 
  1049   0004B8                     PIR10           equ	1208	;# 
  1050   0004B9                     PIR11           equ	1209	;# 
  1051   0004BA                     PIR12           equ	1210	;# 
  1052   0004BB                     PIR13           equ	1211	;# 
  1053   0004BC                     PIR14           equ	1212	;# 
  1054   0004BD                     PIR15           equ	1213	;# 
  1055   0004BE                     LATA            equ	1214	;# 
  1056   0004BF                     LATB            equ	1215	;# 
  1057   0004C0                     LATC            equ	1216	;# 
  1058   0004C1                     LATD            equ	1217	;# 
  1059   0004C2                     LATE            equ	1218	;# 
  1060   0004C6                     TRISA           equ	1222	;# 
  1061   0004C7                     TRISB           equ	1223	;# 
  1062   0004C8                     TRISC           equ	1224	;# 
  1063   0004C9                     TRISD           equ	1225	;# 
  1064   0004CA                     TRISE           equ	1226	;# 
  1065   0004CE                     PORTA           equ	1230	;# 
  1066   0004CF                     PORTB           equ	1231	;# 
  1067   0004D0                     PORTC           equ	1232	;# 
  1068   0004D1                     PORTD           equ	1233	;# 
  1069   0004D2                     PORTE           equ	1234	;# 
  1070   0004D6                     INTCON0         equ	1238	;# 
  1071   0004D7                     INTCON1         equ	1239	;# 
  1072   0004D8                     STATUS          equ	1240	;# 
  1073   0004D9                     FSR2            equ	1241	;# 
  1074   0004D9                     FSR2L           equ	1241	;# 
  1075   0004DA                     FSR2H           equ	1242	;# 
  1076   0004DB                     PLUSW2          equ	1243	;# 
  1077   0004DC                     PREINC2         equ	1244	;# 
  1078   0004DD                     POSTDEC2        equ	1245	;# 
  1079   0004DE                     POSTINC2        equ	1246	;# 
  1080   0004DF                     INDF2           equ	1247	;# 
  1081   0004E0                     BSR             equ	1248	;# 
  1082   0004E1                     FSR1            equ	1249	;# 
  1083   0004E1                     FSR1L           equ	1249	;# 
  1084   0004E2                     FSR1H           equ	1250	;# 
  1085   0004E3                     PLUSW1          equ	1251	;# 
  1086   0004E4                     PREINC1         equ	1252	;# 
  1087   0004E5                     POSTDEC1        equ	1253	;# 
  1088   0004E6                     POSTINC1        equ	1254	;# 
  1089   0004E7                     INDF1           equ	1255	;# 
  1090   0004E8                     WREG            equ	1256	;# 
  1091   0004E9                     FSR0            equ	1257	;# 
  1092   0004E9                     FSR0L           equ	1257	;# 
  1093   0004EA                     FSR0H           equ	1258	;# 
  1094   0004EB                     PLUSW0          equ	1259	;# 
  1095   0004EC                     PREINC0         equ	1260	;# 
  1096   0004ED                     POSTDEC0        equ	1261	;# 
  1097   0004EE                     POSTINC0        equ	1262	;# 
  1098   0004EF                     INDF0           equ	1263	;# 
  1099   0004F0                     PCON0           equ	1264	;# 
  1100   0004F1                     PCON1           equ	1265	;# 
  1101   0004F2                     CPUDOZE         equ	1266	;# 
  1102   0004F3                     PROD            equ	1267	;# 
  1103   0004F3                     PRODL           equ	1267	;# 
  1104   0004F4                     PRODH           equ	1268	;# 
  1105   0004F5                     TABLAT          equ	1269	;# 
  1106   0004F6                     TBLPTR          equ	1270	;# 
  1107   0004F6                     TBLPTRL         equ	1270	;# 
  1108   0004F7                     TBLPTRH         equ	1271	;# 
  1109   0004F8                     TBLPTRU         equ	1272	;# 
  1110   0004F9                     PCLAT           equ	1273	;# 
  1111   0004F9                     PCL             equ	1273	;# 
  1112   0004FA                     PCLATH          equ	1274	;# 
  1113   0004FB                     PCLATU          equ	1275	;# 
  1114   0004FC                     STKPTR          equ	1276	;# 
  1115   0004FD                     TOS             equ	1277	;# 
  1116   0004FD                     TOSL            equ	1277	;# 
  1117   0004FE                     TOSH            equ	1278	;# 
  1118   0004FF                     TOSU            equ	1279	;# 
  1119   000039                     CLKRCON         equ	57	;# 
  1120   00003A                     CLKRCLK         equ	58	;# 
  1121   000040                     NVMCON0         equ	64	;# 
  1122   000041                     NVMCON1         equ	65	;# 
  1123   000042                     NVMLOCK         equ	66	;# 
  1124   000043                     NVMADR          equ	67	;# 
  1125   000043                     NVMADRL         equ	67	;# 
  1126   000044                     NVMADRH         equ	68	;# 
  1127   000045                     NVMADRU         equ	69	;# 
  1128   000046                     NVMDAT          equ	70	;# 
  1129   000046                     NVMDATL         equ	70	;# 
  1130   000047                     NVMDATH         equ	71	;# 
  1131   000048                     VREGCON         equ	72	;# 
  1132   000049                     BORCON          equ	73	;# 
  1133   00004A                     HLVDCON0        equ	74	;# 
  1134   00004B                     HLVDCON1        equ	75	;# 
  1135   00004C                     ZCDCON          equ	76	;# 
  1136   000060                     PMD0            equ	96	;# 
  1137   000061                     PMD1            equ	97	;# 
  1138   000063                     PMD3            equ	99	;# 
  1139   000064                     PMD4            equ	100	;# 
  1140   000065                     PMD5            equ	101	;# 
  1141   000066                     PMD6            equ	102	;# 
  1142   000067                     PMD7            equ	103	;# 
  1143   000068                     PMD8            equ	104	;# 
  1144   00006A                     MD1CON0         equ	106	;# 
  1145   00006B                     MD1CON1         equ	107	;# 
  1146   00006C                     MD1SRC          equ	108	;# 
  1147   00006D                     MD1CARL         equ	109	;# 
  1148   00006E                     MD1CARH         equ	110	;# 
  1149   00006F                     CMOUT           equ	111	;# 
  1150   000070                     CM1CON0         equ	112	;# 
  1151   000071                     CM1CON1         equ	113	;# 
  1152   000072                     CM1NCH          equ	114	;# 
  1153   000073                     CM1PCH          equ	115	;# 
  1154   000074                     CM2CON0         equ	116	;# 
  1155   000075                     CM2CON1         equ	117	;# 
  1156   000076                     CM2NCH          equ	118	;# 
  1157   000077                     CM2PCH          equ	119	;# 
  1158   000078                     WDTCON0         equ	120	;# 
  1159   000079                     WDTCON1         equ	121	;# 
  1160   00007A                     WDTPS           equ	122	;# 
  1161   00007A                     WDTPSL          equ	122	;# 
  1162   00007B                     WDTPSH          equ	123	;# 
  1163   00007C                     WDTTMR          equ	124	;# 
  1164   00007D                     DAC1DAT         equ	125	;# 
  1165   00007D                     DAC1DATL        equ	125	;# 
  1166   00007F                     DAC1CON         equ	127	;# 
  1167   000080                     SPI1RXB         equ	128	;# 
  1168   000081                     SPI1TXB         equ	129	;# 
  1169   000082                     SPI1TCNT        equ	130	;# 
  1170   000082                     SPI1TCNTL       equ	130	;# 
  1171   000083                     SPI1TCNTH       equ	131	;# 
  1172   000084                     SPI1CON0        equ	132	;# 
  1173   000085                     SPI1CON1        equ	133	;# 
  1174   000086                     SPI1CON2        equ	134	;# 
  1175   000087                     SPI1STATUS      equ	135	;# 
  1176   000088                     SPI1TWIDTH      equ	136	;# 
  1177   000089                     SPI1BAUD        equ	137	;# 
  1178   00008A                     SPI1INTF        equ	138	;# 
  1179   00008B                     SPI1INTE        equ	139	;# 
  1180   00008C                     SPI1CLK         equ	140	;# 
  1181   00008D                     SPI2RXB         equ	141	;# 
  1182   00008E                     SPI2TXB         equ	142	;# 
  1183   00008F                     SPI2TCNT        equ	143	;# 
  1184   00008F                     SPI2TCNTL       equ	143	;# 
  1185   000090                     SPI2TCNTH       equ	144	;# 
  1186   000091                     SPI2CON0        equ	145	;# 
  1187   000092                     SPI2CON1        equ	146	;# 
  1188   000093                     SPI2CON2        equ	147	;# 
  1189   000094                     SPI2STATUS      equ	148	;# 
  1190   000095                     SPI2TWIDTH      equ	149	;# 
  1191   000096                     SPI2BAUD        equ	150	;# 
  1192   000097                     SPI2INTF        equ	151	;# 
  1193   000098                     SPI2INTE        equ	152	;# 
  1194   000099                     SPI2CLK         equ	153	;# 
  1195   0000AC                     ACTCON          equ	172	;# 
  1196   0000AD                     OSCCON1         equ	173	;# 
  1197   0000AE                     OSCCON2         equ	174	;# 
  1198   0000AF                     OSCCON3         equ	175	;# 
  1199   0000B0                     OSCTUNE         equ	176	;# 
  1200   0000B1                     OSCFRQ          equ	177	;# 
  1201   0000B1                     OSCFREQ         equ	177	;# 
  1202   0000B2                     OSCSTAT         equ	178	;# 
  1203   0000B2                     OSCSTAT1        equ	178	;# 
  1204   0000B3                     OSCEN           equ	179	;# 
  1205   0000B4                     PRLOCK          equ	180	;# 
  1206   0000B5                     SCANPR          equ	181	;# 
  1207   0000B6                     DMA1PR          equ	182	;# 
  1208   0000B7                     DMA2PR          equ	183	;# 
  1209   0000B8                     DMA3PR          equ	184	;# 
  1210   0000B9                     DMA4PR          equ	185	;# 
  1211   0000BA                     DMA5PR          equ	186	;# 
  1212   0000BB                     DMA6PR          equ	187	;# 
  1213   0000BE                     MAINPR          equ	190	;# 
  1214   0000BF                     ISRPR           equ	191	;# 
  1215   0000D4                     CLCDATA         equ	212	;# 
  1216   0000D5                     CLCSELECT       equ	213	;# 
  1217   0000D6                     CLCnCON         equ	214	;# 
  1218   0000D7                     CLCnPOL         equ	215	;# 
  1219   0000D8                     CLCnSEL0        equ	216	;# 
  1220   0000D9                     CLCnSEL1        equ	217	;# 
  1221   0000DA                     CLCnSEL2        equ	218	;# 
  1222   0000DB                     CLCnSEL3        equ	219	;# 
  1223   0000DC                     CLCnGLS0        equ	220	;# 
  1224   0000DD                     CLCnGLS1        equ	221	;# 
  1225   0000DE                     CLCnGLS2        equ	222	;# 
  1226   0000DF                     CLCnGLS3        equ	223	;# 
  1227   0000E8                     DMASELECT       equ	232	;# 
  1228   0000E9                     DMAnBUF         equ	233	;# 
  1229   0000EA                     DMAnDCNT        equ	234	;# 
  1230   0000EA                     DMAnDCNTL       equ	234	;# 
  1231   0000EB                     DMAnDCNTH       equ	235	;# 
  1232   0000EC                     DMAnDPTR        equ	236	;# 
  1233   0000EC                     DMAnDPTRL       equ	236	;# 
  1234   0000ED                     DMAnDPTRH       equ	237	;# 
  1235   0000EE                     DMAnDSZ         equ	238	;# 
  1236   0000EE                     DMAnDSZL        equ	238	;# 
  1237   0000EF                     DMAnDSZH        equ	239	;# 
  1238   0000F0                     DMAnDSA         equ	240	;# 
  1239   0000F0                     DMAnDSAL        equ	240	;# 
  1240   0000F1                     DMAnDSAH        equ	241	;# 
  1241   0000F2                     DMAnSCNT        equ	242	;# 
  1242   0000F2                     DMAnSCNTL       equ	242	;# 
  1243   0000F3                     DMAnSCNTH       equ	243	;# 
  1244   0000F4                     DMAnSPTR        equ	244	;# 
  1245   0000F4                     DMAnSPTRL       equ	244	;# 
  1246   0000F5                     DMAnSPTRH       equ	245	;# 
  1247   0000F6                     DMAnSPTRU       equ	246	;# 
  1248   0000F7                     DMAnSSZ         equ	247	;# 
  1249   0000F7                     DMAnSSZL        equ	247	;# 
  1250   0000F8                     DMAnSSZH        equ	248	;# 
  1251   0000F9                     DMAnSSA         equ	249	;# 
  1252   0000F9                     DMAnSSAL        equ	249	;# 
  1253   0000FA                     DMAnSSAH        equ	250	;# 
  1254   0000FB                     DMAnSSAU        equ	251	;# 
  1255   0000FC                     DMAnCON0        equ	252	;# 
  1256   0000FD                     DMAnCON1        equ	253	;# 
  1257   0000FE                     DMAnAIRQ        equ	254	;# 
  1258   0000FF                     DMAnSIRQ        equ	255	;# 
  1259   000200                     PPSLOCK         equ	512	;# 
  1260   000201                     RA0PPS          equ	513	;# 
  1261   000202                     RA1PPS          equ	514	;# 
  1262   000203                     RA2PPS          equ	515	;# 
  1263   000204                     RA3PPS          equ	516	;# 
  1264   000205                     RA4PPS          equ	517	;# 
  1265   000206                     RA5PPS          equ	518	;# 
  1266   000207                     RA6PPS          equ	519	;# 
  1267   000208                     RA7PPS          equ	520	;# 
  1268   000209                     RB0PPS          equ	521	;# 
  1269   00020A                     RB1PPS          equ	522	;# 
  1270   00020B                     RB2PPS          equ	523	;# 
  1271   00020C                     RB3PPS          equ	524	;# 
  1272   00020D                     RB4PPS          equ	525	;# 
  1273   00020E                     RB5PPS          equ	526	;# 
  1274   00020F                     RB6PPS          equ	527	;# 
  1275   000210                     RB7PPS          equ	528	;# 
  1276   000211                     RC0PPS          equ	529	;# 
  1277   000212                     RC1PPS          equ	530	;# 
  1278   000213                     RC2PPS          equ	531	;# 
  1279   000214                     RC3PPS          equ	532	;# 
  1280   000215                     RC4PPS          equ	533	;# 
  1281   000216                     RC5PPS          equ	534	;# 
  1282   000217                     RC6PPS          equ	535	;# 
  1283   000218                     RC7PPS          equ	536	;# 
  1284   000219                     RD0PPS          equ	537	;# 
  1285   00021A                     RD1PPS          equ	538	;# 
  1286   00021B                     RD2PPS          equ	539	;# 
  1287   00021C                     RD3PPS          equ	540	;# 
  1288   00021D                     RD4PPS          equ	541	;# 
  1289   00021E                     RD5PPS          equ	542	;# 
  1290   00021F                     RD6PPS          equ	543	;# 
  1291   000220                     RD7PPS          equ	544	;# 
  1292   000221                     RE0PPS          equ	545	;# 
  1293   000222                     RE1PPS          equ	546	;# 
  1294   000223                     RE2PPS          equ	547	;# 
  1295   00023E                     INT0PPS         equ	574	;# 
  1296   00023F                     INT1PPS         equ	575	;# 
  1297   000240                     INT2PPS         equ	576	;# 
  1298   000241                     T0CKIPPS        equ	577	;# 
  1299   000242                     T1CKIPPS        equ	578	;# 
  1300   000243                     T1GPPS          equ	579	;# 
  1301   000244                     T3CKIPPS        equ	580	;# 
  1302   000245                     T3GPPS          equ	581	;# 
  1303   000246                     T5CKIPPS        equ	582	;# 
  1304   000247                     T5GPPS          equ	583	;# 
  1305   000248                     T2INPPS         equ	584	;# 
  1306   000249                     T4INPPS         equ	585	;# 
  1307   00024A                     T6INPPS         equ	586	;# 
  1308   00024F                     CCP1PPS         equ	591	;# 
  1309   000250                     CCP2PPS         equ	592	;# 
  1310   000251                     CCP3PPS         equ	593	;# 
  1311   000253                     PWM1ERSPPS      equ	595	;# 
  1312   000254                     PWM2ERSPPS      equ	596	;# 
  1313   000255                     PWM3ERSPPS      equ	597	;# 
  1314   000257                     PWMIN0PPS       equ	599	;# 
  1315   000258                     PWMIN1PPS       equ	600	;# 
  1316   000259                     SMT1WINPPS      equ	601	;# 
  1317   00025A                     SMT1SIGPPS      equ	602	;# 
  1318   00025B                     CWG1PPS         equ	603	;# 
  1319   00025B                     CWG1INPPS       equ	603	;# 
  1320   00025C                     CWG2PPS         equ	604	;# 
  1321   00025C                     CWG2INPPS       equ	604	;# 
  1322   00025D                     CWG3PPS         equ	605	;# 
  1323   00025D                     CWG3INPPS       equ	605	;# 
  1324   00025E                     MD1CARLPPS      equ	606	;# 
  1325   00025E                     MDCARLPPS       equ	606	;# 
  1326   00025F                     MD1CARHPPS      equ	607	;# 
  1327   00025F                     MDCARHPPS       equ	607	;# 
  1328   000260                     MD1SRCPPS       equ	608	;# 
  1329   000260                     MDSRCPPS        equ	608	;# 
  1330   000261                     CLCIN0PPS       equ	609	;# 
  1331   000262                     CLCIN1PPS       equ	610	;# 
  1332   000263                     CLCIN2PPS       equ	611	;# 
  1333   000264                     CLCIN3PPS       equ	612	;# 
  1334   000265                     CLCIN4PPS       equ	613	;# 
  1335   000266                     CLCIN5PPS       equ	614	;# 
  1336   000267                     CLCIN6PPS       equ	615	;# 
  1337   000268                     CLCIN7PPS       equ	616	;# 
  1338   000269                     ADACTPPS        equ	617	;# 
  1339   00026A                     SPI1SCKPPS      equ	618	;# 
  1340   00026B                     SPI1SDIPPS      equ	619	;# 
  1341   00026C                     SPI1SSPPS       equ	620	;# 
  1342   00026D                     SPI2SCKPPS      equ	621	;# 
  1343   00026E                     SPI2SDIPPS      equ	622	;# 
  1344   00026F                     SPI2SSPPS       equ	623	;# 
  1345   000270                     I2C1SDAPPS      equ	624	;# 
  1346   000271                     I2C1SCLPPS      equ	625	;# 
  1347   000272                     U1RXPPS         equ	626	;# 
  1348   000273                     U1CTSPPS        equ	627	;# 
  1349   000274                     U2RXPPS         equ	628	;# 
  1350   000275                     U2CTSPPS        equ	629	;# 
  1351   000276                     U3RXPPS         equ	630	;# 
  1352   000277                     U3CTSPPS        equ	631	;# 
  1353   000278                     U4RXPPS         equ	632	;# 
  1354   000279                     U4CTSPPS        equ	633	;# 
  1355   00027A                     U5RXPPS         equ	634	;# 
  1356   00027B                     U5CTSPPS        equ	635	;# 
  1357   000286                     RC4I2C          equ	646	;# 
  1358   000287                     RC3I2C          equ	647	;# 
  1359   000288                     RB2I2C          equ	648	;# 
  1360   000289                     RB1I2C          equ	649	;# 
  1361   00028B                     I2C1RXB         equ	651	;# 
  1362   00028C                     I2C1TXB         equ	652	;# 
  1363   00028D                     I2C1CNT         equ	653	;# 
  1364   00028E                     I2C1ADB0        equ	654	;# 
  1365   00028F                     I2C1ADB1        equ	655	;# 
  1366   000290                     I2C1ADR0        equ	656	;# 
  1367   000291                     I2C1ADR1        equ	657	;# 
  1368   000292                     I2C1ADR2        equ	658	;# 
  1369   000293                     I2C1ADR3        equ	659	;# 
  1370   000294                     I2C1CON0        equ	660	;# 
  1371   000295                     I2C1CON1        equ	661	;# 
  1372   000296                     I2C1CON2        equ	662	;# 
  1373   000297                     I2C1ERR         equ	663	;# 
  1374   000298                     I2C1STAT0       equ	664	;# 
  1375   000299                     I2C1STAT1       equ	665	;# 
  1376   00029A                     I2C1PIR         equ	666	;# 
  1377   00029B                     I2C1PIE         equ	667	;# 
  1378   00029C                     I2C1CLK         equ	668	;# 
  1379   00029D                     I2C1BTO         equ	669	;# 
  1380   0002A1                     U1RXB           equ	673	;# 
  1381   0002A1                     U1RXBL          equ	673	;# 
  1382   0002A2                     U1RXCHK         equ	674	;# 
  1383   0002A3                     U1TXB           equ	675	;# 
  1384   0002A3                     U1TXBL          equ	675	;# 
  1385   0002A4                     U1TXCHK         equ	676	;# 
  1386   0002A5                     U1P1            equ	677	;# 
  1387   0002A5                     U1P1L           equ	677	;# 
  1388   0002A6                     U1P1H           equ	678	;# 
  1389   0002A7                     U1P2            equ	679	;# 
  1390   0002A7                     U1P2L           equ	679	;# 
  1391   0002A8                     U1P2H           equ	680	;# 
  1392   0002A9                     U1P3            equ	681	;# 
  1393   0002A9                     U1P3L           equ	681	;# 
  1394   0002AA                     U1P3H           equ	682	;# 
  1395   0002AB                     U1CON0          equ	683	;# 
  1396   0002AC                     U1CON1          equ	684	;# 
  1397   0002AD                     U1CON2          equ	685	;# 
  1398   0002AE                     U1BRG           equ	686	;# 
  1399   0002AE                     U1BRGL          equ	686	;# 
  1400   0002AF                     U1BRGH          equ	687	;# 
  1401   0002B0                     U1FIFO          equ	688	;# 
  1402   0002B1                     U1UIR           equ	689	;# 
  1403   0002B2                     U1ERRIR         equ	690	;# 
  1404   0002B3                     U1ERRIE         equ	691	;# 
  1405   0002B4                     U2RXB           equ	692	;# 
  1406   0002B4                     U2RXBL          equ	692	;# 
  1407   0002B6                     U2TXB           equ	694	;# 
  1408   0002B6                     U2TXBL          equ	694	;# 
  1409   0002B8                     U2P1            equ	696	;# 
  1410   0002B8                     U2P1L           equ	696	;# 
  1411   0002BA                     U2P2            equ	698	;# 
  1412   0002BA                     U2P2L           equ	698	;# 
  1413   0002BC                     U2P3            equ	700	;# 
  1414   0002BC                     U2P3L           equ	700	;# 
  1415   0002BE                     U2CON0          equ	702	;# 
  1416   0002BF                     U2CON1          equ	703	;# 
  1417   0002C0                     U2CON2          equ	704	;# 
  1418   0002C1                     U2BRG           equ	705	;# 
  1419   0002C1                     U2BRGL          equ	705	;# 
  1420   0002C2                     U2BRGH          equ	706	;# 
  1421   0002C3                     U2FIFO          equ	707	;# 
  1422   0002C4                     U2UIR           equ	708	;# 
  1423   0002C5                     U2ERRIR         equ	709	;# 
  1424   0002C6                     U2ERRIE         equ	710	;# 
  1425   0002C7                     U3RXB           equ	711	;# 
  1426   0002C7                     U3RXBL          equ	711	;# 
  1427   0002C9                     U3TXB           equ	713	;# 
  1428   0002C9                     U3TXBL          equ	713	;# 
  1429   0002CB                     U3P1            equ	715	;# 
  1430   0002CB                     U3P1L           equ	715	;# 
  1431   0002CD                     U3P2            equ	717	;# 
  1432   0002CD                     U3P2L           equ	717	;# 
  1433   0002CF                     U3P3            equ	719	;# 
  1434   0002CF                     U3P3L           equ	719	;# 
  1435   0002D1                     U3CON0          equ	721	;# 
  1436   0002D2                     U3CON1          equ	722	;# 
  1437   0002D3                     U3CON2          equ	723	;# 
  1438   0002D4                     U3BRG           equ	724	;# 
  1439   0002D4                     U3BRGL          equ	724	;# 
  1440   0002D5                     U3BRGH          equ	725	;# 
  1441   0002D6                     U3FIFO          equ	726	;# 
  1442   0002D7                     U3UIR           equ	727	;# 
  1443   0002D8                     U3ERRIR         equ	728	;# 
  1444   0002D9                     U3ERRIE         equ	729	;# 
  1445   0002DA                     U4RXB           equ	730	;# 
  1446   0002DA                     U4RXBL          equ	730	;# 
  1447   0002DC                     U4TXB           equ	732	;# 
  1448   0002DC                     U4TXBL          equ	732	;# 
  1449   0002DE                     U4P1            equ	734	;# 
  1450   0002DE                     U4P1L           equ	734	;# 
  1451   0002E0                     U4P2            equ	736	;# 
  1452   0002E0                     U4P2L           equ	736	;# 
  1453   0002E2                     U4P3            equ	738	;# 
  1454   0002E2                     U4P3L           equ	738	;# 
  1455   0002E4                     U4CON0          equ	740	;# 
  1456   0002E5                     U4CON1          equ	741	;# 
  1457   0002E6                     U4CON2          equ	742	;# 
  1458   0002E7                     U4BRG           equ	743	;# 
  1459   0002E7                     U4BRGL          equ	743	;# 
  1460   0002E8                     U4BRGH          equ	744	;# 
  1461   0002E9                     U4FIFO          equ	745	;# 
  1462   0002EA                     U4UIR           equ	746	;# 
  1463   0002EB                     U4ERRIR         equ	747	;# 
  1464   0002EC                     U4ERRIE         equ	748	;# 
  1465   0002ED                     U5RXB           equ	749	;# 
  1466   0002ED                     U5RXBL          equ	749	;# 
  1467   0002EF                     U5TXB           equ	751	;# 
  1468   0002EF                     U5TXBL          equ	751	;# 
  1469   0002F1                     U5P1            equ	753	;# 
  1470   0002F1                     U5P1L           equ	753	;# 
  1471   0002F3                     U5P2            equ	755	;# 
  1472   0002F3                     U5P2L           equ	755	;# 
  1473   0002F5                     U5P3            equ	757	;# 
  1474   0002F5                     U5P3L           equ	757	;# 
  1475   0002F7                     U5CON0          equ	759	;# 
  1476   0002F8                     U5CON1          equ	760	;# 
  1477   0002F9                     U5CON2          equ	761	;# 
  1478   0002FA                     U5BRG           equ	762	;# 
  1479   0002FA                     U5BRGL          equ	762	;# 
  1480   0002FB                     U5BRGH          equ	763	;# 
  1481   0002FC                     U5FIFO          equ	764	;# 
  1482   0002FD                     U5UIR           equ	765	;# 
  1483   0002FE                     U5ERRIR         equ	766	;# 
  1484   0002FF                     U5ERRIE         equ	767	;# 
  1485   000300                     SMT1TMR         equ	768	;# 
  1486   000300                     SMT1TMRL        equ	768	;# 
  1487   000301                     SMT1TMRH        equ	769	;# 
  1488   000302                     SMT1TMRU        equ	770	;# 
  1489   000303                     SMT1CPR         equ	771	;# 
  1490   000303                     SMT1CPRL        equ	771	;# 
  1491   000304                     SMT1CPRH        equ	772	;# 
  1492   000305                     SMT1CPRU        equ	773	;# 
  1493   000306                     SMT1CPW         equ	774	;# 
  1494   000306                     SMT1CPWL        equ	774	;# 
  1495   000307                     SMT1CPWH        equ	775	;# 
  1496   000308                     SMT1CPWU        equ	776	;# 
  1497   000309                     SMT1PR          equ	777	;# 
  1498   000309                     SMT1PRL         equ	777	;# 
  1499   00030A                     SMT1PRH         equ	778	;# 
  1500   00030B                     SMT1PRU         equ	779	;# 
  1501   00030C                     SMT1CON0        equ	780	;# 
  1502   00030D                     SMT1CON1        equ	781	;# 
  1503   00030E                     SMT1STAT        equ	782	;# 
  1504   00030F                     SMT1CLK         equ	783	;# 
  1505   000310                     SMT1SIG         equ	784	;# 
  1506   000311                     SMT1WIN         equ	785	;# 
  1507   000318                     TMR0L           equ	792	;# 
  1508   000318                     TMR0            equ	792	;# 
  1509   000319                     TMR0H           equ	793	;# 
  1510   000319                     PR0             equ	793	;# 
  1511   00031A                     T0CON0          equ	794	;# 
  1512   00031B                     T0CON1          equ	795	;# 
  1513   00031C                     TMR1            equ	796	;# 
  1514   00031C                     TMR1L           equ	796	;# 
  1515   00031D                     TMR1H           equ	797	;# 
  1516   00031E                     T1CON           equ	798	;# 
  1517   00031E                     TMR1CON         equ	798	;# 
  1518   00031F                     T1GCON          equ	799	;# 
  1519   00031F                     TMR1GCON        equ	799	;# 
  1520   000320                     T1GATE          equ	800	;# 
  1521   000320                     TMR1GATE        equ	800	;# 
  1522   000321                     T1CLK           equ	801	;# 
  1523   000321                     TMR1CLK         equ	801	;# 
  1524   000321                     PR1             equ	801	;# 
  1525   000322                     T2TMR           equ	802	;# 
  1526   000322                     TMR2            equ	802	;# 
  1527   000323                     T2PR            equ	803	;# 
  1528   000323                     PR2             equ	803	;# 
  1529   000324                     T2CON           equ	804	;# 
  1530   000325                     T2HLT           equ	805	;# 
  1531   000326                     T2CLKCON        equ	806	;# 
  1532   000326                     T2CLK           equ	806	;# 
  1533   000327                     T2RST           equ	807	;# 
  1534   000328                     TMR3            equ	808	;# 
  1535   000328                     TMR3L           equ	808	;# 
  1536   000329                     TMR3H           equ	809	;# 
  1537   00032A                     T3CON           equ	810	;# 
  1538   00032A                     TMR3CON         equ	810	;# 
  1539   00032B                     T3GCON          equ	811	;# 
  1540   00032B                     TMR3GCON        equ	811	;# 
  1541   00032C                     T3GATE          equ	812	;# 
  1542   00032C                     TMR3GATE        equ	812	;# 
  1543   00032D                     T3CLK           equ	813	;# 
  1544   00032D                     TMR3CLK         equ	813	;# 
  1545   00032D                     PR3             equ	813	;# 
  1546   00032E                     T4TMR           equ	814	;# 
  1547   00032E                     TMR4            equ	814	;# 
  1548   00032F                     T4PR            equ	815	;# 
  1549   00032F                     PR4             equ	815	;# 
  1550   000330                     T4CON           equ	816	;# 
  1551   000331                     T4HLT           equ	817	;# 
  1552   000332                     T4CLKCON        equ	818	;# 
  1553   000332                     T4CLK           equ	818	;# 
  1554   000333                     T4RST           equ	819	;# 
  1555   000334                     TMR5            equ	820	;# 
  1556   000334                     TMR5L           equ	820	;# 
  1557   000335                     TMR5H           equ	821	;# 
  1558   000336                     T5CON           equ	822	;# 
  1559   000336                     TMR5CON         equ	822	;# 
  1560   000337                     T5GCON          equ	823	;# 
  1561   000337                     TMR5GCON        equ	823	;# 
  1562   000338                     T5GATE          equ	824	;# 
  1563   000338                     TMR5GATE        equ	824	;# 
  1564   000339                     T5CLK           equ	825	;# 
  1565   000339                     TMR5CLK         equ	825	;# 
  1566   000339                     PR5             equ	825	;# 
  1567   00033A                     T6TMR           equ	826	;# 
  1568   00033A                     TMR6            equ	826	;# 
  1569   00033B                     T6PR            equ	827	;# 
  1570   00033B                     PR6             equ	827	;# 
  1571   00033C                     T6CON           equ	828	;# 
  1572   00033D                     T6HLT           equ	829	;# 
  1573   00033E                     T6CLKCON        equ	830	;# 
  1574   00033E                     T6CLK           equ	830	;# 
  1575   00033F                     T6RST           equ	831	;# 
  1576   000340                     CCPR1           equ	832	;# 
  1577   000340                     CCPR1L          equ	832	;# 
  1578   000341                     CCPR1H          equ	833	;# 
  1579   000342                     CCP1CON         equ	834	;# 
  1580   000343                     CCP1CAP         equ	835	;# 
  1581   000344                     CCPR2           equ	836	;# 
  1582   000344                     CCPR2L          equ	836	;# 
  1583   000345                     CCPR2H          equ	837	;# 
  1584   000346                     CCP2CON         equ	838	;# 
  1585   000347                     CCP2CAP         equ	839	;# 
  1586   000348                     CCPR3           equ	840	;# 
  1587   000348                     CCPR3L          equ	840	;# 
  1588   000349                     CCPR3H          equ	841	;# 
  1589   00034A                     CCP3CON         equ	842	;# 
  1590   00034B                     CCP3CAP         equ	843	;# 
  1591   00034C                     CCPTMRS0        equ	844	;# 
  1592   00034F                     CRCDATA         equ	847	;# 
  1593   00034F                     CRCDATL         equ	847	;# 
  1594   000350                     CRCDATH         equ	848	;# 
  1595   000351                     CRCACC          equ	849	;# 
  1596   000351                     CRCACCL         equ	849	;# 
  1597   000352                     CRCACCH         equ	850	;# 
  1598   000353                     CRCSHFT         equ	851	;# 
  1599   000353                     CRCSHIFTL       equ	851	;# 
  1600   000354                     CRCSHIFTH       equ	852	;# 
  1601   000355                     CRCXOR          equ	853	;# 
  1602   000355                     CRCXORL         equ	853	;# 
  1603   000356                     CRCXORH         equ	854	;# 
  1604   000357                     CRCCON0         equ	855	;# 
  1605   000358                     CRCCON1         equ	856	;# 
  1606   00035A                     SCANLADR        equ	858	;# 
  1607   00035A                     SCANLADRL       equ	858	;# 
  1608   00035B                     SCANLADRH       equ	859	;# 
  1609   00035C                     SCANLADRU       equ	860	;# 
  1610   00035D                     SCANHADR        equ	861	;# 
  1611   00035D                     SCANHADRL       equ	861	;# 
  1612   00035E                     SCANHADRH       equ	862	;# 
  1613   00035F                     SCANHADRU       equ	863	;# 
  1614   000360                     SCANCON0        equ	864	;# 
  1615   000361                     SCANTRIG        equ	865	;# 
  1616   000362                     IPR0            equ	866	;# 
  1617   000363                     IPR1            equ	867	;# 
  1618   000364                     IPR2            equ	868	;# 
  1619   000365                     IPR3            equ	869	;# 
  1620   000366                     IPR4            equ	870	;# 
  1621   000367                     IPR5            equ	871	;# 
  1622   000368                     IPR6            equ	872	;# 
  1623   000369                     IPR7            equ	873	;# 
  1624   00036A                     IPR8            equ	874	;# 
  1625   00036B                     IPR9            equ	875	;# 
  1626   00036C                     IPR10           equ	876	;# 
  1627   00036D                     IPR11           equ	877	;# 
  1628   00036E                     IPR12           equ	878	;# 
  1629   00036F                     IPR13           equ	879	;# 
  1630   000370                     IPR14           equ	880	;# 
  1631   000371                     IPR15           equ	881	;# 
  1632   000373                     STATUS_CSHAD    equ	883	;# 
  1633   000374                     WREG_CSHAD      equ	884	;# 
  1634   000375                     BSR_CSHAD       equ	885	;# 
  1635   000376                     SHADCON         equ	886	;# 
  1636   000377                     STATUS_SHAD     equ	887	;# 
  1637   000378                     WREG_SHAD       equ	888	;# 
  1638   000379                     BSR_SHAD        equ	889	;# 
  1639   00037A                     PCLATH_SHAD     equ	890	;# 
  1640   00037B                     PCLATU_SHAD     equ	891	;# 
  1641   00037C                     FSR0SH          equ	892	;# 
  1642   00037C                     FSR0L_SHAD      equ	892	;# 
  1643   00037D                     FSR0H_SHAD      equ	893	;# 
  1644   00037E                     FSR1SH          equ	894	;# 
  1645   00037E                     FSR1L_SHAD      equ	894	;# 
  1646   00037F                     FSR1H_SHAD      equ	895	;# 
  1647   000380                     FSR2SH          equ	896	;# 
  1648   000380                     FSR2L_SHAD      equ	896	;# 
  1649   000381                     FSR2H_SHAD      equ	897	;# 
  1650   000382                     PRODSH          equ	898	;# 
  1651   000382                     PRODL_SHAD      equ	898	;# 
  1652   000383                     PRODH_SHAD      equ	899	;# 
  1653   0003BC                     CWG1CLK         equ	956	;# 
  1654   0003BC                     CWG1CLKCON      equ	956	;# 
  1655   0003BD                     CWG1ISM         equ	957	;# 
  1656   0003BD                     CWG1DAT         equ	957	;# 
  1657   0003BE                     CWG1DBR         equ	958	;# 
  1658   0003BF                     CWG1DBF         equ	959	;# 
  1659   0003C0                     CWG1CON0        equ	960	;# 
  1660   0003C1                     CWG1CON1        equ	961	;# 
  1661   0003C2                     CWG1AS0         equ	962	;# 
  1662   0003C3                     CWG1AS1         equ	963	;# 
  1663   0003C4                     CWG1STR         equ	964	;# 
  1664   0003C5                     CWG2CLK         equ	965	;# 
  1665   0003C5                     CWG2CLKCON      equ	965	;# 
  1666   0003C6                     CWG2ISM         equ	966	;# 
  1667   0003C6                     CWG2DAT         equ	966	;# 
  1668   0003C7                     CWG2DBR         equ	967	;# 
  1669   0003C8                     CWG2DBF         equ	968	;# 
  1670   0003C9                     CWG2CON0        equ	969	;# 
  1671   0003CA                     CWG2CON1        equ	970	;# 
  1672   0003CB                     CWG2AS0         equ	971	;# 
  1673   0003CC                     CWG2AS1         equ	972	;# 
  1674   0003CD                     CWG2STR         equ	973	;# 
  1675   0003CE                     CWG3CLK         equ	974	;# 
  1676   0003CE                     CWG3CLKCON      equ	974	;# 
  1677   0003CF                     CWG3ISM         equ	975	;# 
  1678   0003CF                     CWG3DAT         equ	975	;# 
  1679   0003D0                     CWG3DBR         equ	976	;# 
  1680   0003D1                     CWG3DBF         equ	977	;# 
  1681   0003D2                     CWG3CON0        equ	978	;# 
  1682   0003D3                     CWG3CON1        equ	979	;# 
  1683   0003D4                     CWG3AS0         equ	980	;# 
  1684   0003D5                     CWG3AS1         equ	981	;# 
  1685   0003D6                     CWG3STR         equ	982	;# 
  1686   0003D7                     FVRCON          equ	983	;# 
  1687   0003D8                     ADCPCON         equ	984	;# 
  1688   0003D8                     ADCP            equ	984	;# 
  1689   0003D9                     ADLTH           equ	985	;# 
  1690   0003D9                     ADLTHL          equ	985	;# 
  1691   0003DA                     ADLTHH          equ	986	;# 
  1692   0003DB                     ADUTH           equ	987	;# 
  1693   0003DB                     ADUTHL          equ	987	;# 
  1694   0003DC                     ADUTHH          equ	988	;# 
  1695   0003DD                     ADERR           equ	989	;# 
  1696   0003DD                     ADERRL          equ	989	;# 
  1697   0003DE                     ADERRH          equ	990	;# 
  1698   0003DF                     ADSTPT          equ	991	;# 
  1699   0003DF                     ADSTPTL         equ	991	;# 
  1700   0003E0                     ADSTPTH         equ	992	;# 
  1701   0003E1                     ADFLTR          equ	993	;# 
  1702   0003E1                     ADFLTRL         equ	993	;# 
  1703   0003E2                     ADFLTRH         equ	994	;# 
  1704   0003E3                     ADACC           equ	995	;# 
  1705   0003E3                     ADACCL          equ	995	;# 
  1706   0003E4                     ADACCH          equ	996	;# 
  1707   0003E5                     ADACCU          equ	997	;# 
  1708   0003E6                     ADCNT           equ	998	;# 
  1709   0003E7                     ADRPT           equ	999	;# 
  1710   0003E8                     ADPREV          equ	1000	;# 
  1711   0003E8                     ADPREVL         equ	1000	;# 
  1712   0003E9                     ADPREVH         equ	1001	;# 
  1713   0003EA                     ADRES           equ	1002	;# 
  1714   0003EA                     ADRESL          equ	1002	;# 
  1715   0003EB                     ADRESH          equ	1003	;# 
  1716   0003EC                     ADPCH           equ	1004	;# 
  1717   0003EE                     ADACQ           equ	1006	;# 
  1718   0003EE                     ADACQL          equ	1006	;# 
  1719   0003EF                     ADACQH          equ	1007	;# 
  1720   0003F0                     ADCAP           equ	1008	;# 
  1721   0003F1                     ADPRE           equ	1009	;# 
  1722   0003F1                     ADPREL          equ	1009	;# 
  1723   0003F2                     ADPREH          equ	1010	;# 
  1724   0003F3                     ADCON0          equ	1011	;# 
  1725   0003F4                     ADCON1          equ	1012	;# 
  1726   0003F5                     ADCON2          equ	1013	;# 
  1727   0003F6                     ADCON3          equ	1014	;# 
  1728   0003F7                     ADSTAT          equ	1015	;# 
  1729   0003F8                     ADREF           equ	1016	;# 
  1730   0003F9                     ADACT           equ	1017	;# 
  1731   0003FA                     ADCLK           equ	1018	;# 
  1732   000400                     ANSELA          equ	1024	;# 
  1733   000401                     WPUA            equ	1025	;# 
  1734   000402                     ODCONA          equ	1026	;# 
  1735   000403                     SLRCONA         equ	1027	;# 
  1736   000404                     INLVLA          equ	1028	;# 
  1737   000405                     IOCAP           equ	1029	;# 
  1738   000406                     IOCAN           equ	1030	;# 
  1739   000407                     IOCAF           equ	1031	;# 
  1740   000408                     ANSELB          equ	1032	;# 
  1741   000409                     WPUB            equ	1033	;# 
  1742   00040A                     ODCONB          equ	1034	;# 
  1743   00040B                     SLRCONB         equ	1035	;# 
  1744   00040C                     INLVLB          equ	1036	;# 
  1745   00040D                     IOCBP           equ	1037	;# 
  1746   00040E                     IOCBN           equ	1038	;# 
  1747   00040F                     IOCBF           equ	1039	;# 
  1748   000410                     ANSELC          equ	1040	;# 
  1749   000411                     WPUC            equ	1041	;# 
  1750   000412                     ODCONC          equ	1042	;# 
  1751   000413                     SLRCONC         equ	1043	;# 
  1752   000414                     INLVLC          equ	1044	;# 
  1753   000415                     IOCCP           equ	1045	;# 
  1754   000416                     IOCCN           equ	1046	;# 
  1755   000417                     IOCCF           equ	1047	;# 
  1756   000418                     ANSELD          equ	1048	;# 
  1757   000419                     WPUD            equ	1049	;# 
  1758   00041A                     ODCOND          equ	1050	;# 
  1759   00041B                     SLRCOND         equ	1051	;# 
  1760   00041C                     INLVLD          equ	1052	;# 
  1761   000420                     ANSELE          equ	1056	;# 
  1762   000421                     WPUE            equ	1057	;# 
  1763   000422                     ODCONE          equ	1058	;# 
  1764   000423                     SLRCONE         equ	1059	;# 
  1765   000424                     INLVLE          equ	1060	;# 
  1766   000425                     IOCEP           equ	1061	;# 
  1767   000426                     IOCEN           equ	1062	;# 
  1768   000427                     IOCEF           equ	1063	;# 
  1769   000440                     NCO1ACC         equ	1088	;# 
  1770   000440                     NCO1ACCL        equ	1088	;# 
  1771   000441                     NCO1ACCH        equ	1089	;# 
  1772   000442                     NCO1ACCU        equ	1090	;# 
  1773   000443                     NCO1INC         equ	1091	;# 
  1774   000443                     NCO1INCL        equ	1091	;# 
  1775   000444                     NCO1INCH        equ	1092	;# 
  1776   000445                     NCO1INCU        equ	1093	;# 
  1777   000446                     NCO1CON         equ	1094	;# 
  1778   000447                     NCO1CLK         equ	1095	;# 
  1779   000448                     NCO2ACC         equ	1096	;# 
  1780   000448                     NCO2ACCL        equ	1096	;# 
  1781   000449                     NCO2ACCH        equ	1097	;# 
  1782   00044A                     NCO2ACCU        equ	1098	;# 
  1783   00044B                     NCO2INC         equ	1099	;# 
  1784   00044B                     NCO2INCL        equ	1099	;# 
  1785   00044C                     NCO2INCH        equ	1100	;# 
  1786   00044D                     NCO2INCU        equ	1101	;# 
  1787   00044E                     NCO2CON         equ	1102	;# 
  1788   00044F                     NCO2CLK         equ	1103	;# 
  1789   000450                     NCO3ACC         equ	1104	;# 
  1790   000450                     NCO3ACCL        equ	1104	;# 
  1791   000451                     NCO3ACCH        equ	1105	;# 
  1792   000452                     NCO3ACCU        equ	1106	;# 
  1793   000453                     NCO3INC         equ	1107	;# 
  1794   000453                     NCO3INCL        equ	1107	;# 
  1795   000454                     NCO3INCH        equ	1108	;# 
  1796   000455                     NCO3INCU        equ	1109	;# 
  1797   000456                     NCO3CON         equ	1110	;# 
  1798   000457                     NCO3CLK         equ	1111	;# 
  1799   000459                     IVTLOCK         equ	1113	;# 
  1800   00045A                     IVTAD           equ	1114	;# 
  1801   00045A                     IVTADL          equ	1114	;# 
  1802   00045B                     IVTADH          equ	1115	;# 
  1803   00045C                     IVTADU          equ	1116	;# 
  1804   00045D                     IVTBASE         equ	1117	;# 
  1805   00045D                     IVTBASEL        equ	1117	;# 
  1806   00045E                     IVTBASEH        equ	1118	;# 
  1807   00045F                     IVTBASEU        equ	1119	;# 
  1808   000460                     PWM1ERS         equ	1120	;# 
  1809   000461                     PWM1CLK         equ	1121	;# 
  1810   000462                     PWM1LDS         equ	1122	;# 
  1811   000463                     PWM1PR          equ	1123	;# 
  1812   000463                     PWM1PRL         equ	1123	;# 
  1813   000464                     PWM1PRH         equ	1124	;# 
  1814   000465                     PWM1CPRE        equ	1125	;# 
  1815   000466                     PWM1PIPOS       equ	1126	;# 
  1816   000467                     PWM1GIR         equ	1127	;# 
  1817   000468                     PWM1GIE         equ	1128	;# 
  1818   000469                     PWM1CON         equ	1129	;# 
  1819   00046A                     PWM1S1CFG       equ	1130	;# 
  1820   00046B                     PWM1S1P1        equ	1131	;# 
  1821   00046B                     PWM1S1P1L       equ	1131	;# 
  1822   00046C                     PWM1S1P1H       equ	1132	;# 
  1823   00046D                     PWM1S1P2        equ	1133	;# 
  1824   00046D                     PWM1S1P2L       equ	1133	;# 
  1825   00046E                     PWM1S1P2H       equ	1134	;# 
  1826   00046F                     PWM2ERS         equ	1135	;# 
  1827   000470                     PWM2CLK         equ	1136	;# 
  1828   000471                     PWM2LDS         equ	1137	;# 
  1829   000472                     PWM2PR          equ	1138	;# 
  1830   000472                     PWM2PRL         equ	1138	;# 
  1831   000473                     PWM2PRH         equ	1139	;# 
  1832   000474                     PWM2CPRE        equ	1140	;# 
  1833   000475                     PWM2PIPOS       equ	1141	;# 
  1834   000476                     PWM2GIR         equ	1142	;# 
  1835   000477                     PWM2GIE         equ	1143	;# 
  1836   000478                     PWM2CON         equ	1144	;# 
  1837   000479                     PWM2S1CFG       equ	1145	;# 
  1838   00047A                     PWM2S1P1        equ	1146	;# 
  1839   00047A                     PWM2S1P1L       equ	1146	;# 
  1840   00047B                     PWM2S1P1H       equ	1147	;# 
  1841   00047C                     PWM2S1P2        equ	1148	;# 
  1842   00047C                     PWM2S1P2L       equ	1148	;# 
  1843   00047D                     PWM2S1P2H       equ	1149	;# 
  1844   00047E                     PWM3ERS         equ	1150	;# 
  1845   00047F                     PWM3CLK         equ	1151	;# 
  1846   000480                     PWM3LDS         equ	1152	;# 
  1847   000481                     PWM3PR          equ	1153	;# 
  1848   000481                     PWM3PRL         equ	1153	;# 
  1849   000482                     PWM3PRH         equ	1154	;# 
  1850   000483                     PWM3CPRE        equ	1155	;# 
  1851   000484                     PWM3PIPOS       equ	1156	;# 
  1852   000485                     PWM3GIR         equ	1157	;# 
  1853   000486                     PWM3GIE         equ	1158	;# 
  1854   000487                     PWM3CON         equ	1159	;# 
  1855   000488                     PWM3S1CFG       equ	1160	;# 
  1856   000489                     PWM3S1P1        equ	1161	;# 
  1857   000489                     PWM3S1P1L       equ	1161	;# 
  1858   00048A                     PWM3S1P1H       equ	1162	;# 
  1859   00048B                     PWM3S1P2        equ	1163	;# 
  1860   00048B                     PWM3S1P2L       equ	1163	;# 
  1861   00048C                     PWM3S1P2H       equ	1164	;# 
  1862   00049C                     PWMLOAD         equ	1180	;# 
  1863   00049D                     PWMEN           equ	1181	;# 
  1864   00049E                     PIE0            equ	1182	;# 
  1865   00049F                     PIE1            equ	1183	;# 
  1866   0004A0                     PIE2            equ	1184	;# 
  1867   0004A1                     PIE3            equ	1185	;# 
  1868   0004A2                     PIE4            equ	1186	;# 
  1869   0004A3                     PIE5            equ	1187	;# 
  1870   0004A4                     PIE6            equ	1188	;# 
  1871   0004A5                     PIE7            equ	1189	;# 
  1872   0004A6                     PIE8            equ	1190	;# 
  1873   0004A7                     PIE9            equ	1191	;# 
  1874   0004A8                     PIE10           equ	1192	;# 
  1875   0004A9                     PIE11           equ	1193	;# 
  1876   0004AA                     PIE12           equ	1194	;# 
  1877   0004AB                     PIE13           equ	1195	;# 
  1878   0004AC                     PIE14           equ	1196	;# 
  1879   0004AD                     PIE15           equ	1197	;# 
  1880   0004AE                     PIR0            equ	1198	;# 
  1881   0004AF                     PIR1            equ	1199	;# 
  1882   0004B0                     PIR2            equ	1200	;# 
  1883   0004B1                     PIR3            equ	1201	;# 
  1884   0004B2                     PIR4            equ	1202	;# 
  1885   0004B3                     PIR5            equ	1203	;# 
  1886   0004B4                     PIR6            equ	1204	;# 
  1887   0004B5                     PIR7            equ	1205	;# 
  1888   0004B6                     PIR8            equ	1206	;# 
  1889   0004B7                     PIR9            equ	1207	;# 
  1890   0004B8                     PIR10           equ	1208	;# 
  1891   0004B9                     PIR11           equ	1209	;# 
  1892   0004BA                     PIR12           equ	1210	;# 
  1893   0004BB                     PIR13           equ	1211	;# 
  1894   0004BC                     PIR14           equ	1212	;# 
  1895   0004BD                     PIR15           equ	1213	;# 
  1896   0004BE                     LATA            equ	1214	;# 
  1897   0004BF                     LATB            equ	1215	;# 
  1898   0004C0                     LATC            equ	1216	;# 
  1899   0004C1                     LATD            equ	1217	;# 
  1900   0004C2                     LATE            equ	1218	;# 
  1901   0004C6                     TRISA           equ	1222	;# 
  1902   0004C7                     TRISB           equ	1223	;# 
  1903   0004C8                     TRISC           equ	1224	;# 
  1904   0004C9                     TRISD           equ	1225	;# 
  1905   0004CA                     TRISE           equ	1226	;# 
  1906   0004CE                     PORTA           equ	1230	;# 
  1907   0004CF                     PORTB           equ	1231	;# 
  1908   0004D0                     PORTC           equ	1232	;# 
  1909   0004D1                     PORTD           equ	1233	;# 
  1910   0004D2                     PORTE           equ	1234	;# 
  1911   0004D6                     INTCON0         equ	1238	;# 
  1912   0004D7                     INTCON1         equ	1239	;# 
  1913   0004D8                     STATUS          equ	1240	;# 
  1914   0004D9                     FSR2            equ	1241	;# 
  1915   0004D9                     FSR2L           equ	1241	;# 
  1916   0004DA                     FSR2H           equ	1242	;# 
  1917   0004DB                     PLUSW2          equ	1243	;# 
  1918   0004DC                     PREINC2         equ	1244	;# 
  1919   0004DD                     POSTDEC2        equ	1245	;# 
  1920   0004DE                     POSTINC2        equ	1246	;# 
  1921   0004DF                     INDF2           equ	1247	;# 
  1922   0004E0                     BSR             equ	1248	;# 
  1923   0004E1                     FSR1            equ	1249	;# 
  1924   0004E1                     FSR1L           equ	1249	;# 
  1925   0004E2                     FSR1H           equ	1250	;# 
  1926   0004E3                     PLUSW1          equ	1251	;# 
  1927   0004E4                     PREINC1         equ	1252	;# 
  1928   0004E5                     POSTDEC1        equ	1253	;# 
  1929   0004E6                     POSTINC1        equ	1254	;# 
  1930   0004E7                     INDF1           equ	1255	;# 
  1931   0004E8                     WREG            equ	1256	;# 
  1932   0004E9                     FSR0            equ	1257	;# 
  1933   0004E9                     FSR0L           equ	1257	;# 
  1934   0004EA                     FSR0H           equ	1258	;# 
  1935   0004EB                     PLUSW0          equ	1259	;# 
  1936   0004EC                     PREINC0         equ	1260	;# 
  1937   0004ED                     POSTDEC0        equ	1261	;# 
  1938   0004EE                     POSTINC0        equ	1262	;# 
  1939   0004EF                     INDF0           equ	1263	;# 
  1940   0004F0                     PCON0           equ	1264	;# 
  1941   0004F1                     PCON1           equ	1265	;# 
  1942   0004F2                     CPUDOZE         equ	1266	;# 
  1943   0004F3                     PROD            equ	1267	;# 
  1944   0004F3                     PRODL           equ	1267	;# 
  1945   0004F4                     PRODH           equ	1268	;# 
  1946   0004F5                     TABLAT          equ	1269	;# 
  1947   0004F6                     TBLPTR          equ	1270	;# 
  1948   0004F6                     TBLPTRL         equ	1270	;# 
  1949   0004F7                     TBLPTRH         equ	1271	;# 
  1950   0004F8                     TBLPTRU         equ	1272	;# 
  1951   0004F9                     PCLAT           equ	1273	;# 
  1952   0004F9                     PCL             equ	1273	;# 
  1953   0004FA                     PCLATH          equ	1274	;# 
  1954   0004FB                     PCLATU          equ	1275	;# 
  1955   0004FC                     STKPTR          equ	1276	;# 
  1956   0004FD                     TOS             equ	1277	;# 
  1957   0004FD                     TOSL            equ	1277	;# 
  1958   0004FE                     TOSH            equ	1278	;# 
  1959   0004FF                     TOSU            equ	1279	;# 
  1960   000039                     CLKRCON         equ	57	;# 
  1961   00003A                     CLKRCLK         equ	58	;# 
  1962   000040                     NVMCON0         equ	64	;# 
  1963   000041                     NVMCON1         equ	65	;# 
  1964   000042                     NVMLOCK         equ	66	;# 
  1965   000043                     NVMADR          equ	67	;# 
  1966   000043                     NVMADRL         equ	67	;# 
  1967   000044                     NVMADRH         equ	68	;# 
  1968   000045                     NVMADRU         equ	69	;# 
  1969   000046                     NVMDAT          equ	70	;# 
  1970   000046                     NVMDATL         equ	70	;# 
  1971   000047                     NVMDATH         equ	71	;# 
  1972   000048                     VREGCON         equ	72	;# 
  1973   000049                     BORCON          equ	73	;# 
  1974   00004A                     HLVDCON0        equ	74	;# 
  1975   00004B                     HLVDCON1        equ	75	;# 
  1976   00004C                     ZCDCON          equ	76	;# 
  1977   000060                     PMD0            equ	96	;# 
  1978   000061                     PMD1            equ	97	;# 
  1979   000063                     PMD3            equ	99	;# 
  1980   000064                     PMD4            equ	100	;# 
  1981   000065                     PMD5            equ	101	;# 
  1982   000066                     PMD6            equ	102	;# 
  1983   000067                     PMD7            equ	103	;# 
  1984   000068                     PMD8            equ	104	;# 
  1985   00006A                     MD1CON0         equ	106	;# 
  1986   00006B                     MD1CON1         equ	107	;# 
  1987   00006C                     MD1SRC          equ	108	;# 
  1988   00006D                     MD1CARL         equ	109	;# 
  1989   00006E                     MD1CARH         equ	110	;# 
  1990   00006F                     CMOUT           equ	111	;# 
  1991   000070                     CM1CON0         equ	112	;# 
  1992   000071                     CM1CON1         equ	113	;# 
  1993   000072                     CM1NCH          equ	114	;# 
  1994   000073                     CM1PCH          equ	115	;# 
  1995   000074                     CM2CON0         equ	116	;# 
  1996   000075                     CM2CON1         equ	117	;# 
  1997   000076                     CM2NCH          equ	118	;# 
  1998   000077                     CM2PCH          equ	119	;# 
  1999   000078                     WDTCON0         equ	120	;# 
  2000   000079                     WDTCON1         equ	121	;# 
  2001   00007A                     WDTPS           equ	122	;# 
  2002   00007A                     WDTPSL          equ	122	;# 
  2003   00007B                     WDTPSH          equ	123	;# 
  2004   00007C                     WDTTMR          equ	124	;# 
  2005   00007D                     DAC1DAT         equ	125	;# 
  2006   00007D                     DAC1DATL        equ	125	;# 
  2007   00007F                     DAC1CON         equ	127	;# 
  2008   000080                     SPI1RXB         equ	128	;# 
  2009   000081                     SPI1TXB         equ	129	;# 
  2010   000082                     SPI1TCNT        equ	130	;# 
  2011   000082                     SPI1TCNTL       equ	130	;# 
  2012   000083                     SPI1TCNTH       equ	131	;# 
  2013   000084                     SPI1CON0        equ	132	;# 
  2014   000085                     SPI1CON1        equ	133	;# 
  2015   000086                     SPI1CON2        equ	134	;# 
  2016   000087                     SPI1STATUS      equ	135	;# 
  2017   000088                     SPI1TWIDTH      equ	136	;# 
  2018   000089                     SPI1BAUD        equ	137	;# 
  2019   00008A                     SPI1INTF        equ	138	;# 
  2020   00008B                     SPI1INTE        equ	139	;# 
  2021   00008C                     SPI1CLK         equ	140	;# 
  2022   00008D                     SPI2RXB         equ	141	;# 
  2023   00008E                     SPI2TXB         equ	142	;# 
  2024   00008F                     SPI2TCNT        equ	143	;# 
  2025   00008F                     SPI2TCNTL       equ	143	;# 
  2026   000090                     SPI2TCNTH       equ	144	;# 
  2027   000091                     SPI2CON0        equ	145	;# 
  2028   000092                     SPI2CON1        equ	146	;# 
  2029   000093                     SPI2CON2        equ	147	;# 
  2030   000094                     SPI2STATUS      equ	148	;# 
  2031   000095                     SPI2TWIDTH      equ	149	;# 
  2032   000096                     SPI2BAUD        equ	150	;# 
  2033   000097                     SPI2INTF        equ	151	;# 
  2034   000098                     SPI2INTE        equ	152	;# 
  2035   000099                     SPI2CLK         equ	153	;# 
  2036   0000AC                     ACTCON          equ	172	;# 
  2037   0000AD                     OSCCON1         equ	173	;# 
  2038   0000AE                     OSCCON2         equ	174	;# 
  2039   0000AF                     OSCCON3         equ	175	;# 
  2040   0000B0                     OSCTUNE         equ	176	;# 
  2041   0000B1                     OSCFRQ          equ	177	;# 
  2042   0000B1                     OSCFREQ         equ	177	;# 
  2043   0000B2                     OSCSTAT         equ	178	;# 
  2044   0000B2                     OSCSTAT1        equ	178	;# 
  2045   0000B3                     OSCEN           equ	179	;# 
  2046   0000B4                     PRLOCK          equ	180	;# 
  2047   0000B5                     SCANPR          equ	181	;# 
  2048   0000B6                     DMA1PR          equ	182	;# 
  2049   0000B7                     DMA2PR          equ	183	;# 
  2050   0000B8                     DMA3PR          equ	184	;# 
  2051   0000B9                     DMA4PR          equ	185	;# 
  2052   0000BA                     DMA5PR          equ	186	;# 
  2053   0000BB                     DMA6PR          equ	187	;# 
  2054   0000BE                     MAINPR          equ	190	;# 
  2055   0000BF                     ISRPR           equ	191	;# 
  2056   0000D4                     CLCDATA         equ	212	;# 
  2057   0000D5                     CLCSELECT       equ	213	;# 
  2058   0000D6                     CLCnCON         equ	214	;# 
  2059   0000D7                     CLCnPOL         equ	215	;# 
  2060   0000D8                     CLCnSEL0        equ	216	;# 
  2061   0000D9                     CLCnSEL1        equ	217	;# 
  2062   0000DA                     CLCnSEL2        equ	218	;# 
  2063   0000DB                     CLCnSEL3        equ	219	;# 
  2064   0000DC                     CLCnGLS0        equ	220	;# 
  2065   0000DD                     CLCnGLS1        equ	221	;# 
  2066   0000DE                     CLCnGLS2        equ	222	;# 
  2067   0000DF                     CLCnGLS3        equ	223	;# 
  2068   0000E8                     DMASELECT       equ	232	;# 
  2069   0000E9                     DMAnBUF         equ	233	;# 
  2070   0000EA                     DMAnDCNT        equ	234	;# 
  2071   0000EA                     DMAnDCNTL       equ	234	;# 
  2072   0000EB                     DMAnDCNTH       equ	235	;# 
  2073   0000EC                     DMAnDPTR        equ	236	;# 
  2074   0000EC                     DMAnDPTRL       equ	236	;# 
  2075   0000ED                     DMAnDPTRH       equ	237	;# 
  2076   0000EE                     DMAnDSZ         equ	238	;# 
  2077   0000EE                     DMAnDSZL        equ	238	;# 
  2078   0000EF                     DMAnDSZH        equ	239	;# 
  2079   0000F0                     DMAnDSA         equ	240	;# 
  2080   0000F0                     DMAnDSAL        equ	240	;# 
  2081   0000F1                     DMAnDSAH        equ	241	;# 
  2082   0000F2                     DMAnSCNT        equ	242	;# 
  2083   0000F2                     DMAnSCNTL       equ	242	;# 
  2084   0000F3                     DMAnSCNTH       equ	243	;# 
  2085   0000F4                     DMAnSPTR        equ	244	;# 
  2086   0000F4                     DMAnSPTRL       equ	244	;# 
  2087   0000F5                     DMAnSPTRH       equ	245	;# 
  2088   0000F6                     DMAnSPTRU       equ	246	;# 
  2089   0000F7                     DMAnSSZ         equ	247	;# 
  2090   0000F7                     DMAnSSZL        equ	247	;# 
  2091   0000F8                     DMAnSSZH        equ	248	;# 
  2092   0000F9                     DMAnSSA         equ	249	;# 
  2093   0000F9                     DMAnSSAL        equ	249	;# 
  2094   0000FA                     DMAnSSAH        equ	250	;# 
  2095   0000FB                     DMAnSSAU        equ	251	;# 
  2096   0000FC                     DMAnCON0        equ	252	;# 
  2097   0000FD                     DMAnCON1        equ	253	;# 
  2098   0000FE                     DMAnAIRQ        equ	254	;# 
  2099   0000FF                     DMAnSIRQ        equ	255	;# 
  2100   000200                     PPSLOCK         equ	512	;# 
  2101   000201                     RA0PPS          equ	513	;# 
  2102   000202                     RA1PPS          equ	514	;# 
  2103   000203                     RA2PPS          equ	515	;# 
  2104   000204                     RA3PPS          equ	516	;# 
  2105   000205                     RA4PPS          equ	517	;# 
  2106   000206                     RA5PPS          equ	518	;# 
  2107   000207                     RA6PPS          equ	519	;# 
  2108   000208                     RA7PPS          equ	520	;# 
  2109   000209                     RB0PPS          equ	521	;# 
  2110   00020A                     RB1PPS          equ	522	;# 
  2111   00020B                     RB2PPS          equ	523	;# 
  2112   00020C                     RB3PPS          equ	524	;# 
  2113   00020D                     RB4PPS          equ	525	;# 
  2114   00020E                     RB5PPS          equ	526	;# 
  2115   00020F                     RB6PPS          equ	527	;# 
  2116   000210                     RB7PPS          equ	528	;# 
  2117   000211                     RC0PPS          equ	529	;# 
  2118   000212                     RC1PPS          equ	530	;# 
  2119   000213                     RC2PPS          equ	531	;# 
  2120   000214                     RC3PPS          equ	532	;# 
  2121   000215                     RC4PPS          equ	533	;# 
  2122   000216                     RC5PPS          equ	534	;# 
  2123   000217                     RC6PPS          equ	535	;# 
  2124   000218                     RC7PPS          equ	536	;# 
  2125   000219                     RD0PPS          equ	537	;# 
  2126   00021A                     RD1PPS          equ	538	;# 
  2127   00021B                     RD2PPS          equ	539	;# 
  2128   00021C                     RD3PPS          equ	540	;# 
  2129   00021D                     RD4PPS          equ	541	;# 
  2130   00021E                     RD5PPS          equ	542	;# 
  2131   00021F                     RD6PPS          equ	543	;# 
  2132   000220                     RD7PPS          equ	544	;# 
  2133   000221                     RE0PPS          equ	545	;# 
  2134   000222                     RE1PPS          equ	546	;# 
  2135   000223                     RE2PPS          equ	547	;# 
  2136   00023E                     INT0PPS         equ	574	;# 
  2137   00023F                     INT1PPS         equ	575	;# 
  2138   000240                     INT2PPS         equ	576	;# 
  2139   000241                     T0CKIPPS        equ	577	;# 
  2140   000242                     T1CKIPPS        equ	578	;# 
  2141   000243                     T1GPPS          equ	579	;# 
  2142   000244                     T3CKIPPS        equ	580	;# 
  2143   000245                     T3GPPS          equ	581	;# 
  2144   000246                     T5CKIPPS        equ	582	;# 
  2145   000247                     T5GPPS          equ	583	;# 
  2146   000248                     T2INPPS         equ	584	;# 
  2147   000249                     T4INPPS         equ	585	;# 
  2148   00024A                     T6INPPS         equ	586	;# 
  2149   00024F                     CCP1PPS         equ	591	;# 
  2150   000250                     CCP2PPS         equ	592	;# 
  2151   000251                     CCP3PPS         equ	593	;# 
  2152   000253                     PWM1ERSPPS      equ	595	;# 
  2153   000254                     PWM2ERSPPS      equ	596	;# 
  2154   000255                     PWM3ERSPPS      equ	597	;# 
  2155   000257                     PWMIN0PPS       equ	599	;# 
  2156   000258                     PWMIN1PPS       equ	600	;# 
  2157   000259                     SMT1WINPPS      equ	601	;# 
  2158   00025A                     SMT1SIGPPS      equ	602	;# 
  2159   00025B                     CWG1PPS         equ	603	;# 
  2160   00025B                     CWG1INPPS       equ	603	;# 
  2161   00025C                     CWG2PPS         equ	604	;# 
  2162   00025C                     CWG2INPPS       equ	604	;# 
  2163   00025D                     CWG3PPS         equ	605	;# 
  2164   00025D                     CWG3INPPS       equ	605	;# 
  2165   00025E                     MD1CARLPPS      equ	606	;# 
  2166   00025E                     MDCARLPPS       equ	606	;# 
  2167   00025F                     MD1CARHPPS      equ	607	;# 
  2168   00025F                     MDCARHPPS       equ	607	;# 
  2169   000260                     MD1SRCPPS       equ	608	;# 
  2170   000260                     MDSRCPPS        equ	608	;# 
  2171   000261                     CLCIN0PPS       equ	609	;# 
  2172   000262                     CLCIN1PPS       equ	610	;# 
  2173   000263                     CLCIN2PPS       equ	611	;# 
  2174   000264                     CLCIN3PPS       equ	612	;# 
  2175   000265                     CLCIN4PPS       equ	613	;# 
  2176   000266                     CLCIN5PPS       equ	614	;# 
  2177   000267                     CLCIN6PPS       equ	615	;# 
  2178   000268                     CLCIN7PPS       equ	616	;# 
  2179   000269                     ADACTPPS        equ	617	;# 
  2180   00026A                     SPI1SCKPPS      equ	618	;# 
  2181   00026B                     SPI1SDIPPS      equ	619	;# 
  2182   00026C                     SPI1SSPPS       equ	620	;# 
  2183   00026D                     SPI2SCKPPS      equ	621	;# 
  2184   00026E                     SPI2SDIPPS      equ	622	;# 
  2185   00026F                     SPI2SSPPS       equ	623	;# 
  2186   000270                     I2C1SDAPPS      equ	624	;# 
  2187   000271                     I2C1SCLPPS      equ	625	;# 
  2188   000272                     U1RXPPS         equ	626	;# 
  2189   000273                     U1CTSPPS        equ	627	;# 
  2190   000274                     U2RXPPS         equ	628	;# 
  2191   000275                     U2CTSPPS        equ	629	;# 
  2192   000276                     U3RXPPS         equ	630	;# 
  2193   000277                     U3CTSPPS        equ	631	;# 
  2194   000278                     U4RXPPS         equ	632	;# 
  2195   000279                     U4CTSPPS        equ	633	;# 
  2196   00027A                     U5RXPPS         equ	634	;# 
  2197   00027B                     U5CTSPPS        equ	635	;# 
  2198   000286                     RC4I2C          equ	646	;# 
  2199   000287                     RC3I2C          equ	647	;# 
  2200   000288                     RB2I2C          equ	648	;# 
  2201   000289                     RB1I2C          equ	649	;# 
  2202   00028B                     I2C1RXB         equ	651	;# 
  2203   00028C                     I2C1TXB         equ	652	;# 
  2204   00028D                     I2C1CNT         equ	653	;# 
  2205   00028E                     I2C1ADB0        equ	654	;# 
  2206   00028F                     I2C1ADB1        equ	655	;# 
  2207   000290                     I2C1ADR0        equ	656	;# 
  2208   000291                     I2C1ADR1        equ	657	;# 
  2209   000292                     I2C1ADR2        equ	658	;# 
  2210   000293                     I2C1ADR3        equ	659	;# 
  2211   000294                     I2C1CON0        equ	660	;# 
  2212   000295                     I2C1CON1        equ	661	;# 
  2213   000296                     I2C1CON2        equ	662	;# 
  2214   000297                     I2C1ERR         equ	663	;# 
  2215   000298                     I2C1STAT0       equ	664	;# 
  2216   000299                     I2C1STAT1       equ	665	;# 
  2217   00029A                     I2C1PIR         equ	666	;# 
  2218   00029B                     I2C1PIE         equ	667	;# 
  2219   00029C                     I2C1CLK         equ	668	;# 
  2220   00029D                     I2C1BTO         equ	669	;# 
  2221   0002A1                     U1RXB           equ	673	;# 
  2222   0002A1                     U1RXBL          equ	673	;# 
  2223   0002A2                     U1RXCHK         equ	674	;# 
  2224   0002A3                     U1TXB           equ	675	;# 
  2225   0002A3                     U1TXBL          equ	675	;# 
  2226   0002A4                     U1TXCHK         equ	676	;# 
  2227   0002A5                     U1P1            equ	677	;# 
  2228   0002A5                     U1P1L           equ	677	;# 
  2229   0002A6                     U1P1H           equ	678	;# 
  2230   0002A7                     U1P2            equ	679	;# 
  2231   0002A7                     U1P2L           equ	679	;# 
  2232   0002A8                     U1P2H           equ	680	;# 
  2233   0002A9                     U1P3            equ	681	;# 
  2234   0002A9                     U1P3L           equ	681	;# 
  2235   0002AA                     U1P3H           equ	682	;# 
  2236   0002AB                     U1CON0          equ	683	;# 
  2237   0002AC                     U1CON1          equ	684	;# 
  2238   0002AD                     U1CON2          equ	685	;# 
  2239   0002AE                     U1BRG           equ	686	;# 
  2240   0002AE                     U1BRGL          equ	686	;# 
  2241   0002AF                     U1BRGH          equ	687	;# 
  2242   0002B0                     U1FIFO          equ	688	;# 
  2243   0002B1                     U1UIR           equ	689	;# 
  2244   0002B2                     U1ERRIR         equ	690	;# 
  2245   0002B3                     U1ERRIE         equ	691	;# 
  2246   0002B4                     U2RXB           equ	692	;# 
  2247   0002B4                     U2RXBL          equ	692	;# 
  2248   0002B6                     U2TXB           equ	694	;# 
  2249   0002B6                     U2TXBL          equ	694	;# 
  2250   0002B8                     U2P1            equ	696	;# 
  2251   0002B8                     U2P1L           equ	696	;# 
  2252   0002BA                     U2P2            equ	698	;# 
  2253   0002BA                     U2P2L           equ	698	;# 
  2254   0002BC                     U2P3            equ	700	;# 
  2255   0002BC                     U2P3L           equ	700	;# 
  2256   0002BE                     U2CON0          equ	702	;# 
  2257   0002BF                     U2CON1          equ	703	;# 
  2258   0002C0                     U2CON2          equ	704	;# 
  2259   0002C1                     U2BRG           equ	705	;# 
  2260   0002C1                     U2BRGL          equ	705	;# 
  2261   0002C2                     U2BRGH          equ	706	;# 
  2262   0002C3                     U2FIFO          equ	707	;# 
  2263   0002C4                     U2UIR           equ	708	;# 
  2264   0002C5                     U2ERRIR         equ	709	;# 
  2265   0002C6                     U2ERRIE         equ	710	;# 
  2266   0002C7                     U3RXB           equ	711	;# 
  2267   0002C7                     U3RXBL          equ	711	;# 
  2268   0002C9                     U3TXB           equ	713	;# 
  2269   0002C9                     U3TXBL          equ	713	;# 
  2270   0002CB                     U3P1            equ	715	;# 
  2271   0002CB                     U3P1L           equ	715	;# 
  2272   0002CD                     U3P2            equ	717	;# 
  2273   0002CD                     U3P2L           equ	717	;# 
  2274   0002CF                     U3P3            equ	719	;# 
  2275   0002CF                     U3P3L           equ	719	;# 
  2276   0002D1                     U3CON0          equ	721	;# 
  2277   0002D2                     U3CON1          equ	722	;# 
  2278   0002D3                     U3CON2          equ	723	;# 
  2279   0002D4                     U3BRG           equ	724	;# 
  2280   0002D4                     U3BRGL          equ	724	;# 
  2281   0002D5                     U3BRGH          equ	725	;# 
  2282   0002D6                     U3FIFO          equ	726	;# 
  2283   0002D7                     U3UIR           equ	727	;# 
  2284   0002D8                     U3ERRIR         equ	728	;# 
  2285   0002D9                     U3ERRIE         equ	729	;# 
  2286   0002DA                     U4RXB           equ	730	;# 
  2287   0002DA                     U4RXBL          equ	730	;# 
  2288   0002DC                     U4TXB           equ	732	;# 
  2289   0002DC                     U4TXBL          equ	732	;# 
  2290   0002DE                     U4P1            equ	734	;# 
  2291   0002DE                     U4P1L           equ	734	;# 
  2292   0002E0                     U4P2            equ	736	;# 
  2293   0002E0                     U4P2L           equ	736	;# 
  2294   0002E2                     U4P3            equ	738	;# 
  2295   0002E2                     U4P3L           equ	738	;# 
  2296   0002E4                     U4CON0          equ	740	;# 
  2297   0002E5                     U4CON1          equ	741	;# 
  2298   0002E6                     U4CON2          equ	742	;# 
  2299   0002E7                     U4BRG           equ	743	;# 
  2300   0002E7                     U4BRGL          equ	743	;# 
  2301   0002E8                     U4BRGH          equ	744	;# 
  2302   0002E9                     U4FIFO          equ	745	;# 
  2303   0002EA                     U4UIR           equ	746	;# 
  2304   0002EB                     U4ERRIR         equ	747	;# 
  2305   0002EC                     U4ERRIE         equ	748	;# 
  2306   0002ED                     U5RXB           equ	749	;# 
  2307   0002ED                     U5RXBL          equ	749	;# 
  2308   0002EF                     U5TXB           equ	751	;# 
  2309   0002EF                     U5TXBL          equ	751	;# 
  2310   0002F1                     U5P1            equ	753	;# 
  2311   0002F1                     U5P1L           equ	753	;# 
  2312   0002F3                     U5P2            equ	755	;# 
  2313   0002F3                     U5P2L           equ	755	;# 
  2314   0002F5                     U5P3            equ	757	;# 
  2315   0002F5                     U5P3L           equ	757	;# 
  2316   0002F7                     U5CON0          equ	759	;# 
  2317   0002F8                     U5CON1          equ	760	;# 
  2318   0002F9                     U5CON2          equ	761	;# 
  2319   0002FA                     U5BRG           equ	762	;# 
  2320   0002FA                     U5BRGL          equ	762	;# 
  2321   0002FB                     U5BRGH          equ	763	;# 
  2322   0002FC                     U5FIFO          equ	764	;# 
  2323   0002FD                     U5UIR           equ	765	;# 
  2324   0002FE                     U5ERRIR         equ	766	;# 
  2325   0002FF                     U5ERRIE         equ	767	;# 
  2326   000300                     SMT1TMR         equ	768	;# 
  2327   000300                     SMT1TMRL        equ	768	;# 
  2328   000301                     SMT1TMRH        equ	769	;# 
  2329   000302                     SMT1TMRU        equ	770	;# 
  2330   000303                     SMT1CPR         equ	771	;# 
  2331   000303                     SMT1CPRL        equ	771	;# 
  2332   000304                     SMT1CPRH        equ	772	;# 
  2333   000305                     SMT1CPRU        equ	773	;# 
  2334   000306                     SMT1CPW         equ	774	;# 
  2335   000306                     SMT1CPWL        equ	774	;# 
  2336   000307                     SMT1CPWH        equ	775	;# 
  2337   000308                     SMT1CPWU        equ	776	;# 
  2338   000309                     SMT1PR          equ	777	;# 
  2339   000309                     SMT1PRL         equ	777	;# 
  2340   00030A                     SMT1PRH         equ	778	;# 
  2341   00030B                     SMT1PRU         equ	779	;# 
  2342   00030C                     SMT1CON0        equ	780	;# 
  2343   00030D                     SMT1CON1        equ	781	;# 
  2344   00030E                     SMT1STAT        equ	782	;# 
  2345   00030F                     SMT1CLK         equ	783	;# 
  2346   000310                     SMT1SIG         equ	784	;# 
  2347   000311                     SMT1WIN         equ	785	;# 
  2348   000318                     TMR0L           equ	792	;# 
  2349   000318                     TMR0            equ	792	;# 
  2350   000319                     TMR0H           equ	793	;# 
  2351   000319                     PR0             equ	793	;# 
  2352   00031A                     T0CON0          equ	794	;# 
  2353   00031B                     T0CON1          equ	795	;# 
  2354   00031C                     TMR1            equ	796	;# 
  2355   00031C                     TMR1L           equ	796	;# 
  2356   00031D                     TMR1H           equ	797	;# 
  2357   00031E                     T1CON           equ	798	;# 
  2358   00031E                     TMR1CON         equ	798	;# 
  2359   00031F                     T1GCON          equ	799	;# 
  2360   00031F                     TMR1GCON        equ	799	;# 
  2361   000320                     T1GATE          equ	800	;# 
  2362   000320                     TMR1GATE        equ	800	;# 
  2363   000321                     T1CLK           equ	801	;# 
  2364   000321                     TMR1CLK         equ	801	;# 
  2365   000321                     PR1             equ	801	;# 
  2366   000322                     T2TMR           equ	802	;# 
  2367   000322                     TMR2            equ	802	;# 
  2368   000323                     T2PR            equ	803	;# 
  2369   000323                     PR2             equ	803	;# 
  2370   000324                     T2CON           equ	804	;# 
  2371   000325                     T2HLT           equ	805	;# 
  2372   000326                     T2CLKCON        equ	806	;# 
  2373   000326                     T2CLK           equ	806	;# 
  2374   000327                     T2RST           equ	807	;# 
  2375   000328                     TMR3            equ	808	;# 
  2376   000328                     TMR3L           equ	808	;# 
  2377   000329                     TMR3H           equ	809	;# 
  2378   00032A                     T3CON           equ	810	;# 
  2379   00032A                     TMR3CON         equ	810	;# 
  2380   00032B                     T3GCON          equ	811	;# 
  2381   00032B                     TMR3GCON        equ	811	;# 
  2382   00032C                     T3GATE          equ	812	;# 
  2383   00032C                     TMR3GATE        equ	812	;# 
  2384   00032D                     T3CLK           equ	813	;# 
  2385   00032D                     TMR3CLK         equ	813	;# 
  2386   00032D                     PR3             equ	813	;# 
  2387   00032E                     T4TMR           equ	814	;# 
  2388   00032E                     TMR4            equ	814	;# 
  2389   00032F                     T4PR            equ	815	;# 
  2390   00032F                     PR4             equ	815	;# 
  2391   000330                     T4CON           equ	816	;# 
  2392   000331                     T4HLT           equ	817	;# 
  2393   000332                     T4CLKCON        equ	818	;# 
  2394   000332                     T4CLK           equ	818	;# 
  2395   000333                     T4RST           equ	819	;# 
  2396   000334                     TMR5            equ	820	;# 
  2397   000334                     TMR5L           equ	820	;# 
  2398   000335                     TMR5H           equ	821	;# 
  2399   000336                     T5CON           equ	822	;# 
  2400   000336                     TMR5CON         equ	822	;# 
  2401   000337                     T5GCON          equ	823	;# 
  2402   000337                     TMR5GCON        equ	823	;# 
  2403   000338                     T5GATE          equ	824	;# 
  2404   000338                     TMR5GATE        equ	824	;# 
  2405   000339                     T5CLK           equ	825	;# 
  2406   000339                     TMR5CLK         equ	825	;# 
  2407   000339                     PR5             equ	825	;# 
  2408   00033A                     T6TMR           equ	826	;# 
  2409   00033A                     TMR6            equ	826	;# 
  2410   00033B                     T6PR            equ	827	;# 
  2411   00033B                     PR6             equ	827	;# 
  2412   00033C                     T6CON           equ	828	;# 
  2413   00033D                     T6HLT           equ	829	;# 
  2414   00033E                     T6CLKCON        equ	830	;# 
  2415   00033E                     T6CLK           equ	830	;# 
  2416   00033F                     T6RST           equ	831	;# 
  2417   000340                     CCPR1           equ	832	;# 
  2418   000340                     CCPR1L          equ	832	;# 
  2419   000341                     CCPR1H          equ	833	;# 
  2420   000342                     CCP1CON         equ	834	;# 
  2421   000343                     CCP1CAP         equ	835	;# 
  2422   000344                     CCPR2           equ	836	;# 
  2423   000344                     CCPR2L          equ	836	;# 
  2424   000345                     CCPR2H          equ	837	;# 
  2425   000346                     CCP2CON         equ	838	;# 
  2426   000347                     CCP2CAP         equ	839	;# 
  2427   000348                     CCPR3           equ	840	;# 
  2428   000348                     CCPR3L          equ	840	;# 
  2429   000349                     CCPR3H          equ	841	;# 
  2430   00034A                     CCP3CON         equ	842	;# 
  2431   00034B                     CCP3CAP         equ	843	;# 
  2432   00034C                     CCPTMRS0        equ	844	;# 
  2433   00034F                     CRCDATA         equ	847	;# 
  2434   00034F                     CRCDATL         equ	847	;# 
  2435   000350                     CRCDATH         equ	848	;# 
  2436   000351                     CRCACC          equ	849	;# 
  2437   000351                     CRCACCL         equ	849	;# 
  2438   000352                     CRCACCH         equ	850	;# 
  2439   000353                     CRCSHFT         equ	851	;# 
  2440   000353                     CRCSHIFTL       equ	851	;# 
  2441   000354                     CRCSHIFTH       equ	852	;# 
  2442   000355                     CRCXOR          equ	853	;# 
  2443   000355                     CRCXORL         equ	853	;# 
  2444   000356                     CRCXORH         equ	854	;# 
  2445   000357                     CRCCON0         equ	855	;# 
  2446   000358                     CRCCON1         equ	856	;# 
  2447   00035A                     SCANLADR        equ	858	;# 
  2448   00035A                     SCANLADRL       equ	858	;# 
  2449   00035B                     SCANLADRH       equ	859	;# 
  2450   00035C                     SCANLADRU       equ	860	;# 
  2451   00035D                     SCANHADR        equ	861	;# 
  2452   00035D                     SCANHADRL       equ	861	;# 
  2453   00035E                     SCANHADRH       equ	862	;# 
  2454   00035F                     SCANHADRU       equ	863	;# 
  2455   000360                     SCANCON0        equ	864	;# 
  2456   000361                     SCANTRIG        equ	865	;# 
  2457   000362                     IPR0            equ	866	;# 
  2458   000363                     IPR1            equ	867	;# 
  2459   000364                     IPR2            equ	868	;# 
  2460   000365                     IPR3            equ	869	;# 
  2461   000366                     IPR4            equ	870	;# 
  2462   000367                     IPR5            equ	871	;# 
  2463   000368                     IPR6            equ	872	;# 
  2464   000369                     IPR7            equ	873	;# 
  2465   00036A                     IPR8            equ	874	;# 
  2466   00036B                     IPR9            equ	875	;# 
  2467   00036C                     IPR10           equ	876	;# 
  2468   00036D                     IPR11           equ	877	;# 
  2469   00036E                     IPR12           equ	878	;# 
  2470   00036F                     IPR13           equ	879	;# 
  2471   000370                     IPR14           equ	880	;# 
  2472   000371                     IPR15           equ	881	;# 
  2473   000373                     STATUS_CSHAD    equ	883	;# 
  2474   000374                     WREG_CSHAD      equ	884	;# 
  2475   000375                     BSR_CSHAD       equ	885	;# 
  2476   000376                     SHADCON         equ	886	;# 
  2477   000377                     STATUS_SHAD     equ	887	;# 
  2478   000378                     WREG_SHAD       equ	888	;# 
  2479   000379                     BSR_SHAD        equ	889	;# 
  2480   00037A                     PCLATH_SHAD     equ	890	;# 
  2481   00037B                     PCLATU_SHAD     equ	891	;# 
  2482   00037C                     FSR0SH          equ	892	;# 
  2483   00037C                     FSR0L_SHAD      equ	892	;# 
  2484   00037D                     FSR0H_SHAD      equ	893	;# 
  2485   00037E                     FSR1SH          equ	894	;# 
  2486   00037E                     FSR1L_SHAD      equ	894	;# 
  2487   00037F                     FSR1H_SHAD      equ	895	;# 
  2488   000380                     FSR2SH          equ	896	;# 
  2489   000380                     FSR2L_SHAD      equ	896	;# 
  2490   000381                     FSR2H_SHAD      equ	897	;# 
  2491   000382                     PRODSH          equ	898	;# 
  2492   000382                     PRODL_SHAD      equ	898	;# 
  2493   000383                     PRODH_SHAD      equ	899	;# 
  2494   0003BC                     CWG1CLK         equ	956	;# 
  2495   0003BC                     CWG1CLKCON      equ	956	;# 
  2496   0003BD                     CWG1ISM         equ	957	;# 
  2497   0003BD                     CWG1DAT         equ	957	;# 
  2498   0003BE                     CWG1DBR         equ	958	;# 
  2499   0003BF                     CWG1DBF         equ	959	;# 
  2500   0003C0                     CWG1CON0        equ	960	;# 
  2501   0003C1                     CWG1CON1        equ	961	;# 
  2502   0003C2                     CWG1AS0         equ	962	;# 
  2503   0003C3                     CWG1AS1         equ	963	;# 
  2504   0003C4                     CWG1STR         equ	964	;# 
  2505   0003C5                     CWG2CLK         equ	965	;# 
  2506   0003C5                     CWG2CLKCON      equ	965	;# 
  2507   0003C6                     CWG2ISM         equ	966	;# 
  2508   0003C6                     CWG2DAT         equ	966	;# 
  2509   0003C7                     CWG2DBR         equ	967	;# 
  2510   0003C8                     CWG2DBF         equ	968	;# 
  2511   0003C9                     CWG2CON0        equ	969	;# 
  2512   0003CA                     CWG2CON1        equ	970	;# 
  2513   0003CB                     CWG2AS0         equ	971	;# 
  2514   0003CC                     CWG2AS1         equ	972	;# 
  2515   0003CD                     CWG2STR         equ	973	;# 
  2516   0003CE                     CWG3CLK         equ	974	;# 
  2517   0003CE                     CWG3CLKCON      equ	974	;# 
  2518   0003CF                     CWG3ISM         equ	975	;# 
  2519   0003CF                     CWG3DAT         equ	975	;# 
  2520   0003D0                     CWG3DBR         equ	976	;# 
  2521   0003D1                     CWG3DBF         equ	977	;# 
  2522   0003D2                     CWG3CON0        equ	978	;# 
  2523   0003D3                     CWG3CON1        equ	979	;# 
  2524   0003D4                     CWG3AS0         equ	980	;# 
  2525   0003D5                     CWG3AS1         equ	981	;# 
  2526   0003D6                     CWG3STR         equ	982	;# 
  2527   0003D7                     FVRCON          equ	983	;# 
  2528   0003D8                     ADCPCON         equ	984	;# 
  2529   0003D8                     ADCP            equ	984	;# 
  2530   0003D9                     ADLTH           equ	985	;# 
  2531   0003D9                     ADLTHL          equ	985	;# 
  2532   0003DA                     ADLTHH          equ	986	;# 
  2533   0003DB                     ADUTH           equ	987	;# 
  2534   0003DB                     ADUTHL          equ	987	;# 
  2535   0003DC                     ADUTHH          equ	988	;# 
  2536   0003DD                     ADERR           equ	989	;# 
  2537   0003DD                     ADERRL          equ	989	;# 
  2538   0003DE                     ADERRH          equ	990	;# 
  2539   0003DF                     ADSTPT          equ	991	;# 
  2540   0003DF                     ADSTPTL         equ	991	;# 
  2541   0003E0                     ADSTPTH         equ	992	;# 
  2542   0003E1                     ADFLTR          equ	993	;# 
  2543   0003E1                     ADFLTRL         equ	993	;# 
  2544   0003E2                     ADFLTRH         equ	994	;# 
  2545   0003E3                     ADACC           equ	995	;# 
  2546   0003E3                     ADACCL          equ	995	;# 
  2547   0003E4                     ADACCH          equ	996	;# 
  2548   0003E5                     ADACCU          equ	997	;# 
  2549   0003E6                     ADCNT           equ	998	;# 
  2550   0003E7                     ADRPT           equ	999	;# 
  2551   0003E8                     ADPREV          equ	1000	;# 
  2552   0003E8                     ADPREVL         equ	1000	;# 
  2553   0003E9                     ADPREVH         equ	1001	;# 
  2554   0003EA                     ADRES           equ	1002	;# 
  2555   0003EA                     ADRESL          equ	1002	;# 
  2556   0003EB                     ADRESH          equ	1003	;# 
  2557   0003EC                     ADPCH           equ	1004	;# 
  2558   0003EE                     ADACQ           equ	1006	;# 
  2559   0003EE                     ADACQL          equ	1006	;# 
  2560   0003EF                     ADACQH          equ	1007	;# 
  2561   0003F0                     ADCAP           equ	1008	;# 
  2562   0003F1                     ADPRE           equ	1009	;# 
  2563   0003F1                     ADPREL          equ	1009	;# 
  2564   0003F2                     ADPREH          equ	1010	;# 
  2565   0003F3                     ADCON0          equ	1011	;# 
  2566   0003F4                     ADCON1          equ	1012	;# 
  2567   0003F5                     ADCON2          equ	1013	;# 
  2568   0003F6                     ADCON3          equ	1014	;# 
  2569   0003F7                     ADSTAT          equ	1015	;# 
  2570   0003F8                     ADREF           equ	1016	;# 
  2571   0003F9                     ADACT           equ	1017	;# 
  2572   0003FA                     ADCLK           equ	1018	;# 
  2573   000400                     ANSELA          equ	1024	;# 
  2574   000401                     WPUA            equ	1025	;# 
  2575   000402                     ODCONA          equ	1026	;# 
  2576   000403                     SLRCONA         equ	1027	;# 
  2577   000404                     INLVLA          equ	1028	;# 
  2578   000405                     IOCAP           equ	1029	;# 
  2579   000406                     IOCAN           equ	1030	;# 
  2580   000407                     IOCAF           equ	1031	;# 
  2581   000408                     ANSELB          equ	1032	;# 
  2582   000409                     WPUB            equ	1033	;# 
  2583   00040A                     ODCONB          equ	1034	;# 
  2584   00040B                     SLRCONB         equ	1035	;# 
  2585   00040C                     INLVLB          equ	1036	;# 
  2586   00040D                     IOCBP           equ	1037	;# 
  2587   00040E                     IOCBN           equ	1038	;# 
  2588   00040F                     IOCBF           equ	1039	;# 
  2589   000410                     ANSELC          equ	1040	;# 
  2590   000411                     WPUC            equ	1041	;# 
  2591   000412                     ODCONC          equ	1042	;# 
  2592   000413                     SLRCONC         equ	1043	;# 
  2593   000414                     INLVLC          equ	1044	;# 
  2594   000415                     IOCCP           equ	1045	;# 
  2595   000416                     IOCCN           equ	1046	;# 
  2596   000417                     IOCCF           equ	1047	;# 
  2597   000418                     ANSELD          equ	1048	;# 
  2598   000419                     WPUD            equ	1049	;# 
  2599   00041A                     ODCOND          equ	1050	;# 
  2600   00041B                     SLRCOND         equ	1051	;# 
  2601   00041C                     INLVLD          equ	1052	;# 
  2602   000420                     ANSELE          equ	1056	;# 
  2603   000421                     WPUE            equ	1057	;# 
  2604   000422                     ODCONE          equ	1058	;# 
  2605   000423                     SLRCONE         equ	1059	;# 
  2606   000424                     INLVLE          equ	1060	;# 
  2607   000425                     IOCEP           equ	1061	;# 
  2608   000426                     IOCEN           equ	1062	;# 
  2609   000427                     IOCEF           equ	1063	;# 
  2610   000440                     NCO1ACC         equ	1088	;# 
  2611   000440                     NCO1ACCL        equ	1088	;# 
  2612   000441                     NCO1ACCH        equ	1089	;# 
  2613   000442                     NCO1ACCU        equ	1090	;# 
  2614   000443                     NCO1INC         equ	1091	;# 
  2615   000443                     NCO1INCL        equ	1091	;# 
  2616   000444                     NCO1INCH        equ	1092	;# 
  2617   000445                     NCO1INCU        equ	1093	;# 
  2618   000446                     NCO1CON         equ	1094	;# 
  2619   000447                     NCO1CLK         equ	1095	;# 
  2620   000448                     NCO2ACC         equ	1096	;# 
  2621   000448                     NCO2ACCL        equ	1096	;# 
  2622   000449                     NCO2ACCH        equ	1097	;# 
  2623   00044A                     NCO2ACCU        equ	1098	;# 
  2624   00044B                     NCO2INC         equ	1099	;# 
  2625   00044B                     NCO2INCL        equ	1099	;# 
  2626   00044C                     NCO2INCH        equ	1100	;# 
  2627   00044D                     NCO2INCU        equ	1101	;# 
  2628   00044E                     NCO2CON         equ	1102	;# 
  2629   00044F                     NCO2CLK         equ	1103	;# 
  2630   000450                     NCO3ACC         equ	1104	;# 
  2631   000450                     NCO3ACCL        equ	1104	;# 
  2632   000451                     NCO3ACCH        equ	1105	;# 
  2633   000452                     NCO3ACCU        equ	1106	;# 
  2634   000453                     NCO3INC         equ	1107	;# 
  2635   000453                     NCO3INCL        equ	1107	;# 
  2636   000454                     NCO3INCH        equ	1108	;# 
  2637   000455                     NCO3INCU        equ	1109	;# 
  2638   000456                     NCO3CON         equ	1110	;# 
  2639   000457                     NCO3CLK         equ	1111	;# 
  2640   000459                     IVTLOCK         equ	1113	;# 
  2641   00045A                     IVTAD           equ	1114	;# 
  2642   00045A                     IVTADL          equ	1114	;# 
  2643   00045B                     IVTADH          equ	1115	;# 
  2644   00045C                     IVTADU          equ	1116	;# 
  2645   00045D                     IVTBASE         equ	1117	;# 
  2646   00045D                     IVTBASEL        equ	1117	;# 
  2647   00045E                     IVTBASEH        equ	1118	;# 
  2648   00045F                     IVTBASEU        equ	1119	;# 
  2649   000460                     PWM1ERS         equ	1120	;# 
  2650   000461                     PWM1CLK         equ	1121	;# 
  2651   000462                     PWM1LDS         equ	1122	;# 
  2652   000463                     PWM1PR          equ	1123	;# 
  2653   000463                     PWM1PRL         equ	1123	;# 
  2654   000464                     PWM1PRH         equ	1124	;# 
  2655   000465                     PWM1CPRE        equ	1125	;# 
  2656   000466                     PWM1PIPOS       equ	1126	;# 
  2657   000467                     PWM1GIR         equ	1127	;# 
  2658   000468                     PWM1GIE         equ	1128	;# 
  2659   000469                     PWM1CON         equ	1129	;# 
  2660   00046A                     PWM1S1CFG       equ	1130	;# 
  2661   00046B                     PWM1S1P1        equ	1131	;# 
  2662   00046B                     PWM1S1P1L       equ	1131	;# 
  2663   00046C                     PWM1S1P1H       equ	1132	;# 
  2664   00046D                     PWM1S1P2        equ	1133	;# 
  2665   00046D                     PWM1S1P2L       equ	1133	;# 
  2666   00046E                     PWM1S1P2H       equ	1134	;# 
  2667   00046F                     PWM2ERS         equ	1135	;# 
  2668   000470                     PWM2CLK         equ	1136	;# 
  2669   000471                     PWM2LDS         equ	1137	;# 
  2670   000472                     PWM2PR          equ	1138	;# 
  2671   000472                     PWM2PRL         equ	1138	;# 
  2672   000473                     PWM2PRH         equ	1139	;# 
  2673   000474                     PWM2CPRE        equ	1140	;# 
  2674   000475                     PWM2PIPOS       equ	1141	;# 
  2675   000476                     PWM2GIR         equ	1142	;# 
  2676   000477                     PWM2GIE         equ	1143	;# 
  2677   000478                     PWM2CON         equ	1144	;# 
  2678   000479                     PWM2S1CFG       equ	1145	;# 
  2679   00047A                     PWM2S1P1        equ	1146	;# 
  2680   00047A                     PWM2S1P1L       equ	1146	;# 
  2681   00047B                     PWM2S1P1H       equ	1147	;# 
  2682   00047C                     PWM2S1P2        equ	1148	;# 
  2683   00047C                     PWM2S1P2L       equ	1148	;# 
  2684   00047D                     PWM2S1P2H       equ	1149	;# 
  2685   00047E                     PWM3ERS         equ	1150	;# 
  2686   00047F                     PWM3CLK         equ	1151	;# 
  2687   000480                     PWM3LDS         equ	1152	;# 
  2688   000481                     PWM3PR          equ	1153	;# 
  2689   000481                     PWM3PRL         equ	1153	;# 
  2690   000482                     PWM3PRH         equ	1154	;# 
  2691   000483                     PWM3CPRE        equ	1155	;# 
  2692   000484                     PWM3PIPOS       equ	1156	;# 
  2693   000485                     PWM3GIR         equ	1157	;# 
  2694   000486                     PWM3GIE         equ	1158	;# 
  2695   000487                     PWM3CON         equ	1159	;# 
  2696   000488                     PWM3S1CFG       equ	1160	;# 
  2697   000489                     PWM3S1P1        equ	1161	;# 
  2698   000489                     PWM3S1P1L       equ	1161	;# 
  2699   00048A                     PWM3S1P1H       equ	1162	;# 
  2700   00048B                     PWM3S1P2        equ	1163	;# 
  2701   00048B                     PWM3S1P2L       equ	1163	;# 
  2702   00048C                     PWM3S1P2H       equ	1164	;# 
  2703   00049C                     PWMLOAD         equ	1180	;# 
  2704   00049D                     PWMEN           equ	1181	;# 
  2705   00049E                     PIE0            equ	1182	;# 
  2706   00049F                     PIE1            equ	1183	;# 
  2707   0004A0                     PIE2            equ	1184	;# 
  2708   0004A1                     PIE3            equ	1185	;# 
  2709   0004A2                     PIE4            equ	1186	;# 
  2710   0004A3                     PIE5            equ	1187	;# 
  2711   0004A4                     PIE6            equ	1188	;# 
  2712   0004A5                     PIE7            equ	1189	;# 
  2713   0004A6                     PIE8            equ	1190	;# 
  2714   0004A7                     PIE9            equ	1191	;# 
  2715   0004A8                     PIE10           equ	1192	;# 
  2716   0004A9                     PIE11           equ	1193	;# 
  2717   0004AA                     PIE12           equ	1194	;# 
  2718   0004AB                     PIE13           equ	1195	;# 
  2719   0004AC                     PIE14           equ	1196	;# 
  2720   0004AD                     PIE15           equ	1197	;# 
  2721   0004AE                     PIR0            equ	1198	;# 
  2722   0004AF                     PIR1            equ	1199	;# 
  2723   0004B0                     PIR2            equ	1200	;# 
  2724   0004B1                     PIR3            equ	1201	;# 
  2725   0004B2                     PIR4            equ	1202	;# 
  2726   0004B3                     PIR5            equ	1203	;# 
  2727   0004B4                     PIR6            equ	1204	;# 
  2728   0004B5                     PIR7            equ	1205	;# 
  2729   0004B6                     PIR8            equ	1206	;# 
  2730   0004B7                     PIR9            equ	1207	;# 
  2731   0004B8                     PIR10           equ	1208	;# 
  2732   0004B9                     PIR11           equ	1209	;# 
  2733   0004BA                     PIR12           equ	1210	;# 
  2734   0004BB                     PIR13           equ	1211	;# 
  2735   0004BC                     PIR14           equ	1212	;# 
  2736   0004BD                     PIR15           equ	1213	;# 
  2737   0004BE                     LATA            equ	1214	;# 
  2738   0004BF                     LATB            equ	1215	;# 
  2739   0004C0                     LATC            equ	1216	;# 
  2740   0004C1                     LATD            equ	1217	;# 
  2741   0004C2                     LATE            equ	1218	;# 
  2742   0004C6                     TRISA           equ	1222	;# 
  2743   0004C7                     TRISB           equ	1223	;# 
  2744   0004C8                     TRISC           equ	1224	;# 
  2745   0004C9                     TRISD           equ	1225	;# 
  2746   0004CA                     TRISE           equ	1226	;# 
  2747   0004CE                     PORTA           equ	1230	;# 
  2748   0004CF                     PORTB           equ	1231	;# 
  2749   0004D0                     PORTC           equ	1232	;# 
  2750   0004D1                     PORTD           equ	1233	;# 
  2751   0004D2                     PORTE           equ	1234	;# 
  2752   0004D6                     INTCON0         equ	1238	;# 
  2753   0004D7                     INTCON1         equ	1239	;# 
  2754   0004D8                     STATUS          equ	1240	;# 
  2755   0004D9                     FSR2            equ	1241	;# 
  2756   0004D9                     FSR2L           equ	1241	;# 
  2757   0004DA                     FSR2H           equ	1242	;# 
  2758   0004DB                     PLUSW2          equ	1243	;# 
  2759   0004DC                     PREINC2         equ	1244	;# 
  2760   0004DD                     POSTDEC2        equ	1245	;# 
  2761   0004DE                     POSTINC2        equ	1246	;# 
  2762   0004DF                     INDF2           equ	1247	;# 
  2763   0004E0                     BSR             equ	1248	;# 
  2764   0004E1                     FSR1            equ	1249	;# 
  2765   0004E1                     FSR1L           equ	1249	;# 
  2766   0004E2                     FSR1H           equ	1250	;# 
  2767   0004E3                     PLUSW1          equ	1251	;# 
  2768   0004E4                     PREINC1         equ	1252	;# 
  2769   0004E5                     POSTDEC1        equ	1253	;# 
  2770   0004E6                     POSTINC1        equ	1254	;# 
  2771   0004E7                     INDF1           equ	1255	;# 
  2772   0004E8                     WREG            equ	1256	;# 
  2773   0004E9                     FSR0            equ	1257	;# 
  2774   0004E9                     FSR0L           equ	1257	;# 
  2775   0004EA                     FSR0H           equ	1258	;# 
  2776   0004EB                     PLUSW0          equ	1259	;# 
  2777   0004EC                     PREINC0         equ	1260	;# 
  2778   0004ED                     POSTDEC0        equ	1261	;# 
  2779   0004EE                     POSTINC0        equ	1262	;# 
  2780   0004EF                     INDF0           equ	1263	;# 
  2781   0004F0                     PCON0           equ	1264	;# 
  2782   0004F1                     PCON1           equ	1265	;# 
  2783   0004F2                     CPUDOZE         equ	1266	;# 
  2784   0004F3                     PROD            equ	1267	;# 
  2785   0004F3                     PRODL           equ	1267	;# 
  2786   0004F4                     PRODH           equ	1268	;# 
  2787   0004F5                     TABLAT          equ	1269	;# 
  2788   0004F6                     TBLPTR          equ	1270	;# 
  2789   0004F6                     TBLPTRL         equ	1270	;# 
  2790   0004F7                     TBLPTRH         equ	1271	;# 
  2791   0004F8                     TBLPTRU         equ	1272	;# 
  2792   0004F9                     PCLAT           equ	1273	;# 
  2793   0004F9                     PCL             equ	1273	;# 
  2794   0004FA                     PCLATH          equ	1274	;# 
  2795   0004FB                     PCLATU          equ	1275	;# 
  2796   0004FC                     STKPTR          equ	1276	;# 
  2797   0004FD                     TOS             equ	1277	;# 
  2798   0004FD                     TOSL            equ	1277	;# 
  2799   0004FE                     TOSH            equ	1278	;# 
  2800   0004FF                     TOSU            equ	1279	;# 
  2801   000039                     CLKRCON         equ	57	;# 
  2802   00003A                     CLKRCLK         equ	58	;# 
  2803   000040                     NVMCON0         equ	64	;# 
  2804   000041                     NVMCON1         equ	65	;# 
  2805   000042                     NVMLOCK         equ	66	;# 
  2806   000043                     NVMADR          equ	67	;# 
  2807   000043                     NVMADRL         equ	67	;# 
  2808   000044                     NVMADRH         equ	68	;# 
  2809   000045                     NVMADRU         equ	69	;# 
  2810   000046                     NVMDAT          equ	70	;# 
  2811   000046                     NVMDATL         equ	70	;# 
  2812   000047                     NVMDATH         equ	71	;# 
  2813   000048                     VREGCON         equ	72	;# 
  2814   000049                     BORCON          equ	73	;# 
  2815   00004A                     HLVDCON0        equ	74	;# 
  2816   00004B                     HLVDCON1        equ	75	;# 
  2817   00004C                     ZCDCON          equ	76	;# 
  2818   000060                     PMD0            equ	96	;# 
  2819   000061                     PMD1            equ	97	;# 
  2820   000063                     PMD3            equ	99	;# 
  2821   000064                     PMD4            equ	100	;# 
  2822   000065                     PMD5            equ	101	;# 
  2823   000066                     PMD6            equ	102	;# 
  2824   000067                     PMD7            equ	103	;# 
  2825   000068                     PMD8            equ	104	;# 
  2826   00006A                     MD1CON0         equ	106	;# 
  2827   00006B                     MD1CON1         equ	107	;# 
  2828   00006C                     MD1SRC          equ	108	;# 
  2829   00006D                     MD1CARL         equ	109	;# 
  2830   00006E                     MD1CARH         equ	110	;# 
  2831   00006F                     CMOUT           equ	111	;# 
  2832   000070                     CM1CON0         equ	112	;# 
  2833   000071                     CM1CON1         equ	113	;# 
  2834   000072                     CM1NCH          equ	114	;# 
  2835   000073                     CM1PCH          equ	115	;# 
  2836   000074                     CM2CON0         equ	116	;# 
  2837   000075                     CM2CON1         equ	117	;# 
  2838   000076                     CM2NCH          equ	118	;# 
  2839   000077                     CM2PCH          equ	119	;# 
  2840   000078                     WDTCON0         equ	120	;# 
  2841   000079                     WDTCON1         equ	121	;# 
  2842   00007A                     WDTPS           equ	122	;# 
  2843   00007A                     WDTPSL          equ	122	;# 
  2844   00007B                     WDTPSH          equ	123	;# 
  2845   00007C                     WDTTMR          equ	124	;# 
  2846   00007D                     DAC1DAT         equ	125	;# 
  2847   00007D                     DAC1DATL        equ	125	;# 
  2848   00007F                     DAC1CON         equ	127	;# 
  2849   000080                     SPI1RXB         equ	128	;# 
  2850   000081                     SPI1TXB         equ	129	;# 
  2851   000082                     SPI1TCNT        equ	130	;# 
  2852   000082                     SPI1TCNTL       equ	130	;# 
  2853   000083                     SPI1TCNTH       equ	131	;# 
  2854   000084                     SPI1CON0        equ	132	;# 
  2855   000085                     SPI1CON1        equ	133	;# 
  2856   000086                     SPI1CON2        equ	134	;# 
  2857   000087                     SPI1STATUS      equ	135	;# 
  2858   000088                     SPI1TWIDTH      equ	136	;# 
  2859   000089                     SPI1BAUD        equ	137	;# 
  2860   00008A                     SPI1INTF        equ	138	;# 
  2861   00008B                     SPI1INTE        equ	139	;# 
  2862   00008C                     SPI1CLK         equ	140	;# 
  2863   00008D                     SPI2RXB         equ	141	;# 
  2864   00008E                     SPI2TXB         equ	142	;# 
  2865   00008F                     SPI2TCNT        equ	143	;# 
  2866   00008F                     SPI2TCNTL       equ	143	;# 
  2867   000090                     SPI2TCNTH       equ	144	;# 
  2868   000091                     SPI2CON0        equ	145	;# 
  2869   000092                     SPI2CON1        equ	146	;# 
  2870   000093                     SPI2CON2        equ	147	;# 
  2871   000094                     SPI2STATUS      equ	148	;# 
  2872   000095                     SPI2TWIDTH      equ	149	;# 
  2873   000096                     SPI2BAUD        equ	150	;# 
  2874   000097                     SPI2INTF        equ	151	;# 
  2875   000098                     SPI2INTE        equ	152	;# 
  2876   000099                     SPI2CLK         equ	153	;# 
  2877   0000AC                     ACTCON          equ	172	;# 
  2878   0000AD                     OSCCON1         equ	173	;# 
  2879   0000AE                     OSCCON2         equ	174	;# 
  2880   0000AF                     OSCCON3         equ	175	;# 
  2881   0000B0                     OSCTUNE         equ	176	;# 
  2882   0000B1                     OSCFRQ          equ	177	;# 
  2883   0000B1                     OSCFREQ         equ	177	;# 
  2884   0000B2                     OSCSTAT         equ	178	;# 
  2885   0000B2                     OSCSTAT1        equ	178	;# 
  2886   0000B3                     OSCEN           equ	179	;# 
  2887   0000B4                     PRLOCK          equ	180	;# 
  2888   0000B5                     SCANPR          equ	181	;# 
  2889   0000B6                     DMA1PR          equ	182	;# 
  2890   0000B7                     DMA2PR          equ	183	;# 
  2891   0000B8                     DMA3PR          equ	184	;# 
  2892   0000B9                     DMA4PR          equ	185	;# 
  2893   0000BA                     DMA5PR          equ	186	;# 
  2894   0000BB                     DMA6PR          equ	187	;# 
  2895   0000BE                     MAINPR          equ	190	;# 
  2896   0000BF                     ISRPR           equ	191	;# 
  2897   0000D4                     CLCDATA         equ	212	;# 
  2898   0000D5                     CLCSELECT       equ	213	;# 
  2899   0000D6                     CLCnCON         equ	214	;# 
  2900   0000D7                     CLCnPOL         equ	215	;# 
  2901   0000D8                     CLCnSEL0        equ	216	;# 
  2902   0000D9                     CLCnSEL1        equ	217	;# 
  2903   0000DA                     CLCnSEL2        equ	218	;# 
  2904   0000DB                     CLCnSEL3        equ	219	;# 
  2905   0000DC                     CLCnGLS0        equ	220	;# 
  2906   0000DD                     CLCnGLS1        equ	221	;# 
  2907   0000DE                     CLCnGLS2        equ	222	;# 
  2908   0000DF                     CLCnGLS3        equ	223	;# 
  2909   0000E8                     DMASELECT       equ	232	;# 
  2910   0000E9                     DMAnBUF         equ	233	;# 
  2911   0000EA                     DMAnDCNT        equ	234	;# 
  2912   0000EA                     DMAnDCNTL       equ	234	;# 
  2913   0000EB                     DMAnDCNTH       equ	235	;# 
  2914   0000EC                     DMAnDPTR        equ	236	;# 
  2915   0000EC                     DMAnDPTRL       equ	236	;# 
  2916   0000ED                     DMAnDPTRH       equ	237	;# 
  2917   0000EE                     DMAnDSZ         equ	238	;# 
  2918   0000EE                     DMAnDSZL        equ	238	;# 
  2919   0000EF                     DMAnDSZH        equ	239	;# 
  2920   0000F0                     DMAnDSA         equ	240	;# 
  2921   0000F0                     DMAnDSAL        equ	240	;# 
  2922   0000F1                     DMAnDSAH        equ	241	;# 
  2923   0000F2                     DMAnSCNT        equ	242	;# 
  2924   0000F2                     DMAnSCNTL       equ	242	;# 
  2925   0000F3                     DMAnSCNTH       equ	243	;# 
  2926   0000F4                     DMAnSPTR        equ	244	;# 
  2927   0000F4                     DMAnSPTRL       equ	244	;# 
  2928   0000F5                     DMAnSPTRH       equ	245	;# 
  2929   0000F6                     DMAnSPTRU       equ	246	;# 
  2930   0000F7                     DMAnSSZ         equ	247	;# 
  2931   0000F7                     DMAnSSZL        equ	247	;# 
  2932   0000F8                     DMAnSSZH        equ	248	;# 
  2933   0000F9                     DMAnSSA         equ	249	;# 
  2934   0000F9                     DMAnSSAL        equ	249	;# 
  2935   0000FA                     DMAnSSAH        equ	250	;# 
  2936   0000FB                     DMAnSSAU        equ	251	;# 
  2937   0000FC                     DMAnCON0        equ	252	;# 
  2938   0000FD                     DMAnCON1        equ	253	;# 
  2939   0000FE                     DMAnAIRQ        equ	254	;# 
  2940   0000FF                     DMAnSIRQ        equ	255	;# 
  2941   000200                     PPSLOCK         equ	512	;# 
  2942   000201                     RA0PPS          equ	513	;# 
  2943   000202                     RA1PPS          equ	514	;# 
  2944   000203                     RA2PPS          equ	515	;# 
  2945   000204                     RA3PPS          equ	516	;# 
  2946   000205                     RA4PPS          equ	517	;# 
  2947   000206                     RA5PPS          equ	518	;# 
  2948   000207                     RA6PPS          equ	519	;# 
  2949   000208                     RA7PPS          equ	520	;# 
  2950   000209                     RB0PPS          equ	521	;# 
  2951   00020A                     RB1PPS          equ	522	;# 
  2952   00020B                     RB2PPS          equ	523	;# 
  2953   00020C                     RB3PPS          equ	524	;# 
  2954   00020D                     RB4PPS          equ	525	;# 
  2955   00020E                     RB5PPS          equ	526	;# 
  2956   00020F                     RB6PPS          equ	527	;# 
  2957   000210                     RB7PPS          equ	528	;# 
  2958   000211                     RC0PPS          equ	529	;# 
  2959   000212                     RC1PPS          equ	530	;# 
  2960   000213                     RC2PPS          equ	531	;# 
  2961   000214                     RC3PPS          equ	532	;# 
  2962   000215                     RC4PPS          equ	533	;# 
  2963   000216                     RC5PPS          equ	534	;# 
  2964   000217                     RC6PPS          equ	535	;# 
  2965   000218                     RC7PPS          equ	536	;# 
  2966   000219                     RD0PPS          equ	537	;# 
  2967   00021A                     RD1PPS          equ	538	;# 
  2968   00021B                     RD2PPS          equ	539	;# 
  2969   00021C                     RD3PPS          equ	540	;# 
  2970   00021D                     RD4PPS          equ	541	;# 
  2971   00021E                     RD5PPS          equ	542	;# 
  2972   00021F                     RD6PPS          equ	543	;# 
  2973   000220                     RD7PPS          equ	544	;# 
  2974   000221                     RE0PPS          equ	545	;# 
  2975   000222                     RE1PPS          equ	546	;# 
  2976   000223                     RE2PPS          equ	547	;# 
  2977   00023E                     INT0PPS         equ	574	;# 
  2978   00023F                     INT1PPS         equ	575	;# 
  2979   000240                     INT2PPS         equ	576	;# 
  2980   000241                     T0CKIPPS        equ	577	;# 
  2981   000242                     T1CKIPPS        equ	578	;# 
  2982   000243                     T1GPPS          equ	579	;# 
  2983   000244                     T3CKIPPS        equ	580	;# 
  2984   000245                     T3GPPS          equ	581	;# 
  2985   000246                     T5CKIPPS        equ	582	;# 
  2986   000247                     T5GPPS          equ	583	;# 
  2987   000248                     T2INPPS         equ	584	;# 
  2988   000249                     T4INPPS         equ	585	;# 
  2989   00024A                     T6INPPS         equ	586	;# 
  2990   00024F                     CCP1PPS         equ	591	;# 
  2991   000250                     CCP2PPS         equ	592	;# 
  2992   000251                     CCP3PPS         equ	593	;# 
  2993   000253                     PWM1ERSPPS      equ	595	;# 
  2994   000254                     PWM2ERSPPS      equ	596	;# 
  2995   000255                     PWM3ERSPPS      equ	597	;# 
  2996   000257                     PWMIN0PPS       equ	599	;# 
  2997   000258                     PWMIN1PPS       equ	600	;# 
  2998   000259                     SMT1WINPPS      equ	601	;# 
  2999   00025A                     SMT1SIGPPS      equ	602	;# 
  3000   00025B                     CWG1PPS         equ	603	;# 
  3001   00025B                     CWG1INPPS       equ	603	;# 
  3002   00025C                     CWG2PPS         equ	604	;# 
  3003   00025C                     CWG2INPPS       equ	604	;# 
  3004   00025D                     CWG3PPS         equ	605	;# 
  3005   00025D                     CWG3INPPS       equ	605	;# 
  3006   00025E                     MD1CARLPPS      equ	606	;# 
  3007   00025E                     MDCARLPPS       equ	606	;# 
  3008   00025F                     MD1CARHPPS      equ	607	;# 
  3009   00025F                     MDCARHPPS       equ	607	;# 
  3010   000260                     MD1SRCPPS       equ	608	;# 
  3011   000260                     MDSRCPPS        equ	608	;# 
  3012   000261                     CLCIN0PPS       equ	609	;# 
  3013   000262                     CLCIN1PPS       equ	610	;# 
  3014   000263                     CLCIN2PPS       equ	611	;# 
  3015   000264                     CLCIN3PPS       equ	612	;# 
  3016   000265                     CLCIN4PPS       equ	613	;# 
  3017   000266                     CLCIN5PPS       equ	614	;# 
  3018   000267                     CLCIN6PPS       equ	615	;# 
  3019   000268                     CLCIN7PPS       equ	616	;# 
  3020   000269                     ADACTPPS        equ	617	;# 
  3021   00026A                     SPI1SCKPPS      equ	618	;# 
  3022   00026B                     SPI1SDIPPS      equ	619	;# 
  3023   00026C                     SPI1SSPPS       equ	620	;# 
  3024   00026D                     SPI2SCKPPS      equ	621	;# 
  3025   00026E                     SPI2SDIPPS      equ	622	;# 
  3026   00026F                     SPI2SSPPS       equ	623	;# 
  3027   000270                     I2C1SDAPPS      equ	624	;# 
  3028   000271                     I2C1SCLPPS      equ	625	;# 
  3029   000272                     U1RXPPS         equ	626	;# 
  3030   000273                     U1CTSPPS        equ	627	;# 
  3031   000274                     U2RXPPS         equ	628	;# 
  3032   000275                     U2CTSPPS        equ	629	;# 
  3033   000276                     U3RXPPS         equ	630	;# 
  3034   000277                     U3CTSPPS        equ	631	;# 
  3035   000278                     U4RXPPS         equ	632	;# 
  3036   000279                     U4CTSPPS        equ	633	;# 
  3037   00027A                     U5RXPPS         equ	634	;# 
  3038   00027B                     U5CTSPPS        equ	635	;# 
  3039   000286                     RC4I2C          equ	646	;# 
  3040   000287                     RC3I2C          equ	647	;# 
  3041   000288                     RB2I2C          equ	648	;# 
  3042   000289                     RB1I2C          equ	649	;# 
  3043   00028B                     I2C1RXB         equ	651	;# 
  3044   00028C                     I2C1TXB         equ	652	;# 
  3045   00028D                     I2C1CNT         equ	653	;# 
  3046   00028E                     I2C1ADB0        equ	654	;# 
  3047   00028F                     I2C1ADB1        equ	655	;# 
  3048   000290                     I2C1ADR0        equ	656	;# 
  3049   000291                     I2C1ADR1        equ	657	;# 
  3050   000292                     I2C1ADR2        equ	658	;# 
  3051   000293                     I2C1ADR3        equ	659	;# 
  3052   000294                     I2C1CON0        equ	660	;# 
  3053   000295                     I2C1CON1        equ	661	;# 
  3054   000296                     I2C1CON2        equ	662	;# 
  3055   000297                     I2C1ERR         equ	663	;# 
  3056   000298                     I2C1STAT0       equ	664	;# 
  3057   000299                     I2C1STAT1       equ	665	;# 
  3058   00029A                     I2C1PIR         equ	666	;# 
  3059   00029B                     I2C1PIE         equ	667	;# 
  3060   00029C                     I2C1CLK         equ	668	;# 
  3061   00029D                     I2C1BTO         equ	669	;# 
  3062   0002A1                     U1RXB           equ	673	;# 
  3063   0002A1                     U1RXBL          equ	673	;# 
  3064   0002A2                     U1RXCHK         equ	674	;# 
  3065   0002A3                     U1TXB           equ	675	;# 
  3066   0002A3                     U1TXBL          equ	675	;# 
  3067   0002A4                     U1TXCHK         equ	676	;# 
  3068   0002A5                     U1P1            equ	677	;# 
  3069   0002A5                     U1P1L           equ	677	;# 
  3070   0002A6                     U1P1H           equ	678	;# 
  3071   0002A7                     U1P2            equ	679	;# 
  3072   0002A7                     U1P2L           equ	679	;# 
  3073   0002A8                     U1P2H           equ	680	;# 
  3074   0002A9                     U1P3            equ	681	;# 
  3075   0002A9                     U1P3L           equ	681	;# 
  3076   0002AA                     U1P3H           equ	682	;# 
  3077   0002AB                     U1CON0          equ	683	;# 
  3078   0002AC                     U1CON1          equ	684	;# 
  3079   0002AD                     U1CON2          equ	685	;# 
  3080   0002AE                     U1BRG           equ	686	;# 
  3081   0002AE                     U1BRGL          equ	686	;# 
  3082   0002AF                     U1BRGH          equ	687	;# 
  3083   0002B0                     U1FIFO          equ	688	;# 
  3084   0002B1                     U1UIR           equ	689	;# 
  3085   0002B2                     U1ERRIR         equ	690	;# 
  3086   0002B3                     U1ERRIE         equ	691	;# 
  3087   0002B4                     U2RXB           equ	692	;# 
  3088   0002B4                     U2RXBL          equ	692	;# 
  3089   0002B6                     U2TXB           equ	694	;# 
  3090   0002B6                     U2TXBL          equ	694	;# 
  3091   0002B8                     U2P1            equ	696	;# 
  3092   0002B8                     U2P1L           equ	696	;# 
  3093   0002BA                     U2P2            equ	698	;# 
  3094   0002BA                     U2P2L           equ	698	;# 
  3095   0002BC                     U2P3            equ	700	;# 
  3096   0002BC                     U2P3L           equ	700	;# 
  3097   0002BE                     U2CON0          equ	702	;# 
  3098   0002BF                     U2CON1          equ	703	;# 
  3099   0002C0                     U2CON2          equ	704	;# 
  3100   0002C1                     U2BRG           equ	705	;# 
  3101   0002C1                     U2BRGL          equ	705	;# 
  3102   0002C2                     U2BRGH          equ	706	;# 
  3103   0002C3                     U2FIFO          equ	707	;# 
  3104   0002C4                     U2UIR           equ	708	;# 
  3105   0002C5                     U2ERRIR         equ	709	;# 
  3106   0002C6                     U2ERRIE         equ	710	;# 
  3107   0002C7                     U3RXB           equ	711	;# 
  3108   0002C7                     U3RXBL          equ	711	;# 
  3109   0002C9                     U3TXB           equ	713	;# 
  3110   0002C9                     U3TXBL          equ	713	;# 
  3111   0002CB                     U3P1            equ	715	;# 
  3112   0002CB                     U3P1L           equ	715	;# 
  3113   0002CD                     U3P2            equ	717	;# 
  3114   0002CD                     U3P2L           equ	717	;# 
  3115   0002CF                     U3P3            equ	719	;# 
  3116   0002CF                     U3P3L           equ	719	;# 
  3117   0002D1                     U3CON0          equ	721	;# 
  3118   0002D2                     U3CON1          equ	722	;# 
  3119   0002D3                     U3CON2          equ	723	;# 
  3120   0002D4                     U3BRG           equ	724	;# 
  3121   0002D4                     U3BRGL          equ	724	;# 
  3122   0002D5                     U3BRGH          equ	725	;# 
  3123   0002D6                     U3FIFO          equ	726	;# 
  3124   0002D7                     U3UIR           equ	727	;# 
  3125   0002D8                     U3ERRIR         equ	728	;# 
  3126   0002D9                     U3ERRIE         equ	729	;# 
  3127   0002DA                     U4RXB           equ	730	;# 
  3128   0002DA                     U4RXBL          equ	730	;# 
  3129   0002DC                     U4TXB           equ	732	;# 
  3130   0002DC                     U4TXBL          equ	732	;# 
  3131   0002DE                     U4P1            equ	734	;# 
  3132   0002DE                     U4P1L           equ	734	;# 
  3133   0002E0                     U4P2            equ	736	;# 
  3134   0002E0                     U4P2L           equ	736	;# 
  3135   0002E2                     U4P3            equ	738	;# 
  3136   0002E2                     U4P3L           equ	738	;# 
  3137   0002E4                     U4CON0          equ	740	;# 
  3138   0002E5                     U4CON1          equ	741	;# 
  3139   0002E6                     U4CON2          equ	742	;# 
  3140   0002E7                     U4BRG           equ	743	;# 
  3141   0002E7                     U4BRGL          equ	743	;# 
  3142   0002E8                     U4BRGH          equ	744	;# 
  3143   0002E9                     U4FIFO          equ	745	;# 
  3144   0002EA                     U4UIR           equ	746	;# 
  3145   0002EB                     U4ERRIR         equ	747	;# 
  3146   0002EC                     U4ERRIE         equ	748	;# 
  3147   0002ED                     U5RXB           equ	749	;# 
  3148   0002ED                     U5RXBL          equ	749	;# 
  3149   0002EF                     U5TXB           equ	751	;# 
  3150   0002EF                     U5TXBL          equ	751	;# 
  3151   0002F1                     U5P1            equ	753	;# 
  3152   0002F1                     U5P1L           equ	753	;# 
  3153   0002F3                     U5P2            equ	755	;# 
  3154   0002F3                     U5P2L           equ	755	;# 
  3155   0002F5                     U5P3            equ	757	;# 
  3156   0002F5                     U5P3L           equ	757	;# 
  3157   0002F7                     U5CON0          equ	759	;# 
  3158   0002F8                     U5CON1          equ	760	;# 
  3159   0002F9                     U5CON2          equ	761	;# 
  3160   0002FA                     U5BRG           equ	762	;# 
  3161   0002FA                     U5BRGL          equ	762	;# 
  3162   0002FB                     U5BRGH          equ	763	;# 
  3163   0002FC                     U5FIFO          equ	764	;# 
  3164   0002FD                     U5UIR           equ	765	;# 
  3165   0002FE                     U5ERRIR         equ	766	;# 
  3166   0002FF                     U5ERRIE         equ	767	;# 
  3167   000300                     SMT1TMR         equ	768	;# 
  3168   000300                     SMT1TMRL        equ	768	;# 
  3169   000301                     SMT1TMRH        equ	769	;# 
  3170   000302                     SMT1TMRU        equ	770	;# 
  3171   000303                     SMT1CPR         equ	771	;# 
  3172   000303                     SMT1CPRL        equ	771	;# 
  3173   000304                     SMT1CPRH        equ	772	;# 
  3174   000305                     SMT1CPRU        equ	773	;# 
  3175   000306                     SMT1CPW         equ	774	;# 
  3176   000306                     SMT1CPWL        equ	774	;# 
  3177   000307                     SMT1CPWH        equ	775	;# 
  3178   000308                     SMT1CPWU        equ	776	;# 
  3179   000309                     SMT1PR          equ	777	;# 
  3180   000309                     SMT1PRL         equ	777	;# 
  3181   00030A                     SMT1PRH         equ	778	;# 
  3182   00030B                     SMT1PRU         equ	779	;# 
  3183   00030C                     SMT1CON0        equ	780	;# 
  3184   00030D                     SMT1CON1        equ	781	;# 
  3185   00030E                     SMT1STAT        equ	782	;# 
  3186   00030F                     SMT1CLK         equ	783	;# 
  3187   000310                     SMT1SIG         equ	784	;# 
  3188   000311                     SMT1WIN         equ	785	;# 
  3189   000318                     TMR0L           equ	792	;# 
  3190   000318                     TMR0            equ	792	;# 
  3191   000319                     TMR0H           equ	793	;# 
  3192   000319                     PR0             equ	793	;# 
  3193   00031A                     T0CON0          equ	794	;# 
  3194   00031B                     T0CON1          equ	795	;# 
  3195   00031C                     TMR1            equ	796	;# 
  3196   00031C                     TMR1L           equ	796	;# 
  3197   00031D                     TMR1H           equ	797	;# 
  3198   00031E                     T1CON           equ	798	;# 
  3199   00031E                     TMR1CON         equ	798	;# 
  3200   00031F                     T1GCON          equ	799	;# 
  3201   00031F                     TMR1GCON        equ	799	;# 
  3202   000320                     T1GATE          equ	800	;# 
  3203   000320                     TMR1GATE        equ	800	;# 
  3204   000321                     T1CLK           equ	801	;# 
  3205   000321                     TMR1CLK         equ	801	;# 
  3206   000321                     PR1             equ	801	;# 
  3207   000322                     T2TMR           equ	802	;# 
  3208   000322                     TMR2            equ	802	;# 
  3209   000323                     T2PR            equ	803	;# 
  3210   000323                     PR2             equ	803	;# 
  3211   000324                     T2CON           equ	804	;# 
  3212   000325                     T2HLT           equ	805	;# 
  3213   000326                     T2CLKCON        equ	806	;# 
  3214   000326                     T2CLK           equ	806	;# 
  3215   000327                     T2RST           equ	807	;# 
  3216   000328                     TMR3            equ	808	;# 
  3217   000328                     TMR3L           equ	808	;# 
  3218   000329                     TMR3H           equ	809	;# 
  3219   00032A                     T3CON           equ	810	;# 
  3220   00032A                     TMR3CON         equ	810	;# 
  3221   00032B                     T3GCON          equ	811	;# 
  3222   00032B                     TMR3GCON        equ	811	;# 
  3223   00032C                     T3GATE          equ	812	;# 
  3224   00032C                     TMR3GATE        equ	812	;# 
  3225   00032D                     T3CLK           equ	813	;# 
  3226   00032D                     TMR3CLK         equ	813	;# 
  3227   00032D                     PR3             equ	813	;# 
  3228   00032E                     T4TMR           equ	814	;# 
  3229   00032E                     TMR4            equ	814	;# 
  3230   00032F                     T4PR            equ	815	;# 
  3231   00032F                     PR4             equ	815	;# 
  3232   000330                     T4CON           equ	816	;# 
  3233   000331                     T4HLT           equ	817	;# 
  3234   000332                     T4CLKCON        equ	818	;# 
  3235   000332                     T4CLK           equ	818	;# 
  3236   000333                     T4RST           equ	819	;# 
  3237   000334                     TMR5            equ	820	;# 
  3238   000334                     TMR5L           equ	820	;# 
  3239   000335                     TMR5H           equ	821	;# 
  3240   000336                     T5CON           equ	822	;# 
  3241   000336                     TMR5CON         equ	822	;# 
  3242   000337                     T5GCON          equ	823	;# 
  3243   000337                     TMR5GCON        equ	823	;# 
  3244   000338                     T5GATE          equ	824	;# 
  3245   000338                     TMR5GATE        equ	824	;# 
  3246   000339                     T5CLK           equ	825	;# 
  3247   000339                     TMR5CLK         equ	825	;# 
  3248   000339                     PR5             equ	825	;# 
  3249   00033A                     T6TMR           equ	826	;# 
  3250   00033A                     TMR6            equ	826	;# 
  3251   00033B                     T6PR            equ	827	;# 
  3252   00033B                     PR6             equ	827	;# 
  3253   00033C                     T6CON           equ	828	;# 
  3254   00033D                     T6HLT           equ	829	;# 
  3255   00033E                     T6CLKCON        equ	830	;# 
  3256   00033E                     T6CLK           equ	830	;# 
  3257   00033F                     T6RST           equ	831	;# 
  3258   000340                     CCPR1           equ	832	;# 
  3259   000340                     CCPR1L          equ	832	;# 
  3260   000341                     CCPR1H          equ	833	;# 
  3261   000342                     CCP1CON         equ	834	;# 
  3262   000343                     CCP1CAP         equ	835	;# 
  3263   000344                     CCPR2           equ	836	;# 
  3264   000344                     CCPR2L          equ	836	;# 
  3265   000345                     CCPR2H          equ	837	;# 
  3266   000346                     CCP2CON         equ	838	;# 
  3267   000347                     CCP2CAP         equ	839	;# 
  3268   000348                     CCPR3           equ	840	;# 
  3269   000348                     CCPR3L          equ	840	;# 
  3270   000349                     CCPR3H          equ	841	;# 
  3271   00034A                     CCP3CON         equ	842	;# 
  3272   00034B                     CCP3CAP         equ	843	;# 
  3273   00034C                     CCPTMRS0        equ	844	;# 
  3274   00034F                     CRCDATA         equ	847	;# 
  3275   00034F                     CRCDATL         equ	847	;# 
  3276   000350                     CRCDATH         equ	848	;# 
  3277   000351                     CRCACC          equ	849	;# 
  3278   000351                     CRCACCL         equ	849	;# 
  3279   000352                     CRCACCH         equ	850	;# 
  3280   000353                     CRCSHFT         equ	851	;# 
  3281   000353                     CRCSHIFTL       equ	851	;# 
  3282   000354                     CRCSHIFTH       equ	852	;# 
  3283   000355                     CRCXOR          equ	853	;# 
  3284   000355                     CRCXORL         equ	853	;# 
  3285   000356                     CRCXORH         equ	854	;# 
  3286   000357                     CRCCON0         equ	855	;# 
  3287   000358                     CRCCON1         equ	856	;# 
  3288   00035A                     SCANLADR        equ	858	;# 
  3289   00035A                     SCANLADRL       equ	858	;# 
  3290   00035B                     SCANLADRH       equ	859	;# 
  3291   00035C                     SCANLADRU       equ	860	;# 
  3292   00035D                     SCANHADR        equ	861	;# 
  3293   00035D                     SCANHADRL       equ	861	;# 
  3294   00035E                     SCANHADRH       equ	862	;# 
  3295   00035F                     SCANHADRU       equ	863	;# 
  3296   000360                     SCANCON0        equ	864	;# 
  3297   000361                     SCANTRIG        equ	865	;# 
  3298   000362                     IPR0            equ	866	;# 
  3299   000363                     IPR1            equ	867	;# 
  3300   000364                     IPR2            equ	868	;# 
  3301   000365                     IPR3            equ	869	;# 
  3302   000366                     IPR4            equ	870	;# 
  3303   000367                     IPR5            equ	871	;# 
  3304   000368                     IPR6            equ	872	;# 
  3305   000369                     IPR7            equ	873	;# 
  3306   00036A                     IPR8            equ	874	;# 
  3307   00036B                     IPR9            equ	875	;# 
  3308   00036C                     IPR10           equ	876	;# 
  3309   00036D                     IPR11           equ	877	;# 
  3310   00036E                     IPR12           equ	878	;# 
  3311   00036F                     IPR13           equ	879	;# 
  3312   000370                     IPR14           equ	880	;# 
  3313   000371                     IPR15           equ	881	;# 
  3314   000373                     STATUS_CSHAD    equ	883	;# 
  3315   000374                     WREG_CSHAD      equ	884	;# 
  3316   000375                     BSR_CSHAD       equ	885	;# 
  3317   000376                     SHADCON         equ	886	;# 
  3318   000377                     STATUS_SHAD     equ	887	;# 
  3319   000378                     WREG_SHAD       equ	888	;# 
  3320   000379                     BSR_SHAD        equ	889	;# 
  3321   00037A                     PCLATH_SHAD     equ	890	;# 
  3322   00037B                     PCLATU_SHAD     equ	891	;# 
  3323   00037C                     FSR0SH          equ	892	;# 
  3324   00037C                     FSR0L_SHAD      equ	892	;# 
  3325   00037D                     FSR0H_SHAD      equ	893	;# 
  3326   00037E                     FSR1SH          equ	894	;# 
  3327   00037E                     FSR1L_SHAD      equ	894	;# 
  3328   00037F                     FSR1H_SHAD      equ	895	;# 
  3329   000380                     FSR2SH          equ	896	;# 
  3330   000380                     FSR2L_SHAD      equ	896	;# 
  3331   000381                     FSR2H_SHAD      equ	897	;# 
  3332   000382                     PRODSH          equ	898	;# 
  3333   000382                     PRODL_SHAD      equ	898	;# 
  3334   000383                     PRODH_SHAD      equ	899	;# 
  3335   0003BC                     CWG1CLK         equ	956	;# 
  3336   0003BC                     CWG1CLKCON      equ	956	;# 
  3337   0003BD                     CWG1ISM         equ	957	;# 
  3338   0003BD                     CWG1DAT         equ	957	;# 
  3339   0003BE                     CWG1DBR         equ	958	;# 
  3340   0003BF                     CWG1DBF         equ	959	;# 
  3341   0003C0                     CWG1CON0        equ	960	;# 
  3342   0003C1                     CWG1CON1        equ	961	;# 
  3343   0003C2                     CWG1AS0         equ	962	;# 
  3344   0003C3                     CWG1AS1         equ	963	;# 
  3345   0003C4                     CWG1STR         equ	964	;# 
  3346   0003C5                     CWG2CLK         equ	965	;# 
  3347   0003C5                     CWG2CLKCON      equ	965	;# 
  3348   0003C6                     CWG2ISM         equ	966	;# 
  3349   0003C6                     CWG2DAT         equ	966	;# 
  3350   0003C7                     CWG2DBR         equ	967	;# 
  3351   0003C8                     CWG2DBF         equ	968	;# 
  3352   0003C9                     CWG2CON0        equ	969	;# 
  3353   0003CA                     CWG2CON1        equ	970	;# 
  3354   0003CB                     CWG2AS0         equ	971	;# 
  3355   0003CC                     CWG2AS1         equ	972	;# 
  3356   0003CD                     CWG2STR         equ	973	;# 
  3357   0003CE                     CWG3CLK         equ	974	;# 
  3358   0003CE                     CWG3CLKCON      equ	974	;# 
  3359   0003CF                     CWG3ISM         equ	975	;# 
  3360   0003CF                     CWG3DAT         equ	975	;# 
  3361   0003D0                     CWG3DBR         equ	976	;# 
  3362   0003D1                     CWG3DBF         equ	977	;# 
  3363   0003D2                     CWG3CON0        equ	978	;# 
  3364   0003D3                     CWG3CON1        equ	979	;# 
  3365   0003D4                     CWG3AS0         equ	980	;# 
  3366   0003D5                     CWG3AS1         equ	981	;# 
  3367   0003D6                     CWG3STR         equ	982	;# 
  3368   0003D7                     FVRCON          equ	983	;# 
  3369   0003D8                     ADCPCON         equ	984	;# 
  3370   0003D8                     ADCP            equ	984	;# 
  3371   0003D9                     ADLTH           equ	985	;# 
  3372   0003D9                     ADLTHL          equ	985	;# 
  3373   0003DA                     ADLTHH          equ	986	;# 
  3374   0003DB                     ADUTH           equ	987	;# 
  3375   0003DB                     ADUTHL          equ	987	;# 
  3376   0003DC                     ADUTHH          equ	988	;# 
  3377   0003DD                     ADERR           equ	989	;# 
  3378   0003DD                     ADERRL          equ	989	;# 
  3379   0003DE                     ADERRH          equ	990	;# 
  3380   0003DF                     ADSTPT          equ	991	;# 
  3381   0003DF                     ADSTPTL         equ	991	;# 
  3382   0003E0                     ADSTPTH         equ	992	;# 
  3383   0003E1                     ADFLTR          equ	993	;# 
  3384   0003E1                     ADFLTRL         equ	993	;# 
  3385   0003E2                     ADFLTRH         equ	994	;# 
  3386   0003E3                     ADACC           equ	995	;# 
  3387   0003E3                     ADACCL          equ	995	;# 
  3388   0003E4                     ADACCH          equ	996	;# 
  3389   0003E5                     ADACCU          equ	997	;# 
  3390   0003E6                     ADCNT           equ	998	;# 
  3391   0003E7                     ADRPT           equ	999	;# 
  3392   0003E8                     ADPREV          equ	1000	;# 
  3393   0003E8                     ADPREVL         equ	1000	;# 
  3394   0003E9                     ADPREVH         equ	1001	;# 
  3395   0003EA                     ADRES           equ	1002	;# 
  3396   0003EA                     ADRESL          equ	1002	;# 
  3397   0003EB                     ADRESH          equ	1003	;# 
  3398   0003EC                     ADPCH           equ	1004	;# 
  3399   0003EE                     ADACQ           equ	1006	;# 
  3400   0003EE                     ADACQL          equ	1006	;# 
  3401   0003EF                     ADACQH          equ	1007	;# 
  3402   0003F0                     ADCAP           equ	1008	;# 
  3403   0003F1                     ADPRE           equ	1009	;# 
  3404   0003F1                     ADPREL          equ	1009	;# 
  3405   0003F2                     ADPREH          equ	1010	;# 
  3406   0003F3                     ADCON0          equ	1011	;# 
  3407   0003F4                     ADCON1          equ	1012	;# 
  3408   0003F5                     ADCON2          equ	1013	;# 
  3409   0003F6                     ADCON3          equ	1014	;# 
  3410   0003F7                     ADSTAT          equ	1015	;# 
  3411   0003F8                     ADREF           equ	1016	;# 
  3412   0003F9                     ADACT           equ	1017	;# 
  3413   0003FA                     ADCLK           equ	1018	;# 
  3414   000400                     ANSELA          equ	1024	;# 
  3415   000401                     WPUA            equ	1025	;# 
  3416   000402                     ODCONA          equ	1026	;# 
  3417   000403                     SLRCONA         equ	1027	;# 
  3418   000404                     INLVLA          equ	1028	;# 
  3419   000405                     IOCAP           equ	1029	;# 
  3420   000406                     IOCAN           equ	1030	;# 
  3421   000407                     IOCAF           equ	1031	;# 
  3422   000408                     ANSELB          equ	1032	;# 
  3423   000409                     WPUB            equ	1033	;# 
  3424   00040A                     ODCONB          equ	1034	;# 
  3425   00040B                     SLRCONB         equ	1035	;# 
  3426   00040C                     INLVLB          equ	1036	;# 
  3427   00040D                     IOCBP           equ	1037	;# 
  3428   00040E                     IOCBN           equ	1038	;# 
  3429   00040F                     IOCBF           equ	1039	;# 
  3430   000410                     ANSELC          equ	1040	;# 
  3431   000411                     WPUC            equ	1041	;# 
  3432   000412                     ODCONC          equ	1042	;# 
  3433   000413                     SLRCONC         equ	1043	;# 
  3434   000414                     INLVLC          equ	1044	;# 
  3435   000415                     IOCCP           equ	1045	;# 
  3436   000416                     IOCCN           equ	1046	;# 
  3437   000417                     IOCCF           equ	1047	;# 
  3438   000418                     ANSELD          equ	1048	;# 
  3439   000419                     WPUD            equ	1049	;# 
  3440   00041A                     ODCOND          equ	1050	;# 
  3441   00041B                     SLRCOND         equ	1051	;# 
  3442   00041C                     INLVLD          equ	1052	;# 
  3443   000420                     ANSELE          equ	1056	;# 
  3444   000421                     WPUE            equ	1057	;# 
  3445   000422                     ODCONE          equ	1058	;# 
  3446   000423                     SLRCONE         equ	1059	;# 
  3447   000424                     INLVLE          equ	1060	;# 
  3448   000425                     IOCEP           equ	1061	;# 
  3449   000426                     IOCEN           equ	1062	;# 
  3450   000427                     IOCEF           equ	1063	;# 
  3451   000440                     NCO1ACC         equ	1088	;# 
  3452   000440                     NCO1ACCL        equ	1088	;# 
  3453   000441                     NCO1ACCH        equ	1089	;# 
  3454   000442                     NCO1ACCU        equ	1090	;# 
  3455   000443                     NCO1INC         equ	1091	;# 
  3456   000443                     NCO1INCL        equ	1091	;# 
  3457   000444                     NCO1INCH        equ	1092	;# 
  3458   000445                     NCO1INCU        equ	1093	;# 
  3459   000446                     NCO1CON         equ	1094	;# 
  3460   000447                     NCO1CLK         equ	1095	;# 
  3461   000448                     NCO2ACC         equ	1096	;# 
  3462   000448                     NCO2ACCL        equ	1096	;# 
  3463   000449                     NCO2ACCH        equ	1097	;# 
  3464   00044A                     NCO2ACCU        equ	1098	;# 
  3465   00044B                     NCO2INC         equ	1099	;# 
  3466   00044B                     NCO2INCL        equ	1099	;# 
  3467   00044C                     NCO2INCH        equ	1100	;# 
  3468   00044D                     NCO2INCU        equ	1101	;# 
  3469   00044E                     NCO2CON         equ	1102	;# 
  3470   00044F                     NCO2CLK         equ	1103	;# 
  3471   000450                     NCO3ACC         equ	1104	;# 
  3472   000450                     NCO3ACCL        equ	1104	;# 
  3473   000451                     NCO3ACCH        equ	1105	;# 
  3474   000452                     NCO3ACCU        equ	1106	;# 
  3475   000453                     NCO3INC         equ	1107	;# 
  3476   000453                     NCO3INCL        equ	1107	;# 
  3477   000454                     NCO3INCH        equ	1108	;# 
  3478   000455                     NCO3INCU        equ	1109	;# 
  3479   000456                     NCO3CON         equ	1110	;# 
  3480   000457                     NCO3CLK         equ	1111	;# 
  3481   000459                     IVTLOCK         equ	1113	;# 
  3482   00045A                     IVTAD           equ	1114	;# 
  3483   00045A                     IVTADL          equ	1114	;# 
  3484   00045B                     IVTADH          equ	1115	;# 
  3485   00045C                     IVTADU          equ	1116	;# 
  3486   00045D                     IVTBASE         equ	1117	;# 
  3487   00045D                     IVTBASEL        equ	1117	;# 
  3488   00045E                     IVTBASEH        equ	1118	;# 
  3489   00045F                     IVTBASEU        equ	1119	;# 
  3490   000460                     PWM1ERS         equ	1120	;# 
  3491   000461                     PWM1CLK         equ	1121	;# 
  3492   000462                     PWM1LDS         equ	1122	;# 
  3493   000463                     PWM1PR          equ	1123	;# 
  3494   000463                     PWM1PRL         equ	1123	;# 
  3495   000464                     PWM1PRH         equ	1124	;# 
  3496   000465                     PWM1CPRE        equ	1125	;# 
  3497   000466                     PWM1PIPOS       equ	1126	;# 
  3498   000467                     PWM1GIR         equ	1127	;# 
  3499   000468                     PWM1GIE         equ	1128	;# 
  3500   000469                     PWM1CON         equ	1129	;# 
  3501   00046A                     PWM1S1CFG       equ	1130	;# 
  3502   00046B                     PWM1S1P1        equ	1131	;# 
  3503   00046B                     PWM1S1P1L       equ	1131	;# 
  3504   00046C                     PWM1S1P1H       equ	1132	;# 
  3505   00046D                     PWM1S1P2        equ	1133	;# 
  3506   00046D                     PWM1S1P2L       equ	1133	;# 
  3507   00046E                     PWM1S1P2H       equ	1134	;# 
  3508   00046F                     PWM2ERS         equ	1135	;# 
  3509   000470                     PWM2CLK         equ	1136	;# 
  3510   000471                     PWM2LDS         equ	1137	;# 
  3511   000472                     PWM2PR          equ	1138	;# 
  3512   000472                     PWM2PRL         equ	1138	;# 
  3513   000473                     PWM2PRH         equ	1139	;# 
  3514   000474                     PWM2CPRE        equ	1140	;# 
  3515   000475                     PWM2PIPOS       equ	1141	;# 
  3516   000476                     PWM2GIR         equ	1142	;# 
  3517   000477                     PWM2GIE         equ	1143	;# 
  3518   000478                     PWM2CON         equ	1144	;# 
  3519   000479                     PWM2S1CFG       equ	1145	;# 
  3520   00047A                     PWM2S1P1        equ	1146	;# 
  3521   00047A                     PWM2S1P1L       equ	1146	;# 
  3522   00047B                     PWM2S1P1H       equ	1147	;# 
  3523   00047C                     PWM2S1P2        equ	1148	;# 
  3524   00047C                     PWM2S1P2L       equ	1148	;# 
  3525   00047D                     PWM2S1P2H       equ	1149	;# 
  3526   00047E                     PWM3ERS         equ	1150	;# 
  3527   00047F                     PWM3CLK         equ	1151	;# 
  3528   000480                     PWM3LDS         equ	1152	;# 
  3529   000481                     PWM3PR          equ	1153	;# 
  3530   000481                     PWM3PRL         equ	1153	;# 
  3531   000482                     PWM3PRH         equ	1154	;# 
  3532   000483                     PWM3CPRE        equ	1155	;# 
  3533   000484                     PWM3PIPOS       equ	1156	;# 
  3534   000485                     PWM3GIR         equ	1157	;# 
  3535   000486                     PWM3GIE         equ	1158	;# 
  3536   000487                     PWM3CON         equ	1159	;# 
  3537   000488                     PWM3S1CFG       equ	1160	;# 
  3538   000489                     PWM3S1P1        equ	1161	;# 
  3539   000489                     PWM3S1P1L       equ	1161	;# 
  3540   00048A                     PWM3S1P1H       equ	1162	;# 
  3541   00048B                     PWM3S1P2        equ	1163	;# 
  3542   00048B                     PWM3S1P2L       equ	1163	;# 
  3543   00048C                     PWM3S1P2H       equ	1164	;# 
  3544   00049C                     PWMLOAD         equ	1180	;# 
  3545   00049D                     PWMEN           equ	1181	;# 
  3546   00049E                     PIE0            equ	1182	;# 
  3547   00049F                     PIE1            equ	1183	;# 
  3548   0004A0                     PIE2            equ	1184	;# 
  3549   0004A1                     PIE3            equ	1185	;# 
  3550   0004A2                     PIE4            equ	1186	;# 
  3551   0004A3                     PIE5            equ	1187	;# 
  3552   0004A4                     PIE6            equ	1188	;# 
  3553   0004A5                     PIE7            equ	1189	;# 
  3554   0004A6                     PIE8            equ	1190	;# 
  3555   0004A7                     PIE9            equ	1191	;# 
  3556   0004A8                     PIE10           equ	1192	;# 
  3557   0004A9                     PIE11           equ	1193	;# 
  3558   0004AA                     PIE12           equ	1194	;# 
  3559   0004AB                     PIE13           equ	1195	;# 
  3560   0004AC                     PIE14           equ	1196	;# 
  3561   0004AD                     PIE15           equ	1197	;# 
  3562   0004AE                     PIR0            equ	1198	;# 
  3563   0004AF                     PIR1            equ	1199	;# 
  3564   0004B0                     PIR2            equ	1200	;# 
  3565   0004B1                     PIR3            equ	1201	;# 
  3566   0004B2                     PIR4            equ	1202	;# 
  3567   0004B3                     PIR5            equ	1203	;# 
  3568   0004B4                     PIR6            equ	1204	;# 
  3569   0004B5                     PIR7            equ	1205	;# 
  3570   0004B6                     PIR8            equ	1206	;# 
  3571   0004B7                     PIR9            equ	1207	;# 
  3572   0004B8                     PIR10           equ	1208	;# 
  3573   0004B9                     PIR11           equ	1209	;# 
  3574   0004BA                     PIR12           equ	1210	;# 
  3575   0004BB                     PIR13           equ	1211	;# 
  3576   0004BC                     PIR14           equ	1212	;# 
  3577   0004BD                     PIR15           equ	1213	;# 
  3578   0004BE                     LATA            equ	1214	;# 
  3579   0004BF                     LATB            equ	1215	;# 
  3580   0004C0                     LATC            equ	1216	;# 
  3581   0004C1                     LATD            equ	1217	;# 
  3582   0004C2                     LATE            equ	1218	;# 
  3583   0004C6                     TRISA           equ	1222	;# 
  3584   0004C7                     TRISB           equ	1223	;# 
  3585   0004C8                     TRISC           equ	1224	;# 
  3586   0004C9                     TRISD           equ	1225	;# 
  3587   0004CA                     TRISE           equ	1226	;# 
  3588   0004CE                     PORTA           equ	1230	;# 
  3589   0004CF                     PORTB           equ	1231	;# 
  3590   0004D0                     PORTC           equ	1232	;# 
  3591   0004D1                     PORTD           equ	1233	;# 
  3592   0004D2                     PORTE           equ	1234	;# 
  3593   0004D6                     INTCON0         equ	1238	;# 
  3594   0004D7                     INTCON1         equ	1239	;# 
  3595   0004D8                     STATUS          equ	1240	;# 
  3596   0004D9                     FSR2            equ	1241	;# 
  3597   0004D9                     FSR2L           equ	1241	;# 
  3598   0004DA                     FSR2H           equ	1242	;# 
  3599   0004DB                     PLUSW2          equ	1243	;# 
  3600   0004DC                     PREINC2         equ	1244	;# 
  3601   0004DD                     POSTDEC2        equ	1245	;# 
  3602   0004DE                     POSTINC2        equ	1246	;# 
  3603   0004DF                     INDF2           equ	1247	;# 
  3604   0004E0                     BSR             equ	1248	;# 
  3605   0004E1                     FSR1            equ	1249	;# 
  3606   0004E1                     FSR1L           equ	1249	;# 
  3607   0004E2                     FSR1H           equ	1250	;# 
  3608   0004E3                     PLUSW1          equ	1251	;# 
  3609   0004E4                     PREINC1         equ	1252	;# 
  3610   0004E5                     POSTDEC1        equ	1253	;# 
  3611   0004E6                     POSTINC1        equ	1254	;# 
  3612   0004E7                     INDF1           equ	1255	;# 
  3613   0004E8                     WREG            equ	1256	;# 
  3614   0004E9                     FSR0            equ	1257	;# 
  3615   0004E9                     FSR0L           equ	1257	;# 
  3616   0004EA                     FSR0H           equ	1258	;# 
  3617   0004EB                     PLUSW0          equ	1259	;# 
  3618   0004EC                     PREINC0         equ	1260	;# 
  3619   0004ED                     POSTDEC0        equ	1261	;# 
  3620   0004EE                     POSTINC0        equ	1262	;# 
  3621   0004EF                     INDF0           equ	1263	;# 
  3622   0004F0                     PCON0           equ	1264	;# 
  3623   0004F1                     PCON1           equ	1265	;# 
  3624   0004F2                     CPUDOZE         equ	1266	;# 
  3625   0004F3                     PROD            equ	1267	;# 
  3626   0004F3                     PRODL           equ	1267	;# 
  3627   0004F4                     PRODH           equ	1268	;# 
  3628   0004F5                     TABLAT          equ	1269	;# 
  3629   0004F6                     TBLPTR          equ	1270	;# 
  3630   0004F6                     TBLPTRL         equ	1270	;# 
  3631   0004F7                     TBLPTRH         equ	1271	;# 
  3632   0004F8                     TBLPTRU         equ	1272	;# 
  3633   0004F9                     PCLAT           equ	1273	;# 
  3634   0004F9                     PCL             equ	1273	;# 
  3635   0004FA                     PCLATH          equ	1274	;# 
  3636   0004FB                     PCLATU          equ	1275	;# 
  3637   0004FC                     STKPTR          equ	1276	;# 
  3638   0004FD                     TOS             equ	1277	;# 
  3639   0004FD                     TOSL            equ	1277	;# 
  3640   0004FE                     TOSH            equ	1278	;# 
  3641   0004FF                     TOSU            equ	1279	;# 
  3642   000039                     CLKRCON         equ	57	;# 
  3643   00003A                     CLKRCLK         equ	58	;# 
  3644   000040                     NVMCON0         equ	64	;# 
  3645   000041                     NVMCON1         equ	65	;# 
  3646   000042                     NVMLOCK         equ	66	;# 
  3647   000043                     NVMADR          equ	67	;# 
  3648   000043                     NVMADRL         equ	67	;# 
  3649   000044                     NVMADRH         equ	68	;# 
  3650   000045                     NVMADRU         equ	69	;# 
  3651   000046                     NVMDAT          equ	70	;# 
  3652   000046                     NVMDATL         equ	70	;# 
  3653   000047                     NVMDATH         equ	71	;# 
  3654   000048                     VREGCON         equ	72	;# 
  3655   000049                     BORCON          equ	73	;# 
  3656   00004A                     HLVDCON0        equ	74	;# 
  3657   00004B                     HLVDCON1        equ	75	;# 
  3658   00004C                     ZCDCON          equ	76	;# 
  3659   000060                     PMD0            equ	96	;# 
  3660   000061                     PMD1            equ	97	;# 
  3661   000063                     PMD3            equ	99	;# 
  3662   000064                     PMD4            equ	100	;# 
  3663   000065                     PMD5            equ	101	;# 
  3664   000066                     PMD6            equ	102	;# 
  3665   000067                     PMD7            equ	103	;# 
  3666   000068                     PMD8            equ	104	;# 
  3667   00006A                     MD1CON0         equ	106	;# 
  3668   00006B                     MD1CON1         equ	107	;# 
  3669   00006C                     MD1SRC          equ	108	;# 
  3670   00006D                     MD1CARL         equ	109	;# 
  3671   00006E                     MD1CARH         equ	110	;# 
  3672   00006F                     CMOUT           equ	111	;# 
  3673   000070                     CM1CON0         equ	112	;# 
  3674   000071                     CM1CON1         equ	113	;# 
  3675   000072                     CM1NCH          equ	114	;# 
  3676   000073                     CM1PCH          equ	115	;# 
  3677   000074                     CM2CON0         equ	116	;# 
  3678   000075                     CM2CON1         equ	117	;# 
  3679   000076                     CM2NCH          equ	118	;# 
  3680   000077                     CM2PCH          equ	119	;# 
  3681   000078                     WDTCON0         equ	120	;# 
  3682   000079                     WDTCON1         equ	121	;# 
  3683   00007A                     WDTPS           equ	122	;# 
  3684   00007A                     WDTPSL          equ	122	;# 
  3685   00007B                     WDTPSH          equ	123	;# 
  3686   00007C                     WDTTMR          equ	124	;# 
  3687   00007D                     DAC1DAT         equ	125	;# 
  3688   00007D                     DAC1DATL        equ	125	;# 
  3689   00007F                     DAC1CON         equ	127	;# 
  3690   000080                     SPI1RXB         equ	128	;# 
  3691   000081                     SPI1TXB         equ	129	;# 
  3692   000082                     SPI1TCNT        equ	130	;# 
  3693   000082                     SPI1TCNTL       equ	130	;# 
  3694   000083                     SPI1TCNTH       equ	131	;# 
  3695   000084                     SPI1CON0        equ	132	;# 
  3696   000085                     SPI1CON1        equ	133	;# 
  3697   000086                     SPI1CON2        equ	134	;# 
  3698   000087                     SPI1STATUS      equ	135	;# 
  3699   000088                     SPI1TWIDTH      equ	136	;# 
  3700   000089                     SPI1BAUD        equ	137	;# 
  3701   00008A                     SPI1INTF        equ	138	;# 
  3702   00008B                     SPI1INTE        equ	139	;# 
  3703   00008C                     SPI1CLK         equ	140	;# 
  3704   00008D                     SPI2RXB         equ	141	;# 
  3705   00008E                     SPI2TXB         equ	142	;# 
  3706   00008F                     SPI2TCNT        equ	143	;# 
  3707   00008F                     SPI2TCNTL       equ	143	;# 
  3708   000090                     SPI2TCNTH       equ	144	;# 
  3709   000091                     SPI2CON0        equ	145	;# 
  3710   000092                     SPI2CON1        equ	146	;# 
  3711   000093                     SPI2CON2        equ	147	;# 
  3712   000094                     SPI2STATUS      equ	148	;# 
  3713   000095                     SPI2TWIDTH      equ	149	;# 
  3714   000096                     SPI2BAUD        equ	150	;# 
  3715   000097                     SPI2INTF        equ	151	;# 
  3716   000098                     SPI2INTE        equ	152	;# 
  3717   000099                     SPI2CLK         equ	153	;# 
  3718   0000AC                     ACTCON          equ	172	;# 
  3719   0000AD                     OSCCON1         equ	173	;# 
  3720   0000AE                     OSCCON2         equ	174	;# 
  3721   0000AF                     OSCCON3         equ	175	;# 
  3722   0000B0                     OSCTUNE         equ	176	;# 
  3723   0000B1                     OSCFRQ          equ	177	;# 
  3724   0000B1                     OSCFREQ         equ	177	;# 
  3725   0000B2                     OSCSTAT         equ	178	;# 
  3726   0000B2                     OSCSTAT1        equ	178	;# 
  3727   0000B3                     OSCEN           equ	179	;# 
  3728   0000B4                     PRLOCK          equ	180	;# 
  3729   0000B5                     SCANPR          equ	181	;# 
  3730   0000B6                     DMA1PR          equ	182	;# 
  3731   0000B7                     DMA2PR          equ	183	;# 
  3732   0000B8                     DMA3PR          equ	184	;# 
  3733   0000B9                     DMA4PR          equ	185	;# 
  3734   0000BA                     DMA5PR          equ	186	;# 
  3735   0000BB                     DMA6PR          equ	187	;# 
  3736   0000BE                     MAINPR          equ	190	;# 
  3737   0000BF                     ISRPR           equ	191	;# 
  3738   0000D4                     CLCDATA         equ	212	;# 
  3739   0000D5                     CLCSELECT       equ	213	;# 
  3740   0000D6                     CLCnCON         equ	214	;# 
  3741   0000D7                     CLCnPOL         equ	215	;# 
  3742   0000D8                     CLCnSEL0        equ	216	;# 
  3743   0000D9                     CLCnSEL1        equ	217	;# 
  3744   0000DA                     CLCnSEL2        equ	218	;# 
  3745   0000DB                     CLCnSEL3        equ	219	;# 
  3746   0000DC                     CLCnGLS0        equ	220	;# 
  3747   0000DD                     CLCnGLS1        equ	221	;# 
  3748   0000DE                     CLCnGLS2        equ	222	;# 
  3749   0000DF                     CLCnGLS3        equ	223	;# 
  3750   0000E8                     DMASELECT       equ	232	;# 
  3751   0000E9                     DMAnBUF         equ	233	;# 
  3752   0000EA                     DMAnDCNT        equ	234	;# 
  3753   0000EA                     DMAnDCNTL       equ	234	;# 
  3754   0000EB                     DMAnDCNTH       equ	235	;# 
  3755   0000EC                     DMAnDPTR        equ	236	;# 
  3756   0000EC                     DMAnDPTRL       equ	236	;# 
  3757   0000ED                     DMAnDPTRH       equ	237	;# 
  3758   0000EE                     DMAnDSZ         equ	238	;# 
  3759   0000EE                     DMAnDSZL        equ	238	;# 
  3760   0000EF                     DMAnDSZH        equ	239	;# 
  3761   0000F0                     DMAnDSA         equ	240	;# 
  3762   0000F0                     DMAnDSAL        equ	240	;# 
  3763   0000F1                     DMAnDSAH        equ	241	;# 
  3764   0000F2                     DMAnSCNT        equ	242	;# 
  3765   0000F2                     DMAnSCNTL       equ	242	;# 
  3766   0000F3                     DMAnSCNTH       equ	243	;# 
  3767   0000F4                     DMAnSPTR        equ	244	;# 
  3768   0000F4                     DMAnSPTRL       equ	244	;# 
  3769   0000F5                     DMAnSPTRH       equ	245	;# 
  3770   0000F6                     DMAnSPTRU       equ	246	;# 
  3771   0000F7                     DMAnSSZ         equ	247	;# 
  3772   0000F7                     DMAnSSZL        equ	247	;# 
  3773   0000F8                     DMAnSSZH        equ	248	;# 
  3774   0000F9                     DMAnSSA         equ	249	;# 
  3775   0000F9                     DMAnSSAL        equ	249	;# 
  3776   0000FA                     DMAnSSAH        equ	250	;# 
  3777   0000FB                     DMAnSSAU        equ	251	;# 
  3778   0000FC                     DMAnCON0        equ	252	;# 
  3779   0000FD                     DMAnCON1        equ	253	;# 
  3780   0000FE                     DMAnAIRQ        equ	254	;# 
  3781   0000FF                     DMAnSIRQ        equ	255	;# 
  3782   000200                     PPSLOCK         equ	512	;# 
  3783   000201                     RA0PPS          equ	513	;# 
  3784   000202                     RA1PPS          equ	514	;# 
  3785   000203                     RA2PPS          equ	515	;# 
  3786   000204                     RA3PPS          equ	516	;# 
  3787   000205                     RA4PPS          equ	517	;# 
  3788   000206                     RA5PPS          equ	518	;# 
  3789   000207                     RA6PPS          equ	519	;# 
  3790   000208                     RA7PPS          equ	520	;# 
  3791   000209                     RB0PPS          equ	521	;# 
  3792   00020A                     RB1PPS          equ	522	;# 
  3793   00020B                     RB2PPS          equ	523	;# 
  3794   00020C                     RB3PPS          equ	524	;# 
  3795   00020D                     RB4PPS          equ	525	;# 
  3796   00020E                     RB5PPS          equ	526	;# 
  3797   00020F                     RB6PPS          equ	527	;# 
  3798   000210                     RB7PPS          equ	528	;# 
  3799   000211                     RC0PPS          equ	529	;# 
  3800   000212                     RC1PPS          equ	530	;# 
  3801   000213                     RC2PPS          equ	531	;# 
  3802   000214                     RC3PPS          equ	532	;# 
  3803   000215                     RC4PPS          equ	533	;# 
  3804   000216                     RC5PPS          equ	534	;# 
  3805   000217                     RC6PPS          equ	535	;# 
  3806   000218                     RC7PPS          equ	536	;# 
  3807   000219                     RD0PPS          equ	537	;# 
  3808   00021A                     RD1PPS          equ	538	;# 
  3809   00021B                     RD2PPS          equ	539	;# 
  3810   00021C                     RD3PPS          equ	540	;# 
  3811   00021D                     RD4PPS          equ	541	;# 
  3812   00021E                     RD5PPS          equ	542	;# 
  3813   00021F                     RD6PPS          equ	543	;# 
  3814   000220                     RD7PPS          equ	544	;# 
  3815   000221                     RE0PPS          equ	545	;# 
  3816   000222                     RE1PPS          equ	546	;# 
  3817   000223                     RE2PPS          equ	547	;# 
  3818   00023E                     INT0PPS         equ	574	;# 
  3819   00023F                     INT1PPS         equ	575	;# 
  3820   000240                     INT2PPS         equ	576	;# 
  3821   000241                     T0CKIPPS        equ	577	;# 
  3822   000242                     T1CKIPPS        equ	578	;# 
  3823   000243                     T1GPPS          equ	579	;# 
  3824   000244                     T3CKIPPS        equ	580	;# 
  3825   000245                     T3GPPS          equ	581	;# 
  3826   000246                     T5CKIPPS        equ	582	;# 
  3827   000247                     T5GPPS          equ	583	;# 
  3828   000248                     T2INPPS         equ	584	;# 
  3829   000249                     T4INPPS         equ	585	;# 
  3830   00024A                     T6INPPS         equ	586	;# 
  3831   00024F                     CCP1PPS         equ	591	;# 
  3832   000250                     CCP2PPS         equ	592	;# 
  3833   000251                     CCP3PPS         equ	593	;# 
  3834   000253                     PWM1ERSPPS      equ	595	;# 
  3835   000254                     PWM2ERSPPS      equ	596	;# 
  3836   000255                     PWM3ERSPPS      equ	597	;# 
  3837   000257                     PWMIN0PPS       equ	599	;# 
  3838   000258                     PWMIN1PPS       equ	600	;# 
  3839   000259                     SMT1WINPPS      equ	601	;# 
  3840   00025A                     SMT1SIGPPS      equ	602	;# 
  3841   00025B                     CWG1PPS         equ	603	;# 
  3842   00025B                     CWG1INPPS       equ	603	;# 
  3843   00025C                     CWG2PPS         equ	604	;# 
  3844   00025C                     CWG2INPPS       equ	604	;# 
  3845   00025D                     CWG3PPS         equ	605	;# 
  3846   00025D                     CWG3INPPS       equ	605	;# 
  3847   00025E                     MD1CARLPPS      equ	606	;# 
  3848   00025E                     MDCARLPPS       equ	606	;# 
  3849   00025F                     MD1CARHPPS      equ	607	;# 
  3850   00025F                     MDCARHPPS       equ	607	;# 
  3851   000260                     MD1SRCPPS       equ	608	;# 
  3852   000260                     MDSRCPPS        equ	608	;# 
  3853   000261                     CLCIN0PPS       equ	609	;# 
  3854   000262                     CLCIN1PPS       equ	610	;# 
  3855   000263                     CLCIN2PPS       equ	611	;# 
  3856   000264                     CLCIN3PPS       equ	612	;# 
  3857   000265                     CLCIN4PPS       equ	613	;# 
  3858   000266                     CLCIN5PPS       equ	614	;# 
  3859   000267                     CLCIN6PPS       equ	615	;# 
  3860   000268                     CLCIN7PPS       equ	616	;# 
  3861   000269                     ADACTPPS        equ	617	;# 
  3862   00026A                     SPI1SCKPPS      equ	618	;# 
  3863   00026B                     SPI1SDIPPS      equ	619	;# 
  3864   00026C                     SPI1SSPPS       equ	620	;# 
  3865   00026D                     SPI2SCKPPS      equ	621	;# 
  3866   00026E                     SPI2SDIPPS      equ	622	;# 
  3867   00026F                     SPI2SSPPS       equ	623	;# 
  3868   000270                     I2C1SDAPPS      equ	624	;# 
  3869   000271                     I2C1SCLPPS      equ	625	;# 
  3870   000272                     U1RXPPS         equ	626	;# 
  3871   000273                     U1CTSPPS        equ	627	;# 
  3872   000274                     U2RXPPS         equ	628	;# 
  3873   000275                     U2CTSPPS        equ	629	;# 
  3874   000276                     U3RXPPS         equ	630	;# 
  3875   000277                     U3CTSPPS        equ	631	;# 
  3876   000278                     U4RXPPS         equ	632	;# 
  3877   000279                     U4CTSPPS        equ	633	;# 
  3878   00027A                     U5RXPPS         equ	634	;# 
  3879   00027B                     U5CTSPPS        equ	635	;# 
  3880   000286                     RC4I2C          equ	646	;# 
  3881   000287                     RC3I2C          equ	647	;# 
  3882   000288                     RB2I2C          equ	648	;# 
  3883   000289                     RB1I2C          equ	649	;# 
  3884   00028B                     I2C1RXB         equ	651	;# 
  3885   00028C                     I2C1TXB         equ	652	;# 
  3886   00028D                     I2C1CNT         equ	653	;# 
  3887   00028E                     I2C1ADB0        equ	654	;# 
  3888   00028F                     I2C1ADB1        equ	655	;# 
  3889   000290                     I2C1ADR0        equ	656	;# 
  3890   000291                     I2C1ADR1        equ	657	;# 
  3891   000292                     I2C1ADR2        equ	658	;# 
  3892   000293                     I2C1ADR3        equ	659	;# 
  3893   000294                     I2C1CON0        equ	660	;# 
  3894   000295                     I2C1CON1        equ	661	;# 
  3895   000296                     I2C1CON2        equ	662	;# 
  3896   000297                     I2C1ERR         equ	663	;# 
  3897   000298                     I2C1STAT0       equ	664	;# 
  3898   000299                     I2C1STAT1       equ	665	;# 
  3899   00029A                     I2C1PIR         equ	666	;# 
  3900   00029B                     I2C1PIE         equ	667	;# 
  3901   00029C                     I2C1CLK         equ	668	;# 
  3902   00029D                     I2C1BTO         equ	669	;# 
  3903   0002A1                     U1RXB           equ	673	;# 
  3904   0002A1                     U1RXBL          equ	673	;# 
  3905   0002A2                     U1RXCHK         equ	674	;# 
  3906   0002A3                     U1TXB           equ	675	;# 
  3907   0002A3                     U1TXBL          equ	675	;# 
  3908   0002A4                     U1TXCHK         equ	676	;# 
  3909   0002A5                     U1P1            equ	677	;# 
  3910   0002A5                     U1P1L           equ	677	;# 
  3911   0002A6                     U1P1H           equ	678	;# 
  3912   0002A7                     U1P2            equ	679	;# 
  3913   0002A7                     U1P2L           equ	679	;# 
  3914   0002A8                     U1P2H           equ	680	;# 
  3915   0002A9                     U1P3            equ	681	;# 
  3916   0002A9                     U1P3L           equ	681	;# 
  3917   0002AA                     U1P3H           equ	682	;# 
  3918   0002AB                     U1CON0          equ	683	;# 
  3919   0002AC                     U1CON1          equ	684	;# 
  3920   0002AD                     U1CON2          equ	685	;# 
  3921   0002AE                     U1BRG           equ	686	;# 
  3922   0002AE                     U1BRGL          equ	686	;# 
  3923   0002AF                     U1BRGH          equ	687	;# 
  3924   0002B0                     U1FIFO          equ	688	;# 
  3925   0002B1                     U1UIR           equ	689	;# 
  3926   0002B2                     U1ERRIR         equ	690	;# 
  3927   0002B3                     U1ERRIE         equ	691	;# 
  3928   0002B4                     U2RXB           equ	692	;# 
  3929   0002B4                     U2RXBL          equ	692	;# 
  3930   0002B6                     U2TXB           equ	694	;# 
  3931   0002B6                     U2TXBL          equ	694	;# 
  3932   0002B8                     U2P1            equ	696	;# 
  3933   0002B8                     U2P1L           equ	696	;# 
  3934   0002BA                     U2P2            equ	698	;# 
  3935   0002BA                     U2P2L           equ	698	;# 
  3936   0002BC                     U2P3            equ	700	;# 
  3937   0002BC                     U2P3L           equ	700	;# 
  3938   0002BE                     U2CON0          equ	702	;# 
  3939   0002BF                     U2CON1          equ	703	;# 
  3940   0002C0                     U2CON2          equ	704	;# 
  3941   0002C1                     U2BRG           equ	705	;# 
  3942   0002C1                     U2BRGL          equ	705	;# 
  3943   0002C2                     U2BRGH          equ	706	;# 
  3944   0002C3                     U2FIFO          equ	707	;# 
  3945   0002C4                     U2UIR           equ	708	;# 
  3946   0002C5                     U2ERRIR         equ	709	;# 
  3947   0002C6                     U2ERRIE         equ	710	;# 
  3948   0002C7                     U3RXB           equ	711	;# 
  3949   0002C7                     U3RXBL          equ	711	;# 
  3950   0002C9                     U3TXB           equ	713	;# 
  3951   0002C9                     U3TXBL          equ	713	;# 
  3952   0002CB                     U3P1            equ	715	;# 
  3953   0002CB                     U3P1L           equ	715	;# 
  3954   0002CD                     U3P2            equ	717	;# 
  3955   0002CD                     U3P2L           equ	717	;# 
  3956   0002CF                     U3P3            equ	719	;# 
  3957   0002CF                     U3P3L           equ	719	;# 
  3958   0002D1                     U3CON0          equ	721	;# 
  3959   0002D2                     U3CON1          equ	722	;# 
  3960   0002D3                     U3CON2          equ	723	;# 
  3961   0002D4                     U3BRG           equ	724	;# 
  3962   0002D4                     U3BRGL          equ	724	;# 
  3963   0002D5                     U3BRGH          equ	725	;# 
  3964   0002D6                     U3FIFO          equ	726	;# 
  3965   0002D7                     U3UIR           equ	727	;# 
  3966   0002D8                     U3ERRIR         equ	728	;# 
  3967   0002D9                     U3ERRIE         equ	729	;# 
  3968   0002DA                     U4RXB           equ	730	;# 
  3969   0002DA                     U4RXBL          equ	730	;# 
  3970   0002DC                     U4TXB           equ	732	;# 
  3971   0002DC                     U4TXBL          equ	732	;# 
  3972   0002DE                     U4P1            equ	734	;# 
  3973   0002DE                     U4P1L           equ	734	;# 
  3974   0002E0                     U4P2            equ	736	;# 
  3975   0002E0                     U4P2L           equ	736	;# 
  3976   0002E2                     U4P3            equ	738	;# 
  3977   0002E2                     U4P3L           equ	738	;# 
  3978   0002E4                     U4CON0          equ	740	;# 
  3979   0002E5                     U4CON1          equ	741	;# 
  3980   0002E6                     U4CON2          equ	742	;# 
  3981   0002E7                     U4BRG           equ	743	;# 
  3982   0002E7                     U4BRGL          equ	743	;# 
  3983   0002E8                     U4BRGH          equ	744	;# 
  3984   0002E9                     U4FIFO          equ	745	;# 
  3985   0002EA                     U4UIR           equ	746	;# 
  3986   0002EB                     U4ERRIR         equ	747	;# 
  3987   0002EC                     U4ERRIE         equ	748	;# 
  3988   0002ED                     U5RXB           equ	749	;# 
  3989   0002ED                     U5RXBL          equ	749	;# 
  3990   0002EF                     U5TXB           equ	751	;# 
  3991   0002EF                     U5TXBL          equ	751	;# 
  3992   0002F1                     U5P1            equ	753	;# 
  3993   0002F1                     U5P1L           equ	753	;# 
  3994   0002F3                     U5P2            equ	755	;# 
  3995   0002F3                     U5P2L           equ	755	;# 
  3996   0002F5                     U5P3            equ	757	;# 
  3997   0002F5                     U5P3L           equ	757	;# 
  3998   0002F7                     U5CON0          equ	759	;# 
  3999   0002F8                     U5CON1          equ	760	;# 
  4000   0002F9                     U5CON2          equ	761	;# 
  4001   0002FA                     U5BRG           equ	762	;# 
  4002   0002FA                     U5BRGL          equ	762	;# 
  4003   0002FB                     U5BRGH          equ	763	;# 
  4004   0002FC                     U5FIFO          equ	764	;# 
  4005   0002FD                     U5UIR           equ	765	;# 
  4006   0002FE                     U5ERRIR         equ	766	;# 
  4007   0002FF                     U5ERRIE         equ	767	;# 
  4008   000300                     SMT1TMR         equ	768	;# 
  4009   000300                     SMT1TMRL        equ	768	;# 
  4010   000301                     SMT1TMRH        equ	769	;# 
  4011   000302                     SMT1TMRU        equ	770	;# 
  4012   000303                     SMT1CPR         equ	771	;# 
  4013   000303                     SMT1CPRL        equ	771	;# 
  4014   000304                     SMT1CPRH        equ	772	;# 
  4015   000305                     SMT1CPRU        equ	773	;# 
  4016   000306                     SMT1CPW         equ	774	;# 
  4017   000306                     SMT1CPWL        equ	774	;# 
  4018   000307                     SMT1CPWH        equ	775	;# 
  4019   000308                     SMT1CPWU        equ	776	;# 
  4020   000309                     SMT1PR          equ	777	;# 
  4021   000309                     SMT1PRL         equ	777	;# 
  4022   00030A                     SMT1PRH         equ	778	;# 
  4023   00030B                     SMT1PRU         equ	779	;# 
  4024   00030C                     SMT1CON0        equ	780	;# 
  4025   00030D                     SMT1CON1        equ	781	;# 
  4026   00030E                     SMT1STAT        equ	782	;# 
  4027   00030F                     SMT1CLK         equ	783	;# 
  4028   000310                     SMT1SIG         equ	784	;# 
  4029   000311                     SMT1WIN         equ	785	;# 
  4030   000318                     TMR0L           equ	792	;# 
  4031   000318                     TMR0            equ	792	;# 
  4032   000319                     TMR0H           equ	793	;# 
  4033   000319                     PR0             equ	793	;# 
  4034   00031A                     T0CON0          equ	794	;# 
  4035   00031B                     T0CON1          equ	795	;# 
  4036   00031C                     TMR1            equ	796	;# 
  4037   00031C                     TMR1L           equ	796	;# 
  4038   00031D                     TMR1H           equ	797	;# 
  4039   00031E                     T1CON           equ	798	;# 
  4040   00031E                     TMR1CON         equ	798	;# 
  4041   00031F                     T1GCON          equ	799	;# 
  4042   00031F                     TMR1GCON        equ	799	;# 
  4043   000320                     T1GATE          equ	800	;# 
  4044   000320                     TMR1GATE        equ	800	;# 
  4045   000321                     T1CLK           equ	801	;# 
  4046   000321                     TMR1CLK         equ	801	;# 
  4047   000321                     PR1             equ	801	;# 
  4048   000322                     T2TMR           equ	802	;# 
  4049   000322                     TMR2            equ	802	;# 
  4050   000323                     T2PR            equ	803	;# 
  4051   000323                     PR2             equ	803	;# 
  4052   000324                     T2CON           equ	804	;# 
  4053   000325                     T2HLT           equ	805	;# 
  4054   000326                     T2CLKCON        equ	806	;# 
  4055   000326                     T2CLK           equ	806	;# 
  4056   000327                     T2RST           equ	807	;# 
  4057   000328                     TMR3            equ	808	;# 
  4058   000328                     TMR3L           equ	808	;# 
  4059   000329                     TMR3H           equ	809	;# 
  4060   00032A                     T3CON           equ	810	;# 
  4061   00032A                     TMR3CON         equ	810	;# 
  4062   00032B                     T3GCON          equ	811	;# 
  4063   00032B                     TMR3GCON        equ	811	;# 
  4064   00032C                     T3GATE          equ	812	;# 
  4065   00032C                     TMR3GATE        equ	812	;# 
  4066   00032D                     T3CLK           equ	813	;# 
  4067   00032D                     TMR3CLK         equ	813	;# 
  4068   00032D                     PR3             equ	813	;# 
  4069   00032E                     T4TMR           equ	814	;# 
  4070   00032E                     TMR4            equ	814	;# 
  4071   00032F                     T4PR            equ	815	;# 
  4072   00032F                     PR4             equ	815	;# 
  4073   000330                     T4CON           equ	816	;# 
  4074   000331                     T4HLT           equ	817	;# 
  4075   000332                     T4CLKCON        equ	818	;# 
  4076   000332                     T4CLK           equ	818	;# 
  4077   000333                     T4RST           equ	819	;# 
  4078   000334                     TMR5            equ	820	;# 
  4079   000334                     TMR5L           equ	820	;# 
  4080   000335                     TMR5H           equ	821	;# 
  4081   000336                     T5CON           equ	822	;# 
  4082   000336                     TMR5CON         equ	822	;# 
  4083   000337                     T5GCON          equ	823	;# 
  4084   000337                     TMR5GCON        equ	823	;# 
  4085   000338                     T5GATE          equ	824	;# 
  4086   000338                     TMR5GATE        equ	824	;# 
  4087   000339                     T5CLK           equ	825	;# 
  4088   000339                     TMR5CLK         equ	825	;# 
  4089   000339                     PR5             equ	825	;# 
  4090   00033A                     T6TMR           equ	826	;# 
  4091   00033A                     TMR6            equ	826	;# 
  4092   00033B                     T6PR            equ	827	;# 
  4093   00033B                     PR6             equ	827	;# 
  4094   00033C                     T6CON           equ	828	;# 
  4095   00033D                     T6HLT           equ	829	;# 
  4096   00033E                     T6CLKCON        equ	830	;# 
  4097   00033E                     T6CLK           equ	830	;# 
  4098   00033F                     T6RST           equ	831	;# 
  4099   000340                     CCPR1           equ	832	;# 
  4100   000340                     CCPR1L          equ	832	;# 
  4101   000341                     CCPR1H          equ	833	;# 
  4102   000342                     CCP1CON         equ	834	;# 
  4103   000343                     CCP1CAP         equ	835	;# 
  4104   000344                     CCPR2           equ	836	;# 
  4105   000344                     CCPR2L          equ	836	;# 
  4106   000345                     CCPR2H          equ	837	;# 
  4107   000346                     CCP2CON         equ	838	;# 
  4108   000347                     CCP2CAP         equ	839	;# 
  4109   000348                     CCPR3           equ	840	;# 
  4110   000348                     CCPR3L          equ	840	;# 
  4111   000349                     CCPR3H          equ	841	;# 
  4112   00034A                     CCP3CON         equ	842	;# 
  4113   00034B                     CCP3CAP         equ	843	;# 
  4114   00034C                     CCPTMRS0        equ	844	;# 
  4115   00034F                     CRCDATA         equ	847	;# 
  4116   00034F                     CRCDATL         equ	847	;# 
  4117   000350                     CRCDATH         equ	848	;# 
  4118   000351                     CRCACC          equ	849	;# 
  4119   000351                     CRCACCL         equ	849	;# 
  4120   000352                     CRCACCH         equ	850	;# 
  4121   000353                     CRCSHFT         equ	851	;# 
  4122   000353                     CRCSHIFTL       equ	851	;# 
  4123   000354                     CRCSHIFTH       equ	852	;# 
  4124   000355                     CRCXOR          equ	853	;# 
  4125   000355                     CRCXORL         equ	853	;# 
  4126   000356                     CRCXORH         equ	854	;# 
  4127   000357                     CRCCON0         equ	855	;# 
  4128   000358                     CRCCON1         equ	856	;# 
  4129   00035A                     SCANLADR        equ	858	;# 
  4130   00035A                     SCANLADRL       equ	858	;# 
  4131   00035B                     SCANLADRH       equ	859	;# 
  4132   00035C                     SCANLADRU       equ	860	;# 
  4133   00035D                     SCANHADR        equ	861	;# 
  4134   00035D                     SCANHADRL       equ	861	;# 
  4135   00035E                     SCANHADRH       equ	862	;# 
  4136   00035F                     SCANHADRU       equ	863	;# 
  4137   000360                     SCANCON0        equ	864	;# 
  4138   000361                     SCANTRIG        equ	865	;# 
  4139   000362                     IPR0            equ	866	;# 
  4140   000363                     IPR1            equ	867	;# 
  4141   000364                     IPR2            equ	868	;# 
  4142   000365                     IPR3            equ	869	;# 
  4143   000366                     IPR4            equ	870	;# 
  4144   000367                     IPR5            equ	871	;# 
  4145   000368                     IPR6            equ	872	;# 
  4146   000369                     IPR7            equ	873	;# 
  4147   00036A                     IPR8            equ	874	;# 
  4148   00036B                     IPR9            equ	875	;# 
  4149   00036C                     IPR10           equ	876	;# 
  4150   00036D                     IPR11           equ	877	;# 
  4151   00036E                     IPR12           equ	878	;# 
  4152   00036F                     IPR13           equ	879	;# 
  4153   000370                     IPR14           equ	880	;# 
  4154   000371                     IPR15           equ	881	;# 
  4155   000373                     STATUS_CSHAD    equ	883	;# 
  4156   000374                     WREG_CSHAD      equ	884	;# 
  4157   000375                     BSR_CSHAD       equ	885	;# 
  4158   000376                     SHADCON         equ	886	;# 
  4159   000377                     STATUS_SHAD     equ	887	;# 
  4160   000378                     WREG_SHAD       equ	888	;# 
  4161   000379                     BSR_SHAD        equ	889	;# 
  4162   00037A                     PCLATH_SHAD     equ	890	;# 
  4163   00037B                     PCLATU_SHAD     equ	891	;# 
  4164   00037C                     FSR0SH          equ	892	;# 
  4165   00037C                     FSR0L_SHAD      equ	892	;# 
  4166   00037D                     FSR0H_SHAD      equ	893	;# 
  4167   00037E                     FSR1SH          equ	894	;# 
  4168   00037E                     FSR1L_SHAD      equ	894	;# 
  4169   00037F                     FSR1H_SHAD      equ	895	;# 
  4170   000380                     FSR2SH          equ	896	;# 
  4171   000380                     FSR2L_SHAD      equ	896	;# 
  4172   000381                     FSR2H_SHAD      equ	897	;# 
  4173   000382                     PRODSH          equ	898	;# 
  4174   000382                     PRODL_SHAD      equ	898	;# 
  4175   000383                     PRODH_SHAD      equ	899	;# 
  4176   0003BC                     CWG1CLK         equ	956	;# 
  4177   0003BC                     CWG1CLKCON      equ	956	;# 
  4178   0003BD                     CWG1ISM         equ	957	;# 
  4179   0003BD                     CWG1DAT         equ	957	;# 
  4180   0003BE                     CWG1DBR         equ	958	;# 
  4181   0003BF                     CWG1DBF         equ	959	;# 
  4182   0003C0                     CWG1CON0        equ	960	;# 
  4183   0003C1                     CWG1CON1        equ	961	;# 
  4184   0003C2                     CWG1AS0         equ	962	;# 
  4185   0003C3                     CWG1AS1         equ	963	;# 
  4186   0003C4                     CWG1STR         equ	964	;# 
  4187   0003C5                     CWG2CLK         equ	965	;# 
  4188   0003C5                     CWG2CLKCON      equ	965	;# 
  4189   0003C6                     CWG2ISM         equ	966	;# 
  4190   0003C6                     CWG2DAT         equ	966	;# 
  4191   0003C7                     CWG2DBR         equ	967	;# 
  4192   0003C8                     CWG2DBF         equ	968	;# 
  4193   0003C9                     CWG2CON0        equ	969	;# 
  4194   0003CA                     CWG2CON1        equ	970	;# 
  4195   0003CB                     CWG2AS0         equ	971	;# 
  4196   0003CC                     CWG2AS1         equ	972	;# 
  4197   0003CD                     CWG2STR         equ	973	;# 
  4198   0003CE                     CWG3CLK         equ	974	;# 
  4199   0003CE                     CWG3CLKCON      equ	974	;# 
  4200   0003CF                     CWG3ISM         equ	975	;# 
  4201   0003CF                     CWG3DAT         equ	975	;# 
  4202   0003D0                     CWG3DBR         equ	976	;# 
  4203   0003D1                     CWG3DBF         equ	977	;# 
  4204   0003D2                     CWG3CON0        equ	978	;# 
  4205   0003D3                     CWG3CON1        equ	979	;# 
  4206   0003D4                     CWG3AS0         equ	980	;# 
  4207   0003D5                     CWG3AS1         equ	981	;# 
  4208   0003D6                     CWG3STR         equ	982	;# 
  4209   0003D7                     FVRCON          equ	983	;# 
  4210   0003D8                     ADCPCON         equ	984	;# 
  4211   0003D8                     ADCP            equ	984	;# 
  4212   0003D9                     ADLTH           equ	985	;# 
  4213   0003D9                     ADLTHL          equ	985	;# 
  4214   0003DA                     ADLTHH          equ	986	;# 
  4215   0003DB                     ADUTH           equ	987	;# 
  4216   0003DB                     ADUTHL          equ	987	;# 
  4217   0003DC                     ADUTHH          equ	988	;# 
  4218   0003DD                     ADERR           equ	989	;# 
  4219   0003DD                     ADERRL          equ	989	;# 
  4220   0003DE                     ADERRH          equ	990	;# 
  4221   0003DF                     ADSTPT          equ	991	;# 
  4222   0003DF                     ADSTPTL         equ	991	;# 
  4223   0003E0                     ADSTPTH         equ	992	;# 
  4224   0003E1                     ADFLTR          equ	993	;# 
  4225   0003E1                     ADFLTRL         equ	993	;# 
  4226   0003E2                     ADFLTRH         equ	994	;# 
  4227   0003E3                     ADACC           equ	995	;# 
  4228   0003E3                     ADACCL          equ	995	;# 
  4229   0003E4                     ADACCH          equ	996	;# 
  4230   0003E5                     ADACCU          equ	997	;# 
  4231   0003E6                     ADCNT           equ	998	;# 
  4232   0003E7                     ADRPT           equ	999	;# 
  4233   0003E8                     ADPREV          equ	1000	;# 
  4234   0003E8                     ADPREVL         equ	1000	;# 
  4235   0003E9                     ADPREVH         equ	1001	;# 
  4236   0003EA                     ADRES           equ	1002	;# 
  4237   0003EA                     ADRESL          equ	1002	;# 
  4238   0003EB                     ADRESH          equ	1003	;# 
  4239   0003EC                     ADPCH           equ	1004	;# 
  4240   0003EE                     ADACQ           equ	1006	;# 
  4241   0003EE                     ADACQL          equ	1006	;# 
  4242   0003EF                     ADACQH          equ	1007	;# 
  4243   0003F0                     ADCAP           equ	1008	;# 
  4244   0003F1                     ADPRE           equ	1009	;# 
  4245   0003F1                     ADPREL          equ	1009	;# 
  4246   0003F2                     ADPREH          equ	1010	;# 
  4247   0003F3                     ADCON0          equ	1011	;# 
  4248   0003F4                     ADCON1          equ	1012	;# 
  4249   0003F5                     ADCON2          equ	1013	;# 
  4250   0003F6                     ADCON3          equ	1014	;# 
  4251   0003F7                     ADSTAT          equ	1015	;# 
  4252   0003F8                     ADREF           equ	1016	;# 
  4253   0003F9                     ADACT           equ	1017	;# 
  4254   0003FA                     ADCLK           equ	1018	;# 
  4255   000400                     ANSELA          equ	1024	;# 
  4256   000401                     WPUA            equ	1025	;# 
  4257   000402                     ODCONA          equ	1026	;# 
  4258   000403                     SLRCONA         equ	1027	;# 
  4259   000404                     INLVLA          equ	1028	;# 
  4260   000405                     IOCAP           equ	1029	;# 
  4261   000406                     IOCAN           equ	1030	;# 
  4262   000407                     IOCAF           equ	1031	;# 
  4263   000408                     ANSELB          equ	1032	;# 
  4264   000409                     WPUB            equ	1033	;# 
  4265   00040A                     ODCONB          equ	1034	;# 
  4266   00040B                     SLRCONB         equ	1035	;# 
  4267   00040C                     INLVLB          equ	1036	;# 
  4268   00040D                     IOCBP           equ	1037	;# 
  4269   00040E                     IOCBN           equ	1038	;# 
  4270   00040F                     IOCBF           equ	1039	;# 
  4271   000410                     ANSELC          equ	1040	;# 
  4272   000411                     WPUC            equ	1041	;# 
  4273   000412                     ODCONC          equ	1042	;# 
  4274   000413                     SLRCONC         equ	1043	;# 
  4275   000414                     INLVLC          equ	1044	;# 
  4276   000415                     IOCCP           equ	1045	;# 
  4277   000416                     IOCCN           equ	1046	;# 
  4278   000417                     IOCCF           equ	1047	;# 
  4279   000418                     ANSELD          equ	1048	;# 
  4280   000419                     WPUD            equ	1049	;# 
  4281   00041A                     ODCOND          equ	1050	;# 
  4282   00041B                     SLRCOND         equ	1051	;# 
  4283   00041C                     INLVLD          equ	1052	;# 
  4284   000420                     ANSELE          equ	1056	;# 
  4285   000421                     WPUE            equ	1057	;# 
  4286   000422                     ODCONE          equ	1058	;# 
  4287   000423                     SLRCONE         equ	1059	;# 
  4288   000424                     INLVLE          equ	1060	;# 
  4289   000425                     IOCEP           equ	1061	;# 
  4290   000426                     IOCEN           equ	1062	;# 
  4291   000427                     IOCEF           equ	1063	;# 
  4292   000440                     NCO1ACC         equ	1088	;# 
  4293   000440                     NCO1ACCL        equ	1088	;# 
  4294   000441                     NCO1ACCH        equ	1089	;# 
  4295   000442                     NCO1ACCU        equ	1090	;# 
  4296   000443                     NCO1INC         equ	1091	;# 
  4297   000443                     NCO1INCL        equ	1091	;# 
  4298   000444                     NCO1INCH        equ	1092	;# 
  4299   000445                     NCO1INCU        equ	1093	;# 
  4300   000446                     NCO1CON         equ	1094	;# 
  4301   000447                     NCO1CLK         equ	1095	;# 
  4302   000448                     NCO2ACC         equ	1096	;# 
  4303   000448                     NCO2ACCL        equ	1096	;# 
  4304   000449                     NCO2ACCH        equ	1097	;# 
  4305   00044A                     NCO2ACCU        equ	1098	;# 
  4306   00044B                     NCO2INC         equ	1099	;# 
  4307   00044B                     NCO2INCL        equ	1099	;# 
  4308   00044C                     NCO2INCH        equ	1100	;# 
  4309   00044D                     NCO2INCU        equ	1101	;# 
  4310   00044E                     NCO2CON         equ	1102	;# 
  4311   00044F                     NCO2CLK         equ	1103	;# 
  4312   000450                     NCO3ACC         equ	1104	;# 
  4313   000450                     NCO3ACCL        equ	1104	;# 
  4314   000451                     NCO3ACCH        equ	1105	;# 
  4315   000452                     NCO3ACCU        equ	1106	;# 
  4316   000453                     NCO3INC         equ	1107	;# 
  4317   000453                     NCO3INCL        equ	1107	;# 
  4318   000454                     NCO3INCH        equ	1108	;# 
  4319   000455                     NCO3INCU        equ	1109	;# 
  4320   000456                     NCO3CON         equ	1110	;# 
  4321   000457                     NCO3CLK         equ	1111	;# 
  4322   000459                     IVTLOCK         equ	1113	;# 
  4323   00045A                     IVTAD           equ	1114	;# 
  4324   00045A                     IVTADL          equ	1114	;# 
  4325   00045B                     IVTADH          equ	1115	;# 
  4326   00045C                     IVTADU          equ	1116	;# 
  4327   00045D                     IVTBASE         equ	1117	;# 
  4328   00045D                     IVTBASEL        equ	1117	;# 
  4329   00045E                     IVTBASEH        equ	1118	;# 
  4330   00045F                     IVTBASEU        equ	1119	;# 
  4331   000460                     PWM1ERS         equ	1120	;# 
  4332   000461                     PWM1CLK         equ	1121	;# 
  4333   000462                     PWM1LDS         equ	1122	;# 
  4334   000463                     PWM1PR          equ	1123	;# 
  4335   000463                     PWM1PRL         equ	1123	;# 
  4336   000464                     PWM1PRH         equ	1124	;# 
  4337   000465                     PWM1CPRE        equ	1125	;# 
  4338   000466                     PWM1PIPOS       equ	1126	;# 
  4339   000467                     PWM1GIR         equ	1127	;# 
  4340   000468                     PWM1GIE         equ	1128	;# 
  4341   000469                     PWM1CON         equ	1129	;# 
  4342   00046A                     PWM1S1CFG       equ	1130	;# 
  4343   00046B                     PWM1S1P1        equ	1131	;# 
  4344   00046B                     PWM1S1P1L       equ	1131	;# 
  4345   00046C                     PWM1S1P1H       equ	1132	;# 
  4346   00046D                     PWM1S1P2        equ	1133	;# 
  4347   00046D                     PWM1S1P2L       equ	1133	;# 
  4348   00046E                     PWM1S1P2H       equ	1134	;# 
  4349   00046F                     PWM2ERS         equ	1135	;# 
  4350   000470                     PWM2CLK         equ	1136	;# 
  4351   000471                     PWM2LDS         equ	1137	;# 
  4352   000472                     PWM2PR          equ	1138	;# 
  4353   000472                     PWM2PRL         equ	1138	;# 
  4354   000473                     PWM2PRH         equ	1139	;# 
  4355   000474                     PWM2CPRE        equ	1140	;# 
  4356   000475                     PWM2PIPOS       equ	1141	;# 
  4357   000476                     PWM2GIR         equ	1142	;# 
  4358   000477                     PWM2GIE         equ	1143	;# 
  4359   000478                     PWM2CON         equ	1144	;# 
  4360   000479                     PWM2S1CFG       equ	1145	;# 
  4361   00047A                     PWM2S1P1        equ	1146	;# 
  4362   00047A                     PWM2S1P1L       equ	1146	;# 
  4363   00047B                     PWM2S1P1H       equ	1147	;# 
  4364   00047C                     PWM2S1P2        equ	1148	;# 
  4365   00047C                     PWM2S1P2L       equ	1148	;# 
  4366   00047D                     PWM2S1P2H       equ	1149	;# 
  4367   00047E                     PWM3ERS         equ	1150	;# 
  4368   00047F                     PWM3CLK         equ	1151	;# 
  4369   000480                     PWM3LDS         equ	1152	;# 
  4370   000481                     PWM3PR          equ	1153	;# 
  4371   000481                     PWM3PRL         equ	1153	;# 
  4372   000482                     PWM3PRH         equ	1154	;# 
  4373   000483                     PWM3CPRE        equ	1155	;# 
  4374   000484                     PWM3PIPOS       equ	1156	;# 
  4375   000485                     PWM3GIR         equ	1157	;# 
  4376   000486                     PWM3GIE         equ	1158	;# 
  4377   000487                     PWM3CON         equ	1159	;# 
  4378   000488                     PWM3S1CFG       equ	1160	;# 
  4379   000489                     PWM3S1P1        equ	1161	;# 
  4380   000489                     PWM3S1P1L       equ	1161	;# 
  4381   00048A                     PWM3S1P1H       equ	1162	;# 
  4382   00048B                     PWM3S1P2        equ	1163	;# 
  4383   00048B                     PWM3S1P2L       equ	1163	;# 
  4384   00048C                     PWM3S1P2H       equ	1164	;# 
  4385   00049C                     PWMLOAD         equ	1180	;# 
  4386   00049D                     PWMEN           equ	1181	;# 
  4387   00049E                     PIE0            equ	1182	;# 
  4388   00049F                     PIE1            equ	1183	;# 
  4389   0004A0                     PIE2            equ	1184	;# 
  4390   0004A1                     PIE3            equ	1185	;# 
  4391   0004A2                     PIE4            equ	1186	;# 
  4392   0004A3                     PIE5            equ	1187	;# 
  4393   0004A4                     PIE6            equ	1188	;# 
  4394   0004A5                     PIE7            equ	1189	;# 
  4395   0004A6                     PIE8            equ	1190	;# 
  4396   0004A7                     PIE9            equ	1191	;# 
  4397   0004A8                     PIE10           equ	1192	;# 
  4398   0004A9                     PIE11           equ	1193	;# 
  4399   0004AA                     PIE12           equ	1194	;# 
  4400   0004AB                     PIE13           equ	1195	;# 
  4401   0004AC                     PIE14           equ	1196	;# 
  4402   0004AD                     PIE15           equ	1197	;# 
  4403   0004AE                     PIR0            equ	1198	;# 
  4404   0004AF                     PIR1            equ	1199	;# 
  4405   0004B0                     PIR2            equ	1200	;# 
  4406   0004B1                     PIR3            equ	1201	;# 
  4407   0004B2                     PIR4            equ	1202	;# 
  4408   0004B3                     PIR5            equ	1203	;# 
  4409   0004B4                     PIR6            equ	1204	;# 
  4410   0004B5                     PIR7            equ	1205	;# 
  4411   0004B6                     PIR8            equ	1206	;# 
  4412   0004B7                     PIR9            equ	1207	;# 
  4413   0004B8                     PIR10           equ	1208	;# 
  4414   0004B9                     PIR11           equ	1209	;# 
  4415   0004BA                     PIR12           equ	1210	;# 
  4416   0004BB                     PIR13           equ	1211	;# 
  4417   0004BC                     PIR14           equ	1212	;# 
  4418   0004BD                     PIR15           equ	1213	;# 
  4419   0004BE                     LATA            equ	1214	;# 
  4420   0004BF                     LATB            equ	1215	;# 
  4421   0004C0                     LATC            equ	1216	;# 
  4422   0004C1                     LATD            equ	1217	;# 
  4423   0004C2                     LATE            equ	1218	;# 
  4424   0004C6                     TRISA           equ	1222	;# 
  4425   0004C7                     TRISB           equ	1223	;# 
  4426   0004C8                     TRISC           equ	1224	;# 
  4427   0004C9                     TRISD           equ	1225	;# 
  4428   0004CA                     TRISE           equ	1226	;# 
  4429   0004CE                     PORTA           equ	1230	;# 
  4430   0004CF                     PORTB           equ	1231	;# 
  4431   0004D0                     PORTC           equ	1232	;# 
  4432   0004D1                     PORTD           equ	1233	;# 
  4433   0004D2                     PORTE           equ	1234	;# 
  4434   0004D6                     INTCON0         equ	1238	;# 
  4435   0004D7                     INTCON1         equ	1239	;# 
  4436   0004D8                     STATUS          equ	1240	;# 
  4437   0004D9                     FSR2            equ	1241	;# 
  4438   0004D9                     FSR2L           equ	1241	;# 
  4439   0004DA                     FSR2H           equ	1242	;# 
  4440   0004DB                     PLUSW2          equ	1243	;# 
  4441   0004DC                     PREINC2         equ	1244	;# 
  4442   0004DD                     POSTDEC2        equ	1245	;# 
  4443   0004DE                     POSTINC2        equ	1246	;# 
  4444   0004DF                     INDF2           equ	1247	;# 
  4445   0004E0                     BSR             equ	1248	;# 
  4446   0004E1                     FSR1            equ	1249	;# 
  4447   0004E1                     FSR1L           equ	1249	;# 
  4448   0004E2                     FSR1H           equ	1250	;# 
  4449   0004E3                     PLUSW1          equ	1251	;# 
  4450   0004E4                     PREINC1         equ	1252	;# 
  4451   0004E5                     POSTDEC1        equ	1253	;# 
  4452   0004E6                     POSTINC1        equ	1254	;# 
  4453   0004E7                     INDF1           equ	1255	;# 
  4454   0004E8                     WREG            equ	1256	;# 
  4455   0004E9                     FSR0            equ	1257	;# 
  4456   0004E9                     FSR0L           equ	1257	;# 
  4457   0004EA                     FSR0H           equ	1258	;# 
  4458   0004EB                     PLUSW0          equ	1259	;# 
  4459   0004EC                     PREINC0         equ	1260	;# 
  4460   0004ED                     POSTDEC0        equ	1261	;# 
  4461   0004EE                     POSTINC0        equ	1262	;# 
  4462   0004EF                     INDF0           equ	1263	;# 
  4463   0004F0                     PCON0           equ	1264	;# 
  4464   0004F1                     PCON1           equ	1265	;# 
  4465   0004F2                     CPUDOZE         equ	1266	;# 
  4466   0004F3                     PROD            equ	1267	;# 
  4467   0004F3                     PRODL           equ	1267	;# 
  4468   0004F4                     PRODH           equ	1268	;# 
  4469   0004F5                     TABLAT          equ	1269	;# 
  4470   0004F6                     TBLPTR          equ	1270	;# 
  4471   0004F6                     TBLPTRL         equ	1270	;# 
  4472   0004F7                     TBLPTRH         equ	1271	;# 
  4473   0004F8                     TBLPTRU         equ	1272	;# 
  4474   0004F9                     PCLAT           equ	1273	;# 
  4475   0004F9                     PCL             equ	1273	;# 
  4476   0004FA                     PCLATH          equ	1274	;# 
  4477   0004FB                     PCLATU          equ	1275	;# 
  4478   0004FC                     STKPTR          equ	1276	;# 
  4479   0004FD                     TOS             equ	1277	;# 
  4480   0004FD                     TOSL            equ	1277	;# 
  4481   0004FE                     TOSH            equ	1278	;# 
  4482   0004FF                     TOSU            equ	1279	;# 
  4483                           
  4484                           	psect	idataBANK7
  4485   00018A                     __pidataBANK7:
  4486                           	callstack 0
  4487                           
  4488                           ;initializer for _t_conf
  4489   00018A  58                 	db	low STR_52
  4490   00018B  FF                 	db	high STR_52
  4491   00018C  DF                 	db	low _clk_fs
  4492   00018D  07                 	db	high _clk_fs
  4493   00018E  60                 	db	low STR_53
  4494   00018F  FF                 	db	high STR_53
  4495   000190  DB                 	db	low _bioreq_ubuffadr
  4496   000191  07                 	db	high _bioreq_ubuffadr
  4497                           
  4498                           ;initializer for _start_lba
  4499   000192  FFFF               	dw	65535
  4500   000194  FFFF               	dw	65535
  4501                           
  4502                           ;initializer for _mon16
  4503   000196  E3                 	db	low STR_51
  4504   000197  FE                 	db	high STR_51
  4505                           
  4506                           ;initializer for _mon02
  4507   000198  D8                 	db	low STR_50
  4508   000199  FE                 	db	high STR_50
  4509                           
  4510                           ;initializer for _conf16
  4511   00019A  CD                 	db	low STR_49
  4512   00019B  FE                 	db	high STR_49
  4513                           
  4514                           ;initializer for _conf02
  4515   00019C  C2                 	db	low STR_48
  4516   00019D  FE                 	db	high STR_48
  4517                           
  4518                           ;initializer for _board_name
  4519   00019E  F7                 	db	low STR_47
  4520   00019F  F4                 	db	high STR_47
  4521                           
  4522                           ;initializer for _mezID
  4523   0001A0  50                 	db	low STR_46
  4524   0001A1  FF                 	db	high STR_46
  4525                           
  4526                           ;initializer for _SPI_SD_ctx
  4527   0001A2  CF                 	db	low _pic18f47q43_spi_ctx
  4528   0001A3  08                 	db	high _pic18f47q43_spi_ctx
  4529                           
  4530                           	psect	idataBANK8
  4531   00024C                     __pidataBANK8:
  4532                           	callstack 0
  4533                           
  4534                           ;initializer for _strin_func
  4535   00024C  12                 	db	low _get_str
  4536   00024D  EE                 	db	high _get_str
  4537   00024E  01                 	db	low (_get_str shr (0+16))
  4538   00024F  E0                 	db	low _str_inf
  4539   000250  A8                 	db	high _str_inf
  4540   000251  01                 	db	low (_str_inf shr (0+16))
  4541                           
  4542                           ;initializer for _get_char
  4543   000252  4C                 	db	low _u_getch
  4544   000253  F5                 	db	high _u_getch
  4545   000254  01                 	db	low (_u_getch shr (0+16))
  4546   000255  A6                 	db	low _in_file
  4547   000256  BF                 	db	high _in_file
  4548   000257  01                 	db	low (_in_file shr (0+16))
  4549                           
  4550                           	psect	idataBANK9
  4551   01F05E                     __pidataBANK9:
  4552                           	callstack 0
  4553                           
  4554                           ;initializer for _cmd
  4555   01F05E  F6                 	db	low STR_54
  4556   01F05F  FF                 	db	high STR_54
  4557   01F060  74                 	db	low _scan_files
  4558   01F061  98                 	db	high _scan_files
  4559   01F062  01                 	db	low (_scan_files shr (0+16))
  4560   01F063  E9                 	db	low STR_55
  4561   01F064  FF                 	db	high STR_55
  4562   01F065  06                 	db	low _scan_files1
  4563   01F066  96                 	db	high _scan_files1
  4564   01F067  01                 	db	low (_scan_files1 shr (0+16))
  4565   01F068  F3                 	db	low STR_56
  4566   01F069  FF                 	db	high STR_56
  4567   01F06A  3E                 	db	low _change_directory
  4568   01F06B  02                 	db	high _change_directory
  4569   01F06C  00                 	db	low (_change_directory shr (0+16))
  4570   01F06D  B2                 	db	low STR_57
  4571   01F06E  FF                 	db	high STR_57
  4572   01F06F  78                 	db	low _load_file
  4573   01F070  ED                 	db	high _load_file
  4574   01F071  01                 	db	low (_load_file shr (0+16))
  4575   01F072  77                 	db	low STR_58
  4576   01F073  FF                 	db	high STR_58
  4577   01F074  AC                 	db	low _restart_prog
  4578   01F075  E9                 	db	high _restart_prog
  4579   01F076  01                 	db	low (_restart_prog shr (0+16))
  4580   01F077  7E                 	db	low STR_59
  4581   01F078  FF                 	db	high STR_59
  4582   01F079  54                 	db	low _wstart_prog
  4583   01F07A  EA                 	db	high _wstart_prog
  4584   01F07B  01                 	db	low (_wstart_prog shr (0+16))
  4585   01F07C  B7                 	db	low STR_60
  4586   01F07D  FF                 	db	high STR_60
  4587   01F07E  2E                 	db	low _return_cpu
  4588   01F07F  02                 	db	high _return_cpu
  4589   01F080  00                 	db	low (_return_cpu shr (0+16))
  4590   01F081  E5                 	db	low STR_61
  4591   01F082  FF                 	db	high STR_61
  4592   01F083  B8                 	db	low _print_reg
  4593   01F084  AF                 	db	high _print_reg
  4594   01F085  01                 	db	low (_print_reg shr (0+16))
  4595   01F086  68                 	db	low STR_62
  4596   01F087  FF                 	db	high STR_62
  4597   01F088  3C                 	db	low _mon_prog
  4598   01F089  D7                 	db	high _mon_prog
  4599   01F08A  01                 	db	low (_mon_prog shr (0+16))
  4600   01F08B  97                 	db	low STR_63
  4601   01F08C  FF                 	db	high STR_63
  4602   01F08D  70                 	db	low _mem_dump
  4603   01F08E  F3                 	db	high _mem_dump
  4604   01F08F  01                 	db	low (_mem_dump shr (0+16))
  4605   01F090  C1                 	db	low STR_64
  4606   01F091  FF                 	db	high STR_64
  4607   01F092  D4                 	db	low _see_file
  4608   01F093  53                 	db	high _see_file
  4609   01F094  01                 	db	low (_see_file shr (0+16))
  4610   01F095  91                 	db	low STR_65
  4611   01F096  FF                 	db	high STR_65
  4612   01F097  42                 	db	low _flash_apl
  4613   01F098  FC                 	db	high _flash_apl
  4614   01F099  01                 	db	low (_flash_apl shr (0+16))
  4615   01F09A  BC                 	db	low STR_66
  4616   01F09B  FF                 	db	high STR_66
  4617   01F09C  D4                 	db	low _print_com
  4618   01F09D  E4                 	db	high _print_com
  4619   01F09E  01                 	db	low (_print_com shr (0+16))
  4620   01F09F  FC                 	db	low STR_67
  4621   01F0A0  FF                 	db	high STR_67
  4622   01F0A1  D4                 	db	low _print_com
  4623   01F0A2  E4                 	db	high _print_com
  4624   01F0A3  01                 	db	low (_print_com shr (0+16))
  4625   01F0A4  7B                 	db	low (STR_71+22)
  4626   01F0A5  FB                 	db	high (STR_71+22)
  4627   01F0A6  6E                 	db	low _boot_file
  4628   01F0A7  7C                 	db	high _boot_file
  4629   01F0A8  01                 	db	low (_boot_file shr (0+16))
  4630                           
  4631                           ;initializer for _cpm_drives
  4632   01F0A9  0080               	dw	128
  4633   01F0AB  00                 	db	0
  4634   01F0AC  00                 	db	0
  4635   01F0AD  0080               	dw	128
  4636   01F0AF  00                 	db	0
  4637   01F0B0  00                 	db	0
  4638   01F0B1  0080               	dw	128
  4639   01F0B3  00                 	db	0
  4640   01F0B4  00                 	db	0
  4641   01F0B5  0080               	dw	128
  4642   01F0B7  00                 	db	0
  4643   01F0B8  00                 	db	0
  4644   01F0B9  0000               	dw	0
  4645   01F0BB  00                 	db	0
  4646   01F0BC  00                 	db	0
  4647   01F0BD  0000               	dw	0
  4648   01F0BF  00                 	db	0
  4649   01F0C0  00                 	db	0
  4650   01F0C1  0000               	dw	0
  4651   01F0C3  00                 	db	0
  4652   01F0C4  00                 	db	0
  4653   01F0C5  0000               	dw	0
  4654   01F0C7  00                 	db	0
  4655   01F0C8  00                 	db	0
  4656   01F0C9  0000               	dw	0
  4657   01F0CB  00                 	db	0
  4658   01F0CC  00                 	db	0
  4659   01F0CD  0000               	dw	0
  4660   01F0CF  00                 	db	0
  4661   01F0D0  00                 	db	0
  4662   01F0D1  0000               	dw	0
  4663   01F0D3  00                 	db	0
  4664   01F0D4  00                 	db	0
  4665   01F0D5  0000               	dw	0
  4666   01F0D7  00                 	db	0
  4667   01F0D8  00                 	db	0
  4668   01F0D9  0000               	dw	0
  4669   01F0DB  00                 	db	0
  4670   01F0DC  00                 	db	0
  4671   01F0DD  0000               	dw	0
  4672   01F0DF  00                 	db	0
  4673   01F0E0  00                 	db	0
  4674   01F0E1  0000               	dw	0
  4675   01F0E3  00                 	db	0
  4676   01F0E4  00                 	db	0
  4677   01F0E5  4064               	dw	16484
  4678   01F0E7  00                 	db	0
  4679   01F0E8  00                 	db	0
  4680                           
  4681                           	psect	mediumconst
  4682   00F200                     __pmediumconst:
  4683                           	callstack 0
  4684   00F200  00                 	db	0
  4685   00F201                     _DbcTbl:
  4686                           	callstack 0
  4687   00F201  81                 	db	129
  4688   00F202  9F                 	db	159
  4689   00F203  E0                 	db	224
  4690   00F204  FC                 	db	252
  4691   00F205  40                 	db	64
  4692   00F206  7E                 	db	126
  4693   00F207  80                 	db	128
  4694   00F208  FC                 	db	252
  4695   00F209  00                 	db	0
  4696   00F20A  00                 	db	0
  4697   00F20B                     __end_of_DbcTbl:
  4698                           	callstack 0
  4699   00F20B  0000               	dw	0
  4700   00F20D                     __end_of_debug_flags@diskio$F4060:
  4701                           	callstack 0
  4702   00F20D  0000               	dw	0
  4703   00F20F                     __end_of_debug_flags:
  4704                           	callstack 0
  4705   00F20F                     _rom:
  4706                           	callstack 0
  4707   00F20F  38                 	db	56
  4708   00F210  FB                 	db	251
  4709   00F211  DB                 	db	219
  4710   00F212  FF                 	db	255
  4711   00F213  FF                 	db	255
  4712   00F214  FF                 	db	255
  4713   00F215  FF                 	db	255
  4714   00F216  FF                 	db	255
  4715   00F217  FF                 	db	255
  4716   00F218  FF                 	db	255
  4717   00F219  F2                 	db	242
  4718   00F21A  FF                 	db	255
  4719   00F21B  F0                 	db	240
  4720   00F21C  FF                 	db	255
  4721   00F21D  F2                 	db	242
  4722   00F21E  FF                 	db	255
  4723   00F21F                     __end_of_rom:
  4724                           	callstack 0
  4725   000080                     _SPI1RXB        set	128
  4726   000081                     _SPI1TXB        set	129
  4727   000082                     _SPI1TCNTL      set	130
  4728   000083                     _SPI1TCNTH      set	131
  4729   000089                     _SPI1BAUD       set	137
  4730   00008C                     _SPI1CLK        set	140
  4731   000086                     _SPI1CON2bits   set	134
  4732   000085                     _SPI1CON1bits   set	133
  4733   00008B                     _SPI1INTE       set	139
  4734   000088                     _SPI1TWIDTH     set	136
  4735   000084                     _SPI1CON0bits   set	132
  4736   000085                     _SPI1CON1       set	133
  4737   000084                     _SPI1CON0       set	132
  4738   0000D6                     _CLCnCON        set	214
  4739   0000D7                     _CLCnPOL        set	215
  4740   0000DF                     _CLCnGLS3       set	223
  4741   0000DE                     _CLCnGLS2       set	222
  4742   0000DD                     _CLCnGLS1       set	221
  4743   0000DC                     _CLCnGLS0       set	220
  4744   0000DB                     _CLCnSEL3       set	219
  4745   0000DA                     _CLCnSEL2       set	218
  4746   0000D9                     _CLCnSEL1       set	217
  4747   0000D8                     _CLCnSEL0       set	216
  4748   0000B1                     _OSCFRQ         set	177
  4749   0000D5                     _CLCSELECT      set	213
  4750   00059D                     _MFOEN          set	1437
  4751   0006BA                     _G3POL          set	1722
  4752   0006A7                     _CLC8OUT        set	1703
  4753   0006B9                     _G2POL          set	1721
  4754   0002D4                     _U3BRG          set	724
  4755   00026B                     _SPI1SDIPPS     set	619
  4756   00026A                     _SPI1SCKPPS     set	618
  4757   000209                     _RB0PPS         set	521
  4758   00020A                     _RB1PPS         set	522
  4759   000203                     _RA2PPS         set	515
  4760   000201                     _RA0PPS         set	513
  4761   000204                     _RA3PPS         set	516
  4762   000207                     _RA6PPS         set	519
  4763   000276                     _U3RXPPS        set	630
  4764   0002C9                     _U3TXB          set	713
  4765   0002C7                     _U3RXB          set	711
  4766   001697                     _U3ON           set	5783
  4767   00168D                     _U3TXEN         set	5773
  4768   00168C                     _U3RXEN         set	5772
  4769   000318                     _TMR0L          set	792
  4770   000319                     _TMR0H          set	793
  4771   00031B                     _T0CON1         set	795
  4772   00031A                     _T0CON0         set	794
  4773   00045D                     _IVTBASE        set	1117
  4774   000443                     _NCO1INC        set	1091
  4775   000459                     _IVTLOCKbits    set	1113
  4776   000459                     _IVTLOCK        set	1113
  4777   000447                     _NCO1CLK        set	1095
  4778   00040B                     _SLRCONBbits    set	1035
  4779   000409                     _WPUB           set	1033
  4780   000419                     _WPUD           set	1049
  4781   000411                     _WPUC           set	1041
  4782   000418                     _ANSELD         set	1048
  4783   000410                     _ANSELC         set	1040
  4784   000408                     _ANSELB         set	1032
  4785   000400                     _ANSELA         set	1024
  4786   002237                     _NCO1EN         set	8759
  4787   002235                     _NCO1OUT        set	8757
  4788   002230                     _NCO1PFM        set	8752
  4789   00210A                     _WPUE2          set	8458
  4790   00200C                     _WPUA4          set	8204
  4791   002009                     _WPUA1          set	8201
  4792   00200D                     _WPUA5          set	8205
  4793   00200A                     _WPUA2          set	8202
  4794   00200B                     _WPUA3          set	8203
  4795   002008                     _WPUA0          set	8200
  4796   002109                     _WPUE1          set	8457
  4797   002108                     _WPUE0          set	8456
  4798   002102                     _ANSELE2        set	8450
  4799   002101                     _ANSELE1        set	8449
  4800   002100                     _ANSELE0        set	8448
  4801   0004CF                     _PORTB          set	1231
  4802   0004C7                     _TRISB          set	1223
  4803   0004BF                     _LATB           set	1215
  4804   0004C9                     _TRISD          set	1225
  4805   0004C1                     _LATD           set	1217
  4806   0004C8                     _TRISC          set	1224
  4807   0004C0                     _LATC           set	1216
  4808   002588                     _SPI1RXIF       set	9608
  4809   00263A                     _TRISB2         set	9786
  4810   002639                     _TRISB1         set	9785
  4811   002638                     _TRISB0         set	9784
  4812   002675                     _RA5            set	9845
  4813   0026B7                     _GIE            set	9911
  4814   002636                     _TRISA6         set	9782
  4815   0025F6                     _LATA6          set	9718
  4816   002637                     _TRISA7         set	9783
  4817   002652                     _TRISE2         set	9810
  4818   002612                     _LATE2          set	9746
  4819   002634                     _TRISA4         set	9780
  4820   0025F4                     _LATA4          set	9716
  4821   002631                     _TRISA1         set	9777
  4822   0025F1                     _LATA1          set	9713
  4823   002635                     _TRISA5         set	9781
  4824   0025F2                     _LATA2          set	9714
  4825   002632                     _TRISA2         set	9778
  4826   002633                     _TRISA3         set	9779
  4827   0025F3                     _LATA3          set	9715
  4828   002630                     _TRISA0         set	9776
  4829   002651                     _TRISE1         set	9809
  4830   002611                     _LATE1          set	9745
  4831   002650                     _TRISE0         set	9808
  4832   002610                     _LATE0          set	9744
  4833   0025F0                     _LATA0          set	9712
  4834   002538                     _U3RXIE         set	9528
  4835   0025B9                     _U3TXIF         set	9657
  4836   00250F                     _TMR0IE         set	9487
  4837   00258F                     _TMR0IF         set	9615
  4838   00F21F                     STR_113:
  4839                           
  4840                           ; BSR set to: 7
  4841   00F21F  41                 	db	65	;'A'
  4842   00F220  3D                 	db	61	;'='
  4843   00F221  24                 	db	36
  4844   00F222  25                 	db	37
  4845   00F223  30                 	db	48	;'0'
  4846   00F224  32                 	db	50	;'2'
  4847   00F225  58                 	db	88	;'X'
  4848   00F226  20                 	db	32
  4849   00F227  58                 	db	88	;'X'
  4850   00F228  3D                 	db	61	;'='
  4851   00F229  24                 	db	36
  4852   00F22A  25                 	db	37
  4853   00F22B  30                 	db	48	;'0'
  4854   00F22C  32                 	db	50	;'2'
  4855   00F22D  58                 	db	88	;'X'
  4856   00F22E  20                 	db	32
  4857   00F22F  59                 	db	89	;'Y'
  4858   00F230  3D                 	db	61	;'='
  4859   00F231  24                 	db	36
  4860   00F232  25                 	db	37
  4861   00F233  30                 	db	48	;'0'
  4862   00F234  32                 	db	50	;'2'
  4863   00F235  58                 	db	88	;'X'
  4864   00F236  20                 	db	32
  4865   00F237  53                 	db	83	;'S'
  4866   00F238  50                 	db	80	;'P'
  4867   00F239  3D                 	db	61	;'='
  4868   00F23A  24                 	db	36
  4869   00F23B  30                 	db	48	;'0'
  4870   00F23C  31                 	db	49	;'1'
  4871   00F23D  25                 	db	37
  4872   00F23E  30                 	db	48	;'0'
  4873   00F23F  32                 	db	50	;'2'
  4874   00F240  58                 	db	88	;'X'
  4875   00F241  20                 	db	32
  4876   00F242  50                 	db	80	;'P'
  4877   00F243  43                 	db	67	;'C'
  4878   00F244  3D                 	db	61	;'='
  4879   00F245  24                 	db	36
  4880   00F246  25                 	db	37
  4881   00F247  30                 	db	48	;'0'
  4882   00F248  34                 	db	52	;'4'
  4883   00F249  58                 	db	88	;'X'
  4884   00F24A  20                 	db	32
  4885   00F24B  50                 	db	80	;'P'
  4886   00F24C  53                 	db	83	;'S'
  4887   00F24D  52                 	db	82	;'R'
  4888   00F24E  3D                 	db	61	;'='
  4889   00F24F  24                 	db	36
  4890   00F250  25                 	db	37
  4891   00F251  30                 	db	48	;'0'
  4892   00F252  32                 	db	50	;'2'
  4893   00F253  58                 	db	88	;'X'
  4894   00F254  0D                 	db	13
  4895   00F255  0A                 	db	10
  4896   00F256  00                 	db	0
  4897   00F257                     STR_27:
  4898                           
  4899                           ; BSR set to: 7
  4900   00F257  53                 	db	83	;'S'
  4901   00F258  44                 	db	68	;'D'
  4902   00F259  20                 	db	32
  4903   00F25A  43                 	db	67	;'C'
  4904   00F25B  61                 	db	97	;'a'
  4905   00F25C  72                 	db	114	;'r'
  4906   00F25D  64                 	db	100	;'d'
  4907   00F25E  3A                 	db	58	;':'
  4908   00F25F  20                 	db	32
  4909   00F260  72                 	db	114	;'r'
  4910   00F261  65                 	db	101	;'e'
  4911   00F262  61                 	db	97	;'a'
  4912   00F263  64                 	db	100	;'d'
  4913   00F264  35                 	db	53	;'5'
  4914   00F265  31                 	db	49	;'1'
  4915   00F266  32                 	db	50	;'2'
  4916   00F267  3A                 	db	58	;':'
  4917   00F268  20                 	db	32
  4918   00F269  43                 	db	67	;'C'
  4919   00F26A  52                 	db	82	;'R'
  4920   00F26B  43                 	db	67	;'C'
  4921   00F26C  20                 	db	32
  4922   00F26D  65                 	db	101	;'e'
  4923   00F26E  72                 	db	114	;'r'
  4924   00F26F  72                 	db	114	;'r'
  4925   00F270  6F                 	db	111	;'o'
  4926   00F271  72                 	db	114	;'r'
  4927   00F272  20                 	db	32
  4928   00F273  28                 	db	40
  4929   00F274  25                 	db	37
  4930   00F275  30                 	db	48	;'0'
  4931   00F276  34                 	db	52	;'4'
  4932   00F277  78                 	db	120	;'x'
  4933   00F278  20                 	db	32
  4934   00F279  21                 	db	33
  4935   00F27A  3D                 	db	61	;'='
  4936   00F27B  20                 	db	32
  4937   00F27C  25                 	db	37
  4938   00F27D  30                 	db	48	;'0'
  4939   00F27E  34                 	db	52	;'4'
  4940   00F27F  78                 	db	120	;'x'
  4941   00F280  2C                 	db	44
  4942   00F281  20                 	db	32
  4943   00F282  72                 	db	114	;'r'
  4944   00F283  65                 	db	101	;'e'
  4945   00F284  74                 	db	116	;'t'
  4946   00F285  72                 	db	114	;'r'
  4947   00F286  79                 	db	121	;'y'
  4948   00F287  3D                 	db	61	;'='
  4949   00F288  25                 	db	37
  4950   00F289  64                 	db	100	;'d'
  4951   00F28A  29                 	db	41
  4952   00F28B  0A                 	db	10
  4953   00F28C  0D                 	db	13
  4954   00F28D  00                 	db	0
  4955   00F28E                     STR_111:
  4956                           
  4957                           ; BSR set to: 7
  4958   00F28E  41                 	db	65	;'A'
  4959   00F28F  3D                 	db	61	;'='
  4960   00F290  24                 	db	36
  4961   00F291  25                 	db	37
  4962   00F292  30                 	db	48	;'0'
  4963   00F293  34                 	db	52	;'4'
  4964   00F294  58                 	db	88	;'X'
  4965   00F295  20                 	db	32
  4966   00F296  58                 	db	88	;'X'
  4967   00F297  3D                 	db	61	;'='
  4968   00F298  24                 	db	36
  4969   00F299  25                 	db	37
  4970   00F29A  30                 	db	48	;'0'
  4971   00F29B  34                 	db	52	;'4'
  4972   00F29C  58                 	db	88	;'X'
  4973   00F29D  20                 	db	32
  4974   00F29E  59                 	db	89	;'Y'
  4975   00F29F  3D                 	db	61	;'='
  4976   00F2A0  24                 	db	36
  4977   00F2A1  25                 	db	37
  4978   00F2A2  30                 	db	48	;'0'
  4979   00F2A3  34                 	db	52	;'4'
  4980   00F2A4  58                 	db	88	;'X'
  4981   00F2A5  20                 	db	32
  4982   00F2A6  53                 	db	83	;'S'
  4983   00F2A7  50                 	db	80	;'P'
  4984   00F2A8  3D                 	db	61	;'='
  4985   00F2A9  24                 	db	36
  4986   00F2AA  25                 	db	37
  4987   00F2AB  30                 	db	48	;'0'
  4988   00F2AC  34                 	db	52	;'4'
  4989   00F2AD  58                 	db	88	;'X'
  4990   00F2AE  20                 	db	32
  4991   00F2AF  50                 	db	80	;'P'
  4992   00F2B0  43                 	db	67	;'C'
  4993   00F2B1  3D                 	db	61	;'='
  4994   00F2B2  24                 	db	36
  4995   00F2B3  25                 	db	37
  4996   00F2B4  30                 	db	48	;'0'
  4997   00F2B5  34                 	db	52	;'4'
  4998   00F2B6  58                 	db	88	;'X'
  4999   00F2B7  20                 	db	32
  5000   00F2B8  50                 	db	80	;'P'
  5001   00F2B9  53                 	db	83	;'S'
  5002   00F2BA  52                 	db	82	;'R'
  5003   00F2BB  3D                 	db	61	;'='
  5004   00F2BC  24                 	db	36
  5005   00F2BD  25                 	db	37
  5006   00F2BE  30                 	db	48	;'0'
  5007   00F2BF  32                 	db	50	;'2'
  5008   00F2C0  58                 	db	88	;'X'
  5009   00F2C1  0D                 	db	13
  5010   00F2C2  0A                 	db	10
  5011   00F2C3  00                 	db	0
  5012   00F2C4                     
  5013                           ; BSR set to: 7
  5014   00F2C4  64                 	db	100	;'d'
  5015   00F2C5  69                 	db	105	;'i'
  5016   00F2C6  73                 	db	115	;'s'
  5017   00F2C7  6B                 	db	107	;'k'
  5018   00F2C8  5F                 	db	95	;'_'
  5019   00F2C9  69                 	db	105	;'i'
  5020   00F2CA  6F                 	db	111	;'o'
  5021   00F2CB  63                 	db	99	;'c'
  5022   00F2CC  74                 	db	116	;'t'
  5023   00F2CD  6C                 	db	108	;'l'
  5024   00F2CE  3A                 	db	58	;':'
  5025   00F2CF  20                 	db	32
  5026   00F2D0  70                 	db	112	;'p'
  5027   00F2D1  64                 	db	100	;'d'
  5028   00F2D2  72                 	db	114	;'r'
  5029   00F2D3  76                 	db	118	;'v'
  5030   00F2D4  3D                 	db	61	;'='
  5031   00F2D5  25                 	db	37
  5032   00F2D6  64                 	db	100	;'d'
  5033   00F2D7  2C                 	db	44
  5034   00F2D8  20                 	db	32
  5035   00F2D9  63                 	db	99	;'c'
  5036   00F2DA  6D                 	db	109	;'m'
  5037   00F2DB  64                 	db	100	;'d'
  5038   00F2DC  3D                 	db	61	;'='
  5039   00F2DD  25                 	db	37
  5040   00F2DE  64                 	db	100	;'d'
  5041   00F2DF  2C                 	db	44
  5042   00F2E0  20                 	db	32
  5043   00F2E1  62                 	db	98	;'b'
  5044   00F2E2  75                 	db	117	;'u'
  5045   00F2E3  66                 	db	102	;'f'
  5046   00F2E4  66                 	db	102	;'f'
  5047   00F2E5  3D                 	db	61	;'='
  5048   00F2E6  30                 	db	48	;'0'
  5049   00F2E7  78                 	db	120	;'x'
  5050   00F2E8  25                 	db	37
  5051   00F2E9  6C                 	db	108	;'l'
  5052   00F2EA  78                 	db	120	;'x'
  5053   00F2EB  3A                 	db	58	;':'
  5054   00F2EC  20                 	db	32
  5055   00F2ED  72                 	db	114	;'r'
  5056   00F2EE  65                 	db	101	;'e'
  5057   00F2EF  73                 	db	115	;'s'
  5058   00F2F0  3D                 	db	61	;'='
  5059   00F2F1  25                 	db	37
  5060   00F2F2  64                 	db	100	;'d'
  5061   00F2F3  0A                 	db	10
  5062   00F2F4  0D                 	db	13
  5063   00F2F5  00                 	db	0
  5064   00F2F6                     
  5065                           ; BSR set to: 7
  5066   00F2F6  53                 	db	83	;'S'
  5067   00F2F7  44                 	db	68	;'D'
  5068   00F2F8  20                 	db	32
  5069   00F2F9  43                 	db	67	;'C'
  5070   00F2FA  61                 	db	97	;'a'
  5071   00F2FB  72                 	db	114	;'r'
  5072   00F2FC  64                 	db	100	;'d'
  5073   00F2FD  3A                 	db	58	;':'
  5074   00F2FE  20                 	db	32
  5075   00F2FF  20                 	db	32
  5076   00F300  72                 	db	114	;'r'
  5077   00F301  65                 	db	101	;'e'
  5078   00F302  61                 	db	97	;'a'
  5079   00F303  64                 	db	100	;'d'
  5080   00F304  35                 	db	53	;'5'
  5081   00F305  31                 	db	49	;'1'
  5082   00F306  32                 	db	50	;'2'
  5083   00F307  3A                 	db	58	;':'
  5084   00F308  20                 	db	32
  5085   00F309  61                 	db	97	;'a'
  5086   00F30A  64                 	db	100	;'d'
  5087   00F30B  64                 	db	100	;'d'
  5088   00F30C  72                 	db	114	;'r'
  5089   00F30D  3D                 	db	61	;'='
  5090   00F30E  25                 	db	37
  5091   00F30F  38                 	db	56	;'8'
  5092   00F310  6C                 	db	108	;'l'
  5093   00F311  64                 	db	100	;'d'
  5094   00F312  2C                 	db	44
  5095   00F313  20                 	db	32
  5096   00F314  6F                 	db	111	;'o'
  5097   00F315  66                 	db	102	;'f'
  5098   00F316  66                 	db	102	;'f'
  5099   00F317  73                 	db	115	;'s'
  5100   00F318  3D                 	db	61	;'='
  5101   00F319  25                 	db	37
  5102   00F31A  64                 	db	100	;'d'
  5103   00F31B  2C                 	db	44
  5104   00F31C  20                 	db	32
  5105   00F31D  63                 	db	99	;'c'
  5106   00F31E  6F                 	db	111	;'o'
  5107   00F31F  75                 	db	117	;'u'
  5108   00F320  6E                 	db	110	;'n'
  5109   00F321  74                 	db	116	;'t'
  5110   00F322  3D                 	db	61	;'='
  5111   00F323  25                 	db	37
  5112   00F324  64                 	db	100	;'d'
  5113   00F325  0A                 	db	10
  5114   00F326  0D                 	db	13
  5115   00F327  00                 	db	0
  5116   00F328                     
  5117                           ; BSR set to: 7
  5118   00F328  53                 	db	83	;'S'
  5119   00F329  44                 	db	68	;'D'
  5120   00F32A  20                 	db	32
  5121   00F32B  43                 	db	67	;'C'
  5122   00F32C  61                 	db	97	;'a'
  5123   00F32D  72                 	db	114	;'r'
  5124   00F32E  64                 	db	100	;'d'
  5125   00F32F  3A                 	db	58	;':'
  5126   00F330  20                 	db	32
  5127   00F331  77                 	db	119	;'w'
  5128   00F332  72                 	db	114	;'r'
  5129   00F333  69                 	db	105	;'i'
  5130   00F334  74                 	db	116	;'t'
  5131   00F335  65                 	db	101	;'e'
  5132   00F336  35                 	db	53	;'5'
  5133   00F337  31                 	db	49	;'1'
  5134   00F338  32                 	db	50	;'2'
  5135   00F339  3A                 	db	58	;':'
  5136   00F33A  20                 	db	32
  5137   00F33B  61                 	db	97	;'a'
  5138   00F33C  64                 	db	100	;'d'
  5139   00F33D  64                 	db	100	;'d'
  5140   00F33E  72                 	db	114	;'r'
  5141   00F33F  3D                 	db	61	;'='
  5142   00F340  25                 	db	37
  5143   00F341  38                 	db	56	;'8'
  5144   00F342  6C                 	db	108	;'l'
  5145   00F343  64                 	db	100	;'d'
  5146   00F344  2C                 	db	44
  5147   00F345  20                 	db	32
  5148   00F346  6F                 	db	111	;'o'
  5149   00F347  66                 	db	102	;'f'
  5150   00F348  66                 	db	102	;'f'
  5151   00F349  73                 	db	115	;'s'
  5152   00F34A  3D                 	db	61	;'='
  5153   00F34B  25                 	db	37
  5154   00F34C  64                 	db	100	;'d'
  5155   00F34D  2C                 	db	44
  5156   00F34E  20                 	db	32
  5157   00F34F  63                 	db	99	;'c'
  5158   00F350  6F                 	db	111	;'o'
  5159   00F351  75                 	db	117	;'u'
  5160   00F352  6E                 	db	110	;'n'
  5161   00F353  74                 	db	116	;'t'
  5162   00F354  3D                 	db	61	;'='
  5163   00F355  25                 	db	37
  5164   00F356  64                 	db	100	;'d'
  5165   00F357  0A                 	db	10
  5166   00F358  0D                 	db	13
  5167   00F359  00                 	db	0
  5168   00F35A                     
  5169                           ; BSR set to: 7
  5170   00F35A  53                 	db	83	;'S'
  5171   00F35B  44                 	db	68	;'D'
  5172   00F35C  20                 	db	32
  5173   00F35D  43                 	db	67	;'C'
  5174   00F35E  61                 	db	97	;'a'
  5175   00F35F  72                 	db	114	;'r'
  5176   00F360  64                 	db	100	;'d'
  5177   00F361  3A                 	db	58	;':'
  5178   00F362  20                 	db	32
  5179   00F363  77                 	db	119	;'w'
  5180   00F364  72                 	db	114	;'r'
  5181   00F365  69                 	db	105	;'i'
  5182   00F366  74                 	db	116	;'t'
  5183   00F367  65                 	db	101	;'e'
  5184   00F368  35                 	db	53	;'5'
  5185   00F369  31                 	db	49	;'1'
  5186   00F36A  32                 	db	50	;'2'
  5187   00F36B  3A                 	db	58	;':'
  5188   00F36C  20                 	db	32
  5189   00F36D  66                 	db	102	;'f'
  5190   00F36E  61                 	db	97	;'a'
  5191   00F36F  69                 	db	105	;'i'
  5192   00F370  6C                 	db	108	;'l'
  5193   00F371  65                 	db	101	;'e'
  5194   00F372  64                 	db	100	;'d'
  5195   00F373  20                 	db	32
  5196   00F374  74                 	db	116	;'t'
  5197   00F375  6F                 	db	111	;'o'
  5198   00F376  20                 	db	32
  5199   00F377  67                 	db	103	;'g'
  5200   00F378  65                 	db	101	;'e'
  5201   00F379  74                 	db	116	;'t'
  5202   00F37A  20                 	db	32
  5203   00F37B  74                 	db	116	;'t'
  5204   00F37C  6F                 	db	111	;'o'
  5205   00F37D  6B                 	db	107	;'k'
  5206   00F37E  65                 	db	101	;'e'
  5207   00F37F  6E                 	db	110	;'n'
  5208   00F380  2C                 	db	44
  5209   00F381  20                 	db	32
  5210   00F382  74                 	db	116	;'t'
  5211   00F383  69                 	db	105	;'i'
  5212   00F384  6D                 	db	109	;'m'
  5213   00F385  65                 	db	101	;'e'
  5214   00F386  6F                 	db	111	;'o'
  5215   00F387  75                 	db	117	;'u'
  5216   00F388  74                 	db	116	;'t'
  5217   00F389  0A                 	db	10
  5218   00F38A  0D                 	db	13
  5219   00F38B  00                 	db	0
  5220   00F38C                     STR_114:
  5221                           
  5222                           ; BSR set to: 7
  5223   00F38C  0D                 	db	13
  5224   00F38D  0A                 	db	10
  5225   00F38E  3C                 	db	60	;'<'
  5226   00F38F  3C                 	db	60	;'<'
  5227   00F390  20                 	db	32
  5228   00F391  4D                 	db	77	;'M'
  5229   00F392  45                 	db	69	;'E'
  5230   00F393  5A                 	db	90	;'Z'
  5231   00F394  57                 	db	87	;'W'
  5232   00F395  36                 	db	54	;'6'
  5233   00F396  35                 	db	53	;'5'
  5234   00F397  43                 	db	67	;'C'
  5235   00F398  5F                 	db	95	;'_'
  5236   00F399  52                 	db	82	;'R'
  5237   00F39A  41                 	db	65	;'A'
  5238   00F39B  4D                 	db	77	;'M'
  5239   00F39C  20                 	db	32
  5240   00F39D  46                 	db	70	;'F'
  5241   00F39E  69                 	db	105	;'i'
  5242   00F39F  72                 	db	114	;'r'
  5243   00F3A0  6D                 	db	109	;'m'
  5244   00F3A1  77                 	db	119	;'w'
  5245   00F3A2  61                 	db	97	;'a'
  5246   00F3A3  72                 	db	114	;'r'
  5247   00F3A4  65                 	db	101	;'e'
  5248   00F3A5  20                 	db	32
  5249   00F3A6  42                 	db	66	;'B'
  5250   00F3A7  75                 	db	117	;'u'
  5251   00F3A8  69                 	db	105	;'i'
  5252   00F3A9  6C                 	db	108	;'l'
  5253   00F3AA  74                 	db	116	;'t'
  5254   00F3AB  2D                 	db	45
  5255   00F3AC  69                 	db	105	;'i'
  5256   00F3AD  6E                 	db	110	;'n'
  5257   00F3AE  20                 	db	32
  5258   00F3AF  63                 	db	99	;'c'
  5259   00F3B0  6F                 	db	111	;'o'
  5260   00F3B1  6D                 	db	109	;'m'
  5261   00F3B2  6D                 	db	109	;'m'
  5262   00F3B3  61                 	db	97	;'a'
  5263   00F3B4  6E                 	db	110	;'n'
  5264   00F3B5  64                 	db	100	;'d'
  5265   00F3B6  20                 	db	32
  5266   00F3B7  3E                 	db	62	;'>'
  5267   00F3B8  3E                 	db	62	;'>'
  5268   00F3B9  0D                 	db	13
  5269   00F3BA  0A                 	db	10
  5270   00F3BB  00                 	db	0
  5271   00F3BC                     
  5272                           ; BSR set to: 7
  5273   00F3BC  53                 	db	83	;'S'
  5274   00F3BD  44                 	db	68	;'D'
  5275   00F3BE  20                 	db	32
  5276   00F3BF  43                 	db	67	;'C'
  5277   00F3C0  61                 	db	97	;'a'
  5278   00F3C1  72                 	db	114	;'r'
  5279   00F3C2  64                 	db	100	;'d'
  5280   00F3C3  3A                 	db	58	;':'
  5281   00F3C4  20                 	db	32
  5282   00F3C5  77                 	db	119	;'w'
  5283   00F3C6  72                 	db	114	;'r'
  5284   00F3C7  69                 	db	105	;'i'
  5285   00F3C8  74                 	db	116	;'t'
  5286   00F3C9  65                 	db	101	;'e'
  5287   00F3CA  35                 	db	53	;'5'
  5288   00F3CB  31                 	db	49	;'1'
  5289   00F3CC  32                 	db	50	;'2'
  5290   00F3CD  3A                 	db	58	;':'
  5291   00F3CE  20                 	db	32
  5292   00F3CF  74                 	db	116	;'t'
  5293   00F3D0  69                 	db	105	;'i'
  5294   00F3D1  6D                 	db	109	;'m'
  5295   00F3D2  65                 	db	101	;'e'
  5296   00F3D3  6F                 	db	111	;'o'
  5297   00F3D4  75                 	db	117	;'u'
  5298   00F3D5  74                 	db	116	;'t'
  5299   00F3D6  2C                 	db	44
  5300   00F3D7  20                 	db	32
  5301   00F3D8  72                 	db	114	;'r'
  5302   00F3D9  65                 	db	101	;'e'
  5303   00F3DA  73                 	db	115	;'s'
  5304   00F3DB  70                 	db	112	;'p'
  5305   00F3DC  6F                 	db	111	;'o'
  5306   00F3DD  6E                 	db	110	;'n'
  5307   00F3DE  73                 	db	115	;'s'
  5308   00F3DF  65                 	db	101	;'e'
  5309   00F3E0  20                 	db	32
  5310   00F3E1  69                 	db	105	;'i'
  5311   00F3E2  73                 	db	115	;'s'
  5312   00F3E3  20                 	db	32
  5313   00F3E4  25                 	db	37
  5314   00F3E5  30                 	db	48	;'0'
  5315   00F3E6  32                 	db	50	;'2'
  5316   00F3E7  78                 	db	120	;'x'
  5317   00F3E8  0A                 	db	10
  5318   00F3E9  0D                 	db	13
  5319   00F3EA  00                 	db	0
  5320   00F3EB                     
  5321                           ; BSR set to: 7
  5322   00F3EB  53                 	db	83	;'S'
  5323   00F3EC  44                 	db	68	;'D'
  5324   00F3ED  20                 	db	32
  5325   00F3EE  43                 	db	67	;'C'
  5326   00F3EF  61                 	db	97	;'a'
  5327   00F3F0  72                 	db	114	;'r'
  5328   00F3F1  64                 	db	100	;'d'
  5329   00F3F2  3A                 	db	58	;':'
  5330   00F3F3  20                 	db	32
  5331   00F3F4  43                 	db	67	;'C'
  5332   00F3F5  4D                 	db	77	;'M'
  5333   00F3F6  44                 	db	68	;'D'
  5334   00F3F7  35                 	db	53	;'5'
  5335   00F3F8  38                 	db	56	;'8'
  5336   00F3F9  2C                 	db	44
  5337   00F3FA  20                 	db	32
  5338   00F3FB  52                 	db	82	;'R'
  5339   00F3FC  33                 	db	51	;'3'
  5340   00F3FD  3D                 	db	61	;'='
  5341   00F3FE  25                 	db	37
  5342   00F3FF  30                 	db	48	;'0'
  5343   00F400  32                 	db	50	;'2'
  5344   00F401  78                 	db	120	;'x'
  5345   00F402  20                 	db	32
  5346   00F403  25                 	db	37
  5347   00F404  30                 	db	48	;'0'
  5348   00F405  32                 	db	50	;'2'
  5349   00F406  78                 	db	120	;'x'
  5350   00F407  20                 	db	32
  5351   00F408  25                 	db	37
  5352   00F409  30                 	db	48	;'0'
  5353   00F40A  32                 	db	50	;'2'
  5354   00F40B  78                 	db	120	;'x'
  5355   00F40C  20                 	db	32
  5356   00F40D  25                 	db	37
  5357   00F40E  30                 	db	48	;'0'
  5358   00F40F  32                 	db	50	;'2'
  5359   00F410  78                 	db	120	;'x'
  5360   00F411  20                 	db	32
  5361   00F412  25                 	db	37
  5362   00F413  30                 	db	48	;'0'
  5363   00F414  32                 	db	50	;'2'
  5364   00F415  78                 	db	120	;'x'
  5365   00F416  0A                 	db	10
  5366   00F417  0D                 	db	13
  5367   00F418  00                 	db	0
  5368   00F419                     STR_8:
  5369                           
  5370                           ; BSR set to: 7
  5371   00F419  25                 	db	37
  5372   00F41A  73                 	db	115	;'s'
  5373   00F41B  3A                 	db	58	;':'
  5374   00F41C  20                 	db	32
  5375   00F41D  45                 	db	69	;'E'
  5376   00F41E  52                 	db	82	;'R'
  5377   00F41F  52                 	db	82	;'R'
  5378   00F420  4F                 	db	79	;'O'
  5379   00F421  52                 	db	82	;'R'
  5380   00F422  3A                 	db	58	;':'
  5381   00F423  20                 	db	32
  5382   00F424  63                 	db	99	;'c'
  5383   00F425  6C                 	db	108	;'l'
  5384   00F426  6F                 	db	111	;'o'
  5385   00F427  63                 	db	99	;'c'
  5386   00F428  6B                 	db	107	;'k'
  5387   00F429  20                 	db	32
  5388   00F42A  73                 	db	115	;'s'
  5389   00F42B  70                 	db	112	;'p'
  5390   00F42C  65                 	db	101	;'e'
  5391   00F42D  65                 	db	101	;'e'
  5392   00F42E  64                 	db	100	;'d'
  5393   00F42F  20                 	db	32
  5394   00F430  25                 	db	37
  5395   00F431  64                 	db	100	;'d'
  5396   00F432  20                 	db	32
  5397   00F433  69                 	db	105	;'i'
  5398   00F434  73                 	db	115	;'s'
  5399   00F435  20                 	db	32
  5400   00F436  6E                 	db	110	;'n'
  5401   00F437  6F                 	db	111	;'o'
  5402   00F438  74                 	db	116	;'t'
  5403   00F439  20                 	db	32
  5404   00F43A  73                 	db	115	;'s'
  5405   00F43B  75                 	db	117	;'u'
  5406   00F43C  70                 	db	112	;'p'
  5407   00F43D  70                 	db	112	;'p'
  5408   00F43E  6F                 	db	111	;'o'
  5409   00F43F  72                 	db	114	;'r'
  5410   00F440  74                 	db	116	;'t'
  5411   00F441  65                 	db	101	;'e'
  5412   00F442  64                 	db	100	;'d'
  5413   00F443  0A                 	db	10
  5414   00F444  0D                 	db	13
  5415   00F445  00                 	db	0
  5416   00F446                     
  5417                           ; BSR set to: 7
  5418   00F446  53                 	db	83	;'S'
  5419   00F447  44                 	db	68	;'D'
  5420   00F448  20                 	db	32
  5421   00F449  43                 	db	67	;'C'
  5422   00F44A  61                 	db	97	;'a'
  5423   00F44B  72                 	db	114	;'r'
  5424   00F44C  64                 	db	100	;'d'
  5425   00F44D  3A                 	db	58	;':'
  5426   00F44E  20                 	db	32
  5427   00F44F  43                 	db	67	;'C'
  5428   00F450  4D                 	db	77	;'M'
  5429   00F451  44                 	db	68	;'D'
  5430   00F452  38                 	db	56	;'8'
  5431   00F453  2C                 	db	44
  5432   00F454  20                 	db	32
  5433   00F455  52                 	db	82	;'R'
  5434   00F456  37                 	db	55	;'7'
  5435   00F457  3D                 	db	61	;'='
  5436   00F458  25                 	db	37
  5437   00F459  30                 	db	48	;'0'
  5438   00F45A  32                 	db	50	;'2'
  5439   00F45B  78                 	db	120	;'x'
  5440   00F45C  20                 	db	32
  5441   00F45D  25                 	db	37
  5442   00F45E  30                 	db	48	;'0'
  5443   00F45F  32                 	db	50	;'2'
  5444   00F460  78                 	db	120	;'x'
  5445   00F461  20                 	db	32
  5446   00F462  25                 	db	37
  5447   00F463  30                 	db	48	;'0'
  5448   00F464  32                 	db	50	;'2'
  5449   00F465  78                 	db	120	;'x'
  5450   00F466  20                 	db	32
  5451   00F467  25                 	db	37
  5452   00F468  30                 	db	48	;'0'
  5453   00F469  32                 	db	50	;'2'
  5454   00F46A  78                 	db	120	;'x'
  5455   00F46B  20                 	db	32
  5456   00F46C  25                 	db	37
  5457   00F46D  30                 	db	48	;'0'
  5458   00F46E  32                 	db	50	;'2'
  5459   00F46F  78                 	db	120	;'x'
  5460   00F470  0A                 	db	10
  5461   00F471  0D                 	db	13
  5462   00F472  00                 	db	0
  5463   00F473                     STR_190:
  5464                           
  5465                           ; BSR set to: 7
  5466   00F473  64                 	db	100	;'d'
  5467   00F474  69                 	db	105	;'i'
  5468   00F475  73                 	db	115	;'s'
  5469   00F476  6B                 	db	107	;'k'
  5470   00F477  5F                 	db	95	;'_'
  5471   00F478  69                 	db	105	;'i'
  5472   00F479  6F                 	db	111	;'o'
  5473   00F47A  63                 	db	99	;'c'
  5474   00F47B  74                 	db	116	;'t'
  5475   00F47C  6C                 	db	108	;'l'
  5476   00F47D  3A                 	db	58	;':'
  5477   00F47E  20                 	db	32
  5478   00F47F  70                 	db	112	;'p'
  5479   00F480  64                 	db	100	;'d'
  5480   00F481  72                 	db	114	;'r'
  5481   00F482  76                 	db	118	;'v'
  5482   00F483  3D                 	db	61	;'='
  5483   00F484  25                 	db	37
  5484   00F485  64                 	db	100	;'d'
  5485   00F486  2C                 	db	44
  5486   00F487  20                 	db	32
  5487   00F488  63                 	db	99	;'c'
  5488   00F489  6D                 	db	109	;'m'
  5489   00F48A  64                 	db	100	;'d'
  5490   00F48B  3D                 	db	61	;'='
  5491   00F48C  25                 	db	37
  5492   00F48D  64                 	db	100	;'d'
  5493   00F48E  3A                 	db	58	;':'
  5494   00F48F  20                 	db	32
  5495   00F490  4E                 	db	78	;'N'
  5496   00F491  6F                 	db	111	;'o'
  5497   00F492  74                 	db	116	;'t'
  5498   00F493  20                 	db	32
  5499   00F494  68                 	db	104	;'h'
  5500   00F495  61                 	db	97	;'a'
  5501   00F496  6E                 	db	110	;'n'
  5502   00F497  64                 	db	100	;'d'
  5503   00F498  6C                 	db	108	;'l'
  5504   00F499  65                 	db	101	;'e'
  5505   00F49A  64                 	db	100	;'d'
  5506   00F49B  2E                 	db	46
  5507   00F49C  0A                 	db	10
  5508   00F49D  0D                 	db	13
  5509   00F49E  00                 	db	0
  5510   00F49F                     
  5511                           ; BSR set to: 7
  5512   00F49F  64                 	db	100	;'d'
  5513   00F4A0  69                 	db	105	;'i'
  5514   00F4A1  73                 	db	115	;'s'
  5515   00F4A2  6B                 	db	107	;'k'
  5516   00F4A3  5F                 	db	95	;'_'
  5517   00F4A4  72                 	db	114	;'r'
  5518   00F4A5  65                 	db	101	;'e'
  5519   00F4A6  61                 	db	97	;'a'
  5520   00F4A7  64                 	db	100	;'d'
  5521   00F4A8  3A                 	db	58	;':'
  5522   00F4A9  20                 	db	32
  5523   00F4AA  20                 	db	32
  5524   00F4AB  70                 	db	112	;'p'
  5525   00F4AC  64                 	db	100	;'d'
  5526   00F4AD  72                 	db	114	;'r'
  5527   00F4AE  76                 	db	118	;'v'
  5528   00F4AF  3D                 	db	61	;'='
  5529   00F4B0  25                 	db	37
  5530   00F4B1  64                 	db	100	;'d'
  5531   00F4B2  2C                 	db	44
  5532   00F4B3  20                 	db	32
  5533   00F4B4  73                 	db	115	;'s'
  5534   00F4B5  65                 	db	101	;'e'
  5535   00F4B6  63                 	db	99	;'c'
  5536   00F4B7  74                 	db	116	;'t'
  5537   00F4B8  6F                 	db	111	;'o'
  5538   00F4B9  72                 	db	114	;'r'
  5539   00F4BA  3D                 	db	61	;'='
  5540   00F4BB  25                 	db	37
  5541   00F4BC  6C                 	db	108	;'l'
  5542   00F4BD  64                 	db	100	;'d'
  5543   00F4BE  2C                 	db	44
  5544   00F4BF  20                 	db	32
  5545   00F4C0  63                 	db	99	;'c'
  5546   00F4C1  6F                 	db	111	;'o'
  5547   00F4C2  75                 	db	117	;'u'
  5548   00F4C3  6E                 	db	110	;'n'
  5549   00F4C4  74                 	db	116	;'t'
  5550   00F4C5  3D                 	db	61	;'='
  5551   00F4C6  25                 	db	37
  5552   00F4C7  64                 	db	100	;'d'
  5553   00F4C8  0A                 	db	10
  5554   00F4C9  0D                 	db	13
  5555   00F4CA  00                 	db	0
  5556   00F4CB                     
  5557                           ; BSR set to: 7
  5558   00F4CB  64                 	db	100	;'d'
  5559   00F4CC  69                 	db	105	;'i'
  5560   00F4CD  73                 	db	115	;'s'
  5561   00F4CE  6B                 	db	107	;'k'
  5562   00F4CF  5F                 	db	95	;'_'
  5563   00F4D0  77                 	db	119	;'w'
  5564   00F4D1  72                 	db	114	;'r'
  5565   00F4D2  69                 	db	105	;'i'
  5566   00F4D3  74                 	db	116	;'t'
  5567   00F4D4  65                 	db	101	;'e'
  5568   00F4D5  3A                 	db	58	;':'
  5569   00F4D6  20                 	db	32
  5570   00F4D7  70                 	db	112	;'p'
  5571   00F4D8  64                 	db	100	;'d'
  5572   00F4D9  72                 	db	114	;'r'
  5573   00F4DA  76                 	db	118	;'v'
  5574   00F4DB  3D                 	db	61	;'='
  5575   00F4DC  25                 	db	37
  5576   00F4DD  64                 	db	100	;'d'
  5577   00F4DE  2C                 	db	44
  5578   00F4DF  20                 	db	32
  5579   00F4E0  73                 	db	115	;'s'
  5580   00F4E1  65                 	db	101	;'e'
  5581   00F4E2  63                 	db	99	;'c'
  5582   00F4E3  74                 	db	116	;'t'
  5583   00F4E4  6F                 	db	111	;'o'
  5584   00F4E5  72                 	db	114	;'r'
  5585   00F4E6  3D                 	db	61	;'='
  5586   00F4E7  25                 	db	37
  5587   00F4E8  6C                 	db	108	;'l'
  5588   00F4E9  64                 	db	100	;'d'
  5589   00F4EA  2C                 	db	44
  5590   00F4EB  20                 	db	32
  5591   00F4EC  63                 	db	99	;'c'
  5592   00F4ED  6F                 	db	111	;'o'
  5593   00F4EE  75                 	db	117	;'u'
  5594   00F4EF  6E                 	db	110	;'n'
  5595   00F4F0  74                 	db	116	;'t'
  5596   00F4F1  3D                 	db	61	;'='
  5597   00F4F2  25                 	db	37
  5598   00F4F3  64                 	db	100	;'d'
  5599   00F4F4  0A                 	db	10
  5600   00F4F5  0D                 	db	13
  5601   00F4F6  00                 	db	0
  5602   00F4F7                     STR_47:
  5603                           
  5604                           ; BSR set to: 7
  5605   00F4F7  4D                 	db	77	;'M'
  5606   00F4F8  65                 	db	101	;'e'
  5607   00F4F9  7A                 	db	122	;'z'
  5608   00F4FA  7A                 	db	122	;'z'
  5609   00F4FB  61                 	db	97	;'a'
  5610   00F4FC  6E                 	db	110	;'n'
  5611   00F4FD  69                 	db	105	;'i'
  5612   00F4FE  6E                 	db	110	;'n'
  5613   00F4FF  65                 	db	101	;'e'
  5614   00F500  20                 	db	32
  5615   00F501  43                 	db	67	;'C'
  5616   00F502  61                 	db	97	;'a'
  5617   00F503  72                 	db	114	;'r'
  5618   00F504  64                 	db	100	;'d'
  5619   00F505  20                 	db	32
  5620   00F506  4D                 	db	77	;'M'
  5621   00F507  45                 	db	69	;'E'
  5622   00F508  5A                 	db	90	;'Z'
  5623   00F509  57                 	db	87	;'W'
  5624   00F50A  36                 	db	54	;'6'
  5625   00F50B  35                 	db	53	;'5'
  5626   00F50C  43                 	db	67	;'C'
  5627   00F50D  5F                 	db	95	;'_'
  5628   00F50E  52                 	db	82	;'R'
  5629   00F50F  41                 	db	65	;'A'
  5630   00F510  4D                 	db	77	;'M'
  5631   00F511  20                 	db	32
  5632   00F512  66                 	db	102	;'f'
  5633   00F513  69                 	db	105	;'i'
  5634   00F514  72                 	db	114	;'r'
  5635   00F515  6D                 	db	109	;'m'
  5636   00F516  77                 	db	119	;'w'
  5637   00F517  61                 	db	97	;'a'
  5638   00F518  72                 	db	114	;'r'
  5639   00F519  65                 	db	101	;'e'
  5640   00F51A  20                 	db	32
  5641   00F51B  52                 	db	82	;'R'
  5642   00F51C  65                 	db	101	;'e'
  5643   00F51D  76                 	db	118	;'v'
  5644   00F51E  32                 	db	50	;'2'
  5645   00F51F  2E                 	db	46
  5646   00F520  30                 	db	48	;'0'
  5647   00F521  00                 	db	0
  5648   00F522                     
  5649                           ; BSR set to: 7
  5650   00F522  53                 	db	83	;'S'
  5651   00F523  44                 	db	68	;'D'
  5652   00F524  20                 	db	32
  5653   00F525  43                 	db	67	;'C'
  5654   00F526  61                 	db	97	;'a'
  5655   00F527  72                 	db	114	;'r'
  5656   00F528  64                 	db	100	;'d'
  5657   00F529  3A                 	db	58	;':'
  5658   00F52A  20                 	db	32
  5659   00F52B  43                 	db	67	;'C'
  5660   00F52C  43                 	db	67	;'C'
  5661   00F52D  53                 	db	83	;'S'
  5662   00F52E  20                 	db	32
  5663   00F52F  28                 	db	40
  5664   00F530  43                 	db	67	;'C'
  5665   00F531  61                 	db	97	;'a'
  5666   00F532  72                 	db	114	;'r'
  5667   00F533  64                 	db	100	;'d'
  5668   00F534  20                 	db	32
  5669   00F535  43                 	db	67	;'C'
  5670   00F536  61                 	db	97	;'a'
  5671   00F537  70                 	db	112	;'p'
  5672   00F538  61                 	db	97	;'a'
  5673   00F539  63                 	db	99	;'c'
  5674   00F53A  69                 	db	105	;'i'
  5675   00F53B  74                 	db	116	;'t'
  5676   00F53C  79                 	db	121	;'y'
  5677   00F53D  20                 	db	32
  5678   00F53E  53                 	db	83	;'S'
  5679   00F53F  74                 	db	116	;'t'
  5680   00F540  61                 	db	97	;'a'
  5681   00F541  74                 	db	116	;'t'
  5682   00F542  75                 	db	117	;'u'
  5683   00F543  73                 	db	115	;'s'
  5684   00F544  29                 	db	41
  5685   00F545  20                 	db	32
  5686   00F546  69                 	db	105	;'i'
  5687   00F547  73                 	db	115	;'s'
  5688   00F548  20                 	db	32
  5689   00F549  30                 	db	48	;'0'
  5690   00F54A  0A                 	db	10
  5691   00F54B  0D                 	db	13
  5692   00F54C  00                 	db	0
  5693   00F54D                     
  5694                           ; BSR set to: 7
  5695   00F54D  53                 	db	83	;'S'
  5696   00F54E  44                 	db	68	;'D'
  5697   00F54F  20                 	db	32
  5698   00F550  43                 	db	67	;'C'
  5699   00F551  61                 	db	97	;'a'
  5700   00F552  72                 	db	114	;'r'
  5701   00F553  64                 	db	100	;'d'
  5702   00F554  3A                 	db	58	;':'
  5703   00F555  20                 	db	32
  5704   00F556  77                 	db	119	;'w'
  5705   00F557  72                 	db	114	;'r'
  5706   00F558  69                 	db	105	;'i'
  5707   00F559  74                 	db	116	;'t'
  5708   00F55A  65                 	db	101	;'e'
  5709   00F55B  35                 	db	53	;'5'
  5710   00F55C  31                 	db	49	;'1'
  5711   00F55D  32                 	db	50	;'2'
  5712   00F55E  3A                 	db	58	;':'
  5713   00F55F  20                 	db	32
  5714   00F560  43                 	db	67	;'C'
  5715   00F561  52                 	db	82	;'R'
  5716   00F562  43                 	db	67	;'C'
  5717   00F563  20                 	db	32
  5718   00F564  65                 	db	101	;'e'
  5719   00F565  72                 	db	114	;'r'
  5720   00F566  72                 	db	114	;'r'
  5721   00F567  6F                 	db	111	;'o'
  5722   00F568  72                 	db	114	;'r'
  5723   00F569  20                 	db	32
  5724   00F56A  28                 	db	40
  5725   00F56B  72                 	db	114	;'r'
  5726   00F56C  65                 	db	101	;'e'
  5727   00F56D  74                 	db	116	;'t'
  5728   00F56E  72                 	db	114	;'r'
  5729   00F56F  79                 	db	121	;'y'
  5730   00F570  3D                 	db	61	;'='
  5731   00F571  25                 	db	37
  5732   00F572  64                 	db	100	;'d'
  5733   00F573  29                 	db	41
  5734   00F574  0A                 	db	10
  5735   00F575  0D                 	db	13
  5736   00F576  00                 	db	0
  5737   00F577                     STR_117:
  5738                           
  5739                           ; BSR set to: 7
  5740   00F577  20                 	db	32
  5741   00F578  20                 	db	32
  5742   00F579  4C                 	db	76	;'L'
  5743   00F57A  4F                 	db	79	;'O'
  5744   00F57B  41                 	db	65	;'A'
  5745   00F57C  44                 	db	68	;'D'
  5746   00F57D  20                 	db	32
  5747   00F57E  5B                 	db	91	;'['
  5748   00F57F  4C                 	db	76	;'L'
  5749   00F580  3D                 	db	61	;'='
  5750   00F581  6C                 	db	108	;'l'
  5751   00F582  6F                 	db	111	;'o'
  5752   00F583  61                 	db	97	;'a'
  5753   00F584  64                 	db	100	;'d'
  5754   00F585  20                 	db	32
  5755   00F586  61                 	db	97	;'a'
  5756   00F587  64                 	db	100	;'d'
  5757   00F588  64                 	db	100	;'d'
  5758   00F589  72                 	db	114	;'r'
  5759   00F58A  65                 	db	101	;'e'
  5760   00F58B  73                 	db	115	;'s'
  5761   00F58C  73                 	db	115	;'s'
  5762   00F58D  28                 	db	40
  5763   00F58E  48                 	db	72	;'H'
  5764   00F58F  65                 	db	101	;'e'
  5765   00F590  78                 	db	120	;'x'
  5766   00F591  29                 	db	41
  5767   00F592  5D                 	db	93	;']'
  5768   00F593  20                 	db	32
  5769   00F594  66                 	db	102	;'f'
  5770   00F595  69                 	db	105	;'i'
  5771   00F596  6C                 	db	108	;'l'
  5772   00F597  65                 	db	101	;'e'
  5773   00F598  20                 	db	32
  5774   00F599  6E                 	db	110	;'n'
  5775   00F59A  61                 	db	97	;'a'
  5776   00F59B  6D                 	db	109	;'m'
  5777   00F59C  65                 	db	101	;'e'
  5778   00F59D  0D                 	db	13
  5779   00F59E  0A                 	db	10
  5780   00F59F  00                 	db	0
  5781   00F5A0                     STR_115:
  5782                           
  5783                           ; BSR set to: 7
  5784   00F5A0  20                 	db	32
  5785   00F5A1  20                 	db	32
  5786   00F5A2  4C                 	db	76	;'L'
  5787   00F5A3  53                 	db	83	;'S'
  5788   00F5A4  20                 	db	32
  5789   00F5A5  7C                 	db	124
  5790   00F5A6  20                 	db	32
  5791   00F5A7  44                 	db	68	;'D'
  5792   00F5A8  49                 	db	73	;'I'
  5793   00F5A9  52                 	db	82	;'R'
  5794   00F5AA  20                 	db	32
  5795   00F5AB  5B                 	db	91	;'['
  5796   00F5AC  66                 	db	102	;'f'
  5797   00F5AD  69                 	db	105	;'i'
  5798   00F5AE  6C                 	db	108	;'l'
  5799   00F5AF  65                 	db	101	;'e'
  5800   00F5B0  20                 	db	32
  5801   00F5B1  6E                 	db	110	;'n'
  5802   00F5B2  61                 	db	97	;'a'
  5803   00F5B3  6D                 	db	109	;'m'
  5804   00F5B4  65                 	db	101	;'e'
  5805   00F5B5  20                 	db	32
  5806   00F5B6  7C                 	db	124
  5807   00F5B7  20                 	db	32
  5808   00F5B8  64                 	db	100	;'d'
  5809   00F5B9  69                 	db	105	;'i'
  5810   00F5BA  72                 	db	114	;'r'
  5811   00F5BB  65                 	db	101	;'e'
  5812   00F5BC  63                 	db	99	;'c'
  5813   00F5BD  74                 	db	116	;'t'
  5814   00F5BE  6F                 	db	111	;'o'
  5815   00F5BF  72                 	db	114	;'r'
  5816   00F5C0  79                 	db	121	;'y'
  5817   00F5C1  20                 	db	32
  5818   00F5C2  6E                 	db	110	;'n'
  5819   00F5C3  61                 	db	97	;'a'
  5820   00F5C4  6D                 	db	109	;'m'
  5821   00F5C5  65                 	db	101	;'e'
  5822   00F5C6  0D                 	db	13
  5823   00F5C7  0A                 	db	10
  5824   00F5C8  00                 	db	0
  5825   00F5C9                     
  5826                           ; BSR set to: 7
  5827   00F5C9  53                 	db	83	;'S'
  5828   00F5CA  44                 	db	68	;'D'
  5829   00F5CB  20                 	db	32
  5830   00F5CC  43                 	db	67	;'C'
  5831   00F5CD  61                 	db	97	;'a'
  5832   00F5CE  72                 	db	114	;'r'
  5833   00F5CF  64                 	db	100	;'d'
  5834   00F5D0  3A                 	db	58	;':'
  5835   00F5D1  20                 	db	32
  5836   00F5D2  43                 	db	67	;'C'
  5837   00F5D3  61                 	db	97	;'a'
  5838   00F5D4  72                 	db	114	;'r'
  5839   00F5D5  64                 	db	100	;'d'
  5840   00F5D6  20                 	db	32
  5841   00F5D7  70                 	db	112	;'p'
  5842   00F5D8  6F                 	db	111	;'o'
  5843   00F5D9  77                 	db	119	;'w'
  5844   00F5DA  65                 	db	101	;'e'
  5845   00F5DB  72                 	db	114	;'r'
  5846   00F5DC  20                 	db	32
  5847   00F5DD  75                 	db	117	;'u'
  5848   00F5DE  70                 	db	112	;'p'
  5849   00F5DF  20                 	db	32
  5850   00F5E0  73                 	db	115	;'s'
  5851   00F5E1  74                 	db	116	;'t'
  5852   00F5E2  61                 	db	97	;'a'
  5853   00F5E3  74                 	db	116	;'t'
  5854   00F5E4  75                 	db	117	;'u'
  5855   00F5E5  73                 	db	115	;'s'
  5856   00F5E6  20                 	db	32
  5857   00F5E7  62                 	db	98	;'b'
  5858   00F5E8  69                 	db	105	;'i'
  5859   00F5E9  73                 	db	115	;'s'
  5860   00F5EA  20                 	db	32
  5861   00F5EB  69                 	db	105	;'i'
  5862   00F5EC  73                 	db	115	;'s'
  5863   00F5ED  20                 	db	32
  5864   00F5EE  30                 	db	48	;'0'
  5865   00F5EF  0A                 	db	10
  5866   00F5F0  0D                 	db	13
  5867   00F5F1  00                 	db	0
  5868   00F5F2                     STR_76:
  5869                           
  5870                           ; BSR set to: 7
  5871   00F5F2  49                 	db	73	;'I'
  5872   00F5F3  6E                 	db	110	;'n'
  5873   00F5F4  76                 	db	118	;'v'
  5874   00F5F5  61                 	db	97	;'a'
  5875   00F5F6  6C                 	db	108	;'l'
  5876   00F5F7  69                 	db	105	;'i'
  5877   00F5F8  64                 	db	100	;'d'
  5878   00F5F9  28                 	db	40
  5879   00F5FA  20                 	db	32
  5880   00F5FB  63                 	db	99	;'c'
  5881   00F5FC  6F                 	db	111	;'o'
  5882   00F5FD  6D                 	db	109	;'m'
  5883   00F5FE  6D                 	db	109	;'m'
  5884   00F5FF  61                 	db	97	;'a'
  5885   00F600  6E                 	db	110	;'n'
  5886   00F601  64                 	db	100	;'d'
  5887   00F602  20                 	db	32
  5888   00F603  7C                 	db	124
  5889   00F604  20                 	db	32
  5890   00F605  66                 	db	102	;'f'
  5891   00F606  69                 	db	105	;'i'
  5892   00F607  6C                 	db	108	;'l'
  5893   00F608  65                 	db	101	;'e'
  5894   00F609  20                 	db	32
  5895   00F60A  7C                 	db	124
  5896   00F60B  20                 	db	32
  5897   00F60C  64                 	db	100	;'d'
  5898   00F60D  69                 	db	105	;'i'
  5899   00F60E  72                 	db	114	;'r'
  5900   00F60F  65                 	db	101	;'e'
  5901   00F610  63                 	db	99	;'c'
  5902   00F611  74                 	db	116	;'t'
  5903   00F612  6F                 	db	111	;'o'
  5904   00F613  72                 	db	114	;'r'
  5905   00F614  79                 	db	121	;'y'
  5906   00F615  20                 	db	32
  5907   00F616  29                 	db	41
  5908   00F617  0D                 	db	13
  5909   00F618  0A                 	db	10
  5910   00F619  00                 	db	0
  5911   00F61A                     
  5912                           ; BSR set to: 7
  5913   00F61A  72                 	db	114	;'r'
  5914   00F61B  65                 	db	101	;'e'
  5915   00F61C  61                 	db	97	;'a'
  5916   00F61D  64                 	db	100	;'d'
  5917   00F61E  20                 	db	32
  5918   00F61F  4D                 	db	77	;'M'
  5919   00F620  42                 	db	66	;'B'
  5920   00F621  52                 	db	82	;'R'
  5921   00F622  20                 	db	32
  5922   00F623  70                 	db	112	;'p'
  5923   00F624  61                 	db	97	;'a'
  5924   00F625  72                 	db	114	;'r'
  5925   00F626  74                 	db	116	;'t'
  5926   00F627  69                 	db	105	;'i'
  5927   00F628  74                 	db	116	;'t'
  5928   00F629  69                 	db	105	;'i'
  5929   00F62A  6F                 	db	111	;'o'
  5930   00F62B  6E                 	db	110	;'n'
  5931   00F62C  20                 	db	32
  5932   00F62D  74                 	db	116	;'t'
  5933   00F62E  61                 	db	97	;'a'
  5934   00F62F  62                 	db	98	;'b'
  5935   00F630  6C                 	db	108	;'l'
  5936   00F631  65                 	db	101	;'e'
  5937   00F632  20                 	db	32
  5938   00F633  61                 	db	97	;'a'
  5939   00F634  74                 	db	116	;'t'
  5940   00F635  20                 	db	32
  5941   00F636  73                 	db	115	;'s'
  5942   00F637  65                 	db	101	;'e'
  5943   00F638  63                 	db	99	;'c'
  5944   00F639  74                 	db	116	;'t'
  5945   00F63A  6F                 	db	111	;'o'
  5946   00F63B  72                 	db	114	;'r'
  5947   00F63C  20                 	db	32
  5948   00F63D  30                 	db	48	;'0'
  5949   00F63E  0A                 	db	10
  5950   00F63F  0D                 	db	13
  5951   00F640  00                 	db	0
  5952   00F641                     STR_82:
  5953                           
  5954                           ; BSR set to: 7
  5955   00F641  4C                 	db	76	;'L'
  5956   00F642  6F                 	db	111	;'o'
  5957   00F643  61                 	db	97	;'a'
  5958   00F644  64                 	db	100	;'d'
  5959   00F645  20                 	db	32
  5960   00F646  25                 	db	37
  5961   00F647  73                 	db	115	;'s'
  5962   00F648  20                 	db	32
  5963   00F649  3A                 	db	58	;':'
  5964   00F64A  20                 	db	32
  5965   00F64B  41                 	db	65	;'A'
  5966   00F64C  64                 	db	100	;'d'
  5967   00F64D  72                 	db	114	;'r'
  5968   00F64E  20                 	db	32
  5969   00F64F  3D                 	db	61	;'='
  5970   00F650  20                 	db	32
  5971   00F651  24                 	db	36
  5972   00F652  25                 	db	37
  5973   00F653  30                 	db	48	;'0'
  5974   00F654  36                 	db	54	;'6'
  5975   00F655  6C                 	db	108	;'l'
  5976   00F656  58                 	db	88	;'X'
  5977   00F657  2C                 	db	44
  5978   00F658  20                 	db	32
  5979   00F659  53                 	db	83	;'S'
  5980   00F65A  69                 	db	105	;'i'
  5981   00F65B  7A                 	db	122	;'z'
  5982   00F65C  65                 	db	101	;'e'
  5983   00F65D  20                 	db	32
  5984   00F65E  3D                 	db	61	;'='
  5985   00F65F  20                 	db	32
  5986   00F660  24                 	db	36
  5987   00F661  25                 	db	37
  5988   00F662  30                 	db	48	;'0'
  5989   00F663  34                 	db	52	;'4'
  5990   00F664  58                 	db	88	;'X'
  5991   00F665  0D                 	db	13
  5992   00F666  0A                 	db	10
  5993   00F667  00                 	db	0
  5994   00F668                     STR_158:
  5995                           
  5996                           ; BSR set to: 7
  5997   00F668  44                 	db	68	;'D'
  5998   00F669  50                 	db	80	;'P'
  5999   00F66A  52                 	db	82	;'R'
  6000   00F66B  20                 	db	32
  6001   00F66C  3A                 	db	58	;':'
  6002   00F66D  20                 	db	32
  6003   00F66E  24                 	db	36
  6004   00F66F  25                 	db	37
  6005   00F670  30                 	db	48	;'0'
  6006   00F671  34                 	db	52	;'4'
  6007   00F672  58                 	db	88	;'X'
  6008   00F673  20                 	db	32
  6009   00F674  50                 	db	80	;'P'
  6010   00F675  42                 	db	66	;'B'
  6011   00F676  52                 	db	82	;'R'
  6012   00F677  20                 	db	32
  6013   00F678  3A                 	db	58	;':'
  6014   00F679  20                 	db	32
  6015   00F67A  24                 	db	36
  6016   00F67B  25                 	db	37
  6017   00F67C  30                 	db	48	;'0'
  6018   00F67D  32                 	db	50	;'2'
  6019   00F67E  58                 	db	88	;'X'
  6020   00F67F  20                 	db	32
  6021   00F680  44                 	db	68	;'D'
  6022   00F681  42                 	db	66	;'B'
  6023   00F682  52                 	db	82	;'R'
  6024   00F683  20                 	db	32
  6025   00F684  3A                 	db	58	;':'
  6026   00F685  20                 	db	32
  6027   00F686  24                 	db	36
  6028   00F687  25                 	db	37
  6029   00F688  30                 	db	48	;'0'
  6030   00F689  32                 	db	50	;'2'
  6031   00F68A  58                 	db	88	;'X'
  6032   00F68B  0D                 	db	13
  6033   00F68C  0A                 	db	10
  6034   00F68D  00                 	db	0
  6035   00F68E                     
  6036                           ; BSR set to: 7
  6037   00F68E  53                 	db	83	;'S'
  6038   00F68F  44                 	db	68	;'D'
  6039   00F690  20                 	db	32
  6040   00F691  43                 	db	67	;'C'
  6041   00F692  61                 	db	97	;'a'
  6042   00F693  72                 	db	114	;'r'
  6043   00F694  64                 	db	100	;'d'
  6044   00F695  3A                 	db	58	;':'
  6045   00F696  20                 	db	32
  6046   00F697  53                 	db	83	;'S'
  6047   00F698  44                 	db	68	;'D'
  6048   00F699  48                 	db	72	;'H'
  6049   00F69A  43                 	db	67	;'C'
  6050   00F69B  20                 	db	32
  6051   00F69C  6F                 	db	111	;'o'
  6052   00F69D  72                 	db	114	;'r'
  6053   00F69E  20                 	db	32
  6054   00F69F  53                 	db	83	;'S'
  6055   00F6A0  44                 	db	68	;'D'
  6056   00F6A1  58                 	db	88	;'X'
  6057   00F6A2  43                 	db	67	;'C'
  6058   00F6A3  20                 	db	32
  6059   00F6A4  63                 	db	99	;'c'
  6060   00F6A5  61                 	db	97	;'a'
  6061   00F6A6  72                 	db	114	;'r'
  6062   00F6A7  64                 	db	100	;'d'
  6063   00F6A8  20                 	db	32
  6064   00F6A9  64                 	db	100	;'d'
  6065   00F6AA  65                 	db	101	;'e'
  6066   00F6AB  74                 	db	116	;'t'
  6067   00F6AC  65                 	db	101	;'e'
  6068   00F6AD  63                 	db	99	;'c'
  6069   00F6AE  74                 	db	116	;'t'
  6070   00F6AF  65                 	db	101	;'e'
  6071   00F6B0  64                 	db	100	;'d'
  6072   00F6B1  0A                 	db	10
  6073   00F6B2  0D                 	db	13
  6074   00F6B3  00                 	db	0
  6075   00F6B4                     STR_6:
  6076                           
  6077                           ; BSR set to: 7
  6078   00F6B4  25                 	db	37
  6079   00F6B5  73                 	db	115	;'s'
  6080   00F6B6  3A                 	db	58	;':'
  6081   00F6B7  20                 	db	32
  6082   00F6B8  45                 	db	69	;'E'
  6083   00F6B9  52                 	db	82	;'R'
  6084   00F6BA  52                 	db	82	;'R'
  6085   00F6BB  4F                 	db	79	;'O'
  6086   00F6BC  52                 	db	82	;'R'
  6087   00F6BD  3A                 	db	58	;':'
  6088   00F6BE  20                 	db	32
  6089   00F6BF  6D                 	db	109	;'m'
  6090   00F6C0  6F                 	db	111	;'o'
  6091   00F6C1  64                 	db	100	;'d'
  6092   00F6C2  65                 	db	101	;'e'
  6093   00F6C3  20                 	db	32
  6094   00F6C4  25                 	db	37
  6095   00F6C5  64                 	db	100	;'d'
  6096   00F6C6  20                 	db	32
  6097   00F6C7  69                 	db	105	;'i'
  6098   00F6C8  73                 	db	115	;'s'
  6099   00F6C9  20                 	db	32
  6100   00F6CA  6E                 	db	110	;'n'
  6101   00F6CB  6F                 	db	111	;'o'
  6102   00F6CC  74                 	db	116	;'t'
  6103   00F6CD  20                 	db	32
  6104   00F6CE  73                 	db	115	;'s'
  6105   00F6CF  75                 	db	117	;'u'
  6106   00F6D0  70                 	db	112	;'p'
  6107   00F6D1  70                 	db	112	;'p'
  6108   00F6D2  6F                 	db	111	;'o'
  6109   00F6D3  72                 	db	114	;'r'
  6110   00F6D4  74                 	db	116	;'t'
  6111   00F6D5  65                 	db	101	;'e'
  6112   00F6D6  64                 	db	100	;'d'
  6113   00F6D7  0A                 	db	10
  6114   00F6D8  0D                 	db	13
  6115   00F6D9  00                 	db	0
  6116   00F6DA                     STR_77:
  6117                           
  6118                           ; BSR set to: 7
  6119   00F6DA  49                 	db	73	;'I'
  6120   00F6DB  6E                 	db	110	;'n'
  6121   00F6DC  73                 	db	115	;'s'
  6122   00F6DD  74                 	db	116	;'t'
  6123   00F6DE  61                 	db	97	;'a'
  6124   00F6DF  6C                 	db	108	;'l'
  6125   00F6E0  6C                 	db	108	;'l'
  6126   00F6E1  20                 	db	32
  6127   00F6E2  4D                 	db	77	;'M'
  6128   00F6E3  6F                 	db	111	;'o'
  6129   00F6E4  6E                 	db	110	;'n'
  6130   00F6E5  69                 	db	105	;'i'
  6131   00F6E6  74                 	db	116	;'t'
  6132   00F6E7  6F                 	db	111	;'o'
  6133   00F6E8  72                 	db	114	;'r'
  6134   00F6E9  20                 	db	32
  6135   00F6EA  50                 	db	80	;'P'
  6136   00F6EB  72                 	db	114	;'r'
  6137   00F6EC  6F                 	db	111	;'o'
  6138   00F6ED  67                 	db	103	;'g'
  6139   00F6EE  72                 	db	114	;'r'
  6140   00F6EF  61                 	db	97	;'a'
  6141   00F6F0  6D                 	db	109	;'m'
  6142   00F6F1  2E                 	db	46
  6143   00F6F2  2E                 	db	46
  6144   00F6F3  2E                 	db	46
  6145   00F6F4  2E                 	db	46
  6146   00F6F5  2E                 	db	46
  6147   00F6F6  2E                 	db	46
  6148   00F6F7  2E                 	db	46
  6149   00F6F8  2E                 	db	46
  6150   00F6F9  2E                 	db	46
  6151   00F6FA  2E                 	db	46
  6152   00F6FB  0D                 	db	13
  6153   00F6FC  0A                 	db	10
  6154   00F6FD  00                 	db	0
  6155   00F6FE                     
  6156                           ; BSR set to: 7
  6157   00F6FE  53                 	db	83	;'S'
  6158   00F6FF  44                 	db	68	;'D'
  6159   00F700  20                 	db	32
  6160   00F701  43                 	db	67	;'C'
  6161   00F702  61                 	db	97	;'a'
  6162   00F703  72                 	db	114	;'r'
  6163   00F704  64                 	db	100	;'d'
  6164   00F705  3A                 	db	58	;':'
  6165   00F706  20                 	db	32
  6166   00F707  69                 	db	105	;'i'
  6167   00F708  6E                 	db	110	;'n'
  6168   00F709  69                 	db	105	;'i'
  6169   00F70A  74                 	db	116	;'t'
  6170   00F70B  69                 	db	105	;'i'
  6171   00F70C  61                 	db	97	;'a'
  6172   00F70D  6C                 	db	108	;'l'
  6173   00F70E  69                 	db	105	;'i'
  6174   00F70F  7A                 	db	122	;'z'
  6175   00F710  65                 	db	101	;'e'
  6176   00F711  20                 	db	32
  6177   00F712  2E                 	db	46
  6178   00F713  2E                 	db	46
  6179   00F714  2E                 	db	46
  6180   00F715  20                 	db	32
  6181   00F716  73                 	db	115	;'s'
  6182   00F717  75                 	db	117	;'u'
  6183   00F718  63                 	db	99	;'c'
  6184   00F719  63                 	db	99	;'c'
  6185   00F71A  65                 	db	101	;'e'
  6186   00F71B  65                 	db	101	;'e'
  6187   00F71C  64                 	db	100	;'d'
  6188   00F71D  65                 	db	101	;'e'
  6189   00F71E  64                 	db	100	;'d'
  6190   00F71F  0A                 	db	10
  6191   00F720  0D                 	db	13
  6192   00F721  00                 	db	0
  6193   00F722                     
  6194                           ; BSR set to: 7
  6195   00F722  53                 	db	83	;'S'
  6196   00F723  44                 	db	68	;'D'
  6197   00F724  20                 	db	32
  6198   00F725  43                 	db	67	;'C'
  6199   00F726  61                 	db	97	;'a'
  6200   00F727  72                 	db	114	;'r'
  6201   00F728  64                 	db	100	;'d'
  6202   00F729  3A                 	db	58	;':'
  6203   00F72A  20                 	db	32
  6204   00F72B  75                 	db	117	;'u'
  6205   00F72C  6E                 	db	110	;'n'
  6206   00F72D  65                 	db	101	;'e'
  6207   00F72E  78                 	db	120	;'x'
  6208   00F72F  70                 	db	112	;'p'
  6209   00F730  65                 	db	101	;'e'
  6210   00F731  63                 	db	99	;'c'
  6211   00F732  74                 	db	116	;'t'
  6212   00F733  65                 	db	101	;'e'
  6213   00F734  64                 	db	100	;'d'
  6214   00F735  20                 	db	32
  6215   00F736  72                 	db	114	;'r'
  6216   00F737  65                 	db	101	;'e'
  6217   00F738  73                 	db	115	;'s'
  6218   00F739  70                 	db	112	;'p'
  6219   00F73A  6F                 	db	111	;'o'
  6220   00F73B  6E                 	db	110	;'n'
  6221   00F73C  73                 	db	115	;'s'
  6222   00F73D  65                 	db	101	;'e'
  6223   00F73E  20                 	db	32
  6224   00F73F  25                 	db	37
  6225   00F740  30                 	db	48	;'0'
  6226   00F741  32                 	db	50	;'2'
  6227   00F742  78                 	db	120	;'x'
  6228   00F743  0A                 	db	10
  6229   00F744  0D                 	db	13
  6230   00F745  00                 	db	0
  6231   00F746                     STR_45:
  6232                           
  6233                           ; BSR set to: 7
  6234   00F746  4D                 	db	77	;'M'
  6235   00F747  65                 	db	101	;'e'
  6236   00F748  6D                 	db	109	;'m'
  6237   00F749  6F                 	db	111	;'o'
  6238   00F74A  72                 	db	114	;'r'
  6239   00F74B  79                 	db	121	;'y'
  6240   00F74C  20                 	db	32
  6241   00F74D  24                 	db	36
  6242   00F74E  30                 	db	48	;'0'
  6243   00F74F  30                 	db	48	;'0'
  6244   00F750  30                 	db	48	;'0'
  6245   00F751  30                 	db	48	;'0'
  6246   00F752  30                 	db	48	;'0'
  6247   00F753  30                 	db	48	;'0'
  6248   00F754  20                 	db	32
  6249   00F755  2D                 	db	45
  6250   00F756  20                 	db	32
  6251   00F757  24                 	db	36
  6252   00F758  25                 	db	37
  6253   00F759  30                 	db	48	;'0'
  6254   00F75A  36                 	db	54	;'6'
  6255   00F75B  6C                 	db	108	;'l'
  6256   00F75C  58                 	db	88	;'X'
  6257   00F75D  20                 	db	32
  6258   00F75E  25                 	db	37
  6259   00F75F  64                 	db	100	;'d'
  6260   00F760  20                 	db	32
  6261   00F761  4B                 	db	75	;'K'
  6262   00F762  42                 	db	66	;'B'
  6263   00F763  20                 	db	32
  6264   00F764  4F                 	db	79	;'O'
  6265   00F765  4B                 	db	75	;'K'
  6266   00F766  0D                 	db	13
  6267   00F767  0A                 	db	10
  6268   00F768  00                 	db	0
  6269   00F769                     
  6270                           ; BSR set to: 7
  6271   00F769  53                 	db	83	;'S'
  6272   00F76A  44                 	db	68	;'D'
  6273   00F76B  20                 	db	32
  6274   00F76C  43                 	db	67	;'C'
  6275   00F76D  61                 	db	97	;'a'
  6276   00F76E  72                 	db	114	;'r'
  6277   00F76F  64                 	db	100	;'d'
  6278   00F770  3A                 	db	58	;':'
  6279   00F771  20                 	db	32
  6280   00F772  41                 	db	65	;'A'
  6281   00F773  43                 	db	67	;'C'
  6282   00F774  4D                 	db	77	;'M'
  6283   00F775  44                 	db	68	;'D'
  6284   00F776  34                 	db	52	;'4'
  6285   00F777  31                 	db	49	;'1'
  6286   00F778  20                 	db	32
  6287   00F779  72                 	db	114	;'r'
  6288   00F77A  65                 	db	101	;'e'
  6289   00F77B  73                 	db	115	;'s'
  6290   00F77C  70                 	db	112	;'p'
  6291   00F77D  6F                 	db	111	;'o'
  6292   00F77E  6E                 	db	110	;'n'
  6293   00F77F  73                 	db	115	;'s'
  6294   00F780  65                 	db	101	;'e'
  6295   00F781  20                 	db	32
  6296   00F782  69                 	db	105	;'i'
  6297   00F783  73                 	db	115	;'s'
  6298   00F784  20                 	db	32
  6299   00F785  25                 	db	37
  6300   00F786  30                 	db	48	;'0'
  6301   00F787  32                 	db	50	;'2'
  6302   00F788  78                 	db	120	;'x'
  6303   00F789  0A                 	db	10
  6304   00F78A  0D                 	db	13
  6305   00F78B  00                 	db	0
  6306   00F78C                     
  6307                           ; BSR set to: 7
  6308   00F78C  53                 	db	83	;'S'
  6309   00F78D  44                 	db	68	;'D'
  6310   00F78E  20                 	db	32
  6311   00F78F  43                 	db	67	;'C'
  6312   00F790  61                 	db	97	;'a'
  6313   00F791  72                 	db	114	;'r'
  6314   00F792  64                 	db	100	;'d'
  6315   00F793  3A                 	db	58	;':'
  6316   00F794  20                 	db	32
  6317   00F795  77                 	db	119	;'w'
  6318   00F796  72                 	db	114	;'r'
  6319   00F797  69                 	db	105	;'i'
  6320   00F798  74                 	db	116	;'t'
  6321   00F799  65                 	db	101	;'e'
  6322   00F79A  35                 	db	53	;'5'
  6323   00F79B  31                 	db	49	;'1'
  6324   00F79C  32                 	db	50	;'2'
  6325   00F79D  3A                 	db	58	;':'
  6326   00F79E  20                 	db	32
  6327   00F79F  74                 	db	116	;'t'
  6328   00F7A0  6F                 	db	111	;'o'
  6329   00F7A1  6B                 	db	107	;'k'
  6330   00F7A2  65                 	db	101	;'e'
  6331   00F7A3  6E                 	db	110	;'n'
  6332   00F7A4  20                 	db	32
  6333   00F7A5  69                 	db	105	;'i'
  6334   00F7A6  73                 	db	115	;'s'
  6335   00F7A7  20                 	db	32
  6336   00F7A8  25                 	db	37
  6337   00F7A9  30                 	db	48	;'0'
  6338   00F7AA  32                 	db	50	;'2'
  6339   00F7AB  78                 	db	120	;'x'
  6340   00F7AC  0A                 	db	10
  6341   00F7AD  0D                 	db	13
  6342   00F7AE  00                 	db	0
  6343   00F7AF                     STR_109:
  6344                           
  6345                           ; BSR set to: 7
  6346   00F7AF  52                 	db	82	;'R'
  6347   00F7B0  65                 	db	101	;'e'
  6348   00F7B1  6C                 	db	108	;'l'
  6349   00F7B2  6F                 	db	111	;'o'
  6350   00F7B3  61                 	db	97	;'a'
  6351   00F7B4  64                 	db	100	;'d'
  6352   00F7B5  20                 	db	32
  6353   00F7B6  25                 	db	37
  6354   00F7B7  73                 	db	115	;'s'
  6355   00F7B8  20                 	db	32
  6356   00F7B9  66                 	db	102	;'f'
  6357   00F7BA  6F                 	db	111	;'o'
  6358   00F7BB  72                 	db	114	;'r'
  6359   00F7BC  20                 	db	32
  6360   00F7BD  45                 	db	69	;'E'
  6361   00F7BE  6D                 	db	109	;'m'
  6362   00F7BF  75                 	db	117	;'u'
  6363   00F7C0  6C                 	db	108	;'l'
  6364   00F7C1  61                 	db	97	;'a'
  6365   00F7C2  74                 	db	116	;'t'
  6366   00F7C3  69                 	db	105	;'i'
  6367   00F7C4  6F                 	db	111	;'o'
  6368   00F7C5  6E                 	db	110	;'n'
  6369   00F7C6  20                 	db	32
  6370   00F7C7  4D                 	db	77	;'M'
  6371   00F7C8  6F                 	db	111	;'o'
  6372   00F7C9  64                 	db	100	;'d'
  6373   00F7CA  65                 	db	101	;'e'
  6374   00F7CB  2E                 	db	46
  6375   00F7CC  2E                 	db	46
  6376   00F7CD  2E                 	db	46
  6377   00F7CE  0D                 	db	13
  6378   00F7CF  0A                 	db	10
  6379   00F7D0  00                 	db	0
  6380   00F7D1                     STR_145:
  6381                           
  6382                           ; BSR set to: 7
  6383   00F7D1  44                 	db	68	;'D'
  6384   00F7D2  50                 	db	80	;'P'
  6385   00F7D3  52                 	db	82	;'R'
  6386   00F7D4  20                 	db	32
  6387   00F7D5  3A                 	db	58	;':'
  6388   00F7D6  20                 	db	32
  6389   00F7D7  24                 	db	36
  6390   00F7D8  25                 	db	37
  6391   00F7D9  30                 	db	48	;'0'
  6392   00F7DA  34                 	db	52	;'4'
  6393   00F7DB  58                 	db	88	;'X'
  6394   00F7DC  20                 	db	32
  6395   00F7DD  50                 	db	80	;'P'
  6396   00F7DE  42                 	db	66	;'B'
  6397   00F7DF  52                 	db	82	;'R'
  6398   00F7E0  20                 	db	32
  6399   00F7E1  3A                 	db	58	;':'
  6400   00F7E2  20                 	db	32
  6401   00F7E3  24                 	db	36
  6402   00F7E4  30                 	db	48	;'0'
  6403   00F7E5  30                 	db	48	;'0'
  6404   00F7E6  20                 	db	32
  6405   00F7E7  44                 	db	68	;'D'
  6406   00F7E8  42                 	db	66	;'B'
  6407   00F7E9  52                 	db	82	;'R'
  6408   00F7EA  20                 	db	32
  6409   00F7EB  3A                 	db	58	;':'
  6410   00F7EC  20                 	db	32
  6411   00F7ED  24                 	db	36
  6412   00F7EE  30                 	db	48	;'0'
  6413   00F7EF  30                 	db	48	;'0'
  6414   00F7F0  0D                 	db	13
  6415   00F7F1  0A                 	db	10
  6416   00F7F2  00                 	db	0
  6417   00F7F3                     
  6418                           ; BSR set to: 7
  6419   00F7F3  53                 	db	83	;'S'
  6420   00F7F4  44                 	db	68	;'D'
  6421   00F7F5  20                 	db	32
  6422   00F7F6  43                 	db	67	;'C'
  6423   00F7F7  61                 	db	97	;'a'
  6424   00F7F8  72                 	db	114	;'r'
  6425   00F7F9  64                 	db	100	;'d'
  6426   00F7FA  3A                 	db	58	;':'
  6427   00F7FB  20                 	db	32
  6428   00F7FC  43                 	db	67	;'C'
  6429   00F7FD  4D                 	db	77	;'M'
  6430   00F7FE  44                 	db	68	;'D'
  6431   00F7FF  35                 	db	53	;'5'
  6432   00F800  39                 	db	57	;'9'
  6433   00F801  20                 	db	32
  6434   00F802  72                 	db	114	;'r'
  6435   00F803  65                 	db	101	;'e'
  6436   00F804  73                 	db	115	;'s'
  6437   00F805  70                 	db	112	;'p'
  6438   00F806  6F                 	db	111	;'o'
  6439   00F807  6E                 	db	110	;'n'
  6440   00F808  73                 	db	115	;'s'
  6441   00F809  65                 	db	101	;'e'
  6442   00F80A  20                 	db	32
  6443   00F80B  69                 	db	105	;'i'
  6444   00F80C  73                 	db	115	;'s'
  6445   00F80D  20                 	db	32
  6446   00F80E  25                 	db	37
  6447   00F80F  30                 	db	48	;'0'
  6448   00F810  32                 	db	50	;'2'
  6449   00F811  78                 	db	120	;'x'
  6450   00F812  0A                 	db	10
  6451   00F813  0D                 	db	13
  6452   00F814  00                 	db	0
  6453   00F815                     
  6454                           ; BSR set to: 7
  6455   00F815  70                 	db	112	;'p'
  6456   00F816  61                 	db	97	;'a'
  6457   00F817  72                 	db	114	;'r'
  6458   00F818  74                 	db	116	;'t'
  6459   00F819  69                 	db	105	;'i'
  6460   00F81A  74                 	db	116	;'t'
  6461   00F81B  69                 	db	105	;'i'
  6462   00F81C  6F                 	db	111	;'o'
  6463   00F81D  6E                 	db	110	;'n'
  6464   00F81E  20                 	db	32
  6465   00F81F  73                 	db	115	;'s'
  6466   00F820  74                 	db	116	;'t'
  6467   00F821  61                 	db	97	;'a'
  6468   00F822  72                 	db	114	;'r'
  6469   00F823  74                 	db	116	;'t'
  6470   00F824  73                 	db	115	;'s'
  6471   00F825  20                 	db	32
  6472   00F826  61                 	db	97	;'a'
  6473   00F827  74                 	db	116	;'t'
  6474   00F828  20                 	db	32
  6475   00F829  73                 	db	115	;'s'
  6476   00F82A  65                 	db	101	;'e'
  6477   00F82B  63                 	db	99	;'c'
  6478   00F82C  74                 	db	116	;'t'
  6479   00F82D  6F                 	db	111	;'o'
  6480   00F82E  72                 	db	114	;'r'
  6481   00F82F  20                 	db	32
  6482   00F830  25                 	db	37
  6483   00F831  6C                 	db	108	;'l'
  6484   00F832  64                 	db	100	;'d'
  6485   00F833  0A                 	db	10
  6486   00F834  0D                 	db	13
  6487   00F835  00                 	db	0
  6488   00F836                     STR_146:
  6489                           
  6490                           ; BSR set to: 7
  6491   00F836  50                 	db	80	;'P'
  6492   00F837  49                 	db	73	;'I'
  6493   00F838  43                 	db	67	;'C'
  6494   00F839  20                 	db	32
  6495   00F83A  49                 	db	73	;'I'
  6496   00F83B  2F                 	db	47
  6497   00F83C  46                 	db	70	;'F'
  6498   00F83D  20                 	db	32
  6499   00F83E  53                 	db	83	;'S'
  6500   00F83F  68                 	db	104	;'h'
  6501   00F840  61                 	db	97	;'a'
  6502   00F841  72                 	db	114	;'r'
  6503   00F842  65                 	db	101	;'e'
  6504   00F843  64                 	db	100	;'d'
  6505   00F844  20                 	db	32
  6506   00F845  6D                 	db	109	;'m'
  6507   00F846  65                 	db	101	;'e'
  6508   00F847  6D                 	db	109	;'m'
  6509   00F848  6F                 	db	111	;'o'
  6510   00F849  72                 	db	114	;'r'
  6511   00F84A  79                 	db	121	;'y'
  6512   00F84B  20                 	db	32
  6513   00F84C  3A                 	db	58	;':'
  6514   00F84D  20                 	db	32
  6515   00F84E  24                 	db	36
  6516   00F84F  25                 	db	37
  6517   00F850  30                 	db	48	;'0'
  6518   00F851  36                 	db	54	;'6'
  6519   00F852  6C                 	db	108	;'l'
  6520   00F853  58                 	db	88	;'X'
  6521   00F854  0D                 	db	13
  6522   00F855  0A                 	db	10
  6523   00F856  00                 	db	0
  6524   00F857                     STR_112:
  6525                           
  6526                           ; BSR set to: 7
  6527   00F857  50                 	db	80	;'P'
  6528   00F858  42                 	db	66	;'B'
  6529   00F859  52                 	db	82	;'R'
  6530   00F85A  3D                 	db	61	;'='
  6531   00F85B  24                 	db	36
  6532   00F85C  25                 	db	37
  6533   00F85D  30                 	db	48	;'0'
  6534   00F85E  32                 	db	50	;'2'
  6535   00F85F  58                 	db	88	;'X'
  6536   00F860  20                 	db	32
  6537   00F861  44                 	db	68	;'D'
  6538   00F862  42                 	db	66	;'B'
  6539   00F863  52                 	db	82	;'R'
  6540   00F864  3D                 	db	61	;'='
  6541   00F865  24                 	db	36
  6542   00F866  25                 	db	37
  6543   00F867  30                 	db	48	;'0'
  6544   00F868  32                 	db	50	;'2'
  6545   00F869  58                 	db	88	;'X'
  6546   00F86A  20                 	db	32
  6547   00F86B  44                 	db	68	;'D'
  6548   00F86C  50                 	db	80	;'P'
  6549   00F86D  52                 	db	82	;'R'
  6550   00F86E  3D                 	db	61	;'='
  6551   00F86F  24                 	db	36
  6552   00F870  25                 	db	37
  6553   00F871  30                 	db	48	;'0'
  6554   00F872  34                 	db	52	;'4'
  6555   00F873  58                 	db	88	;'X'
  6556   00F874  0D                 	db	13
  6557   00F875  0A                 	db	10
  6558   00F876  00                 	db	0
  6559   00F877                     STR_36:
  6560                           
  6561                           ; BSR set to: 7
  6562   00F877  66                 	db	102	;'f'
  6563   00F878  5F                 	db	95	;'_'
  6564   00F879  77                 	db	119	;'w'
  6565   00F87A  72                 	db	114	;'r'
  6566   00F87B  69                 	db	105	;'i'
  6567   00F87C  74                 	db	116	;'t'
  6568   00F87D  65                 	db	101	;'e'
  6569   00F87E  28                 	db	40
  6570   00F87F  29                 	db	41
  6571   00F880  3A                 	db	58	;':'
  6572   00F881  20                 	db	32
  6573   00F882  45                 	db	69	;'E'
  6574   00F883  52                 	db	82	;'R'
  6575   00F884  52                 	db	82	;'R'
  6576   00F885  4F                 	db	79	;'O'
  6577   00F886  52                 	db	82	;'R'
  6578   00F887  20                 	db	32
  6579   00F888  72                 	db	114	;'r'
  6580   00F889  65                 	db	101	;'e'
  6581   00F88A  73                 	db	115	;'s'
  6582   00F88B  3D                 	db	61	;'='
  6583   00F88C  25                 	db	37
  6584   00F88D  64                 	db	100	;'d'
  6585   00F88E  2C                 	db	44
  6586   00F88F  20                 	db	32
  6587   00F890  6E                 	db	110	;'n'
  6588   00F891  3D                 	db	61	;'='
  6589   00F892  25                 	db	37
  6590   00F893  64                 	db	100	;'d'
  6591   00F894  0A                 	db	10
  6592   00F895  0D                 	db	13
  6593   00F896  00                 	db	0
  6594   00F897                     STR_110:
  6595                           
  6596                           ; BSR set to: 7
  6597   00F897  52                 	db	82	;'R'
  6598   00F898  65                 	db	101	;'e'
  6599   00F899  6C                 	db	108	;'l'
  6600   00F89A  6F                 	db	111	;'o'
  6601   00F89B  61                 	db	97	;'a'
  6602   00F89C  64                 	db	100	;'d'
  6603   00F89D  20                 	db	32
  6604   00F89E  25                 	db	37
  6605   00F89F  73                 	db	115	;'s'
  6606   00F8A0  20                 	db	32
  6607   00F8A1  66                 	db	102	;'f'
  6608   00F8A2  6F                 	db	111	;'o'
  6609   00F8A3  72                 	db	114	;'r'
  6610   00F8A4  20                 	db	32
  6611   00F8A5  4E                 	db	78	;'N'
  6612   00F8A6  61                 	db	97	;'a'
  6613   00F8A7  74                 	db	116	;'t'
  6614   00F8A8  69                 	db	105	;'i'
  6615   00F8A9  76                 	db	118	;'v'
  6616   00F8AA  65                 	db	101	;'e'
  6617   00F8AB  20                 	db	32
  6618   00F8AC  4D                 	db	77	;'M'
  6619   00F8AD  6F                 	db	111	;'o'
  6620   00F8AE  64                 	db	100	;'d'
  6621   00F8AF  65                 	db	101	;'e'
  6622   00F8B0  2E                 	db	46
  6623   00F8B1  2E                 	db	46
  6624   00F8B2  2E                 	db	46
  6625   00F8B3  0D                 	db	13
  6626   00F8B4  0A                 	db	10
  6627   00F8B5  00                 	db	0
  6628   00F8B6                     STR_135:
  6629                           
  6630                           ; BSR set to: 7
  6631   00F8B6  4E                 	db	78	;'N'
  6632   00F8B7  6F                 	db	111	;'o'
  6633   00F8B8  74                 	db	116	;'t'
  6634   00F8B9  20                 	db	32
  6635   00F8BA  4D                 	db	77	;'M'
  6636   00F8BB  45                 	db	69	;'E'
  6637   00F8BC  5A                 	db	90	;'Z'
  6638   00F8BD  57                 	db	87	;'W'
  6639   00F8BE  36                 	db	54	;'6'
  6640   00F8BF  35                 	db	53	;'5'
  6641   00F8C0  43                 	db	67	;'C'
  6642   00F8C1  5F                 	db	95	;'_'
  6643   00F8C2  52                 	db	82	;'R'
  6644   00F8C3  41                 	db	65	;'A'
  6645   00F8C4  4D                 	db	77	;'M'
  6646   00F8C5  20                 	db	32
  6647   00F8C6  66                 	db	102	;'f'
  6648   00F8C7  6F                 	db	111	;'o'
  6649   00F8C8  72                 	db	114	;'r'
  6650   00F8C9  6D                 	db	109	;'m'
  6651   00F8CA  61                 	db	97	;'a'
  6652   00F8CB  74                 	db	116	;'t'
  6653   00F8CC  20                 	db	32
  6654   00F8CD  66                 	db	102	;'f'
  6655   00F8CE  69                 	db	105	;'i'
  6656   00F8CF  6C                 	db	108	;'l'
  6657   00F8D0  65                 	db	101	;'e'
  6658   00F8D1  2E                 	db	46
  6659   00F8D2  0D                 	db	13
  6660   00F8D3  0A                 	db	10
  6661   00F8D4  00                 	db	0
  6662   00F8D5                     STR_38:
  6663                           
  6664                           ; BSR set to: 7
  6665   00F8D5  66                 	db	102	;'f'
  6666   00F8D6  5F                 	db	95	;'_'
  6667   00F8D7  72                 	db	114	;'r'
  6668   00F8D8  65                 	db	101	;'e'
  6669   00F8D9  61                 	db	97	;'a'
  6670   00F8DA  64                 	db	100	;'d'
  6671   00F8DB  28                 	db	40
  6672   00F8DC  29                 	db	41
  6673   00F8DD  3A                 	db	58	;':'
  6674   00F8DE  20                 	db	32
  6675   00F8DF  45                 	db	69	;'E'
  6676   00F8E0  52                 	db	82	;'R'
  6677   00F8E1  52                 	db	82	;'R'
  6678   00F8E2  4F                 	db	79	;'O'
  6679   00F8E3  52                 	db	82	;'R'
  6680   00F8E4  20                 	db	32
  6681   00F8E5  72                 	db	114	;'r'
  6682   00F8E6  65                 	db	101	;'e'
  6683   00F8E7  73                 	db	115	;'s'
  6684   00F8E8  3D                 	db	61	;'='
  6685   00F8E9  25                 	db	37
  6686   00F8EA  64                 	db	100	;'d'
  6687   00F8EB  2C                 	db	44
  6688   00F8EC  20                 	db	32
  6689   00F8ED  6E                 	db	110	;'n'
  6690   00F8EE  3D                 	db	61	;'='
  6691   00F8EF  25                 	db	37
  6692   00F8F0  64                 	db	100	;'d'
  6693   00F8F1  0A                 	db	10
  6694   00F8F2  0D                 	db	13
  6695   00F8F3  00                 	db	0
  6696   00F8F4                     
  6697                           ; BSR set to: 7
  6698   00F8F4  66                 	db	102	;'f'
  6699   00F8F5  61                 	db	97	;'a'
  6700   00F8F6  69                 	db	105	;'i'
  6701   00F8F7  6C                 	db	108	;'l'
  6702   00F8F8  65                 	db	101	;'e'
  6703   00F8F9  64                 	db	100	;'d'
  6704   00F8FA  20                 	db	32
  6705   00F8FB  74                 	db	116	;'t'
  6706   00F8FC  6F                 	db	111	;'o'
  6707   00F8FD  20                 	db	32
  6708   00F8FE  77                 	db	119	;'w'
  6709   00F8FF  72                 	db	114	;'r'
  6710   00F900  69                 	db	105	;'i'
  6711   00F901  74                 	db	116	;'t'
  6712   00F902  65                 	db	101	;'e'
  6713   00F903  20                 	db	32
  6714   00F904  73                 	db	115	;'s'
  6715   00F905  65                 	db	101	;'e'
  6716   00F906  63                 	db	99	;'c'
  6717   00F907  74                 	db	116	;'t'
  6718   00F908  6F                 	db	111	;'o'
  6719   00F909  72                 	db	114	;'r'
  6720   00F90A  20                 	db	32
  6721   00F90B  25                 	db	37
  6722   00F90C  6C                 	db	108	;'l'
  6723   00F90D  64                 	db	100	;'d'
  6724   00F90E  0A                 	db	10
  6725   00F90F  0D                 	db	13
  6726   00F910  00                 	db	0
  6727   00F911                     STR_134:
  6728                           
  6729                           ; BSR set to: 7
  6730   00F911  0D                 	db	13
  6731   00F912  0A                 	db	10
  6732   00F913  25                 	db	37
  6733   00F914  73                 	db	115	;'s'
  6734   00F915  20                 	db	32
  6735   00F916  3A                 	db	58	;':'
  6736   00F917  20                 	db	32
  6737   00F918  53                 	db	83	;'S'
  6738   00F919  69                 	db	105	;'i'
  6739   00F91A  7A                 	db	122	;'z'
  6740   00F91B  65                 	db	101	;'e'
  6741   00F91C  20                 	db	32
  6742   00F91D  3D                 	db	61	;'='
  6743   00F91E  20                 	db	32
  6744   00F91F  24                 	db	36
  6745   00F920  25                 	db	37
  6746   00F921  30                 	db	48	;'0'
  6747   00F922  34                 	db	52	;'4'
  6748   00F923  58                 	db	88	;'X'
  6749   00F924  20                 	db	32
  6750   00F925  62                 	db	98	;'b'
  6751   00F926  79                 	db	121	;'y'
  6752   00F927  74                 	db	116	;'t'
  6753   00F928  65                 	db	101	;'e'
  6754   00F929  73                 	db	115	;'s'
  6755   00F92A  2E                 	db	46
  6756   00F92B  0D                 	db	13
  6757   00F92C  0A                 	db	10
  6758   00F92D  00                 	db	0
  6759   00F92E                     STR_136:
  6760                           
  6761                           ; BSR set to: 7
  6762   00F92E  46                 	db	70	;'F'
  6763   00F92F  49                 	db	73	;'I'
  6764   00F930  6C                 	db	108	;'l'
  6765   00F931  65                 	db	101	;'e'
  6766   00F932  20                 	db	32
  6767   00F933  6C                 	db	108	;'l'
  6768   00F934  6F                 	db	111	;'o'
  6769   00F935  61                 	db	97	;'a'
  6770   00F936  64                 	db	100	;'d'
  6771   00F937  20                 	db	32
  6772   00F938  61                 	db	97	;'a'
  6773   00F939  64                 	db	100	;'d'
  6774   00F93A  64                 	db	100	;'d'
  6775   00F93B  72                 	db	114	;'r'
  6776   00F93C  65                 	db	101	;'e'
  6777   00F93D  73                 	db	115	;'s'
  6778   00F93E  73                 	db	115	;'s'
  6779   00F93F  20                 	db	32
  6780   00F940  3A                 	db	58	;':'
  6781   00F941  20                 	db	32
  6782   00F942  24                 	db	36
  6783   00F943  25                 	db	37
  6784   00F944  30                 	db	48	;'0'
  6785   00F945  36                 	db	54	;'6'
  6786   00F946  6C                 	db	108	;'l'
  6787   00F947  58                 	db	88	;'X'
  6788   00F948  0D                 	db	13
  6789   00F949  0A                 	db	10
  6790   00F94A  00                 	db	0
  6791   00F94B                     
  6792                           ; BSR set to: 7
  6793   00F94B  66                 	db	102	;'f'
  6794   00F94C  61                 	db	97	;'a'
  6795   00F94D  69                 	db	105	;'i'
  6796   00F94E  6C                 	db	108	;'l'
  6797   00F94F  65                 	db	101	;'e'
  6798   00F950  64                 	db	100	;'d'
  6799   00F951  20                 	db	32
  6800   00F952  74                 	db	116	;'t'
  6801   00F953  6F                 	db	111	;'o'
  6802   00F954  20                 	db	32
  6803   00F955  72                 	db	114	;'r'
  6804   00F956  65                 	db	101	;'e'
  6805   00F957  61                 	db	97	;'a'
  6806   00F958  64                 	db	100	;'d'
  6807   00F959  20                 	db	32
  6808   00F95A  73                 	db	115	;'s'
  6809   00F95B  65                 	db	101	;'e'
  6810   00F95C  63                 	db	99	;'c'
  6811   00F95D  74                 	db	116	;'t'
  6812   00F95E  6F                 	db	111	;'o'
  6813   00F95F  72                 	db	114	;'r'
  6814   00F960  20                 	db	32
  6815   00F961  25                 	db	37
  6816   00F962  6C                 	db	108	;'l'
  6817   00F963  64                 	db	100	;'d'
  6818   00F964  0A                 	db	10
  6819   00F965  0D                 	db	13
  6820   00F966  00                 	db	0
  6821   00F967                     
  6822                           ; BSR set to: 7
  6823   00F967  0A                 	db	10
  6824   00F968  0D                 	db	13
  6825   00F969  53                 	db	83	;'S'
  6826   00F96A  44                 	db	68	;'D'
  6827   00F96B  20                 	db	32
  6828   00F96C  43                 	db	67	;'C'
  6829   00F96D  61                 	db	97	;'a'
  6830   00F96E  72                 	db	114	;'r'
  6831   00F96F  64                 	db	100	;'d'
  6832   00F970  3A                 	db	58	;':'
  6833   00F971  20                 	db	32
  6834   00F972  69                 	db	105	;'i'
  6835   00F973  6E                 	db	110	;'n'
  6836   00F974  69                 	db	105	;'i'
  6837   00F975  74                 	db	116	;'t'
  6838   00F976  69                 	db	105	;'i'
  6839   00F977  61                 	db	97	;'a'
  6840   00F978  6C                 	db	108	;'l'
  6841   00F979  69                 	db	105	;'i'
  6842   00F97A  7A                 	db	122	;'z'
  6843   00F97B  65                 	db	101	;'e'
  6844   00F97C  20                 	db	32
  6845   00F97D  2E                 	db	46
  6846   00F97E  2E                 	db	46
  6847   00F97F  2E                 	db	46
  6848   00F980  0A                 	db	10
  6849   00F981  0D                 	db	13
  6850   00F982  00                 	db	0
  6851   00F983                     STR_161:
  6852                           
  6853                           ; BSR set to: 7
  6854   00F983  4E                 	db	78	;'N'
  6855   00F984  6F                 	db	111	;'o'
  6856   00F985  20                 	db	32
  6857   00F986  50                 	db	80	;'P'
  6858   00F987  72                 	db	114	;'r'
  6859   00F988  6F                 	db	111	;'o'
  6860   00F989  67                 	db	103	;'g'
  6861   00F98A  72                 	db	114	;'r'
  6862   00F98B  61                 	db	97	;'a'
  6863   00F98C  6D                 	db	109	;'m'
  6864   00F98D  20                 	db	32
  6865   00F98E  74                 	db	116	;'t'
  6866   00F98F  6F                 	db	111	;'o'
  6867   00F990  20                 	db	32
  6868   00F991  74                 	db	116	;'t'
  6869   00F992  65                 	db	101	;'e'
  6870   00F993  72                 	db	114	;'r'
  6871   00F994  6D                 	db	109	;'m'
  6872   00F995  69                 	db	105	;'i'
  6873   00F996  6E                 	db	110	;'n'
  6874   00F997  61                 	db	97	;'a'
  6875   00F998  74                 	db	116	;'t'
  6876   00F999  65                 	db	101	;'e'
  6877   00F99A  2E                 	db	46
  6878   00F99B  0D                 	db	13
  6879   00F99C  0A                 	db	10
  6880   00F99D  00                 	db	0
  6881   00F99E                     STR_85:
  6882                           
  6883                           ; BSR set to: 7
  6884   00F99E  46                 	db	70	;'F'
  6885   00F99F  61                 	db	97	;'a'
  6886   00F9A0  69                 	db	105	;'i'
  6887   00F9A1  6C                 	db	108	;'l'
  6888   00F9A2  65                 	db	101	;'e'
  6889   00F9A3  64                 	db	100	;'d'
  6890   00F9A4  20                 	db	32
  6891   00F9A5  74                 	db	116	;'t'
  6892   00F9A6  6F                 	db	111	;'o'
  6893   00F9A7  20                 	db	32
  6894   00F9A8  6D                 	db	109	;'m'
  6895   00F9A9  6F                 	db	111	;'o'
  6896   00F9AA  75                 	db	117	;'u'
  6897   00F9AB  6E                 	db	110	;'n'
  6898   00F9AC  74                 	db	116	;'t'
  6899   00F9AD  20                 	db	32
  6900   00F9AE  53                 	db	83	;'S'
  6901   00F9AF  44                 	db	68	;'D'
  6902   00F9B0  20                 	db	32
  6903   00F9B1  43                 	db	67	;'C'
  6904   00F9B2  61                 	db	97	;'a'
  6905   00F9B3  72                 	db	114	;'r'
  6906   00F9B4  64                 	db	100	;'d'
  6907   00F9B5  2E                 	db	46
  6908   00F9B6  0A                 	db	10
  6909   00F9B7  0D                 	db	13
  6910   00F9B8  00                 	db	0
  6911   00F9B9                     
  6912                           ; BSR set to: 7
  6913   00F9B9  53                 	db	83	;'S'
  6914   00F9BA  44                 	db	68	;'D'
  6915   00F9BB  20                 	db	32
  6916   00F9BC  43                 	db	67	;'C'
  6917   00F9BD  61                 	db	97	;'a'
  6918   00F9BE  72                 	db	114	;'r'
  6919   00F9BF  64                 	db	100	;'d'
  6920   00F9C0  3A                 	db	58	;':'
  6921   00F9C1  20                 	db	32
  6922   00F9C2  41                 	db	65	;'A'
  6923   00F9C3  43                 	db	67	;'C'
  6924   00F9C4  4D                 	db	77	;'M'
  6925   00F9C5  44                 	db	68	;'D'
  6926   00F9C6  34                 	db	52	;'4'
  6927   00F9C7  31                 	db	49	;'1'
  6928   00F9C8  2C                 	db	44
  6929   00F9C9  20                 	db	32
  6930   00F9CA  52                 	db	82	;'R'
  6931   00F9CB  31                 	db	49	;'1'
  6932   00F9CC  3D                 	db	61	;'='
  6933   00F9CD  25                 	db	37
  6934   00F9CE  30                 	db	48	;'0'
  6935   00F9CF  32                 	db	50	;'2'
  6936   00F9D0  78                 	db	120	;'x'
  6937   00F9D1  0A                 	db	10
  6938   00F9D2  0D                 	db	13
  6939   00F9D3  00                 	db	0
  6940   00F9D4                     
  6941                           ; BSR set to: 7
  6942   00F9D4  66                 	db	102	;'f'
  6943   00F9D5  61                 	db	97	;'a'
  6944   00F9D6  69                 	db	105	;'i'
  6945   00F9D7  6C                 	db	108	;'l'
  6946   00F9D8  65                 	db	101	;'e'
  6947   00F9D9  64                 	db	100	;'d'
  6948   00F9DA  20                 	db	32
  6949   00F9DB  74                 	db	116	;'t'
  6950   00F9DC  6F                 	db	111	;'o'
  6951   00F9DD  20                 	db	32
  6952   00F9DE  72                 	db	114	;'r'
  6953   00F9DF  65                 	db	101	;'e'
  6954   00F9E0  61                 	db	97	;'a'
  6955   00F9E1  64                 	db	100	;'d'
  6956   00F9E2  20                 	db	32
  6957   00F9E3  73                 	db	115	;'s'
  6958   00F9E4  65                 	db	101	;'e'
  6959   00F9E5  63                 	db	99	;'c'
  6960   00F9E6  74                 	db	116	;'t'
  6961   00F9E7  6F                 	db	111	;'o'
  6962   00F9E8  72                 	db	114	;'r'
  6963   00F9E9  20                 	db	32
  6964   00F9EA  30                 	db	48	;'0'
  6965   00F9EB  0A                 	db	10
  6966   00F9EC  0D                 	db	13
  6967   00F9ED  00                 	db	0
  6968   00F9EE                     STR_75:
  6969                           
  6970                           ; BSR set to: 7
  6971   00F9EE  0D                 	db	13
  6972   00F9EF  0A                 	db	10
  6973   00F9F0  41                 	db	65	;'A'
  6974   00F9F1  73                 	db	115	;'s'
  6975   00F9F2  73                 	db	115	;'s'
  6976   00F9F3  65                 	db	101	;'e'
  6977   00F9F4  72                 	db	114	;'r'
  6978   00F9F5  74                 	db	116	;'t'
  6979   00F9F6  20                 	db	32
  6980   00F9F7  4E                 	db	78	;'N'
  6981   00F9F8  4D                 	db	77	;'M'
  6982   00F9F9  49                 	db	73	;'I'
  6983   00F9FA  20                 	db	32
  6984   00F9FB  69                 	db	105	;'i'
  6985   00F9FC  6E                 	db	110	;'n'
  6986   00F9FD  74                 	db	116	;'t'
  6987   00F9FE  65                 	db	101	;'e'
  6988   00F9FF  72                 	db	114	;'r'
  6989   00FA00  72                 	db	114	;'r'
  6990   00FA01  75                 	db	117	;'u'
  6991   00FA02  70                 	db	112	;'p'
  6992   00FA03  74                 	db	116	;'t'
  6993   00FA04  2E                 	db	46
  6994   00FA05  0D                 	db	13
  6995   00FA06  0A                 	db	10
  6996   00FA07  00                 	db	0
  6997   00FA08                     STR_141:
  6998                           
  6999                           ; BSR set to: 7
  7000   00FA08  57                 	db	87	;'W'
  7001   00FA09  36                 	db	54	;'6'
  7002   00FA0A  35                 	db	53	;'5'
  7003   00FA0B  43                 	db	67	;'C'
  7004   00FA0C  30                 	db	48	;'0'
  7005   00FA0D  32                 	db	50	;'2'
  7006   00FA0E  20                 	db	32
  7007   00FA0F  28                 	db	40
  7008   00FA10  45                 	db	69	;'E'
  7009   00FA11  6D                 	db	109	;'m'
  7010   00FA12  75                 	db	117	;'u'
  7011   00FA13  6C                 	db	108	;'l'
  7012   00FA14  61                 	db	97	;'a'
  7013   00FA15  74                 	db	116	;'t'
  7014   00FA16  69                 	db	105	;'i'
  7015   00FA17  6F                 	db	111	;'o'
  7016   00FA18  6E                 	db	110	;'n'
  7017   00FA19  20                 	db	32
  7018   00FA1A  4D                 	db	77	;'M'
  7019   00FA1B  6F                 	db	111	;'o'
  7020   00FA1C  64                 	db	100	;'d'
  7021   00FA1D  65                 	db	101	;'e'
  7022   00FA1E  29                 	db	41
  7023   00FA1F  0A                 	db	10
  7024   00FA20  0D                 	db	13
  7025   00FA21  00                 	db	0
  7026   00FA22                     STR_155:
  7027                           
  7028                           ; BSR set to: 7
  7029   00FA22  42                 	db	66	;'B'
  7030   00FA23  6F                 	db	111	;'o'
  7031   00FA24  74                 	db	116	;'t'
  7032   00FA25  68                 	db	104	;'h'
  7033   00FA26  20                 	db	32
  7034   00FA27  57                 	db	87	;'W'
  7035   00FA28  36                 	db	54	;'6'
  7036   00FA29  35                 	db	53	;'5'
  7037   00FA2A  43                 	db	67	;'C'
  7038   00FA2B  30                 	db	48	;'0'
  7039   00FA2C  32                 	db	50	;'2'
  7040   00FA2D  20                 	db	32
  7041   00FA2E  61                 	db	97	;'a'
  7042   00FA2F  6E                 	db	110	;'n'
  7043   00FA30  64                 	db	100	;'d'
  7044   00FA31  20                 	db	32
  7045   00FA32  57                 	db	87	;'W'
  7046   00FA33  36                 	db	54	;'6'
  7047   00FA34  35                 	db	53	;'5'
  7048   00FA35  43                 	db	67	;'C'
  7049   00FA36  38                 	db	56	;'8'
  7050   00FA37  31                 	db	49	;'1'
  7051   00FA38  36                 	db	54	;'6'
  7052   00FA39  0A                 	db	10
  7053   00FA3A  0D                 	db	13
  7054   00FA3B  00                 	db	0
  7055   00FA3C                     STR_41:
  7056                           
  7057                           ; BSR set to: 7
  7058   00FA3C  0A                 	db	10
  7059   00FA3D  4D                 	db	77	;'M'
  7060   00FA3E  65                 	db	101	;'e'
  7061   00FA3F  6D                 	db	109	;'m'
  7062   00FA40  6F                 	db	111	;'o'
  7063   00FA41  72                 	db	114	;'r'
  7064   00FA42  79                 	db	121	;'y'
  7065   00FA43  20                 	db	32
  7066   00FA44  65                 	db	101	;'e'
  7067   00FA45  72                 	db	114	;'r'
  7068   00FA46  72                 	db	114	;'r'
  7069   00FA47  6F                 	db	111	;'o'
  7070   00FA48  72                 	db	114	;'r'
  7071   00FA49  20                 	db	32
  7072   00FA4A  61                 	db	97	;'a'
  7073   00FA4B  74                 	db	116	;'t'
  7074   00FA4C  20                 	db	32
  7075   00FA4D  24                 	db	36
  7076   00FA4E  25                 	db	37
  7077   00FA4F  30                 	db	48	;'0'
  7078   00FA50  36                 	db	54	;'6'
  7079   00FA51  6C                 	db	108	;'l'
  7080   00FA52  58                 	db	88	;'X'
  7081   00FA53  0A                 	db	10
  7082   00FA54  0D                 	db	13
  7083   00FA55  00                 	db	0
  7084   00FA56                     STR_2:
  7085                           
  7086                           ; BSR set to: 7
  7087   00FA56  77                 	db	119	;'w'
  7088   00FA57  61                 	db	97	;'a'
  7089   00FA58  69                 	db	105	;'i'
  7090   00FA59  74                 	db	116	;'t'
  7091   00FA5A  20                 	db	32
  7092   00FA5B  66                 	db	102	;'f'
  7093   00FA5C  6F                 	db	111	;'o'
  7094   00FA5D  72                 	db	114	;'r'
  7095   00FA5E  20                 	db	32
  7096   00FA5F  70                 	db	112	;'p'
  7097   00FA60  72                 	db	114	;'r'
  7098   00FA61  6F                 	db	111	;'o'
  7099   00FA62  67                 	db	103	;'g'
  7100   00FA63  72                 	db	114	;'r'
  7101   00FA64  61                 	db	97	;'a'
  7102   00FA65  6D                 	db	109	;'m'
  7103   00FA66  6D                 	db	109	;'m'
  7104   00FA67  65                 	db	101	;'e'
  7105   00FA68  72                 	db	114	;'r'
  7106   00FA69  20                 	db	32
  7107   00FA6A  2E                 	db	46
  7108   00FA6B  2E                 	db	46
  7109   00FA6C  2E                 	db	46
  7110   00FA6D  0D                 	db	13
  7111   00FA6E  0A                 	db	10
  7112   00FA6F  00                 	db	0
  7113   00FA70                     
  7114                           ; BSR set to: 7
  7115   00FA70  64                 	db	100	;'d'
  7116   00FA71  69                 	db	105	;'i'
  7117   00FA72  73                 	db	115	;'s'
  7118   00FA73  6B                 	db	107	;'k'
  7119   00FA74  5F                 	db	95	;'_'
  7120   00FA75  69                 	db	105	;'i'
  7121   00FA76  6E                 	db	110	;'n'
  7122   00FA77  69                 	db	105	;'i'
  7123   00FA78  74                 	db	116	;'t'
  7124   00FA79  69                 	db	105	;'i'
  7125   00FA7A  61                 	db	97	;'a'
  7126   00FA7B  6C                 	db	108	;'l'
  7127   00FA7C  69                 	db	105	;'i'
  7128   00FA7D  7A                 	db	122	;'z'
  7129   00FA7E  65                 	db	101	;'e'
  7130   00FA7F  28                 	db	40
  7131   00FA80  25                 	db	37
  7132   00FA81  64                 	db	100	;'d'
  7133   00FA82  29                 	db	41
  7134   00FA83  2E                 	db	46
  7135   00FA84  2E                 	db	46
  7136   00FA85  2E                 	db	46
  7137   00FA86  0A                 	db	10
  7138   00FA87  0D                 	db	13
  7139   00FA88  00                 	db	0
  7140   00FA89                     STR_80:
  7141                           
  7142                           ; BSR set to: 7
  7143   00FA89  57                 	db	87	;'W'
  7144   00FA8A  6F                 	db	111	;'o'
  7145   00FA8B  72                 	db	114	;'r'
  7146   00FA8C  6B                 	db	107	;'k'
  7147   00FA8D  20                 	db	32
  7148   00FA8E  6F                 	db	111	;'o'
  7149   00FA8F  6E                 	db	110	;'n'
  7150   00FA90  20                 	db	32
  7151   00FA91  6F                 	db	111	;'o'
  7152   00FA92  6E                 	db	110	;'n'
  7153   00FA93  6C                 	db	108	;'l'
  7154   00FA94  79                 	db	121	;'y'
  7155   00FA95  20                 	db	32
  7156   00FA96  57                 	db	87	;'W'
  7157   00FA97  36                 	db	54	;'6'
  7158   00FA98  35                 	db	53	;'5'
  7159   00FA99  43                 	db	67	;'C'
  7160   00FA9A  38                 	db	56	;'8'
  7161   00FA9B  31                 	db	49	;'1'
  7162   00FA9C  36                 	db	54	;'6'
  7163   00FA9D  2E                 	db	46
  7164   00FA9E  2E                 	db	46
  7165   00FA9F  0D                 	db	13
  7166   00FAA0  0A                 	db	10
  7167   00FAA1  00                 	db	0
  7168   00FAA2                     STR_87:
  7169                           
  7170                           ; BSR set to: 7
  7171   00FAA2  25                 	db	37
  7172   00FAA3  73                 	db	115	;'s'
  7173   00FAA4  20                 	db	32
  7174   00FAA5  66                 	db	102	;'f'
  7175   00FAA6  69                 	db	105	;'i'
  7176   00FAA7  6C                 	db	108	;'l'
  7177   00FAA8  65                 	db	101	;'e'
  7178   00FAA9  20                 	db	32
  7179   00FAAA  69                 	db	105	;'i'
  7180   00FAAB  73                 	db	115	;'s'
  7181   00FAAC  20                 	db	32
  7182   00FAAD  6E                 	db	110	;'n'
  7183   00FAAE  6F                 	db	111	;'o'
  7184   00FAAF  74                 	db	116	;'t'
  7185   00FAB0  20                 	db	32
  7186   00FAB1  66                 	db	102	;'f'
  7187   00FAB2  6F                 	db	111	;'o'
  7188   00FAB3  75                 	db	117	;'u'
  7189   00FAB4  6E                 	db	110	;'n'
  7190   00FAB5  64                 	db	100	;'d'
  7191   00FAB6  2E                 	db	46
  7192   00FAB7  2E                 	db	46
  7193   00FAB8  0D                 	db	13
  7194   00FAB9  0A                 	db	10
  7195   00FABA  00                 	db	0
  7196   00FABB                     STR_40:
  7197                           
  7198                           ; BSR set to: 7
  7199   00FABB  4D                 	db	77	;'M'
  7200   00FABC  65                 	db	101	;'e'
  7201   00FABD  6D                 	db	109	;'m'
  7202   00FABE  6F                 	db	111	;'o'
  7203   00FABF  72                 	db	114	;'r'
  7204   00FAC0  79                 	db	121	;'y'
  7205   00FAC1  20                 	db	32
  7206   00FAC2  24                 	db	36
  7207   00FAC3  30                 	db	48	;'0'
  7208   00FAC4  30                 	db	48	;'0'
  7209   00FAC5  30                 	db	48	;'0'
  7210   00FAC6  30                 	db	48	;'0'
  7211   00FAC7  30                 	db	48	;'0'
  7212   00FAC8  30                 	db	48	;'0'
  7213   00FAC9  20                 	db	32
  7214   00FACA  2D                 	db	45
  7215   00FACB  20                 	db	32
  7216   00FACC  24                 	db	36
  7217   00FACD  25                 	db	37
  7218   00FACE  30                 	db	48	;'0'
  7219   00FACF  36                 	db	54	;'6'
  7220   00FAD0  6C                 	db	108	;'l'
  7221   00FAD1  58                 	db	88	;'X'
  7222   00FAD2  0D                 	db	13
  7223   00FAD3  00                 	db	0
  7224   00FAD4                     
  7225                           ; BSR set to: 7
  7226   00FAD4  53                 	db	83	;'S'
  7227   00FAD5  44                 	db	68	;'D'
  7228   00FAD6  20                 	db	32
  7229   00FAD7  43                 	db	67	;'C'
  7230   00FAD8  61                 	db	97	;'a'
  7231   00FAD9  72                 	db	114	;'r'
  7232   00FADA  64                 	db	100	;'d'
  7233   00FADB  3A                 	db	58	;':'
  7234   00FADC  20                 	db	32
  7235   00FADD  6E                 	db	110	;'n'
  7236   00FADE  6F                 	db	111	;'o'
  7237   00FADF  74                 	db	116	;'t'
  7238   00FAE0  20                 	db	32
  7239   00FAE1  73                 	db	115	;'s'
  7240   00FAE2  75                 	db	117	;'u'
  7241   00FAE3  70                 	db	112	;'p'
  7242   00FAE4  6F                 	db	111	;'o'
  7243   00FAE5  70                 	db	112	;'p'
  7244   00FAE6  72                 	db	114	;'r'
  7245   00FAE7  74                 	db	116	;'t'
  7246   00FAE8  65                 	db	101	;'e'
  7247   00FAE9  64                 	db	100	;'d'
  7248   00FAEA  0A                 	db	10
  7249   00FAEB  0D                 	db	13
  7250   00FAEC  00                 	db	0
  7251   00FAED                     
  7252                           ; BSR set to: 7
  7253   00FAED  53                 	db	83	;'S'
  7254   00FAEE  44                 	db	68	;'D'
  7255   00FAEF  20                 	db	32
  7256   00FAF0  43                 	db	67	;'C'
  7257   00FAF1  61                 	db	97	;'a'
  7258   00FAF2  72                 	db	114	;'r'
  7259   00FAF3  64                 	db	100	;'d'
  7260   00FAF4  3A                 	db	58	;':'
  7261   00FAF5  20                 	db	32
  7262   00FAF6  43                 	db	67	;'C'
  7263   00FAF7  4D                 	db	77	;'M'
  7264   00FAF8  44                 	db	68	;'D'
  7265   00FAF9  30                 	db	48	;'0'
  7266   00FAFA  2C                 	db	44
  7267   00FAFB  20                 	db	32
  7268   00FAFC  52                 	db	82	;'R'
  7269   00FAFD  31                 	db	49	;'1'
  7270   00FAFE  3D                 	db	61	;'='
  7271   00FAFF  25                 	db	37
  7272   00FB00  30                 	db	48	;'0'
  7273   00FB01  32                 	db	50	;'2'
  7274   00FB02  78                 	db	120	;'x'
  7275   00FB03  0A                 	db	10
  7276   00FB04  0D                 	db	13
  7277   00FB05  00                 	db	0
  7278   00FB06                     STR_198:
  7279                           
  7280                           ; BSR set to: 7
  7281   00FB06  25                 	db	37
  7282   00FB07  73                 	db	115	;'s'
  7283   00FB08  25                 	db	37
  7284   00FB09  35                 	db	53	;'5'
  7285   00FB0A  33                 	db	51	;'3'
  7286   00FB0B  73                 	db	115	;'s'
  7287   00FB0C  20                 	db	32
  7288   00FB0D  43                 	db	67	;'C'
  7289   00FB0E  48                 	db	72	;'H'
  7290   00FB0F  45                 	db	69	;'E'
  7291   00FB10  43                 	db	67	;'C'
  7292   00FB11  4B                 	db	75	;'K'
  7293   00FB12  53                 	db	83	;'S'
  7294   00FB13  55                 	db	85	;'U'
  7295   00FB14  4D                 	db	77	;'M'
  7296   00FB15  3A                 	db	58	;':'
  7297   00FB16  20                 	db	32
  7298   00FB17  25                 	db	37
  7299   00FB18  30                 	db	48	;'0'
  7300   00FB19  32                 	db	50	;'2'
  7301   00FB1A  78                 	db	120	;'x'
  7302   00FB1B  0A                 	db	10
  7303   00FB1C  0D                 	db	13
  7304   00FB1D  00                 	db	0
  7305   00FB1E                     STR_79:
  7306                           
  7307                           ; BSR set to: 7
  7308   00FB1E  49                 	db	73	;'I'
  7309   00FB1F  6E                 	db	110	;'n'
  7310   00FB20  76                 	db	118	;'v'
  7311   00FB21  61                 	db	97	;'a'
  7312   00FB22  6C                 	db	108	;'l'
  7313   00FB23  69                 	db	105	;'i'
  7314   00FB24  64                 	db	100	;'d'
  7315   00FB25  20                 	db	32
  7316   00FB26  4D                 	db	77	;'M'
  7317   00FB27  45                 	db	69	;'E'
  7318   00FB28  5A                 	db	90	;'Z'
  7319   00FB29  57                 	db	87	;'W'
  7320   00FB2A  36                 	db	54	;'6'
  7321   00FB2B  35                 	db	53	;'5'
  7322   00FB2C  43                 	db	67	;'C'
  7323   00FB2D  20                 	db	32
  7324   00FB2E  66                 	db	102	;'f'
  7325   00FB2F  69                 	db	105	;'i'
  7326   00FB30  6C                 	db	108	;'l'
  7327   00FB31  65                 	db	101	;'e'
  7328   00FB32  2E                 	db	46
  7329   00FB33  0D                 	db	13
  7330   00FB34  0A                 	db	10
  7331   00FB35  00                 	db	0
  7332   00FB36                     STR_116:
  7333                           
  7334                           ; BSR set to: 7
  7335   00FB36  20                 	db	32
  7336   00FB37  20                 	db	32
  7337   00FB38  43                 	db	67	;'C'
  7338   00FB39  44                 	db	68	;'D'
  7339   00FB3A  20                 	db	32
  7340   00FB3B  5B                 	db	91	;'['
  7341   00FB3C  64                 	db	100	;'d'
  7342   00FB3D  69                 	db	105	;'i'
  7343   00FB3E  72                 	db	114	;'r'
  7344   00FB3F  65                 	db	101	;'e'
  7345   00FB40  63                 	db	99	;'c'
  7346   00FB41  74                 	db	116	;'t'
  7347   00FB42  6F                 	db	111	;'o'
  7348   00FB43  72                 	db	114	;'r'
  7349   00FB44  79                 	db	121	;'y'
  7350   00FB45  20                 	db	32
  7351   00FB46  6E                 	db	110	;'n'
  7352   00FB47  61                 	db	97	;'a'
  7353   00FB48  6D                 	db	109	;'m'
  7354   00FB49  65                 	db	101	;'e'
  7355   00FB4A  5D                 	db	93	;']'
  7356   00FB4B  0A                 	db	10
  7357   00FB4C  0D                 	db	13
  7358   00FB4D  00                 	db	0
  7359   00FB4E                     STR_175:
  7360                           
  7361                           ; BSR set to: 7
  7362   00FB4E  70                 	db	112	;'p'
  7363   00FB4F  68                 	db	104	;'h'
  7364   00FB50  79                 	db	121	;'y'
  7365   00FB51  73                 	db	115	;'s'
  7366   00FB52  69                 	db	105	;'i'
  7367   00FB53  63                 	db	99	;'c'
  7368   00FB54  61                 	db	97	;'a'
  7369   00FB55  6C                 	db	108	;'l'
  7370   00FB56  20                 	db	32
  7371   00FB57  64                 	db	100	;'d'
  7372   00FB58  72                 	db	114	;'r'
  7373   00FB59  69                 	db	105	;'i'
  7374   00FB5A  76                 	db	118	;'v'
  7375   00FB5B  65                 	db	101	;'e'
  7376   00FB5C  72                 	db	114	;'r'
  7377   00FB5D  20                 	db	32
  7378   00FB5E  21                 	db	33
  7379   00FB5F  3D                 	db	61	;'='
  7380   00FB60  20                 	db	32
  7381   00FB61  30                 	db	48	;'0'
  7382   00FB62  0A                 	db	10
  7383   00FB63  0D                 	db	13
  7384   00FB64  00                 	db	0
  7385   00FB65                     STR_71:
  7386                           
  7387                           ; BSR set to: 7
  7388   00FB65  0D                 	db	13
  7389   00FB66  0A                 	db	10
  7390   00FB67  55                 	db	85	;'U'
  7391   00FB68  73                 	db	115	;'s'
  7392   00FB69  65                 	db	101	;'e'
  7393   00FB6A  20                 	db	32
  7394   00FB6B  4E                 	db	78	;'N'
  7395   00FB6C  43                 	db	67	;'C'
  7396   00FB6D  4F                 	db	79	;'O'
  7397   00FB6E  31                 	db	49	;'1'
  7398   00FB6F  20                 	db	32
  7399   00FB70  25                 	db	37
  7400   00FB71  32                 	db	50	;'2'
  7401   00FB72  2E                 	db	46
  7402   00FB73  33                 	db	51	;'3'
  7403   00FB74  66                 	db	102	;'f'
  7404   00FB75  4D                 	db	77	;'M'
  7405   00FB76  48                 	db	72	;'H'
  7406   00FB77  7A                 	db	122	;'z'
  7407   00FB78  0D                 	db	13
  7408   00FB79  0A                 	db	10
  7409   00FB7A  0A                 	db	10
  7410   00FB7B  00                 	db	0
  7411   00FB7C                     STR_88:
  7412                           
  7413                           ; BSR set to: 7
  7414   00FB7C  25                 	db	37
  7415   00FB7D  73                 	db	115	;'s'
  7416   00FB7E  20                 	db	32
  7417   00FB7F  3A                 	db	58	;':'
  7418   00FB80  20                 	db	32
  7419   00FB81  69                 	db	105	;'i'
  7420   00FB82  6E                 	db	110	;'n'
  7421   00FB83  76                 	db	118	;'v'
  7422   00FB84  61                 	db	97	;'a'
  7423   00FB85  6C                 	db	108	;'l'
  7424   00FB86  69                 	db	105	;'i'
  7425   00FB87  64                 	db	100	;'d'
  7426   00FB88  20                 	db	32
  7427   00FB89  76                 	db	118	;'v'
  7428   00FB8A  61                 	db	97	;'a'
  7429   00FB8B  6C                 	db	108	;'l'
  7430   00FB8C  75                 	db	117	;'u'
  7431   00FB8D  65                 	db	101	;'e'
  7432   00FB8E  21                 	db	33
  7433   00FB8F  21                 	db	33
  7434   00FB90  0D                 	db	13
  7435   00FB91  0A                 	db	10
  7436   00FB92  00                 	db	0
  7437   00FB93                     STR_118:
  7438                           
  7439                           ; BSR set to: 7
  7440   00FB93  20                 	db	32
  7441   00FB94  20                 	db	32
  7442   00FB95  4D                 	db	77	;'M'
  7443   00FB96  44                 	db	68	;'D'
  7444   00FB97  55                 	db	85	;'U'
  7445   00FB98  4D                 	db	77	;'M'
  7446   00FB99  50                 	db	80	;'P'
  7447   00FB9A  20                 	db	32
  7448   00FB9B  61                 	db	97	;'a'
  7449   00FB9C  64                 	db	100	;'d'
  7450   00FB9D  64                 	db	100	;'d'
  7451   00FB9E  72                 	db	114	;'r'
  7452   00FB9F  65                 	db	101	;'e'
  7453   00FBA0  73                 	db	115	;'s'
  7454   00FBA1  73                 	db	115	;'s'
  7455   00FBA2  28                 	db	40
  7456   00FBA3  48                 	db	72	;'H'
  7457   00FBA4  65                 	db	101	;'e'
  7458   00FBA5  78                 	db	120	;'x'
  7459   00FBA6  29                 	db	41
  7460   00FBA7  0D                 	db	13
  7461   00FBA8  0A                 	db	10
  7462   00FBA9  00                 	db	0
  7463   00FBAA                     STR_70:
  7464                           
  7465                           ; BSR set to: 7
  7466   00FBAA  43                 	db	67	;'C'
  7467   00FBAB  50                 	db	80	;'P'
  7468   00FBAC  55                 	db	85	;'U'
  7469   00FBAD  20                 	db	32
  7470   00FBAE  53                 	db	83	;'S'
  7471   00FBAF  65                 	db	101	;'e'
  7472   00FBB0  74                 	db	116	;'t'
  7473   00FBB1  74                 	db	116	;'t'
  7474   00FBB2  69                 	db	105	;'i'
  7475   00FBB3  6E                 	db	110	;'n'
  7476   00FBB4  67                 	db	103	;'g'
  7477   00FBB5  3A                 	db	58	;':'
  7478   00FBB6  20                 	db	32
  7479   00FBB7  57                 	db	87	;'W'
  7480   00FBB8  36                 	db	54	;'6'
  7481   00FBB9  35                 	db	53	;'5'
  7482   00FBBA  43                 	db	67	;'C'
  7483   00FBBB  38                 	db	56	;'8'
  7484   00FBBC  31                 	db	49	;'1'
  7485   00FBBD  36                 	db	54	;'6'
  7486   00FBBE  0D                 	db	13
  7487   00FBBF  0A                 	db	10
  7488   00FBC0  00                 	db	0
  7489   00FBC1                     STR_44:
  7490                           
  7491                           ; BSR set to: 7
  7492   00FBC1  0A                 	db	10
  7493   00FBC2  4D                 	db	77	;'M'
  7494   00FBC3  65                 	db	101	;'e'
  7495   00FBC4  6D                 	db	109	;'m'
  7496   00FBC5  6F                 	db	111	;'o'
  7497   00FBC6  72                 	db	114	;'r'
  7498   00FBC7  79                 	db	121	;'y'
  7499   00FBC8  20                 	db	32
  7500   00FBC9  77                 	db	119	;'w'
  7501   00FBCA  72                 	db	114	;'r'
  7502   00FBCB  61                 	db	97	;'a'
  7503   00FBCC  70                 	db	112	;'p'
  7504   00FBCD  20                 	db	32
  7505   00FBCE  61                 	db	97	;'a'
  7506   00FBCF  72                 	db	114	;'r'
  7507   00FBD0  6F                 	db	111	;'o'
  7508   00FBD1  75                 	db	117	;'u'
  7509   00FBD2  6E                 	db	110	;'n'
  7510   00FBD3  64                 	db	100	;'d'
  7511   00FBD4  2E                 	db	46
  7512   00FBD5  0A                 	db	10
  7513   00FBD6  0D                 	db	13
  7514   00FBD7  00                 	db	0
  7515   00FBD8                     STR_108:
  7516                           
  7517                           ; BSR set to: 7
  7518   00FBD8  46                 	db	70	;'F'
  7519   00FBD9  6C                 	db	108	;'l'
  7520   00FBDA  69                 	db	105	;'i'
  7521   00FBDB  65                 	db	101	;'e'
  7522   00FBDC  28                 	db	40
  7523   00FBDD  25                 	db	37
  7524   00FBDE  73                 	db	115	;'s'
  7525   00FBDF  29                 	db	41
  7526   00FBE0  20                 	db	32
  7527   00FBE1  6C                 	db	108	;'l'
  7528   00FBE2  6F                 	db	111	;'o'
  7529   00FBE3  61                 	db	97	;'a'
  7530   00FBE4  64                 	db	100	;'d'
  7531   00FBE5  69                 	db	105	;'i'
  7532   00FBE6  6E                 	db	110	;'n'
  7533   00FBE7  67                 	db	103	;'g'
  7534   00FBE8  2E                 	db	46
  7535   00FBE9  2E                 	db	46
  7536   00FBEA  2E                 	db	46
  7537   00FBEB  0D                 	db	13
  7538   00FBEC  0A                 	db	10
  7539   00FBED  00                 	db	0
  7540   00FBEE                     STR_69:
  7541                           
  7542                           ; BSR set to: 7
  7543   00FBEE  43                 	db	67	;'C'
  7544   00FBEF  50                 	db	80	;'P'
  7545   00FBF0  55                 	db	85	;'U'
  7546   00FBF1  20                 	db	32
  7547   00FBF2  53                 	db	83	;'S'
  7548   00FBF3  65                 	db	101	;'e'
  7549   00FBF4  74                 	db	116	;'t'
  7550   00FBF5  74                 	db	116	;'t'
  7551   00FBF6  69                 	db	105	;'i'
  7552   00FBF7  6E                 	db	110	;'n'
  7553   00FBF8  67                 	db	103	;'g'
  7554   00FBF9  3A                 	db	58	;':'
  7555   00FBFA  20                 	db	32
  7556   00FBFB  57                 	db	87	;'W'
  7557   00FBFC  36                 	db	54	;'6'
  7558   00FBFD  35                 	db	53	;'5'
  7559   00FBFE  43                 	db	67	;'C'
  7560   00FBFF  30                 	db	48	;'0'
  7561   00FC00  32                 	db	50	;'2'
  7562   00FC01  0D                 	db	13
  7563   00FC02  0A                 	db	10
  7564   00FC03  00                 	db	0
  7565   00FC04                     STR_162:
  7566                           
  7567                           ; BSR set to: 7
  7568   00FC04  46                 	db	70	;'F'
  7569   00FC05  69                 	db	105	;'i'
  7570   00FC06  6C                 	db	108	;'l'
  7571   00FC07  65                 	db	101	;'e'
  7572   00FC08  20                 	db	32
  7573   00FC09  4F                 	db	79	;'O'
  7574   00FC0A  70                 	db	112	;'p'
  7575   00FC0B  65                 	db	101	;'e'
  7576   00FC0C  6E                 	db	110	;'n'
  7577   00FC0D  20                 	db	32
  7578   00FC0E  45                 	db	69	;'E'
  7579   00FC0F  72                 	db	114	;'r'
  7580   00FC10  72                 	db	114	;'r'
  7581   00FC11  6F                 	db	111	;'o'
  7582   00FC12  72                 	db	114	;'r'
  7583   00FC13  2E                 	db	46
  7584   00FC14  20                 	db	32
  7585   00FC15  25                 	db	37
  7586   00FC16  73                 	db	115	;'s'
  7587   00FC17  0D                 	db	13
  7588   00FC18  0A                 	db	10
  7589   00FC19  00                 	db	0
  7590   00FC1A                     STR_142:
  7591                           
  7592                           ; BSR set to: 7
  7593   00FC1A  57                 	db	87	;'W'
  7594   00FC1B  36                 	db	54	;'6'
  7595   00FC1C  35                 	db	53	;'5'
  7596   00FC1D  43                 	db	67	;'C'
  7597   00FC1E  38                 	db	56	;'8'
  7598   00FC1F  31                 	db	49	;'1'
  7599   00FC20  36                 	db	54	;'6'
  7600   00FC21  20                 	db	32
  7601   00FC22  4E                 	db	78	;'N'
  7602   00FC23  61                 	db	97	;'a'
  7603   00FC24  74                 	db	116	;'t'
  7604   00FC25  69                 	db	105	;'i'
  7605   00FC26  76                 	db	118	;'v'
  7606   00FC27  65                 	db	101	;'e'
  7607   00FC28  20                 	db	32
  7608   00FC29  6D                 	db	109	;'m'
  7609   00FC2A  6F                 	db	111	;'o'
  7610   00FC2B  64                 	db	100	;'d'
  7611   00FC2C  65                 	db	101	;'e'
  7612   00FC2D  0A                 	db	10
  7613   00FC2E  0D                 	db	13
  7614   00FC2F  00                 	db	0
  7615   00FC30                     STR_34:
  7616                           
  7617                           ; BSR set to: 7
  7618   00FC30  66                 	db	102	;'f'
  7619   00FC31  5F                 	db	95	;'_'
  7620   00FC32  6C                 	db	108	;'l'
  7621   00FC33  73                 	db	115	;'s'
  7622   00FC34  65                 	db	101	;'e'
  7623   00FC35  65                 	db	101	;'e'
  7624   00FC36  6B                 	db	107	;'k'
  7625   00FC37  28                 	db	40
  7626   00FC38  29                 	db	41
  7627   00FC39  3A                 	db	58	;':'
  7628   00FC3A  20                 	db	32
  7629   00FC3B  45                 	db	69	;'E'
  7630   00FC3C  52                 	db	82	;'R'
  7631   00FC3D  52                 	db	82	;'R'
  7632   00FC3E  4F                 	db	79	;'O'
  7633   00FC3F  52                 	db	82	;'R'
  7634   00FC40  20                 	db	32
  7635   00FC41  25                 	db	37
  7636   00FC42  64                 	db	100	;'d'
  7637   00FC43  0A                 	db	10
  7638   00FC44  0D                 	db	13
  7639   00FC45  00                 	db	0
  7640   00FC46                     
  7641                           ; BSR set to: 7
  7642   00FC46  6E                 	db	110	;'n'
  7643   00FC47  6F                 	db	111	;'o'
  7644   00FC48  20                 	db	32
  7645   00FC49  46                 	db	70	;'F'
  7646   00FC4A  41                 	db	65	;'A'
  7647   00FC4B  54                 	db	84	;'T'
  7648   00FC4C  33                 	db	51	;'3'
  7649   00FC4D  32                 	db	50	;'2'
  7650   00FC4E  20                 	db	32
  7651   00FC4F  70                 	db	112	;'p'
  7652   00FC50  61                 	db	97	;'a'
  7653   00FC51  72                 	db	114	;'r'
  7654   00FC52  74                 	db	116	;'t'
  7655   00FC53  69                 	db	105	;'i'
  7656   00FC54  74                 	db	116	;'t'
  7657   00FC55  69                 	db	105	;'i'
  7658   00FC56  6F                 	db	111	;'o'
  7659   00FC57  6E                 	db	110	;'n'
  7660   00FC58  0A                 	db	10
  7661   00FC59  0D                 	db	13
  7662   00FC5A  00                 	db	0
  7663   00FC5B                     STR_133:
  7664                           
  7665                           ; BSR set to: 7
  7666   00FC5B  0D                 	db	13
  7667   00FC5C  0A                 	db	10
  7668   00FC5D  46                 	db	70	;'F'
  7669   00FC5E  69                 	db	105	;'i'
  7670   00FC5F  6C                 	db	108	;'l'
  7671   00FC60  65                 	db	101	;'e'
  7672   00FC61  20                 	db	32
  7673   00FC62  4F                 	db	79	;'O'
  7674   00FC63  70                 	db	112	;'p'
  7675   00FC64  65                 	db	101	;'e'
  7676   00FC65  6E                 	db	110	;'n'
  7677   00FC66  20                 	db	32
  7678   00FC67  45                 	db	69	;'E'
  7679   00FC68  72                 	db	114	;'r'
  7680   00FC69  72                 	db	114	;'r'
  7681   00FC6A  6F                 	db	111	;'o'
  7682   00FC6B  72                 	db	114	;'r'
  7683   00FC6C  2E                 	db	46
  7684   00FC6D  0D                 	db	13
  7685   00FC6E  0A                 	db	10
  7686   00FC6F  00                 	db	0
  7687   00FC70                     STR_37:
  7688                           
  7689                           ; BSR set to: 7
  7690   00FC70  66                 	db	102	;'f'
  7691   00FC71  5F                 	db	95	;'_'
  7692   00FC72  73                 	db	115	;'s'
  7693   00FC73  79                 	db	121	;'y'
  7694   00FC74  6E                 	db	110	;'n'
  7695   00FC75  63                 	db	99	;'c'
  7696   00FC76  28                 	db	40
  7697   00FC77  29                 	db	41
  7698   00FC78  3A                 	db	58	;':'
  7699   00FC79  20                 	db	32
  7700   00FC7A  45                 	db	69	;'E'
  7701   00FC7B  52                 	db	82	;'R'
  7702   00FC7C  52                 	db	82	;'R'
  7703   00FC7D  4F                 	db	79	;'O'
  7704   00FC7E  52                 	db	82	;'R'
  7705   00FC7F  20                 	db	32
  7706   00FC80  25                 	db	37
  7707   00FC81  64                 	db	100	;'d'
  7708   00FC82  0A                 	db	10
  7709   00FC83  0D                 	db	13
  7710   00FC84  00                 	db	0
  7711   00FC85                     STR_4:
  7712                           
  7713                           ; BSR set to: 7
  7714   00FC85  4D                 	db	77	;'M'
  7715   00FC86  65                 	db	101	;'e'
  7716   00FC87  6D                 	db	109	;'m'
  7717   00FC88  6F                 	db	111	;'o'
  7718   00FC89  72                 	db	114	;'r'
  7719   00FC8A  79                 	db	121	;'y'
  7720   00FC8B  20                 	db	32
  7721   00FC8C  57                 	db	87	;'W'
  7722   00FC8D  72                 	db	114	;'r'
  7723   00FC8E  69                 	db	105	;'i'
  7724   00FC8F  74                 	db	116	;'t'
  7725   00FC90  65                 	db	101	;'e'
  7726   00FC91  20                 	db	32
  7727   00FC92  45                 	db	69	;'E'
  7728   00FC93  72                 	db	114	;'r'
  7729   00FC94  72                 	db	114	;'r'
  7730   00FC95  6F                 	db	111	;'o'
  7731   00FC96  72                 	db	114	;'r'
  7732   00FC97  0D                 	db	13
  7733   00FC98  0A                 	db	10
  7734   00FC99  00                 	db	0
  7735   00FC9A                     STR_96:
  7736                           
  7737                           ; BSR set to: 7
  7738   00FC9A  20                 	db	32
  7739   00FC9B  20                 	db	32
  7740   00FC9C  25                 	db	37
  7741   00FC9D  31                 	db	49	;'1'
  7742   00FC9E  32                 	db	50	;'2'
  7743   00FC9F  73                 	db	115	;'s'
  7744   00FCA0  09                 	db	9
  7745   00FCA1  25                 	db	37
  7746   00FCA2  6C                 	db	108	;'l'
  7747   00FCA3  64                 	db	100	;'d'
  7748   00FCA4  20                 	db	32
  7749   00FCA5  62                 	db	98	;'b'
  7750   00FCA6  79                 	db	121	;'y'
  7751   00FCA7  74                 	db	116	;'t'
  7752   00FCA8  65                 	db	101	;'e'
  7753   00FCA9  73                 	db	115	;'s'
  7754   00FCAA  2E                 	db	46
  7755   00FCAB  0D                 	db	13
  7756   00FCAC  0A                 	db	10
  7757   00FCAD  00                 	db	0
  7758   00FCAE                     STR_106:
  7759                           
  7760                           ; BSR set to: 7
  7761   00FCAE  52                 	db	82	;'R'
  7762   00FCAF  65                 	db	101	;'e'
  7763   00FCB0  6C                 	db	108	;'l'
  7764   00FCB1  6F                 	db	111	;'o'
  7765   00FCB2  61                 	db	97	;'a'
  7766   00FCB3  64                 	db	100	;'d'
  7767   00FCB4  20                 	db	32
  7768   00FCB5  6D                 	db	109	;'m'
  7769   00FCB6  6F                 	db	111	;'o'
  7770   00FCB7  6E                 	db	110	;'n'
  7771   00FCB8  69                 	db	105	;'i'
  7772   00FCB9  74                 	db	116	;'t'
  7773   00FCBA  6F                 	db	111	;'o'
  7774   00FCBB  72                 	db	114	;'r'
  7775   00FCBC  20                 	db	32
  7776   00FCBD  25                 	db	37
  7777   00FCBE  73                 	db	115	;'s'
  7778   00FCBF  0D                 	db	13
  7779   00FCC0  0A                 	db	10
  7780   00FCC1  00                 	db	0
  7781   00FCC2                     STR_140:
  7782                           
  7783                           ; BSR set to: 7
  7784   00FCC2  4F                 	db	79	;'O'
  7785   00FCC3  70                 	db	112	;'p'
  7786   00FCC4  65                 	db	101	;'e'
  7787   00FCC5  72                 	db	114	;'r'
  7788   00FCC6  61                 	db	97	;'a'
  7789   00FCC7  74                 	db	116	;'t'
  7790   00FCC8  69                 	db	105	;'i'
  7791   00FCC9  6F                 	db	111	;'o'
  7792   00FCCA  6E                 	db	110	;'n'
  7793   00FCCB  61                 	db	97	;'a'
  7794   00FCCC  6C                 	db	108	;'l'
  7795   00FCCD  20                 	db	32
  7796   00FCCE  4D                 	db	77	;'M'
  7797   00FCCF  6F                 	db	111	;'o'
  7798   00FCD0  64                 	db	100	;'d'
  7799   00FCD1  65                 	db	101	;'e'
  7800   00FCD2  20                 	db	32
  7801   00FCD3  3A                 	db	58	;':'
  7802   00FCD4  20                 	db	32
  7803   00FCD5  00                 	db	0
  7804   00FCD6                     
  7805                           ; BSR set to: 7
  7806   00FCD6  6E                 	db	110	;'n'
  7807   00FCD7  6F                 	db	111	;'o'
  7808   00FCD8  20                 	db	32
  7809   00FCD9  4D                 	db	77	;'M'
  7810   00FCDA  42                 	db	66	;'B'
  7811   00FCDB  52                 	db	82	;'R'
  7812   00FCDC  20                 	db	32
  7813   00FCDD  73                 	db	115	;'s'
  7814   00FCDE  69                 	db	105	;'i'
  7815   00FCDF  67                 	db	103	;'g'
  7816   00FCE0  6E                 	db	110	;'n'
  7817   00FCE1  61                 	db	97	;'a'
  7818   00FCE2  74                 	db	116	;'t'
  7819   00FCE3  75                 	db	117	;'u'
  7820   00FCE4  72                 	db	114	;'r'
  7821   00FCE5  65                 	db	101	;'e'
  7822   00FCE6  0A                 	db	10
  7823   00FCE7  0D                 	db	13
  7824   00FCE8  00                 	db	0
  7825   00FCE9                     STR_90:
  7826                           
  7827                           ; BSR set to: 7
  7828   00FCE9  46                 	db	70	;'F'
  7829   00FCEA  69                 	db	105	;'i'
  7830   00FCEB  6C                 	db	108	;'l'
  7831   00FCEC  65                 	db	101	;'e'
  7832   00FCED  20                 	db	32
  7833   00FCEE  72                 	db	114	;'r'
  7834   00FCEF  65                 	db	101	;'e'
  7835   00FCF0  61                 	db	97	;'a'
  7836   00FCF1  64                 	db	100	;'d'
  7837   00FCF2  20                 	db	32
  7838   00FCF3  65                 	db	101	;'e'
  7839   00FCF4  72                 	db	114	;'r'
  7840   00FCF5  72                 	db	114	;'r'
  7841   00FCF6  6F                 	db	111	;'o'
  7842   00FCF7  72                 	db	114	;'r'
  7843   00FCF8  21                 	db	33
  7844   00FCF9  0D                 	db	13
  7845   00FCFA  0A                 	db	10
  7846   00FCFB  00                 	db	0
  7847   00FCFC                     STR_83:
  7848                           
  7849                           ; BSR set to: 7
  7850   00FCFC  46                 	db	70	;'F'
  7851   00FCFD  69                 	db	105	;'i'
  7852   00FCFE  6C                 	db	108	;'l'
  7853   00FCFF  65                 	db	101	;'e'
  7854   00FD00  20                 	db	32
  7855   00FD01  4C                 	db	76	;'L'
  7856   00FD02  6F                 	db	111	;'o'
  7857   00FD03  61                 	db	97	;'a'
  7858   00FD04  64                 	db	100	;'d'
  7859   00FD05  20                 	db	32
  7860   00FD06  45                 	db	69	;'E'
  7861   00FD07  72                 	db	114	;'r'
  7862   00FD08  72                 	db	114	;'r'
  7863   00FD09  6F                 	db	111	;'o'
  7864   00FD0A  72                 	db	114	;'r'
  7865   00FD0B  2E                 	db	46
  7866   00FD0C  0D                 	db	13
  7867   00FD0D  0A                 	db	10
  7868   00FD0E  00                 	db	0
  7869   00FD0F                     STR_163:
  7870                           
  7871                           ; BSR set to: 7
  7872   00FD0F  46                 	db	70	;'F'
  7873   00FD10  69                 	db	105	;'i'
  7874   00FD11  6C                 	db	108	;'l'
  7875   00FD12  65                 	db	101	;'e'
  7876   00FD13  20                 	db	32
  7877   00FD14  72                 	db	114	;'r'
  7878   00FD15  65                 	db	101	;'e'
  7879   00FD16  61                 	db	97	;'a'
  7880   00FD17  64                 	db	100	;'d'
  7881   00FD18  20                 	db	32
  7882   00FD19  65                 	db	101	;'e'
  7883   00FD1A  72                 	db	114	;'r'
  7884   00FD1B  72                 	db	114	;'r'
  7885   00FD1C  6F                 	db	111	;'o'
  7886   00FD1D  72                 	db	114	;'r'
  7887   00FD1E  2E                 	db	46
  7888   00FD1F  0D                 	db	13
  7889   00FD20  0A                 	db	10
  7890   00FD21  00                 	db	0
  7891   00FD22                     STR_124:
  7892                           
  7893                           ; BSR set to: 7
  7894   00FD22  20                 	db	32
  7895   00FD23  20                 	db	32
  7896   00FD24  53                 	db	83	;'S'
  7897   00FD25  48                 	db	72	;'H'
  7898   00FD26  4F                 	db	79	;'O'
  7899   00FD27  57                 	db	87	;'W'
  7900   00FD28  20                 	db	32
  7901   00FD29  66                 	db	102	;'f'
  7902   00FD2A  69                 	db	105	;'i'
  7903   00FD2B  6C                 	db	108	;'l'
  7904   00FD2C  65                 	db	101	;'e'
  7905   00FD2D  20                 	db	32
  7906   00FD2E  6E                 	db	110	;'n'
  7907   00FD2F  61                 	db	97	;'a'
  7908   00FD30  6D                 	db	109	;'m'
  7909   00FD31  65                 	db	101	;'e'
  7910   00FD32  0D                 	db	13
  7911   00FD33  0A                 	db	10
  7912   00FD34  00                 	db	0
  7913   00FD35                     STR_150:
  7914                           
  7915                           ; BSR set to: 7
  7916   00FD35  4D                 	db	77	;'M'
  7917   00FD36  4E                 	db	78	;'N'
  7918   00FD37  49                 	db	73	;'I'
  7919   00FD38  20                 	db	32
  7920   00FD39  3A                 	db	58	;':'
  7921   00FD3A  20                 	db	32
  7922   00FD3B  4E                 	db	78	;'N'
  7923   00FD3C  6F                 	db	111	;'o'
  7924   00FD3D  20                 	db	32
  7925   00FD3E  73                 	db	115	;'s'
  7926   00FD3F  75                 	db	117	;'u'
  7927   00FD40  70                 	db	112	;'p'
  7928   00FD41  70                 	db	112	;'p'
  7929   00FD42  6F                 	db	111	;'o'
  7930   00FD43  72                 	db	114	;'r'
  7931   00FD44  74                 	db	116	;'t'
  7932   00FD45  0D                 	db	13
  7933   00FD46  0A                 	db	10
  7934   00FD47  00                 	db	0
  7935   00FD48                     STR_148:
  7936                           
  7937                           ; BSR set to: 7
  7938   00FD48  49                 	db	73	;'I'
  7939   00FD49  52                 	db	82	;'R'
  7940   00FD4A  51                 	db	81	;'Q'
  7941   00FD4B  20                 	db	32
  7942   00FD4C  3A                 	db	58	;':'
  7943   00FD4D  20                 	db	32
  7944   00FD4E  4E                 	db	78	;'N'
  7945   00FD4F  6F                 	db	111	;'o'
  7946   00FD50  20                 	db	32
  7947   00FD51  73                 	db	115	;'s'
  7948   00FD52  75                 	db	117	;'u'
  7949   00FD53  70                 	db	112	;'p'
  7950   00FD54  70                 	db	112	;'p'
  7951   00FD55  6F                 	db	111	;'o'
  7952   00FD56  72                 	db	114	;'r'
  7953   00FD57  74                 	db	116	;'t'
  7954   00FD58  2C                 	db	44
  7955   00FD59  20                 	db	32
  7956   00FD5A  00                 	db	0
  7957   00FD5B                     
  7958                           ; BSR set to: 7
  7959   00FD5B  53                 	db	83	;'S'
  7960   00FD5C  44                 	db	68	;'D'
  7961   00FD5D  20                 	db	32
  7962   00FD5E  43                 	db	67	;'C'
  7963   00FD5F  61                 	db	97	;'a'
  7964   00FD60  72                 	db	114	;'r'
  7965   00FD61  64                 	db	100	;'d'
  7966   00FD62  3A                 	db	58	;':'
  7967   00FD63  20                 	db	32
  7968   00FD64  74                 	db	116	;'t'
  7969   00FD65  69                 	db	105	;'i'
  7970   00FD66  6D                 	db	109	;'m'
  7971   00FD67  65                 	db	101	;'e'
  7972   00FD68  6F                 	db	111	;'o'
  7973   00FD69  75                 	db	117	;'u'
  7974   00FD6A  74                 	db	116	;'t'
  7975   00FD6B  0A                 	db	10
  7976   00FD6C  0D                 	db	13
  7977   00FD6D  00                 	db	0
  7978   00FD6E                     
  7979                           ; BSR set to: 7
  7980   00FD6E  6E                 	db	110	;'n'
  7981   00FD6F  6F                 	db	111	;'o'
  7982   00FD70  20                 	db	32
  7983   00FD71  76                 	db	118	;'v'
  7984   00FD72  61                 	db	97	;'a'
  7985   00FD73  6C                 	db	108	;'l'
  7986   00FD74  69                 	db	105	;'i'
  7987   00FD75  64                 	db	100	;'d'
  7988   00FD76  20                 	db	32
  7989   00FD77  76                 	db	118	;'v'
  7990   00FD78  6F                 	db	111	;'o'
  7991   00FD79  6C                 	db	108	;'l'
  7992   00FD7A  75                 	db	117	;'u'
  7993   00FD7B  6D                 	db	109	;'m'
  7994   00FD7C  65                 	db	101	;'e'
  7995   00FD7D  0A                 	db	10
  7996   00FD7E  0D                 	db	13
  7997   00FD7F  00                 	db	0
  7998   00FD80                     STR_151:
  7999                           
  8000                           ; BSR set to: 7
  8001   00FD80  55                 	db	85	;'U'
  8002   00FD81  73                 	db	115	;'s'
  8003   00FD82  69                 	db	105	;'i'
  8004   00FD83  6E                 	db	110	;'n'
  8005   00FD84  67                 	db	103	;'g'
  8006   00FD85  20                 	db	32
  8007   00FD86  42                 	db	66	;'B'
  8008   00FD87  49                 	db	73	;'I'
  8009   00FD88  4F                 	db	79	;'O'
  8010   00FD89  53                 	db	83	;'S'
  8011   00FD8A  20                 	db	32
  8012   00FD8B  43                 	db	67	;'C'
  8013   00FD8C  41                 	db	65	;'A'
  8014   00FD8D  4C                 	db	76	;'L'
  8015   00FD8E  4C                 	db	76	;'L'
  8016   00FD8F  0A                 	db	10
  8017   00FD90  0D                 	db	13
  8018   00FD91  00                 	db	0
  8019   00FD92                     
  8020                           ; BSR set to: 7
  8021   00FD92  53                 	db	83	;'S'
  8022   00FD93  44                 	db	68	;'D'
  8023   00FD94  20                 	db	32
  8024   00FD95  43                 	db	67	;'C'
  8025   00FD96  61                 	db	97	;'a'
  8026   00FD97  72                 	db	114	;'r'
  8027   00FD98  64                 	db	100	;'d'
  8028   00FD99  3A                 	db	58	;':'
  8029   00FD9A  20                 	db	32
  8030   00FD9B  72                 	db	114	;'r'
  8031   00FD9C  65                 	db	101	;'e'
  8032   00FD9D  61                 	db	97	;'a'
  8033   00FD9E  64                 	db	100	;'d'
  8034   00FD9F  79                 	db	121	;'y'
  8035   00FDA0  2E                 	db	46
  8036   00FDA1  0A                 	db	10
  8037   00FDA2  0D                 	db	13
  8038   00FDA3  00                 	db	0
  8039   00FDA4                     STR_143:
  8040                           
  8041                           ; BSR set to: 7
  8042   00FDA4  43                 	db	67	;'C'
  8043   00FDA5  53                 	db	83	;'S'
  8044   00FDA6  54                 	db	84	;'T'
  8045   00FDA7  41                 	db	65	;'A'
  8046   00FDA8  52                 	db	82	;'R'
  8047   00FDA9  54                 	db	84	;'T'
  8048   00FDAA  20                 	db	32
  8049   00FDAB  3A                 	db	58	;':'
  8050   00FDAC  20                 	db	32
  8051   00FDAD  24                 	db	36
  8052   00FDAE  25                 	db	37
  8053   00FDAF  30                 	db	48	;'0'
  8054   00FDB0  34                 	db	52	;'4'
  8055   00FDB1  58                 	db	88	;'X'
  8056   00FDB2  0D                 	db	13
  8057   00FDB3  0A                 	db	10
  8058   00FDB4  00                 	db	0
  8059   00FDB5                     STR_144:
  8060                           
  8061                           ; BSR set to: 7
  8062   00FDB5  57                 	db	87	;'W'
  8063   00FDB6  53                 	db	83	;'S'
  8064   00FDB7  54                 	db	84	;'T'
  8065   00FDB8  41                 	db	65	;'A'
  8066   00FDB9  52                 	db	82	;'R'
  8067   00FDBA  54                 	db	84	;'T'
  8068   00FDBB  20                 	db	32
  8069   00FDBC  3A                 	db	58	;':'
  8070   00FDBD  20                 	db	32
  8071   00FDBE  24                 	db	36
  8072   00FDBF  25                 	db	37
  8073   00FDC0  30                 	db	48	;'0'
  8074   00FDC1  34                 	db	52	;'4'
  8075   00FDC2  58                 	db	88	;'X'
  8076   00FDC3  0D                 	db	13
  8077   00FDC4  0A                 	db	10
  8078   00FDC5  00                 	db	0
  8079   00FDC6                     STR_7:
  8080                           
  8081                           ; BSR set to: 7
  8082   00FDC6  53                 	db	83	;'S'
  8083   00FDC7  50                 	db	80	;'P'
  8084   00FDC8  49                 	db	73	;'I'
  8085   00FDC9  5F                 	db	95	;'_'
  8086   00FDCA  53                 	db	83	;'S'
  8087   00FDCB  44                 	db	68	;'D'
  8088   00FDCC  5F                 	db	95	;'_'
  8089   00FDCD  63                 	db	99	;'c'
  8090   00FDCE  6F                 	db	111	;'o'
  8091   00FDCF  6E                 	db	110	;'n'
  8092   00FDD0  66                 	db	102	;'f'
  8093   00FDD1  69                 	db	105	;'i'
  8094   00FDD2  67                 	db	103	;'g'
  8095   00FDD3  75                 	db	117	;'u'
  8096   00FDD4  72                 	db	114	;'r'
  8097   00FDD5  65                 	db	101	;'e'
  8098   00FDD6  00                 	db	0
  8099   00FDD7                     STR_119:
  8100                           
  8101                           ; BSR set to: 7
  8102   00FDD7  20                 	db	32
  8103   00FDD8  20                 	db	32
  8104   00FDD9  4D                 	db	77	;'M'
  8105   00FDDA  4F                 	db	79	;'O'
  8106   00FDDB  4E                 	db	78	;'N'
  8107   00FDDC  49                 	db	73	;'I'
  8108   00FDDD  54                 	db	84	;'T'
  8109   00FDDE  4F                 	db	79	;'O'
  8110   00FDDF  52                 	db	82	;'R'
  8111   00FDE0  20                 	db	32
  8112   00FDE1  5B                 	db	91	;'['
  8113   00FDE2  57                 	db	87	;'W'
  8114   00FDE3  5D                 	db	93	;']'
  8115   00FDE4  0D                 	db	13
  8116   00FDE5  0A                 	db	10
  8117   00FDE6  00                 	db	0
  8118   00FDE7                     STR_149:
  8119                           
  8120                           ; BSR set to: 7
  8121   00FDE7  4D                 	db	77	;'M'
  8122   00FDE8  4E                 	db	78	;'N'
  8123   00FDE9  49                 	db	73	;'I'
  8124   00FDEA  20                 	db	32
  8125   00FDEB  3A                 	db	58	;':'
  8126   00FDEC  20                 	db	32
  8127   00FDED  53                 	db	83	;'S'
  8128   00FDEE  75                 	db	117	;'u'
  8129   00FDEF  70                 	db	112	;'p'
  8130   00FDF0  70                 	db	112	;'p'
  8131   00FDF1  6F                 	db	111	;'o'
  8132   00FDF2  72                 	db	114	;'r'
  8133   00FDF3  74                 	db	116	;'t'
  8134   00FDF4  0D                 	db	13
  8135   00FDF5  0A                 	db	10
  8136   00FDF6  00                 	db	0
  8137   00FDF7                     STR_147:
  8138                           
  8139                           ; BSR set to: 7
  8140   00FDF7  49                 	db	73	;'I'
  8141   00FDF8  52                 	db	82	;'R'
  8142   00FDF9  51                 	db	81	;'Q'
  8143   00FDFA  20                 	db	32
  8144   00FDFB  3A                 	db	58	;':'
  8145   00FDFC  20                 	db	32
  8146   00FDFD  53                 	db	83	;'S'
  8147   00FDFE  75                 	db	117	;'u'
  8148   00FDFF  70                 	db	112	;'p'
  8149   00FE00  70                 	db	112	;'p'
  8150   00FE01  6F                 	db	111	;'o'
  8151   00FE02  72                 	db	114	;'r'
  8152   00FE03  74                 	db	116	;'t'
  8153   00FE04  2C                 	db	44
  8154   00FE05  20                 	db	32
  8155   00FE06  00                 	db	0
  8156   00FE07                     STR_166:
  8157                           
  8158                           ; BSR set to: 7
  8159   00FE07  2A                 	db	42
  8160   00FE08  2B                 	db	43
  8161   00FE09  2C                 	db	44
  8162   00FE0A  3A                 	db	58	;':'
  8163   00FE0B  3B                 	db	59	;';'
  8164   00FE0C  3C                 	db	60	;'<'
  8165   00FE0D  3D                 	db	61	;'='
  8166   00FE0E  3E                 	db	62	;'>'
  8167   00FE0F  5B                 	db	91	;'['
  8168   00FE10  5D                 	db	93	;']'
  8169   00FE11  7C                 	db	124
  8170   00FE12  22                 	db	34
  8171   00FE13  3F                 	db	63	;'?'
  8172   00FE14  7F                 	db	127
  8173   00FE15  00                 	db	0
  8174   00FE16                     STR_95:
  8175                           
  8176                           ; BSR set to: 7
  8177   00FE16  20                 	db	32
  8178   00FE17  20                 	db	32
  8179   00FE18  25                 	db	37
  8180   00FE19  31                 	db	49	;'1'
  8181   00FE1A  32                 	db	50	;'2'
  8182   00FE1B  73                 	db	115	;'s'
  8183   00FE1C  09                 	db	9
  8184   00FE1D  3C                 	db	60	;'<'
  8185   00FE1E  44                 	db	68	;'D'
  8186   00FE1F  49                 	db	73	;'I'
  8187   00FE20  52                 	db	82	;'R'
  8188   00FE21  3E                 	db	62	;'>'
  8189   00FE22  0D                 	db	13
  8190   00FE23  0A                 	db	10
  8191   00FE24  00                 	db	0
  8192   00FE25                     STR_160:
  8193                           
  8194                           ; BSR set to: 7
  8195   00FE25  54                 	db	84	;'T'
  8196   00FE26  65                 	db	101	;'e'
  8197   00FE27  72                 	db	114	;'r'
  8198   00FE28  6D                 	db	109	;'m'
  8199   00FE29  69                 	db	105	;'i'
  8200   00FE2A  6E                 	db	110	;'n'
  8201   00FE2B  61                 	db	97	;'a'
  8202   00FE2C  74                 	db	116	;'t'
  8203   00FE2D  65                 	db	101	;'e'
  8204   00FE2E  20                 	db	32
  8205   00FE2F  25                 	db	37
  8206   00FE30  73                 	db	115	;'s'
  8207   00FE31  0D                 	db	13
  8208   00FE32  0A                 	db	10
  8209   00FE33  00                 	db	0
  8210   00FE34                     STR_89:
  8211                           
  8212                           ; BSR set to: 7
  8213   00FE34  25                 	db	37
  8214   00FE35  73                 	db	115	;'s'
  8215   00FE36  20                 	db	32
  8216   00FE37  3A                 	db	58	;':'
  8217   00FE38  20                 	db	32
  8218   00FE39  24                 	db	36
  8219   00FE3A  25                 	db	37
  8220   00FE3B  30                 	db	48	;'0'
  8221   00FE3C  36                 	db	54	;'6'
  8222   00FE3D  6C                 	db	108	;'l'
  8223   00FE3E  78                 	db	120	;'x'
  8224   00FE3F  0D                 	db	13
  8225   00FE40  0A                 	db	10
  8226   00FE41  00                 	db	0
  8227   00FE42                     STR_138:
  8228                           
  8229                           ; BSR set to: 7
  8230   00FE42  53                 	db	83	;'S'
  8231   00FE43  74                 	db	116	;'t'
  8232   00FE44  61                 	db	97	;'a'
  8233   00FE45  6E                 	db	110	;'n'
  8234   00FE46  64                 	db	100	;'d'
  8235   00FE47  2D                 	db	45
  8236   00FE48  61                 	db	97	;'a'
  8237   00FE49  6C                 	db	108	;'l'
  8238   00FE4A  6F                 	db	111	;'o'
  8239   00FE4B  6E                 	db	110	;'n'
  8240   00FE4C  65                 	db	101	;'e'
  8241   00FE4D  0A                 	db	10
  8242   00FE4E  0D                 	db	13
  8243   00FE4F  00                 	db	0
  8244   00FE50                     STR_73:
  8245                           
  8246                           ; BSR set to: 7
  8247   00FE50  0D                 	db	13
  8248   00FE51  0A                 	db	10
  8249   00FE52  42                 	db	66	;'B'
  8250   00FE53  6F                 	db	111	;'o'
  8251   00FE54  61                 	db	97	;'a'
  8252   00FE55  72                 	db	114	;'r'
  8253   00FE56  64                 	db	100	;'d'
  8254   00FE57  3A                 	db	58	;':'
  8255   00FE58  20                 	db	32
  8256   00FE59  25                 	db	37
  8257   00FE5A  73                 	db	115	;'s'
  8258   00FE5B  0A                 	db	10
  8259   00FE5C  0D                 	db	13
  8260   00FE5D  00                 	db	0
  8261   00FE5E                     STR_72:
  8262                           
  8263                           ; BSR set to: 7
  8264   00FE5E  53                 	db	83	;'S'
  8265   00FE5F  79                 	db	121	;'y'
  8266   00FE60  73                 	db	115	;'s'
  8267   00FE61  74                 	db	116	;'t'
  8268   00FE62  65                 	db	101	;'e'
  8269   00FE63  6D                 	db	109	;'m'
  8270   00FE64  20                 	db	32
  8271   00FE65  73                 	db	115	;'s'
  8272   00FE66  74                 	db	116	;'t'
  8273   00FE67  6F                 	db	111	;'o'
  8274   00FE68  70                 	db	112	;'p'
  8275   00FE69  21                 	db	33
  8276   00FE6A  21                 	db	33
  8277   00FE6B  00                 	db	0
  8278   00FE6C                     STR_5:
  8279                           
  8280                           ; BSR set to: 7
  8281   00FE6C  4E                 	db	78	;'N'
  8282   00FE6D  6F                 	db	111	;'o'
  8283   00FE6E  20                 	db	32
  8284   00FE6F  53                 	db	83	;'S'
  8285   00FE70  44                 	db	68	;'D'
  8286   00FE71  20                 	db	32
  8287   00FE72  43                 	db	67	;'C'
  8288   00FE73  61                 	db	97	;'a'
  8289   00FE74  72                 	db	114	;'r'
  8290   00FE75  64                 	db	100	;'d'
  8291   00FE76  3F                 	db	63	;'?'
  8292   00FE77  0A                 	db	10
  8293   00FE78  0D                 	db	13
  8294   00FE79  00                 	db	0
  8295   00FE7A                     STR_126:
  8296                           
  8297                           ; BSR set to: 7
  8298   00FE7A  20                 	db	32
  8299   00FE7B  20                 	db	32
  8300   00FE7C  48                 	db	72	;'H'
  8301   00FE7D  45                 	db	69	;'E'
  8302   00FE7E  4C                 	db	76	;'L'
  8303   00FE7F  50                 	db	80	;'P'
  8304   00FE80  20                 	db	32
  8305   00FE81  7C                 	db	124
  8306   00FE82  20                 	db	32
  8307   00FE83  3F                 	db	63	;'?'
  8308   00FE84  0D                 	db	13
  8309   00FE85  0A                 	db	10
  8310   00FE86  00                 	db	0
  8311   00FE87                     STR_137:
  8312                           
  8313                           ; BSR set to: 7
  8314   00FE87  46                 	db	70	;'F'
  8315   00FE88  69                 	db	105	;'i'
  8316   00FE89  6C                 	db	108	;'l'
  8317   00FE8A  65                 	db	101	;'e'
  8318   00FE8B  20                 	db	32
  8319   00FE8C  54                 	db	84	;'T'
  8320   00FE8D  79                 	db	121	;'y'
  8321   00FE8E  70                 	db	112	;'p'
  8322   00FE8F  65                 	db	101	;'e'
  8323   00FE90  20                 	db	32
  8324   00FE91  3A                 	db	58	;':'
  8325   00FE92  20                 	db	32
  8326   00FE93  00                 	db	0
  8327   00FE94                     STR_94:
  8328                           
  8329                           ; BSR set to: 7
  8330   00FE94  3C                 	db	60	;'<'
  8331   00FE95  20                 	db	32
  8332   00FE96  25                 	db	37
  8333   00FE97  73                 	db	115	;'s'
  8334   00FE98  2F                 	db	47
  8335   00FE99  25                 	db	37
  8336   00FE9A  73                 	db	115	;'s'
  8337   00FE9B  20                 	db	32
  8338   00FE9C  3E                 	db	62	;'>'
  8339   00FE9D  0D                 	db	13
  8340   00FE9E  0A                 	db	10
  8341   00FE9F  00                 	db	0
  8342   00FEA0                     STR_86:
  8343                           
  8344                           ; BSR set to: 7
  8345   00FEA0  0D                 	db	13
  8346   00FEA1  0A                 	db	10
  8347   00FEA2  4C                 	db	76	;'L'
  8348   00FEA3  6F                 	db	111	;'o'
  8349   00FEA4  61                 	db	97	;'a'
  8350   00FEA5  64                 	db	100	;'d'
  8351   00FEA6  20                 	db	32
  8352   00FEA7  25                 	db	37
  8353   00FEA8  73                 	db	115	;'s'
  8354   00FEA9  0D                 	db	13
  8355   00FEAA  0A                 	db	10
  8356   00FEAB  00                 	db	0
  8357   00FEAC                     STR_120:
  8358                           
  8359                           ; BSR set to: 7
  8360   00FEAC  20                 	db	32
  8361   00FEAD  20                 	db	32
  8362   00FEAE  43                 	db	67	;'C'
  8363   00FEAF  53                 	db	83	;'S'
  8364   00FEB0  54                 	db	84	;'T'
  8365   00FEB1  41                 	db	65	;'A'
  8366   00FEB2  52                 	db	82	;'R'
  8367   00FEB3  54                 	db	84	;'T'
  8368   00FEB4  0D                 	db	13
  8369   00FEB5  0A                 	db	10
  8370   00FEB6  00                 	db	0
  8371   00FEB7                     STR_121:
  8372                           
  8373                           ; BSR set to: 7
  8374   00FEB7  20                 	db	32
  8375   00FEB8  20                 	db	32
  8376   00FEB9  57                 	db	87	;'W'
  8377   00FEBA  53                 	db	83	;'S'
  8378   00FEBB  54                 	db	84	;'T'
  8379   00FEBC  41                 	db	65	;'A'
  8380   00FEBD  52                 	db	82	;'R'
  8381   00FEBE  54                 	db	84	;'T'
  8382   00FEBF  0D                 	db	13
  8383   00FEC0  0A                 	db	10
  8384   00FEC1  00                 	db	0
  8385   00FEC2                     STR_48:
  8386                           
  8387                           ; BSR set to: 7
  8388   00FEC2  4D                 	db	77	;'M'
  8389   00FEC3  45                 	db	69	;'E'
  8390   00FEC4  5A                 	db	90	;'Z'
  8391   00FEC5  57                 	db	87	;'W'
  8392   00FEC6  30                 	db	48	;'0'
  8393   00FEC7  32                 	db	50	;'2'
  8394   00FEC8  2E                 	db	46
  8395   00FEC9  43                 	db	67	;'C'
  8396   00FECA  46                 	db	70	;'F'
  8397   00FECB  47                 	db	71	;'G'
  8398   00FECC  00                 	db	0
  8399   00FECD                     STR_49:
  8400                           
  8401                           ; BSR set to: 7
  8402   00FECD  4D                 	db	77	;'M'
  8403   00FECE  45                 	db	69	;'E'
  8404   00FECF  5A                 	db	90	;'Z'
  8405   00FED0  57                 	db	87	;'W'
  8406   00FED1  31                 	db	49	;'1'
  8407   00FED2  36                 	db	54	;'6'
  8408   00FED3  2E                 	db	46
  8409   00FED4  43                 	db	67	;'C'
  8410   00FED5  46                 	db	70	;'F'
  8411   00FED6  47                 	db	71	;'G'
  8412   00FED7  00                 	db	0
  8413   00FED8                     STR_50:
  8414                           
  8415                           ; BSR set to: 7
  8416   00FED8  2F                 	db	47
  8417   00FED9  4D                 	db	77	;'M'
  8418   00FEDA  4F                 	db	79	;'O'
  8419   00FEDB  4E                 	db	78	;'N'
  8420   00FEDC  30                 	db	48	;'0'
  8421   00FEDD  32                 	db	50	;'2'
  8422   00FEDE  2E                 	db	46
  8423   00FEDF  53                 	db	83	;'S'
  8424   00FEE0  59                 	db	89	;'Y'
  8425   00FEE1  53                 	db	83	;'S'
  8426   00FEE2  00                 	db	0
  8427   00FEE3                     STR_51:
  8428                           
  8429                           ; BSR set to: 7
  8430   00FEE3  2F                 	db	47
  8431   00FEE4  4D                 	db	77	;'M'
  8432   00FEE5  4F                 	db	79	;'O'
  8433   00FEE6  4E                 	db	78	;'N'
  8434   00FEE7  31                 	db	49	;'1'
  8435   00FEE8  36                 	db	54	;'6'
  8436   00FEE9  2E                 	db	46
  8437   00FEEA  53                 	db	83	;'S'
  8438   00FEEB  59                 	db	89	;'Y'
  8439   00FEEC  53                 	db	83	;'S'
  8440   00FEED  00                 	db	0
  8441   00FEEE                     STR_93:
  8442                           
  8443                           ; BSR set to: 7
  8444   00FEEE  3C                 	db	60	;'<'
  8445   00FEEF  20                 	db	32
  8446   00FEF0  2F                 	db	47
  8447   00FEF1  25                 	db	37
  8448   00FEF2  73                 	db	115	;'s'
  8449   00FEF3  20                 	db	32
  8450   00FEF4  3E                 	db	62	;'>'
  8451   00FEF5  0D                 	db	13
  8452   00FEF6  0A                 	db	10
  8453   00FEF7  00                 	db	0
  8454   00FEF8                     STR_125:
  8455                           
  8456                           ; BSR set to: 7
  8457   00FEF8  20                 	db	32
  8458   00FEF9  20                 	db	32
  8459   00FEFA  46                 	db	70	;'F'
  8460   00FEFB  4C                 	db	76	;'L'
  8461   00FEFC  41                 	db	65	;'A'
  8462   00FEFD  53                 	db	83	;'S'
  8463   00FEFE  48                 	db	72	;'H'
  8464   00FEFF  0D                 	db	13
  8465   00FF00  0A                 	db	10
  8466   00FF01  00                 	db	0
  8467   00FF02                     STR_139:
  8468                           
  8469                           ; BSR set to: 7
  8470   00FF02  4D                 	db	77	;'M'
  8471   00FF03  4F                 	db	79	;'O'
  8472   00FF04  4E                 	db	78	;'N'
  8473   00FF05  49                 	db	73	;'I'
  8474   00FF06  54                 	db	84	;'T'
  8475   00FF07  4F                 	db	79	;'O'
  8476   00FF08  52                 	db	82	;'R'
  8477   00FF09  0A                 	db	10
  8478   00FF0A  0D                 	db	13
  8479   00FF0B  00                 	db	0
  8480   00FF0C                     STR_195:
  8481                           
  8482                           ; BSR set to: 7
  8483   00FF0C  25                 	db	37
  8484   00FF0D  73                 	db	115	;'s'
  8485   00FF0E  25                 	db	37
  8486   00FF0F  30                 	db	48	;'0'
  8487   00FF10  36                 	db	54	;'6'
  8488   00FF11  6C                 	db	108	;'l'
  8489   00FF12  78                 	db	120	;'x'
  8490   00FF13  3A                 	db	58	;':'
  8491   00FF14  00                 	db	0
  8492   00FF15                     STR_168:
  8493                           
  8494                           ; BSR set to: 7
  8495   00FF15  46                 	db	70	;'F'
  8496   00FF16  41                 	db	65	;'A'
  8497   00FF17  54                 	db	84	;'T'
  8498   00FF18  33                 	db	51	;'3'
  8499   00FF19  32                 	db	50	;'2'
  8500   00FF1A  20                 	db	32
  8501   00FF1B  20                 	db	32
  8502   00FF1C  20                 	db	32
  8503   00FF1D  00                 	db	0
  8504   00FF1E                     STR_92:
  8505                           
  8506                           ; BSR set to: 7
  8507   00FF1E  3C                 	db	60	;'<'
  8508   00FF1F  20                 	db	32
  8509   00FF20  25                 	db	37
  8510   00FF21  73                 	db	115	;'s'
  8511   00FF22  20                 	db	32
  8512   00FF23  3E                 	db	62	;'>'
  8513   00FF24  0D                 	db	13
  8514   00FF25  0A                 	db	10
  8515   00FF26  00                 	db	0
  8516   00FF27                     STR_122:
  8517                           
  8518                           ; BSR set to: 7
  8519   00FF27  20                 	db	32
  8520   00FF28  20                 	db	32
  8521   00FF29  52                 	db	82	;'R'
  8522   00FF2A  45                 	db	69	;'E'
  8523   00FF2B  54                 	db	84	;'T'
  8524   00FF2C  49                 	db	73	;'I'
  8525   00FF2D  0D                 	db	13
  8526   00FF2E  0A                 	db	10
  8527   00FF2F  00                 	db	0
  8528   00FF30                     STR_192:
  8529                           
  8530                           ; BSR set to: 7
  8531   00FF30  25                 	db	37
  8532   00FF31  73                 	db	115	;'s'
  8533   00FF32  25                 	db	37
  8534   00FF33  30                 	db	48	;'0'
  8535   00FF34  34                 	db	52	;'4'
  8536   00FF35  78                 	db	120	;'x'
  8537   00FF36  3A                 	db	58	;':'
  8538   00FF37  00                 	db	0
  8539   00FF38                     STR_123:
  8540                           
  8541                           ; BSR set to: 7
  8542   00FF38  20                 	db	32
  8543   00FF39  20                 	db	32
  8544   00FF3A  52                 	db	82	;'R'
  8545   00FF3B  45                 	db	69	;'E'
  8546   00FF3C  47                 	db	71	;'G'
  8547   00FF3D  0D                 	db	13
  8548   00FF3E  0A                 	db	10
  8549   00FF3F  00                 	db	0
  8550   00FF40                     STR_103:
  8551                           
  8552                           ; BSR set to: 7
  8553   00FF40  20                 	db	32
  8554   00FF41  25                 	db	37
  8555   00FF42  31                 	db	49	;'1'
  8556   00FF43  32                 	db	50	;'2'
  8557   00FF44  73                 	db	115	;'s'
  8558   00FF45  20                 	db	32
  8559   00FF46  20                 	db	32
  8560   00FF47  00                 	db	0
  8561   00FF48                     STR_102:
  8562                           
  8563                           ; BSR set to: 7
  8564   00FF48  5B                 	db	91	;'['
  8565   00FF49  25                 	db	37
  8566   00FF4A  31                 	db	49	;'1'
  8567   00FF4B  32                 	db	50	;'2'
  8568   00FF4C  73                 	db	115	;'s'
  8569   00FF4D  5D                 	db	93	;']'
  8570   00FF4E  20                 	db	32
  8571   00FF4F  00                 	db	0
  8572   00FF50                     STR_46:
  8573                           
  8574                           ; BSR set to: 7
  8575   00FF50  4D                 	db	77	;'M'
  8576   00FF51  45                 	db	69	;'E'
  8577   00FF52  5A                 	db	90	;'Z'
  8578   00FF53  57                 	db	87	;'W'
  8579   00FF54  36                 	db	54	;'6'
  8580   00FF55  35                 	db	53	;'5'
  8581   00FF56  43                 	db	67	;'C'
  8582   00FF57  00                 	db	0
  8583   00FF58                     STR_52:
  8584                           
  8585                           ; BSR set to: 7
  8586   00FF58  43                 	db	67	;'C'
  8587   00FF59  4C                 	db	76	;'L'
  8588   00FF5A  4B                 	db	75	;'K'
  8589   00FF5B  5F                 	db	95	;'_'
  8590   00FF5C  49                 	db	73	;'I'
  8591   00FF5D  4E                 	db	78	;'N'
  8592   00FF5E  43                 	db	67	;'C'
  8593   00FF5F  00                 	db	0
  8594   00FF60                     STR_53:
  8595                           
  8596                           ; BSR set to: 7
  8597   00FF60  52                 	db	82	;'R'
  8598   00FF61  45                 	db	69	;'E'
  8599   00FF62  51                 	db	81	;'Q'
  8600   00FF63  5F                 	db	95	;'_'
  8601   00FF64  48                 	db	72	;'H'
  8602   00FF65  44                 	db	68	;'D'
  8603   00FF66  52                 	db	82	;'R'
  8604   00FF67  00                 	db	0
  8605   00FF68                     STR_62:
  8606                           
  8607                           ; BSR set to: 7
  8608   00FF68  4D                 	db	77	;'M'
  8609   00FF69  4F                 	db	79	;'O'
  8610   00FF6A  4E                 	db	78	;'N'
  8611   00FF6B  49                 	db	73	;'I'
  8612   00FF6C  54                 	db	84	;'T'
  8613   00FF6D  4F                 	db	79	;'O'
  8614   00FF6E  52                 	db	82	;'R'
  8615   00FF6F  00                 	db	0
  8616   00FF70                     STR_206:
  8617                           
  8618                           ; BSR set to: 7
  8619   00FF70  28                 	db	40
  8620   00FF71  6E                 	db	110	;'n'
  8621   00FF72  75                 	db	117	;'u'
  8622   00FF73  6C                 	db	108	;'l'
  8623   00FF74  6C                 	db	108	;'l'
  8624   00FF75  29                 	db	41
  8625   00FF76  00                 	db	0
  8626   00FF77                     STR_58:
  8627                           
  8628                           ; BSR set to: 7
  8629   00FF77  43                 	db	67	;'C'
  8630   00FF78  53                 	db	83	;'S'
  8631   00FF79  54                 	db	84	;'T'
  8632   00FF7A  41                 	db	65	;'A'
  8633   00FF7B  52                 	db	82	;'R'
  8634   00FF7C  54                 	db	84	;'T'
  8635   00FF7D  00                 	db	0
  8636   00FF7E                     STR_59:
  8637                           
  8638                           ; BSR set to: 7
  8639   00FF7E  57                 	db	87	;'W'
  8640   00FF7F  53                 	db	83	;'S'
  8641   00FF80  54                 	db	84	;'T'
  8642   00FF81  41                 	db	65	;'A'
  8643   00FF82  52                 	db	82	;'R'
  8644   00FF83  54                 	db	84	;'T'
  8645   00FF84  00                 	db	0
  8646   00FF85                     STR_193:
  8647                           
  8648                           ; BSR set to: 7
  8649   00FF85  20                 	db	32
  8650   00FF86  25                 	db	37
  8651   00FF87  30                 	db	48	;'0'
  8652   00FF88  32                 	db	50	;'2'
  8653   00FF89  78                 	db	120	;'x'
  8654   00FF8A  00                 	db	0
  8655   00FF8B                     STR_186:
  8656                           
  8657                           ; BSR set to: 7
  8658   00FF8B  66                 	db	102	;'f'
  8659   00FF8C  61                 	db	97	;'a'
  8660   00FF8D  74                 	db	116	;'t'
  8661   00FF8E  3A                 	db	58	;':'
  8662   00FF8F  20                 	db	32
  8663   00FF90  00                 	db	0
  8664   00FF91                     STR_65:
  8665                           
  8666                           ; BSR set to: 7
  8667   00FF91  46                 	db	70	;'F'
  8668   00FF92  4C                 	db	76	;'L'
  8669   00FF93  41                 	db	65	;'A'
  8670   00FF94  53                 	db	83	;'S'
  8671   00FF95  48                 	db	72	;'H'
  8672   00FF96  00                 	db	0
  8673   00FF97                     STR_63:
  8674                           
  8675                           ; BSR set to: 7
  8676   00FF97  4D                 	db	77	;'M'
  8677   00FF98  44                 	db	68	;'D'
  8678   00FF99  55                 	db	85	;'U'
  8679   00FF9A  4D                 	db	77	;'M'
  8680   00FF9B  50                 	db	80	;'P'
  8681   00FF9C  00                 	db	0
  8682   00FF9D                     STR_35:
  8683                           
  8684                           ; BSR set to: 7
  8685   00FF9D  62                 	db	98	;'b'
  8686   00FF9E  75                 	db	117	;'u'
  8687   00FF9F  66                 	db	102	;'f'
  8688   00FFA0  3A                 	db	58	;':'
  8689   00FFA1  20                 	db	32
  8690   00FFA2  00                 	db	0
  8691   00FFA3                     STR_74:
  8692                           
  8693                           ; BSR set to: 7
  8694   00FFA3  25                 	db	37
  8695   00FFA4  73                 	db	115	;'s'
  8696   00FFA5  3E                 	db	62	;'>'
  8697   00FFA6  20                 	db	32
  8698   00FFA7  00                 	db	0
  8699   00FFA8                     STR_132:
  8700                           
  8701                           ; BSR set to: 7
  8702   00FFA8  4D                 	db	77	;'M'
  8703   00FFA9  65                 	db	101	;'e'
  8704   00FFAA  6D                 	db	109	;'m'
  8705   00FFAB  20                 	db	32
  8706   00FFAC  00                 	db	0
  8707   00FFAD                     STR_84:
  8708                           
  8709                           ; BSR set to: 7
  8710   00FFAD  30                 	db	48	;'0'
  8711   00FFAE  3A                 	db	58	;':'
  8712   00FFAF  2F                 	db	47
  8713   00FFB0  2F                 	db	47
  8714   00FFB1  00                 	db	0
  8715   00FFB2                     STR_57:
  8716                           
  8717                           ; BSR set to: 7
  8718   00FFB2  4C                 	db	76	;'L'
  8719   00FFB3  4F                 	db	79	;'O'
  8720   00FFB4  41                 	db	65	;'A'
  8721   00FFB5  44                 	db	68	;'D'
  8722   00FFB6  00                 	db	0
  8723   00FFB7                     STR_60:
  8724                           
  8725                           ; BSR set to: 7
  8726   00FFB7  52                 	db	82	;'R'
  8727   00FFB8  45                 	db	69	;'E'
  8728   00FFB9  54                 	db	84	;'T'
  8729   00FFBA  49                 	db	73	;'I'
  8730   00FFBB  00                 	db	0
  8731   00FFBC                     STR_66:
  8732                           
  8733                           ; BSR set to: 7
  8734   00FFBC  48                 	db	72	;'H'
  8735   00FFBD  45                 	db	69	;'E'
  8736   00FFBE  4C                 	db	76	;'L'
  8737   00FFBF  50                 	db	80	;'P'
  8738   00FFC0  00                 	db	0
  8739   00FFC1                     STR_64:
  8740                           
  8741                           ; BSR set to: 7
  8742   00FFC1  53                 	db	83	;'S'
  8743   00FFC2  48                 	db	72	;'H'
  8744   00FFC3  4F                 	db	79	;'O'
  8745   00FFC4  57                 	db	87	;'W'
  8746   00FFC5  00                 	db	0
  8747   00FFC6                     STR_43:
  8748                           
  8749                           ; BSR set to: 7
  8750   00FFC6  52                 	db	82	;'R'
  8751   00FFC7  44                 	db	68	;'D'
  8752   00FFC8  3A                 	db	58	;':'
  8753   00FFC9  20                 	db	32
  8754   00FFCA  00                 	db	0
  8755   00FFCB                     STR_42:
  8756                           
  8757                           ; BSR set to: 7
  8758   00FFCB  57                 	db	87	;'W'
  8759   00FFCC  52                 	db	82	;'R'
  8760   00FFCD  3A                 	db	58	;':'
  8761   00FFCE  20                 	db	32
  8762   00FFCF  00                 	db	0
  8763   00FFD0                     STR_26:
  8764                           
  8765                           ; BSR set to: 7
  8766   00FFD0  53                 	db	83	;'S'
  8767   00FFD1  44                 	db	68	;'D'
  8768   00FFD2  3A                 	db	58	;':'
  8769   00FFD3  20                 	db	32
  8770   00FFD4  00                 	db	0
  8771   00FFD5                     STR_200:
  8772                           
  8773                           ; BSR set to: 7
  8774   00FFD5  69                 	db	105	;'i'
  8775   00FFD6  6E                 	db	110	;'n'
  8776   00FFD7  66                 	db	102	;'f'
  8777   00FFD8  00                 	db	0
  8778   00FFD9                     STR_203:
  8779                           
  8780                           ; BSR set to: 7
  8781   00FFD9  6E                 	db	110	;'n'
  8782   00FFDA  61                 	db	97	;'a'
  8783   00FFDB  6E                 	db	110	;'n'
  8784   00FFDC  00                 	db	0
  8785   00FFDD                     
  8786                           ; BSR set to: 7
  8787   00FFDD  49                 	db	73	;'I'
  8788   00FFDE  4E                 	db	78	;'N'
  8789   00FFDF  46                 	db	70	;'F'
  8790   00FFE0  00                 	db	0
  8791   00FFE1                     
  8792                           ; BSR set to: 7
  8793   00FFE1  4E                 	db	78	;'N'
  8794   00FFE2  61                 	db	97	;'a'
  8795   00FFE3  4E                 	db	78	;'N'
  8796   00FFE4  00                 	db	0
  8797   00FFE5                     STR_61:
  8798                           
  8799                           ; BSR set to: 7
  8800   00FFE5  52                 	db	82	;'R'
  8801   00FFE6  45                 	db	69	;'E'
  8802   00FFE7  47                 	db	71	;'G'
  8803   00FFE8  00                 	db	0
  8804   00FFE9                     STR_55:
  8805                           
  8806                           ; BSR set to: 7
  8807   00FFE9  44                 	db	68	;'D'
  8808   00FFEA  49                 	db	73	;'I'
  8809   00FFEB  52                 	db	82	;'R'
  8810   00FFEC  00                 	db	0
  8811   00FFED                     STR_172:
  8812                           
  8813                           ; BSR set to: 7
  8814   00FFED  4F                 	db	79	;'O'
  8815   00FFEE  56                 	db	86	;'V'
  8816   00FFEF  00                 	db	0
  8817   00FFF0                     STR_127:
  8818                           
  8819                           ; BSR set to: 7
  8820   00FFF0  4C                 	db	76	;'L'
  8821   00FFF1  3D                 	db	61	;'='
  8822   00FFF2  00                 	db	0
  8823   00FFF3                     STR_56:
  8824                           
  8825                           ; BSR set to: 7
  8826   00FFF3  43                 	db	67	;'C'
  8827   00FFF4  44                 	db	68	;'D'
  8828   00FFF5  00                 	db	0
  8829   00FFF6                     STR_54:
  8830                           
  8831                           ; BSR set to: 7
  8832   00FFF6  4C                 	db	76	;'L'
  8833   00FFF7  53                 	db	83	;'S'
  8834   00FFF8  00                 	db	0
  8835   00FFF9                     STR_81:
  8836                           
  8837                           ; BSR set to: 7
  8838   00FFF9  25                 	db	37
  8839   00FFFA  73                 	db	115	;'s'
  8840   00FFFB  00                 	db	0
  8841   00FFFC                     STR_67:
  8842                           
  8843                           ; BSR set to: 7
  8844   00FFFC  3F                 	db	63	;'?'
  8845   00FFFD  00                 	db	0
  8846   00FE07                     STR_167         equ	STR_166
  8847   00FF85                     STR_196         equ	STR_193
  8848   00FFF9                     STR_107         equ	STR_81
  8849   00FFD9                     STR_204         equ	STR_203
  8850   00FFD9                     STR_205         equ	STR_203
  8851   00FFD5                     STR_201         equ	STR_200
  8852   00FFD5                     STR_202         equ	STR_200
  8853   00FDC6                     STR_9           equ	STR_7
  8854   00FFC4                     STR_129         equ	STR_64+3
  8855   00FFC4                     STR_130         equ	STR_64+3
  8856   00FFED                     STR_173         equ	STR_172
  8857   00FFF0                     STR_128         equ	STR_127
  8858   00FF8B                     STR_189         equ	STR_186
  8859   00FF9D                     STR_39          equ	STR_35
  8860   00FFD0                     STR_29          equ	STR_26
  8861   00FCC2                     STR_152         equ	STR_140
  8862   00FF15                     STR_169         equ	STR_168
  8863   00FE58                     STR_194         equ	STR_73+8
  8864   00FE58                     STR_197         equ	STR_73+8
  8865   00FC1A                     STR_154         equ	STR_142
  8866   00FB4E                     STR_182         equ	STR_175
  8867   00FA08                     STR_153         equ	STR_141
  8868   00F28B                     STR_1           equ	STR_27+52
  8869   00F28B                     STR_3           equ	STR_27+52
  8870   00FC04                     STR_164         equ	STR_162
  8871   00FDB5                     STR_157         equ	STR_144
  8872   00FDA4                     STR_156         equ	STR_143
  8873   00FE94                     STR_100         equ	STR_94
  8874   00FEEE                     STR_99          equ	STR_93
  8875   00FF1E                     STR_98          equ	STR_92
  8876   00FC9A                     STR_97          equ	STR_96
  8877   00FC9A                     STR_105         equ	STR_96
  8878   00FD0F                     STR_165         equ	STR_163
  8879   00FC5D                     STR_78          equ	STR_133+2
  8880   00FB90                     STR_91          equ	STR_88+20
  8881   00FB90                     STR_101         equ	STR_88+20
  8882   00FB90                     STR_104         equ	STR_88+20
  8883   00FB90                     STR_131         equ	STR_88+20
  8884   00FB90                     STR_159         equ	STR_88+20
  8885   00FB7B                     STR_68          equ	STR_71+22
  8886   00FB7B                     STR_178         equ	STR_71+22
  8887   00FB7B                     STR_199         equ	STR_71+22
  8888   00FFFE  00                 	db	0	; dummy byte at the end
  8889   000003                     __activetblptr  equ	3
  8890                           
  8891                           ; #config settings
  8892                           
  8893                           	psect	cinit
  8894   01E1C0                     __pcinit:
  8895                           	callstack 0
  8896   01E1C0                     start_initialization:
  8897                           	callstack 0
  8898   01E1C0                     __initialization:
  8899                           	callstack 0
  8900                           
  8901                           ; Initialize objects allocated to BANK9 (139 bytes)
  8902                           ; load TBLPTR registers with __pidataBANK9
  8903   01E1C0  0E5E               	movlw	low __pidataBANK9
  8904   01E1C2  6EF6               	movwf	tblptrl,c
  8905   01E1C4  0EF0               	movlw	high __pidataBANK9
  8906   01E1C6  6EF7               	movwf	tblptrh,c
  8907   01E1C8  0E01               	movlw	low (__pidataBANK9 shr (0+16))
  8908   01E1CA  6EF8               	movwf	tblptru,c
  8909   01E1CC  EE02  F100         	lfsr	0,__pdataBANK9
  8910   01E1D0  EE10 F08B          	lfsr	1,139
  8911   01E1D4                     copy_data0:
  8912   01E1D4  0009               	tblrd		*+
  8913   01E1D6  C4F5 F4EE          	movff	tablat,postinc0
  8914   01E1DA  50E5               	movf	postdec1,w,c
  8915   01E1DC  50E1               	movf	fsr1l,w,c
  8916   01E1DE  E1FA               	bnz	copy_data0
  8917                           
  8918                           ; Initialize objects allocated to BANK8 (12 bytes)
  8919                           ; load TBLPTR registers with __pidataBANK8
  8920   01E1E0  0E4C               	movlw	low __pidataBANK8
  8921   01E1E2  6EF6               	movwf	tblptrl,c
  8922   01E1E4  0E02               	movlw	high __pidataBANK8
  8923   01E1E6  6EF7               	movwf	tblptrh,c
  8924   01E1E8  0E00               	movlw	low (__pidataBANK8 shr (0+16))
  8925   01E1EA  6EF8               	movwf	tblptru,c
  8926   01E1EC  EE02  F0D3         	lfsr	0,__pdataBANK8
  8927   01E1F0  EE10 F00C          	lfsr	1,12
  8928   01E1F4                     copy_data1:
  8929   01E1F4  0009               	tblrd		*+
  8930   01E1F6  C4F5 F4EE          	movff	tablat,postinc0
  8931   01E1FA  50E5               	movf	postdec1,w,c
  8932   01E1FC  50E1               	movf	fsr1l,w,c
  8933   01E1FE  E1FA               	bnz	copy_data1
  8934                           
  8935                           ; Initialize objects allocated to BANK7 (26 bytes)
  8936                           ; load TBLPTR registers with __pidataBANK7
  8937   01E200  0E8A               	movlw	low __pidataBANK7
  8938   01E202  6EF6               	movwf	tblptrl,c
  8939   01E204  0E01               	movlw	high __pidataBANK7
  8940   01E206  6EF7               	movwf	tblptrh,c
  8941   01E208  0E00               	movlw	low (__pidataBANK7 shr (0+16))
  8942   01E20A  6EF8               	movwf	tblptru,c
  8943   01E20C  EE01  F3E6         	lfsr	0,__pdataBANK7
  8944   01E210  EE10 F01A          	lfsr	1,26
  8945   01E214                     copy_data2:
  8946   01E214  0009               	tblrd		*+
  8947   01E216  C4F5 F4EE          	movff	tablat,postinc0
  8948   01E21A  50E5               	movf	postdec1,w,c
  8949   01E21C  50E1               	movf	fsr1l,w,c
  8950   01E21E  E1FA               	bnz	copy_data2
  8951                           
  8952                           ; Clear objects allocated to BIGRAM (2680 bytes)
  8953   01E220  EE02  F380         	lfsr	0,__pbssBIGRAM
  8954   01E224  EE12 F278          	lfsr	1,2680
  8955   01E228                     clear_0:
  8956   01E228  6AEE               	clrf	postinc0,c
  8957   01E22A  50E5               	movf	postdec1,w,c
  8958   01E22C  50E1               	movf	fsr1l,w,c
  8959   01E22E  E1FC               	bnz	clear_0
  8960   01E230  50E2               	movf	fsr1h,w,c
  8961   01E232  E1FA               	bnz	clear_0
  8962                           
  8963                           ; Clear objects allocated to BANK11 (128 bytes)
  8964   01E234  EE02  F300         	lfsr	0,__pbssBANK11
  8965   01E238  0E80               	movlw	128
  8966   01E23A                     clear_1:
  8967   01E23A  6AEE               	clrf	postinc0,c
  8968   01E23C  06E8               	decf	wreg,f,c
  8969   01E23E  E1FD               	bnz	clear_1
  8970                           
  8971                           ; Clear objects allocated to BANK10 (209 bytes)
  8972   01E240  EE02  F200         	lfsr	0,__pbssBANK10
  8973   01E244  0ED1               	movlw	209
  8974   01E246                     clear_2:
  8975   01E246  6AEE               	clrf	postinc0,c
  8976   01E248  06E8               	decf	wreg,f,c
  8977   01E24A  E1FD               	bnz	clear_2
  8978                           
  8979                           ; Clear objects allocated to BANK9 (40 bytes)
  8980   01E24C  EE02  F18B         	lfsr	0,__pbssBANK9
  8981   01E250  0E28               	movlw	40
  8982   01E252                     clear_3:
  8983   01E252  6AEE               	clrf	postinc0,c
  8984   01E254  06E8               	decf	wreg,f,c
  8985   01E256  E1FD               	bnz	clear_3
  8986                           
  8987                           ; Clear objects allocated to BANK8 (211 bytes)
  8988   01E258  EE02  F000         	lfsr	0,__pbssBANK8
  8989   01E25C  0ED3               	movlw	211
  8990   01E25E                     clear_4:
  8991   01E25E  6AEE               	clrf	postinc0,c
  8992   01E260  06E8               	decf	wreg,f,c
  8993   01E262  E1FD               	bnz	clear_4
  8994                           
  8995                           ; Clear objects allocated to BANK7 (72 bytes)
  8996   01E264  EE01  F39E         	lfsr	0,__pbssBANK7
  8997   01E268  0E48               	movlw	72
  8998   01E26A                     clear_5:
  8999   01E26A  6AEE               	clrf	postinc0,c
  9000   01E26C  06E8               	decf	wreg,f,c
  9001   01E26E  E1FD               	bnz	clear_5
  9002                           
  9003                           ; Clear objects allocated to COMRAM (3 bytes)
  9004   01E270  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  9005   01E272  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  9006   01E274  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  9007                           
  9008                           ;
  9009                           ; Setup IVTBASE
  9010                           ;
  9011   00045D                     IVTBASEL        equ	1117
  9012   00045E                     IVTBASEH        equ	1118
  9013   00045F                     IVTBASEU        equ	1119
  9014   01E276  0104               	movlb	4
  9015   01E278  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  9016   01E27A  6F5D               	movwf	93,b
  9017   01E27C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  9018   01E27E  6F5E               	movwf	94,b
  9019   01E280  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  9020   01E282  6F5F               	movwf	95,b
  9021   01E284                     end_of_initialization:
  9022                           	callstack 0
  9023   01E284                     __end_of__initialization:
  9024                           	callstack 0
  9025   01E284  0100               	movlb	0
  9026   01E286  EFD0  F0B8         	goto	_main	;jump to C main() function
  9027                           
  9028                           	psect	bssCOMRAM
  9029   00055A                     __pbssCOMRAM:
  9030                           	callstack 0
  9031   00055A                     _prec:
  9032                           	callstack 0
  9033   00055A                     	ds	2
  9034   00055C                     _flags:
  9035                           	callstack 0
  9036   00055C                     	ds	1
  9037                           
  9038                           	psect	bssBANK7
  9039   00079E                     __pbssBANK7:
  9040                           	callstack 0
  9041   00079E                     _arg:
  9042                           	callstack 0
  9043   00079E                     	ds	10
  9044   0007A8                     _ctx_:
  9045                           	callstack 0
  9046   0007A8                     	ds	5
  9047   0007AD                     _raw_addr:
  9048                           	callstack 0
  9049   0007AD                     	ds	4
  9050   0007B1                     _width:
  9051                           	callstack 0
  9052   0007B1                     	ds	2
  9053   0007B3                     _errno:
  9054                           	callstack 0
  9055   0007B3                     	ds	2
  9056   0007B5                     _Fsid:
  9057                           	callstack 0
  9058   0007B5                     	ds	2
  9059   0007B7                     _FatFs:
  9060                           	callstack 0
  9061   0007B7                     	ds	2
  9062   0007B9                     _file_size:
  9063                           	callstack 0
  9064   0007B9                     	ds	2
  9065   0007BB                     _fin_size:
  9066                           	callstack 0
  9067   0007BB                     	ds	2
  9068   0007BD                     _frd_ptr:
  9069                           	callstack 0
  9070   0007BD                     	ds	2
  9071   0007BF                     setup_sd@retry:
  9072                           	callstack 0
  9073   0007BF                     	ds	2
  9074   0007C1                     _rx_cnt:
  9075                           	callstack 0
  9076   0007C1                     	ds	2
  9077   0007C3                     _rx_rp:
  9078                           	callstack 0
  9079   0007C3                     	ds	2
  9080   0007C5                     _rx_wp:
  9081                           	callstack 0
  9082   0007C5                     	ds	2
  9083   0007C7                     _CurrVol:
  9084                           	callstack 0
  9085   0007C7                     	ds	1
  9086   0007C8                     _mon:
  9087                           	callstack 0
  9088   0007C8                     	ds	1
  9089   0007C9                     _load_flg:
  9090                           	callstack 0
  9091   0007C9                     	ds	1
  9092   0007CA                     _cin_no:
  9093                           	callstack 0
  9094   0007CA                     	ds	1
  9095   0007CB                     _irq_flg:
  9096                           	callstack 0
  9097   0007CB                     	ds	1
  9098   0007CC                     _wup_flg:
  9099                           	callstack 0
  9100   0007CC                     	ds	1
  9101   0007CD                     _nmi_sig:
  9102                           	callstack 0
  9103   0007CD                     	ds	1
  9104   0007CE                     _req_tbl:
  9105                           	callstack 0
  9106   0007CE                     	ds	13
  9107   0007DB                     _bioreq_ubuffadr:
  9108                           	callstack 0
  9109   0007DB                     	ds	4
  9110   0007DF                     _clk_fs:
  9111                           	callstack 0
  9112   0007DF                     	ds	4
  9113   0007E3                     _fin_cnt:
  9114                           	callstack 0
  9115   0007E3                     	ds	2
  9116   0007E5                     _cpu_flg:
  9117                           	callstack 0
  9118   0007E5                     	ds	1
  9119                           
  9120                           	psect	dataBANK7
  9121   0007E6                     __pdataBANK7:
  9122                           	callstack 0
  9123   0007E6                     _t_conf:
  9124                           	callstack 0
  9125   0007E6                     	ds	8
  9126   0007EE                     _start_lba:
  9127                           	callstack 0
  9128   0007EE                     	ds	4
  9129   0007F2                     	ds	2
  9130   0007F4                     	ds	2
  9131   0007F6                     	ds	2
  9132   0007F8                     	ds	2
  9133   0007FA                     	ds	2
  9134   0007FC                     	ds	2
  9135   0007FE                     _SPI_SD_ctx:
  9136                           	callstack 0
  9137   0007FE                     	ds	2
  9138                           
  9139                           	psect	bssBANK8
  9140   000800                     __pbssBANK8:
  9141                           	callstack 0
  9142   000800                     	ds	22
  9143   000816                     _debug:
  9144                           	callstack 0
  9145   000816                     	ds	6
  9146   00081C                     floorf@F521:
  9147                           	callstack 0
  9148   00081C                     	ds	4
  9149   000820                     ___fpclassifyf@F465:
  9150                           	callstack 0
  9151   000820                     	ds	4
  9152   000824                     _bioreq_cbuffadr:
  9153                           	callstack 0
  9154   000824                     	ds	4
  9155   000828                     _dbuf:
  9156                           	callstack 0
  9157   000828                     	ds	80
  9158   000878                     _binv:
  9159                           	callstack 0
  9160   000878                     	ds	42
  9161   0008A2                     _fh:
  9162                           	callstack 0
  9163   0008A2                     	ds	32
  9164   0008C2                     _fin_name:
  9165                           	callstack 0
  9166   0008C2                     	ds	13
  9167   0008CF                     _pic18f47q43_spi_ctx:
  9168                           	callstack 0
  9169   0008CF                     	ds	4
  9170                           
  9171                           	psect	dataBANK8
  9172   0008D3                     __pdataBANK8:
  9173                           	callstack 0
  9174   0008D3                     _strin_func:
  9175                           	callstack 0
  9176   0008D3                     	ds	6
  9177   0008D9                     _get_char:
  9178                           	callstack 0
  9179   0008D9                     	ds	6
  9180                           
  9181                           	psect	bssBANK9
  9182   00098B                     __pbssBANK9:
  9183                           	callstack 0
  9184   00098B                     	ds	40
  9185                           
  9186                           	psect	dataBANK9
  9187   000900                     __pdataBANK9:
  9188                           	callstack 0
  9189   000900                     _cmd:
  9190                           	callstack 0
  9191   000900                     	ds	75
  9192   00094B                     _cpm_drives:
  9193                           	callstack 0
  9194   00094B                     	ds	64
  9195                           
  9196                           	psect	bssBANK10
  9197   000A00                     __pbssBANK10:
  9198                           	callstack 0
  9199   000A00                     _disk_buf:
  9200                           	callstack 0
  9201   000A00                     	ds	128
  9202   000A80                     _line_buf:
  9203                           	callstack 0
  9204   000A80                     	ds	81
  9205                           
  9206                           	psect	bssBANK11
  9207   000B00                     __pbssBANK11:
  9208                           	callstack 0
  9209   000B00                     _rx_buf:
  9210                           	callstack 0
  9211   000B00                     	ds	128
  9212                           
  9213                           	psect	bssBIGRAM
  9214   000B80                     __pbssBIGRAM:
  9215                           	callstack 0
  9216   000B80                     _fs:
  9217                           	callstack 0
  9218   000B80                     	ds	564
  9219   000DB4                     _in_fl:
  9220                           	callstack 0
  9221   000DB4                     	ds	546
  9222   000FD6                     _rom_fl:
  9223                           	callstack 0
  9224   000FD6                     	ds	546
  9225   0011F8                     _cin_file:
  9226                           	callstack 0
  9227   0011F8                     	ds	512
  9228   0013F8                     _tmp_buf:
  9229                           	callstack 0
  9230   0013F8                     	ds	512
  9231                           
  9232                           	psect	cstackBANK7
  9233   000700                     __pcstackBANK7:
  9234                           	callstack 0
  9235   000700                     ?_in_file:
  9236                           	callstack 0
  9237   000700                     ?_str_inf:
  9238                           	callstack 0
  9239   000700                     ?_load_config:
  9240                           	callstack 0
  9241   000700                     ?_load_program:
  9242                           	callstack 0
  9243   000700                     ?_u_getch:
  9244                           	callstack 0
  9245   000700                     ?_get_str:
  9246                           	callstack 0
  9247   000700                     get_str@buf:
  9248                           	callstack 0
  9249   000700                     load_program@fname:
  9250                           	callstack 0
  9251   000700                     str_inf@buf:
  9252                           	callstack 0
  9253   000700                     f_getcwd@ccl:
  9254                           	callstack 0
  9255   000700                     ??_see_file:
  9256                           
  9257                           ; 1 bytes @ 0x0
  9258   000700                     	ds	2
  9259   000702                     get_str@cnt:
  9260                           	callstack 0
  9261   000702                     str_inf@cnt:
  9262                           	callstack 0
  9263   000702                     see_file@rdbuf:
  9264                           	callstack 0
  9265   000702                     load_program@adr0:
  9266                           	callstack 0
  9267   000702                     ??_load_config:
  9268   000702                     ??_u_getch:
  9269                           
  9270                           ; 1 bytes @ 0x2
  9271   000702                     	ds	1
  9272   000703                     ??_str_inf:
  9273   000703                     ??_get_str:
  9274                           
  9275                           ; 1 bytes @ 0x3
  9276   000703                     	ds	1
  9277   000704                     see_file@br:
  9278                           	callstack 0
  9279   000704                     f_getcwd@tp:
  9280                           	callstack 0
  9281                           
  9282                           ; 2 bytes @ 0x4
  9283   000704                     	ds	1
  9284   000705                     get_str@c:
  9285                           	callstack 0
  9286   000705                     str_inf@c:
  9287                           	callstack 0
  9288                           
  9289                           ; 2 bytes @ 0x5
  9290   000705                     	ds	1
  9291   000706                     see_file@fr:
  9292                           	callstack 0
  9293   000706                     load_program@rdbuf:
  9294                           	callstack 0
  9295   000706                     f_getcwd@n:
  9296                           	callstack 0
  9297                           
  9298                           ; 2 bytes @ 0x6
  9299   000706                     	ds	1
  9300   000707                     str_inf@a:
  9301                           	callstack 0
  9302   000707                     get_str@i:
  9303                           	callstack 0
  9304   000707                     see_file@header:
  9305                           	callstack 0
  9306                           
  9307                           ; 2 bytes @ 0x7
  9308   000707                     	ds	1
  9309   000708                     load_program@btr:
  9310                           	callstack 0
  9311   000708                     str_inf@i:
  9312                           	callstack 0
  9313   000708                     f_getcwd@i:
  9314                           	callstack 0
  9315                           
  9316                           ; 2 bytes @ 0x8
  9317   000708                     	ds	2
  9318   00070A                     _unimon_console$1022:
  9319                           	callstack 0
  9320   00070A                     load_config@buf:
  9321                           	callstack 0
  9322   00070A                     load_program@adr:
  9323                           	callstack 0
  9324   00070A                     f_getcwd@fno:
  9325                           	callstack 0
  9326                           
  9327                           ; 22 bytes @ 0xA
  9328   00070A                     	ds	2
  9329   00070C                     load_config@fr:
  9330                           	callstack 0
  9331   00070C                     unimon_console@buf:
  9332                           	callstack 0
  9333                           
  9334                           ; 2 bytes @ 0xC
  9335   00070C                     	ds	1
  9336   00070D                     load_config@a:
  9337                           	callstack 0
  9338                           
  9339                           ; 2 bytes @ 0xD
  9340   00070D                     	ds	1
  9341   00070E                     unimon_console@cnt:
  9342                           	callstack 0
  9343   00070E                     load_program@cnt:
  9344                           	callstack 0
  9345                           
  9346                           ; 2 bytes @ 0xE
  9347   00070E                     	ds	1
  9348   00070F                     load_config@conf:
  9349                           	callstack 0
  9350                           
  9351                           ; 2 bytes @ 0xF
  9352   00070F                     	ds	1
  9353   000710                     _bus_master_operation$1027:
  9354                           	callstack 0
  9355   000710                     load_program@br:
  9356                           	callstack 0
  9357                           
  9358                           ; 2 bytes @ 0x10
  9359   000710                     	ds	1
  9360   000711                     load_config@str:
  9361                           	callstack 0
  9362                           
  9363                           ; 2 bytes @ 0x11
  9364   000711                     	ds	1
  9365   000712                     load_program@fr:
  9366                           	callstack 0
  9367   000712                     bus_master_operation@buf:
  9368                           	callstack 0
  9369                           
  9370                           ; 2 bytes @ 0x12
  9371   000712                     	ds	1
  9372   000713                     load_program@header:
  9373                           	callstack 0
  9374   000713                     load_config@i:
  9375                           	callstack 0
  9376                           
  9377                           ; 2 bytes @ 0x13
  9378   000713                     	ds	1
  9379   000714                     bus_master_operation@cnt:
  9380                           	callstack 0
  9381                           
  9382                           ; 2 bytes @ 0x14
  9383   000714                     	ds	1
  9384   000715                     load_file@p:
  9385                           	callstack 0
  9386                           
  9387                           ; 2 bytes @ 0x15
  9388   000715                     	ds	1
  9389   000716                     ?_setup_monitor:
  9390                           	callstack 0
  9391   000716                     boot_file@flag:
  9392                           	callstack 0
  9393   000716                     return_cpu@rs:
  9394                           	callstack 0
  9395   000716                     wstart_prog@rs:
  9396                           	callstack 0
  9397   000716                     restart_prog@rs:
  9398                           	callstack 0
  9399   000716                     mon_prog@p:
  9400                           	callstack 0
  9401                           
  9402                           ; 2 bytes @ 0x16
  9403   000716                     	ds	1
  9404   000717                     boot_file@m:
  9405                           	callstack 0
  9406                           
  9407                           ; 1 bytes @ 0x17
  9408   000717                     	ds	1
  9409   000718                     boot_file@rs:
  9410                           	callstack 0
  9411   000718                     mon_prog@rs:
  9412                           	callstack 0
  9413   000718                     setup_monitor@rs:
  9414                           	callstack 0
  9415                           
  9416                           ; 2 bytes @ 0x18
  9417   000718                     	ds	1
  9418   000719                     mon_prog@sw:
  9419                           	callstack 0
  9420                           
  9421                           ; 1 bytes @ 0x19
  9422   000719                     	ds	7
  9423   000720                     f_getcwd@fs:
  9424                           	callstack 0
  9425                           
  9426                           ; 2 bytes @ 0x20
  9427   000720                     	ds	2
  9428   000722                     f_getcwd@res:
  9429                           	callstack 0
  9430                           
  9431                           ; 1 bytes @ 0x22
  9432   000722                     	ds	1
  9433   000723                     f_getcwd@dj:
  9434                           	callstack 0
  9435                           
  9436                           ; 40 bytes @ 0x23
  9437   000723                     	ds	40
  9438   00074B                     scan_files@fn:
  9439                           	callstack 0
  9440   00074B                     scan_files1@fn:
  9441                           	callstack 0
  9442                           
  9443                           ; 2 bytes @ 0x4B
  9444   00074B                     	ds	2
  9445   00074D                     scan_files1@fcnt:
  9446                           	callstack 0
  9447   00074D                     scan_files@p:
  9448                           	callstack 0
  9449                           
  9450                           ; 2 bytes @ 0x4D
  9451   00074D                     	ds	1
  9452   00074E                     scan_files1@p:
  9453                           	callstack 0
  9454                           
  9455                           ; 2 bytes @ 0x4E
  9456   00074E                     	ds	1
  9457   00074F                     scan_files@res:
  9458                           	callstack 0
  9459                           
  9460                           ; 1 bytes @ 0x4F
  9461   00074F                     	ds	1
  9462   000750                     scan_files1@res:
  9463                           	callstack 0
  9464   000750                     scan_files@path:
  9465                           	callstack 0
  9466                           
  9467                           ; 2 bytes @ 0x50
  9468   000750                     	ds	1
  9469   000751                     scan_files1@path:
  9470                           	callstack 0
  9471                           
  9472                           ; 2 bytes @ 0x51
  9473   000751                     	ds	1
  9474   000752                     scan_files@fno:
  9475                           	callstack 0
  9476                           
  9477                           ; 22 bytes @ 0x52
  9478   000752                     	ds	1
  9479   000753                     scan_files1@fno:
  9480                           	callstack 0
  9481                           
  9482                           ; 22 bytes @ 0x53
  9483   000753                     	ds	21
  9484   000768                     scan_files@dir:
  9485                           	callstack 0
  9486                           
  9487                           ; 40 bytes @ 0x68
  9488   000768                     	ds	1
  9489   000769                     scan_files1@dir:
  9490                           	callstack 0
  9491                           
  9492                           ; 40 bytes @ 0x69
  9493   000769                     	ds	40
  9494   000791                     ??_main:
  9495                           
  9496                           ; 1 bytes @ 0x91
  9497   000791                     	ds	2
  9498   000793                     _main$5311:
  9499                           	callstack 0
  9500                           
  9501                           ; 4 bytes @ 0x93
  9502   000793                     	ds	4
  9503   000797                     main@res:
  9504                           	callstack 0
  9505                           
  9506                           ; 2 bytes @ 0x97
  9507   000797                     	ds	2
  9508   000799                     main@rs:
  9509                           	callstack 0
  9510                           
  9511                           ; 1 bytes @ 0x99
  9512   000799                     	ds	1
  9513   00079A                     main@buf:
  9514                           	callstack 0
  9515                           
  9516                           ; 2 bytes @ 0x9A
  9517   00079A                     	ds	2
  9518   00079C                     main@c:
  9519                           	callstack 0
  9520                           
  9521                           ; 2 bytes @ 0x9C
  9522   00079C                     	ds	2
  9523                           
  9524                           	psect	cstackBANK6
  9525   000600                     __pcstackBANK6:
  9526                           	callstack 0
  9527   000600                     disk_read@buff:
  9528                           	callstack 0
  9529   000600                     disk_write@buff:
  9530                           	callstack 0
  9531   000600                     disk_initialize@buf:
  9532                           	callstack 0
  9533                           
  9534                           ; 128 bytes @ 0x0
  9535   000600                     	ds	2
  9536   000602                     disk_read@sector:
  9537                           	callstack 0
  9538   000602                     disk_write@sector:
  9539                           	callstack 0
  9540                           
  9541                           ; 4 bytes @ 0x2
  9542   000602                     	ds	4
  9543   000606                     disk_read@count:
  9544                           	callstack 0
  9545   000606                     disk_write@count:
  9546                           	callstack 0
  9547                           
  9548                           ; 2 bytes @ 0x6
  9549   000606                     	ds	2
  9550   000608                     sync_window@fs:
  9551                           	callstack 0
  9552                           
  9553                           ; 2 bytes @ 0x8
  9554   000608                     	ds	2
  9555   00060A                     ??_sync_window:
  9556                           
  9557                           ; 1 bytes @ 0xA
  9558   00060A                     	ds	16
  9559   00061A                     move_window@fs:
  9560                           	callstack 0
  9561   00061A                     sync_fs@fs:
  9562                           	callstack 0
  9563   00061A                     dir_clear@fs:
  9564                           	callstack 0
  9565                           
  9566                           ; 2 bytes @ 0x1A
  9567   00061A                     	ds	2
  9568   00061C                     move_window@sect:
  9569                           	callstack 0
  9570   00061C                     dir_clear@clst:
  9571                           	callstack 0
  9572   00061C                     ??_sync_fs:
  9573                           
  9574                           ; 1 bytes @ 0x1C
  9575   00061C                     	ds	4
  9576   000620                     dir_clear@ibuf:
  9577                           	callstack 0
  9578   000620                     
  9579                           ; 1 bytes @ 0x20
  9580   000620                     	ds	2
  9581   000622                     dir_clear@sect:
  9582                           	callstack 0
  9583                           
  9584                           ; 4 bytes @ 0x22
  9585   000622                     	ds	2
  9586   000624                     ?_check_fs:
  9587                           	callstack 0
  9588   000624                     ?_get_fat:
  9589                           	callstack 0
  9590   000624                     get_fat@obj:
  9591                           	callstack 0
  9592   000624                     put_fat@fs:
  9593                           	callstack 0
  9594   000624                     check_fs@fs:
  9595                           	callstack 0
  9596   000624                     f_sync@fp:
  9597                           	callstack 0
  9598                           
  9599                           ; 2 bytes @ 0x24
  9600   000624                     	ds	2
  9601   000626                     dir_clear@szb:
  9602                           	callstack 0
  9603   000626                     get_fat@clst:
  9604                           	callstack 0
  9605   000626                     put_fat@clst:
  9606                           	callstack 0
  9607   000626                     check_fs@sect:
  9608                           	callstack 0
  9609   000626                     f_sync@tm:
  9610                           	callstack 0
  9611                           
  9612                           ; 4 bytes @ 0x26
  9613   000626                     	ds	2
  9614   000628                     dir_clear@n:
  9615                           	callstack 0
  9616                           
  9617                           ; 2 bytes @ 0x28
  9618   000628                     	ds	2
  9619   00062A                     f_sync@res:
  9620                           	callstack 0
  9621   00062A                     put_fat@val:
  9622                           	callstack 0
  9623   00062A                     ??_get_fat:
  9624   00062A                     ??_check_fs:
  9625                           
  9626                           ; 1 bytes @ 0x2A
  9627   00062A                     	ds	1
  9628   00062B                     f_sync@dir:
  9629                           	callstack 0
  9630                           
  9631                           ; 2 bytes @ 0x2B
  9632   00062B                     	ds	2
  9633   00062D                     check_fs@sign:
  9634                           	callstack 0
  9635   00062D                     f_sync@fs:
  9636                           	callstack 0
  9637                           
  9638                           ; 2 bytes @ 0x2D
  9639   00062D                     	ds	1
  9640   00062E                     ??_put_fat:
  9641                           
  9642                           ; 1 bytes @ 0x2E
  9643   00062E                     	ds	1
  9644   00062F                     check_fs@w:
  9645                           	callstack 0
  9646   00062F                     f_close@fp:
  9647                           	callstack 0
  9648                           
  9649                           ; 2 bytes @ 0x2F
  9650   00062F                     	ds	2
  9651   000631                     check_fs@b:
  9652                           	callstack 0
  9653   000631                     f_close@fs:
  9654                           	callstack 0
  9655                           
  9656                           ; 2 bytes @ 0x31
  9657   000631                     	ds	1
  9658   000632                     ?_find_volume:
  9659                           	callstack 0
  9660   000632                     _get_fat$2154:
  9661                           	callstack 0
  9662   000632                     find_volume@fs:
  9663                           	callstack 0
  9664                           
  9665                           ; 2 bytes @ 0x32
  9666   000632                     	ds	1
  9667   000633                     f_close@res:
  9668                           	callstack 0
  9669                           
  9670                           ; 1 bytes @ 0x33
  9671   000633                     	ds	1
  9672   000634                     get_fat@wc:
  9673                           	callstack 0
  9674   000634                     find_volume@part:
  9675                           	callstack 0
  9676                           
  9677                           ; 2 bytes @ 0x34
  9678   000634                     	ds	2
  9679   000636                     get_fat@val:
  9680                           	callstack 0
  9681   000636                     ??_find_volume:
  9682                           
  9683                           ; 1 bytes @ 0x36
  9684   000636                     	ds	4
  9685   00063A                     get_fat@bc:
  9686                           	callstack 0
  9687                           
  9688                           ; 2 bytes @ 0x3A
  9689   00063A                     	ds	2
  9690   00063C                     get_fat@fs:
  9691                           	callstack 0
  9692   00063C                     _put_fat$2184:
  9693                           	callstack 0
  9694   00063C                     find_volume@mbr_pt:
  9695                           	callstack 0
  9696                           
  9697                           ; 16 bytes @ 0x3C
  9698   00063C                     	ds	2
  9699   00063E                     _put_fat$2185:
  9700                           	callstack 0
  9701   00063E                     dir_sdi@dp:
  9702                           	callstack 0
  9703   00063E                     f_read@fp:
  9704                           	callstack 0
  9705                           
  9706                           ; 2 bytes @ 0x3E
  9707   00063E                     	ds	2
  9708   000640                     put_fat@p:
  9709                           	callstack 0
  9710   000640                     f_read@buff:
  9711                           	callstack 0
  9712   000640                     dir_sdi@ofs:
  9713                           	callstack 0
  9714                           
  9715                           ; 4 bytes @ 0x40
  9716   000640                     	ds	2
  9717   000642                     put_fat@bc:
  9718                           	callstack 0
  9719   000642                     f_read@btr:
  9720                           	callstack 0
  9721                           
  9722                           ; 2 bytes @ 0x42
  9723   000642                     	ds	2
  9724   000644                     put_fat@res:
  9725                           	callstack 0
  9726   000644                     f_read@br:
  9727                           	callstack 0
  9728   000644                     ??_dir_sdi:
  9729                           
  9730                           ; 1 bytes @ 0x44
  9731   000644                     	ds	1
  9732   000645                     ?_create_chain:
  9733                           	callstack 0
  9734   000645                     remove_chain@obj:
  9735                           	callstack 0
  9736   000645                     create_chain@obj:
  9737                           	callstack 0
  9738                           
  9739                           ; 2 bytes @ 0x45
  9740   000645                     	ds	1
  9741   000646                     ??_f_read:
  9742                           
  9743                           ; 1 bytes @ 0x46
  9744   000646                     	ds	1
  9745   000647                     remove_chain@clst:
  9746                           	callstack 0
  9747   000647                     create_chain@clst:
  9748                           	callstack 0
  9749                           
  9750                           ; 4 bytes @ 0x47
  9751   000647                     	ds	4
  9752   00064B                     remove_chain@pclst:
  9753                           	callstack 0
  9754   00064B                     ??_create_chain:
  9755                           
  9756                           ; 1 bytes @ 0x4B
  9757   00064B                     	ds	1
  9758   00064C                     find_volume@fmt:
  9759                           	callstack 0
  9760                           
  9761                           ; 2 bytes @ 0x4C
  9762   00064C                     	ds	2
  9763   00064E                     find_volume@i:
  9764                           	callstack 0
  9765   00064E                     dir_sdi@csz:
  9766                           	callstack 0
  9767                           
  9768                           ; 4 bytes @ 0x4E
  9769   00064E                     	ds	1
  9770   00064F                     ??_remove_chain:
  9771                           
  9772                           ; 1 bytes @ 0x4F
  9773   00064F                     	ds	3
  9774   000652                     dir_sdi@clst:
  9775                           	callstack 0
  9776   000652                     f_read@remain:
  9777                           	callstack 0
  9778                           
  9779                           ; 4 bytes @ 0x52
  9780   000652                     	ds	1
  9781   000653                     create_chain@res:
  9782                           	callstack 0
  9783                           
  9784                           ; 1 bytes @ 0x53
  9785   000653                     	ds	1
  9786   000654                     create_chain@scl:
  9787                           	callstack 0
  9788                           
  9789                           ; 4 bytes @ 0x54
  9790   000654                     	ds	2
  9791   000656                     f_read@res:
  9792                           	callstack 0
  9793   000656                     dir_sdi@fs:
  9794                           	callstack 0
  9795                           
  9796                           ; 2 bytes @ 0x56
  9797   000656                     	ds	1
  9798   000657                     remove_chain@nxt:
  9799                           	callstack 0
  9800   000657                     f_read@clst:
  9801                           	callstack 0
  9802                           
  9803                           ; 4 bytes @ 0x57
  9804   000657                     	ds	1
  9805   000658                     create_chain@ncl:
  9806                           	callstack 0
  9807                           
  9808                           ; 4 bytes @ 0x58
  9809   000658                     	ds	3
  9810   00065B                     remove_chain@res:
  9811                           	callstack 0
  9812   00065B                     f_read@rbuff:
  9813                           	callstack 0
  9814                           
  9815                           ; 2 bytes @ 0x5B
  9816   00065B                     	ds	1
  9817   00065C                     remove_chain@fs:
  9818                           	callstack 0
  9819   00065C                     create_chain@fs:
  9820                           	callstack 0
  9821                           
  9822                           ; 2 bytes @ 0x5C
  9823   00065C                     	ds	1
  9824   00065D                     f_read@csect:
  9825                           	callstack 0
  9826                           
  9827                           ; 2 bytes @ 0x5D
  9828   00065D                     	ds	1
  9829   00065E                     create_chain@cs:
  9830                           	callstack 0
  9831                           
  9832                           ; 4 bytes @ 0x5E
  9833   00065E                     	ds	1
  9834   00065F                     f_read@cc:
  9835                           	callstack 0
  9836                           
  9837                           ; 2 bytes @ 0x5F
  9838   00065F                     	ds	2
  9839   000661                     f_read@rcnt:
  9840                           	callstack 0
  9841                           
  9842                           ; 2 bytes @ 0x61
  9843   000661                     	ds	1
  9844   000662                     dir_next@dp:
  9845                           	callstack 0
  9846   000662                     f_write@fp:
  9847                           	callstack 0
  9848   000662                     f_lseek@fp:
  9849                           	callstack 0
  9850                           
  9851                           ; 2 bytes @ 0x62
  9852   000662                     	ds	1
  9853   000663                     f_read@sect:
  9854                           	callstack 0
  9855                           
  9856                           ; 4 bytes @ 0x63
  9857   000663                     	ds	1
  9858   000664                     dir_next@stretch:
  9859                           	callstack 0
  9860   000664                     f_write@buff:
  9861                           	callstack 0
  9862   000664                     f_lseek@ofs:
  9863                           	callstack 0
  9864                           
  9865                           ; 4 bytes @ 0x64
  9866   000664                     	ds	2
  9867   000666                     f_write@btw:
  9868                           	callstack 0
  9869   000666                     ??_dir_next:
  9870                           
  9871                           ; 1 bytes @ 0x66
  9872   000666                     	ds	1
  9873   000667                     f_read@fs:
  9874                           	callstack 0
  9875                           
  9876                           ; 2 bytes @ 0x67
  9877   000667                     	ds	1
  9878   000668                     f_write@bw:
  9879                           	callstack 0
  9880   000668                     ??_f_lseek:
  9881                           
  9882                           ; 1 bytes @ 0x68
  9883   000668                     	ds	1
  9884   000669                     ?_f_gets:
  9885                           	callstack 0
  9886   000669                     f_gets@buff:
  9887                           	callstack 0
  9888                           
  9889                           ; 2 bytes @ 0x69
  9890   000669                     	ds	1
  9891   00066A                     ??_f_write:
  9892                           
  9893                           ; 1 bytes @ 0x6A
  9894   00066A                     	ds	1
  9895   00066B                     f_gets@len:
  9896                           	callstack 0
  9897                           
  9898                           ; 2 bytes @ 0x6B
  9899   00066B                     	ds	2
  9900   00066D                     f_gets@fp:
  9901                           	callstack 0
  9902                           
  9903                           ; 2 bytes @ 0x6D
  9904   00066D                     	ds	2
  9905   00066F                     f_gets@nc:
  9906                           	callstack 0
  9907                           
  9908                           ; 2 bytes @ 0x6F
  9909   00066F                     	ds	2
  9910   000671                     f_gets@p:
  9911                           	callstack 0
  9912                           
  9913                           ; 2 bytes @ 0x71
  9914   000671                     	ds	1
  9915   000672                     dir_next@ofs:
  9916                           	callstack 0
  9917                           
  9918                           ; 4 bytes @ 0x72
  9919   000672                     	ds	1
  9920   000673                     f_gets@dc:
  9921                           	callstack 0
  9922                           
  9923                           ; 4 bytes @ 0x73
  9924   000673                     	ds	3
  9925   000676                     dir_next@fs:
  9926                           	callstack 0
  9927   000676                     _f_write$3207:
  9928                           	callstack 0
  9929                           
  9930                           ; 4 bytes @ 0x76
  9931   000676                     	ds	1
  9932   000677                     f_gets@rc:
  9933                           	callstack 0
  9934                           
  9935                           ; 2 bytes @ 0x77
  9936   000677                     	ds	1
  9937   000678                     dir_next@clst:
  9938                           	callstack 0
  9939   000678                     f_lseek@ifptr:
  9940                           	callstack 0
  9941                           
  9942                           ; 4 bytes @ 0x78
  9943   000678                     	ds	1
  9944   000679                     f_gets@s:
  9945                           	callstack 0
  9946                           
  9947                           ; 4 bytes @ 0x79
  9948   000679                     	ds	1
  9949   00067A                     f_write@res:
  9950                           	callstack 0
  9951                           
  9952                           ; 1 bytes @ 0x7A
  9953   00067A                     	ds	1
  9954   00067B                     f_write@wbuff:
  9955                           	callstack 0
  9956                           
  9957                           ; 2 bytes @ 0x7B
  9958   00067B                     	ds	1
  9959   00067C                     dir_alloc@dp:
  9960                           	callstack 0
  9961   00067C                     dir_read@dp:
  9962                           	callstack 0
  9963   00067C                     dir_find@dp:
  9964                           	callstack 0
  9965   00067C                     f_lseek@nsect:
  9966                           	callstack 0
  9967                           
  9968                           ; 4 bytes @ 0x7C
  9969   00067C                     	ds	1
  9970   00067D                     f_write@csect:
  9971                           	callstack 0
  9972                           
  9973                           ; 2 bytes @ 0x7D
  9974   00067D                     	ds	1
  9975   00067E                     dir_alloc@n_ent:
  9976                           	callstack 0
  9977   00067E                     dir_read@vol:
  9978                           	callstack 0
  9979   00067E                     ??_dir_find:
  9980                           
  9981                           ; 1 bytes @ 0x7E
  9982   00067E                     	ds	1
  9983   00067F                     f_write@cc:
  9984                           	callstack 0
  9985                           
  9986                           ; 2 bytes @ 0x7F
  9987   00067F                     	ds	1
  9988   000680                     f_lseek@res:
  9989                           	callstack 0
  9990   000680                     disk_initialize@pdrv:
  9991                           	callstack 0
  9992   000680                     dir_find@fs:
  9993                           	callstack 0
  9994   000680                     ??_dir_alloc:
  9995   000680                     ??_dir_read:
  9996                           
  9997                           ; 1 bytes @ 0x80
  9998   000680                     	ds	1
  9999   000681                     mount_volume@path:
 10000                           	callstack 0
 10001   000681                     f_write@clst:
 10002                           	callstack 0
 10003   000681                     f_lseek@bcs:
 10004                           	callstack 0
 10005                           
 10006                           ; 4 bytes @ 0x81
 10007   000681                     	ds	1
 10008   000682                     dir_find@c:
 10009                           	callstack 0
 10010                           
 10011                           ; 1 bytes @ 0x82
 10012   000682                     	ds	1
 10013   000683                     dir_find@res:
 10014                           	callstack 0
 10015   000683                     dir_alloc@fs:
 10016                           	callstack 0
 10017   000683                     mount_volume@rfs:
 10018                           	callstack 0
 10019                           
 10020                           ; 2 bytes @ 0x83
 10021   000683                     	ds	1
 10022   000684                     dir_read@fs:
 10023                           	callstack 0
 10024   000684                     follow_path@dp:
 10025                           	callstack 0
 10026                           
 10027                           ; 2 bytes @ 0x84
 10028   000684                     	ds	1
 10029   000685                     mount_volume@mode:
 10030                           	callstack 0
 10031   000685                     dir_alloc@n:
 10032                           	callstack 0
 10033   000685                     f_write@wcnt:
 10034                           	callstack 0
 10035   000685                     f_lseek@fs:
 10036                           	callstack 0
 10037                           
 10038                           ; 2 bytes @ 0x85
 10039   000685                     	ds	1
 10040   000686                     dir_read@attr:
 10041                           	callstack 0
 10042   000686                     follow_path@path:
 10043                           	callstack 0
 10044   000686                     ??_mount_volume:
 10045                           
 10046                           ; 1 bytes @ 0x86
 10047   000686                     	ds	1
 10048   000687                     dir_alloc@res:
 10049                           	callstack 0
 10050   000687                     dir_read@b:
 10051                           	callstack 0
 10052   000687                     f_write@sect:
 10053                           	callstack 0
 10054   000687                     f_lseek@clst:
 10055                           	callstack 0
 10056                           
 10057                           ; 4 bytes @ 0x87
 10058   000687                     	ds	1
 10059   000688                     dir_read@res:
 10060                           	callstack 0
 10061   000688                     dir_register@dp:
 10062                           	callstack 0
 10063   000688                     ??_follow_path:
 10064                           
 10065                           ; 1 bytes @ 0x88
 10066   000688                     	ds	1
 10067   000689                     f_readdir@dp:
 10068                           	callstack 0
 10069                           
 10070                           ; 2 bytes @ 0x89
 10071   000689                     	ds	1
 10072   00068A                     dir_register@fs:
 10073                           	callstack 0
 10074                           
 10075                           ; 2 bytes @ 0x8A
 10076   00068A                     	ds	1
 10077   00068B                     ?_seek_disk:
 10078                           	callstack 0
 10079   00068B                     f_write@fs:
 10080                           	callstack 0
 10081   00068B                     f_readdir@fno:
 10082                           	callstack 0
 10083                           
 10084                           ; 2 bytes @ 0x8B
 10085   00068B                     	ds	1
 10086   00068C                     dir_register@res:
 10087                           	callstack 0
 10088                           
 10089                           ; 1 bytes @ 0x8C
 10090   00068C                     	ds	1
 10091   00068D                     f_readdir@fs:
 10092                           	callstack 0
 10093   00068D                     ??_seek_disk:
 10094                           
 10095                           ; 1 bytes @ 0x8D
 10096   00068D                     	ds	1
 10097   00068E                     follow_path@fs:
 10098                           	callstack 0
 10099   00068E                     mount_volume@szbfat:
 10100                           	callstack 0
 10101                           
 10102                           ; 4 bytes @ 0x8E
 10103   00068E                     	ds	1
 10104   00068F                     f_readdir@res:
 10105                           	callstack 0
 10106                           
 10107                           ; 1 bytes @ 0x8F
 10108   00068F                     	ds	1
 10109   000690                     follow_path@ns:
 10110                           	callstack 0
 10111                           
 10112                           ; 1 bytes @ 0x90
 10113   000690                     	ds	1
 10114   000691                     follow_path@res:
 10115                           	callstack 0
 10116                           
 10117                           ; 1 bytes @ 0x91
 10118   000691                     	ds	1
 10119   000692                     mount_volume@vol:
 10120                           	callstack 0
 10121                           
 10122                           ; 2 bytes @ 0x92
 10123   000692                     	ds	1
 10124   000693                     seek_disk@sector:
 10125                           	callstack 0
 10126                           
 10127                           ; 4 bytes @ 0x93
 10128   000693                     	ds	1
 10129   000694                     mount_volume@sysect:
 10130                           	callstack 0
 10131                           
 10132                           ; 4 bytes @ 0x94
 10133   000694                     	ds	3
 10134   000697                     seek_disk@filep:
 10135                           	callstack 0
 10136                           
 10137                           ; 2 bytes @ 0x97
 10138   000697                     	ds	1
 10139   000698                     mount_volume@nrsv:
 10140                           	callstack 0
 10141                           
 10142                           ; 2 bytes @ 0x98
 10143   000698                     	ds	1
 10144   000699                     seek_disk@fres:
 10145                           	callstack 0
 10146                           
 10147                           ; 1 bytes @ 0x99
 10148   000699                     	ds	1
 10149   00069A                     ?_write_sector:
 10150                           	callstack 0
 10151   00069A                     ?_read_sector:
 10152                           	callstack 0
 10153   00069A                     mount_volume@tsect:
 10154                           	callstack 0
 10155                           
 10156                           ; 4 bytes @ 0x9A
 10157   00069A                     	ds	2
 10158   00069C                     ??_write_sector:
 10159   00069C                     ??_read_sector:
 10160                           
 10161                           ; 1 bytes @ 0x9C
 10162   00069C                     	ds	2
 10163   00069E                     mount_volume@bsect:
 10164                           	callstack 0
 10165                           
 10166                           ; 4 bytes @ 0x9E
 10167   00069E                     	ds	1
 10168   00069F                     write_sector@filep:
 10169                           	callstack 0
 10170   00069F                     read_sector@filep:
 10171                           	callstack 0
 10172                           
 10173                           ; 2 bytes @ 0x9F
 10174   00069F                     	ds	2
 10175   0006A1                     write_sector@fres:
 10176                           	callstack 0
 10177   0006A1                     read_sector@fres:
 10178                           	callstack 0
 10179                           
 10180                           ; 1 bytes @ 0xA1
 10181   0006A1                     	ds	1
 10182   0006A2                     mount_volume@stat:
 10183                           	callstack 0
 10184   0006A2                     write_sector@n:
 10185                           	callstack 0
 10186   0006A2                     read_sector@n:
 10187                           	callstack 0
 10188                           
 10189                           ; 2 bytes @ 0xA2
 10190   0006A2                     	ds	1
 10191   0006A3                     mount_volume@nclst:
 10192                           	callstack 0
 10193                           
 10194                           ; 4 bytes @ 0xA3
 10195   0006A3                     	ds	4
 10196   0006A7                     mount_volume@fasize:
 10197                           	callstack 0
 10198                           
 10199                           ; 4 bytes @ 0xA7
 10200   0006A7                     	ds	4
 10201   0006AB                     mount_volume@fmt:
 10202                           	callstack 0
 10203                           
 10204                           ; 2 bytes @ 0xAB
 10205   0006AB                     	ds	2
 10206   0006AD                     mount_volume@fs:
 10207                           	callstack 0
 10208                           
 10209                           ; 2 bytes @ 0xAD
 10210   0006AD                     	ds	2
 10211   0006AF                     f_mount@fs:
 10212                           	callstack 0
 10213   0006AF                     f_open@fp:
 10214                           	callstack 0
 10215   0006AF                     f_chdir@path:
 10216                           	callstack 0
 10217   0006AF                     f_getcwd@buff:
 10218                           	callstack 0
 10219   0006AF                     f_opendir@dp:
 10220                           	callstack 0
 10221                           
 10222                           ; 2 bytes @ 0xAF
 10223   0006AF                     	ds	2
 10224   0006B1                     f_chdir@res:
 10225                           	callstack 0
 10226   0006B1                     f_mount@path:
 10227                           	callstack 0
 10228   0006B1                     f_open@path:
 10229                           	callstack 0
 10230   0006B1                     f_getcwd@len:
 10231                           	callstack 0
 10232   0006B1                     f_opendir@path:
 10233                           	callstack 0
 10234                           
 10235                           ; 2 bytes @ 0xB1
 10236   0006B1                     	ds	1
 10237   0006B2                     f_chdir@fs:
 10238                           	callstack 0
 10239                           
 10240                           ; 2 bytes @ 0xB2
 10241   0006B2                     	ds	1
 10242   0006B3                     f_mount@opt:
 10243                           	callstack 0
 10244   0006B3                     f_open@mode:
 10245                           	callstack 0
 10246   0006B3                     f_opendir@fs:
 10247                           	callstack 0
 10248   0006B3                     ??_f_getcwd:
 10249                           
 10250                           ; 1 bytes @ 0xB3
 10251   0006B3                     	ds	1
 10252   0006B4                     f_mount@res:
 10253                           	callstack 0
 10254   0006B4                     f_chdir@dj:
 10255                           	callstack 0
 10256   0006B4                     ??_f_open:
 10257                           
 10258                           ; 1 bytes @ 0xB4
 10259   0006B4                     	ds	1
 10260   0006B5                     f_opendir@res:
 10261                           	callstack 0
 10262   0006B5                     f_mount@rp:
 10263                           	callstack 0
 10264                           
 10265                           ; 2 bytes @ 0xB5
 10266   0006B5                     	ds	2
 10267   0006B7                     f_mount@cfs:
 10268                           	callstack 0
 10269                           
 10270                           ; 2 bytes @ 0xB7
 10271   0006B7                     	ds	2
 10272   0006B9                     f_mount@vol:
 10273                           	callstack 0
 10274                           
 10275                           ; 2 bytes @ 0xB9
 10276   0006B9                     	ds	2
 10277   0006BB                     ?_disk_init:
 10278                           	callstack 0
 10279                           
 10280                           ; 2 bytes @ 0xBB
 10281   0006BB                     	ds	1
 10282   0006BC                     f_open@bcs:
 10283                           	callstack 0
 10284                           
 10285                           ; 4 bytes @ 0xBC
 10286   0006BC                     	ds	4
 10287   0006C0                     f_open@tm:
 10288                           	callstack 0
 10289                           
 10290                           ; 4 bytes @ 0xC0
 10291   0006C0                     	ds	4
 10292   0006C4                     f_open@cl:
 10293                           	callstack 0
 10294                           
 10295                           ; 4 bytes @ 0xC4
 10296   0006C4                     	ds	4
 10297   0006C8                     f_open@sc:
 10298                           	callstack 0
 10299                           
 10300                           ; 4 bytes @ 0xC8
 10301   0006C8                     	ds	4
 10302   0006CC                     f_open@ofs:
 10303                           	callstack 0
 10304                           
 10305                           ; 4 bytes @ 0xCC
 10306   0006CC                     	ds	4
 10307   0006D0                     f_open@clst:
 10308                           	callstack 0
 10309                           
 10310                           ; 4 bytes @ 0xD0
 10311   0006D0                     	ds	4
 10312   0006D4                     f_open@fs:
 10313                           	callstack 0
 10314                           
 10315                           ; 2 bytes @ 0xD4
 10316   0006D4                     	ds	2
 10317   0006D6                     f_open@res:
 10318                           	callstack 0
 10319                           
 10320                           ; 1 bytes @ 0xD6
 10321   0006D6                     	ds	1
 10322   0006D7                     f_open@dj:
 10323                           	callstack 0
 10324                           
 10325                           ; 40 bytes @ 0xD7
 10326   0006D7                     	ds	40
 10327   0006FF                     drive_cpu@rs:
 10328                           	callstack 0
 10329                           
 10330                           ; 1 bytes @ 0xFF
 10331   0006FF                     	ds	1
 10332                           
 10333                           	psect	cstackBANK5
 10334   000560                     __pcstackBANK5:
 10335                           	callstack 0
 10336   000560                     efgtoa@fp:
 10337                           	callstack 0
 10338                           
 10339                           ; 2 bytes @ 0x0
 10340   000560                     	ds	2
 10341   000562                     efgtoa@f:
 10342                           	callstack 0
 10343                           
 10344                           ; 4 bytes @ 0x2
 10345   000562                     	ds	4
 10346   000566                     efgtoa@c:
 10347                           	callstack 0
 10348                           
 10349                           ; 1 bytes @ 0x6
 10350   000566                     	ds	1
 10351   000567                     efgtoa@ne:
 10352                           	callstack 0
 10353                           
 10354                           ; 2 bytes @ 0x7
 10355   000567                     	ds	2
 10356   000569                     efgtoa@p:
 10357                           	callstack 0
 10358                           
 10359                           ; 2 bytes @ 0x9
 10360   000569                     	ds	2
 10361   00056B                     efgtoa@t:
 10362                           	callstack 0
 10363                           
 10364                           ; 2 bytes @ 0xB
 10365   00056B                     	ds	2
 10366   00056D                     _efgtoa$4752:
 10367                           	callstack 0
 10368                           
 10369                           ; 2 bytes @ 0xD
 10370   00056D                     	ds	2
 10371   00056F                     efgtoa@pp:
 10372                           	callstack 0
 10373                           
 10374                           ; 1 bytes @ 0xF
 10375   00056F                     	ds	1
 10376   000570                     efgtoa@mode:
 10377                           	callstack 0
 10378                           
 10379                           ; 1 bytes @ 0x10
 10380   000570                     	ds	1
 10381   000571                     efgtoa@nmode:
 10382                           	callstack 0
 10383                           
 10384                           ; 1 bytes @ 0x11
 10385   000571                     	ds	1
 10386   000572                     efgtoa@d:
 10387                           	callstack 0
 10388                           
 10389                           ; 2 bytes @ 0x12
 10390   000572                     	ds	2
 10391   000574                     efgtoa@m:
 10392                           	callstack 0
 10393                           
 10394                           ; 2 bytes @ 0x14
 10395   000574                     	ds	2
 10396   000576                     efgtoa@e:
 10397                           	callstack 0
 10398                           
 10399                           ; 2 bytes @ 0x16
 10400   000576                     	ds	2
 10401   000578                     efgtoa@ou:
 10402                           	callstack 0
 10403                           
 10404                           ; 4 bytes @ 0x18
 10405   000578                     	ds	4
 10406   00057C                     efgtoa@w:
 10407                           	callstack 0
 10408                           
 10409                           ; 2 bytes @ 0x1C
 10410   00057C                     	ds	2
 10411   00057E                     efgtoa@h:
 10412                           	callstack 0
 10413                           
 10414                           ; 4 bytes @ 0x1E
 10415   00057E                     	ds	4
 10416   000582                     efgtoa@l:
 10417                           	callstack 0
 10418                           
 10419                           ; 4 bytes @ 0x22
 10420   000582                     	ds	4
 10421   000586                     efgtoa@i:
 10422                           	callstack 0
 10423                           
 10424                           ; 2 bytes @ 0x26
 10425   000586                     	ds	2
 10426   000588                     efgtoa@sign:
 10427                           	callstack 0
 10428                           
 10429                           ; 1 bytes @ 0x28
 10430   000588                     	ds	1
 10431   000589                     efgtoa@g:
 10432                           	callstack 0
 10433                           
 10434                           ; 4 bytes @ 0x29
 10435   000589                     	ds	4
 10436   00058D                     efgtoa@n:
 10437                           	callstack 0
 10438                           
 10439                           ; 2 bytes @ 0x2D
 10440   00058D                     	ds	2
 10441   00058F                     efgtoa@u:
 10442                           	callstack 0
 10443                           
 10444                           ; 4 bytes @ 0x2F
 10445   00058F                     	ds	4
 10446   000593                     vfpfcnvrt@fp:
 10447                           	callstack 0
 10448                           
 10449                           ; 2 bytes @ 0x33
 10450   000593                     	ds	2
 10451   000595                     vfpfcnvrt@fmt:
 10452                           	callstack 0
 10453                           
 10454                           ; 2 bytes @ 0x35
 10455   000595                     	ds	2
 10456   000597                     vfpfcnvrt@ap:
 10457                           	callstack 0
 10458                           
 10459                           ; 2 bytes @ 0x37
 10460   000597                     	ds	2
 10461   000599                     ??_vfpfcnvrt:
 10462                           
 10463                           ; 1 bytes @ 0x39
 10464   000599                     	ds	4
 10465   00059D                     vfpfcnvrt@done:
 10466                           	callstack 0
 10467                           
 10468                           ; 1 bytes @ 0x3D
 10469   00059D                     	ds	1
 10470   00059E                     vfpfcnvrt@convarg:
 10471                           	callstack 0
 10472                           
 10473                           ; 4 bytes @ 0x3E
 10474   00059E                     	ds	4
 10475   0005A2                     vfpfcnvrt@c:
 10476                           	callstack 0
 10477                           
 10478                           ; 1 bytes @ 0x42
 10479   0005A2                     	ds	1
 10480   0005A3                     vfpfcnvrt@cp:
 10481                           	callstack 0
 10482                           
 10483                           ; 2 bytes @ 0x43
 10484   0005A3                     	ds	2
 10485   0005A5                     ?_vfprintf:
 10486                           	callstack 0
 10487   0005A5                     vfprintf@fp:
 10488                           	callstack 0
 10489                           
 10490                           ; 2 bytes @ 0x45
 10491   0005A5                     	ds	2
 10492   0005A7                     vfprintf@fmt:
 10493                           	callstack 0
 10494                           
 10495                           ; 2 bytes @ 0x47
 10496   0005A7                     	ds	2
 10497   0005A9                     vfprintf@ap:
 10498                           	callstack 0
 10499                           
 10500                           ; 2 bytes @ 0x49
 10501   0005A9                     	ds	2
 10502   0005AB                     vfprintf@cfmt:
 10503                           	callstack 0
 10504                           
 10505                           ; 2 bytes @ 0x4B
 10506   0005AB                     	ds	2
 10507   0005AD                     ?_printf:
 10508                           	callstack 0
 10509   0005AD                     ?_sprintf:
 10510                           	callstack 0
 10511   0005AD                     sprintf@s:
 10512                           	callstack 0
 10513   0005AD                     printf@fmt:
 10514                           	callstack 0
 10515                           
 10516                           ; 2 bytes @ 0x4D
 10517   0005AD                     	ds	2
 10518   0005AF                     sprintf@fmt:
 10519                           	callstack 0
 10520                           
 10521                           ; 2 bytes @ 0x4F
 10522   0005AF                     	ds	4
 10523   0005B3                     sprintf@ap:
 10524                           	callstack 0
 10525                           
 10526                           ; 2 bytes @ 0x53
 10527   0005B3                     	ds	2
 10528   0005B5                     sprintf@f:
 10529                           	callstack 0
 10530                           
 10531                           ; 11 bytes @ 0x55
 10532   0005B5                     	ds	6
 10533   0005BB                     printf@ap:
 10534                           	callstack 0
 10535                           
 10536                           ; 2 bytes @ 0x5B
 10537   0005BB                     	ds	2
 10538   0005BD                     ?_get_line:
 10539                           	callstack 0
 10540   0005BD                     disk_status@pdrv:
 10541                           	callstack 0
 10542   0005BD                     disk_ioctl@cmd:
 10543                           	callstack 0
 10544   0005BD                     SPI_SD_configure@ctx_:
 10545                           	callstack 0
 10546   0005BD                     get_line@s:
 10547                           	callstack 0
 10548   0005BD                     util_hexdump@header:
 10549                           	callstack 0
 10550   0005BD                     util_addrdump@header:
 10551                           	callstack 0
 10552   0005BD                     ??_print_reg:
 10553   0005BD                     ??_wait_for_programmer:
 10554   0005BD                     ??_reset_cpu:
 10555                           
 10556                           ; 1 bytes @ 0x5D
 10557   0005BD                     	ds	1
 10558   0005BE                     validate@obj:
 10559                           	callstack 0
 10560   0005BE                     disk_ioctl@buff:
 10561                           	callstack 0
 10562                           
 10563                           ; 2 bytes @ 0x5E
 10564   0005BE                     	ds	1
 10565   0005BF                     SPI_SD_configure@clock_speed:
 10566                           	callstack 0
 10567   0005BF                     get_line@length:
 10568                           	callstack 0
 10569   0005BF                     util_hexdump@addr:
 10570                           	callstack 0
 10571   0005BF                     util_addrdump@addr_offs:
 10572                           	callstack 0
 10573                           
 10574                           ; 4 bytes @ 0x5F
 10575   0005BF                     	ds	1
 10576   0005C0                     disk_ioctl@pdrv:
 10577                           	callstack 0
 10578   0005C0                     validate@rfs:
 10579                           	callstack 0
 10580                           
 10581                           ; 2 bytes @ 0x60
 10582   0005C0                     	ds	1
 10583   0005C1                     SPI_SD_configure@bit_order:
 10584                           	callstack 0
 10585   0005C1                     disk_ioctl@res:
 10586                           	callstack 0
 10587   0005C1                     get_line@c:
 10588                           	callstack 0
 10589   0005C1                     util_hexdump@size:
 10590                           	callstack 0
 10591                           
 10592                           ; 2 bytes @ 0x61
 10593   0005C1                     	ds	1
 10594   0005C2                     SPI_SD_configure@data_mode:
 10595                           	callstack 0
 10596   0005C2                     print_reg@reg_02:
 10597                           	callstack 0
 10598   0005C2                     ??_validate:
 10599                           
 10600                           ; 1 bytes @ 0x62
 10601   0005C2                     	ds	1
 10602   0005C3                     get_line@n:
 10603                           	callstack 0
 10604   0005C3                     util_addrdump@addr:
 10605                           	callstack 0
 10606   0005C3                     ??_util_hexdump:
 10607   0005C3                     ??_SPI_SD_configure:
 10608                           
 10609                           ; 1 bytes @ 0x63
 10610   0005C3                     	ds	1
 10611   0005C4                     print_reg@reg_816:
 10612                           	callstack 0
 10613                           
 10614                           ; 2 bytes @ 0x64
 10615   0005C4                     	ds	1
 10616   0005C5                     ?_SDCard_init:
 10617                           	callstack 0
 10618   0005C5                     SDCard_init@initial_clock_speed:
 10619                           	callstack 0
 10620   0005C5                     util_addrdump@size:
 10621                           	callstack 0
 10622   0005C5                     util_hexdump@chars:
 10623                           	callstack 0
 10624                           
 10625                           ; 17 bytes @ 0x65
 10626   0005C5                     	ds	1
 10627   0005C6                     _validate$2890:
 10628                           	callstack 0
 10629                           
 10630                           ; 2 bytes @ 0x66
 10631   0005C6                     	ds	1
 10632   0005C7                     SDCard_init@clock_speed:
 10633                           	callstack 0
 10634   0005C7                     ??_util_addrdump:
 10635                           
 10636                           ; 1 bytes @ 0x67
 10637   0005C7                     	ds	1
 10638   0005C8                     validate@res:
 10639                           	callstack 0
 10640                           
 10641                           ; 1 bytes @ 0x68
 10642   0005C8                     	ds	1
 10643   0005C9                     SDCard_init@timeout:
 10644                           	callstack 0
 10645   0005C9                     f_closedir@dp:
 10646                           	callstack 0
 10647   0005C9                     util_addrdump@chars:
 10648                           	callstack 0
 10649                           
 10650                           ; 17 bytes @ 0x69
 10651   0005C9                     	ds	2
 10652   0005CB                     f_closedir@fs:
 10653                           	callstack 0
 10654   0005CB                     ??_SDCard_init:
 10655                           
 10656                           ; 1 bytes @ 0x6B
 10657   0005CB                     	ds	1
 10658   0005CC                     SDCard_init@i:
 10659                           	callstack 0
 10660                           
 10661                           ; 2 bytes @ 0x6C
 10662   0005CC                     	ds	1
 10663   0005CD                     f_closedir@res:
 10664                           	callstack 0
 10665                           
 10666                           ; 1 bytes @ 0x6D
 10667   0005CD                     	ds	1
 10668   0005CE                     SDCard_init@spi:
 10669                           	callstack 0
 10670                           
 10671                           ; 2 bytes @ 0x6E
 10672   0005CE                     	ds	2
 10673   0005D0                     SDCard_init@buf:
 10674                           	callstack 0
 10675                           
 10676                           ; 5 bytes @ 0x70
 10677   0005D0                     	ds	5
 10678   0005D5                     ??_setup_sd:
 10679                           
 10680                           ; 1 bytes @ 0x75
 10681   0005D5                     	ds	1
 10682   0005D6                     util_hexdump@buf:
 10683                           	callstack 0
 10684                           
 10685                           ; 2 bytes @ 0x76
 10686   0005D6                     	ds	2
 10687   0005D8                     util_hexdump@i:
 10688                           	callstack 0
 10689                           
 10690                           ; 2 bytes @ 0x78
 10691   0005D8                     	ds	2
 10692   0005DA                     util_addrdump@buf:
 10693                           	callstack 0
 10694   0005DA                     util_hexdump_sum@header:
 10695                           	callstack 0
 10696                           
 10697                           ; 2 bytes @ 0x7A
 10698   0005DA                     	ds	2
 10699   0005DC                     util_addrdump@i:
 10700                           	callstack 0
 10701   0005DC                     util_hexdump_sum@addr:
 10702                           	callstack 0
 10703                           
 10704                           ; 2 bytes @ 0x7C
 10705   0005DC                     	ds	2
 10706   0005DE                     ?_SDCard_read512:
 10707                           	callstack 0
 10708   0005DE                     ?_SDCard_write512:
 10709                           	callstack 0
 10710   0005DE                     ?_mem_init:
 10711                           	callstack 0
 10712   0005DE                     mem_dump@p:
 10713                           	callstack 0
 10714   0005DE                     util_hexdump_sum@size:
 10715                           	callstack 0
 10716   0005DE                     SDCard_read512@addr:
 10717                           	callstack 0
 10718   0005DE                     SDCard_write512@addr:
 10719                           	callstack 0
 10720                           
 10721                           ; 4 bytes @ 0x7E
 10722   0005DE                     	ds	2
 10723   0005E0                     util_hexdump_sum@p:
 10724                           	callstack 0
 10725   0005E0                     mem_dump@addr:
 10726                           	callstack 0
 10727                           
 10728                           ; 4 bytes @ 0x80
 10729   0005E0                     	ds	2
 10730   0005E2                     SDCard_read512@offs:
 10731                           	callstack 0
 10732   0005E2                     SDCard_write512@offs:
 10733                           	callstack 0
 10734   0005E2                     util_hexdump_sum@i:
 10735                           	callstack 0
 10736   0005E2                     ??_mem_init:
 10737                           
 10738                           ; 1 bytes @ 0x82
 10739   0005E2                     	ds	2
 10740   0005E4                     util_hexdump_sum@sum:
 10741                           	callstack 0
 10742   0005E4                     SDCard_read512@buf:
 10743                           	callstack 0
 10744   0005E4                     SDCard_write512@buf:
 10745                           	callstack 0
 10746                           
 10747                           ; 2 bytes @ 0x84
 10748   0005E4                     	ds	2
 10749   0005E6                     SDCard_read512@count:
 10750                           	callstack 0
 10751   0005E6                     SDCard_write512@count:
 10752                           	callstack 0
 10753   0005E6                     mem_init@i:
 10754                           	callstack 0
 10755                           
 10756                           ; 2 bytes @ 0x86
 10757   0005E6                     	ds	2
 10758   0005E8                     mem_init@addr:
 10759                           	callstack 0
 10760   0005E8                     ??_SDCard_read512:
 10761   0005E8                     ??_SDCard_write512:
 10762                           
 10763                           ; 1 bytes @ 0x88
 10764   0005E8                     	ds	4
 10765   0005EC                     SDCard_read512@i:
 10766                           	callstack 0
 10767   0005EC                     SDCard_write512@i:
 10768                           	callstack 0
 10769                           
 10770                           ; 2 bytes @ 0x8C
 10771   0005EC                     	ds	2
 10772   0005EE                     SDCard_read512@i_674:
 10773                           	callstack 0
 10774   0005EE                     SDCard_write512@i_691:
 10775                           	callstack 0
 10776                           
 10777                           ; 2 bytes @ 0x8E
 10778   0005EE                     	ds	2
 10779   0005F0                     SDCard_read512@retry:
 10780                           	callstack 0
 10781   0005F0                     SDCard_write512@retry:
 10782                           	callstack 0
 10783                           
 10784                           ; 2 bytes @ 0x90
 10785   0005F0                     	ds	2
 10786   0005F2                     SDCard_read512@resp_crc:
 10787                           	callstack 0
 10788   0005F2                     SDCard_write512@result:
 10789                           	callstack 0
 10790                           
 10791                           ; 2 bytes @ 0x92
 10792   0005F2                     	ds	2
 10793   0005F4                     SDCard_read512@result:
 10794                           	callstack 0
 10795   0005F4                     SDCard_write512@crc:
 10796                           	callstack 0
 10797                           
 10798                           ; 2 bytes @ 0x94
 10799   0005F4                     	ds	2
 10800   0005F6                     SDCard_read512@spi:
 10801                           	callstack 0
 10802   0005F6                     SDCard_write512@spi:
 10803                           	callstack 0
 10804                           
 10805                           ; 2 bytes @ 0x96
 10806   0005F6                     	ds	2
 10807   0005F8                     SDCard_write512@response:
 10808                           	callstack 0
 10809   0005F8                     SDCard_read512@crc:
 10810                           	callstack 0
 10811                           
 10812                           ; 2 bytes @ 0x98
 10813   0005F8                     	ds	1
 10814   0005F9                     disk_write@pdrv:
 10815                           	callstack 0
 10816                           
 10817                           ; 1 bytes @ 0x99
 10818   0005F9                     	ds	1
 10819   0005FA                     SDCard_read512@response:
 10820                           	callstack 0
 10821   0005FA                     disk_write@i:
 10822                           	callstack 0
 10823                           
 10824                           ; 2 bytes @ 0x9A
 10825   0005FA                     	ds	1
 10826   0005FB                     disk_read@pdrv:
 10827                           	callstack 0
 10828   0005FB                     ??_disk_initialize:
 10829                           
 10830                           ; 1 bytes @ 0x9B
 10831   0005FB                     	ds	1
 10832   0005FC                     sync_window@res:
 10833                           	callstack 0
 10834   0005FC                     disk_read@i:
 10835                           	callstack 0
 10836                           
 10837                           ; 2 bytes @ 0x9C
 10838   0005FC                     	ds	1
 10839   0005FD                     sync_fs@res:
 10840                           	callstack 0
 10841   0005FD                     
 10842                           ; 1 bytes @ 0x9D
 10843   0005FD                     	ds	1
 10844   0005FE                     move_window@res:
 10845                           	callstack 0
 10846                           
 10847                           ; 1 bytes @ 0x9E
 10848   0005FE                     	ds	1
 10849   0005FF                     u_getch@c:
 10850                           	callstack 0
 10851   0005FF                     in_file@chr:
 10852                           	callstack 0
 10853   0005FF                     ??_f_gets:
 10854                           
 10855                           ; 1 bytes @ 0x9F
 10856   0005FF                     	ds	1
 10857                           
 10858                           	psect	cstackCOMRAM
 10859   000501                     __pcstackCOMRAM:
 10860                           	callstack 0
 10861   000501                     ??_URT3Rx_ISR:
 10862                           
 10863                           ; 1 bytes @ 0x0
 10864   000501                     	ds	2
 10865   000503                     URT3Rx_ISR@rx_data:
 10866                           	callstack 0
 10867                           
 10868                           ; 1 bytes @ 0x2
 10869   000503                     	ds	1
 10870   000504                     ?_memcmp:
 10871                           	callstack 0
 10872   000504                     ?___SDCard_crc16:
 10873                           	callstack 0
 10874   000504                     ?_strlen:
 10875                           	callstack 0
 10876   000504                     ?_strchr:
 10877                           	callstack 0
 10878   000504                     ?___fpclassifyf:
 10879                           	callstack 0
 10880   000504                     ?_strncmp:
 10881                           	callstack 0
 10882   000504                     ?_getch:
 10883                           	callstack 0
 10884   000504                     ?_setup_drive:
 10885                           	callstack 0
 10886   000504                     ?_ld_word:
 10887                           	callstack 0
 10888   000504                     ?_dbc_1st:
 10889                           	callstack 0
 10890   000504                     ?_dbc_2nd:
 10891                           	callstack 0
 10892   000504                     ?_get_ldnumber:
 10893                           	callstack 0
 10894   000504                     ?_read_prec_or_width:
 10895                           	callstack 0
 10896   000504                     ?_get_hex:
 10897                           	callstack 0
 10898   000504                     ?_get_fattime:
 10899                           	callstack 0
 10900   000504                     ?___fladd:
 10901                           	callstack 0
 10902   000504                     ?_labs:
 10903                           	callstack 0
 10904   000504                     ?_ld_dword:
 10905                           	callstack 0
 10906   000504                     ?___lmul:
 10907                           	callstack 0
 10908   000504                     ?___lldiv:
 10909                           	callstack 0
 10910   000504                     ?___aldiv:
 10911                           	callstack 0
 10912   000504                     ?___almod:
 10913                           	callstack 0
 10914   000504                     ?___flneg:
 10915                           	callstack 0
 10916   000504                     ?___fltol:
 10917                           	callstack 0
 10918   000504                     ?___xxtofl:
 10919                           	callstack 0
 10920   000504                     putch@c:
 10921                           	callstack 0
 10922   000504                     acquire_bus@ctx_:
 10923                           	callstack 0
 10924   000504                     release_bus@ctx_:
 10925                           	callstack 0
 10926   000504                     SPI_SD_begin@ctx_:
 10927                           	callstack 0
 10928   000504                     SPI_SD_send@ctx_:
 10929                           	callstack 0
 10930   000504                     SPI_SD_receive@ctx_:
 10931                           	callstack 0
 10932   000504                     SPI_SD_select@ctx_:
 10933                           	callstack 0
 10934   000504                     SDCard_crc@buf:
 10935                           	callstack 0
 10936   000504                     ___SDCard_crc16@crc:
 10937                           	callstack 0
 10938   000504                     del_space@bytes:
 10939                           	callstack 0
 10940   000504                     set_arg@buf:
 10941                           	callstack 0
 10942   000504                     ld_word@ptr:
 10943                           	callstack 0
 10944   000504                     ld_dword@ptr:
 10945                           	callstack 0
 10946   000504                     st_word@ptr:
 10947                           	callstack 0
 10948   000504                     st_dword@ptr:
 10949                           	callstack 0
 10950   000504                     get_ldnumber@path:
 10951                           	callstack 0
 10952   000504                     get_hex@buf:
 10953                           	callstack 0
 10954   000504                     memcmp@vl:
 10955                           	callstack 0
 10956   000504                     memcpy@d1:
 10957                           	callstack 0
 10958   000504                     memset@dest:
 10959                           	callstack 0
 10960   000504                     read_prec_or_width@fmt:
 10961                           	callstack 0
 10962   000504                     strchr@s:
 10963                           	callstack 0
 10964   000504                     strcpy@dest:
 10965                           	callstack 0
 10966   000504                     strlen@s:
 10967                           	callstack 0
 10968   000504                     strncmp@l:
 10969                           	callstack 0
 10970   000504                     write_sram@addr:
 10971                           	callstack 0
 10972   000504                     read_sram@addr:
 10973                           	callstack 0
 10974   000504                     ___lmul@multiplier:
 10975                           	callstack 0
 10976   000504                     ___lldiv@dividend:
 10977                           	callstack 0
 10978   000504                     ___aldiv@dividend:
 10979                           	callstack 0
 10980   000504                     ___almod@dividend:
 10981                           	callstack 0
 10982   000504                     ___fleq@ff1:
 10983                           	callstack 0
 10984   000504                     ___flneg@f1:
 10985                           	callstack 0
 10986   000504                     ___fltol@f1:
 10987                           	callstack 0
 10988   000504                     ___fladd@b:
 10989                           	callstack 0
 10990   000504                     ___xxtofl@val:
 10991                           	callstack 0
 10992   000504                     ___fpclassifyf@x:
 10993                           	callstack 0
 10994   000504                     labs@a:
 10995                           	callstack 0
 10996   000504                     ??_start_cpu:
 10997   000504                     
 10998                           ; 1 bytes @ 0x3
 10999   000504                     	ds	1
 11000   000505                     fputc@c:
 11001                           	callstack 0
 11002                           
 11003                           ; 2 bytes @ 0x4
 11004   000505                     	ds	1
 11005   000506                     dbc_1st@c:
 11006                           	callstack 0
 11007   000506                     dbc_2nd@c:
 11008                           	callstack 0
 11009   000506                     acquire_bus@ctx:
 11010                           	callstack 0
 11011   000506                     release_bus@ctx:
 11012                           	callstack 0
 11013   000506                     SPI_SD_begin@ctx:
 11014                           	callstack 0
 11015   000506                     SPI_SD_send@buf:
 11016                           	callstack 0
 11017   000506                     SPI_SD_receive@buf:
 11018                           	callstack 0
 11019   000506                     SPI_SD_select@select:
 11020                           	callstack 0
 11021   000506                     SDCard_crc@count:
 11022                           	callstack 0
 11023   000506                     ___SDCard_crc16@buf:
 11024                           	callstack 0
 11025   000506                     set_arg@i:
 11026                           	callstack 0
 11027   000506                     st_word@val:
 11028                           	callstack 0
 11029   000506                     memcmp@vr:
 11030                           	callstack 0
 11031   000506                     memcpy@s1:
 11032                           	callstack 0
 11033   000506                     memset@c:
 11034                           	callstack 0
 11035   000506                     read_prec_or_width@ap:
 11036                           	callstack 0
 11037   000506                     strchr@c:
 11038                           	callstack 0
 11039   000506                     strcpy@src:
 11040                           	callstack 0
 11041   000506                     strlen@a:
 11042                           	callstack 0
 11043   000506                     strncmp@r:
 11044                           	callstack 0
 11045   000506                     st_dword@val:
 11046                           	callstack 0
 11047   000506                     ??_getch:
 11048   000506                     ??_del_space:
 11049   000506                     ??_ld_word:
 11050   000506                     ??_get_ldnumber:
 11051                           
 11052                           ; 1 bytes @ 0x5
 11053   000506                     	ds	1
 11054   000507                     del_space@i:
 11055                           	callstack 0
 11056   000507                     fputc@fp:
 11057                           	callstack 0
 11058                           
 11059                           ; 2 bytes @ 0x6
 11060   000507                     	ds	1
 11061   000508                     getch@c:
 11062                           	callstack 0
 11063   000508                     del_space@pos:
 11064                           	callstack 0
 11065   000508                     write_sram@buf:
 11066                           	callstack 0
 11067   000508                     read_sram@buf:
 11068                           	callstack 0
 11069   000508                     SPI_SD_begin_transaction@ctx_:
 11070                           	callstack 0
 11071   000508                     SPI_SD_end_transaction@ctx_:
 11072                           	callstack 0
 11073   000508                     SPI_SD_send@count:
 11074                           	callstack 0
 11075   000508                     SPI_SD_receive@count:
 11076                           	callstack 0
 11077   000508                     SDCard_crc@endp:
 11078                           	callstack 0
 11079   000508                     ___SDCard_crc16@count:
 11080                           	callstack 0
 11081   000508                     st_clust@fs:
 11082                           	callstack 0
 11083   000508                     get_ldnumber@i:
 11084                           	callstack 0
 11085   000508                     memcmp@n:
 11086                           	callstack 0
 11087   000508                     memcpy@n:
 11088                           	callstack 0
 11089   000508                     memset@n:
 11090                           	callstack 0
 11091   000508                     strcpy@d:
 11092                           	callstack 0
 11093   000508                     strncmp@n:
 11094                           	callstack 0
 11095   000508                     ___lmul@multiplicand:
 11096                           	callstack 0
 11097   000508                     ___lldiv@divisor:
 11098                           	callstack 0
 11099   000508                     ___aldiv@divisor:
 11100                           	callstack 0
 11101   000508                     ___almod@divisor:
 11102                           	callstack 0
 11103   000508                     ___fleq@ff2:
 11104                           	callstack 0
 11105   000508                     ___fladd@a:
 11106                           	callstack 0
 11107   000508                     ??_get_hex:
 11108   000508                     ??_strchr:
 11109   000508                     ??___fpclassifyf:
 11110   000508                     ??_labs:
 11111   000508                     ??_ld_dword:
 11112   000508                     ??___fltol:
 11113   000508                     ??___xxtofl:
 11114   000508                     ??_read_prec_or_width:
 11115                           
 11116                           ; 1 bytes @ 0x7
 11117   000508                     	ds	1
 11118   000509                     del_space@c:
 11119                           	callstack 0
 11120   000509                     ld_word@rv:
 11121                           	callstack 0
 11122   000509                     ??_fputc:
 11123                           
 11124                           ; 1 bytes @ 0x8
 11125   000509                     	ds	1
 11126   00050A                     get_ldnumber@tc:
 11127                           	callstack 0
 11128   00050A                     memcpy@tmp:
 11129                           	callstack 0
 11130   00050A                     read_prec_or_width@c:
 11131                           	callstack 0
 11132   00050A                     write_sram@len:
 11133                           	callstack 0
 11134   00050A                     read_sram@len:
 11135                           	callstack 0
 11136   00050A                     SPI_SD_send@i:
 11137                           	callstack 0
 11138   00050A                     SDCard_crc@i:
 11139                           	callstack 0
 11140   00050A                     st_clust@dir:
 11141                           	callstack 0
 11142   00050A                     memset@p:
 11143                           	callstack 0
 11144   00050A                     ??_memcmp:
 11145   00050A                     ??___SDCard_crc16:
 11146   00050A                     ??_strncmp:
 11147   00050A                     ??_SPI_SD_receive:
 11148   00050A                     
 11149                           ; 1 bytes @ 0x9
 11150   00050A                     	ds	1
 11151   00050B                     ?_strstr:
 11152                           	callstack 0
 11153   00050B                     ?_ld_clust:
 11154                           	callstack 0
 11155   00050B                     ld_clust@fs:
 11156                           	callstack 0
 11157   00050B                     get_ldnumber@tt:
 11158                           	callstack 0
 11159   00050B                     memcpy@d:
 11160                           	callstack 0
 11161   00050B                     read_prec_or_width@n:
 11162                           	callstack 0
 11163   00050B                     strstr@h:
 11164                           	callstack 0
 11165                           
 11166                           ; 2 bytes @ 0xA
 11167   00050B                     	ds	1
 11168   00050C                     SPI_SD_receive@repeat:
 11169                           	callstack 0
 11170   00050C                     SDCard_crc@crc:
 11171                           	callstack 0
 11172   00050C                     ___aldiv@counter:
 11173                           	callstack 0
 11174   00050C                     ___almod@counter:
 11175                           	callstack 0
 11176   00050C                     ___fltol@sign1:
 11177                           	callstack 0
 11178   00050C                     ___xxtofl@sign:
 11179                           	callstack 0
 11180   00050C                     read_sram@i:
 11181                           	callstack 0
 11182   00050C                     SPI_SD_send@p:
 11183                           	callstack 0
 11184   00050C                     create_name@dp:
 11185                           	callstack 0
 11186   00050C                     get_hex@c:
 11187                           	callstack 0
 11188   00050C                     ___fpclassifyf@e:
 11189                           	callstack 0
 11190   00050C                     memcmp@l:
 11191                           	callstack 0
 11192   00050C                     st_clust@cl:
 11193                           	callstack 0
 11194   00050C                     ___lmul@product:
 11195                           	callstack 0
 11196   00050C                     ___lldiv@quotient:
 11197                           	callstack 0
 11198   00050C                     ??_write_sram:
 11199   00050C                     ??___fladd:
 11200   00050C                     ??___fleq:
 11201                           
 11202                           ; 1 bytes @ 0xB
 11203   00050C                     	ds	1
 11204   00050D                     ___aldiv@sign:
 11205                           	callstack 0
 11206   00050D                     ___almod@sign:
 11207                           	callstack 0
 11208   00050D                     ___fltol@exp1:
 11209                           	callstack 0
 11210   00050D                     ___xxtofl@exp:
 11211                           	callstack 0
 11212   00050D                     SPI_SD_receive@i:
 11213                           	callstack 0
 11214   00050D                     SDCard_crc@p:
 11215                           	callstack 0
 11216   00050D                     ___SDCard_crc16@endp:
 11217                           	callstack 0
 11218   00050D                     ld_clust@dir:
 11219                           	callstack 0
 11220   00050D                     get_ldnumber@vol:
 11221                           	callstack 0
 11222   00050D                     memcpy@s:
 11223                           	callstack 0
 11224   00050D                     strstr@n:
 11225                           	callstack 0
 11226   00050D                     ld_dword@rv:
 11227                           	callstack 0
 11228                           
 11229                           ; 4 bytes @ 0xC
 11230   00050D                     	ds	1
 11231   00050E                     ?_abs:
 11232                           	callstack 0
 11233   00050E                     write_sram@i:
 11234                           	callstack 0
 11235   00050E                     SPI_SD_dummy_clocks@ctx_:
 11236                           	callstack 0
 11237   00050E                     create_name@path:
 11238                           	callstack 0
 11239   00050E                     memcmp@r:
 11240                           	callstack 0
 11241   00050E                     stoa@fp:
 11242                           	callstack 0
 11243   00050E                     abs@a:
 11244                           	callstack 0
 11245   00050E                     fputs@s:
 11246                           	callstack 0
 11247   00050E                     read_sram@ab:
 11248                           	callstack 0
 11249   00050E                     get_hex@d:
 11250                           	callstack 0
 11251   00050E                     ___aldiv@quotient:
 11252                           	callstack 0
 11253   00050E                     ___xxtofl@arg:
 11254                           	callstack 0
 11255   00050E                     ___fpclassifyf@u:
 11256                           	callstack 0
 11257                           
 11258                           ; 4 bytes @ 0xD
 11259   00050E                     	ds	1
 11260   00050F                     SPI_SD_receive@i_590:
 11261                           	callstack 0
 11262   00050F                     ___SDCard_crc16@p:
 11263                           	callstack 0
 11264   00050F                     get_ldnumber@tp:
 11265                           	callstack 0
 11266   00050F                     strstr@nl:
 11267                           	callstack 0
 11268   00050F                     ??_ld_clust:
 11269                           
 11270                           ; 1 bytes @ 0xE
 11271   00050F                     	ds	1
 11272   000510                     ?___strtoxl:
 11273                           	callstack 0
 11274   000510                     ?_clst2sect:
 11275                           	callstack 0
 11276   000510                     ___lldiv@counter:
 11277                           	callstack 0
 11278   000510                     ___fladd@signs:
 11279                           	callstack 0
 11280   000510                     SPI_SD_receive@p:
 11281                           	callstack 0
 11282   000510                     SPI_SD_dummy_clocks@clocks:
 11283                           	callstack 0
 11284   000510                     clst2sect@fs:
 11285                           	callstack 0
 11286   000510                     ___strtoxl@s:
 11287                           	callstack 0
 11288   000510                     stoa@s:
 11289                           	callstack 0
 11290   000510                     fputs@fp:
 11291                           	callstack 0
 11292   000510                     write_sram@ab:
 11293                           	callstack 0
 11294   000510                     ??_abs:
 11295   000510                     ??_create_name:
 11296                           
 11297                           ; 1 bytes @ 0xF
 11298   000510                     	ds	1
 11299   000511                     ___fladd@aexp:
 11300                           	callstack 0
 11301   000511                     get_fileinfo@dp:
 11302                           	callstack 0
 11303                           
 11304                           ; 2 bytes @ 0x10
 11305   000511                     	ds	1
 11306   000512                     ?___flmul:
 11307                           	callstack 0
 11308   000512                     ___fladd@bexp:
 11309                           	callstack 0
 11310   000512                     fputs@c:
 11311                           	callstack 0
 11312   000512                     SPI_SD_dummy_clocks@i:
 11313                           	callstack 0
 11314   000512                     SPI_SD_receive_byte@ctx_:
 11315                           	callstack 0
 11316   000512                     ___strtoxl@endptr:
 11317                           	callstack 0
 11318   000512                     clst2sect@clst:
 11319                           	callstack 0
 11320   000512                     get_hex@hexval:
 11321                           	callstack 0
 11322   000512                     ___flmul@b:
 11323                           	callstack 0
 11324   000512                     ??_stoa:
 11325                           
 11326                           ; 1 bytes @ 0x11
 11327   000512                     	ds	1
 11328   000513                     ___fladd@grs:
 11329                           	callstack 0
 11330   000513                     get_fileinfo@fno:
 11331                           	callstack 0
 11332   000513                     _create_name$2687:
 11333                           	callstack 0
 11334   000513                     fputs@i:
 11335                           	callstack 0
 11336   000513                     ld_clust@cl:
 11337                           	callstack 0
 11338                           
 11339                           ; 4 bytes @ 0x12
 11340   000513                     	ds	1
 11341   000514                     SPI_SD_dummy_clocks@dummy:
 11342                           	callstack 0
 11343   000514                     SPI_SD_receive_byte@dummy:
 11344                           	callstack 0
 11345   000514                     ___strtoxl@base:
 11346                           	callstack 0
 11347   000514                     stoa@p:
 11348                           	callstack 0
 11349   000514                     
 11350                           ; 1 bytes @ 0x13
 11351   000514                     	ds	1
 11352   000515                     SDCard_end_transaction@spi:
 11353                           	callstack 0
 11354   000515                     ___SDCard_wait_response@attempts:
 11355                           	callstack 0
 11356   000515                     _create_name$2691:
 11357                           	callstack 0
 11358   000515                     pad@fp:
 11359                           	callstack 0
 11360   000515                     ??_get_fileinfo:
 11361                           
 11362                           ; 1 bytes @ 0x14
 11363   000515                     	ds	1
 11364   000516                     get_hex@ch:
 11365                           	callstack 0
 11366   000516                     ___strtoxl@is_signed:
 11367                           	callstack 0
 11368   000516                     stoa@w:
 11369                           	callstack 0
 11370   000516                     ___flmul@a:
 11371                           	callstack 0
 11372   000516                     ??_clst2sect:
 11373                           
 11374                           ; 1 bytes @ 0x15
 11375   000516                     	ds	1
 11376   000517                     ___SDCard_wait_response@no_response:
 11377                           	callstack 0
 11378   000517                     create_name@d:
 11379                           	callstack 0
 11380   000517                     pad@buf:
 11381                           	callstack 0
 11382   000517                     ??___strtoxl:
 11383   000517                     
 11384                           ; 1 bytes @ 0x16
 11385   000517                     	ds	1
 11386   000518                     ___SDCard_wait_response@spi:
 11387                           	callstack 0
 11388   000518                     create_name@ni:
 11389                           	callstack 0
 11390   000518                     stoa@cp:
 11391                           	callstack 0
 11392                           
 11393                           ; 2 bytes @ 0x17
 11394   000518                     	ds	1
 11395   000519                     get_fileinfo@si:
 11396                           	callstack 0
 11397   000519                     pad@p:
 11398                           	callstack 0
 11399                           
 11400                           ; 2 bytes @ 0x18
 11401   000519                     	ds	1
 11402   00051A                     ___SDCard_wait_response@response:
 11403                           	callstack 0
 11404   00051A                     create_name@i:
 11405                           	callstack 0
 11406   00051A                     stoa@l:
 11407                           	callstack 0
 11408   00051A                     ___strtoxl@prev_a:
 11409                           	callstack 0
 11410   00051A                     ??___flmul:
 11411                           
 11412                           ; 1 bytes @ 0x19
 11413   00051A                     	ds	1
 11414   00051B                     ?___SDCard_command_r1:
 11415                           	callstack 0
 11416   00051B                     get_fileinfo@c:
 11417                           	callstack 0
 11418   00051B                     ___SDCard_command_r1@argument:
 11419                           	callstack 0
 11420   00051B                     ??_pad:
 11421                           
 11422                           ; 1 bytes @ 0x1A
 11423   00051B                     	ds	1
 11424   00051C                     get_fileinfo@di:
 11425                           	callstack 0
 11426   00051C                     create_name@sfn:
 11427                           	callstack 0
 11428   00051C                     pad@i:
 11429                           	callstack 0
 11430                           
 11431                           ; 2 bytes @ 0x1B
 11432   00051C                     	ds	2
 11433   00051E                     ___flmul@sign:
 11434                           	callstack 0
 11435   00051E                     create_name@p:
 11436                           	callstack 0
 11437   00051E                     ___strtoxl$4607:
 11438                           	callstack 0
 11439   00051E                     dtoa@fp:
 11440                           	callstack 0
 11441   00051E                     xtoa@fp:
 11442                           	callstack 0
 11443                           
 11444                           ; 2 bytes @ 0x1D
 11445   00051E                     	ds	1
 11446   00051F                     ___flmul@aexp:
 11447                           	callstack 0
 11448   00051F                     ___SDCard_command_r1@r1:
 11449                           	callstack 0
 11450                           
 11451                           ; 2 bytes @ 0x1E
 11452   00051F                     	ds	1
 11453   000520                     create_name@si:
 11454                           	callstack 0
 11455   000520                     ___strtoxl$4608:
 11456                           	callstack 0
 11457   000520                     ___flmul@grs:
 11458                           	callstack 0
 11459   000520                     dtoa@d:
 11460                           	callstack 0
 11461   000520                     xtoa@d:
 11462                           	callstack 0
 11463                           
 11464                           ; 4 bytes @ 0x1F
 11465   000520                     	ds	1
 11466   000521                     ___SDCard_command_r1@command:
 11467                           	callstack 0
 11468   000521                     
 11469                           ; 1 bytes @ 0x20
 11470   000521                     	ds	1
 11471   000522                     create_name@c:
 11472                           	callstack 0
 11473   000522                     ___strtoxl@limit:
 11474                           	callstack 0
 11475   000522                     ___SDCard_command_r1@buf:
 11476                           	callstack 0
 11477                           
 11478                           ; 6 bytes @ 0x21
 11479   000522                     	ds	2
 11480   000524                     ___flmul@bexp:
 11481                           	callstack 0
 11482   000524                     xtoa@x:
 11483                           	callstack 0
 11484   000524                     _dtoa$4721:
 11485                           	callstack 0
 11486   000524                     
 11487                           ; 1 bytes @ 0x23
 11488   000524                     	ds	1
 11489   000525                     ___flmul@prod:
 11490                           	callstack 0
 11491   000525                     ??_xtoa:
 11492                           
 11493                           ; 1 bytes @ 0x24
 11494   000525                     	ds	1
 11495   000526                     ___strtoxl@flags:
 11496                           	callstack 0
 11497   000526                     dtoa@p:
 11498                           	callstack 0
 11499                           
 11500                           ; 2 bytes @ 0x25
 11501   000526                     	ds	1
 11502   000527                     ___strtoxl@a:
 11503                           	callstack 0
 11504                           
 11505                           ; 4 bytes @ 0x26
 11506   000527                     	ds	1
 11507   000528                     ___SDCard_command_r1@response:
 11508                           	callstack 0
 11509   000528                     dtoa@w:
 11510                           	callstack 0
 11511                           
 11512                           ; 2 bytes @ 0x27
 11513   000528                     	ds	1
 11514   000529                     xtoa@a:
 11515                           	callstack 0
 11516   000529                     ___SDCard_command_r1@spi:
 11517                           	callstack 0
 11518   000529                     ___flmul@temp:
 11519                           	callstack 0
 11520                           
 11521                           ; 2 bytes @ 0x28
 11522   000529                     	ds	1
 11523   00052A                     dtoa@s:
 11524                           	callstack 0
 11525   00052A                     _xtoa$4774:
 11526                           	callstack 0
 11527                           
 11528                           ; 2 bytes @ 0x29
 11529   00052A                     	ds	1
 11530   00052B                     ?___fldiv:
 11531                           	callstack 0
 11532   00052B                     ?___flsub:
 11533                           	callstack 0
 11534   00052B                     ___strtoxl@cp:
 11535                           	callstack 0
 11536   00052B                     dtoa@i:
 11537                           	callstack 0
 11538   00052B                     SDCard_command@argument:
 11539                           	callstack 0
 11540   00052B                     ___flge@ff1:
 11541                           	callstack 0
 11542   00052B                     ___flsub@b:
 11543                           	callstack 0
 11544   00052B                     ___fldiv@b:
 11545                           	callstack 0
 11546                           
 11547                           ; 4 bytes @ 0x2A
 11548   00052B                     	ds	1
 11549   00052C                     xtoa@p:
 11550                           	callstack 0
 11551                           
 11552                           ; 2 bytes @ 0x2B
 11553   00052C                     	ds	1
 11554   00052D                     ___strtoxl@c:
 11555                           	callstack 0
 11556                           
 11557                           ; 1 bytes @ 0x2C
 11558   00052D                     	ds	1
 11559   00052E                     xtoa@w:
 11560                           	callstack 0
 11561                           
 11562                           ; 2 bytes @ 0x2D
 11563   00052E                     	ds	1
 11564   00052F                     SDCard_command@response_buffer:
 11565                           	callstack 0
 11566   00052F                     ___flge@ff2:
 11567                           	callstack 0
 11568   00052F                     ___flsub@a:
 11569                           	callstack 0
 11570   00052F                     ___fldiv@a:
 11571                           	callstack 0
 11572                           
 11573                           ; 4 bytes @ 0x2E
 11574   00052F                     	ds	1
 11575   000530                     xtoa@c:
 11576                           	callstack 0
 11577                           
 11578                           ; 1 bytes @ 0x2F
 11579   000530                     	ds	1
 11580   000531                     SDCard_command@length:
 11581                           	callstack 0
 11582   000531                     xtoa@i:
 11583                           	callstack 0
 11584                           
 11585                           ; 2 bytes @ 0x30
 11586   000531                     	ds	2
 11587   000533                     SDCard_command@command:
 11588                           	callstack 0
 11589   000533                     ??___fldiv:
 11590   000533                     ??___flge:
 11591                           
 11592                           ; 1 bytes @ 0x32
 11593   000533                     	ds	1
 11594   000534                     SDCard_command@spi:
 11595                           	callstack 0
 11596                           
 11597                           ; 2 bytes @ 0x33
 11598   000534                     	ds	2
 11599   000536                     SDCard_command@result:
 11600                           	callstack 0
 11601                           
 11602                           ; 2 bytes @ 0x35
 11603   000536                     	ds	1
 11604   000537                     ___fldiv@rem:
 11605                           	callstack 0
 11606                           
 11607                           ; 4 bytes @ 0x36
 11608   000537                     	ds	1
 11609   000538                     SDCard_command@responsep:
 11610                           	callstack 0
 11611                           
 11612                           ; 2 bytes @ 0x37
 11613   000538                     	ds	3
 11614   00053B                     ___fldiv@sign:
 11615                           	callstack 0
 11616                           
 11617                           ; 1 bytes @ 0x3A
 11618   00053B                     	ds	1
 11619   00053C                     ___fldiv@new_exp:
 11620                           	callstack 0
 11621                           
 11622                           ; 2 bytes @ 0x3B
 11623   00053C                     	ds	2
 11624   00053E                     ___fldiv@grs:
 11625                           	callstack 0
 11626                           
 11627                           ; 4 bytes @ 0x3D
 11628   00053E                     	ds	4
 11629   000542                     ___fldiv@bexp:
 11630                           	callstack 0
 11631                           
 11632                           ; 1 bytes @ 0x41
 11633   000542                     	ds	1
 11634   000543                     ___fldiv@aexp:
 11635                           	callstack 0
 11636                           
 11637                           ; 1 bytes @ 0x42
 11638   000543                     	ds	1
 11639   000544                     ?_floorf:
 11640                           	callstack 0
 11641   000544                     floorf@x:
 11642                           	callstack 0
 11643                           
 11644                           ; 4 bytes @ 0x43
 11645   000544                     	ds	4
 11646   000548                     ??_floorf:
 11647                           
 11648                           ; 1 bytes @ 0x47
 11649   000548                     	ds	6
 11650   00054E                     floorf@m:
 11651                           	callstack 0
 11652                           
 11653                           ; 4 bytes @ 0x4D
 11654   00054E                     	ds	4
 11655   000552                     floorf@e:
 11656                           	callstack 0
 11657                           
 11658                           ; 2 bytes @ 0x51
 11659   000552                     	ds	2
 11660   000554                     floorf@u:
 11661                           	callstack 0
 11662                           
 11663                           ; 4 bytes @ 0x53
 11664   000554                     	ds	4
 11665   000558                     ??_efgtoa:
 11666                           
 11667                           ; 1 bytes @ 0x57
 11668   000558                     	ds	2
 11669   00055A                     
 11670                           ; 1 bytes @ 0x59
 11671 ;;
 11672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11673 ;;
 11674 ;; *************** function _main *****************
 11675 ;; Defined at:
 11676 ;;		line 183 in file "../src/w65_main.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  c               2  156[BANK7 ] int 
 11681 ;;  buf             2  154[BANK7 ] PTR unsigned char 
 11682 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 11683 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 11684 ;;  res             2  151[BANK7 ] PTR unsigned char 
 11685 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 11686 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 11687 ;;  fr              2    0        int 
 11688 ;;  rs              1  153[BANK7 ] enum E17409
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11699 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11700 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11701 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;Total ram usage:       13 bytes
 11703 ;; Hardware stack levels required when called: 26
 11704 ;; This function calls:
 11705 ;;		___fldiv
 11706 ;;		___flmul
 11707 ;;		___xxtofl
 11708 ;;		_boot_file
 11709 ;;		_change_directory
 11710 ;;		_clc_init
 11711 ;;		_clk_init
 11712 ;;		_disk_init
 11713 ;;		_f_getcwd
 11714 ;;		_flash_apl
 11715 ;;		_get_line
 11716 ;;		_load_config
 11717 ;;		_load_file
 11718 ;;		_mem_dump
 11719 ;;		_mem_init
 11720 ;;		_mon_prog
 11721 ;;		_port_init
 11722 ;;		_print_com
 11723 ;;		_print_reg
 11724 ;;		_printf
 11725 ;;		_reset_clk
 11726 ;;		_reset_cpu
 11727 ;;		_restart_prog
 11728 ;;		_return_cpu
 11729 ;;		_scan_files
 11730 ;;		_scan_files1
 11731 ;;		_see_file
 11732 ;;		_set_arg
 11733 ;;		_setup_monitor
 11734 ;;		_setup_sd
 11735 ;;		_strlen
 11736 ;;		_strstr
 11737 ;;		_uart_init
 11738 ;;		_wait_for_programmer
 11739 ;;		_wstart_prog
 11740 ;; This function is called by:
 11741 ;;		Startup code after reset
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           	psect	text0
 11746   0171A0                     __ptext0:
 11747                           	callstack 0
 11748   0171A0                     _main:
 11749                           	callstack 101
 11750   0171A0                     
 11751                           ;../src/w65_main.c: 185:  int c, fr;;../src/w65_main.c: 186:  char *buf, *res;;../src/w6
      +                          5_main.c: 187:  FRESULT rs;;../src/w65_main.c: 189:  cin_no = 0;
 11752   0171A0  0107               	movlb	7	; () banked
 11753   0171A2  6BCA               	clrf	_cin_no& (0+255),b
 11754                           
 11755                           ;../src/w65_main.c: 190:  wup_flg = 0;
 11756   0171A4  6BCC               	clrf	_wup_flg& (0+255),b
 11757                           
 11758                           ;../src/w65_main.c: 191:  nmi_sig = 0;
 11759   0171A6  6BCD               	clrf	_nmi_sig& (0+255),b
 11760                           
 11761                           ;../src/w65_main.c: 192:  fh.nmi_sw = 0;
 11762   0171A8  0108               	movlb	8	; () banked
 11763   0171AA  6BC0               	clrf	(_fh+30)& (0+255),b
 11764   0171AC                     
 11765                           ; BSR set to: 8
 11766                           ;../src/w65_main.c: 193:  raw_addr = 0;
 11767   0171AC  0E00               	movlw	0
 11768   0171AE  0107               	movlb	7	; () banked
 11769   0171B0  6FAD               	movwf	_raw_addr& (0+255),b
 11770   0171B2  0E00               	movlw	0
 11771   0171B4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 11772   0171B6  0E00               	movlw	0
 11773   0171B8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 11774   0171BA  0E00               	movlw	0
 11775   0171BC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 11776   0171BE                     
 11777                           ; BSR set to: 7
 11778                           ;../src/w65_main.c: 194:  load_flg = 0;
 11779   0171BE  6BC9               	clrf	_load_flg& (0+255),b
 11780   0171C0                     
 11781                           ; BSR set to: 7
 11782                           ;../src/w65_main.c: 195:  binv.sw = 0;
 11783   0171C0  0108               	movlb	8	; () banked
 11784   0171C2  6B78               	clrf	_binv& (0+255),b
 11785   0171C4                     
 11786                           ; BSR set to: 8
 11787                           ;../src/w65_main.c: 197:  port_init();
 11788   0171C4  EC48  F0FB         	call	_port_init	;wreg free
 11789   0171C8                     
 11790                           ;../src/w65_main.c: 198:  uart_init();
 11791   0171C8  EC82  F0FE         	call	_uart_init	;wreg free
 11792   0171CC                     
 11793                           ;../src/w65_main.c: 199:  wait_for_programmer();
 11794   0171CC  EC73  F0FD         	call	_wait_for_programmer	;wreg free
 11795   0171D0                     
 11796                           ;../src/w65_main.c: 201:  setup_sd();
 11797   0171D0  ECA0  F0F7         	call	_setup_sd	;wreg free
 11798   0171D4                     
 11799                           ;../src/w65_main.c: 202:  if (disk_init() < 0) while (1);
 11800   0171D4  EC87  F0FC         	call	_disk_init	;wreg free
 11801   0171D8  0106               	movlb	6	; () banked
 11802   0171DA  BFBC               	btfsc	(?_disk_init+1)& (0+255),7,b
 11803   0171DC  EFF4  F0B8         	goto	u35490
 11804   0171E0  EFF2  F0B8         	goto	u35491
 11805   0171E4                     u35491:
 11806   0171E4  EFF6  F0B8         	goto	l25555
 11807   0171E8                     u35490:
 11808   0171E8                     l1098:
 11809   0171E8  EFF4  F0B8         	goto	l1098
 11810   0171EC                     l25555:
 11811                           
 11812                           ; BSR set to: 6
 11813                           ;../src/w65_main.c: 204:  clk_init();
 11814   0171EC  ECB6  F000         	call	_clk_init	;wreg free
 11815   0171F0                     
 11816                           ;../src/w65_main.c: 205:  reset_cpu();
 11817   0171F0  EC3E  F0EF         	call	_reset_cpu	;wreg free
 11818   0171F4                     
 11819                           ;../src/w65_main.c: 208:  cpu_flg = 1;
 11820   0171F4  0E01               	movlw	1
 11821   0171F6  0107               	movlb	7	; () banked
 11822   0171F8  6FE5               	movwf	_cpu_flg& (0+255),b
 11823   0171FA                     
 11824                           ; BSR set to: 7
 11825                           ;../src/w65_main.c: 209:  if ( mem_init() <= 0x10000 ) {
 11826   0171FA  EC7C  F0C8         	call	_mem_init	;wreg free
 11827   0171FE  0105               	movlb	5	; () banked
 11828   017200  51E1               	movf	(?_mem_init+3)& (0+255),w,b
 11829   017202  E10A               	bnz	u35501
 11830   017204  05DE               	decf	?_mem_init& (0+255),w,b
 11831   017206  0E00               	movlw	0
 11832   017208  59DF               	subwfb	(?_mem_init+1)& (0+255),w,b
 11833   01720A  0E01               	movlw	1
 11834   01720C  59E0               	subwfb	(?_mem_init+2)& (0+255),w,b
 11835   01720E  B0D8               	btfsc	status,0,c
 11836   017210  EF0C  F0B9         	goto	u35501
 11837   017214  EF0E  F0B9         	goto	u35500
 11838   017218                     u35501:
 11839   017218  EF19  F0B9         	goto	l25567
 11840   01721C                     u35500:
 11841   01721C                     
 11842                           ; BSR set to: 5
 11843                           ;../src/w65_main.c: 210:   cpu_flg = 0;
 11844   01721C  0107               	movlb	7	; () banked
 11845   01721E  6BE5               	clrf	_cpu_flg& (0+255),b
 11846   017220                     
 11847                           ; BSR set to: 7
 11848                           ;../src/w65_main.c: 211:   printf("CPU Setting: W65C02\r\n");
 11849   017220  0EEE               	movlw	low STR_69
 11850   017222  0105               	movlb	5	; () banked
 11851   017224  6FAD               	movwf	printf@fmt& (0+255),b
 11852   017226  0EFB               	movlw	high STR_69
 11853   017228  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11854   01722A  ECDA  F0FF         	call	_printf	;wreg free
 11855                           
 11856                           ;../src/w65_main.c: 212:  }
 11857   01722E  EF23  F0B9         	goto	l25571
 11858   017232                     l25567:
 11859                           
 11860                           ; BSR set to: 5
 11861                           ;../src/w65_main.c: 214:   cpu_flg = 1;
 11862   017232  0E01               	movlw	1
 11863   017234  0107               	movlb	7	; () banked
 11864   017236  6FE5               	movwf	_cpu_flg& (0+255),b
 11865   017238                     
 11866                           ; BSR set to: 7
 11867                           ;../src/w65_main.c: 215:   printf("CPU Setting: W65C816\r\n");
 11868   017238  0EAA               	movlw	low STR_70
 11869   01723A  0105               	movlb	5	; () banked
 11870   01723C  6FAD               	movwf	printf@fmt& (0+255),b
 11871   01723E  0EFB               	movlw	high STR_70
 11872   017240  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11873   017242  ECDA  F0FF         	call	_printf	;wreg free
 11874   017246                     l25571:
 11875                           
 11876                           ;../src/w65_main.c: 218:  if( load_config() < 0) while (1);
 11877   017246  ECED  F0B6         	call	_load_config	;wreg free
 11878   01724A  0107               	movlb	7	; () banked
 11879   01724C  BF01               	btfsc	(?_load_config+1)& (0+255),7,b
 11880   01724E  EF2D  F0B9         	goto	u35510
 11881   017252  EF2B  F0B9         	goto	u35511
 11882   017256                     u35511:
 11883   017256  EF2F  F0B9         	goto	l25573
 11884   01725A                     u35510:
 11885   01725A                     l1104:
 11886   01725A  EF2D  F0B9         	goto	l1104
 11887   01725E                     l25573:
 11888                           
 11889                           ; BSR set to: 7
 11890                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 11891   01725E  0E00               	movlw	0
 11892   017260  6E16               	movwf	___flmul@a^(0+1280),c
 11893   017262  0E24               	movlw	36
 11894   017264  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 11895   017266  0EF4               	movlw	244
 11896   017268  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 11897   01726A  0E41               	movlw	65
 11898   01726C  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 11899   01726E  C7DF  F504         	movff	_clk_fs,___xxtofl@val
 11900   017272  C7E0  F505         	movff	_clk_fs+1,___xxtofl@val+1
 11901   017276  C7E1  F506         	movff	_clk_fs+2,___xxtofl@val+2
 11902   01727A  C7E2  F507         	movff	_clk_fs+3,___xxtofl@val+3
 11903   01727E  0E00               	movlw	0
 11904   017280  EC53  F0D5         	call	___xxtofl
 11905   017284  C504  F512         	movff	?___xxtofl,___flmul@b
 11906   017288  C505  F513         	movff	?___xxtofl+1,___flmul@b+1
 11907   01728C  C506  F514         	movff	?___xxtofl+2,___flmul@b+2
 11908   017290  C507  F515         	movff	?___xxtofl+3,___flmul@b+3
 11909   017294  ECE4  F0B2         	call	___flmul	;wreg free
 11910   017298  C512  F52B         	movff	?___flmul,___fldiv@b
 11911   01729C  C513  F52C         	movff	?___flmul+1,___fldiv@b+1
 11912   0172A0  C514  F52D         	movff	?___flmul+2,___fldiv@b+2
 11913   0172A4  C515  F52E         	movff	?___flmul+3,___fldiv@b+3
 11914   0172A8  0E00               	movlw	0
 11915   0172AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 11916   0172AC  0E24               	movlw	36
 11917   0172AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 11918   0172B0  0E74               	movlw	116
 11919   0172B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 11920   0172B4  0E49               	movlw	73
 11921   0172B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 11922   0172B8  ECAA  F0BA         	call	___fldiv	;wreg free
 11923   0172BC  C52B  F793         	movff	?___fldiv,_main$5311
 11924   0172C0  C52C  F794         	movff	?___fldiv+1,_main$5311+1
 11925   0172C4  C52D  F795         	movff	?___fldiv+2,_main$5311+2
 11926   0172C8  C52E  F796         	movff	?___fldiv+3,_main$5311+3
 11927   0172CC                     
 11928                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 11929   0172CC  0E65               	movlw	low STR_71
 11930   0172CE  0105               	movlb	5	; () banked
 11931   0172D0  6FAD               	movwf	printf@fmt& (0+255),b
 11932   0172D2  0EFB               	movlw	high STR_71
 11933   0172D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11934   0172D6  C793  F5AF         	movff	_main$5311,?_printf+2
 11935   0172DA  C794  F5B0         	movff	_main$5311+1,?_printf+3
 11936   0172DE  C795  F5B1         	movff	_main$5311+2,?_printf+4
 11937   0172E2  C796  F5B2         	movff	_main$5311+3,?_printf+5
 11938   0172E6  ECDA  F0FF         	call	_printf	;wreg free
 11939   0172EA                     
 11940                           ;../src/w65_main.c: 221:  reset_clk();
 11941   0172EA  ECDF  F000         	call	_reset_clk	;wreg free
 11942   0172EE                     
 11943                           ;../src/w65_main.c: 222:  clc_init();
 11944   0172EE  EC90  F0E0         	call	_clc_init	;wreg free
 11945   0172F2                     
 11946                           ;../src/w65_main.c: 225:  GIE = 1;
 11947   0172F2  8ED6               	bsf	1238,7,c	;volatile
 11948   0172F4                     
 11949                           ;../src/w65_main.c: 228:  if ( setup_monitor() ) {
 11950   0172F4  EC2C  F0F4         	call	_setup_monitor	;wreg free
 11951   0172F8  0107               	movlb	7	; () banked
 11952   0172FA  5116               	movf	?_setup_monitor& (0+255),w,b
 11953   0172FC  1117               	iorwf	(?_setup_monitor+1)& (0+255),w,b
 11954   0172FE  B4D8               	btfsc	status,2,c
 11955   017300  EF84  F0B9         	goto	u35521
 11956   017304  EF86  F0B9         	goto	u35520
 11957   017308                     u35521:
 11958   017308  EF8F  F0B9         	goto	l25587
 11959   01730C                     u35520:
 11960   01730C                     
 11961                           ; BSR set to: 7
 11962                           ;../src/w65_main.c: 229:   printf("System stop!!");
 11963   01730C  0E5E               	movlw	low STR_72
 11964   01730E  0105               	movlb	5	; () banked
 11965   017310  6FAD               	movwf	printf@fmt& (0+255),b
 11966   017312  0EFE               	movlw	high STR_72
 11967   017314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11968   017316  ECDA  F0FF         	call	_printf	;wreg free
 11969   01731A                     l1108:
 11970   01731A  EF8D  F0B9         	goto	l1108
 11971   01731E                     l25587:
 11972                           
 11973                           ; BSR set to: 7
 11974                           ;../src/w65_main.c: 233:  printf("\r\nBoard: %s\n\r", board_name);
 11975   01731E  0E50               	movlw	low STR_73
 11976   017320  0105               	movlb	5	; () banked
 11977   017322  6FAD               	movwf	printf@fmt& (0+255),b
 11978   017324  0EFE               	movlw	high STR_73
 11979   017326  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11980   017328  0EF7               	movlw	low STR_47
 11981   01732A  6FAF               	movwf	(?_printf+2)& (0+255),b
 11982   01732C  0EF4               	movlw	high STR_47
 11983   01732E  6FB0               	movwf	(?_printf+3)& (0+255),b
 11984   017330  ECDA  F0FF         	call	_printf	;wreg free
 11985   017334                     
 11986                           ;../src/w65_main.c: 236:  line_buf[0] = '\0';
 11987   017334  010A               	movlb	10	; () banked
 11988   017336  6B80               	clrf	_line_buf& (0+255),b
 11989   017338                     
 11990                           ; BSR set to: 10
 11991                           ;../src/w65_main.c: 237:  arg[0] = &line_buf[0];
 11992   017338  0E80               	movlw	low _line_buf
 11993   01733A  0107               	movlb	7	; () banked
 11994   01733C  6F9E               	movwf	_arg& (0+255),b
 11995   01733E  0E0A               	movlw	high _line_buf
 11996   017340  6F9F               	movwf	(_arg+1)& (0+255),b
 11997   017342                     
 11998                           ; BSR set to: 7
 11999                           ;../src/w65_main.c: 238:  scan_files();
 12000   017342  EC3A  F0CC         	call	_scan_files	;wreg free
 12001   017346                     l1111:
 12002                           
 12003                           ;../src/w65_main.c: 241:   buf = (char *)&tmp_buf[0][0];
 12004   017346  0EF8               	movlw	low _tmp_buf
 12005   017348  0107               	movlb	7	; () banked
 12006   01734A  6F9A               	movwf	main@buf& (0+255),b
 12007   01734C  0E13               	movlw	high _tmp_buf
 12008   01734E  6F9B               	movwf	(main@buf+1)& (0+255),b
 12009   017350                     
 12010                           ; BSR set to: 7
 12011                           ;../src/w65_main.c: 242:   f_getcwd(buf, 256);
 12012   017350  C79A  F6AF         	movff	main@buf,f_getcwd@buff
 12013   017354  C79B  F6B0         	movff	main@buf+1,f_getcwd@buff+1
 12014   017358  0E01               	movlw	1
 12015   01735A  0106               	movlb	6	; () banked
 12016   01735C  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 12017   01735E  0E00               	movlw	0
 12018   017360  6FB1               	movwf	f_getcwd@len& (0+255),b
 12019   017362  EC93  F0A7         	call	_f_getcwd	;wreg free
 12020   017366                     
 12021                           ;../src/w65_main.c: 243:   printf("%s> ", buf);
 12022   017366  0EA3               	movlw	low STR_74
 12023   017368  0105               	movlb	5	; () banked
 12024   01736A  6FAD               	movwf	printf@fmt& (0+255),b
 12025   01736C  0EFF               	movlw	high STR_74
 12026   01736E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12027   017370  C79A  F5AF         	movff	main@buf,?_printf+2
 12028   017374  C79B  F5B0         	movff	main@buf+1,?_printf+3
 12029   017378  ECDA  F0FF         	call	_printf	;wreg free
 12030   01737C                     
 12031                           ;../src/w65_main.c: 244:   for(c = 0; c < 5; c++) arg[c] = 0;
 12032   01737C  0E00               	movlw	0
 12033   01737E  0107               	movlb	7	; () banked
 12034   017380  6F9D               	movwf	(main@c+1)& (0+255),b
 12035   017382  0E00               	movlw	0
 12036   017384  6F9C               	movwf	main@c& (0+255),b
 12037   017386                     l25605:
 12038                           
 12039                           ; BSR set to: 7
 12040   017386  90D8               	bcf	status,0,c
 12041   017388  359C               	rlcf	main@c& (0+255),w,b
 12042   01738A  6ED9               	movwf	fsr2l,c
 12043   01738C  359D               	rlcf	(main@c+1)& (0+255),w,b
 12044   01738E  6EDA               	movwf	fsr2h,c
 12045   017390  0E9E               	movlw	low _arg
 12046   017392  26D9               	addwf	fsr2l,f,c
 12047   017394  0E07               	movlw	high _arg
 12048   017396  22DA               	addwfc	fsr2h,f,c
 12049   017398  6ADE               	clrf	postinc2,c
 12050   01739A  6ADD               	clrf	postdec2,c
 12051   01739C                     
 12052                           ; BSR set to: 7
 12053   01739C  4B9C               	infsnz	main@c& (0+255),f,b
 12054   01739E  2B9D               	incf	(main@c+1)& (0+255),f,b
 12055   0173A0                     
 12056                           ; BSR set to: 7
 12057   0173A0  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 12058   0173A2  EFDC  F0B9         	goto	u35531
 12059   0173A6  519D               	movf	(main@c+1)& (0+255),w,b
 12060   0173A8  E109               	bnz	u35530
 12061   0173AA  0E05               	movlw	5
 12062   0173AC  5D9C               	subwf	main@c& (0+255),w,b
 12063   0173AE  A0D8               	btfss	status,0,c
 12064   0173B0  EFDC  F0B9         	goto	u35531
 12065   0173B4  EFDE  F0B9         	goto	u35530
 12066   0173B8                     u35531:
 12067   0173B8  EFC3  F0B9         	goto	l25605
 12068   0173BC                     u35530:
 12069   0173BC                     
 12070                           ; BSR set to: 7
 12071                           ;../src/w65_main.c: 246:   if (!get_line(&line_buf[0], 81)) continue;
 12072   0173BC  0E80               	movlw	low _line_buf
 12073   0173BE  0105               	movlb	5	; () banked
 12074   0173C0  6FBD               	movwf	get_line@s& (0+255),b
 12075   0173C2  0E0A               	movlw	high _line_buf
 12076   0173C4  6FBE               	movwf	(get_line@s+1)& (0+255),b
 12077   0173C6  0E00               	movlw	0
 12078   0173C8  6FC0               	movwf	(get_line@length+1)& (0+255),b
 12079   0173CA  0E51               	movlw	81
 12080   0173CC  6FBF               	movwf	get_line@length& (0+255),b
 12081   0173CE  EC11  F0E7         	call	_get_line	;wreg free
 12082   0173D2  0105               	movlb	5	; () banked
 12083   0173D4  51BD               	movf	?_get_line& (0+255),w,b
 12084   0173D6  11BE               	iorwf	(?_get_line+1)& (0+255),w,b
 12085   0173D8  A4D8               	btfss	status,2,c
 12086   0173DA  EFF1  F0B9         	goto	u35541
 12087   0173DE  EFF3  F0B9         	goto	u35540
 12088   0173E2                     u35541:
 12089   0173E2  EFF5  F0B9         	goto	l25615
 12090   0173E6                     u35540:
 12091   0173E6  EFA3  F0B9         	goto	l1111
 12092   0173EA                     l25615:
 12093                           
 12094                           ; BSR set to: 5
 12095                           ;../src/w65_main.c: 248:   for( c=0; c < 14; c++ ) {
 12096   0173EA  0E00               	movlw	0
 12097   0173EC  0107               	movlb	7	; () banked
 12098   0173EE  6F9D               	movwf	(main@c+1)& (0+255),b
 12099   0173F0  0E00               	movlw	0
 12100   0173F2  6F9C               	movwf	main@c& (0+255),b
 12101   0173F4                     l25621:
 12102                           
 12103                           ; BSR set to: 7
 12104                           ;../src/w65_main.c: 249:    if ((res = strstr(&line_buf[0], cmd[c].cmd_name ))) {
 12105   0173F4  0E80               	movlw	low _line_buf
 12106   0173F6  6E0B               	movwf	strstr@h^(0+1280),c
 12107   0173F8  0E0A               	movlw	high _line_buf
 12108   0173FA  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 12109   0173FC  0E05               	movlw	5
 12110   0173FE  039C               	mulwf	main@c& (0+255),b
 12111   017400  C4F3 F791          	movff	prodl,??_main
 12112   017404  C4F4 F792          	movff	prodh,??_main+1
 12113   017408  039D               	mulwf	(main@c+1)& (0+255),b
 12114   01740A  50F3               	movf	prodl,w,c
 12115   01740C  2792               	addwf	(??_main+1)& (0+255),f,b
 12116   01740E  0E00               	movlw	low _cmd
 12117   017410  2591               	addwf	??_main& (0+255),w,b
 12118   017412  6ED9               	movwf	fsr2l,c
 12119   017414  0E09               	movlw	high _cmd
 12120   017416  2192               	addwfc	(??_main+1)& (0+255),w,b
 12121   017418  6EDA               	movwf	fsr2h,c
 12122   01741A  C4DE F50D          	movff	postinc2,strstr@n
 12123   01741E  C4DD F50E          	movff	postdec2,strstr@n+1
 12124   017422  ECCF  F0EE         	call	_strstr	;wreg free
 12125   017426  C50B  F797         	movff	?_strstr,main@res
 12126   01742A  C50C  F798         	movff	?_strstr+1,main@res+1
 12127   01742E  0107               	movlb	7	; () banked
 12128   017430  5197               	movf	main@res& (0+255),w,b
 12129   017432  1198               	iorwf	(main@res+1)& (0+255),w,b
 12130   017434  B4D8               	btfsc	status,2,c
 12131   017436  EF1F  F0BA         	goto	u35551
 12132   01743A  EF21  F0BA         	goto	u35550
 12133   01743E                     u35551:
 12134   01743E  EF45  F0BA         	goto	l25627
 12135   017442                     u35550:
 12136   017442                     
 12137                           ; BSR set to: 7
 12138                           ;../src/w65_main.c: 250:     buf = (char *)(res+strlen(cmd[c].cmd_name));
 12139   017442  0E05               	movlw	5
 12140   017444  039C               	mulwf	main@c& (0+255),b
 12141   017446  C4F3 F791          	movff	prodl,??_main
 12142   01744A  C4F4 F792          	movff	prodh,??_main+1
 12143   01744E  039D               	mulwf	(main@c+1)& (0+255),b
 12144   017450  50F3               	movf	prodl,w,c
 12145   017452  2792               	addwf	(??_main+1)& (0+255),f,b
 12146   017454  0E00               	movlw	low _cmd
 12147   017456  2591               	addwf	??_main& (0+255),w,b
 12148   017458  6ED9               	movwf	fsr2l,c
 12149   01745A  0E09               	movlw	high _cmd
 12150   01745C  2192               	addwfc	(??_main+1)& (0+255),w,b
 12151   01745E  6EDA               	movwf	fsr2h,c
 12152   017460  C4DE F504          	movff	postinc2,strlen@s
 12153   017464  C4DD F505          	movff	postdec2,strlen@s+1
 12154   017468  ECB0  F0FC         	call	_strlen	;wreg free
 12155   01746C  5004               	movf	?_strlen^(0+1280),w,c
 12156   01746E  0107               	movlb	7	; () banked
 12157   017470  2597               	addwf	main@res& (0+255),w,b
 12158   017472  6F9A               	movwf	main@buf& (0+255),b
 12159   017474  5005               	movf	(?_strlen+1)^(0+1280),w,c
 12160   017476  2198               	addwfc	(main@res+1)& (0+255),w,b
 12161   017478  6F9B               	movwf	(main@buf+1)& (0+255),b
 12162   01747A                     
 12163                           ; BSR set to: 7
 12164                           ;../src/w65_main.c: 251:     set_arg(buf);
 12165   01747A  C79A  F504         	movff	main@buf,set_arg@buf
 12166   01747E  C79B  F505         	movff	main@buf+1,set_arg@buf+1
 12167   017482  EC05  F0D7         	call	_set_arg	;wreg free
 12168                           
 12169                           ;../src/w65_main.c: 252:     break;
 12170   017486  EF55  F0BA         	goto	l25631
 12171   01748A                     l25627:
 12172                           
 12173                           ; BSR set to: 7
 12174                           ;../src/w65_main.c: 254:   }
 12175   01748A  4B9C               	infsnz	main@c& (0+255),f,b
 12176   01748C  2B9D               	incf	(main@c+1)& (0+255),f,b
 12177   01748E                     
 12178                           ; BSR set to: 7
 12179   01748E  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 12180   017490  EF53  F0BA         	goto	u35561
 12181   017494  519D               	movf	(main@c+1)& (0+255),w,b
 12182   017496  E109               	bnz	u35560
 12183   017498  0E0E               	movlw	14
 12184   01749A  5D9C               	subwf	main@c& (0+255),w,b
 12185   01749C  A0D8               	btfss	status,0,c
 12186   01749E  EF53  F0BA         	goto	u35561
 12187   0174A2  EF55  F0BA         	goto	u35560
 12188   0174A6                     u35561:
 12189   0174A6  EFFA  F0B9         	goto	l25621
 12190   0174AA                     u35560:
 12191   0174AA                     l25631:
 12192                           
 12193                           ;../src/w65_main.c: 256:   if ( c == 14 ) set_arg(&line_buf[0]);
 12194   0174AA  0E0E               	movlw	14
 12195   0174AC  0107               	movlb	7	; () banked
 12196   0174AE  199C               	xorwf	main@c& (0+255),w,b
 12197   0174B0  119D               	iorwf	(main@c+1)& (0+255),w,b
 12198   0174B2  A4D8               	btfss	status,2,c
 12199   0174B4  EF5E  F0BA         	goto	u35571
 12200   0174B8  EF60  F0BA         	goto	u35570
 12201   0174BC                     u35571:
 12202   0174BC  EF66  F0BA         	goto	l25635
 12203   0174C0                     u35570:
 12204   0174C0                     
 12205                           ; BSR set to: 7
 12206   0174C0  0E80               	movlw	low _line_buf
 12207   0174C2  6E04               	movwf	set_arg@buf^(0+1280),c
 12208   0174C4  0E0A               	movlw	high _line_buf
 12209   0174C6  6E05               	movwf	(set_arg@buf+1)^(0+1280),c
 12210   0174C8  EC05  F0D7         	call	_set_arg	;wreg free
 12211   0174CC                     l25635:
 12212                           
 12213                           ;../src/w65_main.c: 257:   rs = (*cmd[c].func)();
 12214   0174CC  0E05               	movlw	5
 12215   0174CE  0107               	movlb	7	; () banked
 12216   0174D0  039C               	mulwf	main@c& (0+255),b
 12217   0174D2  C4F3 F791          	movff	prodl,??_main
 12218   0174D6  C4F4 F792          	movff	prodh,??_main+1
 12219   0174DA  039D               	mulwf	(main@c+1)& (0+255),b
 12220   0174DC  50F3               	movf	prodl,w,c
 12221   0174DE  2792               	addwf	(??_main+1)& (0+255),f,b
 12222   0174E0  0E02               	movlw	low (_cmd+2)
 12223   0174E2  2591               	addwf	??_main& (0+255),w,b
 12224   0174E4  6ED9               	movwf	fsr2l,c
 12225   0174E6  0E09               	movlw	high (_cmd+2)
 12226   0174E8  2192               	addwfc	(??_main+1)& (0+255),w,b
 12227   0174EA  6EDA               	movwf	fsr2h,c
 12228   0174EC  D802               	call	u35588
 12229   0174EE  EF83  F0BA         	goto	u35589
 12230   0174F2                     u35588:
 12231   0174F2  0005               	push	
 12232   0174F4  6EFA               	movwf	pclath,c
 12233   0174F6  50DE               	movf	postinc2,w,c
 12234   0174F8  6EFD               	movwf	tosl,c
 12235   0174FA  50DE               	movf	postinc2,w,c
 12236   0174FC  6EFE               	movwf	tosh,c
 12237   0174FE  50DE               	movf	postinc2,w,c
 12238   017500  6EFF               	movwf	tosu,c
 12239   017502  50FA               	movf	pclath,w,c
 12240   017504  0012               	return		;indir
 12241   017506                     u35589:
 12242   017506  0107               	movlb	7	; () banked
 12243   017508  6F99               	movwf	main@rs& (0+255),b
 12244   01750A                     
 12245                           ; BSR set to: 7
 12246                           ;../src/w65_main.c: 259:   if( rs == (FRESULT)-2 ) printf("\r\nAssert NMI interrupt.\r\n
      +                          ");
 12247   01750A  0EFE               	movlw	254
 12248   01750C  1999               	xorwf	main@rs& (0+255),w,b
 12249   01750E  A4D8               	btfss	status,2,c
 12250   017510  EF8C  F0BA         	goto	u35591
 12251   017514  EF8E  F0BA         	goto	u35590
 12252   017518                     u35591:
 12253   017518  EF97  F0BA         	goto	l25641
 12254   01751C                     u35590:
 12255   01751C                     
 12256                           ; BSR set to: 7
 12257   01751C  0EEE               	movlw	low STR_75
 12258   01751E  0105               	movlb	5	; () banked
 12259   017520  6FAD               	movwf	printf@fmt& (0+255),b
 12260   017522  0EF9               	movlw	high STR_75
 12261   017524  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12262   017526  ECDA  F0FF         	call	_printf	;wreg free
 12263   01752A  EFA3  F0B9         	goto	l1111
 12264   01752E                     l25641:
 12265                           
 12266                           ; BSR set to: 7
 12267   01752E  5199               	movf	main@rs& (0+255),w,b
 12268   017530  B4D8               	btfsc	status,2,c
 12269   017532  EF9D  F0BA         	goto	u35601
 12270   017536  EF9F  F0BA         	goto	u35600
 12271   01753A                     u35601:
 12272   01753A  EFA3  F0B9         	goto	l1111
 12273   01753E                     u35600:
 12274   01753E                     
 12275                           ; BSR set to: 7
 12276   01753E  0EF2               	movlw	low STR_76
 12277   017540  0105               	movlb	5	; () banked
 12278   017542  6FAD               	movwf	printf@fmt& (0+255),b
 12279   017544  0EF5               	movlw	high STR_76
 12280   017546  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12281   017548  ECDA  F0FF         	call	_printf	;wreg free
 12282   01754C  EFA3  F0B9         	goto	l1111
 12283   017550  EF81  F000         	goto	start
 12284   017554                     __end_of_main:
 12285                           	callstack 0
 12286                           
 12287 ;; *************** function _boot_file *****************
 12288 ;; Defined at:
 12289 ;;		line 639 in file "../src/w65_main.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;		None
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  cnt             2    0        unsigned int 
 12294 ;;  rs              1   24[BANK7 ] enum E17409
 12295 ;;  m               1   23[BANK7 ] unsigned char 
 12296 ;;  flag            1   22[BANK7 ] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      enum E17409
 12299 ;; Registers used:
 12300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;Total ram usage:        3 bytes
 12311 ;; Hardware stack levels used: 1
 12312 ;; Hardware stack levels required when called: 25
 12313 ;; This function calls:
 12314 ;;		_drive_cpu
 12315 ;;		_load_program
 12316 ;;		_printf
 12317 ;;		_prt_reload
 12318 ;;		_sprintf
 12319 ;;		_start_cpu
 12320 ;;		_strstr
 12321 ;;		_write_sram
 12322 ;; This function is called by:
 12323 ;;		_main
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text1
 12328   017C6E                     __ptext1:
 12329                           	callstack 0
 12330   017C6E                     _boot_file:
 12331                           	callstack 101
 12332   017C6E                     
 12333                           ;../src/w65_main.c: 641:  FRESULT rs;;../src/w65_main.c: 642:  uint8_t flag, m;;../src/w
      +                          65_main.c: 643:  UINT cnt;;../src/w65_main.c: 645:  if ( *arg[1] == '<' ) {
 12334   017C6E  C7A0  F4F6         	movff	_arg+2,tblptrl
 12335   017C72  C7A1  F4F7         	movff	_arg+3,tblptrh
 12336   017C76  0E00               	movlw	low (__mediumconst shr (0+16))
 12337   017C78  6EF8               	movwf	tblptru,c
 12338   017C7A  0E25               	movlw	(high __ramtop+-1)
 12339   017C7C  64F7               	cpfsgt	tblptrh,c
 12340   017C7E  D003               	bra	u34917
 12341   017C80  0008               	tblrd		*
 12342   017C82  50F5               	movf	tablat,w,c
 12343   017C84  D005               	bra	u34910
 12344   017C86                     u34917:
 12345   017C86  C4F6 F4E9          	movff	tblptrl,fsr0l
 12346   017C8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 12347   017C8E  50EF               	movf	indf0,w,c
 12348   017C90                     u34910:
 12349   017C90  0A3C               	xorlw	60
 12350   017C92  A4D8               	btfss	status,2,c
 12351   017C94  EF4E  F0BE         	goto	u34921
 12352   017C98  EF50  F0BE         	goto	u34920
 12353   017C9C                     u34921:
 12354   017C9C  EF64  F0BE         	goto	l25047
 12355   017CA0                     u34920:
 12356   017CA0                     
 12357                           ;../src/w65_main.c: 646:   sprintf(&fin_name[0], "%s", arg[2]);
 12358   017CA0  0EC2               	movlw	low _fin_name
 12359   017CA2  0105               	movlb	5	; () banked
 12360   017CA4  6FAD               	movwf	sprintf@s& (0+255),b
 12361   017CA6  0E08               	movlw	high _fin_name
 12362   017CA8  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 12363   017CAA  0EF9               	movlw	low STR_81
 12364   017CAC  6FAF               	movwf	sprintf@fmt& (0+255),b
 12365   017CAE  0EFF               	movlw	high STR_81
 12366   017CB0  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 12367   017CB2  C7A2  F5B1         	movff	_arg+4,?_sprintf+4
 12368   017CB6  C7A3  F5B2         	movff	_arg+5,?_sprintf+5
 12369   017CBA  ECD8  F0FC         	call	_sprintf	;wreg free
 12370   017CBE                     
 12371                           ;../src/w65_main.c: 647:   fin_cnt = 0xffff;
 12372   017CBE  0107               	movlb	7	; () banked
 12373   017CC0  69E3               	setf	_fin_cnt& (0+255),b
 12374   017CC2  69E4               	setf	(_fin_cnt+1)& (0+255),b
 12375   017CC4                     
 12376                           ; BSR set to: 7
 12377                           ;../src/w65_main.c: 648:   cin_no = 1;
 12378   017CC4  0E01               	movlw	1
 12379   017CC6  6FCA               	movwf	_cin_no& (0+255),b
 12380   017CC8                     l25047:
 12381                           
 12382                           ;../src/w65_main.c: 650:  if ( strstr((const char *)arg[0], mon02+1) ) m = 0;
 12383   017CC8  C79E  F50B         	movff	_arg,strstr@h
 12384   017CCC  C79F  F50C         	movff	_arg+1,strstr@h+1
 12385   017CD0  0ED9               	movlw	low (STR_50+1)
 12386   017CD2  6E0D               	movwf	strstr@n^(0+1280),c
 12387   017CD4  0EFE               	movlw	high (STR_50+1)
 12388   017CD6  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 12389   017CD8  ECCF  F0EE         	call	_strstr	;wreg free
 12390   017CDC  500B               	movf	?_strstr^(0+1280),w,c
 12391   017CDE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 12392   017CE0  B4D8               	btfsc	status,2,c
 12393   017CE2  EF75  F0BE         	goto	u34931
 12394   017CE6  EF77  F0BE         	goto	u34930
 12395   017CEA                     u34931:
 12396   017CEA  EF7B  F0BE         	goto	l25051
 12397   017CEE                     u34930:
 12398   017CEE  0107               	movlb	7	; () banked
 12399   017CF0  6B17               	clrf	boot_file@m& (0+255),b
 12400   017CF2  EF96  F0BE         	goto	l25057
 12401   017CF6                     l25051:
 12402   017CF6  C79E  F50B         	movff	_arg,strstr@h
 12403   017CFA  C79F  F50C         	movff	_arg+1,strstr@h+1
 12404   017CFE  0EE4               	movlw	low (STR_51+1)
 12405   017D00  6E0D               	movwf	strstr@n^(0+1280),c
 12406   017D02  0EFE               	movlw	high (STR_51+1)
 12407   017D04  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 12408   017D06  ECCF  F0EE         	call	_strstr	;wreg free
 12409   017D0A  500B               	movf	?_strstr^(0+1280),w,c
 12410   017D0C  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 12411   017D0E  B4D8               	btfsc	status,2,c
 12412   017D10  EF8C  F0BE         	goto	u34941
 12413   017D14  EF8E  F0BE         	goto	u34940
 12414   017D18                     u34941:
 12415   017D18  EF93  F0BE         	goto	l25055
 12416   017D1C                     u34940:
 12417   017D1C  0E01               	movlw	1
 12418   017D1E  0107               	movlb	7	; () banked
 12419   017D20  6F17               	movwf	boot_file@m& (0+255),b
 12420   017D22  EF96  F0BE         	goto	l25057
 12421   017D26                     l25055:
 12422   017D26  0E02               	movlw	2
 12423   017D28  0107               	movlb	7	; () banked
 12424   017D2A  6F17               	movwf	boot_file@m& (0+255),b
 12425   017D2C                     l25057:
 12426                           
 12427                           ; BSR set to: 7
 12428                           ;../src/w65_main.c: 653:  if ( m != 2) {
 12429   017D2C  0E02               	movlw	2
 12430   017D2E  1917               	xorwf	boot_file@m& (0+255),w,b
 12431   017D30  B4D8               	btfsc	status,2,c
 12432   017D32  EF9D  F0BE         	goto	u34951
 12433   017D36  EF9F  F0BE         	goto	u34950
 12434   017D3A                     u34951:
 12435   017D3A  EFD5  F0BE         	goto	l1274
 12436   017D3E                     u34950:
 12437   017D3E                     
 12438                           ; BSR set to: 7
 12439                           ;../src/w65_main.c: 654:   mon = m;
 12440   017D3E  C717  F7C8         	movff	boot_file@m,_mon
 12441   017D42                     
 12442                           ; BSR set to: 7
 12443                           ;../src/w65_main.c: 655:   prt_reload();
 12444   017D42  ECEB  F000         	call	_prt_reload	;wreg free
 12445   017D46                     
 12446                           ;../src/w65_main.c: 656:   binv.sw = 0;
 12447   017D46  0108               	movlb	8	; () banked
 12448   017D48  6B78               	clrf	_binv& (0+255),b
 12449                           
 12450                           ;../src/w65_main.c: 657:   rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12451   017D4A  C79E  F700         	movff	_arg,load_program@fname
 12452   017D4E  C79F  F701         	movff	_arg+1,load_program@fname+1
 12453   017D52  EC86  F0AE         	call	_load_program	;wreg free
 12454   017D56  0107               	movlb	7	; () banked
 12455   017D58  5100               	movf	?_load_program& (0+255),w,b
 12456   017D5A  6F18               	movwf	boot_file@rs& (0+255),b
 12457   017D5C                     
 12458                           ; BSR set to: 7
 12459                           ;../src/w65_main.c: 658:   if ( rs ) return 0;
 12460   017D5C  5118               	movf	boot_file@rs& (0+255),w,b
 12461   017D5E  B4D8               	btfsc	status,2,c
 12462   017D60  EFB4  F0BE         	goto	u34961
 12463   017D64  EFB6  F0BE         	goto	u34960
 12464   017D68                     u34961:
 12465   017D68  EFB9  F0BE         	goto	l25071
 12466   017D6C                     u34960:
 12467   017D6C                     l25067:
 12468                           
 12469                           ; BSR set to: 7
 12470   017D6C  0E00               	movlw	0
 12471   017D6E  EFDE  F0BF         	goto	l1276
 12472   017D72                     l25071:
 12473                           
 12474                           ; BSR set to: 7
 12475                           ;../src/w65_main.c: 661:   write_sram(0, &cpu_flg, 1);
 12476   017D72  0E00               	movlw	0
 12477   017D74  6E04               	movwf	write_sram@addr^(0+1280),c
 12478   017D76  0E00               	movlw	0
 12479   017D78  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12480   017D7A  0E00               	movlw	0
 12481   017D7C  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12482   017D7E  0E00               	movlw	0
 12483   017D80  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12484   017D82  0EE5               	movlw	low _cpu_flg
 12485   017D84  6E08               	movwf	write_sram@buf^(0+1280),c
 12486   017D86  0E07               	movlw	high _cpu_flg
 12487   017D88  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12488   017D8A  0E00               	movlw	0
 12489   017D8C  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12490   017D8E  0E01               	movlw	1
 12491   017D90  6E0A               	movwf	write_sram@len^(0+1280),c
 12492   017D92  EC9F  F0E8         	call	_write_sram	;wreg free
 12493   017D96                     
 12494                           ;../src/w65_main.c: 663:   start_cpu();
 12495   017D96  ECF8  F0FE         	call	_start_cpu	;wreg free
 12496   017D9A                     
 12497                           ;../src/w65_main.c: 664:   rs = drive_cpu();
 12498   017D9A  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12499   017D9E  0107               	movlb	7	; () banked
 12500   017DA0  6F18               	movwf	boot_file@rs& (0+255),b
 12501   017DA2                     l25077:
 12502                           
 12503                           ;../src/w65_main.c: 665:   return rs;
 12504   017DA2  0107               	movlb	7	; () banked
 12505   017DA4  5118               	movf	boot_file@rs& (0+255),w,b
 12506   017DA6  EFDE  F0BF         	goto	l1276
 12507   017DAA                     l1274:
 12508                           
 12509                           ; BSR set to: 7
 12510                           ;../src/w65_main.c: 668:  flag = 0;
 12511   017DAA  6B16               	clrf	boot_file@flag& (0+255),b
 12512   017DAC                     
 12513                           ; BSR set to: 7
 12514                           ;../src/w65_main.c: 669:  printf("Flie(%s) loading...\r\n", arg[0]);
 12515   017DAC  0ED8               	movlw	low STR_108
 12516   017DAE  0105               	movlb	5	; () banked
 12517   017DB0  6FAD               	movwf	printf@fmt& (0+255),b
 12518   017DB2  0EFB               	movlw	high STR_108
 12519   017DB4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12520   017DB6  C79E  F5AF         	movff	_arg,?_printf+2
 12521   017DBA  C79F  F5B0         	movff	_arg+1,?_printf+3
 12522   017DBE  ECDA  F0FF         	call	_printf	;wreg free
 12523                           
 12524                           ;../src/w65_main.c: 671:  rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12525   017DC2  C79E  F700         	movff	_arg,load_program@fname
 12526   017DC6  C79F  F701         	movff	_arg+1,load_program@fname+1
 12527   017DCA  EC86  F0AE         	call	_load_program	;wreg free
 12528   017DCE  0107               	movlb	7	; () banked
 12529   017DD0  5100               	movf	?_load_program& (0+255),w,b
 12530   017DD2  6F18               	movwf	boot_file@rs& (0+255),b
 12531   017DD4                     
 12532                           ; BSR set to: 7
 12533                           ;../src/w65_main.c: 672:  if ( rs ) return 0;
 12534   017DD4  5118               	movf	boot_file@rs& (0+255),w,b
 12535   017DD6  B4D8               	btfsc	status,2,c
 12536   017DD8  EFF0  F0BE         	goto	u34971
 12537   017DDC  EFF2  F0BE         	goto	u34970
 12538   017DE0                     u34971:
 12539   017DE0  EFF4  F0BE         	goto	l25089
 12540   017DE4                     u34970:
 12541   017DE4  EFB6  F0BE         	goto	l25067
 12542   017DE8                     l25089:
 12543                           
 12544                           ; BSR set to: 7
 12545                           ;../src/w65_main.c: 674:  if ( binv.sw ) {
 12546   017DE8  0108               	movlb	8	; () banked
 12547   017DEA  5178               	movf	_binv& (0+255),w,b
 12548   017DEC  B4D8               	btfsc	status,2,c
 12549   017DEE  EFFB  F0BE         	goto	u34981
 12550   017DF2  EFFD  F0BE         	goto	u34980
 12551   017DF6                     u34981:
 12552   017DF6  EF80  F0BF         	goto	l1278
 12553   017DFA                     u34980:
 12554   017DFA                     
 12555                           ; BSR set to: 8
 12556                           ;../src/w65_main.c: 675:   if ( cpu_flg ) {
 12557   017DFA  0107               	movlb	7	; () banked
 12558   017DFC  51E5               	movf	_cpu_flg& (0+255),w,b
 12559   017DFE  B4D8               	btfsc	status,2,c
 12560   017E00  EF04  F0BF         	goto	u34991
 12561   017E04  EF06  F0BF         	goto	u34990
 12562   017E08                     u34991:
 12563   017E08  EF65  F0BF         	goto	l1279
 12564   017E0C                     u34990:
 12565   017E0C                     
 12566                           ; BSR set to: 7
 12567                           ;../src/w65_main.c: 676:    if ( mon ) {
 12568   017E0C  51C8               	movf	_mon& (0+255),w,b
 12569   017E0E  B4D8               	btfsc	status,2,c
 12570   017E10  EF0C  F0BF         	goto	u35001
 12571   017E14  EF0E  F0BF         	goto	u35000
 12572   017E18                     u35001:
 12573   017E18  EF2C  F0BF         	goto	l25105
 12574   017E1C                     u35000:
 12575   017E1C                     
 12576                           ; BSR set to: 7
 12577                           ;../src/w65_main.c: 677:     if ( !binv.sw_816 ) {
 12578   017E1C  0108               	movlb	8	; () banked
 12579   017E1E  5183               	movf	(_binv+11)& (0+255),w,b
 12580   017E20  A4D8               	btfss	status,2,c
 12581   017E22  EF15  F0BF         	goto	u35011
 12582   017E26  EF17  F0BF         	goto	u35010
 12583   017E2A                     u35011:
 12584   017E2A  EF49  F0BF         	goto	l25115
 12585   017E2E                     u35010:
 12586   017E2E                     
 12587                           ; BSR set to: 8
 12588                           ;../src/w65_main.c: 678:      arg[0] = mon02;
 12589   017E2E  0ED8               	movlw	low STR_50
 12590   017E30  0107               	movlb	7	; () banked
 12591   017E32  6F9E               	movwf	_arg& (0+255),b
 12592   017E34  0EFE               	movlw	high STR_50
 12593   017E36  6F9F               	movwf	(_arg+1)& (0+255),b
 12594   017E38                     
 12595                           ; BSR set to: 7
 12596                           ;../src/w65_main.c: 679:      mon = 0;
 12597   017E38  6BC8               	clrf	_mon& (0+255),b
 12598   017E3A                     
 12599                           ; BSR set to: 7
 12600                           ;../src/w65_main.c: 680:      flag = 1;
 12601   017E3A  0E01               	movlw	1
 12602   017E3C  6F16               	movwf	boot_file@flag& (0+255),b
 12603   017E3E                     
 12604                           ; BSR set to: 7
 12605                           ;../src/w65_main.c: 681:      printf("Reload %s for Emulation Mode...\r\n", arg[0]);
 12606   017E3E  0EAF               	movlw	low STR_109
 12607   017E40  0105               	movlb	5	; () banked
 12608   017E42  6FAD               	movwf	printf@fmt& (0+255),b
 12609   017E44  0EF7               	movlw	high STR_109
 12610   017E46  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12611   017E48  C79E  F5AF         	movff	_arg,?_printf+2
 12612   017E4C  C79F  F5B0         	movff	_arg+1,?_printf+3
 12613   017E50  ECDA  F0FF         	call	_printf	;wreg free
 12614   017E54  EF49  F0BF         	goto	l25115
 12615   017E58                     l25105:
 12616                           
 12617                           ; BSR set to: 7
 12618                           ;../src/w65_main.c: 685:     if ( binv.sw_816 ) {
 12619   017E58  0108               	movlb	8	; () banked
 12620   017E5A  5183               	movf	(_binv+11)& (0+255),w,b
 12621   017E5C  B4D8               	btfsc	status,2,c
 12622   017E5E  EF33  F0BF         	goto	u35021
 12623   017E62  EF35  F0BF         	goto	u35020
 12624   017E66                     u35021:
 12625   017E66  EF49  F0BF         	goto	l25115
 12626   017E6A                     u35020:
 12627   017E6A                     
 12628                           ; BSR set to: 8
 12629                           ;../src/w65_main.c: 686:      arg[0] = mon16;
 12630   017E6A  0EE3               	movlw	low STR_51
 12631   017E6C  0107               	movlb	7	; () banked
 12632   017E6E  6F9E               	movwf	_arg& (0+255),b
 12633   017E70  0EFE               	movlw	high STR_51
 12634   017E72  6F9F               	movwf	(_arg+1)& (0+255),b
 12635   017E74                     
 12636                           ; BSR set to: 7
 12637                           ;../src/w65_main.c: 687:      mon = 1;
 12638   017E74  0E01               	movlw	1
 12639   017E76  6FC8               	movwf	_mon& (0+255),b
 12640   017E78                     
 12641                           ; BSR set to: 7
 12642                           ;../src/w65_main.c: 688:      flag = 1;
 12643   017E78  0E01               	movlw	1
 12644   017E7A  6F16               	movwf	boot_file@flag& (0+255),b
 12645   017E7C                     
 12646                           ; BSR set to: 7
 12647                           ;../src/w65_main.c: 689:      printf("Reload %s for Native Mode...\r\n", arg[0]);
 12648   017E7C  0E97               	movlw	low STR_110
 12649   017E7E  0105               	movlb	5	; () banked
 12650   017E80  6FAD               	movwf	printf@fmt& (0+255),b
 12651   017E82  0EF8               	movlw	high STR_110
 12652   017E84  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12653   017E86  C79E  F5AF         	movff	_arg,?_printf+2
 12654   017E8A  C79F  F5B0         	movff	_arg+1,?_printf+3
 12655   017E8E  ECDA  F0FF         	call	_printf	;wreg free
 12656   017E92                     l25115:
 12657                           
 12658                           ;../src/w65_main.c: 692:    if ( flag ) {
 12659   017E92  0107               	movlb	7	; () banked
 12660   017E94  5116               	movf	boot_file@flag& (0+255),w,b
 12661   017E96  B4D8               	btfsc	status,2,c
 12662   017E98  EF50  F0BF         	goto	u35031
 12663   017E9C  EF52  F0BF         	goto	u35030
 12664   017EA0                     u35031:
 12665   017EA0  EF65  F0BF         	goto	l1279
 12666   017EA4                     u35030:
 12667   017EA4                     
 12668                           ; BSR set to: 7
 12669                           ;../src/w65_main.c: 693:     rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12670   017EA4  C79E  F700         	movff	_arg,load_program@fname
 12671   017EA8  C79F  F701         	movff	_arg+1,load_program@fname+1
 12672   017EAC  EC86  F0AE         	call	_load_program	;wreg free
 12673   017EB0  0107               	movlb	7	; () banked
 12674   017EB2  5100               	movf	?_load_program& (0+255),w,b
 12675   017EB4  6F18               	movwf	boot_file@rs& (0+255),b
 12676   017EB6                     
 12677                           ; BSR set to: 7
 12678                           ;../src/w65_main.c: 694:     if ( rs ) return 0;
 12679   017EB6  5118               	movf	boot_file@rs& (0+255),w,b
 12680   017EB8  B4D8               	btfsc	status,2,c
 12681   017EBA  EF61  F0BF         	goto	u35041
 12682   017EBE  EF63  F0BF         	goto	u35040
 12683   017EC2                     u35041:
 12684   017EC2  EF65  F0BF         	goto	l1279
 12685   017EC6                     u35040:
 12686   017EC6  EFB6  F0BE         	goto	l25067
 12687   017ECA                     l1279:
 12688                           
 12689                           ; BSR set to: 7
 12690                           ;../src/w65_main.c: 697:   binv.addr = binv.caddr;
 12691   017ECA  C87F  F879         	movff	_binv+7,_binv+1
 12692   017ECE  C880  F87A         	movff	_binv+8,_binv+2
 12693   017ED2                     
 12694                           ; BSR set to: 7
 12695                           ;../src/w65_main.c: 698:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 12696   017ED2  0E08               	movlw	8
 12697   017ED4  0108               	movlb	8	; () banked
 12698   017ED6  25B2               	addwf	(_fh+16)& (0+255),w,b
 12699   017ED8  6E04               	movwf	write_sram@addr^(0+1280),c
 12700   017EDA  0E00               	movlw	0
 12701   017EDC  21B3               	addwfc	(_fh+17)& (0+255),w,b
 12702   017EDE  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12703   017EE0  0E00               	movlw	0
 12704   017EE2  21B4               	addwfc	(_fh+18)& (0+255),w,b
 12705   017EE4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12706   017EE6  0E00               	movlw	0
 12707   017EE8  21B5               	addwfc	(_fh+19)& (0+255),w,b
 12708   017EEA  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12709   017EEC  0E78               	movlw	low _binv
 12710   017EEE  6E08               	movwf	write_sram@buf^(0+1280),c
 12711   017EF0  0E08               	movlw	high _binv
 12712   017EF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12713   017EF4  0E00               	movlw	0
 12714   017EF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12715   017EF8  0E07               	movlw	7
 12716   017EFA  6E0A               	movwf	write_sram@len^(0+1280),c
 12717   017EFC  EC9F  F0E8         	call	_write_sram	;wreg free
 12718   017F00                     l1278:
 12719                           
 12720                           ;../src/w65_main.c: 702:  write_sram(0, &cpu_flg, 1);
 12721   017F00  0E00               	movlw	0
 12722   017F02  6E04               	movwf	write_sram@addr^(0+1280),c
 12723   017F04  0E00               	movlw	0
 12724   017F06  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12725   017F08  0E00               	movlw	0
 12726   017F0A  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12727   017F0C  0E00               	movlw	0
 12728   017F0E  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12729   017F10  0EE5               	movlw	low _cpu_flg
 12730   017F12  6E08               	movwf	write_sram@buf^(0+1280),c
 12731   017F14  0E07               	movlw	high _cpu_flg
 12732   017F16  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12733   017F18  0E00               	movlw	0
 12734   017F1A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12735   017F1C  0E01               	movlw	1
 12736   017F1E  6E0A               	movwf	write_sram@len^(0+1280),c
 12737   017F20  EC9F  F0E8         	call	_write_sram	;wreg free
 12738   017F24                     
 12739                           ;../src/w65_main.c: 704:  start_cpu();
 12740   017F24  ECF8  F0FE         	call	_start_cpu	;wreg free
 12741   017F28                     
 12742                           ;../src/w65_main.c: 705:  rs = drive_cpu();
 12743   017F28  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12744   017F2C  0107               	movlb	7	; () banked
 12745   017F2E  6F18               	movwf	boot_file@rs& (0+255),b
 12746   017F30                     
 12747                           ; BSR set to: 7
 12748                           ;../src/w65_main.c: 706:  if ( !rs ) {
 12749   017F30  5118               	movf	boot_file@rs& (0+255),w,b
 12750   017F32  A4D8               	btfss	status,2,c
 12751   017F34  EF9E  F0BF         	goto	u35051
 12752   017F38  EFA0  F0BF         	goto	u35050
 12753   017F3C                     u35051:
 12754   017F3C  EFD1  F0BE         	goto	l25077
 12755   017F40                     u35050:
 12756   017F40                     
 12757                           ; BSR set to: 7
 12758                           ;../src/w65_main.c: 707:   if ( !fh.bios_sw ) {
 12759   017F40  0108               	movlb	8	; () banked
 12760   017F42  51C1               	movf	(_fh+31)& (0+255),w,b
 12761   017F44  A4D8               	btfss	status,2,c
 12762   017F46  EFA7  F0BF         	goto	u35061
 12763   017F4A  EFA9  F0BF         	goto	u35060
 12764   017F4E                     u35061:
 12765   017F4E  EFDA  F0BF         	goto	l25159
 12766   017F52                     u35060:
 12767   017F52                     
 12768                           ; BSR set to: 8
 12769                           ;../src/w65_main.c: 708:    if (cpu_flg) {
 12770   017F52  0107               	movlb	7	; () banked
 12771   017F54  51E5               	movf	_cpu_flg& (0+255),w,b
 12772   017F56  B4D8               	btfsc	status,2,c
 12773   017F58  EFB0  F0BF         	goto	u35071
 12774   017F5C  EFB2  F0BF         	goto	u35070
 12775   017F60                     u35071:
 12776   017F60  EFBA  F0BF         	goto	l25141
 12777   017F64                     u35070:
 12778   017F64                     
 12779                           ; BSR set to: 7
 12780                           ;../src/w65_main.c: 709:     arg[0] = mon16;
 12781   017F64  0EE3               	movlw	low STR_51
 12782   017F66  6F9E               	movwf	_arg& (0+255),b
 12783   017F68  0EFE               	movlw	high STR_51
 12784   017F6A  6F9F               	movwf	(_arg+1)& (0+255),b
 12785   017F6C                     
 12786                           ; BSR set to: 7
 12787                           ;../src/w65_main.c: 710:     mon = 1;
 12788   017F6C  0E01               	movlw	1
 12789   017F6E  6FC8               	movwf	_mon& (0+255),b
 12790                           
 12791                           ;../src/w65_main.c: 711:    }
 12792   017F70  EFBF  F0BF         	goto	l25145
 12793   017F74                     l25141:
 12794                           
 12795                           ; BSR set to: 7
 12796                           ;../src/w65_main.c: 713:     arg[0] = mon02;
 12797   017F74  0ED8               	movlw	low STR_50
 12798   017F76  6F9E               	movwf	_arg& (0+255),b
 12799   017F78  0EFE               	movlw	high STR_50
 12800   017F7A  6F9F               	movwf	(_arg+1)& (0+255),b
 12801   017F7C                     
 12802                           ; BSR set to: 7
 12803                           ;../src/w65_main.c: 714:     mon = 0;
 12804   017F7C  6BC8               	clrf	_mon& (0+255),b
 12805   017F7E                     l25145:
 12806                           
 12807                           ; BSR set to: 7
 12808                           ;../src/w65_main.c: 716:    prt_reload();
 12809   017F7E  ECEB  F000         	call	_prt_reload	;wreg free
 12810   017F82                     
 12811                           ;../src/w65_main.c: 717:    rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12812   017F82  C79E  F700         	movff	_arg,load_program@fname
 12813   017F86  C79F  F701         	movff	_arg+1,load_program@fname+1
 12814   017F8A  EC86  F0AE         	call	_load_program	;wreg free
 12815   017F8E  0107               	movlb	7	; () banked
 12816   017F90  5100               	movf	?_load_program& (0+255),w,b
 12817   017F92  6F18               	movwf	boot_file@rs& (0+255),b
 12818   017F94                     
 12819                           ; BSR set to: 7
 12820                           ;../src/w65_main.c: 718:    if ( rs ) return 0;
 12821   017F94  5118               	movf	boot_file@rs& (0+255),w,b
 12822   017F96  B4D8               	btfsc	status,2,c
 12823   017F98  EFD0  F0BF         	goto	u35081
 12824   017F9C  EFD2  F0BF         	goto	u35080
 12825   017FA0                     u35081:
 12826   017FA0  EFD4  F0BF         	goto	l25155
 12827   017FA4                     u35080:
 12828   017FA4  EFB6  F0BE         	goto	l25067
 12829   017FA8                     l25155:
 12830                           
 12831                           ; BSR set to: 7
 12832                           ;../src/w65_main.c: 719:    start_cpu();
 12833   017FA8  ECF8  F0FE         	call	_start_cpu	;wreg free
 12834   017FAC                     
 12835                           ;../src/w65_main.c: 720:    rs = drive_cpu();
 12836   017FAC  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12837   017FB0  0107               	movlb	7	; () banked
 12838   017FB2  6F18               	movwf	boot_file@rs& (0+255),b
 12839   017FB4                     l25159:
 12840                           
 12841                           ;../src/w65_main.c: 722:   binv.sw = 0;
 12842   017FB4  0108               	movlb	8	; () banked
 12843   017FB6  6B78               	clrf	_binv& (0+255),b
 12844   017FB8  EFD1  F0BE         	goto	l25077
 12845   017FBC                     l1276:
 12846                           
 12847                           ; BSR set to: 7
 12848   017FBC  0012               	return		;funcret
 12849   017FBE                     __end_of_boot_file:
 12850                           	callstack 0
 12851                           
 12852 ;; *************** function _print_com *****************
 12853 ;; Defined at:
 12854 ;;		line 758 in file "../src/w65_main.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      enum E17409
 12861 ;; Registers used:
 12862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 9
 12875 ;; This function calls:
 12876 ;;		_printf
 12877 ;; This function is called by:
 12878 ;;		_main
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text2
 12883   01E4D4                     __ptext2:
 12884                           	callstack 0
 12885   01E4D4                     _print_com:
 12886                           	callstack 117
 12887   01E4D4                     
 12888                           ;../src/w65_main.c: 760:  printf("\r\n<< MEZW65C_RAM Firmware Built-in command >>\r\n");
 12889   01E4D4  0E8C               	movlw	low STR_114
 12890   01E4D6  0105               	movlb	5	; () banked
 12891   01E4D8  6FAD               	movwf	printf@fmt& (0+255),b
 12892   01E4DA  0EF3               	movlw	high STR_114
 12893   01E4DC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12894   01E4DE  ECDA  F0FF         	call	_printf	;wreg free
 12895                           
 12896                           ;../src/w65_main.c: 761:  printf("  LS | DIR [file name | directory name\r\n");
 12897   01E4E2  0EA0               	movlw	low STR_115
 12898   01E4E4  0105               	movlb	5	; () banked
 12899   01E4E6  6FAD               	movwf	printf@fmt& (0+255),b
 12900   01E4E8  0EF5               	movlw	high STR_115
 12901   01E4EA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12902   01E4EC  ECDA  F0FF         	call	_printf	;wreg free
 12903                           
 12904                           ;../src/w65_main.c: 762:  printf("  CD [directory name]\n\r");
 12905   01E4F0  0E36               	movlw	low STR_116
 12906   01E4F2  0105               	movlb	5	; () banked
 12907   01E4F4  6FAD               	movwf	printf@fmt& (0+255),b
 12908   01E4F6  0EFB               	movlw	high STR_116
 12909   01E4F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12910   01E4FA  ECDA  F0FF         	call	_printf	;wreg free
 12911                           
 12912                           ;../src/w65_main.c: 763:  printf("  LOAD [L=load address(Hex)] file name\r\n");
 12913   01E4FE  0E77               	movlw	low STR_117
 12914   01E500  0105               	movlb	5	; () banked
 12915   01E502  6FAD               	movwf	printf@fmt& (0+255),b
 12916   01E504  0EF5               	movlw	high STR_117
 12917   01E506  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12918   01E508  ECDA  F0FF         	call	_printf	;wreg free
 12919                           
 12920                           ;../src/w65_main.c: 764:  printf("  MDUMP address(Hex)\r\n");
 12921   01E50C  0E93               	movlw	low STR_118
 12922   01E50E  0105               	movlb	5	; () banked
 12923   01E510  6FAD               	movwf	printf@fmt& (0+255),b
 12924   01E512  0EFB               	movlw	high STR_118
 12925   01E514  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12926   01E516  ECDA  F0FF         	call	_printf	;wreg free
 12927                           
 12928                           ;../src/w65_main.c: 765:  printf("  MONITOR [W]\r\n");
 12929   01E51A  0ED7               	movlw	low STR_119
 12930   01E51C  0105               	movlb	5	; () banked
 12931   01E51E  6FAD               	movwf	printf@fmt& (0+255),b
 12932   01E520  0EFD               	movlw	high STR_119
 12933   01E522  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12934   01E524  ECDA  F0FF         	call	_printf	;wreg free
 12935                           
 12936                           ;../src/w65_main.c: 766:  printf("  CSTART\r\n");
 12937   01E528  0EAC               	movlw	low STR_120
 12938   01E52A  0105               	movlb	5	; () banked
 12939   01E52C  6FAD               	movwf	printf@fmt& (0+255),b
 12940   01E52E  0EFE               	movlw	high STR_120
 12941   01E530  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12942   01E532  ECDA  F0FF         	call	_printf	;wreg free
 12943                           
 12944                           ;../src/w65_main.c: 767:  printf("  WSTART\r\n");
 12945   01E536  0EB7               	movlw	low STR_121
 12946   01E538  0105               	movlb	5	; () banked
 12947   01E53A  6FAD               	movwf	printf@fmt& (0+255),b
 12948   01E53C  0EFE               	movlw	high STR_121
 12949   01E53E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12950   01E540  ECDA  F0FF         	call	_printf	;wreg free
 12951                           
 12952                           ;../src/w65_main.c: 768:  printf("  RETI\r\n");
 12953   01E544  0E27               	movlw	low STR_122
 12954   01E546  0105               	movlb	5	; () banked
 12955   01E548  6FAD               	movwf	printf@fmt& (0+255),b
 12956   01E54A  0EFF               	movlw	high STR_122
 12957   01E54C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12958   01E54E  ECDA  F0FF         	call	_printf	;wreg free
 12959                           
 12960                           ;../src/w65_main.c: 769:  printf("  REG\r\n");
 12961   01E552  0E38               	movlw	low STR_123
 12962   01E554  0105               	movlb	5	; () banked
 12963   01E556  6FAD               	movwf	printf@fmt& (0+255),b
 12964   01E558  0EFF               	movlw	high STR_123
 12965   01E55A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12966   01E55C  ECDA  F0FF         	call	_printf	;wreg free
 12967                           
 12968                           ;../src/w65_main.c: 770:  printf("  SHOW file name\r\n");
 12969   01E560  0E22               	movlw	low STR_124
 12970   01E562  0105               	movlb	5	; () banked
 12971   01E564  6FAD               	movwf	printf@fmt& (0+255),b
 12972   01E566  0EFD               	movlw	high STR_124
 12973   01E568  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12974   01E56A  ECDA  F0FF         	call	_printf	;wreg free
 12975                           
 12976                           ;../src/w65_main.c: 771:  printf("  FLASH\r\n");
 12977   01E56E  0EF8               	movlw	low STR_125
 12978   01E570  0105               	movlb	5	; () banked
 12979   01E572  6FAD               	movwf	printf@fmt& (0+255),b
 12980   01E574  0EFE               	movlw	high STR_125
 12981   01E576  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12982   01E578  ECDA  F0FF         	call	_printf	;wreg free
 12983                           
 12984                           ;../src/w65_main.c: 772:  printf("  HELP | ?\r\n");
 12985   01E57C  0E7A               	movlw	low STR_126
 12986   01E57E  0105               	movlb	5	; () banked
 12987   01E580  6FAD               	movwf	printf@fmt& (0+255),b
 12988   01E582  0EFE               	movlw	high STR_126
 12989   01E584  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12990   01E586  ECDA  F0FF         	call	_printf	;wreg free
 12991   01E58A                     
 12992                           ;../src/w65_main.c: 773:  return FR_OK;
 12993   01E58A  0E00               	movlw	0
 12994   01E58C  0012               	return		;funcret
 12995   01E58E                     __end_of_print_com:
 12996                           	callstack 0
 12997                           
 12998 ;; *************** function _flash_apl *****************
 12999 ;; Defined at:
 13000 ;;		line 933 in file "../src/w65_main.c"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;		None
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;		None
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      enum E17409
 13007 ;; Registers used:
 13008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13018 ;;Total ram usage:        0 bytes
 13019 ;; Hardware stack levels used: 1
 13020 ;; Hardware stack levels required when called: 9
 13021 ;; This function calls:
 13022 ;;		_printf
 13023 ;; This function is called by:
 13024 ;;		_main
 13025 ;; This function uses a non-reentrant model
 13026 ;;
 13027                           
 13028                           	psect	text3
 13029   01FC42                     __ptext3:
 13030                           	callstack 0
 13031   01FC42                     _flash_apl:
 13032                           	callstack 117
 13033   01FC42                     
 13034                           ;../src/w65_main.c: 934:  if ( binv.sw ) {
 13035   01FC42  0108               	movlb	8	; () banked
 13036   01FC44  5178               	movf	_binv& (0+255),w,b
 13037   01FC46  B4D8               	btfsc	status,2,c
 13038   01FC48  EF28  F0FE         	goto	u35241
 13039   01FC4C  EF2A  F0FE         	goto	u35240
 13040   01FC50                     u35241:
 13041   01FC50  EF39  F0FE         	goto	l25369
 13042   01FC54                     u35240:
 13043   01FC54                     
 13044                           ; BSR set to: 8
 13045                           ;../src/w65_main.c: 935:   printf("Terminate %s\r\n",binv.fname);
 13046   01FC54  0E25               	movlw	low STR_160
 13047   01FC56  0105               	movlb	5	; () banked
 13048   01FC58  6FAD               	movwf	printf@fmt& (0+255),b
 13049   01FC5A  0EFE               	movlw	high STR_160
 13050   01FC5C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13051   01FC5E  0E84               	movlw	low (_binv+12)
 13052   01FC60  6FAF               	movwf	(?_printf+2)& (0+255),b
 13053   01FC62  0E08               	movlw	high (_binv+12)
 13054   01FC64  6FB0               	movwf	(?_printf+3)& (0+255),b
 13055   01FC66  ECDA  F0FF         	call	_printf	;wreg free
 13056   01FC6A                     
 13057                           ;../src/w65_main.c: 936:   binv.sw = 0;
 13058   01FC6A  0108               	movlb	8	; () banked
 13059   01FC6C  6B78               	clrf	_binv& (0+255),b
 13060                           
 13061                           ;../src/w65_main.c: 937:  }
 13062   01FC6E  EF40  F0FE         	goto	l25371
 13063   01FC72                     l25369:
 13064                           
 13065                           ; BSR set to: 8
 13066   01FC72  0E83               	movlw	low STR_161
 13067   01FC74  0105               	movlb	5	; () banked
 13068   01FC76  6FAD               	movwf	printf@fmt& (0+255),b
 13069   01FC78  0EF9               	movlw	high STR_161
 13070   01FC7A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13071   01FC7C  ECDA  F0FF         	call	_printf	;wreg free
 13072   01FC80                     l25371:
 13073                           
 13074                           ;../src/w65_main.c: 940:  return FR_OK;
 13075   01FC80  0E00               	movlw	0
 13076   01FC82  0012               	return		;funcret
 13077   01FC84                     __end_of_flash_apl:
 13078                           	callstack 0
 13079                           
 13080 ;; *************** function _see_file *****************
 13081 ;; Defined at:
 13082 ;;		line 863 in file "../src/w65_main.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;  header          2    7[BANK7 ] PTR struct .
 13087 ;;		 -> tmp_buf(512), 
 13088 ;;  br              2    4[BANK7 ] unsigned int 
 13089 ;;  rdbuf           2    2[BANK7 ] PTR void 
 13090 ;;		 -> tmp_buf(512), 
 13091 ;;  fr              1    6[BANK7 ] enum E17409
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  1    wreg      enum E17409
 13094 ;; Registers used:
 13095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/0
 13098 ;;		On exit  : 0/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13102 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13103 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13104 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13105 ;;Total ram usage:        9 bytes
 13106 ;; Hardware stack levels used: 1
 13107 ;; Hardware stack levels required when called: 20
 13108 ;; This function calls:
 13109 ;;		_f_close
 13110 ;;		_f_open
 13111 ;;		_f_read
 13112 ;;		_printf
 13113 ;;		_strstr
 13114 ;; This function is called by:
 13115 ;;		_main
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text4
 13120   0153D4                     __ptext4:
 13121                           	callstack 0
 13122   0153D4                     _see_file:
 13123                           	callstack 106
 13124   0153D4                     
 13125                           ;../src/w65_main.c: 865:  FRESULT fr;;../src/w65_main.c: 866:  void *rdbuf;;../src/w65_m
      +                          ain.c: 867:  UINT br;;../src/w65_main.c: 868:  file_header *header;;../src/w65_main.c: 8
      +                          70:  rdbuf = (void *)&tmp_buf[0][0];
 13126   0153D4  0EF8               	movlw	low _tmp_buf
 13127   0153D6  0107               	movlb	7	; () banked
 13128   0153D8  6F02               	movwf	see_file@rdbuf& (0+255),b
 13129   0153DA  0E13               	movlw	high _tmp_buf
 13130   0153DC  6F03               	movwf	(see_file@rdbuf+1)& (0+255),b
 13131                           
 13132                           ;../src/w65_main.c: 871:  header = (file_header *)&tmp_buf[0][0];
 13133   0153DE  0EF8               	movlw	low _tmp_buf
 13134   0153E0  6F07               	movwf	see_file@header& (0+255),b
 13135   0153E2  0E13               	movlw	high _tmp_buf
 13136   0153E4  6F08               	movwf	(see_file@header+1)& (0+255),b
 13137   0153E6                     
 13138                           ; BSR set to: 7
 13139                           ;../src/w65_main.c: 873:  fr = f_open(&rom_fl, (TCHAR *)arg[0], 0x01);
 13140   0153E6  0ED6               	movlw	low _rom_fl
 13141   0153E8  0106               	movlb	6	; () banked
 13142   0153EA  6FAF               	movwf	f_open@fp& (0+255),b
 13143   0153EC  0E0F               	movlw	high _rom_fl
 13144   0153EE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 13145   0153F0  C79E  F6B1         	movff	_arg,f_open@path
 13146   0153F4  C79F  F6B2         	movff	_arg+1,f_open@path+1
 13147   0153F8  0E01               	movlw	1
 13148   0153FA  6FB3               	movwf	f_open@mode& (0+255),b
 13149   0153FC  ECDB  F092         	call	_f_open	;wreg free
 13150   015400  0107               	movlb	7	; () banked
 13151   015402  6F06               	movwf	see_file@fr& (0+255),b
 13152   015404                     
 13153                           ; BSR set to: 7
 13154                           ;../src/w65_main.c: 874:  if ( fr != FR_OK ) {
 13155   015404  5106               	movf	see_file@fr& (0+255),w,b
 13156   015406  B4D8               	btfsc	status,2,c
 13157   015408  EF08  F0AA         	goto	u35141
 13158   01540C  EF0A  F0AA         	goto	u35140
 13159   015410                     u35141:
 13160   015410  EF14  F0AA         	goto	l1328
 13161   015414                     u35140:
 13162   015414                     
 13163                           ; BSR set to: 7
 13164                           ;../src/w65_main.c: 875:   printf("\r\nFile Open Error.\r\n");
 13165   015414  0E5B               	movlw	low STR_133
 13166   015416  0105               	movlb	5	; () banked
 13167   015418  6FAD               	movwf	printf@fmt& (0+255),b
 13168   01541A  0EFC               	movlw	high STR_133
 13169   01541C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13170   01541E  ECDA  F0FF         	call	_printf	;wreg free
 13171   015422                     l25293:
 13172                           
 13173                           ;../src/w65_main.c: 876:   return 0;
 13174   015422  0E00               	movlw	0
 13175   015424  EF37  F0AC         	goto	l1329
 13176   015428                     l1328:
 13177                           
 13178                           ; BSR set to: 7
 13179                           ;../src/w65_main.c: 879:  file_size = (uint16_t)((&rom_fl)->obj.objsize);
 13180   015428  0063  FF80  F7B9   	movff	_rom_fl+10,_file_size
 13181   01542E  0063  FF84  F7BA   	movff	_rom_fl+11,_file_size+1
 13182   015434                     
 13183                           ; BSR set to: 7
 13184                           ;../src/w65_main.c: 880:  fr = f_read(&rom_fl, rdbuf, 256 * 2, &br);
 13185   015434  0ED6               	movlw	low _rom_fl
 13186   015436  0106               	movlb	6	; () banked
 13187   015438  6F3E               	movwf	f_read@fp& (0+255),b
 13188   01543A  0E0F               	movlw	high _rom_fl
 13189   01543C  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 13190   01543E  C702  F640         	movff	see_file@rdbuf,f_read@buff
 13191   015442  C703  F641         	movff	see_file@rdbuf+1,f_read@buff+1
 13192   015446  0E02               	movlw	2
 13193   015448  6F43               	movwf	(f_read@btr+1)& (0+255),b
 13194   01544A  0E00               	movlw	0
 13195   01544C  6F42               	movwf	f_read@btr& (0+255),b
 13196   01544E  0E04               	movlw	low see_file@br
 13197   015450  6F44               	movwf	f_read@br& (0+255),b
 13198   015452  0E07               	movlw	high see_file@br
 13199   015454  6F45               	movwf	(f_read@br+1)& (0+255),b
 13200   015456  EC9B  F096         	call	_f_read	;wreg free
 13201   01545A  0107               	movlb	7	; () banked
 13202   01545C  6F06               	movwf	see_file@fr& (0+255),b
 13203   01545E                     
 13204                           ; BSR set to: 7
 13205                           ;../src/w65_main.c: 881:  if (fr == FR_OK) {
 13206   01545E  5106               	movf	see_file@fr& (0+255),w,b
 13207   015460  A4D8               	btfss	status,2,c
 13208   015462  EF35  F0AA         	goto	u35151
 13209   015466  EF37  F0AA         	goto	u35150
 13210   01546A                     u35151:
 13211   01546A  EF27  F0AC         	goto	l25357
 13212   01546E                     u35150:
 13213   01546E                     
 13214                           ; BSR set to: 7
 13215                           ;../src/w65_main.c: 883:   printf("\r\n%s : Size = $%04X bytes.\r\n", arg[0], file_size)
      +                          ;
 13216   01546E  0E11               	movlw	low STR_134
 13217   015470  0105               	movlb	5	; () banked
 13218   015472  6FAD               	movwf	printf@fmt& (0+255),b
 13219   015474  0EF9               	movlw	high STR_134
 13220   015476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13221   015478  C79E  F5AF         	movff	_arg,?_printf+2
 13222   01547C  C79F  F5B0         	movff	_arg+1,?_printf+3
 13223   015480  C7B9  F5B1         	movff	_file_size,?_printf+4
 13224   015484  C7BA  F5B2         	movff	_file_size+1,?_printf+5
 13225   015488  ECDA  F0FF         	call	_printf	;wreg free
 13226   01548C                     
 13227                           ;../src/w65_main.c: 884:   if (!strstr((const char *)header->mezID, mezID)) {
 13228   01548C  0E08               	movlw	8
 13229   01548E  0107               	movlb	7	; () banked
 13230   015490  2507               	addwf	see_file@header& (0+255),w,b
 13231   015492  6E0B               	movwf	strstr@h^(0+1280),c
 13232   015494  0E00               	movlw	0
 13233   015496  2108               	addwfc	(see_file@header+1)& (0+255),w,b
 13234   015498  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 13235   01549A  0E50               	movlw	low STR_46
 13236   01549C  6E0D               	movwf	strstr@n^(0+1280),c
 13237   01549E  0EFF               	movlw	high STR_46
 13238   0154A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 13239   0154A2  ECCF  F0EE         	call	_strstr	;wreg free
 13240   0154A6  500B               	movf	?_strstr^(0+1280),w,c
 13241   0154A8  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 13242   0154AA  A4D8               	btfss	status,2,c
 13243   0154AC  EF5A  F0AA         	goto	u35161
 13244   0154B0  EF5C  F0AA         	goto	u35160
 13245   0154B4                     u35161:
 13246   0154B4  EF65  F0AA         	goto	l25307
 13247   0154B8                     u35160:
 13248   0154B8                     
 13249                           ;../src/w65_main.c: 885:    printf("Not MEZW65C_RAM format file.\r\n");
 13250   0154B8  0EB6               	movlw	low STR_135
 13251   0154BA  0105               	movlb	5	; () banked
 13252   0154BC  6FAD               	movwf	printf@fmt& (0+255),b
 13253   0154BE  0EF8               	movlw	high STR_135
 13254   0154C0  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13255   0154C2  ECDA  F0FF         	call	_printf	;wreg free
 13256                           
 13257                           ;../src/w65_main.c: 886:   }
 13258   0154C6  EF27  F0AC         	goto	l25357
 13259   0154CA                     l25307:
 13260                           
 13261                           ;../src/w65_main.c: 888:    printf("FIle load address : $%06lX\r\n", (unsigned long)head
      +                          er->load_p );
 13262   0154CA  0E2E               	movlw	low STR_136
 13263   0154CC  0105               	movlb	5	; () banked
 13264   0154CE  6FAD               	movwf	printf@fmt& (0+255),b
 13265   0154D0  0EF9               	movlw	high STR_136
 13266   0154D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13267   0154D4  0107               	movlb	7	; () banked
 13268   0154D6  EE20 F010          	lfsr	2,16
 13269   0154DA  5107               	movf	see_file@header& (0+255),w,b
 13270   0154DC  26D9               	addwf	fsr2l,f,c
 13271   0154DE  5108               	movf	(see_file@header+1)& (0+255),w,b
 13272   0154E0  22DA               	addwfc	fsr2h,f,c
 13273   0154E2  C4DE F5AF          	movff	postinc2,?_printf+2
 13274   0154E6  C4DE F5B0          	movff	postinc2,?_printf+3
 13275   0154EA  C4DE F5B1          	movff	postinc2,?_printf+4
 13276   0154EE  C4DE F5B2          	movff	postinc2,?_printf+5
 13277   0154F2  ECDA  F0FF         	call	_printf	;wreg free
 13278                           
 13279                           ;../src/w65_main.c: 889:    printf("File Type : ");
 13280   0154F6  0E87               	movlw	low STR_137
 13281   0154F8  0105               	movlb	5	; () banked
 13282   0154FA  6FAD               	movwf	printf@fmt& (0+255),b
 13283   0154FC  0EFE               	movlw	high STR_137
 13284   0154FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13285   015500  ECDA  F0FF         	call	_printf	;wreg free
 13286                           
 13287                           ;../src/w65_main.c: 890:    switch (header->bios_sw) {
 13288   015504  EF11  F0AC         	goto	l25355
 13289   015508                     l25309:
 13290                           
 13291                           ; BSR set to: 7
 13292                           ;../src/w65_main.c: 893:      if ( !header->bios_sw ) printf("Stand-alone\n\r");
 13293   015508  EE20 F01F          	lfsr	2,31
 13294   01550C  5107               	movf	see_file@header& (0+255),w,b
 13295   01550E  26D9               	addwf	fsr2l,f,c
 13296   015510  5108               	movf	(see_file@header+1)& (0+255),w,b
 13297   015512  22DA               	addwfc	fsr2h,f,c
 13298   015514  50DF               	movf	indf2,w,c
 13299   015516  A4D8               	btfss	status,2,c
 13300   015518  EF90  F0AA         	goto	u35171
 13301   01551C  EF92  F0AA         	goto	u35170
 13302   015520                     u35171:
 13303   015520  EF9B  F0AA         	goto	l25313
 13304   015524                     u35170:
 13305   015524                     
 13306                           ; BSR set to: 7
 13307   015524  0E42               	movlw	low STR_138
 13308   015526  0105               	movlb	5	; () banked
 13309   015528  6FAD               	movwf	printf@fmt& (0+255),b
 13310   01552A  0EFE               	movlw	high STR_138
 13311   01552C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13312   01552E  ECDA  F0FF         	call	_printf	;wreg free
 13313   015532  EFA2  F0AA         	goto	l1337
 13314   015536                     l25313:
 13315                           
 13316                           ; BSR set to: 7
 13317   015536  0E02               	movlw	low STR_139
 13318   015538  0105               	movlb	5	; () banked
 13319   01553A  6FAD               	movwf	printf@fmt& (0+255),b
 13320   01553C  0EFF               	movlw	high STR_139
 13321   01553E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13322   015540  ECDA  F0FF         	call	_printf	;wreg free
 13323   015544                     l1337:
 13324                           
 13325                           ;../src/w65_main.c: 895:      printf("Operational Mode : ");
 13326   015544  0EC2               	movlw	low STR_140
 13327   015546  0105               	movlb	5	; () banked
 13328   015548  6FAD               	movwf	printf@fmt& (0+255),b
 13329   01554A  0EFC               	movlw	high STR_140
 13330   01554C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13331   01554E  ECDA  F0FF         	call	_printf	;wreg free
 13332   015552                     
 13333                           ;../src/w65_main.c: 896:      if (!header->sw_816) printf("W65C02 (Emulation Mode)\n\r")
      +                          ;
 13334   015552  0107               	movlb	7	; () banked
 13335   015554  EE20 F018          	lfsr	2,24
 13336   015558  5107               	movf	see_file@header& (0+255),w,b
 13337   01555A  26D9               	addwf	fsr2l,f,c
 13338   01555C  5108               	movf	(see_file@header+1)& (0+255),w,b
 13339   01555E  22DA               	addwfc	fsr2h,f,c
 13340   015560  50DF               	movf	indf2,w,c
 13341   015562  A4D8               	btfss	status,2,c
 13342   015564  EFB6  F0AA         	goto	u35181
 13343   015568  EFB8  F0AA         	goto	u35180
 13344   01556C                     u35181:
 13345   01556C  EFC1  F0AA         	goto	l25319
 13346   015570                     u35180:
 13347   015570                     
 13348                           ; BSR set to: 7
 13349   015570  0E08               	movlw	low STR_141
 13350   015572  0105               	movlb	5	; () banked
 13351   015574  6FAD               	movwf	printf@fmt& (0+255),b
 13352   015576  0EFA               	movlw	high STR_141
 13353   015578  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13354   01557A  ECDA  F0FF         	call	_printf	;wreg free
 13355   01557E  EFC8  F0AA         	goto	l1339
 13356   015582                     l25319:
 13357                           
 13358                           ; BSR set to: 7
 13359   015582  0E1A               	movlw	low STR_142
 13360   015584  0105               	movlb	5	; () banked
 13361   015586  6FAD               	movwf	printf@fmt& (0+255),b
 13362   015588  0EFC               	movlw	high STR_142
 13363   01558A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13364   01558C  ECDA  F0FF         	call	_printf	;wreg free
 13365   015590                     l1339:
 13366                           
 13367                           ;../src/w65_main.c: 898:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 13368   015590  0EA4               	movlw	low STR_143
 13369   015592  0105               	movlb	5	; () banked
 13370   015594  6FAD               	movwf	printf@fmt& (0+255),b
 13371   015596  0EFD               	movlw	high STR_143
 13372   015598  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13373   01559A  0107               	movlb	7	; () banked
 13374   01559C  EE20 F001          	lfsr	2,1
 13375   0155A0  5107               	movf	see_file@header& (0+255),w,b
 13376   0155A2  26D9               	addwf	fsr2l,f,c
 13377   0155A4  5108               	movf	(see_file@header+1)& (0+255),w,b
 13378   0155A6  22DA               	addwfc	fsr2h,f,c
 13379   0155A8  C4DE F5AF          	movff	postinc2,?_printf+2
 13380   0155AC  C4DD F5B0          	movff	postdec2,?_printf+3
 13381   0155B0  ECDA  F0FF         	call	_printf	;wreg free
 13382                           
 13383                           ;../src/w65_main.c: 899:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 13384   0155B4  0EB5               	movlw	low STR_144
 13385   0155B6  0105               	movlb	5	; () banked
 13386   0155B8  6FAD               	movwf	printf@fmt& (0+255),b
 13387   0155BA  0EFD               	movlw	high STR_144
 13388   0155BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13389   0155BE  0107               	movlb	7	; () banked
 13390   0155C0  EE20 F004          	lfsr	2,4
 13391   0155C4  5107               	movf	see_file@header& (0+255),w,b
 13392   0155C6  26D9               	addwf	fsr2l,f,c
 13393   0155C8  5108               	movf	(see_file@header+1)& (0+255),w,b
 13394   0155CA  22DA               	addwfc	fsr2h,f,c
 13395   0155CC  C4DE F5AF          	movff	postinc2,?_printf+2
 13396   0155D0  C4DD F5B0          	movff	postdec2,?_printf+3
 13397   0155D4  ECDA  F0FF         	call	_printf	;wreg free
 13398   0155D8                     
 13399                           ;../src/w65_main.c: 900:      if (header->sw_816 == 1) printf("DPR : $%04X PBR : $00 DBR
      +                           : $00\r\n",header->direct_page);
 13400   0155D8  0107               	movlb	7	; () banked
 13401   0155DA  EE20 F018          	lfsr	2,24
 13402   0155DE  5107               	movf	see_file@header& (0+255),w,b
 13403   0155E0  26D9               	addwf	fsr2l,f,c
 13404   0155E2  5108               	movf	(see_file@header+1)& (0+255),w,b
 13405   0155E4  22DA               	addwfc	fsr2h,f,c
 13406   0155E6  04DE               	decf	postinc2,w,c
 13407   0155E8  A4D8               	btfss	status,2,c
 13408   0155EA  EFF9  F0AA         	goto	u35191
 13409   0155EE  EFFB  F0AA         	goto	u35190
 13410   0155F2                     u35191:
 13411   0155F2  EF0D  F0AB         	goto	l1340
 13412   0155F6                     u35190:
 13413   0155F6                     
 13414                           ; BSR set to: 7
 13415   0155F6  0ED1               	movlw	low STR_145
 13416   0155F8  0105               	movlb	5	; () banked
 13417   0155FA  6FAD               	movwf	printf@fmt& (0+255),b
 13418   0155FC  0EF7               	movlw	high STR_145
 13419   0155FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13420   015600  0107               	movlb	7	; () banked
 13421   015602  EE20 F006          	lfsr	2,6
 13422   015606  5107               	movf	see_file@header& (0+255),w,b
 13423   015608  26D9               	addwf	fsr2l,f,c
 13424   01560A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13425   01560C  22DA               	addwfc	fsr2h,f,c
 13426   01560E  C4DE F5AF          	movff	postinc2,?_printf+2
 13427   015612  C4DD F5B0          	movff	postdec2,?_printf+3
 13428   015616  ECDA  F0FF         	call	_printf	;wreg free
 13429   01561A                     l1340:
 13430                           
 13431                           ;../src/w65_main.c: 901:      printf("PIC I/F Shared memory : $%06lX\r\n",(unsigned long
      +                          )header->picif_p);
 13432   01561A  0E36               	movlw	low STR_146
 13433   01561C  0105               	movlb	5	; () banked
 13434   01561E  6FAD               	movwf	printf@fmt& (0+255),b
 13435   015620  0EF8               	movlw	high STR_146
 13436   015622  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13437   015624  0107               	movlb	7	; () banked
 13438   015626  EE20 F014          	lfsr	2,20
 13439   01562A  5107               	movf	see_file@header& (0+255),w,b
 13440   01562C  26D9               	addwf	fsr2l,f,c
 13441   01562E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13442   015630  22DA               	addwfc	fsr2h,f,c
 13443   015632  C4DE F5AF          	movff	postinc2,?_printf+2
 13444   015636  C4DE F5B0          	movff	postinc2,?_printf+3
 13445   01563A  C4DE F5B1          	movff	postinc2,?_printf+4
 13446   01563E  C4DE F5B2          	movff	postinc2,?_printf+5
 13447   015642  ECDA  F0FF         	call	_printf	;wreg free
 13448   015646                     
 13449                           ;../src/w65_main.c: 902:      if ( header->bios_sw == 2 ) {
 13450   015646  0107               	movlb	7	; () banked
 13451   015648  EE20 F01F          	lfsr	2,31
 13452   01564C  5107               	movf	see_file@header& (0+255),w,b
 13453   01564E  26D9               	addwf	fsr2l,f,c
 13454   015650  5108               	movf	(see_file@header+1)& (0+255),w,b
 13455   015652  22DA               	addwfc	fsr2h,f,c
 13456   015654  0E02               	movlw	2
 13457   015656  18DE               	xorwf	postinc2,w,c
 13458   015658  A4D8               	btfss	status,2,c
 13459   01565A  EF31  F0AB         	goto	u35201
 13460   01565E  EF33  F0AB         	goto	u35200
 13461   015662                     u35201:
 13462   015662  EF27  F0AC         	goto	l25357
 13463   015666                     u35200:
 13464   015666                     
 13465                           ; BSR set to: 7
 13466                           ;../src/w65_main.c: 903:       if( header->irq_sw ) printf("IRQ : Support, ");
 13467   015666  EE20 F019          	lfsr	2,25
 13468   01566A  5107               	movf	see_file@header& (0+255),w,b
 13469   01566C  26D9               	addwf	fsr2l,f,c
 13470   01566E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13471   015670  22DA               	addwfc	fsr2h,f,c
 13472   015672  50DF               	movf	indf2,w,c
 13473   015674  B4D8               	btfsc	status,2,c
 13474   015676  EF3F  F0AB         	goto	u35211
 13475   01567A  EF41  F0AB         	goto	u35210
 13476   01567E                     u35211:
 13477   01567E  EF4A  F0AB         	goto	l25331
 13478   015682                     u35210:
 13479   015682                     
 13480                           ; BSR set to: 7
 13481   015682  0EF7               	movlw	low STR_147
 13482   015684  0105               	movlb	5	; () banked
 13483   015686  6FAD               	movwf	printf@fmt& (0+255),b
 13484   015688  0EFD               	movlw	high STR_147
 13485   01568A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13486   01568C  ECDA  F0FF         	call	_printf	;wreg free
 13487   015690  EF51  F0AB         	goto	l25333
 13488   015694                     l25331:
 13489                           
 13490                           ; BSR set to: 7
 13491   015694  0E48               	movlw	low STR_148
 13492   015696  0105               	movlb	5	; () banked
 13493   015698  6FAD               	movwf	printf@fmt& (0+255),b
 13494   01569A  0EFD               	movlw	high STR_148
 13495   01569C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13496   01569E  ECDA  F0FF         	call	_printf	;wreg free
 13497   0156A2                     l25333:
 13498                           
 13499                           ;../src/w65_main.c: 905:       if( header->nmi_sw ) printf("MNI : Support\r\n");
 13500   0156A2  0107               	movlb	7	; () banked
 13501   0156A4  EE20 F01E          	lfsr	2,30
 13502   0156A8  5107               	movf	see_file@header& (0+255),w,b
 13503   0156AA  26D9               	addwf	fsr2l,f,c
 13504   0156AC  5108               	movf	(see_file@header+1)& (0+255),w,b
 13505   0156AE  22DA               	addwfc	fsr2h,f,c
 13506   0156B0  50DF               	movf	indf2,w,c
 13507   0156B2  B4D8               	btfsc	status,2,c
 13508   0156B4  EF5E  F0AB         	goto	u35221
 13509   0156B8  EF60  F0AB         	goto	u35220
 13510   0156BC                     u35221:
 13511   0156BC  EF69  F0AB         	goto	l25337
 13512   0156C0                     u35220:
 13513   0156C0                     
 13514                           ; BSR set to: 7
 13515   0156C0  0EE7               	movlw	low STR_149
 13516   0156C2  0105               	movlb	5	; () banked
 13517   0156C4  6FAD               	movwf	printf@fmt& (0+255),b
 13518   0156C6  0EFD               	movlw	high STR_149
 13519   0156C8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13520   0156CA  ECDA  F0FF         	call	_printf	;wreg free
 13521   0156CE  EF27  F0AC         	goto	l25357
 13522   0156D2                     l25337:
 13523                           
 13524                           ; BSR set to: 7
 13525   0156D2  0E35               	movlw	low STR_150
 13526   0156D4  0105               	movlb	5	; () banked
 13527   0156D6  6FAD               	movwf	printf@fmt& (0+255),b
 13528   0156D8  0EFD               	movlw	high STR_150
 13529   0156DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13530   0156DC  ECDA  F0FF         	call	_printf	;wreg free
 13531   0156E0  EF27  F0AC         	goto	l25357
 13532   0156E4                     l25339:
 13533                           
 13534                           ; BSR set to: 7
 13535                           ;../src/w65_main.c: 910:      printf("Using BIOS CALL\n\r");
 13536   0156E4  0E80               	movlw	low STR_151
 13537   0156E6  0105               	movlb	5	; () banked
 13538   0156E8  6FAD               	movwf	printf@fmt& (0+255),b
 13539   0156EA  0EFD               	movlw	high STR_151
 13540   0156EC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13541   0156EE  ECDA  F0FF         	call	_printf	;wreg free
 13542                           
 13543                           ;../src/w65_main.c: 911:      printf("Operational Mode : ");
 13544   0156F2  0EC2               	movlw	low STR_140
 13545   0156F4  0105               	movlb	5	; () banked
 13546   0156F6  6FAD               	movwf	printf@fmt& (0+255),b
 13547   0156F8  0EFC               	movlw	high STR_140
 13548   0156FA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13549   0156FC  ECDA  F0FF         	call	_printf	;wreg free
 13550                           
 13551                           ;../src/w65_main.c: 912:      switch (header->sw_816) {
 13552   015700  EF9D  F0AB         	goto	l25347
 13553   015704                     l25341:
 13554                           
 13555                           ; BSR set to: 7
 13556                           ;../src/w65_main.c: 914:        printf("W65C02 (Emulation Mode)\n\r");
 13557   015704  0E08               	movlw	low STR_141
 13558   015706  0105               	movlb	5	; () banked
 13559   015708  6FAD               	movwf	printf@fmt& (0+255),b
 13560   01570A  0EFA               	movlw	high STR_141
 13561   01570C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13562   01570E  ECDA  F0FF         	call	_printf	;wreg free
 13563                           
 13564                           ;../src/w65_main.c: 915:        break;
 13565   015712  EFB3  F0AB         	goto	l25349
 13566   015716                     l25343:
 13567                           
 13568                           ; BSR set to: 7
 13569                           ;../src/w65_main.c: 917:        printf("W65C816 Native mode\n\r");
 13570   015716  0E1A               	movlw	low STR_142
 13571   015718  0105               	movlb	5	; () banked
 13572   01571A  6FAD               	movwf	printf@fmt& (0+255),b
 13573   01571C  0EFC               	movlw	high STR_142
 13574   01571E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13575   015720  ECDA  F0FF         	call	_printf	;wreg free
 13576                           
 13577                           ;../src/w65_main.c: 918:        break;
 13578   015724  EFB3  F0AB         	goto	l25349
 13579   015728                     l25345:
 13580                           
 13581                           ; BSR set to: 7
 13582                           ;../src/w65_main.c: 920:        printf("Both W65C02 and W65C816\n\r");
 13583   015728  0E22               	movlw	low STR_155
 13584   01572A  0105               	movlb	5	; () banked
 13585   01572C  6FAD               	movwf	printf@fmt& (0+255),b
 13586   01572E  0EFA               	movlw	high STR_155
 13587   015730  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13588   015732  ECDA  F0FF         	call	_printf	;wreg free
 13589                           
 13590                           ;../src/w65_main.c: 921:      }
 13591   015736  EFB3  F0AB         	goto	l25349
 13592   01573A                     l25347:
 13593   01573A  0107               	movlb	7	; () banked
 13594   01573C  EE20 F018          	lfsr	2,24
 13595   015740  5107               	movf	see_file@header& (0+255),w,b
 13596   015742  26D9               	addwf	fsr2l,f,c
 13597   015744  5108               	movf	(see_file@header+1)& (0+255),w,b
 13598   015746  22DA               	addwfc	fsr2h,f,c
 13599   015748  50DF               	movf	indf2,w,c
 13600                           
 13601                           ; Switch size 1, requested type "simple"
 13602                           ; Number of cases is 3, Range of values is 0 to 2
 13603                           ; switch strategies available:
 13604                           ; Name         Instructions Cycles
 13605                           ; simple_byte           10     6 (average)
 13606                           ;	Chosen strategy is simple_byte
 13607   01574A  0A00               	xorlw	0	; case 0
 13608   01574C  B4D8               	btfsc	status,2,c
 13609   01574E  EF82  F0AB         	goto	l25341
 13610   015752  0A01               	xorlw	1	; case 1
 13611   015754  B4D8               	btfsc	status,2,c
 13612   015756  EF8B  F0AB         	goto	l25343
 13613   01575A  0A03               	xorlw	3	; case 2
 13614   01575C  B4D8               	btfsc	status,2,c
 13615   01575E  EF94  F0AB         	goto	l25345
 13616   015762  EFB3  F0AB         	goto	l25349
 13617   015766                     l25349:
 13618                           
 13619                           ;../src/w65_main.c: 922:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 13620   015766  0EA4               	movlw	low STR_143
 13621   015768  0105               	movlb	5	; () banked
 13622   01576A  6FAD               	movwf	printf@fmt& (0+255),b
 13623   01576C  0EFD               	movlw	high STR_143
 13624   01576E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13625   015770  0107               	movlb	7	; () banked
 13626   015772  EE20 F001          	lfsr	2,1
 13627   015776  5107               	movf	see_file@header& (0+255),w,b
 13628   015778  26D9               	addwf	fsr2l,f,c
 13629   01577A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13630   01577C  22DA               	addwfc	fsr2h,f,c
 13631   01577E  C4DE F5AF          	movff	postinc2,?_printf+2
 13632   015782  C4DD F5B0          	movff	postdec2,?_printf+3
 13633   015786  ECDA  F0FF         	call	_printf	;wreg free
 13634                           
 13635                           ;../src/w65_main.c: 923:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 13636   01578A  0EB5               	movlw	low STR_144
 13637   01578C  0105               	movlb	5	; () banked
 13638   01578E  6FAD               	movwf	printf@fmt& (0+255),b
 13639   015790  0EFD               	movlw	high STR_144
 13640   015792  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13641   015794  0107               	movlb	7	; () banked
 13642   015796  EE20 F004          	lfsr	2,4
 13643   01579A  5107               	movf	see_file@header& (0+255),w,b
 13644   01579C  26D9               	addwf	fsr2l,f,c
 13645   01579E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13646   0157A0  22DA               	addwfc	fsr2h,f,c
 13647   0157A2  C4DE F5AF          	movff	postinc2,?_printf+2
 13648   0157A6  C4DD F5B0          	movff	postdec2,?_printf+3
 13649   0157AA  ECDA  F0FF         	call	_printf	;wreg free
 13650   0157AE                     
 13651                           ;../src/w65_main.c: 924:      if (header->sw_816) printf("DPR : $%04X PBR : $%02X DBR : 
      +                          $%02X\r\n",header->direct_page, header->op1, header->op2);
 13652   0157AE  0107               	movlb	7	; () banked
 13653   0157B0  EE20 F018          	lfsr	2,24
 13654   0157B4  5107               	movf	see_file@header& (0+255),w,b
 13655   0157B6  26D9               	addwf	fsr2l,f,c
 13656   0157B8  5108               	movf	(see_file@header+1)& (0+255),w,b
 13657   0157BA  22DA               	addwfc	fsr2h,f,c
 13658   0157BC  50DF               	movf	indf2,w,c
 13659   0157BE  B4D8               	btfsc	status,2,c
 13660   0157C0  EFE4  F0AB         	goto	u35231
 13661   0157C4  EFE6  F0AB         	goto	u35230
 13662   0157C8                     u35231:
 13663   0157C8  EF27  F0AC         	goto	l1332
 13664   0157CC                     u35230:
 13665   0157CC                     
 13666                           ; BSR set to: 7
 13667   0157CC  0E68               	movlw	low STR_158
 13668   0157CE  0105               	movlb	5	; () banked
 13669   0157D0  6FAD               	movwf	printf@fmt& (0+255),b
 13670   0157D2  0EF6               	movlw	high STR_158
 13671   0157D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13672   0157D6  0107               	movlb	7	; () banked
 13673   0157D8  EE20 F006          	lfsr	2,6
 13674   0157DC  5107               	movf	see_file@header& (0+255),w,b
 13675   0157DE  26D9               	addwf	fsr2l,f,c
 13676   0157E0  5108               	movf	(see_file@header+1)& (0+255),w,b
 13677   0157E2  22DA               	addwfc	fsr2h,f,c
 13678   0157E4  C4DE F5AF          	movff	postinc2,?_printf+2
 13679   0157E8  C4DD F5B0          	movff	postdec2,?_printf+3
 13680   0157EC  C707  F4D9         	movff	see_file@header,fsr2l
 13681   0157F0  C708  F4DA         	movff	see_file@header+1,fsr2h
 13682   0157F4  50DF               	movf	indf2,w,c
 13683   0157F6  6F00               	movwf	??_see_file& (0+255),b
 13684   0157F8  5100               	movf	??_see_file& (0+255),w,b
 13685   0157FA  0105               	movlb	5	; () banked
 13686   0157FC  6FB1               	movwf	(?_printf+4)& (0+255),b
 13687   0157FE  6BB2               	clrf	(?_printf+5)& (0+255),b
 13688   015800  0107               	movlb	7	; () banked
 13689   015802  EE20 F003          	lfsr	2,3
 13690   015806  5107               	movf	see_file@header& (0+255),w,b
 13691   015808  26D9               	addwf	fsr2l,f,c
 13692   01580A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13693   01580C  22DA               	addwfc	fsr2h,f,c
 13694   01580E  50DF               	movf	indf2,w,c
 13695   015810  6F01               	movwf	(??_see_file+1)& (0+255),b
 13696   015812  5101               	movf	(??_see_file+1)& (0+255),w,b
 13697   015814  0105               	movlb	5	; () banked
 13698   015816  6FB3               	movwf	(?_printf+6)& (0+255),b
 13699   015818  6BB4               	clrf	(?_printf+7)& (0+255),b
 13700   01581A  ECDA  F0FF         	call	_printf	;wreg free
 13701   01581E  EF27  F0AC         	goto	l25357
 13702   015822                     l25355:
 13703   015822  0107               	movlb	7	; () banked
 13704   015824  EE20 F01F          	lfsr	2,31
 13705   015828  5107               	movf	see_file@header& (0+255),w,b
 13706   01582A  26D9               	addwf	fsr2l,f,c
 13707   01582C  5108               	movf	(see_file@header+1)& (0+255),w,b
 13708   01582E  22DA               	addwfc	fsr2h,f,c
 13709   015830  50DF               	movf	indf2,w,c
 13710                           
 13711                           ; Switch size 1, requested type "simple"
 13712                           ; Number of cases is 3, Range of values is 0 to 2
 13713                           ; switch strategies available:
 13714                           ; Name         Instructions Cycles
 13715                           ; simple_byte           10     6 (average)
 13716                           ;	Chosen strategy is simple_byte
 13717   015832  0A00               	xorlw	0	; case 0
 13718   015834  B4D8               	btfsc	status,2,c
 13719   015836  EF84  F0AA         	goto	l25309
 13720   01583A  0A01               	xorlw	1	; case 1
 13721   01583C  B4D8               	btfsc	status,2,c
 13722   01583E  EF72  F0AB         	goto	l25339
 13723   015842  0A03               	xorlw	3	; case 2
 13724   015844  B4D8               	btfsc	status,2,c
 13725   015846  EF84  F0AA         	goto	l25309
 13726   01584A  EF27  F0AC         	goto	l25357
 13727   01584E                     l1332:
 13728   01584E                     l25357:
 13729                           
 13730                           ;../src/w65_main.c: 928:  printf("\r\n");
 13731   01584E  0E90               	movlw	low (STR_88+20)
 13732   015850  0105               	movlb	5	; () banked
 13733   015852  6FAD               	movwf	printf@fmt& (0+255),b
 13734   015854  0EFB               	movlw	high (STR_88+20)
 13735   015856  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13736   015858  ECDA  F0FF         	call	_printf	;wreg free
 13737                           
 13738                           ;../src/w65_main.c: 929:  f_close(&rom_fl);
 13739   01585C  0ED6               	movlw	low _rom_fl
 13740   01585E  0106               	movlb	6	; () banked
 13741   015860  6F2F               	movwf	f_close@fp& (0+255),b
 13742   015862  0E0F               	movlw	high _rom_fl
 13743   015864  6F30               	movwf	(f_close@fp+1)& (0+255),b
 13744   015866  ECDB  F0FB         	call	_f_close	;wreg free
 13745   01586A  EF11  F0AA         	goto	l25293
 13746   01586E                     l1329:
 13747   01586E  0012               	return		;funcret
 13748   015870                     __end_of_see_file:
 13749                           	callstack 0
 13750                           
 13751 ;; *************** function _mem_dump *****************
 13752 ;; Defined at:
 13753 ;;		line 850 in file "../src/w65_main.c"
 13754 ;; Parameters:    Size  Location     Type
 13755 ;;		None
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;  addr            4  128[BANK5 ] unsigned long 
 13758 ;;  p               2  126[BANK5 ] PTR unsigned char 
 13759 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 13760 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      enum E17409
 13763 ;; Registers used:
 13764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : 0/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13771 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13774 ;;Total ram usage:        6 bytes
 13775 ;; Hardware stack levels used: 1
 13776 ;; Hardware stack levels required when called: 10
 13777 ;; This function calls:
 13778 ;;		_get_hex
 13779 ;;		_read_sram
 13780 ;;		_util_addrdump
 13781 ;; This function is called by:
 13782 ;;		_main
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text5
 13787   01F370                     __ptext5:
 13788                           	callstack 0
 13789   01F370                     _mem_dump:
 13790                           	callstack 116
 13791   01F370                     
 13792                           ;../src/w65_main.c: 852:  uint32_t addr;;../src/w65_main.c: 853:  char *p;;../src/w65_ma
      +                          in.c: 855:  p = arg[0];
 13793   01F370  C79E  F5DE         	movff	_arg,mem_dump@p
 13794   01F374  C79F  F5DF         	movff	_arg+1,mem_dump@p+1
 13795   01F378                     
 13796                           ;../src/w65_main.c: 856:  addr = get_hex( p );
 13797   01F378  C5DE  F504         	movff	mem_dump@p,get_hex@buf
 13798   01F37C  C5DF  F505         	movff	mem_dump@p+1,get_hex@buf+1
 13799   01F380  EC63  F0E3         	call	_get_hex	;wreg free
 13800   01F384  C504  F5E0         	movff	?_get_hex,mem_dump@addr
 13801   01F388  C505  F5E1         	movff	?_get_hex+1,mem_dump@addr+1
 13802   01F38C  C506  F5E2         	movff	?_get_hex+2,mem_dump@addr+2
 13803   01F390  C507  F5E3         	movff	?_get_hex+3,mem_dump@addr+3
 13804   01F394                     
 13805                           ;../src/w65_main.c: 858:  read_sram(addr, (uint8_t *)&tmp_buf[0][0], 128);
 13806   01F394  C5E0  F504         	movff	mem_dump@addr,read_sram@addr
 13807   01F398  C5E1  F505         	movff	mem_dump@addr+1,read_sram@addr+1
 13808   01F39C  C5E2  F506         	movff	mem_dump@addr+2,read_sram@addr+2
 13809   01F3A0  C5E3  F507         	movff	mem_dump@addr+3,read_sram@addr+3
 13810   01F3A4  0EF8               	movlw	low _tmp_buf
 13811   01F3A6  6E08               	movwf	read_sram@buf^(0+1280),c
 13812   01F3A8  0E13               	movlw	high _tmp_buf
 13813   01F3AA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 13814   01F3AC  0E00               	movlw	0
 13815   01F3AE  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 13816   01F3B0  0E80               	movlw	128
 13817   01F3B2  6E0A               	movwf	read_sram@len^(0+1280),c
 13818   01F3B4  EC0C  F0F2         	call	_read_sram	;wreg free
 13819   01F3B8                     
 13820                           ;../src/w65_main.c: 859:  util_addrdump("Mem ", addr, (const void *)&tmp_buf[0][0], 128)
      +                          ;
 13821   01F3B8  0EA8               	movlw	low STR_132
 13822   01F3BA  0105               	movlb	5	; () banked
 13823   01F3BC  6FBD               	movwf	util_addrdump@header& (0+255),b
 13824   01F3BE  0EFF               	movlw	high STR_132
 13825   01F3C0  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 13826   01F3C2  C5E0  F5BF         	movff	mem_dump@addr,util_addrdump@addr_offs
 13827   01F3C6  C5E1  F5C0         	movff	mem_dump@addr+1,util_addrdump@addr_offs+1
 13828   01F3CA  C5E2  F5C1         	movff	mem_dump@addr+2,util_addrdump@addr_offs+2
 13829   01F3CE  C5E3  F5C2         	movff	mem_dump@addr+3,util_addrdump@addr_offs+3
 13830   01F3D2  0EF8               	movlw	low _tmp_buf
 13831   01F3D4  6FC3               	movwf	util_addrdump@addr& (0+255),b
 13832   01F3D6  0E13               	movlw	high _tmp_buf
 13833   01F3D8  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 13834   01F3DA  0E00               	movlw	0
 13835   01F3DC  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 13836   01F3DE  0E80               	movlw	128
 13837   01F3E0  6FC5               	movwf	util_addrdump@size& (0+255),b
 13838   01F3E2  EC4A  F0E1         	call	_util_addrdump	;wreg free
 13839   01F3E6                     
 13840                           ;../src/w65_main.c: 860:  return FR_OK;
 13841   01F3E6  0E00               	movlw	0
 13842   01F3E8  0012               	return		;funcret
 13843   01F3EA                     __end_of_mem_dump:
 13844                           	callstack 0
 13845                           
 13846 ;; *************** function _mon_prog *****************
 13847 ;; Defined at:
 13848 ;;		line 829 in file "../src/w65_main.c"
 13849 ;; Parameters:    Size  Location     Type
 13850 ;;		None
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;  p               2   22[BANK7 ] PTR unsigned char 
 13853 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 13854 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 13855 ;;  sw              1   25[BANK7 ] unsigned char 
 13856 ;;  rs              1   24[BANK7 ] enum E17409
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  1    wreg      enum E17409
 13859 ;; Registers used:
 13860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;Total ram usage:        4 bytes
 13871 ;; Hardware stack levels used: 1
 13872 ;; Hardware stack levels required when called: 25
 13873 ;; This function calls:
 13874 ;;		_drive_cpu
 13875 ;;		_printf
 13876 ;;		_start_cpu
 13877 ;;		_strstr
 13878 ;;		_write_sram
 13879 ;; This function is called by:
 13880 ;;		_main
 13881 ;; This function uses a non-reentrant model
 13882 ;;
 13883                           
 13884                           	psect	text6
 13885   01D73C                     __ptext6:
 13886                           	callstack 0
 13887   01D73C                     _mon_prog:
 13888                           	callstack 101
 13889   01D73C                     
 13890                           ;../src/w65_main.c: 837:  write_sram(0, &cpu_flg, 1);
 13891   01D73C  0E00               	movlw	0
 13892   01D73E  6E04               	movwf	write_sram@addr^(0+1280),c
 13893   01D740  0E00               	movlw	0
 13894   01D742  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13895   01D744  0E00               	movlw	0
 13896   01D746  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13897   01D748  0E00               	movlw	0
 13898   01D74A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13899   01D74C  0EE5               	movlw	low _cpu_flg
 13900   01D74E  6E08               	movwf	write_sram@buf^(0+1280),c
 13901   01D750  0E07               	movlw	high _cpu_flg
 13902   01D752  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13903   01D754  0E00               	movlw	0
 13904   01D756  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13905   01D758  0E01               	movlw	1
 13906   01D75A  6E0A               	movwf	write_sram@len^(0+1280),c
 13907   01D75C  EC9F  F0E8         	call	_write_sram	;wreg free
 13908   01D760                     
 13909                           ;../src/w65_main.c: 838:  sw = 0;
 13910   01D760  0107               	movlb	7	; () banked
 13911   01D762  6B19               	clrf	mon_prog@sw& (0+255),b
 13912                           
 13913                           ;../src/w65_main.c: 839:  write_sram( fh.load_p+8, &sw, 1 );
 13914   01D764  0E08               	movlw	8
 13915   01D766  0108               	movlb	8	; () banked
 13916   01D768  25B2               	addwf	(_fh+16)& (0+255),w,b
 13917   01D76A  6E04               	movwf	write_sram@addr^(0+1280),c
 13918   01D76C  0E00               	movlw	0
 13919   01D76E  21B3               	addwfc	(_fh+17)& (0+255),w,b
 13920   01D770  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13921   01D772  0E00               	movlw	0
 13922   01D774  21B4               	addwfc	(_fh+18)& (0+255),w,b
 13923   01D776  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13924   01D778  0E00               	movlw	0
 13925   01D77A  21B5               	addwfc	(_fh+19)& (0+255),w,b
 13926   01D77C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13927   01D77E  0E19               	movlw	low mon_prog@sw
 13928   01D780  6E08               	movwf	write_sram@buf^(0+1280),c
 13929   01D782  0E07               	movlw	high mon_prog@sw
 13930   01D784  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13931   01D786  0E00               	movlw	0
 13932   01D788  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13933   01D78A  0E01               	movlw	1
 13934   01D78C  6E0A               	movwf	write_sram@len^(0+1280),c
 13935   01D78E  EC9F  F0E8         	call	_write_sram	;wreg free
 13936                           
 13937                           ;../src/w65_main.c: 841:  if ((p = strstr(arg[0], "W" ))) write_sram(0xFFFC, (uint8_t *)
      +                          &fh.wstart_addr, 2);
 13938   01D792  C79E  F50B         	movff	_arg,strstr@h
 13939   01D796  C79F  F50C         	movff	_arg+1,strstr@h+1
 13940   01D79A  0EC4               	movlw	low (STR_64+3)
 13941   01D79C  6E0D               	movwf	strstr@n^(0+1280),c
 13942   01D79E  0EFF               	movlw	high (STR_64+3)
 13943   01D7A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 13944   01D7A2  ECCF  F0EE         	call	_strstr	;wreg free
 13945   01D7A6  C50B  F716         	movff	?_strstr,mon_prog@p
 13946   01D7AA  C50C  F717         	movff	?_strstr+1,mon_prog@p+1
 13947   01D7AE  0107               	movlb	7	; () banked
 13948   01D7B0  5116               	movf	mon_prog@p& (0+255),w,b
 13949   01D7B2  1117               	iorwf	(mon_prog@p+1)& (0+255),w,b
 13950   01D7B4  B4D8               	btfsc	status,2,c
 13951   01D7B6  EFDF  F0EB         	goto	u35131
 13952   01D7BA  EFE1  F0EB         	goto	u35130
 13953   01D7BE                     u35131:
 13954   01D7BE  EFF5  F0EB         	goto	l25261
 13955   01D7C2                     u35130:
 13956   01D7C2                     
 13957                           ; BSR set to: 7
 13958   01D7C2  0EFC               	movlw	252
 13959   01D7C4  6E04               	movwf	write_sram@addr^(0+1280),c
 13960   01D7C6  0EFF               	movlw	255
 13961   01D7C8  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13962   01D7CA  0E00               	movlw	0
 13963   01D7CC  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13964   01D7CE  0E00               	movlw	0
 13965   01D7D0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13966   01D7D2  0EA6               	movlw	low (_fh+4)
 13967   01D7D4  6E08               	movwf	write_sram@buf^(0+1280),c
 13968   01D7D6  0E08               	movlw	high (_fh+4)
 13969   01D7D8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13970   01D7DA  0E00               	movlw	0
 13971   01D7DC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13972   01D7DE  0E02               	movlw	2
 13973   01D7E0  6E0A               	movwf	write_sram@len^(0+1280),c
 13974   01D7E2  EC9F  F0E8         	call	_write_sram	;wreg free
 13975   01D7E6  EF07  F0EC         	goto	l25263
 13976   01D7EA                     l25261:
 13977                           
 13978                           ; BSR set to: 7
 13979   01D7EA  0EFC               	movlw	252
 13980   01D7EC  6E04               	movwf	write_sram@addr^(0+1280),c
 13981   01D7EE  0EFF               	movlw	255
 13982   01D7F0  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13983   01D7F2  0E00               	movlw	0
 13984   01D7F4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13985   01D7F6  0E00               	movlw	0
 13986   01D7F8  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13987   01D7FA  0EA3               	movlw	low (_fh+1)
 13988   01D7FC  6E08               	movwf	write_sram@buf^(0+1280),c
 13989   01D7FE  0E08               	movlw	high (_fh+1)
 13990   01D800  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13991   01D802  0E00               	movlw	0
 13992   01D804  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13993   01D806  0E02               	movlw	2
 13994   01D808  6E0A               	movwf	write_sram@len^(0+1280),c
 13995   01D80A  EC9F  F0E8         	call	_write_sram	;wreg free
 13996   01D80E                     l25263:
 13997                           
 13998                           ;../src/w65_main.c: 844:  start_cpu();
 13999   01D80E  ECF8  F0FE         	call	_start_cpu	;wreg free
 14000   01D812                     
 14001                           ;../src/w65_main.c: 845:  rs = drive_cpu();
 14002   01D812  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14003   01D816  0107               	movlb	7	; () banked
 14004   01D818  6F18               	movwf	mon_prog@rs& (0+255),b
 14005   01D81A                     
 14006                           ; BSR set to: 7
 14007                           ;../src/w65_main.c: 846:  printf("\r\n");
 14008   01D81A  0E90               	movlw	low (STR_88+20)
 14009   01D81C  0105               	movlb	5	; () banked
 14010   01D81E  6FAD               	movwf	printf@fmt& (0+255),b
 14011   01D820  0EFB               	movlw	high (STR_88+20)
 14012   01D822  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14013   01D824  ECDA  F0FF         	call	_printf	;wreg free
 14014   01D828                     
 14015                           ;../src/w65_main.c: 847:  return rs;
 14016   01D828  0107               	movlb	7	; () banked
 14017   01D82A  5118               	movf	mon_prog@rs& (0+255),w,b
 14018   01D82C                     
 14019                           ; BSR set to: 7
 14020   01D82C  0012               	return		;funcret
 14021   01D82E                     __end_of_mon_prog:
 14022                           	callstack 0
 14023                           
 14024 ;; *************** function _print_reg *****************
 14025 ;; Defined at:
 14026 ;;		line 738 in file "../src/w65_main.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;		None
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;  reg_816         2  100[BANK5 ] PTR struct .
 14031 ;;		 -> tmp_buf(512), 
 14032 ;;  reg_02          2   98[BANK5 ] PTR struct .
 14033 ;;		 -> tmp_buf(512), 
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  1    wreg      enum E17409
 14036 ;; Registers used:
 14037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14044 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14045 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14046 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14047 ;;Total ram usage:        9 bytes
 14048 ;; Hardware stack levels used: 1
 14049 ;; Hardware stack levels required when called: 9
 14050 ;; This function calls:
 14051 ;;		_printf
 14052 ;;		_read_sram
 14053 ;; This function is called by:
 14054 ;;		_main
 14055 ;; This function uses a non-reentrant model
 14056 ;;
 14057                           
 14058                           	psect	text7
 14059   01AFB8                     __ptext7:
 14060                           	callstack 0
 14061   01AFB8                     _print_reg:
 14062                           	callstack 117
 14063   01AFB8                     
 14064                           ;../src/w65_main.c: 739:  reg816 *reg_816;;../src/w65_main.c: 740:  reg02 *reg_02;;../sr
      +                          c/w65_main.c: 742:  read_sram((uint32_t)fh.reg_tblp, &tmp_buf[0][0], (unsigned int)fh.re
      +                          g_tsize);
 14065   01AFB8  C8BC  F504         	movff	_fh+26,read_sram@addr
 14066   01AFBC  C8BD  F505         	movff	_fh+27,read_sram@addr+1
 14067   01AFC0  6A06               	clrf	(read_sram@addr+2)^(0+1280),c
 14068   01AFC2  6A07               	clrf	(read_sram@addr+3)^(0+1280),c
 14069   01AFC4  0EF8               	movlw	low _tmp_buf
 14070   01AFC6  6E08               	movwf	read_sram@buf^(0+1280),c
 14071   01AFC8  0E13               	movlw	high _tmp_buf
 14072   01AFCA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 14073   01AFCC  C8BE  F50A         	movff	_fh+28,read_sram@len
 14074   01AFD0  C8BF  F50B         	movff	_fh+29,read_sram@len+1
 14075   01AFD4  EC0C  F0F2         	call	_read_sram	;wreg free
 14076   01AFD8                     
 14077                           ;../src/w65_main.c: 744:  if (fh.sw_816) {
 14078   01AFD8  0108               	movlb	8	; () banked
 14079   01AFDA  51BA               	movf	(_fh+24)& (0+255),w,b
 14080   01AFDC  B4D8               	btfsc	status,2,c
 14081   01AFDE  EFF3  F0D7         	goto	u35091
 14082   01AFE2  EFF5  F0D7         	goto	u35090
 14083   01AFE6                     u35091:
 14084   01AFE6  EF64  F0D8         	goto	l25187
 14085   01AFEA                     u35090:
 14086   01AFEA                     
 14087                           ; BSR set to: 8
 14088                           ;../src/w65_main.c: 745:   reg_816 = (reg816 *)&tmp_buf[0][0];
 14089   01AFEA  0EF8               	movlw	low _tmp_buf
 14090   01AFEC  0105               	movlb	5	; () banked
 14091   01AFEE  6FC4               	movwf	print_reg@reg_816& (0+255),b
 14092   01AFF0  0E13               	movlw	high _tmp_buf
 14093   01AFF2  6FC5               	movwf	(print_reg@reg_816+1)& (0+255),b
 14094   01AFF4                     
 14095                           ; BSR set to: 5
 14096                           ;../src/w65_main.c: 746:   printf("A=$%04X X=$%04X Y=$%04X SP=$%04X PC=$%04X PSR=$%02X\r
      +                          \n",
 14097   01AFF4  0E8E               	movlw	low STR_111
 14098   01AFF6  6FAD               	movwf	printf@fmt& (0+255),b
 14099   01AFF8  0EF2               	movlw	high STR_111
 14100   01AFFA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14101   01AFFC  C5C4  F4D9         	movff	print_reg@reg_816,fsr2l
 14102   01B000  C5C5  F4DA         	movff	print_reg@reg_816+1,fsr2h
 14103   01B004  C4DE F5AF          	movff	postinc2,?_printf+2
 14104   01B008  C4DD F5B0          	movff	postdec2,?_printf+3
 14105   01B00C  EE20 F002          	lfsr	2,2
 14106   01B010  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14107   01B012  26D9               	addwf	fsr2l,f,c
 14108   01B014  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14109   01B016  22DA               	addwfc	fsr2h,f,c
 14110   01B018  C4DE F5B1          	movff	postinc2,?_printf+4
 14111   01B01C  C4DD F5B2          	movff	postdec2,?_printf+5
 14112   01B020  EE20 F004          	lfsr	2,4
 14113   01B024  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14114   01B026  26D9               	addwf	fsr2l,f,c
 14115   01B028  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14116   01B02A  22DA               	addwfc	fsr2h,f,c
 14117   01B02C  C4DE F5B3          	movff	postinc2,?_printf+6
 14118   01B030  C4DD F5B4          	movff	postdec2,?_printf+7
 14119   01B034  EE20 F006          	lfsr	2,6
 14120   01B038  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14121   01B03A  26D9               	addwf	fsr2l,f,c
 14122   01B03C  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14123   01B03E  22DA               	addwfc	fsr2h,f,c
 14124   01B040  C4DE F5B5          	movff	postinc2,?_printf+8
 14125   01B044  C4DD F5B6          	movff	postdec2,?_printf+9
 14126   01B048  EE20 F008          	lfsr	2,8
 14127   01B04C  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14128   01B04E  26D9               	addwf	fsr2l,f,c
 14129   01B050  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14130   01B052  22DA               	addwfc	fsr2h,f,c
 14131   01B054  C4DE F5B7          	movff	postinc2,?_printf+10
 14132   01B058  C4DD F5B8          	movff	postdec2,?_printf+11
 14133   01B05C  EE20 F00A          	lfsr	2,10
 14134   01B060  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14135   01B062  26D9               	addwf	fsr2l,f,c
 14136   01B064  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14137   01B066  22DA               	addwfc	fsr2h,f,c
 14138   01B068  50DF               	movf	indf2,w,c
 14139   01B06A  6FBD               	movwf	??_print_reg& (0+255),b
 14140   01B06C  51BD               	movf	??_print_reg& (0+255),w,b
 14141   01B06E  6FB9               	movwf	(?_printf+12)& (0+255),b
 14142   01B070  6BBA               	clrf	(?_printf+13)& (0+255),b
 14143   01B072  ECDA  F0FF         	call	_printf	;wreg free
 14144   01B076                     
 14145                           ;../src/w65_main.c: 748:   printf("PBR=$%02X DBR=$%02X DPR=$%04X\r\n",reg_816->REGPB, re
      +                          g_816->REGDB, reg_816->REGDP);
 14146   01B076  0E57               	movlw	low STR_112
 14147   01B078  0105               	movlb	5	; () banked
 14148   01B07A  6FAD               	movwf	printf@fmt& (0+255),b
 14149   01B07C  0EF8               	movlw	high STR_112
 14150   01B07E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14151   01B080  EE20 F00B          	lfsr	2,11
 14152   01B084  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14153   01B086  26D9               	addwf	fsr2l,f,c
 14154   01B088  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14155   01B08A  22DA               	addwfc	fsr2h,f,c
 14156   01B08C  50DF               	movf	indf2,w,c
 14157   01B08E  6FBD               	movwf	??_print_reg& (0+255),b
 14158   01B090  51BD               	movf	??_print_reg& (0+255),w,b
 14159   01B092  6FAF               	movwf	(?_printf+2)& (0+255),b
 14160   01B094  6BB0               	clrf	(?_printf+3)& (0+255),b
 14161   01B096  EE20 F00C          	lfsr	2,12
 14162   01B09A  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14163   01B09C  26D9               	addwf	fsr2l,f,c
 14164   01B09E  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14165   01B0A0  22DA               	addwfc	fsr2h,f,c
 14166   01B0A2  50DF               	movf	indf2,w,c
 14167   01B0A4  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 14168   01B0A6  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 14169   01B0A8  6FB1               	movwf	(?_printf+4)& (0+255),b
 14170   01B0AA  6BB2               	clrf	(?_printf+5)& (0+255),b
 14171   01B0AC  EE20 F00D          	lfsr	2,13
 14172   01B0B0  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14173   01B0B2  26D9               	addwf	fsr2l,f,c
 14174   01B0B4  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14175   01B0B6  22DA               	addwfc	fsr2h,f,c
 14176   01B0B8  C4DE F5B3          	movff	postinc2,?_printf+6
 14177   01B0BC  C4DD F5B4          	movff	postdec2,?_printf+7
 14178   01B0C0  ECDA  F0FF         	call	_printf	;wreg free
 14179                           
 14180                           ;../src/w65_main.c: 749:  }
 14181   01B0C4  EFAE  F0D8         	goto	l25191
 14182   01B0C8                     l25187:
 14183                           
 14184                           ; BSR set to: 8
 14185                           ;../src/w65_main.c: 751:   reg_02 = (reg02 *)&tmp_buf[0][0];
 14186   01B0C8  0EF8               	movlw	low _tmp_buf
 14187   01B0CA  0105               	movlb	5	; () banked
 14188   01B0CC  6FC2               	movwf	print_reg@reg_02& (0+255),b
 14189   01B0CE  0E13               	movlw	high _tmp_buf
 14190   01B0D0  6FC3               	movwf	(print_reg@reg_02+1)& (0+255),b
 14191   01B0D2                     
 14192                           ; BSR set to: 5
 14193                           ;../src/w65_main.c: 752:   printf("A=$%02X X=$%02X Y=$%02X SP=$01%02X PC=$%04X PSR=$%02X
      +                          \r\n",
 14194   01B0D2  0E1F               	movlw	low STR_113
 14195   01B0D4  6FAD               	movwf	printf@fmt& (0+255),b
 14196   01B0D6  0EF2               	movlw	high STR_113
 14197   01B0D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14198   01B0DA  C5C2  F4D9         	movff	print_reg@reg_02,fsr2l
 14199   01B0DE  C5C3  F4DA         	movff	print_reg@reg_02+1,fsr2h
 14200   01B0E2  50DF               	movf	indf2,w,c
 14201   01B0E4  6FBD               	movwf	??_print_reg& (0+255),b
 14202   01B0E6  51BD               	movf	??_print_reg& (0+255),w,b
 14203   01B0E8  6FAF               	movwf	(?_printf+2)& (0+255),b
 14204   01B0EA  6BB0               	clrf	(?_printf+3)& (0+255),b
 14205   01B0EC  EE20 F001          	lfsr	2,1
 14206   01B0F0  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14207   01B0F2  26D9               	addwf	fsr2l,f,c
 14208   01B0F4  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14209   01B0F6  22DA               	addwfc	fsr2h,f,c
 14210   01B0F8  50DF               	movf	indf2,w,c
 14211   01B0FA  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 14212   01B0FC  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 14213   01B0FE  6FB1               	movwf	(?_printf+4)& (0+255),b
 14214   01B100  6BB2               	clrf	(?_printf+5)& (0+255),b
 14215   01B102  EE20 F002          	lfsr	2,2
 14216   01B106  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14217   01B108  26D9               	addwf	fsr2l,f,c
 14218   01B10A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14219   01B10C  22DA               	addwfc	fsr2h,f,c
 14220   01B10E  50DF               	movf	indf2,w,c
 14221   01B110  6FBF               	movwf	(??_print_reg+2)& (0+255),b
 14222   01B112  51BF               	movf	(??_print_reg+2)& (0+255),w,b
 14223   01B114  6FB3               	movwf	(?_printf+6)& (0+255),b
 14224   01B116  6BB4               	clrf	(?_printf+7)& (0+255),b
 14225   01B118  EE20 F003          	lfsr	2,3
 14226   01B11C  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14227   01B11E  26D9               	addwf	fsr2l,f,c
 14228   01B120  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14229   01B122  22DA               	addwfc	fsr2h,f,c
 14230   01B124  50DF               	movf	indf2,w,c
 14231   01B126  6FC0               	movwf	(??_print_reg+3)& (0+255),b
 14232   01B128  51C0               	movf	(??_print_reg+3)& (0+255),w,b
 14233   01B12A  6FB5               	movwf	(?_printf+8)& (0+255),b
 14234   01B12C  6BB6               	clrf	(?_printf+9)& (0+255),b
 14235   01B12E  EE20 F004          	lfsr	2,4
 14236   01B132  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14237   01B134  26D9               	addwf	fsr2l,f,c
 14238   01B136  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14239   01B138  22DA               	addwfc	fsr2h,f,c
 14240   01B13A  C4DE F5B7          	movff	postinc2,?_printf+10
 14241   01B13E  C4DD F5B8          	movff	postdec2,?_printf+11
 14242   01B142  EE20 F006          	lfsr	2,6
 14243   01B146  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14244   01B148  26D9               	addwf	fsr2l,f,c
 14245   01B14A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14246   01B14C  22DA               	addwfc	fsr2h,f,c
 14247   01B14E  50DF               	movf	indf2,w,c
 14248   01B150  6FC1               	movwf	(??_print_reg+4)& (0+255),b
 14249   01B152  51C1               	movf	(??_print_reg+4)& (0+255),w,b
 14250   01B154  6FB9               	movwf	(?_printf+12)& (0+255),b
 14251   01B156  6BBA               	clrf	(?_printf+13)& (0+255),b
 14252   01B158  ECDA  F0FF         	call	_printf	;wreg free
 14253   01B15C                     l25191:
 14254                           
 14255                           ;../src/w65_main.c: 755:  return FR_OK;
 14256   01B15C  0E00               	movlw	0
 14257   01B15E  0012               	return		;funcret
 14258   01B160                     __end_of_print_reg:
 14259                           	callstack 0
 14260                           
 14261 ;; *************** function _return_cpu *****************
 14262 ;; Defined at:
 14263 ;;		line 727 in file "../src/w65_main.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;		None
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;  rs              1   22[BANK7 ] enum E17409
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      enum E17409
 14270 ;; Registers used:
 14271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;Total ram usage:        1 bytes
 14282 ;; Hardware stack levels used: 1
 14283 ;; Hardware stack levels required when called: 25
 14284 ;; This function calls:
 14285 ;;		_continue_action
 14286 ;;		_drive_cpu
 14287 ;; This function is called by:
 14288 ;;		_main
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text8
 14293   00022E                     __ptext8:
 14294                           	callstack 0
 14295   00022E                     _return_cpu:
 14296                           	callstack 101
 14297   00022E                     
 14298                           ;../src/w65_main.c: 729:  FRESULT rs;;../src/w65_main.c: 731:  continue_action();
 14299   00022E  EC96  F0FD         	call	_continue_action	;wreg free
 14300   000232                     
 14301                           ;../src/w65_main.c: 732:  rs = drive_cpu();
 14302   000232  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14303   000236  0107               	movlb	7	; () banked
 14304   000238  6F16               	movwf	return_cpu@rs& (0+255),b
 14305   00023A                     
 14306                           ; BSR set to: 7
 14307                           ;../src/w65_main.c: 733:  return rs;
 14308   00023A  5116               	movf	return_cpu@rs& (0+255),w,b
 14309   00023C                     
 14310                           ; BSR set to: 7
 14311   00023C  0012               	return		;funcret
 14312   00023E                     __end_of_return_cpu:
 14313                           	callstack 0
 14314                           
 14315 ;; *************** function _restart_prog *****************
 14316 ;; Defined at:
 14317 ;;		line 811 in file "../src/w65_main.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;		None
 14320 ;; Auto vars:     Size  Location     Type
 14321 ;;  rs              1   22[BANK7 ] enum E17409
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  1    wreg      enum E17409
 14324 ;; Registers used:
 14325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14326 ;; Tracked objects:
 14327 ;;		On entry : 0/0
 14328 ;;		On exit  : 0/0
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14332 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14335 ;;Total ram usage:        1 bytes
 14336 ;; Hardware stack levels used: 1
 14337 ;; Hardware stack levels required when called: 25
 14338 ;; This function calls:
 14339 ;;		_drive_cpu
 14340 ;;		_start_cpu
 14341 ;;		_write_sram
 14342 ;; This function is called by:
 14343 ;;		_main
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           	psect	text9
 14348   01E9AC                     __ptext9:
 14349                           	callstack 0
 14350   01E9AC                     _restart_prog:
 14351                           	callstack 101
 14352   01E9AC                     
 14353                           ;../src/w65_main.c: 812:  FRESULT rs;;../src/w65_main.c: 814:  rs = FR_NO_FILE;
 14354   01E9AC  0E04               	movlw	4
 14355   01E9AE  0107               	movlb	7	; () banked
 14356   01E9B0  6F16               	movwf	restart_prog@rs& (0+255),b
 14357   01E9B2                     
 14358                           ; BSR set to: 7
 14359                           ;../src/w65_main.c: 815:  if ( binv.sw ==1 ) {
 14360   01E9B2  0108               	movlb	8	; () banked
 14361   01E9B4  0578               	decf	_binv& (0+255),w,b
 14362   01E9B6  A4D8               	btfss	status,2,c
 14363   01E9B8  EFE0  F0F4         	goto	u35121
 14364   01E9BC  EFE2  F0F4         	goto	u35120
 14365   01E9C0                     u35121:
 14366   01E9C0  EF27  F0F5         	goto	l25249
 14367   01E9C4                     u35120:
 14368   01E9C4                     
 14369                           ; BSR set to: 8
 14370                           ;../src/w65_main.c: 817:   write_sram(0, &cpu_flg, 1);
 14371   01E9C4  0E00               	movlw	0
 14372   01E9C6  6E04               	movwf	write_sram@addr^(0+1280),c
 14373   01E9C8  0E00               	movlw	0
 14374   01E9CA  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14375   01E9CC  0E00               	movlw	0
 14376   01E9CE  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14377   01E9D0  0E00               	movlw	0
 14378   01E9D2  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14379   01E9D4  0EE5               	movlw	low _cpu_flg
 14380   01E9D6  6E08               	movwf	write_sram@buf^(0+1280),c
 14381   01E9D8  0E07               	movlw	high _cpu_flg
 14382   01E9DA  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14383   01E9DC  0E00               	movlw	0
 14384   01E9DE  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14385   01E9E0  0E01               	movlw	1
 14386   01E9E2  6E0A               	movwf	write_sram@len^(0+1280),c
 14387   01E9E4  EC9F  F0E8         	call	_write_sram	;wreg free
 14388   01E9E8                     
 14389                           ;../src/w65_main.c: 819:   binv.addr = binv.caddr;
 14390   01E9E8  C87F  F879         	movff	_binv+7,_binv+1
 14391   01E9EC  C880  F87A         	movff	_binv+8,_binv+2
 14392                           
 14393                           ;../src/w65_main.c: 820:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 14394   01E9F0  0E08               	movlw	8
 14395   01E9F2  0108               	movlb	8	; () banked
 14396   01E9F4  25B2               	addwf	(_fh+16)& (0+255),w,b
 14397   01E9F6  6E04               	movwf	write_sram@addr^(0+1280),c
 14398   01E9F8  0E00               	movlw	0
 14399   01E9FA  21B3               	addwfc	(_fh+17)& (0+255),w,b
 14400   01E9FC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14401   01E9FE  0E00               	movlw	0
 14402   01EA00  21B4               	addwfc	(_fh+18)& (0+255),w,b
 14403   01EA02  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14404   01EA04  0E00               	movlw	0
 14405   01EA06  21B5               	addwfc	(_fh+19)& (0+255),w,b
 14406   01EA08  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14407   01EA0A  0E78               	movlw	low _binv
 14408   01EA0C  6E08               	movwf	write_sram@buf^(0+1280),c
 14409   01EA0E  0E08               	movlw	high _binv
 14410   01EA10  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14411   01EA12  0E00               	movlw	0
 14412   01EA14  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14413   01EA16  0E07               	movlw	7
 14414   01EA18  6E0A               	movwf	write_sram@len^(0+1280),c
 14415   01EA1A  EC9F  F0E8         	call	_write_sram	;wreg free
 14416                           
 14417                           ;../src/w65_main.c: 822:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 14418   01EA1E  0EFC               	movlw	252
 14419   01EA20  6E04               	movwf	write_sram@addr^(0+1280),c
 14420   01EA22  0EFF               	movlw	255
 14421   01EA24  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14422   01EA26  0E00               	movlw	0
 14423   01EA28  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14424   01EA2A  0E00               	movlw	0
 14425   01EA2C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14426   01EA2E  0EA3               	movlw	low (_fh+1)
 14427   01EA30  6E08               	movwf	write_sram@buf^(0+1280),c
 14428   01EA32  0E08               	movlw	high (_fh+1)
 14429   01EA34  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14430   01EA36  0E00               	movlw	0
 14431   01EA38  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14432   01EA3A  0E02               	movlw	2
 14433   01EA3C  6E0A               	movwf	write_sram@len^(0+1280),c
 14434   01EA3E  EC9F  F0E8         	call	_write_sram	;wreg free
 14435   01EA42                     
 14436                           ;../src/w65_main.c: 823:   start_cpu();
 14437   01EA42  ECF8  F0FE         	call	_start_cpu	;wreg free
 14438   01EA46                     
 14439                           ;../src/w65_main.c: 824:   rs = drive_cpu();
 14440   01EA46  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14441   01EA4A  0107               	movlb	7	; () banked
 14442   01EA4C  6F16               	movwf	restart_prog@rs& (0+255),b
 14443   01EA4E                     l25249:
 14444                           
 14445                           ;../src/w65_main.c: 826:  return rs;
 14446   01EA4E  0107               	movlb	7	; () banked
 14447   01EA50  5116               	movf	restart_prog@rs& (0+255),w,b
 14448   01EA52                     
 14449                           ; BSR set to: 7
 14450   01EA52  0012               	return		;funcret
 14451   01EA54                     __end_of_restart_prog:
 14452                           	callstack 0
 14453                           
 14454 ;; *************** function _load_file *****************
 14455 ;; Defined at:
 14456 ;;		line 776 in file "../src/w65_main.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;		None
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  p               2   21[BANK7 ] PTR unsigned char 
 14461 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 14462 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 14463 ;; Return value:  Size  Location     Type
 14464 ;;                  1    wreg      enum E17409
 14465 ;; Registers used:
 14466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14467 ;; Tracked objects:
 14468 ;;		On entry : 0/0
 14469 ;;		On exit  : 0/0
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14475 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14476 ;;Total ram usage:        2 bytes
 14477 ;; Hardware stack levels used: 1
 14478 ;; Hardware stack levels required when called: 21
 14479 ;; This function calls:
 14480 ;;		_get_hex
 14481 ;;		_load_program
 14482 ;;		_strstr
 14483 ;; This function is called by:
 14484 ;;		_main
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488                           	psect	text10
 14489   01ED78                     __ptext10:
 14490                           	callstack 0
 14491   01ED78                     _load_file:
 14492                           	callstack 105
 14493   01ED78                     
 14494                           ;../src/w65_main.c: 777:  char *p;;../src/w65_main.c: 779:  load_flg = 1;
 14495   01ED78  0E01               	movlw	1
 14496   01ED7A  0107               	movlb	7	; () banked
 14497   01ED7C  6FC9               	movwf	_load_flg& (0+255),b
 14498   01ED7E                     
 14499                           ; BSR set to: 7
 14500                           ;../src/w65_main.c: 780:  if ((p = strstr(arg[0], "L=" ))) {
 14501   01ED7E  C79E  F50B         	movff	_arg,strstr@h
 14502   01ED82  C79F  F50C         	movff	_arg+1,strstr@h+1
 14503   01ED86  0EF0               	movlw	low STR_127
 14504   01ED88  6E0D               	movwf	strstr@n^(0+1280),c
 14505   01ED8A  0EFF               	movlw	high STR_127
 14506   01ED8C  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 14507   01ED8E  ECCF  F0EE         	call	_strstr	;wreg free
 14508   01ED92  C50B  F715         	movff	?_strstr,load_file@p
 14509   01ED96  C50C  F716         	movff	?_strstr+1,load_file@p+1
 14510   01ED9A  0107               	movlb	7	; () banked
 14511   01ED9C  5115               	movf	load_file@p& (0+255),w,b
 14512   01ED9E  1116               	iorwf	(load_file@p+1)& (0+255),w,b
 14513   01EDA0  B4D8               	btfsc	status,2,c
 14514   01EDA2  EFD5  F0F6         	goto	u35101
 14515   01EDA6  EFD7  F0F6         	goto	u35100
 14516   01EDAA                     u35101:
 14517   01EDAA  EFEF  F0F6         	goto	l25209
 14518   01EDAE                     u35100:
 14519   01EDAE                     
 14520                           ; BSR set to: 7
 14521                           ;../src/w65_main.c: 781:   raw_addr = get_hex((char *)(p+2));
 14522   01EDAE  0E02               	movlw	2
 14523   01EDB0  2515               	addwf	load_file@p& (0+255),w,b
 14524   01EDB2  6E04               	movwf	get_hex@buf^(0+1280),c
 14525   01EDB4  0E00               	movlw	0
 14526   01EDB6  2116               	addwfc	(load_file@p+1)& (0+255),w,b
 14527   01EDB8  6E05               	movwf	(get_hex@buf+1)^(0+1280),c
 14528   01EDBA  EC63  F0E3         	call	_get_hex	;wreg free
 14529   01EDBE  C504  F7AD         	movff	?_get_hex,_raw_addr
 14530   01EDC2  C505  F7AE         	movff	?_get_hex+1,_raw_addr+1
 14531   01EDC6  C506  F7AF         	movff	?_get_hex+2,_raw_addr+2
 14532   01EDCA  C507  F7B0         	movff	?_get_hex+3,_raw_addr+3
 14533   01EDCE                     
 14534                           ;../src/w65_main.c: 782:   load_program((uint8_t *)arg[1]);
 14535   01EDCE  C7A0  F700         	movff	_arg+2,load_program@fname
 14536   01EDD2  C7A1  F701         	movff	_arg+3,load_program@fname+1
 14537   01EDD6  EC86  F0AE         	call	_load_program	;wreg free
 14538                           
 14539                           ;../src/w65_main.c: 783:  }
 14540   01EDDA  EFFD  F0F6         	goto	l25213
 14541   01EDDE                     l25209:
 14542                           
 14543                           ; BSR set to: 7
 14544                           ;../src/w65_main.c: 785:   raw_addr = 0;
 14545   01EDDE  0E00               	movlw	0
 14546   01EDE0  6FAD               	movwf	_raw_addr& (0+255),b
 14547   01EDE2  0E00               	movlw	0
 14548   01EDE4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 14549   01EDE6  0E00               	movlw	0
 14550   01EDE8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 14551   01EDEA  0E00               	movlw	0
 14552   01EDEC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 14553   01EDEE                     
 14554                           ; BSR set to: 7
 14555                           ;../src/w65_main.c: 786:   load_program((uint8_t *)arg[0]);
 14556   01EDEE  C79E  F700         	movff	_arg,load_program@fname
 14557   01EDF2  C79F  F701         	movff	_arg+1,load_program@fname+1
 14558   01EDF6  EC86  F0AE         	call	_load_program	;wreg free
 14559   01EDFA                     l25213:
 14560                           
 14561                           ;../src/w65_main.c: 788:  load_flg = 0;
 14562   01EDFA  0107               	movlb	7	; () banked
 14563   01EDFC  6BC9               	clrf	_load_flg& (0+255),b
 14564   01EDFE                     
 14565                           ; BSR set to: 7
 14566                           ;../src/w65_main.c: 789:  raw_addr = 0;
 14567   01EDFE  0E00               	movlw	0
 14568   01EE00  6FAD               	movwf	_raw_addr& (0+255),b
 14569   01EE02  0E00               	movlw	0
 14570   01EE04  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 14571   01EE06  0E00               	movlw	0
 14572   01EE08  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 14573   01EE0A  0E00               	movlw	0
 14574   01EE0C  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 14575   01EE0E                     
 14576                           ; BSR set to: 7
 14577                           ;../src/w65_main.c: 790:  return FR_OK;
 14578   01EE0E  0E00               	movlw	0
 14579   01EE10                     
 14580                           ; BSR set to: 7
 14581   01EE10  0012               	return		;funcret
 14582   01EE12                     __end_of_load_file:
 14583                           	callstack 0
 14584                           
 14585 ;; *************** function _change_directory *****************
 14586 ;; Defined at:
 14587 ;;		line 736 in file "../src/w65_main.c"
 14588 ;; Parameters:    Size  Location     Type
 14589 ;;		None
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;		None
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      enum E17409
 14594 ;; Registers used:
 14595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;Total ram usage:        0 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; Hardware stack levels required when called: 20
 14608 ;; This function calls:
 14609 ;;		_f_chdir
 14610 ;; This function is called by:
 14611 ;;		_main
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           	psect	text11
 14616   00023E                     __ptext11:
 14617                           	callstack 0
 14618   00023E                     _change_directory:
 14619                           	callstack 106
 14620   00023E  C79E  F6AF         	movff	_arg,f_chdir@path
 14621   000242  C79F  F6B0         	movff	_arg+1,f_chdir@path+1
 14622   000246  EC17  F0EC         	call	_f_chdir	;wreg free
 14623   00024A  0012               	return		;funcret
 14624   00024C                     __end_of_change_directory:
 14625                           	callstack 0
 14626                           
 14627 ;; *************** function _scan_files1 *****************
 14628 ;; Defined at:
 14629 ;;		line 542 in file "../src/w65_main.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;		None
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  dir            40  105[BANK7 ] struct .
 14634 ;;  fno            22   83[BANK7 ] struct .
 14635 ;;  path            2   81[BANK7 ] PTR unsigned char 
 14636 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 14637 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 14638 ;;  p               2   78[BANK7 ] PTR unsigned char 
 14639 ;;		 -> tmp_buf(512), 
 14640 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 14641 ;;		 -> fno$fname(13), scan_files@fno(22), 
 14642 ;;  res             1   80[BANK7 ] enum E17409
 14643 ;;  fcnt            1   77[BANK7 ] unsigned char 
 14644 ;; Return value:  Size  Location     Type
 14645 ;;                  1    wreg      enum E17409
 14646 ;; Registers used:
 14647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14648 ;; Tracked objects:
 14649 ;;		On entry : 0/0
 14650 ;;		On exit  : 0/0
 14651 ;;		Unchanged: 0/0
 14652 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;      Locals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14656 ;;      Totals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14657 ;;Total ram usage:       70 bytes
 14658 ;; Hardware stack levels used: 1
 14659 ;; Hardware stack levels required when called: 20
 14660 ;; This function calls:
 14661 ;;		_f_close
 14662 ;;		_f_closedir
 14663 ;;		_f_getcwd
 14664 ;;		_f_open
 14665 ;;		_f_opendir
 14666 ;;		_f_readdir
 14667 ;;		_printf
 14668 ;; This function is called by:
 14669 ;;		_main
 14670 ;; This function uses a non-reentrant model
 14671 ;;
 14672                           
 14673                           	psect	text12
 14674   019606                     __ptext12:
 14675                           	callstack 0
 14676   019606                     _scan_files1:
 14677                           	callstack 106
 14678   019606                     
 14679                           ;../src/w65_main.c: 543:  FRESULT res;;../src/w65_main.c: 544:  FILINFO fno;;../src/w65_
      +                          main.c: 545:  DIR dir;;../src/w65_main.c: 546:  uint8_t fcnt;;../src/w65_main.c: 548:  c
      +                          har *fn, *p, *path;;../src/w65_main.c: 550:  path = arg[0];
 14680   019606  C79E  F751         	movff	_arg,scan_files1@path
 14681   01960A  C79F  F752         	movff	_arg+1,scan_files1@path+1
 14682   01960E                     
 14683                           ;../src/w65_main.c: 551:  fcnt = 0;
 14684   01960E  0107               	movlb	7	; () banked
 14685   019610  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 14686   019612                     
 14687                           ; BSR set to: 7
 14688                           ;../src/w65_main.c: 553:  res = f_opendir(&dir, path);
 14689   019612  0E69               	movlw	low scan_files1@dir
 14690   019614  0106               	movlb	6	; () banked
 14691   019616  6FAF               	movwf	f_opendir@dp& (0+255),b
 14692   019618  0E07               	movlw	high scan_files1@dir
 14693   01961A  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 14694   01961C  C751  F6B1         	movff	scan_files1@path,f_opendir@path
 14695   019620  C752  F6B2         	movff	scan_files1@path+1,f_opendir@path+1
 14696   019624  EC14  F0DF         	call	_f_opendir	;wreg free
 14697   019628  0107               	movlb	7	; () banked
 14698   01962A  6F50               	movwf	scan_files1@res& (0+255),b
 14699   01962C                     
 14700                           ; BSR set to: 7
 14701                           ;../src/w65_main.c: 554:  if (res == FR_OK) {
 14702   01962C  5150               	movf	scan_files1@res& (0+255),w,b
 14703   01962E  A4D8               	btfss	status,2,c
 14704   019630  EF1C  F0CB         	goto	u34791
 14705   019634  EF1E  F0CB         	goto	u34790
 14706   019638                     u34791:
 14707   019638  EFF9  F0CB         	goto	l25027
 14708   01963C                     u34790:
 14709   01963C                     
 14710                           ; BSR set to: 7
 14711                           ;../src/w65_main.c: 555:   p = (char *)&tmp_buf[0][0];
 14712   01963C  0EF8               	movlw	low _tmp_buf
 14713   01963E  6F4E               	movwf	scan_files1@p& (0+255),b
 14714   019640  0E13               	movlw	high _tmp_buf
 14715   019642  6F4F               	movwf	(scan_files1@p+1)& (0+255),b
 14716   019644                     
 14717                           ; BSR set to: 7
 14718                           ;../src/w65_main.c: 556:   f_getcwd( p, 256);
 14719   019644  C74E  F6AF         	movff	scan_files1@p,f_getcwd@buff
 14720   019648  C74F  F6B0         	movff	scan_files1@p+1,f_getcwd@buff+1
 14721   01964C  0E01               	movlw	1
 14722   01964E  0106               	movlb	6	; () banked
 14723   019650  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 14724   019652  0E00               	movlw	0
 14725   019654  6FB1               	movwf	f_getcwd@len& (0+255),b
 14726   019656  EC93  F0A7         	call	_f_getcwd	;wreg free
 14727   01965A                     
 14728                           ;../src/w65_main.c: 557:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 14729   01965A  C751  F4F6         	movff	scan_files1@path,tblptrl
 14730   01965E  C752  F4F7         	movff	scan_files1@path+1,tblptrh
 14731   019662  0E00               	movlw	low (__mediumconst shr (0+16))
 14732   019664  6EF8               	movwf	tblptru,c
 14733   019666  0E25               	movlw	(high __ramtop+-1)
 14734   019668  64F7               	cpfsgt	tblptrh,c
 14735   01966A  D003               	bra	u34807
 14736   01966C  0008               	tblrd		*
 14737   01966E  50F5               	movf	tablat,w,c
 14738   019670  D005               	bra	u34800
 14739   019672                     u34807:
 14740   019672  C4F6 F4E9          	movff	tblptrl,fsr0l
 14741   019676  C4F7 F4EA          	movff	tblptrh,fsr0h
 14742   01967A  50EF               	movf	indf0,w,c
 14743   01967C                     u34800:
 14744   01967C  0900               	iorlw	0
 14745   01967E  A4D8               	btfss	status,2,c
 14746   019680  EF44  F0CB         	goto	u34811
 14747   019684  EF46  F0CB         	goto	u34810
 14748   019688                     u34811:
 14749   019688  EF53  F0CB         	goto	l24989
 14750   01968C                     u34810:
 14751   01968C  0E1E               	movlw	low STR_92
 14752   01968E  0105               	movlb	5	; () banked
 14753   019690  6FAD               	movwf	printf@fmt& (0+255),b
 14754   019692  0EFF               	movlw	high STR_92
 14755   019694  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14756   019696  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 14757   01969A  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 14758   01969E  ECDA  F0FF         	call	_printf	;wreg free
 14759   0196A2  EF7E  F0CB         	goto	l24995
 14760   0196A6                     l24989:
 14761   0196A6  0107               	movlb	7	; () banked
 14762   0196A8  EE20 F001          	lfsr	2,1
 14763   0196AC  514E               	movf	scan_files1@p& (0+255),w,b
 14764   0196AE  26D9               	addwf	fsr2l,f,c
 14765   0196B0  514F               	movf	(scan_files1@p+1)& (0+255),w,b
 14766   0196B2  22DA               	addwfc	fsr2h,f,c
 14767   0196B4  50DF               	movf	indf2,w,c
 14768   0196B6  A4D8               	btfss	status,2,c
 14769   0196B8  EF60  F0CB         	goto	u34821
 14770   0196BC  EF62  F0CB         	goto	u34820
 14771   0196C0                     u34821:
 14772   0196C0  EF6F  F0CB         	goto	l24993
 14773   0196C4                     u34820:
 14774   0196C4                     
 14775                           ; BSR set to: 7
 14776   0196C4  0EEE               	movlw	low STR_93
 14777   0196C6  0105               	movlb	5	; () banked
 14778   0196C8  6FAD               	movwf	printf@fmt& (0+255),b
 14779   0196CA  0EFE               	movlw	high STR_93
 14780   0196CC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14781   0196CE  C751  F5AF         	movff	scan_files1@path,?_printf+2
 14782   0196D2  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 14783   0196D6  ECDA  F0FF         	call	_printf	;wreg free
 14784   0196DA  EF7E  F0CB         	goto	l24995
 14785   0196DE                     l24993:
 14786                           
 14787                           ; BSR set to: 7
 14788   0196DE  0E94               	movlw	low STR_94
 14789   0196E0  0105               	movlb	5	; () banked
 14790   0196E2  6FAD               	movwf	printf@fmt& (0+255),b
 14791   0196E4  0EFE               	movlw	high STR_94
 14792   0196E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14793   0196E8  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 14794   0196EC  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 14795   0196F0  C751  F5B1         	movff	scan_files1@path,?_printf+4
 14796   0196F4  C752  F5B2         	movff	scan_files1@path+1,?_printf+5
 14797   0196F8  ECDA  F0FF         	call	_printf	;wreg free
 14798   0196FC                     l24995:
 14799                           
 14800                           ;../src/w65_main.c: 562:    res = f_readdir(&dir, &fno);
 14801   0196FC  0E69               	movlw	low scan_files1@dir
 14802   0196FE  0106               	movlb	6	; () banked
 14803   019700  6F89               	movwf	f_readdir@dp& (0+255),b
 14804   019702  0E07               	movlw	high scan_files1@dir
 14805   019704  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 14806   019706  0E53               	movlw	low scan_files1@fno
 14807   019708  6F8B               	movwf	f_readdir@fno& (0+255),b
 14808   01970A  0E07               	movlw	high scan_files1@fno
 14809   01970C  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 14810   01970E  EC7B  F0ED         	call	_f_readdir	;wreg free
 14811   019712  0107               	movlb	7	; () banked
 14812   019714  6F50               	movwf	scan_files1@res& (0+255),b
 14813   019716                     
 14814                           ; BSR set to: 7
 14815                           ;../src/w65_main.c: 563:    if (res != FR_OK || fno.fname[0] == 0) {
 14816   019716  5150               	movf	scan_files1@res& (0+255),w,b
 14817   019718  A4D8               	btfss	status,2,c
 14818   01971A  EF91  F0CB         	goto	u34831
 14819   01971E  EF93  F0CB         	goto	u34830
 14820   019722                     u34831:
 14821   019722  EF9B  F0CB         	goto	l25001
 14822   019726                     u34830:
 14823   019726                     
 14824                           ; BSR set to: 7
 14825   019726  515C               	movf	(scan_files1@fno+9)& (0+255),w,b
 14826   019728  A4D8               	btfss	status,2,c
 14827   01972A  EF99  F0CB         	goto	u34841
 14828   01972E  EF9B  F0CB         	goto	u34840
 14829   019732                     u34841:
 14830   019732  EFAC  F0CB         	goto	l25005
 14831   019736                     u34840:
 14832   019736                     l25001:
 14833                           
 14834                           ; BSR set to: 7
 14835                           ;../src/w65_main.c: 564:     if ( fcnt ) {
 14836   019736  514D               	movf	scan_files1@fcnt& (0+255),w,b
 14837   019738  B4D8               	btfsc	status,2,c
 14838   01973A  EFA1  F0CB         	goto	u34851
 14839   01973E  EFA3  F0CB         	goto	u34850
 14840   019742                     u34851:
 14841   019742  EFAC  F0CB         	goto	l25005
 14842   019746                     u34850:
 14843   019746                     
 14844                           ; BSR set to: 7
 14845                           ;../src/w65_main.c: 565:      printf("\r\n");
 14846   019746  0E90               	movlw	low (STR_88+20)
 14847   019748  0105               	movlb	5	; () banked
 14848   01974A  6FAD               	movwf	printf@fmt& (0+255),b
 14849   01974C  0EFB               	movlw	high (STR_88+20)
 14850   01974E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14851   019750  ECDA  F0FF         	call	_printf	;wreg free
 14852                           
 14853                           ;../src/w65_main.c: 566:      break;
 14854   019754  EFF0  F0CB         	goto	l25025
 14855   019758                     l25005:
 14856                           
 14857                           ; BSR set to: 7
 14858                           ;../src/w65_main.c: 569:    if (fno.fname[0] == '.') continue;
 14859   019758  0E2E               	movlw	46
 14860   01975A  195C               	xorwf	(scan_files1@fno+9)& (0+255),w,b
 14861   01975C  A4D8               	btfss	status,2,c
 14862   01975E  EFB3  F0CB         	goto	u34861
 14863   019762  EFB5  F0CB         	goto	u34860
 14864   019766                     u34861:
 14865   019766  EFB7  F0CB         	goto	l25009
 14866   01976A                     u34860:
 14867   01976A  EF7E  F0CB         	goto	l24995
 14868   01976E                     l25009:
 14869                           
 14870                           ; BSR set to: 7
 14871                           ;../src/w65_main.c: 570:    fn = fno.fname;
 14872   01976E  0E5C               	movlw	low (scan_files1@fno+9)
 14873   019770  6F4B               	movwf	scan_files1@fn& (0+255),b
 14874   019772  0E07               	movlw	high (scan_files1@fno+9)
 14875   019774  6F4C               	movwf	(scan_files1@fn+1)& (0+255),b
 14876   019776                     
 14877                           ; BSR set to: 7
 14878                           ;../src/w65_main.c: 571:    if (fno.fattrib & 0x10) {
 14879   019776  A95B               	btfss	(scan_files1@fno+8)& (0+255),4,b
 14880   019778  EFC0  F0CB         	goto	u34871
 14881   01977C  EFC2  F0CB         	goto	u34870
 14882   019780                     u34871:
 14883   019780  EFCF  F0CB         	goto	l25015
 14884   019784                     u34870:
 14885   019784                     
 14886                           ; BSR set to: 7
 14887                           ;../src/w65_main.c: 572:     printf("[%12s] ", fn);
 14888   019784  0E48               	movlw	low STR_102
 14889   019786  0105               	movlb	5	; () banked
 14890   019788  6FAD               	movwf	printf@fmt& (0+255),b
 14891   01978A  0EFF               	movlw	high STR_102
 14892   01978C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14893   01978E  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 14894   019792  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 14895   019796  ECDA  F0FF         	call	_printf	;wreg free
 14896                           
 14897                           ;../src/w65_main.c: 573:    }
 14898   01979A  EFDA  F0CB         	goto	l25017
 14899   01979E                     l25015:
 14900                           
 14901                           ; BSR set to: 7
 14902                           ;../src/w65_main.c: 575:     printf(" %12s  ", fn);
 14903   01979E  0E40               	movlw	low STR_103
 14904   0197A0  0105               	movlb	5	; () banked
 14905   0197A2  6FAD               	movwf	printf@fmt& (0+255),b
 14906   0197A4  0EFF               	movlw	high STR_103
 14907   0197A6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14908   0197A8  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 14909   0197AC  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 14910   0197B0  ECDA  F0FF         	call	_printf	;wreg free
 14911   0197B4                     l25017:
 14912                           
 14913                           ;../src/w65_main.c: 577:    fcnt += 1;
 14914   0197B4  0107               	movlb	7	; () banked
 14915   0197B6  2B4D               	incf	scan_files1@fcnt& (0+255),f,b
 14916   0197B8                     
 14917                           ; BSR set to: 7
 14918                           ;../src/w65_main.c: 578:    if (fcnt == 5 ) {
 14919   0197B8  0E05               	movlw	5
 14920   0197BA  194D               	xorwf	scan_files1@fcnt& (0+255),w,b
 14921   0197BC  A4D8               	btfss	status,2,c
 14922   0197BE  EFE3  F0CB         	goto	u34881
 14923   0197C2  EFE5  F0CB         	goto	u34880
 14924   0197C6                     u34881:
 14925   0197C6  EF7E  F0CB         	goto	l24995
 14926   0197CA                     u34880:
 14927   0197CA                     
 14928                           ; BSR set to: 7
 14929                           ;../src/w65_main.c: 579:     printf("\r\n");
 14930   0197CA  0E90               	movlw	low (STR_88+20)
 14931   0197CC  0105               	movlb	5	; () banked
 14932   0197CE  6FAD               	movwf	printf@fmt& (0+255),b
 14933   0197D0  0EFB               	movlw	high (STR_88+20)
 14934   0197D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14935   0197D4  ECDA  F0FF         	call	_printf	;wreg free
 14936   0197D8                     
 14937                           ;../src/w65_main.c: 580:     fcnt = 0;
 14938   0197D8  0107               	movlb	7	; () banked
 14939   0197DA  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 14940   0197DC  EF7E  F0CB         	goto	l24995
 14941   0197E0                     l25025:
 14942                           
 14943                           ;../src/w65_main.c: 583:   f_closedir(&dir);
 14944   0197E0  0E69               	movlw	low scan_files1@dir
 14945   0197E2  0105               	movlb	5	; () banked
 14946   0197E4  6FC9               	movwf	f_closedir@dp& (0+255),b
 14947   0197E6  0E07               	movlw	high scan_files1@dir
 14948   0197E8  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 14949   0197EA  ECDC  F0FE         	call	_f_closedir	;wreg free
 14950                           
 14951                           ;../src/w65_main.c: 584:  }
 14952   0197EE  EF37  F0CC         	goto	l25035
 14953   0197F2                     l25027:
 14954                           
 14955                           ; BSR set to: 7
 14956                           ;../src/w65_main.c: 586:   if (res == FR_NO_PATH) {
 14957   0197F2  0E05               	movlw	5
 14958   0197F4  1950               	xorwf	scan_files1@res& (0+255),w,b
 14959   0197F6  A4D8               	btfss	status,2,c
 14960   0197F8  EF00  F0CC         	goto	u34891
 14961   0197FC  EF02  F0CC         	goto	u34890
 14962   019800                     u34891:
 14963   019800  EF37  F0CC         	goto	l25035
 14964   019804                     u34890:
 14965   019804                     
 14966                           ; BSR set to: 7
 14967                           ;../src/w65_main.c: 587:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 14968   019804  0ED6               	movlw	low _rom_fl
 14969   019806  0106               	movlb	6	; () banked
 14970   019808  6FAF               	movwf	f_open@fp& (0+255),b
 14971   01980A  0E0F               	movlw	high _rom_fl
 14972   01980C  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 14973   01980E  C751  F6B1         	movff	scan_files1@path,f_open@path
 14974   019812  C752  F6B2         	movff	scan_files1@path+1,f_open@path+1
 14975   019816  0E01               	movlw	1
 14976   019818  6FB3               	movwf	f_open@mode& (0+255),b
 14977   01981A  ECDB  F092         	call	_f_open	;wreg free
 14978   01981E  0107               	movlb	7	; () banked
 14979   019820  6F50               	movwf	scan_files1@res& (0+255),b
 14980   019822                     
 14981                           ; BSR set to: 7
 14982                           ;../src/w65_main.c: 588:    if ( res == FR_OK ) {
 14983   019822  5150               	movf	scan_files1@res& (0+255),w,b
 14984   019824  A4D8               	btfss	status,2,c
 14985   019826  EF17  F0CC         	goto	u34901
 14986   01982A  EF19  F0CC         	goto	u34900
 14987   01982E                     u34901:
 14988   01982E  EF37  F0CC         	goto	l25035
 14989   019832                     u34900:
 14990   019832                     
 14991                           ; BSR set to: 7
 14992                           ;../src/w65_main.c: 589:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 14993   019832  0E9A               	movlw	low STR_96
 14994   019834  0105               	movlb	5	; () banked
 14995   019836  6FAD               	movwf	printf@fmt& (0+255),b
 14996   019838  0EFC               	movlw	high STR_96
 14997   01983A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14998   01983C  C751  F5AF         	movff	scan_files1@path,?_printf+2
 14999   019840  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 15000   019844  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 15001   01984A  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 15002   019850  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 15003   019856  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 15004   01985C  ECDA  F0FF         	call	_printf	;wreg free
 15005                           
 15006                           ;../src/w65_main.c: 590:     f_close( &rom_fl );
 15007   019860  0ED6               	movlw	low _rom_fl
 15008   019862  0106               	movlb	6	; () banked
 15009   019864  6F2F               	movwf	f_close@fp& (0+255),b
 15010   019866  0E0F               	movlw	high _rom_fl
 15011   019868  6F30               	movwf	(f_close@fp+1)& (0+255),b
 15012   01986A  ECDB  F0FB         	call	_f_close	;wreg free
 15013   01986E                     l25035:
 15014                           
 15015                           ;../src/w65_main.c: 594:  return res;
 15016   01986E  0107               	movlb	7	; () banked
 15017   019870  5150               	movf	scan_files1@res& (0+255),w,b
 15018   019872                     
 15019                           ; BSR set to: 7
 15020   019872  0012               	return		;funcret
 15021   019874                     __end_of_scan_files1:
 15022                           	callstack 0
 15023                           
 15024 ;; *************** function _scan_files *****************
 15025 ;; Defined at:
 15026 ;;		line 500 in file "../src/w65_main.c"
 15027 ;; Parameters:    Size  Location     Type
 15028 ;;		None
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  dir            40  104[BANK7 ] struct .
 15031 ;;  fno            22   82[BANK7 ] struct .
 15032 ;;  path            2   80[BANK7 ] PTR unsigned char 
 15033 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 15034 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 15035 ;;  p               2   77[BANK7 ] PTR unsigned char 
 15036 ;;		 -> tmp_buf(512), 
 15037 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 15038 ;;		 -> fno$fname(13), scan_files@fno(22), 
 15039 ;;  res             1   79[BANK7 ] enum E17409
 15040 ;; Return value:  Size  Location     Type
 15041 ;;                  1    wreg      enum E17409
 15042 ;; Registers used:
 15043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15050 ;;      Locals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15052 ;;      Totals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15053 ;;Total ram usage:       69 bytes
 15054 ;; Hardware stack levels used: 1
 15055 ;; Hardware stack levels required when called: 20
 15056 ;; This function calls:
 15057 ;;		_f_close
 15058 ;;		_f_closedir
 15059 ;;		_f_getcwd
 15060 ;;		_f_open
 15061 ;;		_f_opendir
 15062 ;;		_f_readdir
 15063 ;;		_printf
 15064 ;; This function is called by:
 15065 ;;		_main
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text13
 15070   019874                     __ptext13:
 15071                           	callstack 0
 15072   019874                     _scan_files:
 15073                           	callstack 106
 15074   019874                     
 15075                           ;../src/w65_main.c: 501:  FRESULT res;;../src/w65_main.c: 502:  FILINFO fno;;../src/w65_
      +                          main.c: 503:  DIR dir;;../src/w65_main.c: 504:  char *fn, *p, *path;;../src/w65_main.c: 
      +                          506:  path = arg[0];
 15076   019874  C79E  F750         	movff	_arg,scan_files@path
 15077   019878  C79F  F751         	movff	_arg+1,scan_files@path+1
 15078   01987C                     
 15079                           ;../src/w65_main.c: 508:  res = f_opendir(&dir, path);
 15080   01987C  0E68               	movlw	low scan_files@dir
 15081   01987E  0106               	movlb	6	; () banked
 15082   019880  6FAF               	movwf	f_opendir@dp& (0+255),b
 15083   019882  0E07               	movlw	high scan_files@dir
 15084   019884  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 15085   019886  C750  F6B1         	movff	scan_files@path,f_opendir@path
 15086   01988A  C751  F6B2         	movff	scan_files@path+1,f_opendir@path+1
 15087   01988E  EC14  F0DF         	call	_f_opendir	;wreg free
 15088   019892  0107               	movlb	7	; () banked
 15089   019894  6F4F               	movwf	scan_files@res& (0+255),b
 15090   019896                     
 15091                           ; BSR set to: 7
 15092                           ;../src/w65_main.c: 509:  if (res == FR_OK) {
 15093   019896  514F               	movf	scan_files@res& (0+255),w,b
 15094   019898  A4D8               	btfss	status,2,c
 15095   01989A  EF51  F0CC         	goto	u34621
 15096   01989E  EF53  F0CC         	goto	u34620
 15097   0198A2                     u34621:
 15098   0198A2  EF13  F0CD         	goto	l24919
 15099   0198A6                     u34620:
 15100   0198A6                     
 15101                           ; BSR set to: 7
 15102                           ;../src/w65_main.c: 510:   p = (char *)&tmp_buf[0][0];
 15103   0198A6  0EF8               	movlw	low _tmp_buf
 15104   0198A8  6F4D               	movwf	scan_files@p& (0+255),b
 15105   0198AA  0E13               	movlw	high _tmp_buf
 15106   0198AC  6F4E               	movwf	(scan_files@p+1)& (0+255),b
 15107   0198AE                     
 15108                           ; BSR set to: 7
 15109                           ;../src/w65_main.c: 511:   f_getcwd( p, 256);
 15110   0198AE  C74D  F6AF         	movff	scan_files@p,f_getcwd@buff
 15111   0198B2  C74E  F6B0         	movff	scan_files@p+1,f_getcwd@buff+1
 15112   0198B6  0E01               	movlw	1
 15113   0198B8  0106               	movlb	6	; () banked
 15114   0198BA  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 15115   0198BC  0E00               	movlw	0
 15116   0198BE  6FB1               	movwf	f_getcwd@len& (0+255),b
 15117   0198C0  EC93  F0A7         	call	_f_getcwd	;wreg free
 15118   0198C4                     
 15119                           ;../src/w65_main.c: 512:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 15120   0198C4  C750  F4F6         	movff	scan_files@path,tblptrl
 15121   0198C8  C751  F4F7         	movff	scan_files@path+1,tblptrh
 15122   0198CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15123   0198CE  6EF8               	movwf	tblptru,c
 15124   0198D0  0E25               	movlw	(high __ramtop+-1)
 15125   0198D2  64F7               	cpfsgt	tblptrh,c
 15126   0198D4  D003               	bra	u34637
 15127   0198D6  0008               	tblrd		*
 15128   0198D8  50F5               	movf	tablat,w,c
 15129   0198DA  D005               	bra	u34630
 15130   0198DC                     u34637:
 15131   0198DC  C4F6 F4E9          	movff	tblptrl,fsr0l
 15132   0198E0  C4F7 F4EA          	movff	tblptrh,fsr0h
 15133   0198E4  50EF               	movf	indf0,w,c
 15134   0198E6                     u34630:
 15135   0198E6  0900               	iorlw	0
 15136   0198E8  A4D8               	btfss	status,2,c
 15137   0198EA  EF79  F0CC         	goto	u34641
 15138   0198EE  EF7B  F0CC         	goto	u34640
 15139   0198F2                     u34641:
 15140   0198F2  EF88  F0CC         	goto	l24893
 15141   0198F6                     u34640:
 15142   0198F6  0E1E               	movlw	low STR_92
 15143   0198F8  0105               	movlb	5	; () banked
 15144   0198FA  6FAD               	movwf	printf@fmt& (0+255),b
 15145   0198FC  0EFF               	movlw	high STR_92
 15146   0198FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15147   019900  C74D  F5AF         	movff	scan_files@p,?_printf+2
 15148   019904  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 15149   019908  ECDA  F0FF         	call	_printf	;wreg free
 15150   01990C  EFB3  F0CC         	goto	l24899
 15151   019910                     l24893:
 15152   019910  0107               	movlb	7	; () banked
 15153   019912  EE20 F001          	lfsr	2,1
 15154   019916  514D               	movf	scan_files@p& (0+255),w,b
 15155   019918  26D9               	addwf	fsr2l,f,c
 15156   01991A  514E               	movf	(scan_files@p+1)& (0+255),w,b
 15157   01991C  22DA               	addwfc	fsr2h,f,c
 15158   01991E  50DF               	movf	indf2,w,c
 15159   019920  A4D8               	btfss	status,2,c
 15160   019922  EF95  F0CC         	goto	u34651
 15161   019926  EF97  F0CC         	goto	u34650
 15162   01992A                     u34651:
 15163   01992A  EFA4  F0CC         	goto	l24897
 15164   01992E                     u34650:
 15165   01992E                     
 15166                           ; BSR set to: 7
 15167   01992E  0EEE               	movlw	low STR_93
 15168   019930  0105               	movlb	5	; () banked
 15169   019932  6FAD               	movwf	printf@fmt& (0+255),b
 15170   019934  0EFE               	movlw	high STR_93
 15171   019936  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15172   019938  C750  F5AF         	movff	scan_files@path,?_printf+2
 15173   01993C  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 15174   019940  ECDA  F0FF         	call	_printf	;wreg free
 15175   019944  EFB3  F0CC         	goto	l24899
 15176   019948                     l24897:
 15177                           
 15178                           ; BSR set to: 7
 15179   019948  0E94               	movlw	low STR_94
 15180   01994A  0105               	movlb	5	; () banked
 15181   01994C  6FAD               	movwf	printf@fmt& (0+255),b
 15182   01994E  0EFE               	movlw	high STR_94
 15183   019950  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15184   019952  C74D  F5AF         	movff	scan_files@p,?_printf+2
 15185   019956  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 15186   01995A  C750  F5B1         	movff	scan_files@path,?_printf+4
 15187   01995E  C751  F5B2         	movff	scan_files@path+1,?_printf+5
 15188   019962  ECDA  F0FF         	call	_printf	;wreg free
 15189   019966                     l24899:
 15190                           
 15191                           ;../src/w65_main.c: 517:    res = f_readdir(&dir, &fno);
 15192   019966  0E68               	movlw	low scan_files@dir
 15193   019968  0106               	movlb	6	; () banked
 15194   01996A  6F89               	movwf	f_readdir@dp& (0+255),b
 15195   01996C  0E07               	movlw	high scan_files@dir
 15196   01996E  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 15197   019970  0E52               	movlw	low scan_files@fno
 15198   019972  6F8B               	movwf	f_readdir@fno& (0+255),b
 15199   019974  0E07               	movlw	high scan_files@fno
 15200   019976  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 15201   019978  EC7B  F0ED         	call	_f_readdir	;wreg free
 15202   01997C  0107               	movlb	7	; () banked
 15203   01997E  6F4F               	movwf	scan_files@res& (0+255),b
 15204   019980                     
 15205                           ; BSR set to: 7
 15206                           ;../src/w65_main.c: 518:    if (res != FR_OK || fno.fname[0] == 0) break;
 15207   019980  514F               	movf	scan_files@res& (0+255),w,b
 15208   019982  A4D8               	btfss	status,2,c
 15209   019984  EFC6  F0CC         	goto	u34661
 15210   019988  EFC8  F0CC         	goto	u34660
 15211   01998C                     u34661:
 15212   01998C  EF0A  F0CD         	goto	l24917
 15213   019990                     u34660:
 15214   019990                     
 15215                           ; BSR set to: 7
 15216   019990  515B               	movf	(scan_files@fno+9)& (0+255),w,b
 15217   019992  A4D8               	btfss	status,2,c
 15218   019994  EFCE  F0CC         	goto	u34671
 15219   019998  EFD0  F0CC         	goto	u34670
 15220   01999C                     u34671:
 15221   01999C  EFD2  F0CC         	goto	l24905
 15222   0199A0                     u34670:
 15223   0199A0  EF0A  F0CD         	goto	l24917
 15224   0199A4                     l24905:
 15225                           
 15226                           ; BSR set to: 7
 15227                           ;../src/w65_main.c: 519:    if (fno.fname[0] == '.') continue;
 15228   0199A4  0E2E               	movlw	46
 15229   0199A6  195B               	xorwf	(scan_files@fno+9)& (0+255),w,b
 15230   0199A8  A4D8               	btfss	status,2,c
 15231   0199AA  EFD9  F0CC         	goto	u34681
 15232   0199AE  EFDB  F0CC         	goto	u34680
 15233   0199B2                     u34681:
 15234   0199B2  EFDD  F0CC         	goto	l24909
 15235   0199B6                     u34680:
 15236   0199B6  EFB3  F0CC         	goto	l24899
 15237   0199BA                     l24909:
 15238                           
 15239                           ; BSR set to: 7
 15240                           ;../src/w65_main.c: 520:    fn = fno.fname;
 15241   0199BA  0E5B               	movlw	low (scan_files@fno+9)
 15242   0199BC  6F4B               	movwf	scan_files@fn& (0+255),b
 15243   0199BE  0E07               	movlw	high (scan_files@fno+9)
 15244   0199C0  6F4C               	movwf	(scan_files@fn+1)& (0+255),b
 15245   0199C2                     
 15246                           ; BSR set to: 7
 15247                           ;../src/w65_main.c: 521:    if (fno.fattrib & 0x10) {
 15248   0199C2  A95A               	btfss	(scan_files@fno+8)& (0+255),4,b
 15249   0199C4  EFE6  F0CC         	goto	u34691
 15250   0199C8  EFE8  F0CC         	goto	u34690
 15251   0199CC                     u34691:
 15252   0199CC  EFF5  F0CC         	goto	l24915
 15253   0199D0                     u34690:
 15254   0199D0                     
 15255                           ; BSR set to: 7
 15256                           ;../src/w65_main.c: 522:     printf("  %12s\t<DIR>\r\n", fno.fname);
 15257   0199D0  0E16               	movlw	low STR_95
 15258   0199D2  0105               	movlb	5	; () banked
 15259   0199D4  6FAD               	movwf	printf@fmt& (0+255),b
 15260   0199D6  0EFE               	movlw	high STR_95
 15261   0199D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15262   0199DA  0E5B               	movlw	low (scan_files@fno+9)
 15263   0199DC  6FAF               	movwf	(?_printf+2)& (0+255),b
 15264   0199DE  0E07               	movlw	high (scan_files@fno+9)
 15265   0199E0  6FB0               	movwf	(?_printf+3)& (0+255),b
 15266   0199E2  ECDA  F0FF         	call	_printf	;wreg free
 15267                           
 15268                           ;../src/w65_main.c: 523:    }
 15269   0199E6  EFB3  F0CC         	goto	l24899
 15270   0199EA                     l24915:
 15271                           
 15272                           ; BSR set to: 7
 15273                           ;../src/w65_main.c: 525:     printf("  %12s\t%ld bytes.\r\n", fn, fno.fsize);
 15274   0199EA  0E9A               	movlw	low STR_96
 15275   0199EC  0105               	movlb	5	; () banked
 15276   0199EE  6FAD               	movwf	printf@fmt& (0+255),b
 15277   0199F0  0EFC               	movlw	high STR_96
 15278   0199F2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15279   0199F4  C74B  F5AF         	movff	scan_files@fn,?_printf+2
 15280   0199F8  C74C  F5B0         	movff	scan_files@fn+1,?_printf+3
 15281   0199FC  C752  F5B1         	movff	scan_files@fno,?_printf+4
 15282   019A00  C753  F5B2         	movff	scan_files@fno+1,?_printf+5
 15283   019A04  C754  F5B3         	movff	scan_files@fno+2,?_printf+6
 15284   019A08  C755  F5B4         	movff	scan_files@fno+3,?_printf+7
 15285   019A0C  ECDA  F0FF         	call	_printf	;wreg free
 15286   019A10  EFB3  F0CC         	goto	l24899
 15287   019A14                     l24917:
 15288                           
 15289                           ; BSR set to: 7
 15290                           ;../src/w65_main.c: 528:   f_closedir(&dir);
 15291   019A14  0E68               	movlw	low scan_files@dir
 15292   019A16  0105               	movlb	5	; () banked
 15293   019A18  6FC9               	movwf	f_closedir@dp& (0+255),b
 15294   019A1A  0E07               	movlw	high scan_files@dir
 15295   019A1C  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 15296   019A1E  ECDC  F0FE         	call	_f_closedir	;wreg free
 15297                           
 15298                           ;../src/w65_main.c: 529:  }
 15299   019A22  EF51  F0CD         	goto	l24927
 15300   019A26                     l24919:
 15301                           
 15302                           ; BSR set to: 7
 15303                           ;../src/w65_main.c: 531:   if (res == FR_NO_PATH) {
 15304   019A26  0E05               	movlw	5
 15305   019A28  194F               	xorwf	scan_files@res& (0+255),w,b
 15306   019A2A  A4D8               	btfss	status,2,c
 15307   019A2C  EF1A  F0CD         	goto	u34701
 15308   019A30  EF1C  F0CD         	goto	u34700
 15309   019A34                     u34701:
 15310   019A34  EF51  F0CD         	goto	l24927
 15311   019A38                     u34700:
 15312   019A38                     
 15313                           ; BSR set to: 7
 15314                           ;../src/w65_main.c: 532:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 15315   019A38  0ED6               	movlw	low _rom_fl
 15316   019A3A  0106               	movlb	6	; () banked
 15317   019A3C  6FAF               	movwf	f_open@fp& (0+255),b
 15318   019A3E  0E0F               	movlw	high _rom_fl
 15319   019A40  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 15320   019A42  C750  F6B1         	movff	scan_files@path,f_open@path
 15321   019A46  C751  F6B2         	movff	scan_files@path+1,f_open@path+1
 15322   019A4A  0E01               	movlw	1
 15323   019A4C  6FB3               	movwf	f_open@mode& (0+255),b
 15324   019A4E  ECDB  F092         	call	_f_open	;wreg free
 15325   019A52  0107               	movlb	7	; () banked
 15326   019A54  6F4F               	movwf	scan_files@res& (0+255),b
 15327   019A56                     
 15328                           ; BSR set to: 7
 15329                           ;../src/w65_main.c: 533:    if ( res == FR_OK ) {
 15330   019A56  514F               	movf	scan_files@res& (0+255),w,b
 15331   019A58  A4D8               	btfss	status,2,c
 15332   019A5A  EF31  F0CD         	goto	u34711
 15333   019A5E  EF33  F0CD         	goto	u34710
 15334   019A62                     u34711:
 15335   019A62  EF51  F0CD         	goto	l24927
 15336   019A66                     u34710:
 15337   019A66                     
 15338                           ; BSR set to: 7
 15339                           ;../src/w65_main.c: 534:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 15340   019A66  0E9A               	movlw	low STR_96
 15341   019A68  0105               	movlb	5	; () banked
 15342   019A6A  6FAD               	movwf	printf@fmt& (0+255),b
 15343   019A6C  0EFC               	movlw	high STR_96
 15344   019A6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15345   019A70  C750  F5AF         	movff	scan_files@path,?_printf+2
 15346   019A74  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 15347   019A78  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 15348   019A7E  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 15349   019A84  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 15350   019A8A  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 15351   019A90  ECDA  F0FF         	call	_printf	;wreg free
 15352                           
 15353                           ;../src/w65_main.c: 535:     f_close( &rom_fl );
 15354   019A94  0ED6               	movlw	low _rom_fl
 15355   019A96  0106               	movlb	6	; () banked
 15356   019A98  6F2F               	movwf	f_close@fp& (0+255),b
 15357   019A9A  0E0F               	movlw	high _rom_fl
 15358   019A9C  6F30               	movwf	(f_close@fp+1)& (0+255),b
 15359   019A9E  ECDB  F0FB         	call	_f_close	;wreg free
 15360   019AA2                     l24927:
 15361                           
 15362                           ;../src/w65_main.c: 539:  return res;
 15363   019AA2  0107               	movlb	7	; () banked
 15364   019AA4  514F               	movf	scan_files@res& (0+255),w,b
 15365   019AA6                     
 15366                           ; BSR set to: 7
 15367   019AA6  0012               	return		;funcret
 15368   019AA8                     __end_of_scan_files:
 15369                           	callstack 0
 15370                           
 15371 ;; *************** function _wstart_prog *****************
 15372 ;; Defined at:
 15373 ;;		line 793 in file "../src/w65_main.c"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;		None
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;  rs              1   22[BANK7 ] enum E17409
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      enum E17409
 15380 ;; Registers used:
 15381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15388 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15390 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15391 ;;Total ram usage:        1 bytes
 15392 ;; Hardware stack levels used: 1
 15393 ;; Hardware stack levels required when called: 25
 15394 ;; This function calls:
 15395 ;;		_drive_cpu
 15396 ;;		_start_cpu
 15397 ;;		_write_sram
 15398 ;; This function is called by:
 15399 ;;		_main
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text14
 15404   01EA54                     __ptext14:
 15405                           	callstack 0
 15406   01EA54                     _wstart_prog:
 15407                           	callstack 101
 15408   01EA54                     
 15409                           ;../src/w65_main.c: 794:  FRESULT rs;;../src/w65_main.c: 796:  rs = FR_NO_FILE;
 15410   01EA54  0E04               	movlw	4
 15411   01EA56  0107               	movlb	7	; () banked
 15412   01EA58  6F16               	movwf	wstart_prog@rs& (0+255),b
 15413   01EA5A                     
 15414                           ; BSR set to: 7
 15415                           ;../src/w65_main.c: 797:  if ( binv.sw == 1) {
 15416   01EA5A  0108               	movlb	8	; () banked
 15417   01EA5C  0578               	decf	_binv& (0+255),w,b
 15418   01EA5E  A4D8               	btfss	status,2,c
 15419   01EA60  EF34  F0F5         	goto	u35111
 15420   01EA64  EF36  F0F5         	goto	u35110
 15421   01EA68                     u35111:
 15422   01EA68  EF7B  F0F5         	goto	l25233
 15423   01EA6C                     u35110:
 15424   01EA6C                     
 15425                           ; BSR set to: 8
 15426                           ;../src/w65_main.c: 799:   write_sram(0, &cpu_flg, 1);
 15427   01EA6C  0E00               	movlw	0
 15428   01EA6E  6E04               	movwf	write_sram@addr^(0+1280),c
 15429   01EA70  0E00               	movlw	0
 15430   01EA72  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15431   01EA74  0E00               	movlw	0
 15432   01EA76  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15433   01EA78  0E00               	movlw	0
 15434   01EA7A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15435   01EA7C  0EE5               	movlw	low _cpu_flg
 15436   01EA7E  6E08               	movwf	write_sram@buf^(0+1280),c
 15437   01EA80  0E07               	movlw	high _cpu_flg
 15438   01EA82  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15439   01EA84  0E00               	movlw	0
 15440   01EA86  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15441   01EA88  0E01               	movlw	1
 15442   01EA8A  6E0A               	movwf	write_sram@len^(0+1280),c
 15443   01EA8C  EC9F  F0E8         	call	_write_sram	;wreg free
 15444   01EA90                     
 15445                           ;../src/w65_main.c: 801:   binv.addr = binv.waddr;
 15446   01EA90  C881  F879         	movff	_binv+9,_binv+1
 15447   01EA94  C882  F87A         	movff	_binv+10,_binv+2
 15448                           
 15449                           ;../src/w65_main.c: 802:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 15450   01EA98  0E08               	movlw	8
 15451   01EA9A  0108               	movlb	8	; () banked
 15452   01EA9C  25B2               	addwf	(_fh+16)& (0+255),w,b
 15453   01EA9E  6E04               	movwf	write_sram@addr^(0+1280),c
 15454   01EAA0  0E00               	movlw	0
 15455   01EAA2  21B3               	addwfc	(_fh+17)& (0+255),w,b
 15456   01EAA4  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15457   01EAA6  0E00               	movlw	0
 15458   01EAA8  21B4               	addwfc	(_fh+18)& (0+255),w,b
 15459   01EAAA  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15460   01EAAC  0E00               	movlw	0
 15461   01EAAE  21B5               	addwfc	(_fh+19)& (0+255),w,b
 15462   01EAB0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15463   01EAB2  0E78               	movlw	low _binv
 15464   01EAB4  6E08               	movwf	write_sram@buf^(0+1280),c
 15465   01EAB6  0E08               	movlw	high _binv
 15466   01EAB8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15467   01EABA  0E00               	movlw	0
 15468   01EABC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15469   01EABE  0E07               	movlw	7
 15470   01EAC0  6E0A               	movwf	write_sram@len^(0+1280),c
 15471   01EAC2  EC9F  F0E8         	call	_write_sram	;wreg free
 15472                           
 15473                           ;../src/w65_main.c: 804:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 15474   01EAC6  0EFC               	movlw	252
 15475   01EAC8  6E04               	movwf	write_sram@addr^(0+1280),c
 15476   01EACA  0EFF               	movlw	255
 15477   01EACC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15478   01EACE  0E00               	movlw	0
 15479   01EAD0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15480   01EAD2  0E00               	movlw	0
 15481   01EAD4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15482   01EAD6  0EA3               	movlw	low (_fh+1)
 15483   01EAD8  6E08               	movwf	write_sram@buf^(0+1280),c
 15484   01EADA  0E08               	movlw	high (_fh+1)
 15485   01EADC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15486   01EADE  0E00               	movlw	0
 15487   01EAE0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15488   01EAE2  0E02               	movlw	2
 15489   01EAE4  6E0A               	movwf	write_sram@len^(0+1280),c
 15490   01EAE6  EC9F  F0E8         	call	_write_sram	;wreg free
 15491   01EAEA                     
 15492                           ;../src/w65_main.c: 805:   start_cpu();
 15493   01EAEA  ECF8  F0FE         	call	_start_cpu	;wreg free
 15494   01EAEE                     
 15495                           ;../src/w65_main.c: 806:   rs = drive_cpu();
 15496   01EAEE  ECA0  F0FE         	call	_drive_cpu	;wreg free
 15497   01EAF2  0107               	movlb	7	; () banked
 15498   01EAF4  6F16               	movwf	wstart_prog@rs& (0+255),b
 15499   01EAF6                     l25233:
 15500                           
 15501                           ;../src/w65_main.c: 808:  return rs;
 15502   01EAF6  0107               	movlb	7	; () banked
 15503   01EAF8  5116               	movf	wstart_prog@rs& (0+255),w,b
 15504   01EAFA                     
 15505                           ; BSR set to: 7
 15506   01EAFA  0012               	return		;funcret
 15507   01EAFC                     __end_of_wstart_prog:
 15508                           	callstack 0
 15509                           
 15510 ;; *************** function _wait_for_programmer *****************
 15511 ;; Defined at:
 15512 ;;		line 119 in file "../src/boards/w65_cmn.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      void 
 15519 ;; Registers used:
 15520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15530 ;;Total ram usage:        2 bytes
 15531 ;; Hardware stack levels used: 1
 15532 ;; Hardware stack levels required when called: 9
 15533 ;; This function calls:
 15534 ;;		_printf
 15535 ;; This function is called by:
 15536 ;;		_main
 15537 ;; This function uses a non-reentrant model
 15538 ;;
 15539                           
 15540                           	psect	text15
 15541   01FAE6                     __ptext15:
 15542                           	callstack 0
 15543   01FAE6                     _wait_for_programmer:
 15544                           	callstack 117
 15545   01FAE6                     
 15546                           ;../src/boards/w65_cmn.c: 124:     printf("\n\r");
 15547   01FAE6  0E8B               	movlw	low (STR_27+52)
 15548   01FAE8  0105               	movlb	5	; () banked
 15549   01FAEA  6FAD               	movwf	printf@fmt& (0+255),b
 15550   01FAEC  0EF2               	movlw	high (STR_27+52)
 15551   01FAEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15552   01FAF0  ECDA  F0FF         	call	_printf	;wreg free
 15553                           
 15554                           ;../src/boards/w65_cmn.c: 125:     printf("wait for programmer ...\r\n");
 15555   01FAF4  0E56               	movlw	low STR_2
 15556   01FAF6  0105               	movlb	5	; () banked
 15557   01FAF8  6FAD               	movwf	printf@fmt& (0+255),b
 15558   01FAFA  0EFA               	movlw	high STR_2
 15559   01FAFC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15560   01FAFE  ECDA  F0FF         	call	_printf	;wreg free
 15561   01FB02                     
 15562                           ;../src/boards/w65_cmn.c: 126:     _delay((unsigned long)((1000)*(64000000UL/4000.0)));
 15563   01FB02  0E52               	movlw	82
 15564   01FB04  0105               	movlb	5	; () banked
 15565   01FB06  6FBE               	movwf	(??_wait_for_programmer+1)& (0+255),b
 15566   01FB08  0E2B               	movlw	43
 15567   01FB0A  6FBD               	movwf	??_wait_for_programmer& (0+255),b
 15568   01FB0C  0E00               	movlw	0
 15569   01FB0E                     u36847:
 15570   01FB0E  2EE8               	decfsz	wreg,f,c
 15571   01FB10  D7FE               	bra	u36847
 15572   01FB12  2FBD               	decfsz	??_wait_for_programmer& (0+255),f,b
 15573   01FB14  D7FC               	bra	u36847
 15574   01FB16  2FBE               	decfsz	(??_wait_for_programmer+1)& (0+255),f,b
 15575   01FB18  D7FA               	bra	u36847
 15576   01FB1A  0000               	nop	
 15577   01FB1C                     
 15578                           ;../src/boards/w65_cmn.c: 128:     printf("\n\r");
 15579   01FB1C  0E8B               	movlw	low (STR_27+52)
 15580   01FB1E  0105               	movlb	5	; () banked
 15581   01FB20  6FAD               	movwf	printf@fmt& (0+255),b
 15582   01FB22  0EF2               	movlw	high (STR_27+52)
 15583   01FB24  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15584   01FB26  ECDA  F0FF         	call	_printf	;wreg free
 15585   01FB2A  0012               	return		;funcret
 15586   01FB2C                     __end_of_wait_for_programmer:
 15587                           	callstack 0
 15588                           
 15589 ;; *************** function _uart_init *****************
 15590 ;; Defined at:
 15591 ;;		line 289 in file "../src/boards/w65_cmn.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;		None
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;		None
 15596 ;; Return value:  Size  Location     Type
 15597 ;;                  1    wreg      void 
 15598 ;; Registers used:
 15599 ;;		wreg, status,2
 15600 ;; Tracked objects:
 15601 ;;		On entry : 0/0
 15602 ;;		On exit  : 0/0
 15603 ;;		Unchanged: 0/0
 15604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15609 ;;Total ram usage:        0 bytes
 15610 ;; Hardware stack levels used: 1
 15611 ;; Hardware stack levels required when called: 1
 15612 ;; This function calls:
 15613 ;;		Nothing
 15614 ;; This function is called by:
 15615 ;;		_main
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           	psect	text16
 15620   01FD04                     __ptext16:
 15621                           	callstack 0
 15622   01FD04                     _uart_init:
 15623                           	callstack 125
 15624   01FD04                     
 15625                           ;../src/boards/w65_cmn.c: 295:  U3BRG = 34;
 15626   01FD04  0E00               	movlw	0
 15627   01FD06  0102               	movlb	2	; () banked
 15628   01FD08  6FD5               	movwf	213,b	;volatile
 15629   01FD0A  0E22               	movlw	34
 15630   01FD0C  6FD4               	movwf	212,b	;volatile
 15631   01FD0E                     
 15632                           ; BSR set to: 2
 15633                           ;../src/boards/w65_cmn.c: 296:  U3RXEN = 1;
 15634   01FD0E  89D1               	bsf	209,4,b	;volatile
 15635   01FD10                     
 15636                           ; BSR set to: 2
 15637                           ;../src/boards/w65_cmn.c: 297:  U3TXEN = 1;
 15638   01FD10  8BD1               	bsf	209,5,b	;volatile
 15639   01FD12                     
 15640                           ; BSR set to: 2
 15641                           ;../src/boards/w65_cmn.c: 300:  TRISA7 = 1;
 15642   01FD12  8EC6               	bsf	1222,7,c	;volatile
 15643                           
 15644                           ;../src/boards/w65_cmn.c: 301:  U3RXPPS = 0x07;
 15645   01FD14  0E07               	movlw	7
 15646   01FD16  6F76               	movwf	118,b	;volatile
 15647   01FD18                     
 15648                           ; BSR set to: 2
 15649                           ;../src/boards/w65_cmn.c: 304:  LATA6 = 1;
 15650   01FD18  8CBE               	bsf	1214,6,c	;volatile
 15651   01FD1A                     
 15652                           ; BSR set to: 2
 15653                           ;../src/boards/w65_cmn.c: 305:  TRISA6 = 0;
 15654   01FD1A  9CC6               	bcf	1222,6,c	;volatile
 15655                           
 15656                           ;../src/boards/w65_cmn.c: 306:  RA6PPS = 0x26;
 15657   01FD1C  0E26               	movlw	38
 15658   01FD1E  6F07               	movwf	7,b	;volatile
 15659   01FD20                     
 15660                           ; BSR set to: 2
 15661                           ;../src/boards/w65_cmn.c: 308:  U3ON = 1;
 15662   01FD20  8FD2               	bsf	210,7,b	;volatile
 15663                           
 15664                           ;../src/boards/w65_cmn.c: 310:  rx_wp = 0;
 15665   01FD22  0E00               	movlw	0
 15666   01FD24  0107               	movlb	7	; () banked
 15667   01FD26  6FC6               	movwf	(_rx_wp+1)& (0+255),b
 15668   01FD28  0E00               	movlw	0
 15669   01FD2A  6FC5               	movwf	_rx_wp& (0+255),b
 15670                           
 15671                           ;../src/boards/w65_cmn.c: 311:  rx_rp = 0;
 15672   01FD2C  0E00               	movlw	0
 15673   01FD2E  6FC4               	movwf	(_rx_rp+1)& (0+255),b
 15674   01FD30  0E00               	movlw	0
 15675   01FD32  6FC3               	movwf	_rx_rp& (0+255),b
 15676                           
 15677                           ;../src/boards/w65_cmn.c: 312:  rx_cnt = 0;
 15678   01FD34  0E00               	movlw	0
 15679   01FD36  6FC2               	movwf	(_rx_cnt+1)& (0+255),b
 15680   01FD38  0E00               	movlw	0
 15681   01FD3A  6FC1               	movwf	_rx_cnt& (0+255),b
 15682   01FD3C                     
 15683                           ; BSR set to: 7
 15684                           ;../src/boards/w65_cmn.c: 313:  U3RXIE = 1;
 15685   01FD3C  80A7               	bsf	1191,0,c	;volatile
 15686   01FD3E                     
 15687                           ; BSR set to: 7
 15688   01FD3E  0012               	return		;funcret
 15689   01FD40                     __end_of_uart_init:
 15690                           	callstack 0
 15691                           
 15692 ;; *************** function _setup_sd *****************
 15693 ;; Defined at:
 15694 ;;		line 241 in file "../src/boards/w65_bd.c"
 15695 ;; Parameters:    Size  Location     Type
 15696 ;;		None
 15697 ;; Auto vars:     Size  Location     Type
 15698 ;;		None
 15699 ;; Return value:  Size  Location     Type
 15700 ;;                  1    wreg      void 
 15701 ;; Registers used:
 15702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15703 ;; Tracked objects:
 15704 ;;		On entry : 0/0
 15705 ;;		On exit  : 0/0
 15706 ;;		Unchanged: 0/0
 15707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15712 ;;Total ram usage:        2 bytes
 15713 ;; Hardware stack levels used: 1
 15714 ;; Hardware stack levels required when called: 11
 15715 ;; This function calls:
 15716 ;;		_SDCard_init
 15717 ;;		_printf
 15718 ;; This function is called by:
 15719 ;;		_main
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text17
 15724   01EF40                     __ptext17:
 15725                           	callstack 0
 15726   01EF40                     _setup_sd:
 15727                           	callstack 115
 15728   01EF40                     
 15729                           ;../src/boards/w65_bd.c: 245:     static int retry;;../src/boards/w65_bd.c: 247:  for (r
      +                          etry = 0; 1; retry++) {
 15730   01EF40  0E00               	movlw	0
 15731   01EF42  0107               	movlb	7	; () banked
 15732   01EF44  6FC0               	movwf	(setup_sd@retry+1)& (0+255),b
 15733   01EF46  0E00               	movlw	0
 15734   01EF48  6FBF               	movwf	setup_sd@retry& (0+255),b
 15735   01EF4A                     l24701:
 15736                           
 15737                           ; BSR set to: 7
 15738                           ;../src/boards/w65_bd.c: 248:         if (20 <= retry) {
 15739   01EF4A  BFC0               	btfsc	(setup_sd@retry+1)& (0+255),7,b
 15740   01EF4C  EFB1  F0F7         	goto	u34411
 15741   01EF50  51C0               	movf	(setup_sd@retry+1)& (0+255),w,b
 15742   01EF52  E109               	bnz	u34410
 15743   01EF54  0E14               	movlw	20
 15744   01EF56  5DBF               	subwf	setup_sd@retry& (0+255),w,b
 15745   01EF58  A0D8               	btfss	status,0,c
 15746   01EF5A  EFB1  F0F7         	goto	u34411
 15747   01EF5E  EFB3  F0F7         	goto	u34410
 15748   01EF62                     u34411:
 15749   01EF62  EFBC  F0F7         	goto	l24705
 15750   01EF66                     u34410:
 15751   01EF66                     
 15752                           ; BSR set to: 7
 15753                           ;../src/boards/w65_bd.c: 249:             printf("No SD Card?\n\r");
 15754   01EF66  0E6C               	movlw	low STR_5
 15755   01EF68  0105               	movlb	5	; () banked
 15756   01EF6A  6FAD               	movwf	printf@fmt& (0+255),b
 15757   01EF6C  0EFE               	movlw	high STR_5
 15758   01EF6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15759   01EF70  ECDA  F0FF         	call	_printf	;wreg free
 15760   01EF74                     l398:
 15761   01EF74  EFBA  F0F7         	goto	l398
 15762   01EF78                     l24705:
 15763                           
 15764                           ; BSR set to: 7
 15765                           ;../src/boards/w65_bd.c: 253:         if (SDCard_init(SPI_CLOCK_100KHZ, SPI_CLOCK_4MHZ, 
      +                          100) == 0)
 15766   01EF78  0E00               	movlw	0
 15767   01EF7A  0105               	movlb	5	; () banked
 15768   01EF7C  6FC6               	movwf	(SDCard_init@initial_clock_speed+1)& (0+255),b
 15769   01EF7E  0E00               	movlw	0
 15770   01EF80  6FC5               	movwf	SDCard_init@initial_clock_speed& (0+255),b
 15771   01EF82  0E00               	movlw	0
 15772   01EF84  6FC8               	movwf	(SDCard_init@clock_speed+1)& (0+255),b
 15773   01EF86  0E02               	movlw	2
 15774   01EF88  6FC7               	movwf	SDCard_init@clock_speed& (0+255),b
 15775   01EF8A  0E00               	movlw	0
 15776   01EF8C  6FCA               	movwf	(SDCard_init@timeout+1)& (0+255),b
 15777   01EF8E  0E64               	movlw	100
 15778   01EF90  6FC9               	movwf	SDCard_init@timeout& (0+255),b
 15779   01EF92  ECC0  F0C9         	call	_SDCard_init	;wreg free
 15780   01EF96  0105               	movlb	5	; () banked
 15781   01EF98  51C5               	movf	?_SDCard_init& (0+255),w,b
 15782   01EF9A  11C6               	iorwf	(?_SDCard_init+1)& (0+255),w,b
 15783   01EF9C  A4D8               	btfss	status,2,c
 15784   01EF9E  EFD3  F0F7         	goto	u34421
 15785   01EFA2  EFD5  F0F7         	goto	u34420
 15786   01EFA6                     u34421:
 15787   01EFA6  EFD7  F0F7         	goto	l24709
 15788   01EFAA                     u34420:
 15789   01EFAA  EFE8  F0F7         	goto	l403
 15790   01EFAE                     l24709:
 15791                           
 15792                           ; BSR set to: 5
 15793                           ;../src/boards/w65_bd.c: 256:         _delay((unsigned long)((200)*(64000000UL/4000.0)))
      +                          ;
 15794   01EFAE  0E11               	movlw	17
 15795   01EFB0  0105               	movlb	5	; () banked
 15796   01EFB2  6FD6               	movwf	(??_setup_sd+1)& (0+255),b
 15797   01EFB4  0E3C               	movlw	60
 15798   01EFB6  6FD5               	movwf	??_setup_sd& (0+255),b
 15799   01EFB8  0ECB               	movlw	203
 15800   01EFBA                     u36857:
 15801   01EFBA  2EE8               	decfsz	wreg,f,c
 15802   01EFBC  D7FE               	bra	u36857
 15803   01EFBE  2FD5               	decfsz	??_setup_sd& (0+255),f,b
 15804   01EFC0  D7FC               	bra	u36857
 15805   01EFC2  2FD6               	decfsz	(??_setup_sd+1)& (0+255),f,b
 15806   01EFC4  D7FA               	bra	u36857
 15807   01EFC6                     
 15808                           ;../src/boards/w65_bd.c: 257:     }
 15809   01EFC6  0107               	movlb	7	; () banked
 15810   01EFC8  4BBF               	infsnz	setup_sd@retry& (0+255),f,b
 15811   01EFCA  2BC0               	incf	(setup_sd@retry+1)& (0+255),f,b
 15812   01EFCC  EFA5  F0F7         	goto	l24701
 15813   01EFD0                     l403:
 15814                           
 15815                           ; BSR set to: 5
 15816   01EFD0  0012               	return		;funcret
 15817   01EFD2                     __end_of_setup_sd:
 15818                           	callstack 0
 15819                           
 15820 ;; *************** function _SDCard_init *****************
 15821 ;; Defined at:
 15822 ;;		line 53 in file "../src/boards/../../drivers/SDCard.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;  initial_cloc    2  101[BANK5 ] int 
 15825 ;;  clock_speed     2  103[BANK5 ] int 
 15826 ;;  timeout         2  105[BANK5 ] unsigned short 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  i               2  108[BANK5 ] int 
 15829 ;;  buf             5  112[BANK5 ] unsigned char [5]
 15830 ;;  spi             2  110[BANK5 ] PTR struct SPI
 15831 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  2  101[BANK5 ] int 
 15834 ;; Registers used:
 15835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15841 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15842 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15844 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15845 ;;Total ram usage:       16 bytes
 15846 ;; Hardware stack levels used: 1
 15847 ;; Hardware stack levels required when called: 10
 15848 ;; This function calls:
 15849 ;;		_SDCard_command
 15850 ;;		_SDCard_end_transaction
 15851 ;;		_SPI_SD_begin
 15852 ;;		_SPI_SD_begin_transaction
 15853 ;;		_SPI_SD_configure
 15854 ;;		_SPI_SD_dummy_clocks
 15855 ;;		_printf
 15856 ;; This function is called by:
 15857 ;;		_setup_sd
 15858 ;; This function uses a non-reentrant model
 15859 ;;
 15860                           
 15861                           	psect	text18
 15862   019380                     __ptext18:
 15863                           	callstack 0
 15864   019380                     _SDCard_init:
 15865                           	callstack 115
 15866   019380                     
 15867                           ;../src/boards/../../drivers/SDCard.c: 53: int SDCard_init(int initial_clock_speed, int 
      +                          clock_speed, uint16_t timeout);../src/boards/../../drivers/SDCard.c: 54: {;../src/boards
      +                          /../../drivers/SDCard.c: 55:     ctx_.spi = SPI_SD_ctx;
 15868   019380  0ECF               	movlw	low _pic18f47q43_spi_ctx
 15869   019382  0107               	movlb	7	; () banked
 15870   019384  6FA8               	movwf	_ctx_& (0+255),b
 15871   019386  0E08               	movlw	high _pic18f47q43_spi_ctx
 15872   019388  6FA9               	movwf	(_ctx_+1)& (0+255),b
 15873   01938A                     
 15874                           ; BSR set to: 7
 15875                           ;../src/boards/../../drivers/SDCard.c: 56:     ctx_.timeout = timeout;
 15876   01938A  C5C9  F7AA         	movff	SDCard_init@timeout,_ctx_+2
 15877   01938E  C5CA  F7AB         	movff	SDCard_init@timeout+1,_ctx_+3
 15878   019392                     
 15879                           ; BSR set to: 7
 15880                           ;../src/boards/../../drivers/SDCard.c: 57:     ctx_.calc_read_crc = 0;
 15881   019392  91AC               	bcf	(_ctx_+4)& (0+255),0,b
 15882                           
 15883                           ;../src/boards/../../drivers/SDCard.c: 58:     struct SPI *spi = ctx_.spi;
 15884   019394  C7A8  F5CE         	movff	_ctx_,SDCard_init@spi
 15885   019398  C7A9  F5CF         	movff	_ctx_+1,SDCard_init@spi+1
 15886   01939C                     
 15887                           ; BSR set to: 7
 15888                           ;../src/boards/../../drivers/SDCard.c: 59:     SPI_SD_begin(spi);
 15889   01939C  C5CE  F504         	movff	SDCard_init@spi,SPI_SD_begin@ctx_
 15890   0193A0  C5CF  F505         	movff	SDCard_init@spi+1,SPI_SD_begin@ctx_+1
 15891   0193A4  EC9A  F0FF         	call	_SPI_SD_begin	;wreg free
 15892   0193A8                     
 15893                           ;../src/boards/../../drivers/SDCard.c: 64:     SPI_SD_configure(spi, initial_clock_speed
      +                          , 1, 0);
 15894   0193A8  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 15895   0193AC  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 15896   0193B0  C5C5  F5BF         	movff	SDCard_init@initial_clock_speed,SPI_SD_configure@clock_speed
 15897   0193B4  C5C6  F5C0         	movff	SDCard_init@initial_clock_speed+1,SPI_SD_configure@clock_speed+1
 15898   0193B8  0E01               	movlw	1
 15899   0193BA  0105               	movlb	5	; () banked
 15900   0193BC  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 15901   0193BE  0E00               	movlw	0
 15902   0193C0  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 15903   0193C2  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 15904   0193C6                     
 15905                           ;../src/boards/../../drivers/SDCard.c: 65:     SPI_SD_begin_transaction(spi);
 15906   0193C6  C5CE  F508         	movff	SDCard_init@spi,SPI_SD_begin_transaction@ctx_
 15907   0193CA  C5CF  F509         	movff	SDCard_init@spi+1,SPI_SD_begin_transaction@ctx_+1
 15908   0193CE  EC94  F000         	call	_SPI_SD_begin_transaction	;wreg free
 15909   0193D2                     
 15910                           ;../src/boards/../../drivers/SDCard.c: 66:     SPI_SD_dummy_clocks(spi, 10);
 15911   0193D2  C5CE  F50E         	movff	SDCard_init@spi,SPI_SD_dummy_clocks@ctx_
 15912   0193D6  C5CF  F50F         	movff	SDCard_init@spi+1,SPI_SD_dummy_clocks@ctx_+1
 15913   0193DA  0E00               	movlw	0
 15914   0193DC  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 15915   0193DE  0E0A               	movlw	10
 15916   0193E0  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 15917   0193E2  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 15918   0193E6                     
 15919                           ;../src/boards/../../drivers/SDCard.c: 67:     SDCard_end_transaction();
 15920   0193E6  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 15921   0193EA                     
 15922                           ;../src/boards/../../drivers/SDCard.c: 70:     SDCard_command(0, 0, buf, 1);
 15923   0193EA  0E00               	movlw	0
 15924   0193EC  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 15925   0193EE  0E00               	movlw	0
 15926   0193F0  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 15927   0193F2  0E00               	movlw	0
 15928   0193F4  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 15929   0193F6  0E00               	movlw	0
 15930   0193F8  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 15931   0193FA  0ED0               	movlw	low SDCard_init@buf
 15932   0193FC  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 15933   0193FE  0E05               	movlw	high SDCard_init@buf
 15934   019400  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 15935   019402  0E00               	movlw	0
 15936   019404  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 15937   019406  0E01               	movlw	1
 15938   019408  6E31               	movwf	SDCard_command@length^(0+1280),c
 15939   01940A  0E00               	movlw	0
 15940   01940C  EC7A  F0F9         	call	_SDCard_command
 15941   019410                     
 15942                           ;../src/boards/../../drivers/SDCard.c: 72:     if (buf[0] != 0x01) {
 15943   019410  0105               	movlb	5	; () banked
 15944   019412  05D0               	decf	SDCard_init@buf& (0+255),w,b
 15945   019414  B4D8               	btfsc	status,2,c
 15946   019416  EF0F  F0CA         	goto	u33171
 15947   01941A  EF11  F0CA         	goto	u33170
 15948   01941E                     u33171:
 15949   01941E  EF17  F0CA         	goto	l23937
 15950   019422                     u33170:
 15951   019422                     l23933:
 15952                           
 15953                           ; BSR set to: 5
 15954                           ;../src/boards/../../drivers/SDCard.c: 74:         return 1;
 15955   019422  0E00               	movlw	0
 15956   019424  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 15957   019426  0E01               	movlw	1
 15958   019428  6FC5               	movwf	?_SDCard_init& (0+255),b
 15959   01942A  EF02  F0CB         	goto	l600
 15960   01942E                     l23937:
 15961                           
 15962                           ; BSR set to: 5
 15963                           ;../src/boards/../../drivers/SDCard.c: 78:     SDCard_command(8, 0x000001aa, buf, 5);
 15964   01942E  0EAA               	movlw	170
 15965   019430  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 15966   019432  0E01               	movlw	1
 15967   019434  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 15968   019436  0E00               	movlw	0
 15969   019438  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 15970   01943A  0E00               	movlw	0
 15971   01943C  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 15972   01943E  0ED0               	movlw	low SDCard_init@buf
 15973   019440  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 15974   019442  0E05               	movlw	high SDCard_init@buf
 15975   019444  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 15976   019446  0E00               	movlw	0
 15977   019448  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 15978   01944A  0E05               	movlw	5
 15979   01944C  6E31               	movwf	SDCard_command@length^(0+1280),c
 15980   01944E  0E08               	movlw	8
 15981   019450  EC7A  F0F9         	call	_SDCard_command
 15982   019454                     
 15983                           ;../src/boards/../../drivers/SDCard.c: 81:     if (buf[0] != 0x01 || (buf[3] & 0x01) != 
      +                          0x01 || buf[4] != 0xaa) {
 15984   019454  0105               	movlb	5	; () banked
 15985   019456  05D0               	decf	SDCard_init@buf& (0+255),w,b
 15986   019458  A4D8               	btfss	status,2,c
 15987   01945A  EF31  F0CA         	goto	u33181
 15988   01945E  EF33  F0CA         	goto	u33180
 15989   019462                     u33181:
 15990   019462  EF45  F0CA         	goto	l608
 15991   019466                     u33180:
 15992   019466                     
 15993                           ; BSR set to: 5
 15994   019466  A1D3               	btfss	(SDCard_init@buf+3)& (0+255),0,b
 15995   019468  EF38  F0CA         	goto	u33191
 15996   01946C  EF3A  F0CA         	goto	u33190
 15997   019470                     u33191:
 15998   019470  EF45  F0CA         	goto	l608
 15999   019474                     u33190:
 16000   019474                     
 16001                           ; BSR set to: 5
 16002   019474  0EAA               	movlw	170
 16003   019476  19D4               	xorwf	(SDCard_init@buf+4)& (0+255),w,b
 16004   019478  B4D8               	btfsc	status,2,c
 16005   01947A  EF41  F0CA         	goto	u33201
 16006   01947E  EF43  F0CA         	goto	u33200
 16007   019482                     u33201:
 16008   019482  EF4B  F0CA         	goto	l23953
 16009   019486                     u33200:
 16010   019486  EF45  F0CA         	goto	l23949
 16011   01948A                     l608:
 16012   01948A                     l23949:
 16013                           
 16014                           ; BSR set to: 5
 16015                           ;../src/boards/../../drivers/SDCard.c: 83:         return 2;
 16016   01948A  0E00               	movlw	0
 16017   01948C  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16018   01948E  0E02               	movlw	2
 16019   019490  6FC5               	movwf	?_SDCard_init& (0+255),b
 16020   019492  EF02  F0CB         	goto	l600
 16021   019496                     l23953:
 16022                           
 16023                           ; BSR set to: 5
 16024                           ;../src/boards/../../drivers/SDCard.c: 87:     for (int i = 0; i < 3000; i++) {
 16025   019496  0E00               	movlw	0
 16026   019498  6FCD               	movwf	(SDCard_init@i+1)& (0+255),b
 16027   01949A  0E00               	movlw	0
 16028   01949C  6FCC               	movwf	SDCard_init@i& (0+255),b
 16029   01949E                     l23959:
 16030                           
 16031                           ; BSR set to: 5
 16032                           ;../src/boards/../../drivers/SDCard.c: 88:         SDCard_command(55, 0, buf, 1);
 16033   01949E  0E00               	movlw	0
 16034   0194A0  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16035   0194A2  0E00               	movlw	0
 16036   0194A4  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16037   0194A6  0E00               	movlw	0
 16038   0194A8  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16039   0194AA  0E00               	movlw	0
 16040   0194AC  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16041   0194AE  0ED0               	movlw	low SDCard_init@buf
 16042   0194B0  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16043   0194B2  0E05               	movlw	high SDCard_init@buf
 16044   0194B4  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16045   0194B6  0E00               	movlw	0
 16046   0194B8  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16047   0194BA  0E01               	movlw	1
 16048   0194BC  6E31               	movwf	SDCard_command@length^(0+1280),c
 16049   0194BE  0E37               	movlw	55
 16050   0194C0  EC7A  F0F9         	call	_SDCard_command
 16051                           
 16052                           ;../src/boards/../../drivers/SDCard.c: 89:         SDCard_command(41, 1UL << 30 , buf, 5
      +                          );
 16053   0194C4  0E00               	movlw	0
 16054   0194C6  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16055   0194C8  0E00               	movlw	0
 16056   0194CA  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16057   0194CC  0E00               	movlw	0
 16058   0194CE  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16059   0194D0  0E40               	movlw	64
 16060   0194D2  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16061   0194D4  0ED0               	movlw	low SDCard_init@buf
 16062   0194D6  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16063   0194D8  0E05               	movlw	high SDCard_init@buf
 16064   0194DA  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16065   0194DC  0E00               	movlw	0
 16066   0194DE  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16067   0194E0  0E05               	movlw	5
 16068   0194E2  6E31               	movwf	SDCard_command@length^(0+1280),c
 16069   0194E4  0E29               	movlw	41
 16070   0194E6  EC7A  F0F9         	call	_SDCard_command
 16071   0194EA                     
 16072                           ;../src/boards/../../drivers/SDCard.c: 90:         if (buf[0] == 0x00)
 16073   0194EA  0105               	movlb	5	; () banked
 16074   0194EC  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16075   0194EE  A4D8               	btfss	status,2,c
 16076   0194F0  EF7C  F0CA         	goto	u33211
 16077   0194F4  EF7E  F0CA         	goto	u33210
 16078   0194F8                     u33211:
 16079   0194F8  EF80  F0CA         	goto	l23965
 16080   0194FC                     u33210:
 16081   0194FC  EF90  F0CA         	goto	l23971
 16082   019500                     l23965:
 16083                           
 16084                           ; BSR set to: 5
 16085                           ;../src/boards/../../drivers/SDCard.c: 92:     }
 16086   019500  4BCC               	infsnz	SDCard_init@i& (0+255),f,b
 16087   019502  2BCD               	incf	(SDCard_init@i+1)& (0+255),f,b
 16088   019504                     
 16089                           ; BSR set to: 5
 16090   019504  BFCD               	btfsc	(SDCard_init@i+1)& (0+255),7,b
 16091   019506  EF8E  F0CA         	goto	u33221
 16092   01950A  0EB8               	movlw	184
 16093   01950C  5DCC               	subwf	SDCard_init@i& (0+255),w,b
 16094   01950E  0E0B               	movlw	11
 16095   019510  59CD               	subwfb	(SDCard_init@i+1)& (0+255),w,b
 16096   019512  A0D8               	btfss	status,0,c
 16097   019514  EF8E  F0CA         	goto	u33221
 16098   019518  EF90  F0CA         	goto	u33220
 16099   01951C                     u33221:
 16100   01951C  EF4F  F0CA         	goto	l23959
 16101   019520                     u33220:
 16102   019520                     l23971:
 16103                           
 16104                           ; BSR set to: 5
 16105                           ;../src/boards/../../drivers/SDCard.c: 94:     if (buf[0] != 0x00) {
 16106   019520  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16107   019522  B4D8               	btfsc	status,2,c
 16108   019524  EF96  F0CA         	goto	u33231
 16109   019528  EF98  F0CA         	goto	u33230
 16110   01952C                     u33231:
 16111   01952C  EF9A  F0CA         	goto	l23979
 16112   019530                     u33230:
 16113   019530  EF11  F0CA         	goto	l23933
 16114   019534                     l23979:
 16115                           
 16116                           ; BSR set to: 5
 16117                           ;../src/boards/../../drivers/SDCard.c: 100:     SDCard_command(58, 0, buf, 5);
 16118   019534  0E00               	movlw	0
 16119   019536  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16120   019538  0E00               	movlw	0
 16121   01953A  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16122   01953C  0E00               	movlw	0
 16123   01953E  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16124   019540  0E00               	movlw	0
 16125   019542  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16126   019544  0ED0               	movlw	low SDCard_init@buf
 16127   019546  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16128   019548  0E05               	movlw	high SDCard_init@buf
 16129   01954A  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16130   01954C  0E00               	movlw	0
 16131   01954E  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16132   019550  0E05               	movlw	5
 16133   019552  6E31               	movwf	SDCard_command@length^(0+1280),c
 16134   019554  0E3A               	movlw	58
 16135   019556  EC7A  F0F9         	call	_SDCard_command
 16136   01955A                     
 16137                           ;../src/boards/../../drivers/SDCard.c: 103:     if (buf[0] & 0xfe) {
 16138   01955A  C5D0  F5CB         	movff	SDCard_init@buf,??_SDCard_init
 16139   01955E  0EFE               	movlw	254
 16140   019560  0105               	movlb	5	; () banked
 16141   019562  17CB               	andwf	??_SDCard_init& (0+255),f,b
 16142   019564  B4D8               	btfsc	status,2,c
 16143   019566  EFB7  F0CA         	goto	u33241
 16144   01956A  EFB9  F0CA         	goto	u33240
 16145   01956E                     u33241:
 16146   01956E  EFBF  F0CA         	goto	l623
 16147   019572                     u33240:
 16148   019572                     l23987:
 16149                           
 16150                           ; BSR set to: 5
 16151                           ;../src/boards/../../drivers/SDCard.c: 105:         return 3;
 16152   019572  0E00               	movlw	0
 16153   019574  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16154   019576  0E03               	movlw	3
 16155   019578  6FC5               	movwf	?_SDCard_init& (0+255),b
 16156   01957A  EF02  F0CB         	goto	l600
 16157   01957E                     l623:
 16158                           
 16159                           ; BSR set to: 5
 16160                           ;../src/boards/../../drivers/SDCard.c: 107:     if (!(buf[1] & 0x40)) {
 16161   01957E  BDD1               	btfsc	(SDCard_init@buf+1)& (0+255),6,b
 16162   019580  EFC4  F0CA         	goto	u33251
 16163   019584  EFC6  F0CA         	goto	u33250
 16164   019588                     u33251:
 16165   019588  EFC8  F0CA         	goto	l632
 16166   01958C                     u33250:
 16167   01958C  EF45  F0CA         	goto	l23949
 16168   019590                     l632:
 16169   019590                     
 16170                           ; BSR set to: 5
 16171                           ;../src/boards/../../drivers/SDCard.c: 113:     if (!(buf[1] & 0x80)) {
 16172   019590  BFD1               	btfsc	(SDCard_init@buf+1)& (0+255),7,b
 16173   019592  EFCD  F0CA         	goto	u33261
 16174   019596  EFCF  F0CA         	goto	u33260
 16175   01959A                     u33261:
 16176   01959A  EFD1  F0CA         	goto	l639
 16177   01959E                     u33260:
 16178   01959E  EFB9  F0CA         	goto	l23987
 16179   0195A2                     l639:
 16180   0195A2                     
 16181                           ; BSR set to: 5
 16182                           ;../src/boards/../../drivers/SDCard.c: 120:     SDCard_command(59, 1, buf, 1);
 16183   0195A2  0E01               	movlw	1
 16184   0195A4  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16185   0195A6  0E00               	movlw	0
 16186   0195A8  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16187   0195AA  0E00               	movlw	0
 16188   0195AC  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16189   0195AE  0E00               	movlw	0
 16190   0195B0  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16191   0195B2  0ED0               	movlw	low SDCard_init@buf
 16192   0195B4  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16193   0195B6  0E05               	movlw	high SDCard_init@buf
 16194   0195B8  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16195   0195BA  0E00               	movlw	0
 16196   0195BC  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16197   0195BE  0E01               	movlw	1
 16198   0195C0  6E31               	movwf	SDCard_command@length^(0+1280),c
 16199   0195C2  0E3B               	movlw	59
 16200   0195C4  EC7A  F0F9         	call	_SDCard_command
 16201   0195C8                     
 16202                           ;../src/boards/../../drivers/SDCard.c: 121:     if (buf[0] != 0x00) {
 16203   0195C8  0105               	movlb	5	; () banked
 16204   0195CA  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16205   0195CC  B4D8               	btfsc	status,2,c
 16206   0195CE  EFEB  F0CA         	goto	u33271
 16207   0195D2  EFED  F0CA         	goto	u33270
 16208   0195D6                     u33271:
 16209   0195D6  EFEF  F0CA         	goto	l24019
 16210   0195DA                     u33270:
 16211   0195DA  EFB9  F0CA         	goto	l23987
 16212   0195DE                     l24019:
 16213                           
 16214                           ; BSR set to: 5
 16215                           ;../src/boards/../../drivers/SDCard.c: 126:     SPI_SD_configure(spi, clock_speed, 1, 0)
      +                          ;
 16216   0195DE  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 16217   0195E2  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 16218   0195E6  C5C7  F5BF         	movff	SDCard_init@clock_speed,SPI_SD_configure@clock_speed
 16219   0195EA  C5C8  F5C0         	movff	SDCard_init@clock_speed+1,SPI_SD_configure@clock_speed+1
 16220   0195EE  0E01               	movlw	1
 16221   0195F0  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 16222   0195F2  0E00               	movlw	0
 16223   0195F4  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 16224   0195F6  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 16225   0195FA                     
 16226                           ;../src/boards/../../drivers/SDCard.c: 130:     return 0;
 16227   0195FA  0E00               	movlw	0
 16228   0195FC  0105               	movlb	5	; () banked
 16229   0195FE  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16230   019600  0E00               	movlw	0
 16231   019602  6FC5               	movwf	?_SDCard_init& (0+255),b
 16232   019604                     l600:
 16233                           
 16234                           ; BSR set to: 5
 16235   019604  0012               	return		;funcret
 16236   019606                     __end_of_SDCard_init:
 16237                           	callstack 0
 16238                           
 16239 ;; *************** function _SPI_SD_configure *****************
 16240 ;; Defined at:
 16241 ;;		line 78 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 16242 ;; Parameters:    Size  Location     Type
 16243 ;;  ctx_            2   93[BANK5 ] PTR struct SPI
 16244 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16245 ;;  clock_speed     2   95[BANK5 ] int 
 16246 ;;  bit_order       1   97[BANK5 ] unsigned char 
 16247 ;;  data_mode       1   98[BANK5 ] unsigned char 
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;  ctx             2    0        PTR struct SPI_HW
 16250 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16251 ;; Return value:  Size  Location     Type
 16252 ;;                  1    wreg      void 
 16253 ;; Registers used:
 16254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16255 ;; Tracked objects:
 16256 ;;		On entry : 0/0
 16257 ;;		On exit  : 0/0
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16263 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16264 ;;Total ram usage:        8 bytes
 16265 ;; Hardware stack levels used: 1
 16266 ;; Hardware stack levels required when called: 9
 16267 ;; This function calls:
 16268 ;;		_printf
 16269 ;; This function is called by:
 16270 ;;		_SDCard_init
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text19
 16275   01CAB6                     __ptext19:
 16276                           	callstack 0
 16277   01CAB6                     _SPI_SD_configure:
 16278                           	callstack 115
 16279   01CAB6                     
 16280                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 82:     SPI1CON0bits.MST = 1;
 16281   01CAB6  0100               	movlb	0	; () banked
 16282   01CAB8  8384               	bsf	132,1,b	;volatile
 16283   01CABA                     
 16284                           ; BSR set to: 0
 16285                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 83:     SPI1CON0bits.BMODE = 1;
 16286   01CABA  8184               	bsf	132,0,b	;volatile
 16287   01CABC                     
 16288                           ; BSR set to: 0
 16289                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 84:     SPI1TWIDTH = 0;
 16290   01CABC  6B88               	clrf	136,b	;volatile
 16291   01CABE                     
 16292                           ; BSR set to: 0
 16293                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 85:     SPI1INTE = 0;
 16294   01CABE  6B8B               	clrf	139,b	;volatile
 16295   01CAC0                     
 16296                           ; BSR set to: 0
 16297                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 86:     SPI1CON1bits.FST = 0;
 16298   01CAC0  9985               	bcf	133,4,b	;volatile
 16299   01CAC2                     
 16300                           ; BSR set to: 0
 16301                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 87:     SPI1CON2bits.TXR = 1;
 16302   01CAC2  8386               	bsf	134,1,b	;volatile
 16303   01CAC4                     
 16304                           ; BSR set to: 0
 16305                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 88:     SPI1CON2bits.RXR = 1;
 16306   01CAC4  8186               	bsf	134,0,b	;volatile
 16307                           
 16308                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 90:     if (bit_order == 1)
 16309   01CAC6  0105               	movlb	5	; () banked
 16310   01CAC8  05C1               	decf	SPI_SD_configure@bit_order& (0+255),w,b
 16311   01CACA  A4D8               	btfss	status,2,c
 16312   01CACC  EF6A  F0E5         	goto	u32931
 16313   01CAD0  EF6C  F0E5         	goto	u32930
 16314   01CAD4                     u32931:
 16315   01CAD4  EF70  F0E5         	goto	l464
 16316   01CAD8                     u32930:
 16317   01CAD8                     
 16318                           ; BSR set to: 5
 16319                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 91:         SPI1CON0bits.LSBF = 0;
 16320   01CAD8  0100               	movlb	0	; () banked
 16321   01CADA  9584               	bcf	132,2,b	;volatile
 16322   01CADC  EF72  F0E5         	goto	l23727
 16323   01CAE0                     l464:
 16324                           
 16325                           ; BSR set to: 5
 16326                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 93:         SPI1CON0bits.LSBF = 1;
 16327   01CAE0  0100               	movlb	0	; () banked
 16328   01CAE2  8584               	bsf	132,2,b	;volatile
 16329   01CAE4                     l23727:
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 95:     if (data_mode == 0) {
 16333   01CAE4  0105               	movlb	5	; () banked
 16334   01CAE6  51C2               	movf	SPI_SD_configure@data_mode& (0+255),w,b
 16335   01CAE8  A4D8               	btfss	status,2,c
 16336   01CAEA  EF79  F0E5         	goto	u32941
 16337   01CAEE  EF7B  F0E5         	goto	u32940
 16338   01CAF2                     u32941:
 16339   01CAF2  EF81  F0E5         	goto	l23731
 16340   01CAF6                     u32940:
 16341   01CAF6                     
 16342                           ; BSR set to: 5
 16343                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 96:         SPI1CON1bits.SMP = 0;
 16344   01CAF6  0100               	movlb	0	; () banked
 16345   01CAF8  9F85               	bcf	133,7,b	;volatile
 16346                           
 16347                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 97:         SPI1CON1bits.CKE = 1;
 16348   01CAFA  8D85               	bsf	133,6,b	;volatile
 16349                           
 16350                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 98:         SPI1CON1bits.CKP = 0;
 16351   01CAFC  9B85               	bcf	133,5,b	;volatile
 16352                           
 16353                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 99:     } else {
 16354   01CAFE  EF90  F0E5         	goto	l467
 16355   01CB02                     l23731:
 16356                           
 16357                           ; BSR set to: 5
 16358                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 100:         printf("%s: ERROR: mode %d 
      +                          is not supported\n\r", __func__, data_mode);
 16359   01CB02  0EB4               	movlw	low STR_6
 16360   01CB04  6FAD               	movwf	printf@fmt& (0+255),b
 16361   01CB06  0EF6               	movlw	high STR_6
 16362   01CB08  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16363   01CB0A  0EC6               	movlw	low STR_7
 16364   01CB0C  6FAF               	movwf	(?_printf+2)& (0+255),b
 16365   01CB0E  0EFD               	movlw	high STR_7
 16366   01CB10  6FB0               	movwf	(?_printf+3)& (0+255),b
 16367   01CB12  C5C2  F5B1         	movff	SPI_SD_configure@data_mode,?_printf+4
 16368   01CB16  6BB2               	clrf	(?_printf+5)& (0+255),b
 16369   01CB18  ECDA  F0FF         	call	_printf	;wreg free
 16370   01CB1C                     l468:
 16371   01CB1C  EF8E  F0E5         	goto	l468
 16372   01CB20                     l467:
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 104:     SPI1CLK = 0;
 16376   01CB20  6B8C               	clrf	140,b	;volatile
 16377                           
 16378                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 105:     switch (clock_speed) {
 16379   01CB22  EFC8  F0E5         	goto	l23751
 16380   01CB26                     l23733:
 16381                           
 16382                           ; BSR set to: 5
 16383                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 107:         SPI1CLK = 2;
 16384   01CB26  0E02               	movlw	2
 16385   01CB28  0100               	movlb	0	; () banked
 16386   01CB2A  6F8C               	movwf	140,b	;volatile
 16387                           
 16388                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 108:         SPI1BAUD = 2;
 16389   01CB2C  0E02               	movlw	2
 16390   01CB2E  6F89               	movwf	137,b	;volatile
 16391                           
 16392                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 109:         break;
 16393   01CB30  EFF3  F0E5         	goto	l481
 16394   01CB34                     l23735:
 16395                           
 16396                           ; BSR set to: 5
 16397                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 111:         SPI1BAUD = 15;
 16398   01CB34  0E0F               	movlw	15
 16399   01CB36  0100               	movlb	0	; () banked
 16400   01CB38  6F89               	movwf	137,b	;volatile
 16401                           
 16402                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 112:         break;
 16403   01CB3A  EFF3  F0E5         	goto	l481
 16404   01CB3E                     l23737:
 16405                           
 16406                           ; BSR set to: 5
 16407                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 114:         SPI1BAUD = 7;
 16408   01CB3E  0E07               	movlw	7
 16409   01CB40  0100               	movlb	0	; () banked
 16410   01CB42  6F89               	movwf	137,b	;volatile
 16411                           
 16412                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 115:         break;
 16413   01CB44  EFF3  F0E5         	goto	l481
 16414   01CB48                     l23739:
 16415                           
 16416                           ; BSR set to: 5
 16417                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 117:         SPI1BAUD = 5;
 16418   01CB48  0E05               	movlw	5
 16419   01CB4A  0100               	movlb	0	; () banked
 16420   01CB4C  6F89               	movwf	137,b	;volatile
 16421                           
 16422                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 118:         break;
 16423   01CB4E  EFF3  F0E5         	goto	l481
 16424   01CB52                     l23741:
 16425                           
 16426                           ; BSR set to: 5
 16427                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 120:         SPI1BAUD = 4;
 16428   01CB52  0E04               	movlw	4
 16429   01CB54  0100               	movlb	0	; () banked
 16430   01CB56  6F89               	movwf	137,b	;volatile
 16431                           
 16432                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 121:         break;
 16433   01CB58  EFF3  F0E5         	goto	l481
 16434   01CB5C                     l23743:
 16435                           
 16436                           ; BSR set to: 5
 16437                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 123:         SPI1BAUD = 3;
 16438   01CB5C  0E03               	movlw	3
 16439   01CB5E  0100               	movlb	0	; () banked
 16440   01CB60  6F89               	movwf	137,b	;volatile
 16441                           
 16442                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 124:         break;
 16443   01CB62  EFF3  F0E5         	goto	l481
 16444   01CB66                     l23745:
 16445                           
 16446                           ; BSR set to: 5
 16447                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 126:         SPI1BAUD = 2;
 16448   01CB66  0E02               	movlw	2
 16449   01CB68  0100               	movlb	0	; () banked
 16450   01CB6A  6F89               	movwf	137,b	;volatile
 16451                           
 16452                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 127:         break;
 16453   01CB6C  EFF3  F0E5         	goto	l481
 16454   01CB70                     l23747:
 16455                           
 16456                           ; BSR set to: 5
 16457                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 129:         printf("%s: ERROR: clock sp
      +                          eed %d is not supported\n\r", __func__, clock_speed);
 16458   01CB70  0E19               	movlw	low STR_8
 16459   01CB72  6FAD               	movwf	printf@fmt& (0+255),b
 16460   01CB74  0EF4               	movlw	high STR_8
 16461   01CB76  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16462   01CB78  0EC6               	movlw	low STR_7
 16463   01CB7A  6FAF               	movwf	(?_printf+2)& (0+255),b
 16464   01CB7C  0EFD               	movlw	high STR_7
 16465   01CB7E  6FB0               	movwf	(?_printf+3)& (0+255),b
 16466   01CB80  C5BF  F5B1         	movff	SPI_SD_configure@clock_speed,?_printf+4
 16467   01CB84  C5C0  F5B2         	movff	SPI_SD_configure@clock_speed+1,?_printf+5
 16468   01CB88  ECDA  F0FF         	call	_printf	;wreg free
 16469                           
 16470                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 130:         break;
 16471   01CB8C  EFF3  F0E5         	goto	l481
 16472   01CB90                     l23751:
 16473                           
 16474                           ; BSR set to: 0
 16475   01CB90  C5BF  F5C3         	movff	SPI_SD_configure@clock_speed,??_SPI_SD_configure
 16476   01CB94  C5C0  F5C4         	movff	SPI_SD_configure@clock_speed+1,??_SPI_SD_configure+1
 16477                           
 16478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16479                           ; Switch size 1, requested type "simple"
 16480                           ; Number of cases is 1, Range of values is 0 to 0
 16481                           ; switch strategies available:
 16482                           ; Name         Instructions Cycles
 16483                           ; simple_byte            4     3 (average)
 16484                           ;	Chosen strategy is simple_byte
 16485   01CB98  0105               	movlb	5	; () banked
 16486   01CB9A  51C4               	movf	(??_SPI_SD_configure+1)& (0+255),w,b
 16487   01CB9C  0A00               	xorlw	0	; case 0
 16488   01CB9E  B4D8               	btfsc	status,2,c
 16489   01CBA0  EFD4  F0E5         	goto	l26333
 16490   01CBA4  EFB8  F0E5         	goto	l23747
 16491   01CBA8                     l26333:
 16492                           
 16493                           ; BSR set to: 5
 16494                           ; Switch size 1, requested type "simple"
 16495                           ; Number of cases is 7, Range of values is 0 to 6
 16496                           ; switch strategies available:
 16497                           ; Name         Instructions Cycles
 16498                           ; simple_byte           22    12 (average)
 16499                           ;	Chosen strategy is simple_byte
 16500   01CBA8  51C3               	movf	??_SPI_SD_configure& (0+255),w,b
 16501   01CBAA  0A00               	xorlw	0	; case 0
 16502   01CBAC  B4D8               	btfsc	status,2,c
 16503   01CBAE  EF93  F0E5         	goto	l23733
 16504   01CBB2  0A01               	xorlw	1	; case 1
 16505   01CBB4  B4D8               	btfsc	status,2,c
 16506   01CBB6  EF9A  F0E5         	goto	l23735
 16507   01CBBA  0A03               	xorlw	3	; case 2
 16508   01CBBC  B4D8               	btfsc	status,2,c
 16509   01CBBE  EF9F  F0E5         	goto	l23737
 16510   01CBC2  0A01               	xorlw	1	; case 3
 16511   01CBC4  B4D8               	btfsc	status,2,c
 16512   01CBC6  EFA4  F0E5         	goto	l23739
 16513   01CBCA  0A07               	xorlw	7	; case 4
 16514   01CBCC  B4D8               	btfsc	status,2,c
 16515   01CBCE  EFA9  F0E5         	goto	l23741
 16516   01CBD2  0A01               	xorlw	1	; case 5
 16517   01CBD4  B4D8               	btfsc	status,2,c
 16518   01CBD6  EFAE  F0E5         	goto	l23743
 16519   01CBDA  0A03               	xorlw	3	; case 6
 16520   01CBDC  B4D8               	btfsc	status,2,c
 16521   01CBDE  EFB3  F0E5         	goto	l23745
 16522   01CBE2  EFB8  F0E5         	goto	l23747
 16523   01CBE6                     l481:
 16524   01CBE6  0012               	return		;funcret
 16525   01CBE8                     __end_of_SPI_SD_configure:
 16526                           	callstack 0
 16527                           
 16528 ;; *************** function _SPI_SD_begin *****************
 16529 ;; Defined at:
 16530 ;;		line 65 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 16533 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 16536 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  1    wreg      void 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16550 ;;Total ram usage:        4 bytes
 16551 ;; Hardware stack levels used: 1
 16552 ;; Hardware stack levels required when called: 1
 16553 ;; This function calls:
 16554 ;;		Nothing
 16555 ;; This function is called by:
 16556 ;;		_SDCard_init
 16557 ;; This function uses a non-reentrant model
 16558 ;;
 16559                           
 16560                           	psect	text20
 16561   01FF34                     __ptext20:
 16562                           	callstack 0
 16563   01FF34                     _SPI_SD_begin:
 16564                           	callstack 123
 16565   01FF34                     
 16566                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 65: void SPI_SD_begin(struct SPI *ctx_);
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 66: {;../src/boards/../../drivers/pic18f5
      +                          7q43_spi.c: 67:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 16567   01FF34  C504  F506         	movff	SPI_SD_begin@ctx_,SPI_SD_begin@ctx
 16568   01FF38  C505  F507         	movff	SPI_SD_begin@ctx_+1,SPI_SD_begin@ctx+1
 16569   01FF3C                     
 16570                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 68:     ctx->bus_acquired = 0;
 16571   01FF3C  EE20 F002          	lfsr	2,2
 16572   01FF40  5006               	movf	SPI_SD_begin@ctx^(0+1280),w,c
 16573   01FF42  26D9               	addwf	fsr2l,f,c
 16574   01FF44  5007               	movf	(SPI_SD_begin@ctx+1)^(0+1280),w,c
 16575   01FF46  22DA               	addwfc	fsr2h,f,c
 16576   01FF48  6ADF               	clrf	indf2,c
 16577   01FF4A                     
 16578                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 70:     SPI1CON0 = 0;
 16579   01FF4A  0100               	movlb	0	; () banked
 16580   01FF4C  6B84               	clrf	132,b	;volatile
 16581   01FF4E                     
 16582                           ; BSR set to: 0
 16583                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 71:     SPI1CON1 = 0;
 16584   01FF4E  6B85               	clrf	133,b	;volatile
 16585   01FF50                     
 16586                           ; BSR set to: 0
 16587                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 72:     SPI1SCKPPS = ((1 << 3) | 1);
 16588   01FF50  0E09               	movlw	9
 16589   01FF52  0102               	movlb	2	; () banked
 16590   01FF54  6F6A               	movwf	106,b	;volatile
 16591   01FF56                     
 16592                           ; BSR set to: 2
 16593                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 73:     SPI1SDIPPS = ((1 << 3) | 2);
 16594   01FF56  0E0A               	movlw	10
 16595   01FF58  6F6B               	movwf	107,b	;volatile
 16596   01FF5A                     
 16597                           ; BSR set to: 2
 16598                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 74:     TRISE2 = 0;
 16599   01FF5A  94CA               	bcf	1226,2,c	;volatile
 16600   01FF5C                     
 16601                           ; BSR set to: 2
 16602                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 75:     SPI1CON0bits.EN = 1;
 16603   01FF5C  0100               	movlb	0	; () banked
 16604   01FF5E  8F84               	bsf	132,7,b	;volatile
 16605   01FF60                     
 16606                           ; BSR set to: 0
 16607   01FF60  0012               	return		;funcret
 16608   01FF62                     __end_of_SPI_SD_begin:
 16609                           	callstack 0
 16610                           
 16611 ;; *************** function _SDCard_command *****************
 16612 ;; Defined at:
 16613 ;;		line 316 in file "../src/boards/../../drivers/SDCard.c"
 16614 ;; Parameters:    Size  Location     Type
 16615 ;;  command         1    wreg     unsigned char 
 16616 ;;  argument        4   42[COMRAM] unsigned long 
 16617 ;;  response_buf    2   46[COMRAM] PTR void 
 16618 ;;		 -> SDCard_init@buf(5), 
 16619 ;;  length          2   48[COMRAM] unsigned int 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;  command         1   50[COMRAM] unsigned char 
 16622 ;;  responsep       2   55[COMRAM] PTR unsigned char 
 16623 ;;		 -> SDCard_init@buf(5), 
 16624 ;;  result          2   53[COMRAM] int 
 16625 ;;  spi             2   51[COMRAM] PTR struct SPI
 16626 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16627 ;; Return value:  Size  Location     Type
 16628 ;;                  2   42[COMRAM] int 
 16629 ;; Registers used:
 16630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16631 ;; Tracked objects:
 16632 ;;		On entry : 0/0
 16633 ;;		On exit  : 0/0
 16634 ;;		Unchanged: 0/0
 16635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16637 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16639 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16640 ;;Total ram usage:       15 bytes
 16641 ;; Hardware stack levels used: 1
 16642 ;; Hardware stack levels required when called: 5
 16643 ;; This function calls:
 16644 ;;		_SDCard_end_transaction
 16645 ;;		_SPI_SD_receive
 16646 ;;		___SDCard_command_r1
 16647 ;; This function is called by:
 16648 ;;		_SDCard_init
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text21
 16653   01F2F4                     __ptext21:
 16654                           	callstack 0
 16655   01F2F4                     _SDCard_command:
 16656                           	callstack 119
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;incstack = 0
 16660                           ;SDCard_command@command stored from wreg
 16661   01F2F4  6E33               	movwf	SDCard_command@command^(0+1280),c
 16662   01F2F6                     
 16663                           ;../src/boards/../../drivers/SDCard.c: 316: int SDCard_command(uint8_t command, uint32_t
      +                           argument, void *response_buffer, unsigned int length);../src/boards/../../drivers/SDCar
      +                          d.c: 317: {;../src/boards/../../drivers/SDCard.c: 318:     struct SPI *spi = ctx_.spi;
 16664   01F2F6  C7A8  F534         	movff	_ctx_,SDCard_command@spi
 16665   01F2FA  C7A9  F535         	movff	_ctx_+1,SDCard_command@spi+1
 16666                           
 16667                           ;../src/boards/../../drivers/SDCard.c: 319:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 320:     uint8_t *responsep = (uint8_t*)response_buffer;
 16668   01F2FE  C52F  F538         	movff	SDCard_command@response_buffer,SDCard_command@responsep
 16669   01F302  C530  F539         	movff	SDCard_command@response_buffer+1,SDCard_command@responsep+1
 16670   01F306                     
 16671                           ;../src/boards/../../drivers/SDCard.c: 322:     result = __SDCard_command_r1(command, ar
      +                          gument, responsep);
 16672   01F306  C52B  F51B         	movff	SDCard_command@argument,___SDCard_command_r1@argument
 16673   01F30A  C52C  F51C         	movff	SDCard_command@argument+1,___SDCard_command_r1@argument+1
 16674   01F30E  C52D  F51D         	movff	SDCard_command@argument+2,___SDCard_command_r1@argument+2
 16675   01F312  C52E  F51E         	movff	SDCard_command@argument+3,___SDCard_command_r1@argument+3
 16676   01F316  C538  F51F         	movff	SDCard_command@responsep,___SDCard_command_r1@r1
 16677   01F31A  C539  F520         	movff	SDCard_command@responsep+1,___SDCard_command_r1@r1+1
 16678   01F31E  5033               	movf	SDCard_command@command^(0+1280),w,c
 16679   01F320  EC23  F0F3         	call	___SDCard_command_r1
 16680   01F324  C51B  F536         	movff	?___SDCard_command_r1,SDCard_command@result
 16681   01F328  C51C  F537         	movff	?___SDCard_command_r1+1,SDCard_command@result+1
 16682   01F32C                     
 16683                           ;../src/boards/../../drivers/SDCard.c: 323:     if (result != 0) {
 16684   01F32C  5036               	movf	SDCard_command@result^(0+1280),w,c
 16685   01F32E  1037               	iorwf	(SDCard_command@result+1)^(0+1280),w,c
 16686   01F330  B4D8               	btfsc	status,2,c
 16687   01F332  EF9D  F0F9         	goto	u32951
 16688   01F336  EF9F  F0F9         	goto	u32950
 16689   01F33A                     u32951:
 16690   01F33A  EFA3  F0F9         	goto	l23769
 16691   01F33E                     u32950:
 16692   01F33E                     
 16693                           ;../src/boards/../../drivers/SDCard.c: 324:         SDCard_end_transaction();
 16694   01F33E  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 16695   01F342  EFB7  F0F9         	goto	l723
 16696   01F346                     l23769:
 16697                           
 16698                           ;../src/boards/../../drivers/SDCard.c: 328:     SPI_SD_receive(spi, &responsep[1], lengt
      +                          h - 1);
 16699   01F346  C534  F504         	movff	SDCard_command@spi,SPI_SD_receive@ctx_
 16700   01F34A  C535  F505         	movff	SDCard_command@spi+1,SPI_SD_receive@ctx_+1
 16701   01F34E  0E01               	movlw	1
 16702   01F350  2438               	addwf	SDCard_command@responsep^(0+1280),w,c
 16703   01F352  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 16704   01F354  0E00               	movlw	0
 16705   01F356  2039               	addwfc	(SDCard_command@responsep+1)^(0+1280),w,c
 16706   01F358  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 16707   01F35A  0EFF               	movlw	255
 16708   01F35C  2431               	addwf	SDCard_command@length^(0+1280),w,c
 16709   01F35E  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 16710   01F360  0EFF               	movlw	255
 16711   01F362  2032               	addwfc	(SDCard_command@length+1)^(0+1280),w,c
 16712   01F364  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 16713   01F366  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 16714                           
 16715                           ;../src/boards/../../drivers/SDCard.c: 329:     SDCard_end_transaction();
 16716   01F36A  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 16717   01F36E                     l723:
 16718   01F36E  0012               	return		;funcret
 16719   01F370                     __end_of_SDCard_command:
 16720                           	callstack 0
 16721                           
 16722 ;; *************** function _setup_monitor *****************
 16723 ;; Defined at:
 16724 ;;		line 268 in file "../src/w65_main.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;		None
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;  rs              2   24[BANK7 ] int 
 16729 ;;  dat             1    0        unsigned char 
 16730 ;; Return value:  Size  Location     Type
 16731 ;;                  2   22[BANK7 ] int 
 16732 ;; Registers used:
 16733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16734 ;; Tracked objects:
 16735 ;;		On entry : 0/0
 16736 ;;		On exit  : 0/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16739 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16740 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16742 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16743 ;;Total ram usage:        4 bytes
 16744 ;; Hardware stack levels used: 1
 16745 ;; Hardware stack levels required when called: 25
 16746 ;; This function calls:
 16747 ;;		_drive_cpu
 16748 ;;		_load_program
 16749 ;;		_printf
 16750 ;;		_setup_tomer0
 16751 ;;		_start_W65
 16752 ;;		_write_sram
 16753 ;; This function is called by:
 16754 ;;		_main
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text22
 16759   01E858                     __ptext22:
 16760                           	callstack 0
 16761   01E858                     _setup_monitor:
 16762                           	callstack 101
 16763   01E858                     
 16764                           ;../src/w65_main.c: 270:  int rs;;../src/w65_main.c: 271:  uint8_t dat;;../src/w65_main.
      +                          c: 273:  printf("Install Monitor Program..........\r\n");
 16765   01E858  0EDA               	movlw	low STR_77
 16766   01E85A  0105               	movlb	5	; () banked
 16767   01E85C  6FAD               	movwf	printf@fmt& (0+255),b
 16768   01E85E  0EF6               	movlw	high STR_77
 16769   01E860  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16770   01E862  ECDA  F0FF         	call	_printf	;wreg free
 16771   01E866                     
 16772                           ;../src/w65_main.c: 275:  if (cpu_flg) {
 16773   01E866  0107               	movlb	7	; () banked
 16774   01E868  51E5               	movf	_cpu_flg& (0+255),w,b
 16775   01E86A  B4D8               	btfsc	status,2,c
 16776   01E86C  EF3A  F0F4         	goto	u34601
 16777   01E870  EF3C  F0F4         	goto	u34600
 16778   01E874                     u34601:
 16779   01E874  EF44  F0F4         	goto	l24857
 16780   01E878                     u34600:
 16781   01E878                     
 16782                           ; BSR set to: 7
 16783                           ;../src/w65_main.c: 276:   arg[0] = mon16;
 16784   01E878  0EE3               	movlw	low STR_51
 16785   01E87A  6F9E               	movwf	_arg& (0+255),b
 16786   01E87C  0EFE               	movlw	high STR_51
 16787   01E87E  6F9F               	movwf	(_arg+1)& (0+255),b
 16788   01E880                     
 16789                           ; BSR set to: 7
 16790                           ;../src/w65_main.c: 277:   mon = 1;
 16791   01E880  0E01               	movlw	1
 16792   01E882  6FC8               	movwf	_mon& (0+255),b
 16793                           
 16794                           ;../src/w65_main.c: 278:  }
 16795   01E884  EF49  F0F4         	goto	l24861
 16796   01E888                     l24857:
 16797                           
 16798                           ; BSR set to: 7
 16799                           ;../src/w65_main.c: 280:   arg[0] = mon02;
 16800   01E888  0ED8               	movlw	low STR_50
 16801   01E88A  6F9E               	movwf	_arg& (0+255),b
 16802   01E88C  0EFE               	movlw	high STR_50
 16803   01E88E  6F9F               	movwf	(_arg+1)& (0+255),b
 16804   01E890                     
 16805                           ; BSR set to: 7
 16806                           ;../src/w65_main.c: 281:   mon = 0;
 16807   01E890  6BC8               	clrf	_mon& (0+255),b
 16808   01E892                     l24861:
 16809                           
 16810                           ; BSR set to: 7
 16811                           ;../src/w65_main.c: 283:  rs = load_program((uint8_t *)arg[0]);
 16812   01E892  C79E  F700         	movff	_arg,load_program@fname
 16813   01E896  C79F  F701         	movff	_arg+1,load_program@fname+1
 16814   01E89A  EC86  F0AE         	call	_load_program	;wreg free
 16815   01E89E  C700  F718         	movff	?_load_program,setup_monitor@rs
 16816   01E8A2  C701  F719         	movff	?_load_program+1,setup_monitor@rs+1
 16817   01E8A6                     
 16818                           ;../src/w65_main.c: 284:  if ( rs ) return rs;
 16819   01E8A6  0107               	movlb	7	; () banked
 16820   01E8A8  5118               	movf	setup_monitor@rs& (0+255),w,b
 16821   01E8AA  1119               	iorwf	(setup_monitor@rs+1)& (0+255),w,b
 16822   01E8AC  B4D8               	btfsc	status,2,c
 16823   01E8AE  EF5B  F0F4         	goto	u34611
 16824   01E8B2  EF5D  F0F4         	goto	u34610
 16825   01E8B6                     u34611:
 16826   01E8B6  EF63  F0F4         	goto	l24867
 16827   01E8BA                     u34610:
 16828   01E8BA                     
 16829                           ; BSR set to: 7
 16830   01E8BA  C718  F716         	movff	setup_monitor@rs,?_setup_monitor
 16831   01E8BE  C719  F717         	movff	setup_monitor@rs+1,?_setup_monitor+1
 16832   01E8C2  EF80  F0F4         	goto	l1130
 16833   01E8C6                     l24867:
 16834                           
 16835                           ; BSR set to: 7
 16836                           ;../src/w65_main.c: 287:  write_sram(0, &cpu_flg, 1);
 16837   01E8C6  0E00               	movlw	0
 16838   01E8C8  6E04               	movwf	write_sram@addr^(0+1280),c
 16839   01E8CA  0E00               	movlw	0
 16840   01E8CC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 16841   01E8CE  0E00               	movlw	0
 16842   01E8D0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 16843   01E8D2  0E00               	movlw	0
 16844   01E8D4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 16845   01E8D6  0EE5               	movlw	low _cpu_flg
 16846   01E8D8  6E08               	movwf	write_sram@buf^(0+1280),c
 16847   01E8DA  0E07               	movlw	high _cpu_flg
 16848   01E8DC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 16849   01E8DE  0E00               	movlw	0
 16850   01E8E0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 16851   01E8E2  0E01               	movlw	1
 16852   01E8E4  6E0A               	movwf	write_sram@len^(0+1280),c
 16853   01E8E6  EC9F  F0E8         	call	_write_sram	;wreg free
 16854   01E8EA                     
 16855                           ;../src/w65_main.c: 292:  start_W65();
 16856   01E8EA  EC82  F0FF         	call	_start_W65	;wreg free
 16857   01E8EE                     
 16858                           ;../src/w65_main.c: 293:  setup_tomer0();
 16859   01E8EE  ECD2  F000         	call	_setup_tomer0	;wreg free
 16860   01E8F2                     
 16861                           ;../src/w65_main.c: 294:  drive_cpu();
 16862   01E8F2  ECA0  F0FE         	call	_drive_cpu	;wreg free
 16863   01E8F6                     
 16864                           ;../src/w65_main.c: 295:  return 0;
 16865   01E8F6  0E00               	movlw	0
 16866   01E8F8  0107               	movlb	7	; () banked
 16867   01E8FA  6F17               	movwf	(?_setup_monitor+1)& (0+255),b
 16868   01E8FC  0E00               	movlw	0
 16869   01E8FE  6F16               	movwf	?_setup_monitor& (0+255),b
 16870   01E900                     l1130:
 16871                           
 16872                           ; BSR set to: 7
 16873   01E900  0012               	return		;funcret
 16874   01E902                     __end_of_setup_monitor:
 16875                           	callstack 0
 16876                           
 16877 ;; *************** function _start_W65 *****************
 16878 ;; Defined at:
 16879 ;;		line 260 in file "../src/boards/w65_bd.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;		None
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;		None
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      void 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2, cstack
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16897 ;;Total ram usage:        0 bytes
 16898 ;; Hardware stack levels used: 1
 16899 ;; Hardware stack levels required when called: 2
 16900 ;; This function calls:
 16901 ;;		_bus_release_req
 16902 ;; This function is called by:
 16903 ;;		_setup_monitor
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text23
 16908   01FF04                     __ptext23:
 16909                           	callstack 0
 16910   01FF04                     _start_W65:
 16911                           	callstack 123
 16912   01FF04                     
 16913                           ;../src/boards/w65_bd.c: 262:  bus_release_req();
 16914   01FF04  EC32  F001         	call	_bus_release_req	;wreg free
 16915   01FF08                     
 16916                           ;../src/boards/w65_bd.c: 265:  IVTLOCK = 0x55;
 16917   01FF08  0E55               	movlw	85
 16918   01FF0A  0104               	movlb	4	; () banked
 16919   01FF0C  6F59               	movwf	89,b	;volatile
 16920   01FF0E                     
 16921                           ; BSR set to: 4
 16922                           ;../src/boards/w65_bd.c: 266:  IVTLOCK = 0xAA;
 16923   01FF0E  0EAA               	movlw	170
 16924   01FF10  6F59               	movwf	89,b	;volatile
 16925   01FF12                     
 16926                           ; BSR set to: 4
 16927                           ;../src/boards/w65_bd.c: 267:  IVTLOCKbits.IVTLOCKED = 0x00;
 16928   01FF12  9159               	bcf	89,0,b	;volatile
 16929   01FF14                     
 16930                           ; BSR set to: 4
 16931                           ;../src/boards/w65_bd.c: 270:  IVTBASE = 0x000008;
 16932   01FF14  0E08               	movlw	8
 16933   01FF16  6F5D               	movwf	93,b	;volatile
 16934   01FF18  0E00               	movlw	0
 16935   01FF1A  6F5E               	movwf	94,b	;volatile
 16936   01FF1C  0E00               	movlw	0
 16937   01FF1E  6F5F               	movwf	95,b	;volatile
 16938   01FF20                     
 16939                           ; BSR set to: 4
 16940                           ;../src/boards/w65_bd.c: 273:  IVTLOCK = 0x55;
 16941   01FF20  0E55               	movlw	85
 16942   01FF22  6F59               	movwf	89,b	;volatile
 16943   01FF24                     
 16944                           ; BSR set to: 4
 16945                           ;../src/boards/w65_bd.c: 274:  IVTLOCK = 0xAA;
 16946   01FF24  0EAA               	movlw	170
 16947   01FF26  6F59               	movwf	89,b	;volatile
 16948   01FF28                     
 16949                           ; BSR set to: 4
 16950                           ;../src/boards/w65_bd.c: 275:  IVTLOCKbits.IVTLOCKED = 0x01;
 16951   01FF28  8159               	bsf	89,0,b	;volatile
 16952   01FF2A                     
 16953                           ; BSR set to: 4
 16954                           ;../src/boards/w65_bd.c: 278:  CLCSELECT = 0;
 16955   01FF2A  0100               	movlb	0	; () banked
 16956   01FF2C  6BD5               	clrf	213,b	;volatile
 16957   01FF2E                     
 16958                           ; BSR set to: 0
 16959                           ;../src/boards/w65_bd.c: 279:  G2POL = 1;
 16960   01FF2E  83D7               	bsf	215,1,b	;volatile
 16961   01FF30                     
 16962                           ; BSR set to: 0
 16963                           ;../src/boards/w65_bd.c: 282:  LATE0 = 1;
 16964   01FF30  80C2               	bsf	1218,0,c	;volatile
 16965   01FF32                     
 16966                           ; BSR set to: 0
 16967   01FF32  0012               	return		;funcret
 16968   01FF34                     __end_of_start_W65:
 16969                           	callstack 0
 16970                           
 16971 ;; *************** function _setup_tomer0 *****************
 16972 ;; Defined at:
 16973 ;;		line 62 in file "../src/boards/w65_cmn.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;		None
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;		None
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  1    wreg      void 
 16980 ;; Registers used:
 16981 ;;		wreg, status,2
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16991 ;;Total ram usage:        0 bytes
 16992 ;; Hardware stack levels used: 1
 16993 ;; Hardware stack levels required when called: 1
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_setup_monitor
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text24
 17002   0001A4                     __ptext24:
 17003                           	callstack 0
 17004   0001A4                     _setup_tomer0:
 17005                           	callstack 124
 17006   0001A4                     
 17007                           ;../src/boards/w65_cmn.c: 66:  T0CON0 = 0x84;
 17008   0001A4  0E84               	movlw	132
 17009   0001A6  0103               	movlb	3	; () banked
 17010   0001A8  6F1A               	movwf	26,b	;volatile
 17011                           
 17012                           ;../src/boards/w65_cmn.c: 70:  T0CON1 = 0xa1;
 17013   0001AA  0EA1               	movlw	161
 17014   0001AC  6F1B               	movwf	27,b	;volatile
 17015   0001AE                     
 17016                           ; BSR set to: 3
 17017                           ;../src/boards/w65_cmn.c: 71:  MFOEN = 1;
 17018   0001AE  0100               	movlb	0	; () banked
 17019   0001B0  8BB3               	bsf	179,5,b	;volatile
 17020   0001B2                     
 17021                           ; BSR set to: 0
 17022                           ;../src/boards/w65_cmn.c: 72:  TMR0H = 0xff;
 17023   0001B2  0103               	movlb	3	; () banked
 17024   0001B4  6919               	setf	25,b	;volatile
 17025   0001B6                     
 17026                           ; BSR set to: 3
 17027                           ;../src/boards/w65_cmn.c: 73:  TMR0L = 0x00;
 17028   0001B6  6B18               	clrf	24,b	;volatile
 17029   0001B8                     
 17030                           ; BSR set to: 3
 17031                           ;../src/boards/w65_cmn.c: 74:  TMR0IF =0;
 17032   0001B8  9EB1               	bcf	1201,7,c	;volatile
 17033   0001BA                     
 17034                           ; BSR set to: 3
 17035                           ;../src/boards/w65_cmn.c: 75:  TMR0IE = 1;
 17036   0001BA  8EA1               	bsf	1185,7,c	;volatile
 17037   0001BC                     
 17038                           ; BSR set to: 3
 17039   0001BC  0012               	return		;funcret
 17040   0001BE                     __end_of_setup_tomer0:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _set_arg *****************
 17044 ;; Defined at:
 17045 ;;		line 597 in file "../src/w65_main.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  buf             2    3[COMRAM] PTR unsigned char 
 17048 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 17049 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  i               2    5[COMRAM] int 
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  1    wreg      void 
 17054 ;; Registers used:
 17055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17056 ;; Tracked objects:
 17057 ;;		On entry : 0/0
 17058 ;;		On exit  : 0/0
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17065 ;;Total ram usage:        4 bytes
 17066 ;; Hardware stack levels used: 1
 17067 ;; Hardware stack levels required when called: 1
 17068 ;; This function calls:
 17069 ;;		Nothing
 17070 ;; This function is called by:
 17071 ;;		_main
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075                           	psect	text25
 17076   01AE0A                     __ptext25:
 17077                           	callstack 0
 17078   01AE0A                     _set_arg:
 17079                           	callstack 125
 17080   01AE0A                     
 17081                           ;../src/w65_main.c: 599:  int i;;../src/w65_main.c: 601:  i=0;
 17082   01AE0A  0E00               	movlw	0
 17083   01AE0C  6E07               	movwf	(set_arg@i+1)^(0+1280),c
 17084   01AE0E  0E00               	movlw	0
 17085   01AE10  6E06               	movwf	set_arg@i^(0+1280),c
 17086                           
 17087                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 17088   01AE12  EFCD  F0D7         	goto	l17537
 17089   01AE16                     l17509:
 17090   01AE16  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17091   01AE18  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17092   01AE1A                     l17511:
 17093   01AE1A  C504  F4F6         	movff	set_arg@buf,tblptrl
 17094   01AE1E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17095   01AE22  0E00               	movlw	low (__mediumconst shr (0+16))
 17096   01AE24  6EF8               	movwf	tblptru,c
 17097   01AE26  0E25               	movlw	(high __ramtop+-1)
 17098   01AE28  64F7               	cpfsgt	tblptrh,c
 17099   01AE2A  D003               	bra	u22457
 17100   01AE2C  0008               	tblrd		*
 17101   01AE2E  50F5               	movf	tablat,w,c
 17102   01AE30  D005               	bra	u22450
 17103   01AE32                     u22457:
 17104   01AE32  C4F6 F4E9          	movff	tblptrl,fsr0l
 17105   01AE36  C4F7 F4EA          	movff	tblptrh,fsr0h
 17106   01AE3A  50EF               	movf	indf0,w,c
 17107   01AE3C                     u22450:
 17108   01AE3C  0A20               	xorlw	32
 17109   01AE3E  B4D8               	btfsc	status,2,c
 17110   01AE40  EF24  F0D7         	goto	u22461
 17111   01AE44  EF26  F0D7         	goto	u22460
 17112   01AE48                     u22461:
 17113   01AE48  EF0B  F0D7         	goto	l17509
 17114   01AE4C                     u22460:
 17115   01AE4C                     
 17116                           ;../src/w65_main.c: 604:   arg[i] = buf;
 17117   01AE4C  90D8               	bcf	status,0,c
 17118   01AE4E  3406               	rlcf	set_arg@i^(0+1280),w,c
 17119   01AE50  6ED9               	movwf	fsr2l,c
 17120   01AE52  3407               	rlcf	(set_arg@i+1)^(0+1280),w,c
 17121   01AE54  6EDA               	movwf	fsr2h,c
 17122   01AE56  0E9E               	movlw	low _arg
 17123   01AE58  26D9               	addwf	fsr2l,f,c
 17124   01AE5A  0E07               	movlw	high _arg
 17125   01AE5C  22DA               	addwfc	fsr2h,f,c
 17126   01AE5E  C504  F4DE         	movff	set_arg@buf,postinc2
 17127   01AE62  C505  F4DD         	movff	set_arg@buf+1,postdec2
 17128   01AE66                     
 17129                           ;../src/w65_main.c: 605:   if ( !*buf ) break;
 17130   01AE66  C504  F4F6         	movff	set_arg@buf,tblptrl
 17131   01AE6A  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17132   01AE6E  0E00               	movlw	low (__mediumconst shr (0+16))
 17133   01AE70  6EF8               	movwf	tblptru,c
 17134   01AE72  0E25               	movlw	(high __ramtop+-1)
 17135   01AE74  64F7               	cpfsgt	tblptrh,c
 17136   01AE76  D003               	bra	u22477
 17137   01AE78  0008               	tblrd		*
 17138   01AE7A  50F5               	movf	tablat,w,c
 17139   01AE7C  D005               	bra	u22470
 17140   01AE7E                     u22477:
 17141   01AE7E  C4F6 F4E9          	movff	tblptrl,fsr0l
 17142   01AE82  C4F7 F4EA          	movff	tblptrh,fsr0h
 17143   01AE86  50EF               	movf	indf0,w,c
 17144   01AE88                     u22470:
 17145   01AE88  0900               	iorlw	0
 17146   01AE8A  A4D8               	btfss	status,2,c
 17147   01AE8C  EF4A  F0D7         	goto	u22481
 17148   01AE90  EF4C  F0D7         	goto	u22480
 17149   01AE94                     u22481:
 17150   01AE94  EF50  F0D7         	goto	l17521
 17151   01AE98                     u22480:
 17152   01AE98  EFDB  F0D7         	goto	l1258
 17153   01AE9C                     l17519:
 17154   01AE9C  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17155   01AE9E  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17156   01AEA0                     l17521:
 17157   01AEA0  C504  F4F6         	movff	set_arg@buf,tblptrl
 17158   01AEA4  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17159   01AEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 17160   01AEAA  6EF8               	movwf	tblptru,c
 17161   01AEAC  0E25               	movlw	(high __ramtop+-1)
 17162   01AEAE  64F7               	cpfsgt	tblptrh,c
 17163   01AEB0  D003               	bra	u22497
 17164   01AEB2  0008               	tblrd		*
 17165   01AEB4  50F5               	movf	tablat,w,c
 17166   01AEB6  D005               	bra	u22490
 17167   01AEB8                     u22497:
 17168   01AEB8  C4F6 F4E9          	movff	tblptrl,fsr0l
 17169   01AEBC  C4F7 F4EA          	movff	tblptrh,fsr0h
 17170   01AEC0  50EF               	movf	indf0,w,c
 17171   01AEC2                     u22490:
 17172   01AEC2  0900               	iorlw	0
 17173   01AEC4  B4D8               	btfsc	status,2,c
 17174   01AEC6  EF67  F0D7         	goto	u22501
 17175   01AECA  EF69  F0D7         	goto	u22500
 17176   01AECE                     u22501:
 17177   01AECE  EF82  F0D7         	goto	l17525
 17178   01AED2                     u22500:
 17179   01AED2  C504  F4F6         	movff	set_arg@buf,tblptrl
 17180   01AED6  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17181   01AEDA  0E00               	movlw	low (__mediumconst shr (0+16))
 17182   01AEDC  6EF8               	movwf	tblptru,c
 17183   01AEDE  0E25               	movlw	(high __ramtop+-1)
 17184   01AEE0  64F7               	cpfsgt	tblptrh,c
 17185   01AEE2  D003               	bra	u22517
 17186   01AEE4  0008               	tblrd		*
 17187   01AEE6  50F5               	movf	tablat,w,c
 17188   01AEE8  D005               	bra	u22510
 17189   01AEEA                     u22517:
 17190   01AEEA  C4F6 F4E9          	movff	tblptrl,fsr0l
 17191   01AEEE  C4F7 F4EA          	movff	tblptrh,fsr0h
 17192   01AEF2  50EF               	movf	indf0,w,c
 17193   01AEF4                     u22510:
 17194   01AEF4  0A20               	xorlw	32
 17195   01AEF6  A4D8               	btfss	status,2,c
 17196   01AEF8  EF80  F0D7         	goto	u22521
 17197   01AEFC  EF82  F0D7         	goto	u22520
 17198   01AF00                     u22521:
 17199   01AF00  EF4E  F0D7         	goto	l17519
 17200   01AF04                     u22520:
 17201   01AF04                     l17525:
 17202                           
 17203                           ;../src/w65_main.c: 607:   if ( !*buf ) break;
 17204   01AF04  C504  F4F6         	movff	set_arg@buf,tblptrl
 17205   01AF08  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17206   01AF0C  0E00               	movlw	low (__mediumconst shr (0+16))
 17207   01AF0E  6EF8               	movwf	tblptru,c
 17208   01AF10  0E25               	movlw	(high __ramtop+-1)
 17209   01AF12  64F7               	cpfsgt	tblptrh,c
 17210   01AF14  D003               	bra	u22537
 17211   01AF16  0008               	tblrd		*
 17212   01AF18  50F5               	movf	tablat,w,c
 17213   01AF1A  D005               	bra	u22530
 17214   01AF1C                     u22537:
 17215   01AF1C  C4F6 F4E9          	movff	tblptrl,fsr0l
 17216   01AF20  C4F7 F4EA          	movff	tblptrh,fsr0h
 17217   01AF24  50EF               	movf	indf0,w,c
 17218   01AF26                     u22530:
 17219   01AF26  0900               	iorlw	0
 17220   01AF28  A4D8               	btfss	status,2,c
 17221   01AF2A  EF99  F0D7         	goto	u22541
 17222   01AF2E  EF9B  F0D7         	goto	u22540
 17223   01AF32                     u22541:
 17224   01AF32  EF9D  F0D7         	goto	l17529
 17225   01AF36                     u22540:
 17226   01AF36  EFDB  F0D7         	goto	l1258
 17227   01AF3A                     l17529:
 17228                           
 17229                           ;../src/w65_main.c: 608:   if ( *buf == ' ' ) *buf++ = 0;
 17230   01AF3A  C504  F4F6         	movff	set_arg@buf,tblptrl
 17231   01AF3E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17232   01AF42  0E00               	movlw	low (__mediumconst shr (0+16))
 17233   01AF44  6EF8               	movwf	tblptru,c
 17234   01AF46  0E25               	movlw	(high __ramtop+-1)
 17235   01AF48  64F7               	cpfsgt	tblptrh,c
 17236   01AF4A  D003               	bra	u22557
 17237   01AF4C  0008               	tblrd		*
 17238   01AF4E  50F5               	movf	tablat,w,c
 17239   01AF50  D005               	bra	u22550
 17240   01AF52                     u22557:
 17241   01AF52  C4F6 F4E9          	movff	tblptrl,fsr0l
 17242   01AF56  C4F7 F4EA          	movff	tblptrh,fsr0h
 17243   01AF5A  50EF               	movf	indf0,w,c
 17244   01AF5C                     u22550:
 17245   01AF5C  0A20               	xorlw	32
 17246   01AF5E  A4D8               	btfss	status,2,c
 17247   01AF60  EFB4  F0D7         	goto	u22561
 17248   01AF64  EFB6  F0D7         	goto	u22560
 17249   01AF68                     u22561:
 17250   01AF68  EFCB  F0D7         	goto	l17535
 17251   01AF6C                     u22560:
 17252   01AF6C  C504  F4F6         	movff	set_arg@buf,tblptrl
 17253   01AF70  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17254   01AF74  0E00               	movlw	low (__mediumconst shr (0+16))
 17255   01AF76  6EF8               	movwf	tblptru,c
 17256   01AF78  0E25               	movlw	(high __ramtop+-1)
 17257   01AF7A  64F7               	cpfsgt	tblptrh,c
 17258   01AF7C  D004               	bra	u22577
 17259   01AF7E  0E00               	movlw	0
 17260   01AF80  6EF5               	movwf	tablat,c
 17261   01AF82  000C               	tblwt		*
 17262   01AF84  D006               	bra	u22570
 17263   01AF86                     u22577:
 17264   01AF86  C4F6 F4E9          	movff	tblptrl,fsr0l
 17265   01AF8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 17266   01AF8E  0E00               	movlw	0
 17267   01AF90  6EEF               	movwf	indf0,c
 17268   01AF92                     u22570:
 17269   01AF92  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17270   01AF94  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17271   01AF96                     l17535:
 17272                           
 17273                           ;../src/w65_main.c: 609:   i++;
 17274   01AF96  4A06               	infsnz	set_arg@i^(0+1280),f,c
 17275   01AF98  2A07               	incf	(set_arg@i+1)^(0+1280),f,c
 17276   01AF9A                     l17537:
 17277                           
 17278                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 17279   01AF9A  BE07               	btfsc	(set_arg@i+1)^(0+1280),7,c
 17280   01AF9C  EFD9  F0D7         	goto	u22581
 17281   01AFA0  5007               	movf	(set_arg@i+1)^(0+1280),w,c
 17282   01AFA2  E109               	bnz	u22580
 17283   01AFA4  0E05               	movlw	5
 17284   01AFA6  5C06               	subwf	set_arg@i^(0+1280),w,c
 17285   01AFA8  A0D8               	btfss	status,0,c
 17286   01AFAA  EFD9  F0D7         	goto	u22581
 17287   01AFAE  EFDB  F0D7         	goto	u22580
 17288   01AFB2                     u22581:
 17289   01AFB2  EF0D  F0D7         	goto	l17511
 17290   01AFB6                     u22580:
 17291   01AFB6                     l1258:
 17292   01AFB6  0012               	return		;funcret
 17293   01AFB8                     __end_of_set_arg:
 17294                           	callstack 0
 17295                           
 17296 ;; *************** function _f_readdir *****************
 17297 ;; Defined at:
 17298 ;;		line 4695 in file "../fatfs/ff.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;  dp              2  137[BANK6 ] PTR struct .
 17301 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 17302 ;;  fno             2  139[BANK6 ] PTR struct .
 17303 ;;		 -> scan_files1@fno(22), scan_files@fno(22), 
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;  fs              2  141[BANK6 ] PTR struct .
 17306 ;;		 -> fs(564), NULL(0), 
 17307 ;;  res             1  143[BANK6 ] enum E597
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  1    wreg      enum E17409
 17310 ;; Registers used:
 17311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17317 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17318 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17320 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17321 ;;Total ram usage:        7 bytes
 17322 ;; Hardware stack levels used: 1
 17323 ;; Hardware stack levels required when called: 18
 17324 ;; This function calls:
 17325 ;;		_dir_next
 17326 ;;		_dir_read
 17327 ;;		_dir_sdi
 17328 ;;		_get_fileinfo
 17329 ;;		_validate
 17330 ;; This function is called by:
 17331 ;;		_scan_files
 17332 ;;		_scan_files1
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text26
 17337   01DAF6                     __ptext26:
 17338                           	callstack 0
 17339   01DAF6                     _f_readdir:
 17340                           	callstack 107
 17341   01DAF6                     
 17342                           ;../fatfs/ff.c: 4696:  DIR* dp,;../fatfs/ff.c: 4697:  FILINFO* fno;../fatfs/ff.c: 4699: 
      +                          {;../fatfs/ff.c: 4700:  FRESULT res;;../fatfs/ff.c: 4701:  FATFS *fs;;../fatfs/ff.c: 470
      +                          5:  res = validate(&dp->obj, &fs);
 17343   01DAF6  C689  F5BE         	movff	f_readdir@dp,validate@obj
 17344   01DAFA  C68A  F5BF         	movff	f_readdir@dp+1,validate@obj+1
 17345   01DAFE  0E8D               	movlw	low f_readdir@fs
 17346   01DB00  0105               	movlb	5	; () banked
 17347   01DB02  6FC0               	movwf	validate@rfs& (0+255),b
 17348   01DB04  0E06               	movlw	high f_readdir@fs
 17349   01DB06  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 17350   01DB08  ECA3  F0E9         	call	_validate	;wreg free
 17351   01DB0C  0106               	movlb	6	; () banked
 17352   01DB0E  6F8F               	movwf	f_readdir@res& (0+255),b
 17353   01DB10                     
 17354                           ; BSR set to: 6
 17355                           ;../fatfs/ff.c: 4706:  if (res == FR_OK) {
 17356   01DB10  518F               	movf	f_readdir@res& (0+255),w,b
 17357   01DB12  A4D8               	btfss	status,2,c
 17358   01DB14  EF8E  F0ED         	goto	u34181
 17359   01DB18  EF90  F0ED         	goto	u34180
 17360   01DB1C                     u34181:
 17361   01DB1C  EFEC  F0ED         	goto	l24545
 17362   01DB20                     u34180:
 17363   01DB20                     
 17364                           ; BSR set to: 6
 17365                           ;../fatfs/ff.c: 4707:   if (!fno) {
 17366   01DB20  518B               	movf	f_readdir@fno& (0+255),w,b
 17367   01DB22  118C               	iorwf	(f_readdir@fno+1)& (0+255),w,b
 17368   01DB24  A4D8               	btfss	status,2,c
 17369   01DB26  EF97  F0ED         	goto	u34191
 17370   01DB2A  EF99  F0ED         	goto	u34190
 17371   01DB2E                     u34191:
 17372   01DB2E  EFAB  F0ED         	goto	l24529
 17373   01DB32                     u34190:
 17374   01DB32                     
 17375                           ; BSR set to: 6
 17376                           ;../fatfs/ff.c: 4708:    res = dir_sdi(dp, 0);
 17377   01DB32  C689  F63E         	movff	f_readdir@dp,dir_sdi@dp
 17378   01DB36  C68A  F63F         	movff	f_readdir@dp+1,dir_sdi@dp+1
 17379   01DB3A  0E00               	movlw	0
 17380   01DB3C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17381   01DB3E  0E00               	movlw	0
 17382   01DB40  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17383   01DB42  0E00               	movlw	0
 17384   01DB44  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17385   01DB46  0E00               	movlw	0
 17386   01DB48  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17387   01DB4A  EC72  F0BC         	call	_dir_sdi	;wreg free
 17388   01DB4E  0106               	movlb	6	; () banked
 17389   01DB50  6F8F               	movwf	f_readdir@res& (0+255),b
 17390                           
 17391                           ;../fatfs/ff.c: 4709:   } else {
 17392   01DB52  EFEC  F0ED         	goto	l24545
 17393   01DB56                     l24529:
 17394                           
 17395                           ; BSR set to: 6
 17396                           ;../fatfs/ff.c: 4711:    res = dir_read(dp, 0);
 17397   01DB56  C689  F67C         	movff	f_readdir@dp,dir_read@dp
 17398   01DB5A  C68A  F67D         	movff	f_readdir@dp+1,dir_read@dp+1
 17399   01DB5E  0E00               	movlw	0
 17400   01DB60  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 17401   01DB62  0E00               	movlw	0
 17402   01DB64  6F7E               	movwf	dir_read@vol& (0+255),b
 17403   01DB66  ECB0  F0D8         	call	_dir_read	;wreg free
 17404   01DB6A  0106               	movlb	6	; () banked
 17405   01DB6C  6F8F               	movwf	f_readdir@res& (0+255),b
 17406   01DB6E                     
 17407                           ; BSR set to: 6
 17408                           ;../fatfs/ff.c: 4712:    if (res == FR_NO_FILE) res = FR_OK;
 17409   01DB6E  0E04               	movlw	4
 17410   01DB70  198F               	xorwf	f_readdir@res& (0+255),w,b
 17411   01DB72  A4D8               	btfss	status,2,c
 17412   01DB74  EFBE  F0ED         	goto	u34201
 17413   01DB78  EFC0  F0ED         	goto	u34200
 17414   01DB7C                     u34201:
 17415   01DB7C  EFC1  F0ED         	goto	l24535
 17416   01DB80                     u34200:
 17417   01DB80                     
 17418                           ; BSR set to: 6
 17419   01DB80  6B8F               	clrf	f_readdir@res& (0+255),b
 17420   01DB82                     l24535:
 17421                           
 17422                           ; BSR set to: 6
 17423                           ;../fatfs/ff.c: 4713:    if (res == FR_OK) {
 17424   01DB82  518F               	movf	f_readdir@res& (0+255),w,b
 17425   01DB84  A4D8               	btfss	status,2,c
 17426   01DB86  EFC7  F0ED         	goto	u34211
 17427   01DB8A  EFC9  F0ED         	goto	u34210
 17428   01DB8E                     u34211:
 17429   01DB8E  EFEC  F0ED         	goto	l24545
 17430   01DB92                     u34210:
 17431   01DB92                     
 17432                           ; BSR set to: 6
 17433                           ;../fatfs/ff.c: 4714:     get_fileinfo(dp, fno);
 17434   01DB92  C689  F511         	movff	f_readdir@dp,get_fileinfo@dp
 17435   01DB96  C68A  F512         	movff	f_readdir@dp+1,get_fileinfo@dp+1
 17436   01DB9A  C68B  F513         	movff	f_readdir@fno,get_fileinfo@fno
 17437   01DB9E  C68C  F514         	movff	f_readdir@fno+1,get_fileinfo@fno+1
 17438   01DBA2  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 17439   01DBA6                     
 17440                           ;../fatfs/ff.c: 4715:     res = dir_next(dp, 0);
 17441   01DBA6  C689  F662         	movff	f_readdir@dp,dir_next@dp
 17442   01DBAA  C68A  F663         	movff	f_readdir@dp+1,dir_next@dp+1
 17443   01DBAE  0E00               	movlw	0
 17444   01DBB0  0106               	movlb	6	; () banked
 17445   01DBB2  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 17446   01DBB4  0E00               	movlw	0
 17447   01DBB6  6F64               	movwf	dir_next@stretch& (0+255),b
 17448   01DBB8  ECCF  F0B0         	call	_dir_next	;wreg free
 17449   01DBBC  0106               	movlb	6	; () banked
 17450   01DBBE  6F8F               	movwf	f_readdir@res& (0+255),b
 17451   01DBC0                     
 17452                           ; BSR set to: 6
 17453                           ;../fatfs/ff.c: 4716:     if (res == FR_NO_FILE) res = FR_OK;
 17454   01DBC0  0E04               	movlw	4
 17455   01DBC2  198F               	xorwf	f_readdir@res& (0+255),w,b
 17456   01DBC4  A4D8               	btfss	status,2,c
 17457   01DBC6  EFE7  F0ED         	goto	u34221
 17458   01DBCA  EFE9  F0ED         	goto	u34220
 17459   01DBCE                     u34221:
 17460   01DBCE  EFEC  F0ED         	goto	l2085
 17461   01DBD2                     u34220:
 17462   01DBD2                     
 17463                           ; BSR set to: 6
 17464   01DBD2  6B8F               	clrf	f_readdir@res& (0+255),b
 17465   01DBD4  EFEC  F0ED         	goto	l24545
 17466   01DBD8                     l2085:
 17467   01DBD8                     l24545:
 17468                           
 17469                           ; BSR set to: 6
 17470                           ;../fatfs/ff.c: 4721:  return res;
 17471   01DBD8  518F               	movf	f_readdir@res& (0+255),w,b
 17472   01DBDA                     
 17473                           ; BSR set to: 6
 17474   01DBDA  0012               	return		;funcret
 17475   01DBDC                     __end_of_f_readdir:
 17476                           	callstack 0
 17477                           
 17478 ;; *************** function _f_opendir *****************
 17479 ;; Defined at:
 17480 ;;		line 4599 in file "../fatfs/ff.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;  dp              2  175[BANK6 ] PTR struct .
 17483 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 17484 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 17485 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17486 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17487 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;  fs              2  179[BANK6 ] PTR struct .
 17490 ;;		 -> fs(564), NULL(0), 
 17491 ;;  res             1  181[BANK6 ] enum E597
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  1    wreg      enum E17409
 17494 ;; Registers used:
 17495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17501 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17502 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;Total ram usage:        7 bytes
 17506 ;; Hardware stack levels used: 1
 17507 ;; Hardware stack levels required when called: 19
 17508 ;; This function calls:
 17509 ;;		_dir_sdi
 17510 ;;		_follow_path
 17511 ;;		_ld_clust
 17512 ;;		_mount_volume
 17513 ;; This function is called by:
 17514 ;;		_scan_files
 17515 ;;		_scan_files1
 17516 ;; This function uses a non-reentrant model
 17517 ;;
 17518                           
 17519                           	psect	text27
 17520   01BE28                     __ptext27:
 17521                           	callstack 0
 17522   01BE28                     _f_opendir:
 17523                           	callstack 106
 17524   01BE28                     
 17525                           ;../fatfs/ff.c: 4600:  DIR* dp,;../fatfs/ff.c: 4601:  const TCHAR* path;../fatfs/ff.c: 4
      +                          603: {;../fatfs/ff.c: 4604:  FRESULT res;;../fatfs/ff.c: 4605:  FATFS *fs;;../fatfs/ff.c
      +                          : 4609:  if (!dp) return FR_INVALID_OBJECT;
 17526   01BE28  0106               	movlb	6	; () banked
 17527   01BE2A  51AF               	movf	f_opendir@dp& (0+255),w,b
 17528   01BE2C  11B0               	iorwf	(f_opendir@dp+1)& (0+255),w,b
 17529   01BE2E  A4D8               	btfss	status,2,c
 17530   01BE30  EF1C  F0DF         	goto	u34101
 17531   01BE34  EF1E  F0DF         	goto	u34100
 17532   01BE38                     u34101:
 17533   01BE38  EF21  F0DF         	goto	l24489
 17534   01BE3C                     u34100:
 17535   01BE3C                     
 17536                           ; BSR set to: 6
 17537   01BE3C  0E09               	movlw	9
 17538   01BE3E  EFD2  F0DF         	goto	l2068
 17539   01BE42                     l24489:
 17540                           
 17541                           ; BSR set to: 6
 17542                           ;../fatfs/ff.c: 4612:  res = mount_volume(&path, &fs, 0);
 17543   01BE42  0EB1               	movlw	low f_opendir@path
 17544   01BE44  6F81               	movwf	mount_volume@path& (0+255),b
 17545   01BE46  0E06               	movlw	high f_opendir@path
 17546   01BE48  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 17547   01BE4A  0EB3               	movlw	low f_opendir@fs
 17548   01BE4C  6F83               	movwf	mount_volume@rfs& (0+255),b
 17549   01BE4E  0E06               	movlw	high f_opendir@fs
 17550   01BE50  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 17551   01BE52  0E00               	movlw	0
 17552   01BE54  6F85               	movwf	mount_volume@mode& (0+255),b
 17553   01BE56  EC00  F080         	call	_mount_volume	;wreg free
 17554   01BE5A  0106               	movlb	6	; () banked
 17555   01BE5C  6FB5               	movwf	f_opendir@res& (0+255),b
 17556   01BE5E                     
 17557                           ; BSR set to: 6
 17558                           ;../fatfs/ff.c: 4613:  if (res == FR_OK) {
 17559   01BE5E  51B5               	movf	f_opendir@res& (0+255),w,b
 17560   01BE60  A4D8               	btfss	status,2,c
 17561   01BE62  EF35  F0DF         	goto	u34111
 17562   01BE66  EF37  F0DF         	goto	u34110
 17563   01BE6A                     u34111:
 17564   01BE6A  EFC3  F0DF         	goto	l2069
 17565   01BE6E                     u34110:
 17566   01BE6E                     
 17567                           ; BSR set to: 6
 17568                           ;../fatfs/ff.c: 4614:   dp->obj.fs = fs;
 17569   01BE6E  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 17570   01BE72  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 17571   01BE76  C6B3  F4DE         	movff	f_opendir@fs,postinc2
 17572   01BE7A  C6B4  F4DD         	movff	f_opendir@fs+1,postdec2
 17573   01BE7E                     
 17574                           ; BSR set to: 6
 17575                           ;../fatfs/ff.c: 4616:   res = follow_path(dp, path);
 17576   01BE7E  C6AF  F684         	movff	f_opendir@dp,follow_path@dp
 17577   01BE82  C6B0  F685         	movff	f_opendir@dp+1,follow_path@dp+1
 17578   01BE86  C6B1  F686         	movff	f_opendir@path,follow_path@path
 17579   01BE8A  C6B2  F687         	movff	f_opendir@path+1,follow_path@path+1
 17580   01BE8E  EC61  F0C4         	call	_follow_path	;wreg free
 17581   01BE92  0106               	movlb	6	; () banked
 17582   01BE94  6FB5               	movwf	f_opendir@res& (0+255),b
 17583   01BE96                     
 17584                           ; BSR set to: 6
 17585                           ;../fatfs/ff.c: 4617:   if (res == FR_OK) {
 17586   01BE96  51B5               	movf	f_opendir@res& (0+255),w,b
 17587   01BE98  A4D8               	btfss	status,2,c
 17588   01BE9A  EF51  F0DF         	goto	u34121
 17589   01BE9E  EF53  F0DF         	goto	u34120
 17590   01BEA2                     u34121:
 17591   01BEA2  EFB8  F0DF         	goto	l24511
 17592   01BEA6                     u34120:
 17593   01BEA6                     
 17594                           ; BSR set to: 6
 17595                           ;../fatfs/ff.c: 4618:    if (!(dp->fn[11] & 0x80)) {
 17596   01BEA6  EE20 F027          	lfsr	2,39
 17597   01BEAA  51AF               	movf	f_opendir@dp& (0+255),w,b
 17598   01BEAC  26D9               	addwf	fsr2l,f,c
 17599   01BEAE  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17600   01BEB0  22DA               	addwfc	fsr2h,f,c
 17601   01BEB2  BEDF               	btfsc	indf2,7,c
 17602   01BEB4  EF5E  F0DF         	goto	u34131
 17603   01BEB8  EF60  F0DF         	goto	u34130
 17604   01BEBC                     u34131:
 17605   01BEBC  EF90  F0DF         	goto	l2071
 17606   01BEC0                     u34130:
 17607   01BEC0                     
 17608                           ; BSR set to: 6
 17609                           ;../fatfs/ff.c: 4619:     if (dp->obj.attr & 0x10) {
 17610   01BEC0  EE20 F004          	lfsr	2,4
 17611   01BEC4  51AF               	movf	f_opendir@dp& (0+255),w,b
 17612   01BEC6  26D9               	addwf	fsr2l,f,c
 17613   01BEC8  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17614   01BECA  22DA               	addwfc	fsr2h,f,c
 17615   01BECC  A8DF               	btfss	indf2,4,c
 17616   01BECE  EF6B  F0DF         	goto	u34141
 17617   01BED2  EF6D  F0DF         	goto	u34140
 17618   01BED6                     u34141:
 17619   01BED6  EF8E  F0DF         	goto	l24505
 17620   01BEDA                     u34140:
 17621   01BEDA                     
 17622                           ; BSR set to: 6
 17623                           ;../fatfs/ff.c: 4628:      {;../fatfs/ff.c: 4629:       dp->obj.sclust = ld_clust(fs, dp
      +                          ->dir);
 17624   01BEDA  C6B3  F50B         	movff	f_opendir@fs,ld_clust@fs
 17625   01BEDE  C6B4  F50C         	movff	f_opendir@fs+1,ld_clust@fs+1
 17626   01BEE2  EE20 F01A          	lfsr	2,26
 17627   01BEE6  51AF               	movf	f_opendir@dp& (0+255),w,b
 17628   01BEE8  26D9               	addwf	fsr2l,f,c
 17629   01BEEA  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17630   01BEEC  22DA               	addwfc	fsr2h,f,c
 17631   01BEEE  C4DE F50D          	movff	postinc2,ld_clust@dir
 17632   01BEF2  C4DD F50E          	movff	postdec2,ld_clust@dir+1
 17633   01BEF6  EC3A  F0F9         	call	_ld_clust	;wreg free
 17634   01BEFA  0106               	movlb	6	; () banked
 17635   01BEFC  EE20 F006          	lfsr	2,6
 17636   01BF00  51AF               	movf	f_opendir@dp& (0+255),w,b
 17637   01BF02  26D9               	addwf	fsr2l,f,c
 17638   01BF04  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17639   01BF06  22DA               	addwfc	fsr2h,f,c
 17640   01BF08  C50B  F4DE         	movff	?_ld_clust,postinc2
 17641   01BF0C  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 17642   01BF10  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 17643   01BF14  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 17644                           
 17645                           ;../fatfs/ff.c: 4630:      };../fatfs/ff.c: 4631:     } else {
 17646   01BF18  EF90  F0DF         	goto	l2071
 17647   01BF1C                     l24505:
 17648                           
 17649                           ; BSR set to: 6
 17650                           ;../fatfs/ff.c: 4632:      res = FR_NO_PATH;
 17651   01BF1C  0E05               	movlw	5
 17652   01BF1E  6FB5               	movwf	f_opendir@res& (0+255),b
 17653   01BF20                     l2071:
 17654                           
 17655                           ; BSR set to: 6
 17656                           ;../fatfs/ff.c: 4635:    if (res == FR_OK) {
 17657   01BF20  51B5               	movf	f_opendir@res& (0+255),w,b
 17658   01BF22  A4D8               	btfss	status,2,c
 17659   01BF24  EF96  F0DF         	goto	u34151
 17660   01BF28  EF98  F0DF         	goto	u34150
 17661   01BF2C                     u34151:
 17662   01BF2C  EFB8  F0DF         	goto	l24511
 17663   01BF30                     u34150:
 17664   01BF30                     
 17665                           ; BSR set to: 6
 17666                           ;../fatfs/ff.c: 4636:     dp->obj.id = fs->id;
 17667   01BF30  EE20 F006          	lfsr	2,6
 17668   01BF34  51B3               	movf	f_opendir@fs& (0+255),w,b
 17669   01BF36  26D9               	addwf	fsr2l,f,c
 17670   01BF38  51B4               	movf	(f_opendir@fs+1)& (0+255),w,b
 17671   01BF3A  22DA               	addwfc	fsr2h,f,c
 17672   01BF3C  EE10 F002          	lfsr	1,2
 17673   01BF40  51AF               	movf	f_opendir@dp& (0+255),w,b
 17674   01BF42  26E1               	addwf	fsr1l,f,c
 17675   01BF44  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17676   01BF46  22E2               	addwfc	fsr1h,f,c
 17677   01BF48  C4DE F4E6          	movff	postinc2,postinc1
 17678   01BF4C  C4DD F4E5          	movff	postdec2,postdec1
 17679   01BF50                     
 17680                           ; BSR set to: 6
 17681                           ;../fatfs/ff.c: 4637:     res = dir_sdi(dp, 0);
 17682   01BF50  C6AF  F63E         	movff	f_opendir@dp,dir_sdi@dp
 17683   01BF54  C6B0  F63F         	movff	f_opendir@dp+1,dir_sdi@dp+1
 17684   01BF58  0E00               	movlw	0
 17685   01BF5A  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17686   01BF5C  0E00               	movlw	0
 17687   01BF5E  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17688   01BF60  0E00               	movlw	0
 17689   01BF62  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17690   01BF64  0E00               	movlw	0
 17691   01BF66  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17692   01BF68  EC72  F0BC         	call	_dir_sdi	;wreg free
 17693   01BF6C  0106               	movlb	6	; () banked
 17694   01BF6E  6FB5               	movwf	f_opendir@res& (0+255),b
 17695   01BF70                     l24511:
 17696                           
 17697                           ; BSR set to: 6
 17698                           ;../fatfs/ff.c: 4651:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 17699   01BF70  0E04               	movlw	4
 17700   01BF72  19B5               	xorwf	f_opendir@res& (0+255),w,b
 17701   01BF74  A4D8               	btfss	status,2,c
 17702   01BF76  EFBF  F0DF         	goto	u34161
 17703   01BF7A  EFC1  F0DF         	goto	u34160
 17704   01BF7E                     u34161:
 17705   01BF7E  EFC3  F0DF         	goto	l2069
 17706   01BF82                     u34160:
 17707   01BF82                     
 17708                           ; BSR set to: 6
 17709   01BF82  0E05               	movlw	5
 17710   01BF84  6FB5               	movwf	f_opendir@res& (0+255),b
 17711   01BF86                     l2069:
 17712                           
 17713                           ; BSR set to: 6
 17714                           ;../fatfs/ff.c: 4653:  if (res != FR_OK) dp->obj.fs = 0;
 17715   01BF86  51B5               	movf	f_opendir@res& (0+255),w,b
 17716   01BF88  B4D8               	btfsc	status,2,c
 17717   01BF8A  EFC9  F0DF         	goto	u34171
 17718   01BF8E  EFCB  F0DF         	goto	u34170
 17719   01BF92                     u34171:
 17720   01BF92  EFD1  F0DF         	goto	l24517
 17721   01BF96                     u34170:
 17722   01BF96                     
 17723                           ; BSR set to: 6
 17724   01BF96  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 17725   01BF9A  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 17726   01BF9E  6ADE               	clrf	postinc2,c
 17727   01BFA0  6ADD               	clrf	postdec2,c
 17728   01BFA2                     l24517:
 17729                           
 17730                           ; BSR set to: 6
 17731                           ;../fatfs/ff.c: 4655:  return res;
 17732   01BFA2  51B5               	movf	f_opendir@res& (0+255),w,b
 17733   01BFA4                     l2068:
 17734                           
 17735                           ; BSR set to: 6
 17736   01BFA4  0012               	return		;funcret
 17737   01BFA6                     __end_of_f_opendir:
 17738                           	callstack 0
 17739                           
 17740 ;; *************** function _f_getcwd *****************
 17741 ;; Defined at:
 17742 ;;		line 4333 in file "../fatfs/ff.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;  buff            2  175[BANK6 ] PTR unsigned char 
 17745 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17746 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17747 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17748 ;;  len             2  177[BANK6 ] unsigned int 
 17749 ;; Auto vars:     Size  Location     Type
 17750 ;;  dj             40   35[BANK7 ] struct .
 17751 ;;  fno            22   10[BANK7 ] struct .
 17752 ;;  ccl             4    0[BANK7 ] unsigned long 
 17753 ;;  fs              2   32[BANK7 ] PTR struct .
 17754 ;;		 -> fs(564), NULL(0), 
 17755 ;;  i               2    8[BANK7 ] unsigned int 
 17756 ;;  n               2    6[BANK7 ] unsigned int 
 17757 ;;  tp              2    4[BANK7 ] PTR unsigned char 
 17758 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17759 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17760 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17761 ;;  res             1   34[BANK7 ] enum E597
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      enum E17409
 17764 ;; Registers used:
 17765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17771 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;      Locals:         0       0       0      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17773 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17774 ;;      Totals:         0       0       9      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17775 ;;Total ram usage:       84 bytes
 17776 ;; Hardware stack levels used: 1
 17777 ;; Hardware stack levels required when called: 18
 17778 ;; This function calls:
 17779 ;;		_dir_next
 17780 ;;		_dir_read
 17781 ;;		_dir_sdi
 17782 ;;		_get_fileinfo
 17783 ;;		_ld_clust
 17784 ;;		_mount_volume
 17785 ;;		_move_window
 17786 ;; This function is called by:
 17787 ;;		_main
 17788 ;;		_scan_files
 17789 ;;		_scan_files1
 17790 ;; This function uses a non-reentrant model
 17791 ;;
 17792                           
 17793                           	psect	text28
 17794   014F26                     __ptext28:
 17795                           	callstack 0
 17796   014F26                     _f_getcwd:
 17797                           	callstack 107
 17798   014F26                     
 17799                           ;../fatfs/ff.c: 4334:  TCHAR* buff,;../fatfs/ff.c: 4335:  UINT len;../fatfs/ff.c: 4337: 
      +                          {;../fatfs/ff.c: 4338:  FRESULT res;;../fatfs/ff.c: 4339:  DIR dj;;../fatfs/ff.c: 4340: 
      +                           FATFS *fs;;../fatfs/ff.c: 4341:  UINT i, n;;../fatfs/ff.c: 4342:  DWORD ccl;;../fatfs/f
      +                          f.c: 4343:  TCHAR *tp = buff;
 17800   014F26  C6AF  F704         	movff	f_getcwd@buff,f_getcwd@tp
 17801   014F2A  C6B0  F705         	movff	f_getcwd@buff+1,f_getcwd@tp+1
 17802   014F2E                     
 17803                           ;../fatfs/ff.c: 4350:  FILINFO fno;;../fatfs/ff.c: 4355:  buff[0] = 0;
 17804   014F2E  C6AF  F4F6         	movff	f_getcwd@buff,tblptrl
 17805   014F32  C6B0  F4F7         	movff	f_getcwd@buff+1,tblptrh
 17806   014F36  0E00               	movlw	low (__mediumconst shr (0+16))
 17807   014F38  6EF8               	movwf	tblptru,c
 17808   014F3A  0E25               	movlw	(high __ramtop+-1)
 17809   014F3C  64F7               	cpfsgt	tblptrh,c
 17810   014F3E  D004               	bra	u33307
 17811   014F40  0E00               	movlw	0
 17812   014F42  6EF5               	movwf	tablat,c
 17813   014F44  000C               	tblwt		*
 17814   014F46  D006               	bra	u33300
 17815   014F48                     u33307:
 17816   014F48  C4F6 F4E9          	movff	tblptrl,fsr0l
 17817   014F4C  C4F7 F4EA          	movff	tblptrh,fsr0h
 17818   014F50  0E00               	movlw	0
 17819   014F52  6EEF               	movwf	indf0,c
 17820   014F54                     u33300:
 17821   014F54                     
 17822                           ;../fatfs/ff.c: 4356:  res = mount_volume((const TCHAR**)&buff, &fs, 0);
 17823   014F54  0EAF               	movlw	low f_getcwd@buff
 17824   014F56  0106               	movlb	6	; () banked
 17825   014F58  6F81               	movwf	mount_volume@path& (0+255),b
 17826   014F5A  0E06               	movlw	high f_getcwd@buff
 17827   014F5C  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 17828   014F5E  0E20               	movlw	low f_getcwd@fs
 17829   014F60  6F83               	movwf	mount_volume@rfs& (0+255),b
 17830   014F62  0E07               	movlw	high f_getcwd@fs
 17831   014F64  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 17832   014F66  0E00               	movlw	0
 17833   014F68  6F85               	movwf	mount_volume@mode& (0+255),b
 17834   014F6A  EC00  F080         	call	_mount_volume	;wreg free
 17835   014F6E  0107               	movlb	7	; () banked
 17836   014F70  6F22               	movwf	f_getcwd@res& (0+255),b
 17837   014F72                     
 17838                           ; BSR set to: 7
 17839                           ;../fatfs/ff.c: 4357:  if (res == FR_OK) {
 17840   014F72  5122               	movf	f_getcwd@res& (0+255),w,b
 17841   014F74  A4D8               	btfss	status,2,c
 17842   014F76  EFBF  F0A7         	goto	u33311
 17843   014F7A  EFC1  F0A7         	goto	u33310
 17844   014F7E                     u33311:
 17845   014F7E  EFD6  F0A9         	goto	l24159
 17846   014F82                     u33310:
 17847   014F82                     
 17848                           ; BSR set to: 7
 17849                           ;../fatfs/ff.c: 4358:   dj.obj.fs = fs;
 17850   014F82  C720  F723         	movff	f_getcwd@fs,f_getcwd@dj
 17851   014F86  C721  F724         	movff	f_getcwd@fs+1,f_getcwd@dj+1
 17852   014F8A                     
 17853                           ; BSR set to: 7
 17854                           ;../fatfs/ff.c: 4362:   i = len;
 17855   014F8A  C6B1  F708         	movff	f_getcwd@len,f_getcwd@i
 17856   014F8E  C6B2  F709         	movff	f_getcwd@len+1,f_getcwd@i+1
 17857   014F92                     
 17858                           ; BSR set to: 7
 17859                           ;../fatfs/ff.c: 4364:    dj.obj.sclust = fs->cdir;
 17860   014F92  EE20 F014          	lfsr	2,20
 17861   014F96  5120               	movf	f_getcwd@fs& (0+255),w,b
 17862   014F98  26D9               	addwf	fsr2l,f,c
 17863   014F9A  5121               	movf	(f_getcwd@fs+1)& (0+255),w,b
 17864   014F9C  22DA               	addwfc	fsr2h,f,c
 17865   014F9E  C4DE F729          	movff	postinc2,f_getcwd@dj+6
 17866   014FA2  C4DE F72A          	movff	postinc2,f_getcwd@dj+7
 17867   014FA6  C4DE F72B          	movff	postinc2,f_getcwd@dj+8
 17868   014FAA  C4DE F72C          	movff	postinc2,f_getcwd@dj+9
 17869                           
 17870                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 17871   014FAE  EF3F  F0A9         	goto	l24141
 17872   014FB2                     l24083:
 17873                           
 17874                           ; BSR set to: 7
 17875                           ;../fatfs/ff.c: 4366:     res = dir_sdi(&dj, 1 * 32);
 17876   014FB2  0E23               	movlw	low f_getcwd@dj
 17877   014FB4  0106               	movlb	6	; () banked
 17878   014FB6  6F3E               	movwf	dir_sdi@dp& (0+255),b
 17879   014FB8  0E07               	movlw	high f_getcwd@dj
 17880   014FBA  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 17881   014FBC  0E20               	movlw	32
 17882   014FBE  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17883   014FC0  0E00               	movlw	0
 17884   014FC2  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17885   014FC4  0E00               	movlw	0
 17886   014FC6  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17887   014FC8  0E00               	movlw	0
 17888   014FCA  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17889   014FCC  EC72  F0BC         	call	_dir_sdi	;wreg free
 17890   014FD0  0107               	movlb	7	; () banked
 17891   014FD2  6F22               	movwf	f_getcwd@res& (0+255),b
 17892   014FD4                     
 17893                           ; BSR set to: 7
 17894                           ;../fatfs/ff.c: 4367:     if (res != FR_OK) break;
 17895   014FD4  5122               	movf	f_getcwd@res& (0+255),w,b
 17896   014FD6  B4D8               	btfsc	status,2,c
 17897   014FD8  EFF0  F0A7         	goto	u33321
 17898   014FDC  EFF2  F0A7         	goto	u33320
 17899   014FE0                     u33321:
 17900   014FE0  EFF4  F0A7         	goto	l24089
 17901   014FE4                     u33320:
 17902   014FE4  EF53  F0A9         	goto	l24143
 17903   014FE8                     l24089:
 17904                           
 17905                           ; BSR set to: 7
 17906                           ;../fatfs/ff.c: 4368:     res = move_window(fs, dj.sect);
 17907   014FE8  C720  F61A         	movff	f_getcwd@fs,move_window@fs
 17908   014FEC  C721  F61B         	movff	f_getcwd@fs+1,move_window@fs+1
 17909   014FF0  C739  F61C         	movff	f_getcwd@dj+22,move_window@sect
 17910   014FF4  C73A  F61D         	movff	f_getcwd@dj+23,move_window@sect+1
 17911   014FF8  C73B  F61E         	movff	f_getcwd@dj+24,move_window@sect+2
 17912   014FFC  C73C  F61F         	movff	f_getcwd@dj+25,move_window@sect+3
 17913   015000  ECAB  F0EF         	call	_move_window	;wreg free
 17914   015004  0107               	movlb	7	; () banked
 17915   015006  6F22               	movwf	f_getcwd@res& (0+255),b
 17916   015008                     
 17917                           ; BSR set to: 7
 17918                           ;../fatfs/ff.c: 4369:     if (res != FR_OK) break;
 17919   015008  5122               	movf	f_getcwd@res& (0+255),w,b
 17920   01500A  B4D8               	btfsc	status,2,c
 17921   01500C  EF0A  F0A8         	goto	u33331
 17922   015010  EF0C  F0A8         	goto	u33330
 17923   015014                     u33331:
 17924   015014  EF0E  F0A8         	goto	l24095
 17925   015018                     u33330:
 17926   015018  EF53  F0A9         	goto	l24143
 17927   01501C                     l24095:
 17928                           
 17929                           ; BSR set to: 7
 17930                           ;../fatfs/ff.c: 4370:     dj.obj.sclust = ld_clust(fs, dj.dir);
 17931   01501C  C720  F50B         	movff	f_getcwd@fs,ld_clust@fs
 17932   015020  C721  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 17933   015024  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 17934   015028  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 17935   01502C  EC3A  F0F9         	call	_ld_clust	;wreg free
 17936   015030  C50B  F729         	movff	?_ld_clust,f_getcwd@dj+6
 17937   015034  C50C  F72A         	movff	?_ld_clust+1,f_getcwd@dj+7
 17938   015038  C50D  F72B         	movff	?_ld_clust+2,f_getcwd@dj+8
 17939   01503C  C50E  F72C         	movff	?_ld_clust+3,f_getcwd@dj+9
 17940   015040                     
 17941                           ;../fatfs/ff.c: 4371:     res = dir_sdi(&dj, 0);
 17942   015040  0E23               	movlw	low f_getcwd@dj
 17943   015042  0106               	movlb	6	; () banked
 17944   015044  6F3E               	movwf	dir_sdi@dp& (0+255),b
 17945   015046  0E07               	movlw	high f_getcwd@dj
 17946   015048  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 17947   01504A  0E00               	movlw	0
 17948   01504C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17949   01504E  0E00               	movlw	0
 17950   015050  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17951   015052  0E00               	movlw	0
 17952   015054  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17953   015056  0E00               	movlw	0
 17954   015058  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17955   01505A  EC72  F0BC         	call	_dir_sdi	;wreg free
 17956   01505E  0107               	movlb	7	; () banked
 17957   015060  6F22               	movwf	f_getcwd@res& (0+255),b
 17958   015062                     
 17959                           ; BSR set to: 7
 17960                           ;../fatfs/ff.c: 4372:     if (res != FR_OK) break;
 17961   015062  5122               	movf	f_getcwd@res& (0+255),w,b
 17962   015064  B4D8               	btfsc	status,2,c
 17963   015066  EF37  F0A8         	goto	u33341
 17964   01506A  EF39  F0A8         	goto	u33340
 17965   01506E                     u33341:
 17966   01506E  EF3B  F0A8         	goto	l24103
 17967   015072                     u33340:
 17968   015072  EF53  F0A9         	goto	l24143
 17969   015076                     l24103:
 17970                           
 17971                           ; BSR set to: 7
 17972                           ;../fatfs/ff.c: 4374:      res = dir_read(&dj, 0);
 17973   015076  0E23               	movlw	low f_getcwd@dj
 17974   015078  0106               	movlb	6	; () banked
 17975   01507A  6F7C               	movwf	dir_read@dp& (0+255),b
 17976   01507C  0E07               	movlw	high f_getcwd@dj
 17977   01507E  6F7D               	movwf	(dir_read@dp+1)& (0+255),b
 17978   015080  0E00               	movlw	0
 17979   015082  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 17980   015084  0E00               	movlw	0
 17981   015086  6F7E               	movwf	dir_read@vol& (0+255),b
 17982   015088  ECB0  F0D8         	call	_dir_read	;wreg free
 17983   01508C  0107               	movlb	7	; () banked
 17984   01508E  6F22               	movwf	f_getcwd@res& (0+255),b
 17985   015090                     
 17986                           ; BSR set to: 7
 17987                           ;../fatfs/ff.c: 4375:      if (res != FR_OK) break;
 17988   015090  5122               	movf	f_getcwd@res& (0+255),w,b
 17989   015092  B4D8               	btfsc	status,2,c
 17990   015094  EF4E  F0A8         	goto	u33351
 17991   015098  EF50  F0A8         	goto	u33350
 17992   01509C                     u33351:
 17993   01509C  EF52  F0A8         	goto	l24109
 17994   0150A0                     u33350:
 17995   0150A0  EF86  F0A8         	goto	l24117
 17996   0150A4                     l24109:
 17997                           
 17998                           ; BSR set to: 7
 17999                           ;../fatfs/ff.c: 4376:      if (ccl == ld_clust(fs, dj.dir)) break;
 18000   0150A4  C720  F50B         	movff	f_getcwd@fs,ld_clust@fs
 18001   0150A8  C721  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 18002   0150AC  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 18003   0150B0  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 18004   0150B4  EC3A  F0F9         	call	_ld_clust	;wreg free
 18005   0150B8  0107               	movlb	7	; () banked
 18006   0150BA  5100               	movf	f_getcwd@ccl& (0+255),w,b
 18007   0150BC  180B               	xorwf	?_ld_clust^(0+1280),w,c
 18008   0150BE  E10D               	bnz	u33361
 18009   0150C0  5101               	movf	(f_getcwd@ccl+1)& (0+255),w,b
 18010   0150C2  180C               	xorwf	(?_ld_clust+1)^(0+1280),w,c
 18011   0150C4  E10A               	bnz	u33361
 18012   0150C6  5102               	movf	(f_getcwd@ccl+2)& (0+255),w,b
 18013   0150C8  180D               	xorwf	(?_ld_clust+2)^(0+1280),w,c
 18014   0150CA  E107               	bnz	u33361
 18015   0150CC  5103               	movf	(f_getcwd@ccl+3)& (0+255),w,b
 18016   0150CE  180E               	xorwf	(?_ld_clust+3)^(0+1280),w,c
 18017   0150D0  A4D8               	btfss	status,2,c
 18018   0150D2  EF6D  F0A8         	goto	u33361
 18019   0150D6  EF6F  F0A8         	goto	u33360
 18020   0150DA                     u33361:
 18021   0150DA  EF71  F0A8         	goto	l24113
 18022   0150DE                     u33360:
 18023   0150DE  EF86  F0A8         	goto	l24117
 18024   0150E2                     l24113:
 18025                           
 18026                           ; BSR set to: 7
 18027                           ;../fatfs/ff.c: 4377:      res = dir_next(&dj, 0);
 18028   0150E2  0E23               	movlw	low f_getcwd@dj
 18029   0150E4  0106               	movlb	6	; () banked
 18030   0150E6  6F62               	movwf	dir_next@dp& (0+255),b
 18031   0150E8  0E07               	movlw	high f_getcwd@dj
 18032   0150EA  6F63               	movwf	(dir_next@dp+1)& (0+255),b
 18033   0150EC  0E00               	movlw	0
 18034   0150EE  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 18035   0150F0  0E00               	movlw	0
 18036   0150F2  6F64               	movwf	dir_next@stretch& (0+255),b
 18037   0150F4  ECCF  F0B0         	call	_dir_next	;wreg free
 18038   0150F8  0107               	movlb	7	; () banked
 18039   0150FA  6F22               	movwf	f_getcwd@res& (0+255),b
 18040   0150FC                     
 18041                           ; BSR set to: 7
 18042                           ;../fatfs/ff.c: 4378:     } while (res == FR_OK);
 18043   0150FC  5122               	movf	f_getcwd@res& (0+255),w,b
 18044   0150FE  B4D8               	btfsc	status,2,c
 18045   015100  EF84  F0A8         	goto	u33371
 18046   015104  EF86  F0A8         	goto	u33370
 18047   015108                     u33371:
 18048   015108  EF3B  F0A8         	goto	l24103
 18049   01510C                     u33370:
 18050   01510C                     l24117:
 18051                           
 18052                           ; BSR set to: 7
 18053                           ;../fatfs/ff.c: 4379:     if (res == FR_NO_FILE) res = FR_INT_ERR;
 18054   01510C  0E04               	movlw	4
 18055   01510E  1922               	xorwf	f_getcwd@res& (0+255),w,b
 18056   015110  A4D8               	btfss	status,2,c
 18057   015112  EF8D  F0A8         	goto	u33381
 18058   015116  EF8F  F0A8         	goto	u33380
 18059   01511A                     u33381:
 18060   01511A  EF91  F0A8         	goto	l2017
 18061   01511E                     u33380:
 18062   01511E                     
 18063                           ; BSR set to: 7
 18064   01511E  0E02               	movlw	2
 18065   015120  6F22               	movwf	f_getcwd@res& (0+255),b
 18066   015122                     l2017:
 18067                           
 18068                           ; BSR set to: 7
 18069                           ;../fatfs/ff.c: 4380:     if (res != FR_OK) break;
 18070   015122  5122               	movf	f_getcwd@res& (0+255),w,b
 18071   015124  B4D8               	btfsc	status,2,c
 18072   015126  EF97  F0A8         	goto	u33391
 18073   01512A  EF99  F0A8         	goto	u33390
 18074   01512E                     u33391:
 18075   01512E  EF9B  F0A8         	goto	l24123
 18076   015132                     u33390:
 18077   015132  EF53  F0A9         	goto	l24143
 18078   015136                     l24123:
 18079                           
 18080                           ; BSR set to: 7
 18081                           ;../fatfs/ff.c: 4381:     get_fileinfo(&dj, &fno);
 18082   015136  0E23               	movlw	low f_getcwd@dj
 18083   015138  6E11               	movwf	get_fileinfo@dp^(0+1280),c
 18084   01513A  0E07               	movlw	high f_getcwd@dj
 18085   01513C  6E12               	movwf	(get_fileinfo@dp+1)^(0+1280),c
 18086   01513E  0E0A               	movlw	low f_getcwd@fno
 18087   015140  6E13               	movwf	get_fileinfo@fno^(0+1280),c
 18088   015142  0E07               	movlw	high f_getcwd@fno
 18089   015144  6E14               	movwf	(get_fileinfo@fno+1)^(0+1280),c
 18090   015146  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 18091   01514A                     
 18092                           ;../fatfs/ff.c: 4382:     for (n = 0; fno.fname[n]; n++) ;
 18093   01514A  0E00               	movlw	0
 18094   01514C  0107               	movlb	7	; () banked
 18095   01514E  6F07               	movwf	(f_getcwd@n+1)& (0+255),b
 18096   015150  0E00               	movlw	0
 18097   015152  6F06               	movwf	f_getcwd@n& (0+255),b
 18098   015154  EFAF  F0A8         	goto	l24129
 18099   015158                     l24127:
 18100                           
 18101                           ; BSR set to: 6
 18102   015158  0107               	movlb	7	; () banked
 18103   01515A  4B06               	infsnz	f_getcwd@n& (0+255),f,b
 18104   01515C  2B07               	incf	(f_getcwd@n+1)& (0+255),f,b
 18105   01515E                     l24129:
 18106                           
 18107                           ; BSR set to: 7
 18108   01515E  0E09               	movlw	9
 18109   015160  2506               	addwf	f_getcwd@n& (0+255),w,b
 18110   015162  0106               	movlb	6	; () banked
 18111   015164  6FB3               	movwf	??_f_getcwd& (0+255),b
 18112   015166  0E00               	movlw	0
 18113   015168  0107               	movlb	7	; () banked
 18114   01516A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18115   01516C  0106               	movlb	6	; () banked
 18116   01516E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18117   015170  0E0A               	movlw	low f_getcwd@fno
 18118   015172  25B3               	addwf	??_f_getcwd& (0+255),w,b
 18119   015174  6ED9               	movwf	fsr2l,c
 18120   015176  0E07               	movlw	high f_getcwd@fno
 18121   015178  21B4               	addwfc	(??_f_getcwd+1)& (0+255),w,b
 18122   01517A  6EDA               	movwf	fsr2h,c
 18123   01517C  50DF               	movf	indf2,w,c
 18124   01517E  A4D8               	btfss	status,2,c
 18125   015180  EFC4  F0A8         	goto	u33401
 18126   015184  EFC6  F0A8         	goto	u33400
 18127   015188                     u33401:
 18128   015188  EFAC  F0A8         	goto	l24127
 18129   01518C                     u33400:
 18130   01518C                     
 18131                           ; BSR set to: 6
 18132                           ;../fatfs/ff.c: 4383:     if (i < n + 1) {
 18133   01518C  0E01               	movlw	1
 18134   01518E  0107               	movlb	7	; () banked
 18135   015190  2506               	addwf	f_getcwd@n& (0+255),w,b
 18136   015192  0106               	movlb	6	; () banked
 18137   015194  6FB3               	movwf	??_f_getcwd& (0+255),b
 18138   015196  0E00               	movlw	0
 18139   015198  0107               	movlb	7	; () banked
 18140   01519A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18141   01519C  0106               	movlb	6	; () banked
 18142   01519E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18143   0151A0  51B3               	movf	??_f_getcwd& (0+255),w,b
 18144   0151A2  0107               	movlb	7	; () banked
 18145   0151A4  5D08               	subwf	f_getcwd@i& (0+255),w,b
 18146   0151A6  0106               	movlb	6	; () banked
 18147   0151A8  51B4               	movf	(??_f_getcwd+1)& (0+255),w,b
 18148   0151AA  0107               	movlb	7	; () banked
 18149   0151AC  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 18150   0151AE  B0D8               	btfsc	status,0,c
 18151   0151B0  EFDC  F0A8         	goto	u33411
 18152   0151B4  EFDE  F0A8         	goto	u33410
 18153   0151B8                     u33411:
 18154   0151B8  EF16  F0A9         	goto	l24137
 18155   0151BC                     u33410:
 18156   0151BC                     
 18157                           ; BSR set to: 7
 18158                           ;../fatfs/ff.c: 4384:      res = FR_NOT_ENOUGH_CORE; break;
 18159   0151BC  0E11               	movlw	17
 18160   0151BE  6F22               	movwf	f_getcwd@res& (0+255),b
 18161   0151C0  EF53  F0A9         	goto	l24143
 18162   0151C4                     l24135:
 18163                           
 18164                           ; BSR set to: 7
 18165   0151C4  0708               	decf	f_getcwd@i& (0+255),f,b
 18166   0151C6  A0D8               	btfss	status,0,c
 18167   0151C8  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18168   0151CA  5108               	movf	f_getcwd@i& (0+255),w,b
 18169   0151CC  0106               	movlb	6	; () banked
 18170   0151CE  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18171   0151D0  6FB3               	movwf	??_f_getcwd& (0+255),b
 18172   0151D2  0107               	movlb	7	; () banked
 18173   0151D4  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18174   0151D6  0106               	movlb	6	; () banked
 18175   0151D8  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18176   0151DA  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18177   0151DC  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18178   0151E0  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18179   0151E4  0E00               	movlw	low (__mediumconst shr (0+16))
 18180   0151E6  6EF8               	movwf	tblptru,c
 18181   0151E8  0E09               	movlw	9
 18182   0151EA  0107               	movlb	7	; () banked
 18183   0151EC  0706               	decf	f_getcwd@n& (0+255),f,b
 18184   0151EE  A0D8               	btfss	status,0,c
 18185   0151F0  0707               	decf	(f_getcwd@n+1)& (0+255),f,b
 18186   0151F2  2506               	addwf	f_getcwd@n& (0+255),w,b
 18187   0151F4  0106               	movlb	6	; () banked
 18188   0151F6  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 18189   0151F8  0E00               	movlw	0
 18190   0151FA  0107               	movlb	7	; () banked
 18191   0151FC  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18192   0151FE  0106               	movlb	6	; () banked
 18193   015200  6FB6               	movwf	(??_f_getcwd+3)& (0+255),b
 18194   015202  0E0A               	movlw	low f_getcwd@fno
 18195   015204  25B5               	addwf	(??_f_getcwd+2)& (0+255),w,b
 18196   015206  6ED9               	movwf	fsr2l,c
 18197   015208  0E07               	movlw	high f_getcwd@fno
 18198   01520A  21B6               	addwfc	(??_f_getcwd+3)& (0+255),w,b
 18199   01520C  6EDA               	movwf	fsr2h,c
 18200   01520E  50DF               	movf	indf2,w,c
 18201   015210  6FB7               	movwf	(??_f_getcwd+4)& (0+255),b
 18202   015212  0E25               	movlw	(high __ramtop+-1)
 18203   015214  64F7               	cpfsgt	tblptrh,c
 18204   015216  D004               	bra	u33427
 18205   015218  C6B7  F4F5         	movff	??_f_getcwd+4,tablat
 18206   01521C  000C               	tblwt		*
 18207   01521E  D006               	bra	u33420
 18208   015220                     u33427:
 18209   015220  C4F6 F4E9          	movff	tblptrl,fsr0l
 18210   015224  C4F7 F4EA          	movff	tblptrh,fsr0h
 18211   015228  C6B7  F4EF         	movff	??_f_getcwd+4,indf0
 18212   01522C                     u33420:
 18213   01522C                     l24137:
 18214   01522C  0107               	movlb	7	; () banked
 18215   01522E  5106               	movf	f_getcwd@n& (0+255),w,b
 18216   015230  1107               	iorwf	(f_getcwd@n+1)& (0+255),w,b
 18217   015232  A4D8               	btfss	status,2,c
 18218   015234  EF1E  F0A9         	goto	u33431
 18219   015238  EF20  F0A9         	goto	u33430
 18220   01523C                     u33431:
 18221   01523C  EFE2  F0A8         	goto	l24135
 18222   015240                     u33430:
 18223   015240                     
 18224                           ; BSR set to: 7
 18225                           ;../fatfs/ff.c: 4387:     buff[--i] = '/';
 18226   015240  0708               	decf	f_getcwd@i& (0+255),f,b
 18227   015242  A0D8               	btfss	status,0,c
 18228   015244  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18229   015246  5108               	movf	f_getcwd@i& (0+255),w,b
 18230   015248  0106               	movlb	6	; () banked
 18231   01524A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18232   01524C  6FB3               	movwf	??_f_getcwd& (0+255),b
 18233   01524E  0107               	movlb	7	; () banked
 18234   015250  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18235   015252  0106               	movlb	6	; () banked
 18236   015254  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18237   015256  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18238   015258  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18239   01525C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18240   015260  0E00               	movlw	low (__mediumconst shr (0+16))
 18241   015262  6EF8               	movwf	tblptru,c
 18242   015264  0E25               	movlw	(high __ramtop+-1)
 18243   015266  64F7               	cpfsgt	tblptrh,c
 18244   015268  D004               	bra	u33447
 18245   01526A  0E2F               	movlw	47
 18246   01526C  6EF5               	movwf	tablat,c
 18247   01526E  000C               	tblwt		*
 18248   015270  D006               	bra	u33440
 18249   015272                     u33447:
 18250   015272  C4F6 F4E9          	movff	tblptrl,fsr0l
 18251   015276  C4F7 F4EA          	movff	tblptrh,fsr0h
 18252   01527A  0E2F               	movlw	47
 18253   01527C  6EEF               	movwf	indf0,c
 18254   01527E                     u33440:
 18255   01527E                     l24141:
 18256                           
 18257                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 18258   01527E  C729  F700         	movff	f_getcwd@dj+6,f_getcwd@ccl
 18259   015282  C72A  F701         	movff	f_getcwd@dj+7,f_getcwd@ccl+1
 18260   015286  C72B  F702         	movff	f_getcwd@dj+8,f_getcwd@ccl+2
 18261   01528A  C72C  F703         	movff	f_getcwd@dj+9,f_getcwd@ccl+3
 18262   01528E  0107               	movlb	7	; () banked
 18263   015290  5100               	movf	f_getcwd@ccl& (0+255),w,b
 18264   015292  1101               	iorwf	(f_getcwd@ccl+1)& (0+255),w,b
 18265   015294  1102               	iorwf	(f_getcwd@ccl+2)& (0+255),w,b
 18266   015296  1103               	iorwf	(f_getcwd@ccl+3)& (0+255),w,b
 18267   015298  A4D8               	btfss	status,2,c
 18268   01529A  EF51  F0A9         	goto	u33451
 18269   01529E  EF53  F0A9         	goto	u33450
 18270   0152A2                     u33451:
 18271   0152A2  EFD9  F0A7         	goto	l24083
 18272   0152A6                     u33450:
 18273   0152A6                     l24143:
 18274                           
 18275                           ; BSR set to: 7
 18276                           ;../fatfs/ff.c: 4390:   if (res == FR_OK) {
 18277   0152A6  5122               	movf	f_getcwd@res& (0+255),w,b
 18278   0152A8  A4D8               	btfss	status,2,c
 18279   0152AA  EF59  F0A9         	goto	u33461
 18280   0152AE  EF5B  F0A9         	goto	u33460
 18281   0152B2                     u33461:
 18282   0152B2  EFD6  F0A9         	goto	l24159
 18283   0152B6                     u33460:
 18284   0152B6                     
 18285                           ; BSR set to: 7
 18286                           ;../fatfs/ff.c: 4391:    if (i == len) buff[--i] = '/';
 18287   0152B6  0106               	movlb	6	; () banked
 18288   0152B8  51B1               	movf	f_getcwd@len& (0+255),w,b
 18289   0152BA  0107               	movlb	7	; () banked
 18290   0152BC  1908               	xorwf	f_getcwd@i& (0+255),w,b
 18291   0152BE  E109               	bnz	u33471
 18292   0152C0  0106               	movlb	6	; () banked
 18293   0152C2  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 18294   0152C4  0107               	movlb	7	; () banked
 18295   0152C6  1909               	xorwf	(f_getcwd@i+1)& (0+255),w,b
 18296   0152C8  A4D8               	btfss	status,2,c
 18297   0152CA  EF69  F0A9         	goto	u33471
 18298   0152CE  EF6B  F0A9         	goto	u33470
 18299   0152D2                     u33471:
 18300   0152D2  EF8A  F0A9         	goto	l24149
 18301   0152D6                     u33470:
 18302   0152D6                     
 18303                           ; BSR set to: 7
 18304   0152D6  0708               	decf	f_getcwd@i& (0+255),f,b
 18305   0152D8  A0D8               	btfss	status,0,c
 18306   0152DA  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18307   0152DC  5108               	movf	f_getcwd@i& (0+255),w,b
 18308   0152DE  0106               	movlb	6	; () banked
 18309   0152E0  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18310   0152E2  6FB3               	movwf	??_f_getcwd& (0+255),b
 18311   0152E4  0107               	movlb	7	; () banked
 18312   0152E6  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18313   0152E8  0106               	movlb	6	; () banked
 18314   0152EA  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18315   0152EC  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18316   0152EE  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18317   0152F2  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18318   0152F6  0E00               	movlw	low (__mediumconst shr (0+16))
 18319   0152F8  6EF8               	movwf	tblptru,c
 18320   0152FA  0E25               	movlw	(high __ramtop+-1)
 18321   0152FC  64F7               	cpfsgt	tblptrh,c
 18322   0152FE  D004               	bra	u33487
 18323   015300  0E2F               	movlw	47
 18324   015302  6EF5               	movwf	tablat,c
 18325   015304  000C               	tblwt		*
 18326   015306  D006               	bra	u33480
 18327   015308                     u33487:
 18328   015308  C4F6 F4E9          	movff	tblptrl,fsr0l
 18329   01530C  C4F7 F4EA          	movff	tblptrh,fsr0h
 18330   015310  0E2F               	movlw	47
 18331   015312  6EEF               	movwf	indf0,c
 18332   015314                     u33480:
 18333   015314                     l24149:
 18334                           
 18335                           ;../fatfs/ff.c: 4412:    if (res == FR_OK) {
 18336   015314  0107               	movlb	7	; () banked
 18337   015316  5122               	movf	f_getcwd@res& (0+255),w,b
 18338   015318  A4D8               	btfss	status,2,c
 18339   01531A  EF91  F0A9         	goto	u33491
 18340   01531E  EF93  F0A9         	goto	u33490
 18341   015322                     u33491:
 18342   015322  EFD6  F0A9         	goto	l24159
 18343   015326                     u33490:
 18344   015326                     l24151:
 18345                           
 18346                           ; BSR set to: 7
 18347                           ;../fatfs/ff.c: 4414:      *tp++ = buff[i++];
 18348   015326  5108               	movf	f_getcwd@i& (0+255),w,b
 18349   015328  0106               	movlb	6	; () banked
 18350   01532A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18351   01532C  6FB3               	movwf	??_f_getcwd& (0+255),b
 18352   01532E  0107               	movlb	7	; () banked
 18353   015330  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18354   015332  0106               	movlb	6	; () banked
 18355   015334  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18356   015336  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18357   015338  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18358   01533C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18359   015340  0E00               	movlw	low (__mediumconst shr (0+16))
 18360   015342  6EF8               	movwf	tblptru,c
 18361   015344  0E25               	movlw	(high __ramtop+-1)
 18362   015346  64F7               	cpfsgt	tblptrh,c
 18363   015348  D003               	bra	u33507
 18364   01534A  0008               	tblrd		*
 18365   01534C  50F5               	movf	tablat,w,c
 18366   01534E  D005               	bra	u33500
 18367   015350                     u33507:
 18368   015350  C4F6 F4E9          	movff	tblptrl,fsr0l
 18369   015354  C4F7 F4EA          	movff	tblptrh,fsr0h
 18370   015358  50EF               	movf	indf0,w,c
 18371   01535A                     u33500:
 18372   01535A  0106               	movlb	6	; () banked
 18373   01535C  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 18374   01535E  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 18375   015362  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 18376   015366  0E00               	movlw	low (__mediumconst shr (0+16))
 18377   015368  6EF8               	movwf	tblptru,c
 18378   01536A  0E25               	movlw	(high __ramtop+-1)
 18379   01536C  64F7               	cpfsgt	tblptrh,c
 18380   01536E  D004               	bra	u33517
 18381   015370  C6B5  F4F5         	movff	??_f_getcwd+2,tablat
 18382   015374  000C               	tblwt		*
 18383   015376  D006               	bra	u33510
 18384   015378                     u33517:
 18385   015378  C4F6 F4E9          	movff	tblptrl,fsr0l
 18386   01537C  C4F7 F4EA          	movff	tblptrh,fsr0h
 18387   015380  C6B5  F4EF         	movff	??_f_getcwd+2,indf0
 18388   015384                     u33510:
 18389   015384  0107               	movlb	7	; () banked
 18390   015386  4B08               	infsnz	f_getcwd@i& (0+255),f,b
 18391   015388  2B09               	incf	(f_getcwd@i+1)& (0+255),f,b
 18392   01538A                     
 18393                           ; BSR set to: 7
 18394   01538A  4B04               	infsnz	f_getcwd@tp& (0+255),f,b
 18395   01538C  2B05               	incf	(f_getcwd@tp+1)& (0+255),f,b
 18396   01538E                     
 18397                           ; BSR set to: 7
 18398                           ;../fatfs/ff.c: 4415:     } while (i < len);
 18399   01538E  0106               	movlb	6	; () banked
 18400   015390  51B1               	movf	f_getcwd@len& (0+255),w,b
 18401   015392  0107               	movlb	7	; () banked
 18402   015394  5D08               	subwf	f_getcwd@i& (0+255),w,b
 18403   015396  0106               	movlb	6	; () banked
 18404   015398  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 18405   01539A  0107               	movlb	7	; () banked
 18406   01539C  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 18407   01539E  A0D8               	btfss	status,0,c
 18408   0153A0  EFD4  F0A9         	goto	u33521
 18409   0153A4  EFD6  F0A9         	goto	u33520
 18410   0153A8                     u33521:
 18411   0153A8  EF93  F0A9         	goto	l24151
 18412   0153AC                     u33520:
 18413   0153AC                     l24159:
 18414                           
 18415                           ; BSR set to: 7
 18416                           ;../fatfs/ff.c: 4421:  *tp = 0;
 18417   0153AC  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 18418   0153B0  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 18419   0153B4  0E00               	movlw	low (__mediumconst shr (0+16))
 18420   0153B6  6EF8               	movwf	tblptru,c
 18421   0153B8  0E25               	movlw	(high __ramtop+-1)
 18422   0153BA  64F7               	cpfsgt	tblptrh,c
 18423   0153BC  D004               	bra	u33537
 18424   0153BE  0E00               	movlw	0
 18425   0153C0  6EF5               	movwf	tablat,c
 18426   0153C2  000C               	tblwt		*
 18427   0153C4  D006               	bra	u33530
 18428   0153C6                     u33537:
 18429   0153C6  C4F6 F4E9          	movff	tblptrl,fsr0l
 18430   0153CA  C4F7 F4EA          	movff	tblptrh,fsr0h
 18431   0153CE  0E00               	movlw	0
 18432   0153D0  6EEF               	movwf	indf0,c
 18433   0153D2                     u33530:
 18434   0153D2  0012               	return		;funcret
 18435   0153D4                     __end_of_f_getcwd:
 18436                           	callstack 0
 18437                           
 18438 ;; *************** function _get_fileinfo *****************
 18439 ;; Defined at:
 18440 ;;		line 2618 in file "../fatfs/ff.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  dp              2   16[COMRAM] PTR struct .
 18443 ;;		 -> f_stat@dj(40), f_getcwd@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 18444 ;;  fno             2   18[COMRAM] PTR struct .
 18445 ;;		 -> f_getcwd@fno(22), scan_files1@fno(22), scan_files@fno(22), 
 18446 ;; Auto vars:     Size  Location     Type
 18447 ;;  di              2   27[COMRAM] unsigned int 
 18448 ;;  si              2   24[COMRAM] unsigned int 
 18449 ;;  c               1   26[COMRAM] unsigned char 
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      void 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18463 ;;Total ram usage:       13 bytes
 18464 ;; Hardware stack levels used: 1
 18465 ;; Hardware stack levels required when called: 2
 18466 ;; This function calls:
 18467 ;;		_ld_dword
 18468 ;;		_ld_word
 18469 ;; This function is called by:
 18470 ;;		_f_getcwd
 18471 ;;		_f_readdir
 18472 ;;		_f_stat
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text29
 18477   01A316                     __ptext29:
 18478                           	callstack 0
 18479   01A316                     _get_fileinfo:
 18480                           	callstack 122
 18481   01A316                     
 18482                           ;../fatfs/ff.c: 2619:  DIR* dp,;../fatfs/ff.c: 2620:  FILINFO* fno;../fatfs/ff.c: 2622: 
      +                          {;../fatfs/ff.c: 2623:  UINT si, di;;../fatfs/ff.c: 2630:  TCHAR c;;../fatfs/ff.c: 2634:
      +                            fno->fname[0] = 0;
 18483   01A316  EE20 F009          	lfsr	2,9
 18484   01A31A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18485   01A31C  26D9               	addwf	fsr2l,f,c
 18486   01A31E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18487   01A320  22DA               	addwfc	fsr2h,f,c
 18488   01A322  6ADF               	clrf	indf2,c
 18489                           
 18490                           ;../fatfs/ff.c: 2635:  if (dp->sect == 0) return;
 18491   01A324  EE20 F016          	lfsr	2,22
 18492   01A328  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18493   01A32A  26D9               	addwf	fsr2l,f,c
 18494   01A32C  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18495   01A32E  22DA               	addwfc	fsr2h,f,c
 18496   01A330  50DE               	movf	postinc2,w,c
 18497   01A332  10DE               	iorwf	postinc2,w,c
 18498   01A334  10DE               	iorwf	postinc2,w,c
 18499   01A336  10DE               	iorwf	postinc2,w,c
 18500   01A338  A4D8               	btfss	status,2,c
 18501   01A33A  EFA1  F0D1         	goto	u33121
 18502   01A33E  EFA3  F0D1         	goto	u33120
 18503   01A342                     u33121:
 18504   01A342  EFA5  F0D1         	goto	l23853
 18505   01A346                     u33120:
 18506   01A346  EF86  F0D2         	goto	l1686
 18507   01A34A                     l23853:
 18508                           
 18509                           ;../fatfs/ff.c: 2734:  si = di = 0;
 18510   01A34A  0E00               	movlw	0
 18511   01A34C  6E1D               	movwf	(get_fileinfo@di+1)^(0+1280),c
 18512   01A34E  0E00               	movlw	0
 18513   01A350  6E1C               	movwf	get_fileinfo@di^(0+1280),c
 18514   01A352  C51C  F519         	movff	get_fileinfo@di,get_fileinfo@si
 18515   01A356  C51D  F51A         	movff	get_fileinfo@di+1,get_fileinfo@si+1
 18516                           
 18517                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 18518   01A35A  EF03  F0D2         	goto	l23875
 18519   01A35E                     l23855:
 18520                           
 18521                           ;../fatfs/ff.c: 2736:   c = (TCHAR)dp->dir[si++];
 18522   01A35E  EE20 F01A          	lfsr	2,26
 18523   01A362  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18524   01A364  26D9               	addwf	fsr2l,f,c
 18525   01A366  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18526   01A368  22DA               	addwfc	fsr2h,f,c
 18527   01A36A  C4DE F515          	movff	postinc2,??_get_fileinfo
 18528   01A36E  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18529   01A372  5019               	movf	get_fileinfo@si^(0+1280),w,c
 18530   01A374  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18531   01A376  6ED9               	movwf	fsr2l,c
 18532   01A378  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 18533   01A37A  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18534   01A37C  6EDA               	movwf	fsr2h,c
 18535   01A37E  50DF               	movf	indf2,w,c
 18536   01A380  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 18537   01A382  4A19               	infsnz	get_fileinfo@si^(0+1280),f,c
 18538   01A384  2A1A               	incf	(get_fileinfo@si+1)^(0+1280),f,c
 18539   01A386                     
 18540                           ;../fatfs/ff.c: 2737:   if (c == ' ') continue;
 18541   01A386  0E20               	movlw	32
 18542   01A388  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 18543   01A38A  A4D8               	btfss	status,2,c
 18544   01A38C  EFCA  F0D1         	goto	u33131
 18545   01A390  EFCC  F0D1         	goto	u33130
 18546   01A394                     u33131:
 18547   01A394  EFCE  F0D1         	goto	l23863
 18548   01A398                     u33130:
 18549   01A398  EF03  F0D2         	goto	l23875
 18550   01A39C                     l23863:
 18551                           
 18552                           ;../fatfs/ff.c: 2738:   if (c == 0x05) c = 0xE5;
 18553   01A39C  0E05               	movlw	5
 18554   01A39E  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 18555   01A3A0  A4D8               	btfss	status,2,c
 18556   01A3A2  EFD5  F0D1         	goto	u33141
 18557   01A3A6  EFD7  F0D1         	goto	u33140
 18558   01A3AA                     u33141:
 18559   01A3AA  EFD9  F0D1         	goto	l23867
 18560   01A3AE                     u33140:
 18561   01A3AE  0EE5               	movlw	229
 18562   01A3B0  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 18563   01A3B2                     l23867:
 18564                           
 18565                           ;../fatfs/ff.c: 2739:   if (si == 9) fno->fname[di++] = '.';
 18566   01A3B2  0E09               	movlw	9
 18567   01A3B4  1819               	xorwf	get_fileinfo@si^(0+1280),w,c
 18568   01A3B6  101A               	iorwf	(get_fileinfo@si+1)^(0+1280),w,c
 18569   01A3B8  A4D8               	btfss	status,2,c
 18570   01A3BA  EFE1  F0D1         	goto	u33151
 18571   01A3BE  EFE3  F0D1         	goto	u33150
 18572   01A3C2                     u33151:
 18573   01A3C2  EFF3  F0D1         	goto	l23873
 18574   01A3C6                     u33150:
 18575   01A3C6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18576   01A3C8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18577   01A3CA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18578   01A3CC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18579   01A3CE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18580   01A3D0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18581   01A3D2  0E09               	movlw	9
 18582   01A3D4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18583   01A3D6  6ED9               	movwf	fsr2l,c
 18584   01A3D8  0E00               	movlw	0
 18585   01A3DA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18586   01A3DC  6EDA               	movwf	fsr2h,c
 18587   01A3DE  0E2E               	movlw	46
 18588   01A3E0  6EDF               	movwf	indf2,c
 18589   01A3E2  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 18590   01A3E4  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 18591   01A3E6                     l23873:
 18592                           
 18593                           ;../fatfs/ff.c: 2740:   fno->fname[di++] = c;
 18594   01A3E6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18595   01A3E8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18596   01A3EA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18597   01A3EC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18598   01A3EE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18599   01A3F0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18600   01A3F2  0E09               	movlw	9
 18601   01A3F4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18602   01A3F6  6ED9               	movwf	fsr2l,c
 18603   01A3F8  0E00               	movlw	0
 18604   01A3FA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18605   01A3FC  6EDA               	movwf	fsr2h,c
 18606   01A3FE  C51B  F4DF         	movff	get_fileinfo@c,indf2
 18607   01A402  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 18608   01A404  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 18609   01A406                     l23875:
 18610                           
 18611                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 18612   01A406  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 18613   01A408  E109               	bnz	u33160
 18614   01A40A  0E0B               	movlw	11
 18615   01A40C  5C19               	subwf	get_fileinfo@si^(0+1280),w,c
 18616   01A40E  A0D8               	btfss	status,0,c
 18617   01A410  EF0C  F0D2         	goto	u33161
 18618   01A414  EF0E  F0D2         	goto	u33160
 18619   01A418                     u33161:
 18620   01A418  EFAF  F0D1         	goto	l23855
 18621   01A41C                     u33160:
 18622   01A41C                     
 18623                           ;../fatfs/ff.c: 2742:  fno->fname[di] = 0;
 18624   01A41C  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18625   01A41E  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18626   01A420  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18627   01A422  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18628   01A424  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18629   01A426  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18630   01A428  0E09               	movlw	9
 18631   01A42A  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18632   01A42C  6ED9               	movwf	fsr2l,c
 18633   01A42E  0E00               	movlw	0
 18634   01A430  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18635   01A432  6EDA               	movwf	fsr2h,c
 18636   01A434  6ADF               	clrf	indf2,c
 18637   01A436                     
 18638                           ;../fatfs/ff.c: 2745:  fno->fattrib = dp->dir[11] & 0x3F;
 18639   01A436  EE20 F008          	lfsr	2,8
 18640   01A43A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18641   01A43C  26D9               	addwf	fsr2l,f,c
 18642   01A43E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18643   01A440  22DA               	addwfc	fsr2h,f,c
 18644   01A442  EE10 F01A          	lfsr	1,26
 18645   01A446  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18646   01A448  26E1               	addwf	fsr1l,f,c
 18647   01A44A  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18648   01A44C  22E2               	addwfc	fsr1h,f,c
 18649   01A44E  EE00 F00B          	lfsr	0,11
 18650   01A452  50E6               	movf	postinc1,w,c
 18651   01A454  26E9               	addwf	fsr0l,f,c
 18652   01A456  50E5               	movf	postdec1,w,c
 18653   01A458  22EA               	addwfc	fsr0h,f,c
 18654   01A45A  50EF               	movf	indf0,w,c
 18655   01A45C  0B3F               	andlw	63
 18656   01A45E  6EDF               	movwf	indf2,c
 18657   01A460                     
 18658                           ;../fatfs/ff.c: 2746:  fno->fsize = ld_dword(dp->dir + 28);
 18659   01A460  EE20 F01A          	lfsr	2,26
 18660   01A464  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18661   01A466  26D9               	addwf	fsr2l,f,c
 18662   01A468  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18663   01A46A  22DA               	addwfc	fsr2h,f,c
 18664   01A46C  C4DE F515          	movff	postinc2,??_get_fileinfo
 18665   01A470  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18666   01A474  0E1C               	movlw	28
 18667   01A476  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18668   01A478  6E04               	movwf	ld_dword@ptr^(0+1280),c
 18669   01A47A  0E00               	movlw	0
 18670   01A47C  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18671   01A47E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 18672   01A480  ECC7  F0F2         	call	_ld_dword	;wreg free
 18673   01A484  C513  F4D9         	movff	get_fileinfo@fno,fsr2l
 18674   01A488  C514  F4DA         	movff	get_fileinfo@fno+1,fsr2h
 18675   01A48C  C504  F4DE         	movff	?_ld_dword,postinc2
 18676   01A490  C505  F4DE         	movff	?_ld_dword+1,postinc2
 18677   01A494  C506  F4DE         	movff	?_ld_dword+2,postinc2
 18678   01A498  C507  F4DE         	movff	?_ld_dword+3,postinc2
 18679   01A49C                     
 18680                           ;../fatfs/ff.c: 2747:  fno->ftime = ld_word(dp->dir + 22 + 0);
 18681   01A49C  EE20 F01A          	lfsr	2,26
 18682   01A4A0  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18683   01A4A2  26D9               	addwf	fsr2l,f,c
 18684   01A4A4  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18685   01A4A6  22DA               	addwfc	fsr2h,f,c
 18686   01A4A8  C4DE F515          	movff	postinc2,??_get_fileinfo
 18687   01A4AC  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18688   01A4B0  0E16               	movlw	22
 18689   01A4B2  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18690   01A4B4  6E04               	movwf	ld_word@ptr^(0+1280),c
 18691   01A4B6  0E00               	movlw	0
 18692   01A4B8  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18693   01A4BA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 18694   01A4BC  EC4C  F0FF         	call	_ld_word	;wreg free
 18695   01A4C0  EE20 F006          	lfsr	2,6
 18696   01A4C4  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18697   01A4C6  26D9               	addwf	fsr2l,f,c
 18698   01A4C8  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18699   01A4CA  22DA               	addwfc	fsr2h,f,c
 18700   01A4CC  C504  F4DE         	movff	?_ld_word,postinc2
 18701   01A4D0  C505  F4DD         	movff	?_ld_word+1,postdec2
 18702   01A4D4                     
 18703                           ;../fatfs/ff.c: 2748:  fno->fdate = ld_word(dp->dir + 22 + 2);
 18704   01A4D4  EE20 F01A          	lfsr	2,26
 18705   01A4D8  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18706   01A4DA  26D9               	addwf	fsr2l,f,c
 18707   01A4DC  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18708   01A4DE  22DA               	addwfc	fsr2h,f,c
 18709   01A4E0  C4DE F515          	movff	postinc2,??_get_fileinfo
 18710   01A4E4  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18711   01A4E8  0E18               	movlw	24
 18712   01A4EA  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18713   01A4EC  6E04               	movwf	ld_word@ptr^(0+1280),c
 18714   01A4EE  0E00               	movlw	0
 18715   01A4F0  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18716   01A4F2  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 18717   01A4F4  EC4C  F0FF         	call	_ld_word	;wreg free
 18718   01A4F8  EE20 F004          	lfsr	2,4
 18719   01A4FC  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18720   01A4FE  26D9               	addwf	fsr2l,f,c
 18721   01A500  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18722   01A502  22DA               	addwfc	fsr2h,f,c
 18723   01A504  C504  F4DE         	movff	?_ld_word,postinc2
 18724   01A508  C505  F4DD         	movff	?_ld_word+1,postdec2
 18725   01A50C                     l1686:
 18726   01A50C  0012               	return		;funcret
 18727   01A50E                     __end_of_get_fileinfo:
 18728                           	callstack 0
 18729                           
 18730 ;; *************** function _dir_read *****************
 18731 ;; Defined at:
 18732 ;;		line 2307 in file "../fatfs/ff.c"
 18733 ;; Parameters:    Size  Location     Type
 18734 ;;  dp              2  124[BANK6 ] PTR struct .
 18735 ;;		 -> f_unlink@sdj(40), f_getcwd@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 18736 ;;  vol             2  126[BANK6 ] int 
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;  fs              2  132[BANK6 ] PTR struct .
 18739 ;;		 -> fs(564), NULL(0), 
 18740 ;;  res             1  136[BANK6 ] enum E597
 18741 ;;  b               1  135[BANK6 ] unsigned char 
 18742 ;;  attr            1  134[BANK6 ] unsigned char 
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      enum E597
 18745 ;; Registers used:
 18746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18752 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18755 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18756 ;;Total ram usage:       13 bytes
 18757 ;; Hardware stack levels used: 1
 18758 ;; Hardware stack levels required when called: 17
 18759 ;; This function calls:
 18760 ;;		_dir_next
 18761 ;;		_move_window
 18762 ;; This function is called by:
 18763 ;;		_f_getcwd
 18764 ;;		_f_readdir
 18765 ;;		_f_unlink
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text30
 18770   01B160                     __ptext30:
 18771                           	callstack 0
 18772   01B160                     _dir_read:
 18773                           	callstack 107
 18774   01B160                     
 18775                           ;../fatfs/ff.c: 2308:  DIR* dp,;../fatfs/ff.c: 2309:  int vol;../fatfs/ff.c: 2311: {;../
      +                          fatfs/ff.c: 2312:  FRESULT res = FR_NO_FILE;
 18776   01B160  0E04               	movlw	4
 18777   01B162  0106               	movlb	6	; () banked
 18778   01B164  6F88               	movwf	dir_read@res& (0+255),b
 18779   01B166                     
 18780                           ; BSR set to: 6
 18781                           ;../fatfs/ff.c: 2313:  FATFS *fs = dp->obj.fs;
 18782   01B166  C67C  F4D9         	movff	dir_read@dp,fsr2l
 18783   01B16A  C67D  F4DA         	movff	dir_read@dp+1,fsr2h
 18784   01B16E  C4DE F684          	movff	postinc2,dir_read@fs
 18785   01B172  C4DD F685          	movff	postdec2,dir_read@fs+1
 18786                           
 18787                           ;../fatfs/ff.c: 2314:  BYTE attr, b;;../fatfs/ff.c: 2319:  while (dp->sect) {
 18788   01B176  EF5D  F0D9         	goto	l23839
 18789   01B17A                     l23809:
 18790                           
 18791                           ; BSR set to: 6
 18792                           ;../fatfs/ff.c: 2320:   res = move_window(fs, dp->sect);
 18793   01B17A  C684  F61A         	movff	dir_read@fs,move_window@fs
 18794   01B17E  C685  F61B         	movff	dir_read@fs+1,move_window@fs+1
 18795   01B182  EE20 F016          	lfsr	2,22
 18796   01B186  517C               	movf	dir_read@dp& (0+255),w,b
 18797   01B188  26D9               	addwf	fsr2l,f,c
 18798   01B18A  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18799   01B18C  22DA               	addwfc	fsr2h,f,c
 18800   01B18E  C4DE F61C          	movff	postinc2,move_window@sect
 18801   01B192  C4DE F61D          	movff	postinc2,move_window@sect+1
 18802   01B196  C4DE F61E          	movff	postinc2,move_window@sect+2
 18803   01B19A  C4DE F61F          	movff	postinc2,move_window@sect+3
 18804   01B19E  ECAB  F0EF         	call	_move_window	;wreg free
 18805   01B1A2  0106               	movlb	6	; () banked
 18806   01B1A4  6F88               	movwf	dir_read@res& (0+255),b
 18807   01B1A6                     
 18808                           ; BSR set to: 6
 18809                           ;../fatfs/ff.c: 2321:   if (res != FR_OK) break;
 18810   01B1A6  5188               	movf	dir_read@res& (0+255),w,b
 18811   01B1A8  B4D8               	btfsc	status,2,c
 18812   01B1AA  EFD9  F0D8         	goto	u33011
 18813   01B1AE  EFDB  F0D8         	goto	u33010
 18814   01B1B2                     u33011:
 18815   01B1B2  EFDD  F0D8         	goto	l23815
 18816   01B1B6                     u33010:
 18817   01B1B6  EF6E  F0D9         	goto	l23841
 18818   01B1BA                     l23815:
 18819                           
 18820                           ; BSR set to: 6
 18821                           ;../fatfs/ff.c: 2322:   b = dp->dir[0];
 18822   01B1BA  EE20 F01A          	lfsr	2,26
 18823   01B1BE  517C               	movf	dir_read@dp& (0+255),w,b
 18824   01B1C0  26D9               	addwf	fsr2l,f,c
 18825   01B1C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18826   01B1C4  22DA               	addwfc	fsr2h,f,c
 18827   01B1C6  C4DE F680          	movff	postinc2,??_dir_read
 18828   01B1CA  C4DD F681          	movff	postdec2,??_dir_read+1
 18829   01B1CE  C680  F4D9         	movff	??_dir_read,fsr2l
 18830   01B1D2  C681  F4DA         	movff	??_dir_read+1,fsr2h
 18831   01B1D6  50DF               	movf	indf2,w,c
 18832   01B1D8  6F87               	movwf	dir_read@b& (0+255),b
 18833   01B1DA                     
 18834                           ; BSR set to: 6
 18835                           ;../fatfs/ff.c: 2323:   if (b == 0) {
 18836   01B1DA  5187               	movf	dir_read@b& (0+255),w,b
 18837   01B1DC  A4D8               	btfss	status,2,c
 18838   01B1DE  EFF3  F0D8         	goto	u33021
 18839   01B1E2  EFF5  F0D8         	goto	u33020
 18840   01B1E6                     u33021:
 18841   01B1E6  EFF9  F0D8         	goto	l23821
 18842   01B1EA                     u33020:
 18843   01B1EA                     
 18844                           ; BSR set to: 6
 18845                           ;../fatfs/ff.c: 2324:    res = FR_NO_FILE; break;
 18846   01B1EA  0E04               	movlw	4
 18847   01B1EC  6F88               	movwf	dir_read@res& (0+255),b
 18848   01B1EE  EF6E  F0D9         	goto	l23841
 18849   01B1F2                     l23821:
 18850                           
 18851                           ; BSR set to: 6
 18852                           ;../fatfs/ff.c: 2342:   {;../fatfs/ff.c: 2343:    dp->obj.attr = attr = dp->dir[11] & 0x
      +                          3F;
 18853   01B1F2  EE20 F01A          	lfsr	2,26
 18854   01B1F6  517C               	movf	dir_read@dp& (0+255),w,b
 18855   01B1F8  26D9               	addwf	fsr2l,f,c
 18856   01B1FA  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18857   01B1FC  22DA               	addwfc	fsr2h,f,c
 18858   01B1FE  EE10 F00B          	lfsr	1,11
 18859   01B202  50DE               	movf	postinc2,w,c
 18860   01B204  26E1               	addwf	fsr1l,f,c
 18861   01B206  50DD               	movf	postdec2,w,c
 18862   01B208  22E2               	addwfc	fsr1h,f,c
 18863   01B20A  50E7               	movf	indf1,w,c
 18864   01B20C  0B3F               	andlw	63
 18865   01B20E  6F86               	movwf	dir_read@attr& (0+255),b
 18866   01B210  EE20 F004          	lfsr	2,4
 18867   01B214  517C               	movf	dir_read@dp& (0+255),w,b
 18868   01B216  26D9               	addwf	fsr2l,f,c
 18869   01B218  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18870   01B21A  22DA               	addwfc	fsr2h,f,c
 18871   01B21C  C686  F4DF         	movff	dir_read@attr,indf2
 18872   01B220                     
 18873                           ; BSR set to: 6
 18874                           ;../fatfs/ff.c: 2364:    if (b != 0xE5 && b != '.' && attr != 0x0F && (int)((attr & ~0x2
      +                          0) == 0x08) == vol) {
 18875   01B220  0EE5               	movlw	229
 18876   01B222  1987               	xorwf	dir_read@b& (0+255),w,b
 18877   01B224  B4D8               	btfsc	status,2,c
 18878   01B226  EF17  F0D9         	goto	u33031
 18879   01B22A  EF19  F0D9         	goto	u33030
 18880   01B22E                     u33031:
 18881   01B22E  EF47  F0D9         	goto	l23833
 18882   01B232                     u33030:
 18883   01B232                     
 18884                           ; BSR set to: 6
 18885   01B232  0E2E               	movlw	46
 18886   01B234  1987               	xorwf	dir_read@b& (0+255),w,b
 18887   01B236  B4D8               	btfsc	status,2,c
 18888   01B238  EF20  F0D9         	goto	u33041
 18889   01B23C  EF22  F0D9         	goto	u33040
 18890   01B240                     u33041:
 18891   01B240  EF47  F0D9         	goto	l23833
 18892   01B244                     u33040:
 18893   01B244                     
 18894                           ; BSR set to: 6
 18895   01B244  0E0F               	movlw	15
 18896   01B246  1986               	xorwf	dir_read@attr& (0+255),w,b
 18897   01B248  B4D8               	btfsc	status,2,c
 18898   01B24A  EF29  F0D9         	goto	u33051
 18899   01B24E  EF2B  F0D9         	goto	u33050
 18900   01B252                     u33051:
 18901   01B252  EF47  F0D9         	goto	l23833
 18902   01B256                     u33050:
 18903   01B256                     
 18904                           ; BSR set to: 6
 18905   01B256  5186               	movf	dir_read@attr& (0+255),w,b
 18906   01B258  0BDF               	andlw	223
 18907   01B25A  0A08               	xorlw	8
 18908   01B25C  B4D8               	btfsc	status,2,c
 18909   01B25E  EF33  F0D9         	goto	u33061
 18910   01B262  EF36  F0D9         	goto	u33060
 18911   01B266                     u33061:
 18912   01B266  0E01               	movlw	1
 18913   01B268  EF37  F0D9         	goto	u33070
 18914   01B26C                     u33060:
 18915   01B26C  0E00               	movlw	0
 18916   01B26E                     u33070:
 18917   01B26E  6F80               	movwf	??_dir_read& (0+255),b
 18918   01B270  6B81               	clrf	(??_dir_read+1)& (0+255),b
 18919   01B272  517E               	movf	dir_read@vol& (0+255),w,b
 18920   01B274  1980               	xorwf	??_dir_read& (0+255),w,b
 18921   01B276  E107               	bnz	u33081
 18922   01B278  517F               	movf	(dir_read@vol+1)& (0+255),w,b
 18923   01B27A  1981               	xorwf	(??_dir_read+1)& (0+255),w,b
 18924   01B27C  A4D8               	btfss	status,2,c
 18925   01B27E  EF43  F0D9         	goto	u33081
 18926   01B282  EF45  F0D9         	goto	u33080
 18927   01B286                     u33081:
 18928   01B286  EF47  F0D9         	goto	l23833
 18929   01B28A                     u33080:
 18930   01B28A  EF6E  F0D9         	goto	l23841
 18931   01B28E                     l23833:
 18932                           
 18933                           ; BSR set to: 6
 18934                           ;../fatfs/ff.c: 2368:   };../fatfs/ff.c: 2369:   res = dir_next(dp, 0);
 18935   01B28E  C67C  F662         	movff	dir_read@dp,dir_next@dp
 18936   01B292  C67D  F663         	movff	dir_read@dp+1,dir_next@dp+1
 18937   01B296  0E00               	movlw	0
 18938   01B298  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 18939   01B29A  0E00               	movlw	0
 18940   01B29C  6F64               	movwf	dir_next@stretch& (0+255),b
 18941   01B29E  ECCF  F0B0         	call	_dir_next	;wreg free
 18942   01B2A2  0106               	movlb	6	; () banked
 18943   01B2A4  6F88               	movwf	dir_read@res& (0+255),b
 18944   01B2A6                     
 18945                           ; BSR set to: 6
 18946                           ;../fatfs/ff.c: 2370:   if (res != FR_OK) break;
 18947   01B2A6  5188               	movf	dir_read@res& (0+255),w,b
 18948   01B2A8  B4D8               	btfsc	status,2,c
 18949   01B2AA  EF59  F0D9         	goto	u33091
 18950   01B2AE  EF5B  F0D9         	goto	u33090
 18951   01B2B2                     u33091:
 18952   01B2B2  EF5D  F0D9         	goto	l23839
 18953   01B2B6                     u33090:
 18954   01B2B6  EF6E  F0D9         	goto	l23841
 18955   01B2BA                     l23839:
 18956                           
 18957                           ; BSR set to: 6
 18958                           ;../fatfs/ff.c: 2319:  while (dp->sect) {
 18959   01B2BA  EE20 F016          	lfsr	2,22
 18960   01B2BE  517C               	movf	dir_read@dp& (0+255),w,b
 18961   01B2C0  26D9               	addwf	fsr2l,f,c
 18962   01B2C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18963   01B2C4  22DA               	addwfc	fsr2h,f,c
 18964   01B2C6  50DE               	movf	postinc2,w,c
 18965   01B2C8  10DE               	iorwf	postinc2,w,c
 18966   01B2CA  10DE               	iorwf	postinc2,w,c
 18967   01B2CC  10DE               	iorwf	postinc2,w,c
 18968   01B2CE  A4D8               	btfss	status,2,c
 18969   01B2D0  EF6C  F0D9         	goto	u33101
 18970   01B2D4  EF6E  F0D9         	goto	u33100
 18971   01B2D8                     u33101:
 18972   01B2D8  EFBD  F0D8         	goto	l23809
 18973   01B2DC                     u33100:
 18974   01B2DC                     l23841:
 18975                           
 18976                           ; BSR set to: 6
 18977                           ;../fatfs/ff.c: 2373:  if (res != FR_OK) dp->sect = 0;
 18978   01B2DC  5188               	movf	dir_read@res& (0+255),w,b
 18979   01B2DE  B4D8               	btfsc	status,2,c
 18980   01B2E0  EF74  F0D9         	goto	u33111
 18981   01B2E4  EF76  F0D9         	goto	u33110
 18982   01B2E8                     u33111:
 18983   01B2E8  EF80  F0D9         	goto	l23845
 18984   01B2EC                     u33110:
 18985   01B2EC                     
 18986                           ; BSR set to: 6
 18987   01B2EC  EE20 F016          	lfsr	2,22
 18988   01B2F0  517C               	movf	dir_read@dp& (0+255),w,b
 18989   01B2F2  26D9               	addwf	fsr2l,f,c
 18990   01B2F4  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18991   01B2F6  22DA               	addwfc	fsr2h,f,c
 18992   01B2F8  6ADE               	clrf	postinc2,c
 18993   01B2FA  6ADE               	clrf	postinc2,c
 18994   01B2FC  6ADE               	clrf	postinc2,c
 18995   01B2FE  6ADD               	clrf	postdec2,c
 18996   01B300                     l23845:
 18997                           
 18998                           ; BSR set to: 6
 18999                           ;../fatfs/ff.c: 2374:  return res;
 19000   01B300  5188               	movf	dir_read@res& (0+255),w,b
 19001   01B302                     
 19002                           ; BSR set to: 6
 19003   01B302  0012               	return		;funcret
 19004   01B304                     __end_of_dir_read:
 19005                           	callstack 0
 19006                           
 19007 ;; *************** function _f_closedir *****************
 19008 ;; Defined at:
 19009 ;;		line 4665 in file "../fatfs/ff.c"
 19010 ;; Parameters:    Size  Location     Type
 19011 ;;  dp              2  105[BANK5 ] PTR struct .
 19012 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;  fs              2  107[BANK5 ] PTR struct .
 19015 ;;		 -> fs(564), NULL(0), 
 19016 ;;  res             1  109[BANK5 ] enum E597
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  1    wreg      enum E17409
 19019 ;; Registers used:
 19020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19029 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19030 ;;Total ram usage:        5 bytes
 19031 ;; Hardware stack levels used: 1
 19032 ;; Hardware stack levels required when called: 11
 19033 ;; This function calls:
 19034 ;;		_validate
 19035 ;; This function is called by:
 19036 ;;		_scan_files
 19037 ;;		_scan_files1
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text31
 19042   01FDB8                     __ptext31:
 19043                           	callstack 0
 19044   01FDB8                     _f_closedir:
 19045                           	callstack 114
 19046   01FDB8                     
 19047                           ;../fatfs/ff.c: 4666:  DIR *dp;../fatfs/ff.c: 4668: {;../fatfs/ff.c: 4669:  FRESULT res;
      +                          ;../fatfs/ff.c: 4670:  FATFS *fs;;../fatfs/ff.c: 4673:  res = validate(&dp->obj, &fs);
 19048   01FDB8  C5C9  F5BE         	movff	f_closedir@dp,validate@obj
 19049   01FDBC  C5CA  F5BF         	movff	f_closedir@dp+1,validate@obj+1
 19050   01FDC0  0ECB               	movlw	low f_closedir@fs
 19051   01FDC2  0105               	movlb	5	; () banked
 19052   01FDC4  6FC0               	movwf	validate@rfs& (0+255),b
 19053   01FDC6  0E05               	movlw	high f_closedir@fs
 19054   01FDC8  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 19055   01FDCA  ECA3  F0E9         	call	_validate	;wreg free
 19056   01FDCE  0105               	movlb	5	; () banked
 19057   01FDD0  6FCD               	movwf	f_closedir@res& (0+255),b
 19058   01FDD2                     
 19059                           ; BSR set to: 5
 19060                           ;../fatfs/ff.c: 4674:  if (res == FR_OK) {
 19061   01FDD2  51CD               	movf	f_closedir@res& (0+255),w,b
 19062   01FDD4  A4D8               	btfss	status,2,c
 19063   01FDD6  EFEF  F0FE         	goto	u34231
 19064   01FDDA  EFF1  F0FE         	goto	u34230
 19065   01FDDE                     u34231:
 19066   01FDDE  EFF7  F0FE         	goto	l2080
 19067   01FDE2                     u34230:
 19068   01FDE2                     
 19069                           ; BSR set to: 5
 19070                           ;../fatfs/ff.c: 4679:   dp->obj.fs = 0;
 19071   01FDE2  C5C9  F4D9         	movff	f_closedir@dp,fsr2l
 19072   01FDE6  C5CA  F4DA         	movff	f_closedir@dp+1,fsr2h
 19073   01FDEA  6ADE               	clrf	postinc2,c
 19074   01FDEC  6ADD               	clrf	postdec2,c
 19075   01FDEE                     l2080:
 19076                           
 19077                           ; BSR set to: 5
 19078   01FDEE  0012               	return		;funcret
 19079   01FDF0                     __end_of_f_closedir:
 19080                           	callstack 0
 19081                           
 19082 ;; *************** function _continue_action *****************
 19083 ;; Defined at:
 19084 ;;		line 378 in file "../src/boards/w65_bd.c"
 19085 ;; Parameters:    Size  Location     Type
 19086 ;;		None
 19087 ;; Auto vars:     Size  Location     Type
 19088 ;;		None
 19089 ;; Return value:  Size  Location     Type
 19090 ;;                  1    wreg      void 
 19091 ;; Registers used:
 19092 ;;		wreg, status,2, cstack
 19093 ;; Tracked objects:
 19094 ;;		On entry : 0/0
 19095 ;;		On exit  : 0/0
 19096 ;;		Unchanged: 0/0
 19097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19102 ;;Total ram usage:        0 bytes
 19103 ;; Hardware stack levels used: 1
 19104 ;; Hardware stack levels required when called: 2
 19105 ;; This function calls:
 19106 ;;		_bus_release_req
 19107 ;; This function is called by:
 19108 ;;		_return_cpu
 19109 ;; This function uses a non-reentrant model
 19110 ;;
 19111                           
 19112                           	psect	text32
 19113   01FB2C                     __ptext32:
 19114                           	callstack 0
 19115   01FB2C                     _continue_action:
 19116                           	callstack 123
 19117   01FB2C                     
 19118                           ;../src/boards/w65_bd.c: 380:  CLCSELECT = 0;
 19119   01FB2C  0100               	movlb	0	; () banked
 19120   01FB2E  6BD5               	clrf	213,b	;volatile
 19121   01FB30                     
 19122                           ; BSR set to: 0
 19123                           ;../src/boards/w65_bd.c: 381:  bus_release_req();
 19124   01FB30  EC32  F001         	call	_bus_release_req	;wreg free
 19125   01FB34                     
 19126                           ;../src/boards/w65_bd.c: 383:  G2POL = 1;
 19127   01FB34  0100               	movlb	0	; () banked
 19128   01FB36  83D7               	bsf	215,1,b	;volatile
 19129   01FB38                     
 19130                           ; BSR set to: 0
 19131                           ;../src/boards/w65_bd.c: 385:  CLCSELECT = 1;
 19132   01FB38  0E01               	movlw	1
 19133   01FB3A  6FD5               	movwf	213,b	;volatile
 19134   01FB3C                     
 19135                           ; BSR set to: 0
 19136                           ;../src/boards/w65_bd.c: 386:  G2POL = 1;
 19137   01FB3C  83D7               	bsf	215,1,b	;volatile
 19138   01FB3E                     l442:
 19139                           
 19140                           ; BSR set to: 0
 19141   01FB3E  AFD4               	btfss	212,7,b	;volatile
 19142   01FB40  EFA4  F0FD         	goto	u33281
 19143   01FB44  EFA6  F0FD         	goto	u33280
 19144   01FB48                     u33281:
 19145   01FB48  EF9F  F0FD         	goto	l442
 19146   01FB4C                     u33280:
 19147   01FB4C                     
 19148                           ; BSR set to: 0
 19149                           ;../src/boards/w65_bd.c: 388:  G2POL = 0;
 19150   01FB4C  93D7               	bcf	215,1,b	;volatile
 19151   01FB4E                     
 19152                           ; BSR set to: 0
 19153                           ;../src/boards/w65_bd.c: 389:  CLCSELECT = 7;
 19154   01FB4E  0E07               	movlw	7
 19155   01FB50  6FD5               	movwf	213,b	;volatile
 19156   01FB52                     
 19157                           ; BSR set to: 0
 19158                           ;../src/boards/w65_bd.c: 390:  G3POL = 1;
 19159   01FB52  85D7               	bsf	215,2,b	;volatile
 19160   01FB54                     
 19161                           ; BSR set to: 0
 19162                           ;../src/boards/w65_bd.c: 391:  G3POL = 0;
 19163   01FB54  95D7               	bcf	215,2,b	;volatile
 19164                           
 19165                           ;../src/boards/w65_bd.c: 393:  if( fh.irq_sw ) {
 19166   01FB56  0108               	movlb	8	; () banked
 19167   01FB58  51BB               	movf	(_fh+25)& (0+255),w,b
 19168   01FB5A  B4D8               	btfsc	status,2,c
 19169   01FB5C  EFB2  F0FD         	goto	u33291
 19170   01FB60  EFB4  F0FD         	goto	u33290
 19171   01FB64                     u33291:
 19172   01FB64  EFB8  F0FD         	goto	l446
 19173   01FB68                     u33290:
 19174   01FB68                     
 19175                           ; BSR set to: 8
 19176                           ;../src/boards/w65_bd.c: 394:   GIE = 0;
 19177   01FB68  9ED6               	bcf	1238,7,c	;volatile
 19178                           
 19179                           ;../src/boards/w65_bd.c: 395:   irq_flg = 0;
 19180   01FB6A  0107               	movlb	7	; () banked
 19181   01FB6C  6BCB               	clrf	_irq_flg& (0+255),b
 19182                           
 19183                           ;../src/boards/w65_bd.c: 396:   GIE = 1;
 19184   01FB6E  8ED6               	bsf	1238,7,c	;volatile
 19185   01FB70                     l446:
 19186   01FB70  0012               	return		;funcret
 19187   01FB72                     __end_of_continue_action:
 19188                           	callstack 0
 19189                           
 19190 ;; *************** function _reset_cpu *****************
 19191 ;; Defined at:
 19192 ;;		line 180 in file "../src/boards/w65_cmn.c"
 19193 ;; Parameters:    Size  Location     Type
 19194 ;;		None
 19195 ;; Auto vars:     Size  Location     Type
 19196 ;;  i               2    0        int 
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  1    wreg      void 
 19199 ;; Registers used:
 19200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19201 ;; Tracked objects:
 19202 ;;		On entry : 0/0
 19203 ;;		On exit  : 0/0
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19209 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19210 ;;Total ram usage:        2 bytes
 19211 ;; Hardware stack levels used: 1
 19212 ;; Hardware stack levels required when called: 9
 19213 ;; This function calls:
 19214 ;;		_bus_hold_req
 19215 ;;		_bus_release_req
 19216 ;;		_memcmp
 19217 ;;		_printf
 19218 ;;		_read_sram
 19219 ;;		_write_sram
 19220 ;; This function is called by:
 19221 ;;		_main
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           	psect	text33
 19226   01DE7C                     __ptext33:
 19227                           	callstack 0
 19228   01DE7C                     _reset_cpu:
 19229                           	callstack 117
 19230   01DE7C                     
 19231                           ;../src/boards/w65_cmn.c: 182:  int i;;../src/boards/w65_cmn.c: 185:  bus_hold_req();
 19232   01DE7C  EC2C  F001         	call	_bus_hold_req	;wreg free
 19233   01DE80                     
 19234                           ;../src/boards/w65_cmn.c: 186:  cpu_flg = 0;
 19235   01DE80  0107               	movlb	7	; () banked
 19236   01DE82  6BE5               	clrf	_cpu_flg& (0+255),b
 19237   01DE84                     
 19238                           ; BSR set to: 7
 19239                           ;../src/boards/w65_cmn.c: 187:  write_sram(0xfff0, (uint8_t *)rom, 16);
 19240   01DE84  0EF0               	movlw	240
 19241   01DE86  6E04               	movwf	write_sram@addr^(0+1280),c
 19242   01DE88  0EFF               	movlw	255
 19243   01DE8A  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 19244   01DE8C  0E00               	movlw	0
 19245   01DE8E  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 19246   01DE90  0E00               	movlw	0
 19247   01DE92  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 19248   01DE94  0E0F               	movlw	low _rom
 19249   01DE96  6E08               	movwf	write_sram@buf^(0+1280),c
 19250   01DE98  0EF2               	movlw	high _rom
 19251   01DE9A  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 19252   01DE9C  0E00               	movlw	0
 19253   01DE9E  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 19254   01DEA0  0E10               	movlw	16
 19255   01DEA2  6E0A               	movwf	write_sram@len^(0+1280),c
 19256   01DEA4  EC9F  F0E8         	call	_write_sram	;wreg free
 19257   01DEA8                     
 19258                           ;../src/boards/w65_cmn.c: 188:  read_sram(0xfff0, tmp_buf[0], 16);
 19259   01DEA8  0EF0               	movlw	240
 19260   01DEAA  6E04               	movwf	read_sram@addr^(0+1280),c
 19261   01DEAC  0EFF               	movlw	255
 19262   01DEAE  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 19263   01DEB0  0E00               	movlw	0
 19264   01DEB2  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 19265   01DEB4  0E00               	movlw	0
 19266   01DEB6  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 19267   01DEB8  0EF8               	movlw	low _tmp_buf
 19268   01DEBA  6E08               	movwf	read_sram@buf^(0+1280),c
 19269   01DEBC  0E13               	movlw	high _tmp_buf
 19270   01DEBE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19271   01DEC0  0E00               	movlw	0
 19272   01DEC2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19273   01DEC4  0E10               	movlw	16
 19274   01DEC6  6E0A               	movwf	read_sram@len^(0+1280),c
 19275   01DEC8  EC0C  F0F2         	call	_read_sram	;wreg free
 19276   01DECC                     
 19277                           ;../src/boards/w65_cmn.c: 189:  if (memcmp(rom, tmp_buf[0], 16) != 0) {
 19278   01DECC  0E0F               	movlw	low _rom
 19279   01DECE  6E04               	movwf	memcmp@vl^(0+1280),c
 19280   01DED0  0EF2               	movlw	high _rom
 19281   01DED2  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19282   01DED4  0EF8               	movlw	low _tmp_buf
 19283   01DED6  6E06               	movwf	memcmp@vr^(0+1280),c
 19284   01DED8  0E13               	movlw	high _tmp_buf
 19285   01DEDA  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19286   01DEDC  0E00               	movlw	0
 19287   01DEDE  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19288   01DEE0  0E10               	movlw	16
 19289   01DEE2  6E08               	movwf	memcmp@n^(0+1280),c
 19290   01DEE4  EC23  F0EA         	call	_memcmp	;wreg free
 19291   01DEE8  5004               	movf	?_memcmp^(0+1280),w,c
 19292   01DEEA  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19293   01DEEC  B4D8               	btfsc	status,2,c
 19294   01DEEE  EF7B  F0EF         	goto	u34401
 19295   01DEF2  EF7D  F0EF         	goto	u34400
 19296   01DEF6                     u34401:
 19297   01DEF6  EF88  F0EF         	goto	l24685
 19298   01DEFA                     u34400:
 19299   01DEFA                     
 19300                           ;../src/boards/w65_cmn.c: 190:   bus_release_req();
 19301   01DEFA  EC32  F001         	call	_bus_release_req	;wreg free
 19302   01DEFE                     
 19303                           ;../src/boards/w65_cmn.c: 191:   printf("Memory Write Error\r\n");
 19304   01DEFE  0E85               	movlw	low STR_4
 19305   01DF00  0105               	movlb	5	; () banked
 19306   01DF02  6FAD               	movwf	printf@fmt& (0+255),b
 19307   01DF04  0EFC               	movlw	high STR_4
 19308   01DF06  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19309   01DF08  ECDA  F0FF         	call	_printf	;wreg free
 19310   01DF0C                     l341:
 19311   01DF0C  EF86  F0EF         	goto	l341
 19312   01DF10                     l24685:
 19313                           
 19314                           ;../src/boards/w65_cmn.c: 194:  bus_release_req();
 19315   01DF10  EC32  F001         	call	_bus_release_req	;wreg free
 19316   01DF14                     
 19317                           ;../src/boards/w65_cmn.c: 196:  LATA0 = 1;
 19318   01DF14  80BE               	bsf	1214,0,c	;volatile
 19319   01DF16                     
 19320                           ;../src/boards/w65_cmn.c: 197:  LATE0 = 1;
 19321   01DF16  80C2               	bsf	1218,0,c	;volatile
 19322   01DF18                     
 19323                           ;../src/boards/w65_cmn.c: 199:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 19324   01DF18  0E09               	movlw	9
 19325   01DF1A  0105               	movlb	5	; () banked
 19326   01DF1C  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 19327   01DF1E  0E1E               	movlw	30
 19328   01DF20  6FBD               	movwf	??_reset_cpu& (0+255),b
 19329   01DF22  0EE4               	movlw	228
 19330   01DF24                     u36867:
 19331   01DF24  2EE8               	decfsz	wreg,f,c
 19332   01DF26  D7FE               	bra	u36867
 19333   01DF28  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 19334   01DF2A  D7FC               	bra	u36867
 19335   01DF2C  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 19336   01DF2E  D7FA               	bra	u36867
 19337   01DF30  0000               	nop	
 19338   01DF32                     
 19339                           ;../src/boards/w65_cmn.c: 201:  LATA0 = 0;
 19340   01DF32  90BE               	bcf	1214,0,c	;volatile
 19341   01DF34                     
 19342                           ;../src/boards/w65_cmn.c: 202:  LATE0 = 0;
 19343   01DF34  90C2               	bcf	1218,0,c	;volatile
 19344   01DF36                     
 19345                           ;../src/boards/w65_cmn.c: 204:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 19346   01DF36  0E09               	movlw	9
 19347   01DF38  0105               	movlb	5	; () banked
 19348   01DF3A  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 19349   01DF3C  0E1E               	movlw	30
 19350   01DF3E  6FBD               	movwf	??_reset_cpu& (0+255),b
 19351   01DF40  0EE4               	movlw	228
 19352   01DF42                     u36877:
 19353   01DF42  2EE8               	decfsz	wreg,f,c
 19354   01DF44  D7FE               	bra	u36877
 19355   01DF46  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 19356   01DF48  D7FC               	bra	u36877
 19357   01DF4A  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 19358   01DF4C  D7FA               	bra	u36877
 19359   01DF4E  0000               	nop	
 19360                           
 19361                           ;../src/boards/w65_cmn.c: 206:  bus_hold_req();
 19362   01DF50  EC2C  F001         	call	_bus_hold_req	;wreg free
 19363   01DF54  0012               	return		;funcret
 19364   01DF56                     __end_of_reset_cpu:
 19365                           	callstack 0
 19366                           
 19367 ;; *************** function _reset_clk *****************
 19368 ;; Defined at:
 19369 ;;		line 329 in file "../src/boards/w65_cmn.c"
 19370 ;; Parameters:    Size  Location     Type
 19371 ;;		None
 19372 ;; Auto vars:     Size  Location     Type
 19373 ;;		None
 19374 ;; Return value:  Size  Location     Type
 19375 ;;                  1    wreg      void 
 19376 ;; Registers used:
 19377 ;;		None
 19378 ;; Tracked objects:
 19379 ;;		On entry : 0/0
 19380 ;;		On exit  : 0/0
 19381 ;;		Unchanged: 0/0
 19382 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19387 ;;Total ram usage:        0 bytes
 19388 ;; Hardware stack levels used: 1
 19389 ;; Hardware stack levels required when called: 1
 19390 ;; This function calls:
 19391 ;;		Nothing
 19392 ;; This function is called by:
 19393 ;;		_main
 19394 ;; This function uses a non-reentrant model
 19395 ;;
 19396                           
 19397                           	psect	text34
 19398   0001BE                     __ptext34:
 19399                           	callstack 0
 19400   0001BE                     _reset_clk:
 19401                           	callstack 125
 19402   0001BE                     
 19403                           ;../src/boards/w65_cmn.c: 331:  NCO1EN = 0;
 19404   0001BE  0104               	movlb	4	; () banked
 19405   0001C0  9F46               	bcf	70,7,b	;volatile
 19406                           
 19407                           ;../src/boards/w65_cmn.c: 332:  NCO1OUT = 0;
 19408   0001C2  9B46               	bcf	70,5,b	;volatile
 19409                           
 19410                           ;../src/boards/w65_cmn.c: 333:  NCO1INC = (__uint24)clk_fs;
 19411   0001C4  C7DF  F443         	movff	_clk_fs,1091	;volatile
 19412   0001C8  C7E0  F444         	movff	_clk_fs+1,1092	;volatile
 19413   0001CC  C7E1  F445         	movff	_clk_fs+2,1093	;volatile
 19414                           
 19415                           ;../src/boards/w65_cmn.c: 334:  NCO1OUT = 1;
 19416   0001D0  8B46               	bsf	70,5,b	;volatile
 19417                           
 19418                           ;../src/boards/w65_cmn.c: 335:  NCO1EN = 1;
 19419   0001D2  8F46               	bsf	70,7,b	;volatile
 19420   0001D4                     
 19421                           ; BSR set to: 4
 19422   0001D4  0012               	return		;funcret
 19423   0001D6                     __end_of_reset_clk:
 19424                           	callstack 0
 19425                           
 19426 ;; *************** function _port_init *****************
 19427 ;; Defined at:
 19428 ;;		line 209 in file "../src/boards/w65_cmn.c"
 19429 ;; Parameters:    Size  Location     Type
 19430 ;;		None
 19431 ;; Auto vars:     Size  Location     Type
 19432 ;;		None
 19433 ;; Return value:  Size  Location     Type
 19434 ;;                  1    wreg      void 
 19435 ;; Registers used:
 19436 ;;		wreg, status,2
 19437 ;; Tracked objects:
 19438 ;;		On entry : 0/0
 19439 ;;		On exit  : 0/0
 19440 ;;		Unchanged: 0/0
 19441 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;Total ram usage:        0 bytes
 19447 ;; Hardware stack levels used: 1
 19448 ;; Hardware stack levels required when called: 1
 19449 ;; This function calls:
 19450 ;;		Nothing
 19451 ;; This function is called by:
 19452 ;;		_main
 19453 ;; This function uses a non-reentrant model
 19454 ;;
 19455                           
 19456                           	psect	text35
 19457   01F690                     __ptext35:
 19458                           	callstack 0
 19459   01F690                     _port_init:
 19460                           	callstack 125
 19461   01F690                     
 19462                           ;../src/boards/w65_cmn.c: 212:     OSCFRQ = 0x08;
 19463   01F690  0E08               	movlw	8
 19464   01F692  0100               	movlb	0	; () banked
 19465   01F694  6FB1               	movwf	177,b	;volatile
 19466   01F696                     
 19467                           ; BSR set to: 0
 19468                           ;../src/boards/w65_cmn.c: 215:     ANSELA = 0x00;
 19469   01F696  0104               	movlb	4	; () banked
 19470   01F698  6B00               	clrf	0,b	;volatile
 19471   01F69A                     
 19472                           ; BSR set to: 4
 19473                           ;../src/boards/w65_cmn.c: 216:     ANSELB = 0x00;
 19474   01F69A  6B08               	clrf	8,b	;volatile
 19475   01F69C                     
 19476                           ; BSR set to: 4
 19477                           ;../src/boards/w65_cmn.c: 217:     ANSELC = 0x00;
 19478   01F69C  6B10               	clrf	16,b	;volatile
 19479   01F69E                     
 19480                           ; BSR set to: 4
 19481                           ;../src/boards/w65_cmn.c: 218:     ANSELD = 0x00;
 19482   01F69E  6B18               	clrf	24,b	;volatile
 19483   01F6A0                     
 19484                           ; BSR set to: 4
 19485                           ;../src/boards/w65_cmn.c: 219:     ANSELE0 = 0;
 19486   01F6A0  9120               	bcf	32,0,b	;volatile
 19487   01F6A2                     
 19488                           ; BSR set to: 4
 19489                           ;../src/boards/w65_cmn.c: 220:     ANSELE1 = 0;
 19490   01F6A2  9320               	bcf	32,1,b	;volatile
 19491   01F6A4                     
 19492                           ; BSR set to: 4
 19493                           ;../src/boards/w65_cmn.c: 221:     ANSELE2 = 0;
 19494   01F6A4  9520               	bcf	32,2,b	;volatile
 19495   01F6A6                     
 19496                           ; BSR set to: 4
 19497                           ;../src/boards/w65_cmn.c: 224:  WPUE0 = 0;
 19498   01F6A6  9121               	bcf	33,0,b	;volatile
 19499   01F6A8                     
 19500                           ; BSR set to: 4
 19501                           ;../src/boards/w65_cmn.c: 225:  LATE0 = 0;
 19502   01F6A8  90C2               	bcf	1218,0,c	;volatile
 19503   01F6AA                     
 19504                           ; BSR set to: 4
 19505                           ;../src/boards/w65_cmn.c: 226:  TRISE0 = 0;
 19506   01F6AA  90CA               	bcf	1226,0,c	;volatile
 19507   01F6AC                     
 19508                           ; BSR set to: 4
 19509                           ;../src/boards/w65_cmn.c: 229:  WPUE1 = 0;
 19510   01F6AC  9321               	bcf	33,1,b	;volatile
 19511   01F6AE                     
 19512                           ; BSR set to: 4
 19513                           ;../src/boards/w65_cmn.c: 230:  LATE1 = 1;
 19514   01F6AE  82C2               	bsf	1218,1,c	;volatile
 19515   01F6B0                     
 19516                           ; BSR set to: 4
 19517                           ;../src/boards/w65_cmn.c: 231:  TRISE1 = 0;
 19518   01F6B0  92CA               	bcf	1226,1,c	;volatile
 19519   01F6B2                     
 19520                           ; BSR set to: 4
 19521                           ;../src/boards/w65_cmn.c: 234:  WPUA0 = 0;
 19522   01F6B2  9101               	bcf	1,0,b	;volatile
 19523   01F6B4                     
 19524                           ; BSR set to: 4
 19525                           ;../src/boards/w65_cmn.c: 235:  LATA0 = 0;
 19526   01F6B4  90BE               	bcf	1214,0,c	;volatile
 19527   01F6B6                     
 19528                           ; BSR set to: 4
 19529                           ;../src/boards/w65_cmn.c: 236:  TRISA0 = 0;
 19530   01F6B6  90C6               	bcf	1222,0,c	;volatile
 19531   01F6B8                     
 19532                           ; BSR set to: 4
 19533                           ;../src/boards/w65_cmn.c: 238:  WPUA3 = 0;
 19534   01F6B8  9701               	bcf	1,3,b	;volatile
 19535   01F6BA                     
 19536                           ; BSR set to: 4
 19537                           ;../src/boards/w65_cmn.c: 239:  LATA3 = 1;
 19538   01F6BA  86BE               	bsf	1214,3,c	;volatile
 19539   01F6BC                     
 19540                           ; BSR set to: 4
 19541                           ;../src/boards/w65_cmn.c: 240:  TRISA3 = 0;
 19542   01F6BC  96C6               	bcf	1222,3,c	;volatile
 19543   01F6BE                     
 19544                           ; BSR set to: 4
 19545                           ;../src/boards/w65_cmn.c: 243:  WPUA2 = 1;
 19546   01F6BE  8501               	bsf	1,2,b	;volatile
 19547   01F6C0                     
 19548                           ; BSR set to: 4
 19549                           ;../src/boards/w65_cmn.c: 244:  TRISA2 = 0;
 19550   01F6C0  94C6               	bcf	1222,2,c	;volatile
 19551   01F6C2                     
 19552                           ; BSR set to: 4
 19553                           ;../src/boards/w65_cmn.c: 245:  LATA2 = 1;
 19554   01F6C2  84BE               	bsf	1214,2,c	;volatile
 19555   01F6C4                     
 19556                           ; BSR set to: 4
 19557                           ;../src/boards/w65_cmn.c: 248:  WPUA5 = 0;
 19558   01F6C4  9B01               	bcf	1,5,b	;volatile
 19559   01F6C6                     
 19560                           ; BSR set to: 4
 19561                           ;../src/boards/w65_cmn.c: 249:  TRISA5 = 1;
 19562   01F6C6  8AC6               	bsf	1222,5,c	;volatile
 19563   01F6C8                     
 19564                           ; BSR set to: 4
 19565                           ;../src/boards/w65_cmn.c: 252:  WPUA1 = 0;
 19566   01F6C8  9301               	bcf	1,1,b	;volatile
 19567   01F6CA                     
 19568                           ; BSR set to: 4
 19569                           ;../src/boards/w65_cmn.c: 253:  LATA1 = 0;
 19570   01F6CA  92BE               	bcf	1214,1,c	;volatile
 19571   01F6CC                     
 19572                           ; BSR set to: 4
 19573                           ;../src/boards/w65_cmn.c: 254:  TRISA1 = 0;
 19574   01F6CC  92C6               	bcf	1222,1,c	;volatile
 19575   01F6CE                     
 19576                           ; BSR set to: 4
 19577                           ;../src/boards/w65_cmn.c: 257:  WPUA4 = 1;
 19578   01F6CE  8901               	bsf	1,4,b	;volatile
 19579   01F6D0                     
 19580                           ; BSR set to: 4
 19581                           ;../src/boards/w65_cmn.c: 258:  LATA4 = 1;
 19582   01F6D0  88BE               	bsf	1214,4,c	;volatile
 19583   01F6D2                     
 19584                           ; BSR set to: 4
 19585                           ;../src/boards/w65_cmn.c: 259:  TRISA4 = 0;
 19586   01F6D2  98C6               	bcf	1222,4,c	;volatile
 19587   01F6D4                     
 19588                           ; BSR set to: 4
 19589                           ;../src/boards/w65_cmn.c: 262:     WPUC = 0xff;
 19590   01F6D4  6911               	setf	17,b	;volatile
 19591   01F6D6                     
 19592                           ; BSR set to: 4
 19593                           ;../src/boards/w65_cmn.c: 263:     LATC = 0x00;
 19594   01F6D6  6AC0               	clrf	192,c	;volatile
 19595   01F6D8                     
 19596                           ; BSR set to: 4
 19597                           ;../src/boards/w65_cmn.c: 264:     TRISC = 0x00;
 19598   01F6D8  6AC8               	clrf	200,c	;volatile
 19599   01F6DA                     
 19600                           ; BSR set to: 4
 19601                           ;../src/boards/w65_cmn.c: 267:  WPUD = 0xff;
 19602   01F6DA  6919               	setf	25,b	;volatile
 19603   01F6DC                     
 19604                           ; BSR set to: 4
 19605                           ;../src/boards/w65_cmn.c: 268:  LATD = 0x00;
 19606   01F6DC  6AC1               	clrf	193,c	;volatile
 19607   01F6DE                     
 19608                           ; BSR set to: 4
 19609                           ;../src/boards/w65_cmn.c: 269:  TRISD = 0x00;
 19610   01F6DE  6AC9               	clrf	201,c	;volatile
 19611   01F6E0                     
 19612                           ; BSR set to: 4
 19613                           ;../src/boards/w65_cmn.c: 272:  WPUB = 0xff;
 19614   01F6E0  6909               	setf	9,b	;volatile
 19615   01F6E2                     
 19616                           ; BSR set to: 4
 19617                           ;../src/boards/w65_cmn.c: 273:  LATB = 0x00;
 19618   01F6E2  6ABF               	clrf	191,c	;volatile
 19619   01F6E4                     
 19620                           ; BSR set to: 4
 19621                           ;../src/boards/w65_cmn.c: 274:  TRISB = 0xff;
 19622   01F6E4  68C7               	setf	199,c	;volatile
 19623   01F6E6                     
 19624                           ; BSR set to: 4
 19625                           ;../src/boards/w65_cmn.c: 278:  SLRCONBbits.SLRB0 = 0;
 19626   01F6E6  910B               	bcf	11,0,b	;volatile
 19627   01F6E8                     
 19628                           ; BSR set to: 4
 19629                           ;../src/boards/w65_cmn.c: 279:  SLRCONBbits.SLRB1 = 0;
 19630   01F6E8  930B               	bcf	11,1,b	;volatile
 19631   01F6EA                     
 19632                           ; BSR set to: 4
 19633                           ;../src/boards/w65_cmn.c: 280:  SLRCONBbits.SLRB2 = 0;
 19634   01F6EA  950B               	bcf	11,2,b	;volatile
 19635   01F6EC                     
 19636                           ; BSR set to: 4
 19637                           ;../src/boards/w65_cmn.c: 283:  WPUE2 = 1;
 19638   01F6EC  8521               	bsf	33,2,b	;volatile
 19639   01F6EE                     
 19640                           ; BSR set to: 4
 19641                           ;../src/boards/w65_cmn.c: 284:  LATE2 = 1;
 19642   01F6EE  84C2               	bsf	1218,2,c	;volatile
 19643   01F6F0                     
 19644                           ; BSR set to: 4
 19645                           ;../src/boards/w65_cmn.c: 285:  TRISE2 = 0;
 19646   01F6F0  94CA               	bcf	1226,2,c	;volatile
 19647   01F6F2                     
 19648                           ; BSR set to: 4
 19649   01F6F2  0012               	return		;funcret
 19650   01F6F4                     __end_of_port_init:
 19651                           	callstack 0
 19652                           
 19653 ;; *************** function _mem_init *****************
 19654 ;; Defined at:
 19655 ;;		line 21 in file "../src/memtst.c"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;		None
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;  addr            4  136[BANK5 ] unsigned long 
 19660 ;;  i               2  134[BANK5 ] unsigned int 
 19661 ;; Return value:  Size  Location     Type
 19662 ;;                  4  126[BANK5 ] unsigned long 
 19663 ;; Registers used:
 19664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19665 ;; Tracked objects:
 19666 ;;		On entry : 0/0
 19667 ;;		On exit  : 0/0
 19668 ;;		Unchanged: 0/0
 19669 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19671 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;Total ram usage:       14 bytes
 19675 ;; Hardware stack levels used: 1
 19676 ;; Hardware stack levels required when called: 10
 19677 ;; This function calls:
 19678 ;;		_memcmp
 19679 ;;		_printf
 19680 ;;		_read_sram
 19681 ;;		_util_addrdump
 19682 ;;		_write_sram
 19683 ;; This function is called by:
 19684 ;;		_main
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text36
 19689   0190F8                     __ptext36:
 19690                           	callstack 0
 19691   0190F8                     _mem_init:
 19692                           	callstack 116
 19693   0190F8                     
 19694                           ;../src/memtst.c: 23:     unsigned int i;;../src/memtst.c: 24:     uint32_t addr;;../src
      +                          /memtst.c: 27:     for (i = 0; i < 256; i += 2) {
 19695   0190F8  0E00               	movlw	0
 19696   0190FA  0105               	movlb	5	; () banked
 19697   0190FC  6FE7               	movwf	(mem_init@i+1)& (0+255),b
 19698   0190FE  0E00               	movlw	0
 19699   019100  6FE6               	movwf	mem_init@i& (0+255),b
 19700   019102                     l24719:
 19701                           
 19702                           ; BSR set to: 5
 19703                           ;../src/memtst.c: 28:         tmp_buf[0][i + 0] = 0xa5;
 19704   019102  0EF8               	movlw	low _tmp_buf
 19705   019104  25E6               	addwf	mem_init@i& (0+255),w,b
 19706   019106  6ED9               	movwf	fsr2l,c
 19707   019108  0E13               	movlw	high _tmp_buf
 19708   01910A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 19709   01910C  6EDA               	movwf	fsr2h,c
 19710   01910E  0EA5               	movlw	165
 19711   019110  6EDF               	movwf	indf2,c
 19712                           
 19713                           ;../src/memtst.c: 29:         tmp_buf[0][i + 1] = 0x5a;
 19714   019112  0EF9               	movlw	low (_tmp_buf+1)
 19715   019114  25E6               	addwf	mem_init@i& (0+255),w,b
 19716   019116  6ED9               	movwf	fsr2l,c
 19717   019118  0E13               	movlw	high (_tmp_buf+1)
 19718   01911A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 19719   01911C  6EDA               	movwf	fsr2h,c
 19720   01911E  0E5A               	movlw	90
 19721   019120  6EDF               	movwf	indf2,c
 19722   019122                     
 19723                           ; BSR set to: 5
 19724                           ;../src/memtst.c: 30:     }
 19725   019122  0E02               	movlw	2
 19726   019124  27E6               	addwf	mem_init@i& (0+255),f,b
 19727   019126  0E00               	movlw	0
 19728   019128  23E7               	addwfc	(mem_init@i+1)& (0+255),f,b
 19729   01912A                     
 19730                           ; BSR set to: 5
 19731   01912A  05E7               	decf	(mem_init@i+1)& (0+255),w,b
 19732   01912C  A0D8               	btfss	status,0,c
 19733   01912E  EF9B  F0C8         	goto	u34431
 19734   019132  EF9D  F0C8         	goto	u34430
 19735   019136                     u34431:
 19736   019136  EF81  F0C8         	goto	l24719
 19737   01913A                     u34430:
 19738   01913A                     
 19739                           ; BSR set to: 5
 19740                           ;../src/memtst.c: 31:     for (addr = 0; addr < 0x00080000; addr += 256 * 16) {
 19741   01913A  0E00               	movlw	0
 19742   01913C  6FE8               	movwf	mem_init@addr& (0+255),b
 19743   01913E  0E00               	movlw	0
 19744   019140  6FE9               	movwf	(mem_init@addr+1)& (0+255),b
 19745   019142  0E00               	movlw	0
 19746   019144  6FEA               	movwf	(mem_init@addr+2)& (0+255),b
 19747   019146  0E00               	movlw	0
 19748   019148  6FEB               	movwf	(mem_init@addr+3)& (0+255),b
 19749   01914A                     l24731:
 19750                           
 19751                           ; BSR set to: 5
 19752                           ;../src/memtst.c: 32:         printf("Memory $000000 - $%06lX\r", addr);
 19753   01914A  0EBB               	movlw	low STR_40
 19754   01914C  6FAD               	movwf	printf@fmt& (0+255),b
 19755   01914E  0EFA               	movlw	high STR_40
 19756   019150  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19757   019152  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 19758   019156  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 19759   01915A  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 19760   01915E  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 19761   019162  ECDA  F0FF         	call	_printf	;wreg free
 19762   019166                     
 19763                           ;../src/memtst.c: 33:         tmp_buf[0][0] = (addr >> 0) & 0xff;
 19764   019166  EE24  F3F8         	lfsr	2,_tmp_buf
 19765   01916A  C5E8  F4DF         	movff	mem_init@addr,indf2
 19766   01916E                     
 19767                           ;../src/memtst.c: 34:         tmp_buf[0][1] = (addr >> 8) & 0xff;
 19768   01916E  EE24  F3F9         	lfsr	2,_tmp_buf+1
 19769   019172  C5E9  F4DF         	movff	mem_init@addr+1,indf2
 19770   019176                     
 19771                           ;../src/memtst.c: 35:         tmp_buf[0][2] = (addr >> 16) & 0xff;
 19772   019176  EE24  F3FA         	lfsr	2,_tmp_buf+2
 19773   01917A  C5EA  F4DF         	movff	mem_init@addr+2,indf2
 19774   01917E                     
 19775                           ;../src/memtst.c: 37:      write_sram(addr, tmp_buf[0], 256);
 19776   01917E  C5E8  F504         	movff	mem_init@addr,write_sram@addr
 19777   019182  C5E9  F505         	movff	mem_init@addr+1,write_sram@addr+1
 19778   019186  C5EA  F506         	movff	mem_init@addr+2,write_sram@addr+2
 19779   01918A  C5EB  F507         	movff	mem_init@addr+3,write_sram@addr+3
 19780   01918E  0EF8               	movlw	low _tmp_buf
 19781   019190  6E08               	movwf	write_sram@buf^(0+1280),c
 19782   019192  0E13               	movlw	high _tmp_buf
 19783   019194  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 19784   019196  0E01               	movlw	1
 19785   019198  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 19786   01919A  0E00               	movlw	0
 19787   01919C  6E0A               	movwf	write_sram@len^(0+1280),c
 19788   01919E  EC9F  F0E8         	call	_write_sram	;wreg free
 19789   0191A2                     
 19790                           ;../src/memtst.c: 38:         read_sram(addr, tmp_buf[1], 256);
 19791   0191A2  C5E8  F504         	movff	mem_init@addr,read_sram@addr
 19792   0191A6  C5E9  F505         	movff	mem_init@addr+1,read_sram@addr+1
 19793   0191AA  C5EA  F506         	movff	mem_init@addr+2,read_sram@addr+2
 19794   0191AE  C5EB  F507         	movff	mem_init@addr+3,read_sram@addr+3
 19795   0191B2  0EF8               	movlw	low (_tmp_buf+256)
 19796   0191B4  6E08               	movwf	read_sram@buf^(0+1280),c
 19797   0191B6  0E14               	movlw	high (_tmp_buf+256)
 19798   0191B8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19799   0191BA  0E01               	movlw	1
 19800   0191BC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19801   0191BE  0E00               	movlw	0
 19802   0191C0  6E0A               	movwf	read_sram@len^(0+1280),c
 19803   0191C2  EC0C  F0F2         	call	_read_sram	;wreg free
 19804   0191C6                     
 19805                           ;../src/memtst.c: 40:      if (memcmp(tmp_buf[0], tmp_buf[1], 256) != 0) {
 19806   0191C6  0EF8               	movlw	low _tmp_buf
 19807   0191C8  6E04               	movwf	memcmp@vl^(0+1280),c
 19808   0191CA  0E13               	movlw	high _tmp_buf
 19809   0191CC  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19810   0191CE  0EF8               	movlw	low (_tmp_buf+256)
 19811   0191D0  6E06               	movwf	memcmp@vr^(0+1280),c
 19812   0191D2  0E14               	movlw	high (_tmp_buf+256)
 19813   0191D4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19814   0191D6  0E01               	movlw	1
 19815   0191D8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19816   0191DA  0E00               	movlw	0
 19817   0191DC  6E08               	movwf	memcmp@n^(0+1280),c
 19818   0191DE  EC23  F0EA         	call	_memcmp	;wreg free
 19819   0191E2  5004               	movf	?_memcmp^(0+1280),w,c
 19820   0191E4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19821   0191E6  B4D8               	btfsc	status,2,c
 19822   0191E8  EFF8  F0C8         	goto	u34441
 19823   0191EC  EFFA  F0C8         	goto	u34440
 19824   0191F0                     u34441:
 19825   0191F0  EF39  F0C9         	goto	l24747
 19826   0191F4                     u34440:
 19827   0191F4                     
 19828                           ;../src/memtst.c: 41:             printf("\nMemory error at $%06lX\n\r", addr);
 19829   0191F4  0E3C               	movlw	low STR_41
 19830   0191F6  0105               	movlb	5	; () banked
 19831   0191F8  6FAD               	movwf	printf@fmt& (0+255),b
 19832   0191FA  0EFA               	movlw	high STR_41
 19833   0191FC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19834   0191FE  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 19835   019202  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 19836   019206  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 19837   01920A  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 19838   01920E  ECDA  F0FF         	call	_printf	;wreg free
 19839                           
 19840                           ;../src/memtst.c: 42:             util_addrdump("WR: ", addr, tmp_buf[0], 256);
 19841   019212  0ECB               	movlw	low STR_42
 19842   019214  0105               	movlb	5	; () banked
 19843   019216  6FBD               	movwf	util_addrdump@header& (0+255),b
 19844   019218  0EFF               	movlw	high STR_42
 19845   01921A  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 19846   01921C  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 19847   019220  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 19848   019224  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 19849   019228  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 19850   01922C  0EF8               	movlw	low _tmp_buf
 19851   01922E  6FC3               	movwf	util_addrdump@addr& (0+255),b
 19852   019230  0E13               	movlw	high _tmp_buf
 19853   019232  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 19854   019234  0E01               	movlw	1
 19855   019236  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 19856   019238  0E00               	movlw	0
 19857   01923A  6FC5               	movwf	util_addrdump@size& (0+255),b
 19858   01923C  EC4A  F0E1         	call	_util_addrdump	;wreg free
 19859                           
 19860                           ;../src/memtst.c: 43:             util_addrdump("RD: ", addr, tmp_buf[1], 256);
 19861   019240  0EC6               	movlw	low STR_43
 19862   019242  0105               	movlb	5	; () banked
 19863   019244  6FBD               	movwf	util_addrdump@header& (0+255),b
 19864   019246  0EFF               	movlw	high STR_43
 19865   019248  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 19866   01924A  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 19867   01924E  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 19868   019252  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 19869   019256  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 19870   01925A  0EF8               	movlw	low (_tmp_buf+256)
 19871   01925C  6FC3               	movwf	util_addrdump@addr& (0+255),b
 19872   01925E  0E14               	movlw	high (_tmp_buf+256)
 19873   019260  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 19874   019262  0E01               	movlw	1
 19875   019264  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 19876   019266  0E00               	movlw	0
 19877   019268  6FC5               	movwf	util_addrdump@size& (0+255),b
 19878   01926A  EC4A  F0E1         	call	_util_addrdump	;wreg free
 19879   01926E                     l884:
 19880   01926E  EF37  F0C9         	goto	l884
 19881   019272                     l24747:
 19882                           
 19883                           ;../src/memtst.c: 47:         if (addr == 0) continue;
 19884   019272  0105               	movlb	5	; () banked
 19885   019274  51E8               	movf	mem_init@addr& (0+255),w,b
 19886   019276  11E9               	iorwf	(mem_init@addr+1)& (0+255),w,b
 19887   019278  11EA               	iorwf	(mem_init@addr+2)& (0+255),w,b
 19888   01927A  11EB               	iorwf	(mem_init@addr+3)& (0+255),w,b
 19889   01927C  A4D8               	btfss	status,2,c
 19890   01927E  EF43  F0C9         	goto	u34451
 19891   019282  EF45  F0C9         	goto	u34450
 19892   019286                     u34451:
 19893   019286  EF47  F0C9         	goto	l24751
 19894   01928A                     u34450:
 19895   01928A  EF79  F0C9         	goto	l24757
 19896   01928E                     l24751:
 19897                           
 19898                           ; BSR set to: 5
 19899                           ;../src/memtst.c: 49:      read_sram(0, tmp_buf[1], 256);
 19900   01928E  0E00               	movlw	0
 19901   019290  6E04               	movwf	read_sram@addr^(0+1280),c
 19902   019292  0E00               	movlw	0
 19903   019294  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 19904   019296  0E00               	movlw	0
 19905   019298  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 19906   01929A  0E00               	movlw	0
 19907   01929C  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 19908   01929E  0EF8               	movlw	low (_tmp_buf+256)
 19909   0192A0  6E08               	movwf	read_sram@buf^(0+1280),c
 19910   0192A2  0E14               	movlw	high (_tmp_buf+256)
 19911   0192A4  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19912   0192A6  0E01               	movlw	1
 19913   0192A8  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19914   0192AA  0E00               	movlw	0
 19915   0192AC  6E0A               	movwf	read_sram@len^(0+1280),c
 19916   0192AE  EC0C  F0F2         	call	_read_sram	;wreg free
 19917   0192B2                     
 19918                           ;../src/memtst.c: 50:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) == 0) {
 19919   0192B2  0EF8               	movlw	low _tmp_buf
 19920   0192B4  6E04               	movwf	memcmp@vl^(0+1280),c
 19921   0192B6  0E13               	movlw	high _tmp_buf
 19922   0192B8  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19923   0192BA  0EF8               	movlw	low (_tmp_buf+256)
 19924   0192BC  6E06               	movwf	memcmp@vr^(0+1280),c
 19925   0192BE  0E14               	movlw	high (_tmp_buf+256)
 19926   0192C0  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19927   0192C2  0E01               	movlw	1
 19928   0192C4  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19929   0192C6  0E00               	movlw	0
 19930   0192C8  6E08               	movwf	memcmp@n^(0+1280),c
 19931   0192CA  EC23  F0EA         	call	_memcmp	;wreg free
 19932   0192CE  5004               	movf	?_memcmp^(0+1280),w,c
 19933   0192D0  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19934   0192D2  A4D8               	btfss	status,2,c
 19935   0192D4  EF6E  F0C9         	goto	u34461
 19936   0192D8  EF70  F0C9         	goto	u34460
 19937   0192DC                     u34461:
 19938   0192DC  EF79  F0C9         	goto	l24757
 19939   0192E0                     u34460:
 19940   0192E0                     
 19941                           ;../src/memtst.c: 53:    printf("\nMemory wrap around.\n\r");
 19942   0192E0  0EC1               	movlw	low STR_44
 19943   0192E2  0105               	movlb	5	; () banked
 19944   0192E4  6FAD               	movwf	printf@fmt& (0+255),b
 19945   0192E6  0EFB               	movlw	high STR_44
 19946   0192E8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19947   0192EA  ECDA  F0FF         	call	_printf	;wreg free
 19948                           
 19949                           ;../src/memtst.c: 54:          break;
 19950   0192EE  EF8D  F0C9         	goto	l24759
 19951   0192F2                     l24757:
 19952   0192F2  0E00               	movlw	0
 19953   0192F4  0105               	movlb	5	; () banked
 19954   0192F6  27E8               	addwf	mem_init@addr& (0+255),f,b
 19955   0192F8  0E10               	movlw	16
 19956   0192FA  23E9               	addwfc	(mem_init@addr+1)& (0+255),f,b
 19957   0192FC  0E00               	movlw	0
 19958   0192FE  23EA               	addwfc	(mem_init@addr+2)& (0+255),f,b
 19959   019300  0E00               	movlw	0
 19960   019302  23EB               	addwfc	(mem_init@addr+3)& (0+255),f,b
 19961   019304  51EB               	movf	(mem_init@addr+3)& (0+255),w,b
 19962   019306  E109               	bnz	u34470
 19963   019308  0E08               	movlw	8
 19964   01930A  5DEA               	subwf	(mem_init@addr+2)& (0+255),w,b
 19965   01930C  A0D8               	btfss	status,0,c
 19966   01930E  EF8B  F0C9         	goto	u34471
 19967   019312  EF8D  F0C9         	goto	u34470
 19968   019316                     u34471:
 19969   019316  EFA5  F0C8         	goto	l24731
 19970   01931A                     u34470:
 19971   01931A                     l24759:
 19972                           
 19973                           ;../src/memtst.c: 57:  printf("Memory $000000 - $%06lX %d KB OK\r\n", addr-1, (int)(addr
      +                           / 1024));
 19974   01931A  0E46               	movlw	low STR_45
 19975   01931C  0105               	movlb	5	; () banked
 19976   01931E  6FAD               	movwf	printf@fmt& (0+255),b
 19977   019320  0EF7               	movlw	high STR_45
 19978   019322  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19979   019324  0EFF               	movlw	255
 19980   019326  25E8               	addwf	mem_init@addr& (0+255),w,b
 19981   019328  6FAF               	movwf	(?_printf+2)& (0+255),b
 19982   01932A  0EFF               	movlw	255
 19983   01932C  21E9               	addwfc	(mem_init@addr+1)& (0+255),w,b
 19984   01932E  6FB0               	movwf	(?_printf+3)& (0+255),b
 19985   019330  0EFF               	movlw	255
 19986   019332  21EA               	addwfc	(mem_init@addr+2)& (0+255),w,b
 19987   019334  6FB1               	movwf	(?_printf+4)& (0+255),b
 19988   019336  0EFF               	movlw	255
 19989   019338  21EB               	addwfc	(mem_init@addr+3)& (0+255),w,b
 19990   01933A  6FB2               	movwf	(?_printf+5)& (0+255),b
 19991   01933C  C5E8  F5E2         	movff	mem_init@addr,??_mem_init
 19992   019340  C5E9  F5E3         	movff	mem_init@addr+1,??_mem_init+1
 19993   019344  C5EA  F5E4         	movff	mem_init@addr+2,??_mem_init+2
 19994   019348  C5EB  F5E5         	movff	mem_init@addr+3,??_mem_init+3
 19995   01934C  0E0B               	movlw	11
 19996   01934E  EFAE  F0C9         	goto	u34480
 19997   019352                     u34485:
 19998   019352  90D8               	bcf	status,0,c
 19999   019354  33E5               	rrcf	(??_mem_init+3)& (0+255),f,b
 20000   019356  33E4               	rrcf	(??_mem_init+2)& (0+255),f,b
 20001   019358  33E3               	rrcf	(??_mem_init+1)& (0+255),f,b
 20002   01935A  33E2               	rrcf	??_mem_init& (0+255),f,b
 20003   01935C                     u34480:
 20004   01935C  2EE8               	decfsz	wreg,f,c
 20005   01935E  EFA9  F0C9         	goto	u34485
 20006   019362  C5E2  F5B3         	movff	??_mem_init,?_printf+6
 20007   019366  C5E3  F5B4         	movff	??_mem_init+1,?_printf+7
 20008   01936A  ECDA  F0FF         	call	_printf	;wreg free
 20009   01936E                     
 20010                           ;../src/memtst.c: 58:  return( addr );
 20011   01936E  C5E8  F5DE         	movff	mem_init@addr,?_mem_init
 20012   019372  C5E9  F5DF         	movff	mem_init@addr+1,?_mem_init+1
 20013   019376  C5EA  F5E0         	movff	mem_init@addr+2,?_mem_init+2
 20014   01937A  C5EB  F5E1         	movff	mem_init@addr+3,?_mem_init+3
 20015   01937E  0012               	return		;funcret
 20016   019380                     __end_of_mem_init:
 20017                           	callstack 0
 20018                           
 20019 ;; *************** function _get_hex *****************
 20020 ;; Defined at:
 20021 ;;		line 202 in file "../drivers/utils.c"
 20022 ;; Parameters:    Size  Location     Type
 20023 ;;  buf             2    3[COMRAM] PTR unsigned char 
 20024 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 20025 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 20026 ;; Auto vars:     Size  Location     Type
 20027 ;;  hexval          4   17[COMRAM] unsigned long 
 20028 ;;  d               4   13[COMRAM] unsigned long 
 20029 ;;  c               2   11[COMRAM] int 
 20030 ;;  ch              1   21[COMRAM] unsigned char 
 20031 ;; Return value:  Size  Location     Type
 20032 ;;                  4    3[COMRAM] unsigned long 
 20033 ;; Registers used:
 20034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20035 ;; Tracked objects:
 20036 ;;		On entry : 0/0
 20037 ;;		On exit  : 0/0
 20038 ;;		Unchanged: 0/0
 20039 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20041 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20043 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20044 ;;Total ram usage:       19 bytes
 20045 ;; Hardware stack levels used: 1
 20046 ;; Hardware stack levels required when called: 1
 20047 ;; This function calls:
 20048 ;;		Nothing
 20049 ;; This function is called by:
 20050 ;;		_load_file
 20051 ;;		_mem_dump
 20052 ;; This function uses a non-reentrant model
 20053 ;;
 20054                           
 20055                           	psect	text37
 20056   01C6C6                     __ptext37:
 20057                           	callstack 0
 20058   01C6C6                     _get_hex:
 20059                           	callstack 124
 20060   01C6C6                     
 20061                           ;../drivers/utils.c: 204:  uint32_t hexval;;../drivers/utils.c: 205:  char ch;;../driver
      +                          s/utils.c: 206:  uint32_t d;;../drivers/utils.c: 207:  int c;;../drivers/utils.c: 209:  
      +                          hexval = 0;
 20062   01C6C6  0E00               	movlw	0
 20063   01C6C8  6E12               	movwf	get_hex@hexval^(0+1280),c
 20064   01C6CA  0E00               	movlw	0
 20065   01C6CC  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 20066   01C6CE  0E00               	movlw	0
 20067   01C6D0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 20068   01C6D2  0E00               	movlw	0
 20069   01C6D4  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 20070                           
 20071                           ;../drivers/utils.c: 210:  c = 0;
 20072   01C6D6  0E00               	movlw	0
 20073   01C6D8  6E0D               	movwf	(get_hex@c+1)^(0+1280),c
 20074   01C6DA  0E00               	movlw	0
 20075   01C6DC  6E0C               	movwf	get_hex@c^(0+1280),c
 20076                           
 20077                           ;../drivers/utils.c: 211:  while( *buf ) {
 20078   01C6DE  EFEA  F0E3         	goto	l16921
 20079   01C6E2                     l16901:
 20080                           
 20081                           ;../drivers/utils.c: 212:   ch = *buf++;
 20082   01C6E2  C504  F4F6         	movff	get_hex@buf,tblptrl
 20083   01C6E6  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 20084   01C6EA  0E00               	movlw	low (__mediumconst shr (0+16))
 20085   01C6EC  6EF8               	movwf	tblptru,c
 20086   01C6EE  0E25               	movlw	(high __ramtop+-1)
 20087   01C6F0  64F7               	cpfsgt	tblptrh,c
 20088   01C6F2  D003               	bra	u21867
 20089   01C6F4  0008               	tblrd		*
 20090   01C6F6  50F5               	movf	tablat,w,c
 20091   01C6F8  D005               	bra	u21860
 20092   01C6FA                     u21867:
 20093   01C6FA  C4F6 F4E9          	movff	tblptrl,fsr0l
 20094   01C6FE  C4F7 F4EA          	movff	tblptrh,fsr0h
 20095   01C702  50EF               	movf	indf0,w,c
 20096   01C704                     u21860:
 20097   01C704  6E16               	movwf	get_hex@ch^(0+1280),c
 20098   01C706  4A04               	infsnz	get_hex@buf^(0+1280),f,c
 20099   01C708  2A05               	incf	(get_hex@buf+1)^(0+1280),f,c
 20100   01C70A                     
 20101                           ;../drivers/utils.c: 213:   if (ch >= 'A' && ch <= 'F') d = (uint32_t)(ch-'A'+10);
 20102   01C70A  0E40               	movlw	64
 20103   01C70C  6416               	cpfsgt	get_hex@ch^(0+1280),c
 20104   01C70E  EF8B  F0E3         	goto	u21871
 20105   01C712  EF8D  F0E3         	goto	u21870
 20106   01C716                     u21871:
 20107   01C716  EFA3  F0E3         	goto	l16911
 20108   01C71A                     u21870:
 20109   01C71A  0E47               	movlw	71
 20110   01C71C  6016               	cpfslt	get_hex@ch^(0+1280),c
 20111   01C71E  EF93  F0E3         	goto	u21881
 20112   01C722  EF95  F0E3         	goto	u21880
 20113   01C726                     u21881:
 20114   01C726  EFA3  F0E3         	goto	l16911
 20115   01C72A                     u21880:
 20116   01C72A  0EC9               	movlw	201
 20117   01C72C  2416               	addwf	get_hex@ch^(0+1280),w,c
 20118   01C72E  6E08               	movwf	??_get_hex^(0+1280),c
 20119   01C730  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 20120   01C732  0EFF               	movlw	255
 20121   01C734  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 20122   01C736  C508  F50E         	movff	??_get_hex,get_hex@d
 20123   01C73A  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 20124   01C73E  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 20125   01C740  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 20126   01C742  EFBF  F0E3         	goto	l16917
 20127   01C746                     l16911:
 20128   01C746  0E2F               	movlw	47
 20129   01C748  6416               	cpfsgt	get_hex@ch^(0+1280),c
 20130   01C74A  EFA9  F0E3         	goto	u21891
 20131   01C74E  EFAB  F0E3         	goto	u21890
 20132   01C752                     u21891:
 20133   01C752  EF03  F0E4         	goto	l2540
 20134   01C756                     u21890:
 20135   01C756  0E3A               	movlw	58
 20136   01C758  6016               	cpfslt	get_hex@ch^(0+1280),c
 20137   01C75A  EFB1  F0E3         	goto	u21901
 20138   01C75E  EFB3  F0E3         	goto	u21900
 20139   01C762                     u21901:
 20140   01C762  EF03  F0E4         	goto	l2540
 20141   01C766                     u21900:
 20142   01C766  0ED0               	movlw	208
 20143   01C768  2416               	addwf	get_hex@ch^(0+1280),w,c
 20144   01C76A  6E08               	movwf	??_get_hex^(0+1280),c
 20145   01C76C  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 20146   01C76E  0EFF               	movlw	255
 20147   01C770  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 20148   01C772  C508  F50E         	movff	??_get_hex,get_hex@d
 20149   01C776  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 20150   01C77A  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 20151   01C77C  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 20152   01C77E                     l16917:
 20153                           
 20154                           ;../drivers/utils.c: 216:   hexval = hexval*16 + d;
 20155   01C77E  C512  F508         	movff	get_hex@hexval,??_get_hex
 20156   01C782  C513  F509         	movff	get_hex@hexval+1,??_get_hex+1
 20157   01C786  C514  F50A         	movff	get_hex@hexval+2,??_get_hex+2
 20158   01C78A  C515  F50B         	movff	get_hex@hexval+3,??_get_hex+3
 20159   01C78E  0E04               	movlw	4
 20160   01C790                     u21915:
 20161   01C790  90D8               	bcf	status,0,c
 20162   01C792  3608               	rlcf	??_get_hex^(0+1280),f,c
 20163   01C794  3609               	rlcf	(??_get_hex+1)^(0+1280),f,c
 20164   01C796  360A               	rlcf	(??_get_hex+2)^(0+1280),f,c
 20165   01C798  360B               	rlcf	(??_get_hex+3)^(0+1280),f,c
 20166   01C79A  2EE8               	decfsz	wreg,f,c
 20167   01C79C  EFC8  F0E3         	goto	u21915
 20168   01C7A0  500E               	movf	get_hex@d^(0+1280),w,c
 20169   01C7A2  2408               	addwf	??_get_hex^(0+1280),w,c
 20170   01C7A4  6E12               	movwf	get_hex@hexval^(0+1280),c
 20171   01C7A6  500F               	movf	(get_hex@d+1)^(0+1280),w,c
 20172   01C7A8  2009               	addwfc	(??_get_hex+1)^(0+1280),w,c
 20173   01C7AA  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 20174   01C7AC  5010               	movf	(get_hex@d+2)^(0+1280),w,c
 20175   01C7AE  200A               	addwfc	(??_get_hex+2)^(0+1280),w,c
 20176   01C7B0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 20177   01C7B2  5011               	movf	(get_hex@d+3)^(0+1280),w,c
 20178   01C7B4  200B               	addwfc	(??_get_hex+3)^(0+1280),w,c
 20179   01C7B6  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 20180                           
 20181                           ;../drivers/utils.c: 217:   if (++c == 8) break;
 20182   01C7B8  4A0C               	infsnz	get_hex@c^(0+1280),f,c
 20183   01C7BA  2A0D               	incf	(get_hex@c+1)^(0+1280),f,c
 20184   01C7BC  0E08               	movlw	8
 20185   01C7BE  180C               	xorwf	get_hex@c^(0+1280),w,c
 20186   01C7C0  100D               	iorwf	(get_hex@c+1)^(0+1280),w,c
 20187   01C7C2  A4D8               	btfss	status,2,c
 20188   01C7C4  EFE6  F0E3         	goto	u21921
 20189   01C7C8  EFE8  F0E3         	goto	u21920
 20190   01C7CC                     u21921:
 20191   01C7CC  EFEA  F0E3         	goto	l16921
 20192   01C7D0                     u21920:
 20193   01C7D0  EF03  F0E4         	goto	l2540
 20194   01C7D4                     l16921:
 20195                           
 20196                           ;../drivers/utils.c: 211:  while( *buf ) {
 20197   01C7D4  C504  F4F6         	movff	get_hex@buf,tblptrl
 20198   01C7D8  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 20199   01C7DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20200   01C7DE  6EF8               	movwf	tblptru,c
 20201   01C7E0  0E25               	movlw	(high __ramtop+-1)
 20202   01C7E2  64F7               	cpfsgt	tblptrh,c
 20203   01C7E4  D003               	bra	u21937
 20204   01C7E6  0008               	tblrd		*
 20205   01C7E8  50F5               	movf	tablat,w,c
 20206   01C7EA  D005               	bra	u21930
 20207   01C7EC                     u21937:
 20208   01C7EC  C4F6 F4E9          	movff	tblptrl,fsr0l
 20209   01C7F0  C4F7 F4EA          	movff	tblptrh,fsr0h
 20210   01C7F4  50EF               	movf	indf0,w,c
 20211   01C7F6                     u21930:
 20212   01C7F6  0900               	iorlw	0
 20213   01C7F8  A4D8               	btfss	status,2,c
 20214   01C7FA  EF01  F0E4         	goto	u21941
 20215   01C7FE  EF03  F0E4         	goto	u21940
 20216   01C802                     u21941:
 20217   01C802  EF71  F0E3         	goto	l16901
 20218   01C806                     u21940:
 20219   01C806                     l2540:
 20220                           
 20221                           ;../drivers/utils.c: 219:  return hexval;
 20222   01C806  C512  F504         	movff	get_hex@hexval,?_get_hex
 20223   01C80A  C513  F505         	movff	get_hex@hexval+1,?_get_hex+1
 20224   01C80E  C514  F506         	movff	get_hex@hexval+2,?_get_hex+2
 20225   01C812  C515  F507         	movff	get_hex@hexval+3,?_get_hex+3
 20226   01C816  0012               	return		;funcret
 20227   01C818                     __end_of_get_hex:
 20228                           	callstack 0
 20229                           
 20230 ;; *************** function _load_config *****************
 20231 ;; Defined at:
 20232 ;;		line 416 in file "../src/w65_main.c"
 20233 ;; Parameters:    Size  Location     Type
 20234 ;;		None
 20235 ;; Auto vars:     Size  Location     Type
 20236 ;;  i               2   19[BANK7 ] int 
 20237 ;;  str             2   17[BANK7 ] PTR unsigned char 
 20238 ;;		 -> tmp_buf(512), 
 20239 ;;  conf            2   15[BANK7 ] PTR const unsigned char 
 20240 ;;		 -> STR_49(11), STR_48(11), 
 20241 ;;  a               2   13[BANK7 ] PTR unsigned char 
 20242 ;;		 -> tmp_buf(512), 
 20243 ;;  buf             2   10[BANK7 ] PTR unsigned char 
 20244 ;;		 -> tmp_buf(512), 
 20245 ;;  adr             2    0        unsigned short 
 20246 ;;  size            2    0        unsigned short 
 20247 ;;  cnt             2    0        unsigned short 
 20248 ;;  fr              1   12[BANK7 ] enum E17409
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  2    0[BANK7 ] int 
 20251 ;; Registers used:
 20252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20258 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20259 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20260 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20261 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;Total ram usage:       21 bytes
 20263 ;; Hardware stack levels used: 1
 20264 ;; Hardware stack levels required when called: 20
 20265 ;; This function calls:
 20266 ;;		___strtoxl
 20267 ;;		_del_space
 20268 ;;		_f_close
 20269 ;;		_f_gets
 20270 ;;		_f_open
 20271 ;;		_printf
 20272 ;;		_strlen
 20273 ;;		_strstr
 20274 ;; This function is called by:
 20275 ;;		_main
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text38
 20280   016DDA                     __ptext38:
 20281                           	callstack 0
 20282   016DDA                     _load_config:
 20283                           	callstack 106
 20284   016DDA                     
 20285                           ;../src/w65_main.c: 418:  FRESULT fr;;../src/w65_main.c: 419:  char *buf, *a;;../src/w65
      +                          _main.c: 420:  const TCHAR *conf;;../src/w65_main.c: 421:  uint16_t cnt, size;;../src/w6
      +                          5_main.c: 422:  uint16_t adr;;../src/w65_main.c: 423:  int i;;../src/w65_main.c: 424:  T
      +                          CHAR *str;;../src/w65_main.c: 426:  str = (TCHAR *)&tmp_buf[0][0];
 20286   016DDA  0EF8               	movlw	low _tmp_buf
 20287   016DDC  0107               	movlb	7	; () banked
 20288   016DDE  6F11               	movwf	load_config@str& (0+255),b
 20289   016DE0  0E13               	movlw	high _tmp_buf
 20290   016DE2  6F12               	movwf	(load_config@str+1)& (0+255),b
 20291   016DE4                     
 20292                           ; BSR set to: 7
 20293                           ;../src/w65_main.c: 427:  conf = ( cpu_flg ) ? conf16 : conf02;
 20294   016DE4  51E5               	movf	_cpu_flg& (0+255),w,b
 20295   016DE6  A4D8               	btfss	status,2,c
 20296   016DE8  EFF8  F0B6         	goto	u34501
 20297   016DEC  EFFA  F0B6         	goto	u34500
 20298   016DF0                     u34501:
 20299   016DF0  EF00  F0B7         	goto	l24783
 20300   016DF4                     u34500:
 20301   016DF4                     
 20302                           ; BSR set to: 7
 20303   016DF4  0EC2               	movlw	low STR_48
 20304   016DF6  6F0F               	movwf	load_config@conf& (0+255),b
 20305   016DF8  0EFE               	movlw	high STR_48
 20306   016DFA  6F10               	movwf	(load_config@conf+1)& (0+255),b
 20307   016DFC  EF04  F0B7         	goto	l24785
 20308   016E00                     l24783:
 20309                           
 20310                           ; BSR set to: 7
 20311   016E00  0ECD               	movlw	low STR_49
 20312   016E02  6F0F               	movwf	load_config@conf& (0+255),b
 20313   016E04  0EFE               	movlw	high STR_49
 20314   016E06  6F10               	movwf	(load_config@conf+1)& (0+255),b
 20315   016E08                     l24785:
 20316                           
 20317                           ; BSR set to: 7
 20318                           ;../src/w65_main.c: 429:  printf("\r\nLoad %s\r\n",(const char *)conf);
 20319   016E08  0EA0               	movlw	low STR_86
 20320   016E0A  0105               	movlb	5	; () banked
 20321   016E0C  6FAD               	movwf	printf@fmt& (0+255),b
 20322   016E0E  0EFE               	movlw	high STR_86
 20323   016E10  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20324   016E12  C70F  F5AF         	movff	load_config@conf,?_printf+2
 20325   016E16  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 20326   016E1A  ECDA  F0FF         	call	_printf	;wreg free
 20327   016E1E                     
 20328                           ;../src/w65_main.c: 431:  fr = f_open(&rom_fl, conf, 0x01);
 20329   016E1E  0ED6               	movlw	low _rom_fl
 20330   016E20  0106               	movlb	6	; () banked
 20331   016E22  6FAF               	movwf	f_open@fp& (0+255),b
 20332   016E24  0E0F               	movlw	high _rom_fl
 20333   016E26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 20334   016E28  C70F  F6B1         	movff	load_config@conf,f_open@path
 20335   016E2C  C710  F6B2         	movff	load_config@conf+1,f_open@path+1
 20336   016E30  0E01               	movlw	1
 20337   016E32  6FB3               	movwf	f_open@mode& (0+255),b
 20338   016E34  ECDB  F092         	call	_f_open	;wreg free
 20339   016E38  0107               	movlb	7	; () banked
 20340   016E3A  6F0C               	movwf	load_config@fr& (0+255),b
 20341   016E3C                     
 20342                           ; BSR set to: 7
 20343                           ;../src/w65_main.c: 432:  if ( fr != FR_OK ) {
 20344   016E3C  510C               	movf	load_config@fr& (0+255),w,b
 20345   016E3E  B4D8               	btfsc	status,2,c
 20346   016E40  EF24  F0B7         	goto	u34511
 20347   016E44  EF26  F0B7         	goto	u34510
 20348   016E48                     u34511:
 20349   016E48  EF85  F0B8         	goto	l24833
 20350   016E4C                     u34510:
 20351   016E4C                     
 20352                           ; BSR set to: 7
 20353                           ;../src/w65_main.c: 433:   printf("%s file is not found..\r\n", conf);
 20354   016E4C  0EA2               	movlw	low STR_87
 20355   016E4E  0105               	movlb	5	; () banked
 20356   016E50  6FAD               	movwf	printf@fmt& (0+255),b
 20357   016E52  0EFA               	movlw	high STR_87
 20358   016E54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20359   016E56  C70F  F5AF         	movff	load_config@conf,?_printf+2
 20360   016E5A  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 20361   016E5E  ECDA  F0FF         	call	_printf	;wreg free
 20362   016E62                     l24793:
 20363                           
 20364                           ;../src/w65_main.c: 434:   return -1;
 20365   016E62  0107               	movlb	7	; () banked
 20366   016E64  6900               	setf	?_load_config& (0+255),b
 20367   016E66  6901               	setf	(?_load_config+1)& (0+255),b
 20368   016E68  EFCF  F0B8         	goto	l1173
 20369   016E6C                     l24797:
 20370                           
 20371                           ; BSR set to: 6
 20372                           ;../src/w65_main.c: 440:   del_space(str);
 20373   016E6C  C711  F504         	movff	load_config@str,del_space@bytes
 20374   016E70  C712  F505         	movff	load_config@str+1,del_space@bytes+1
 20375   016E74  ECE9  F0F7         	call	_del_space	;wreg free
 20376   016E78                     
 20377                           ;../src/w65_main.c: 442:   if (str[0] == ';' || str[0] == 0 ) continue;
 20378   016E78  C711  F4D9         	movff	load_config@str,fsr2l
 20379   016E7C  C712  F4DA         	movff	load_config@str+1,fsr2h
 20380   016E80  0E3B               	movlw	59
 20381   016E82  18DE               	xorwf	postinc2,w,c
 20382   016E84  B4D8               	btfsc	status,2,c
 20383   016E86  EF47  F0B7         	goto	u34521
 20384   016E8A  EF49  F0B7         	goto	u34520
 20385   016E8E                     u34521:
 20386   016E8E  EF85  F0B8         	goto	l24833
 20387   016E92                     u34520:
 20388   016E92  C711  F4D9         	movff	load_config@str,fsr2l
 20389   016E96  C712  F4DA         	movff	load_config@str+1,fsr2h
 20390   016E9A  50DF               	movf	indf2,w,c
 20391   016E9C  A4D8               	btfss	status,2,c
 20392   016E9E  EF53  F0B7         	goto	u34531
 20393   016EA2  EF55  F0B7         	goto	u34530
 20394   016EA6                     u34531:
 20395   016EA6  EF57  F0B7         	goto	l24803
 20396   016EAA                     u34530:
 20397   016EAA  EF85  F0B8         	goto	l24833
 20398   016EAE                     l24803:
 20399                           
 20400                           ;../src/w65_main.c: 445:   for( i=0; i<2; i++ ) {
 20401   016EAE  0E00               	movlw	0
 20402   016EB0  0107               	movlb	7	; () banked
 20403   016EB2  6F14               	movwf	(load_config@i+1)& (0+255),b
 20404   016EB4  0E00               	movlw	0
 20405   016EB6  6F13               	movwf	load_config@i& (0+255),b
 20406   016EB8                     l24809:
 20407                           
 20408                           ; BSR set to: 7
 20409                           ;../src/w65_main.c: 446:    if ( !strstr(str, t_conf[i].conf )) continue;
 20410   016EB8  C711  F50B         	movff	load_config@str,strstr@h
 20411   016EBC  C712  F50C         	movff	load_config@str+1,strstr@h+1
 20412   016EC0  0EE6               	movlw	low _t_conf
 20413   016EC2  6F02               	movwf	??_load_config& (0+255),b
 20414   016EC4  0E07               	movlw	high _t_conf
 20415   016EC6  6F03               	movwf	(??_load_config+1)& (0+255),b
 20416   016EC8  90D8               	bcf	status,0,c
 20417   016ECA  3513               	rlcf	load_config@i& (0+255),w,b
 20418   016ECC  6ED9               	movwf	fsr2l,c
 20419   016ECE  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20420   016ED0  6EDA               	movwf	fsr2h,c
 20421   016ED2  90D8               	bcf	status,0,c
 20422   016ED4  36D9               	rlcf	fsr2l,f,c
 20423   016ED6  36DA               	rlcf	fsr2h,f,c
 20424   016ED8  5102               	movf	??_load_config& (0+255),w,b
 20425   016EDA  26D9               	addwf	fsr2l,f,c
 20426   016EDC  5103               	movf	(??_load_config+1)& (0+255),w,b
 20427   016EDE  22DA               	addwfc	fsr2h,f,c
 20428   016EE0  C4DE F50D          	movff	postinc2,strstr@n
 20429   016EE4  C4DD F50E          	movff	postdec2,strstr@n+1
 20430   016EE8  ECCF  F0EE         	call	_strstr	;wreg free
 20431   016EEC  500B               	movf	?_strstr^(0+1280),w,c
 20432   016EEE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 20433   016EF0  A4D8               	btfss	status,2,c
 20434   016EF2  EF7D  F0B7         	goto	u34541
 20435   016EF6  EF7F  F0B7         	goto	u34540
 20436   016EFA                     u34541:
 20437   016EFA  EF81  F0B7         	goto	l24813
 20438   016EFE                     u34540:
 20439   016EFE  EF74  F0B8         	goto	l24829
 20440   016F02                     l24813:
 20441                           
 20442                           ;../src/w65_main.c: 447:    if(str[strlen(t_conf[i].conf)] != '=') continue;
 20443   016F02  0EE6               	movlw	low _t_conf
 20444   016F04  0107               	movlb	7	; () banked
 20445   016F06  6F02               	movwf	??_load_config& (0+255),b
 20446   016F08  0E07               	movlw	high _t_conf
 20447   016F0A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20448   016F0C  90D8               	bcf	status,0,c
 20449   016F0E  3513               	rlcf	load_config@i& (0+255),w,b
 20450   016F10  6ED9               	movwf	fsr2l,c
 20451   016F12  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20452   016F14  6EDA               	movwf	fsr2h,c
 20453   016F16  90D8               	bcf	status,0,c
 20454   016F18  36D9               	rlcf	fsr2l,f,c
 20455   016F1A  36DA               	rlcf	fsr2h,f,c
 20456   016F1C  5102               	movf	??_load_config& (0+255),w,b
 20457   016F1E  26D9               	addwf	fsr2l,f,c
 20458   016F20  5103               	movf	(??_load_config+1)& (0+255),w,b
 20459   016F22  22DA               	addwfc	fsr2h,f,c
 20460   016F24  C4DE F504          	movff	postinc2,strlen@s
 20461   016F28  C4DD F505          	movff	postdec2,strlen@s+1
 20462   016F2C  ECB0  F0FC         	call	_strlen	;wreg free
 20463   016F30  5004               	movf	?_strlen^(0+1280),w,c
 20464   016F32  0107               	movlb	7	; () banked
 20465   016F34  2511               	addwf	load_config@str& (0+255),w,b
 20466   016F36  6ED9               	movwf	fsr2l,c
 20467   016F38  5005               	movf	(?_strlen+1)^(0+1280),w,c
 20468   016F3A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 20469   016F3C  6EDA               	movwf	fsr2h,c
 20470   016F3E  0E3D               	movlw	61
 20471   016F40  18DE               	xorwf	postinc2,w,c
 20472   016F42  B4D8               	btfsc	status,2,c
 20473   016F44  EFA6  F0B7         	goto	u34551
 20474   016F48  EFA8  F0B7         	goto	u34550
 20475   016F4C                     u34551:
 20476   016F4C  EFAA  F0B7         	goto	l24817
 20477   016F50                     u34550:
 20478   016F50  EF74  F0B8         	goto	l24829
 20479   016F54                     l24817:
 20480                           
 20481                           ; BSR set to: 7
 20482                           ;../src/w65_main.c: 450:    buf = &str[strlen(t_conf[i].conf)+1];
 20483   016F54  0EE6               	movlw	low _t_conf
 20484   016F56  6F02               	movwf	??_load_config& (0+255),b
 20485   016F58  0E07               	movlw	high _t_conf
 20486   016F5A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20487   016F5C  90D8               	bcf	status,0,c
 20488   016F5E  3513               	rlcf	load_config@i& (0+255),w,b
 20489   016F60  6ED9               	movwf	fsr2l,c
 20490   016F62  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20491   016F64  6EDA               	movwf	fsr2h,c
 20492   016F66  90D8               	bcf	status,0,c
 20493   016F68  36D9               	rlcf	fsr2l,f,c
 20494   016F6A  36DA               	rlcf	fsr2h,f,c
 20495   016F6C  5102               	movf	??_load_config& (0+255),w,b
 20496   016F6E  26D9               	addwf	fsr2l,f,c
 20497   016F70  5103               	movf	(??_load_config+1)& (0+255),w,b
 20498   016F72  22DA               	addwfc	fsr2h,f,c
 20499   016F74  C4DE F504          	movff	postinc2,strlen@s
 20500   016F78  C4DD F505          	movff	postdec2,strlen@s+1
 20501   016F7C  ECB0  F0FC         	call	_strlen	;wreg free
 20502   016F80  5004               	movf	?_strlen^(0+1280),w,c
 20503   016F82  0107               	movlb	7	; () banked
 20504   016F84  2511               	addwf	load_config@str& (0+255),w,b
 20505   016F86  6F04               	movwf	(??_load_config+2)& (0+255),b
 20506   016F88  5005               	movf	(?_strlen+1)^(0+1280),w,c
 20507   016F8A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 20508   016F8C  6F05               	movwf	(??_load_config+3)& (0+255),b
 20509   016F8E  0E01               	movlw	1
 20510   016F90  2504               	addwf	(??_load_config+2)& (0+255),w,b
 20511   016F92  6F0A               	movwf	load_config@buf& (0+255),b
 20512   016F94  0E00               	movlw	0
 20513   016F96  2105               	addwfc	(??_load_config+3)& (0+255),w,b
 20514   016F98  6F0B               	movwf	(load_config@buf+1)& (0+255),b
 20515   016F9A                     
 20516                           ; BSR set to: 7
 20517                           ;../src/w65_main.c: 451:    if (!(*(t_conf[i].val) = (uint32_t)(long)__strtoxl((const ch
      +                          ar *)buf,&a,0,1))) {
 20518   016F9A  C70A  F510         	movff	load_config@buf,___strtoxl@s
 20519   016F9E  C70B  F511         	movff	load_config@buf+1,___strtoxl@s+1
 20520   016FA2  0E0D               	movlw	low load_config@a
 20521   016FA4  6E12               	movwf	___strtoxl@endptr^(0+1280),c
 20522   016FA6  0E07               	movlw	high load_config@a
 20523   016FA8  6E13               	movwf	(___strtoxl@endptr+1)^(0+1280),c
 20524   016FAA  0E00               	movlw	0
 20525   016FAC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 20526   016FAE  0E00               	movlw	0
 20527   016FB0  6E14               	movwf	___strtoxl@base^(0+1280),c
 20528   016FB2  0E01               	movlw	1
 20529   016FB4  6E16               	movwf	___strtoxl@is_signed^(0+1280),c
 20530   016FB6  EC38  F0AC         	call	___strtoxl	;wreg free
 20531   016FBA  0EE6               	movlw	low _t_conf
 20532   016FBC  0107               	movlb	7	; () banked
 20533   016FBE  6F02               	movwf	??_load_config& (0+255),b
 20534   016FC0  0E07               	movlw	high _t_conf
 20535   016FC2  6F03               	movwf	(??_load_config+1)& (0+255),b
 20536   016FC4  0E02               	movlw	2
 20537   016FC6  2702               	addwf	??_load_config& (0+255),f,b
 20538   016FC8  0E00               	movlw	0
 20539   016FCA  2303               	addwfc	(??_load_config+1)& (0+255),f,b
 20540   016FCC  90D8               	bcf	status,0,c
 20541   016FCE  3513               	rlcf	load_config@i& (0+255),w,b
 20542   016FD0  6ED9               	movwf	fsr2l,c
 20543   016FD2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20544   016FD4  6EDA               	movwf	fsr2h,c
 20545   016FD6  90D8               	bcf	status,0,c
 20546   016FD8  36D9               	rlcf	fsr2l,f,c
 20547   016FDA  36DA               	rlcf	fsr2h,f,c
 20548   016FDC  5102               	movf	??_load_config& (0+255),w,b
 20549   016FDE  26D9               	addwf	fsr2l,f,c
 20550   016FE0  5103               	movf	(??_load_config+1)& (0+255),w,b
 20551   016FE2  22DA               	addwfc	fsr2h,f,c
 20552   016FE4  C4DE F704          	movff	postinc2,??_load_config+2
 20553   016FE8  C4DD F705          	movff	postdec2,??_load_config+3
 20554   016FEC  C704  F4D9         	movff	??_load_config+2,fsr2l
 20555   016FF0  C705  F4DA         	movff	??_load_config+3,fsr2h
 20556   016FF4  C510  F4DE         	movff	?___strtoxl,postinc2
 20557   016FF8  C511  F4DE         	movff	?___strtoxl+1,postinc2
 20558   016FFC  C512  F4DE         	movff	?___strtoxl+2,postinc2
 20559   017000  C513  F4DD         	movff	?___strtoxl+3,postdec2
 20560   017004  52DD               	movf	postdec2,f,c
 20561   017006  52DD               	movf	postdec2,f,c
 20562   017008  50DE               	movf	postinc2,w,c
 20563   01700A  10DE               	iorwf	postinc2,w,c
 20564   01700C  10DE               	iorwf	postinc2,w,c
 20565   01700E  10DE               	iorwf	postinc2,w,c
 20566   017010  A4D8               	btfss	status,2,c
 20567   017012  EF0D  F0B8         	goto	u34561
 20568   017016  EF0F  F0B8         	goto	u34560
 20569   01701A                     u34561:
 20570   01701A  EF34  F0B8         	goto	l24827
 20571   01701E                     u34560:
 20572   01701E                     
 20573                           ; BSR set to: 7
 20574                           ;../src/w65_main.c: 452:     printf("%s : invalid value!!\r\n",t_conf[i].conf);
 20575   01701E  0E7C               	movlw	low STR_88
 20576   017020  0105               	movlb	5	; () banked
 20577   017022  6FAD               	movwf	printf@fmt& (0+255),b
 20578   017024  0EFB               	movlw	high STR_88
 20579   017026  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20580   017028  0EE6               	movlw	low _t_conf
 20581   01702A  0107               	movlb	7	; () banked
 20582   01702C  6F02               	movwf	??_load_config& (0+255),b
 20583   01702E  0E07               	movlw	high _t_conf
 20584   017030  6F03               	movwf	(??_load_config+1)& (0+255),b
 20585   017032  90D8               	bcf	status,0,c
 20586   017034  3513               	rlcf	load_config@i& (0+255),w,b
 20587   017036  6ED9               	movwf	fsr2l,c
 20588   017038  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20589   01703A  6EDA               	movwf	fsr2h,c
 20590   01703C  90D8               	bcf	status,0,c
 20591   01703E  36D9               	rlcf	fsr2l,f,c
 20592   017040  36DA               	rlcf	fsr2h,f,c
 20593   017042  5102               	movf	??_load_config& (0+255),w,b
 20594   017044  26D9               	addwf	fsr2l,f,c
 20595   017046  5103               	movf	(??_load_config+1)& (0+255),w,b
 20596   017048  22DA               	addwfc	fsr2h,f,c
 20597   01704A  C4DE F5AF          	movff	postinc2,?_printf+2
 20598   01704E  C4DD F5B0          	movff	postdec2,?_printf+3
 20599   017052  ECDA  F0FF         	call	_printf	;wreg free
 20600                           
 20601                           ;../src/w65_main.c: 453:     f_close( &rom_fl );
 20602   017056  0ED6               	movlw	low _rom_fl
 20603   017058  0106               	movlb	6	; () banked
 20604   01705A  6F2F               	movwf	f_close@fp& (0+255),b
 20605   01705C  0E0F               	movlw	high _rom_fl
 20606   01705E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20607   017060  ECDB  F0FB         	call	_f_close	;wreg free
 20608   017064  EF31  F0B7         	goto	l24793
 20609   017068                     l24827:
 20610                           
 20611                           ; BSR set to: 7
 20612                           ;../src/w65_main.c: 456:    printf("%s : $%06lx\r\n", (const char *)t_conf[i].conf, *(t_
      +                          conf[i].val));
 20613   017068  0E34               	movlw	low STR_89
 20614   01706A  0105               	movlb	5	; () banked
 20615   01706C  6FAD               	movwf	printf@fmt& (0+255),b
 20616   01706E  0EFE               	movlw	high STR_89
 20617   017070  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20618   017072  0EE6               	movlw	low _t_conf
 20619   017074  0107               	movlb	7	; () banked
 20620   017076  6F02               	movwf	??_load_config& (0+255),b
 20621   017078  0E07               	movlw	high _t_conf
 20622   01707A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20623   01707C  90D8               	bcf	status,0,c
 20624   01707E  3513               	rlcf	load_config@i& (0+255),w,b
 20625   017080  6ED9               	movwf	fsr2l,c
 20626   017082  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20627   017084  6EDA               	movwf	fsr2h,c
 20628   017086  90D8               	bcf	status,0,c
 20629   017088  36D9               	rlcf	fsr2l,f,c
 20630   01708A  36DA               	rlcf	fsr2h,f,c
 20631   01708C  5102               	movf	??_load_config& (0+255),w,b
 20632   01708E  26D9               	addwf	fsr2l,f,c
 20633   017090  5103               	movf	(??_load_config+1)& (0+255),w,b
 20634   017092  22DA               	addwfc	fsr2h,f,c
 20635   017094  C4DE F5AF          	movff	postinc2,?_printf+2
 20636   017098  C4DD F5B0          	movff	postdec2,?_printf+3
 20637   01709C  0EE6               	movlw	low _t_conf
 20638   01709E  6F04               	movwf	(??_load_config+2)& (0+255),b
 20639   0170A0  0E07               	movlw	high _t_conf
 20640   0170A2  6F05               	movwf	(??_load_config+3)& (0+255),b
 20641   0170A4  0E02               	movlw	2
 20642   0170A6  2704               	addwf	(??_load_config+2)& (0+255),f,b
 20643   0170A8  0E00               	movlw	0
 20644   0170AA  2305               	addwfc	(??_load_config+3)& (0+255),f,b
 20645   0170AC  90D8               	bcf	status,0,c
 20646   0170AE  3513               	rlcf	load_config@i& (0+255),w,b
 20647   0170B0  6ED9               	movwf	fsr2l,c
 20648   0170B2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20649   0170B4  6EDA               	movwf	fsr2h,c
 20650   0170B6  90D8               	bcf	status,0,c
 20651   0170B8  36D9               	rlcf	fsr2l,f,c
 20652   0170BA  36DA               	rlcf	fsr2h,f,c
 20653   0170BC  5104               	movf	(??_load_config+2)& (0+255),w,b
 20654   0170BE  26D9               	addwf	fsr2l,f,c
 20655   0170C0  5105               	movf	(??_load_config+3)& (0+255),w,b
 20656   0170C2  22DA               	addwfc	fsr2h,f,c
 20657   0170C4  C4DE F706          	movff	postinc2,??_load_config+4
 20658   0170C8  C4DD F707          	movff	postdec2,??_load_config+5
 20659   0170CC  C706  F4D9         	movff	??_load_config+4,fsr2l
 20660   0170D0  C707  F4DA         	movff	??_load_config+5,fsr2h
 20661   0170D4  C4DE F5B1          	movff	postinc2,?_printf+4
 20662   0170D8  C4DE F5B2          	movff	postinc2,?_printf+5
 20663   0170DC  C4DE F5B3          	movff	postinc2,?_printf+6
 20664   0170E0  C4DE F5B4          	movff	postinc2,?_printf+7
 20665   0170E4  ECDA  F0FF         	call	_printf	;wreg free
 20666   0170E8                     l24829:
 20667   0170E8  0107               	movlb	7	; () banked
 20668   0170EA  4B13               	infsnz	load_config@i& (0+255),f,b
 20669   0170EC  2B14               	incf	(load_config@i+1)& (0+255),f,b
 20670   0170EE                     
 20671                           ; BSR set to: 7
 20672   0170EE  BF14               	btfsc	(load_config@i+1)& (0+255),7,b
 20673   0170F0  EF83  F0B8         	goto	u34571
 20674   0170F4  5114               	movf	(load_config@i+1)& (0+255),w,b
 20675   0170F6  E109               	bnz	u34570
 20676   0170F8  0E02               	movlw	2
 20677   0170FA  5D13               	subwf	load_config@i& (0+255),w,b
 20678   0170FC  A0D8               	btfss	status,0,c
 20679   0170FE  EF83  F0B8         	goto	u34571
 20680   017102  EF85  F0B8         	goto	u34570
 20681   017106                     u34571:
 20682   017106  EF5C  F0B7         	goto	l24809
 20683   01710A                     u34570:
 20684   01710A                     l24833:
 20685                           
 20686                           ;../src/w65_main.c: 437:  while ( f_gets(str, 80, &rom_fl) ) {
 20687   01710A  C711  F669         	movff	load_config@str,f_gets@buff
 20688   01710E  C712  F66A         	movff	load_config@str+1,f_gets@buff+1
 20689   017112  0E00               	movlw	0
 20690   017114  0106               	movlb	6	; () banked
 20691   017116  6F6C               	movwf	(f_gets@len+1)& (0+255),b
 20692   017118  0E50               	movlw	80
 20693   01711A  6F6B               	movwf	f_gets@len& (0+255),b
 20694   01711C  0ED6               	movlw	low _rom_fl
 20695   01711E  6F6D               	movwf	f_gets@fp& (0+255),b
 20696   017120  0E0F               	movlw	high _rom_fl
 20697   017122  6F6E               	movwf	(f_gets@fp+1)& (0+255),b
 20698   017124  EC90  F0EC         	call	_f_gets	;wreg free
 20699   017128  0106               	movlb	6	; () banked
 20700   01712A  5169               	movf	?_f_gets& (0+255),w,b
 20701   01712C  116A               	iorwf	(?_f_gets+1)& (0+255),w,b
 20702   01712E  A4D8               	btfss	status,2,c
 20703   017130  EF9C  F0B8         	goto	u34581
 20704   017134  EF9E  F0B8         	goto	u34580
 20705   017138                     u34581:
 20706   017138  EF36  F0B7         	goto	l24797
 20707   01713C                     u34580:
 20708   01713C                     
 20709                           ; BSR set to: 6
 20710                           ;../src/w65_main.c: 460:  if (!((int)((&rom_fl)->fptr == (&rom_fl)->obj.objsize))) {
 20711   01713C  EE23  F3E0         	lfsr	2,_rom_fl+10
 20712   017140  EE13  F3E6         	lfsr	1,_rom_fl+16
 20713   017144  50DE               	movf	postinc2,w,c
 20714   017146  18E6               	xorwf	postinc1,w,c
 20715   017148  E10F               	bnz	u34590
 20716   01714A  50DE               	movf	postinc2,w,c
 20717   01714C  18E6               	xorwf	postinc1,w,c
 20718   01714E  E10C               	bnz	u34590
 20719   017150  50DE               	movf	postinc2,w,c
 20720   017152  18E6               	xorwf	postinc1,w,c
 20721   017154  E109               	bnz	u34590
 20722   017156  50DE               	movf	postinc2,w,c
 20723   017158  18E6               	xorwf	postinc1,w,c
 20724   01715A  B4D8               	btfsc	status,2,c
 20725   01715C  EFB2  F0B8         	goto	u34591
 20726   017160  EFB4  F0B8         	goto	u34590
 20727   017164                     u34591:
 20728   017164  EFC4  F0B8         	goto	l24843
 20729   017168                     u34590:
 20730   017168                     
 20731                           ; BSR set to: 6
 20732                           ;../src/w65_main.c: 461:   printf("File read error!\r\n");
 20733   017168  0EE9               	movlw	low STR_90
 20734   01716A  0105               	movlb	5	; () banked
 20735   01716C  6FAD               	movwf	printf@fmt& (0+255),b
 20736   01716E  0EFC               	movlw	high STR_90
 20737   017170  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20738   017172  ECDA  F0FF         	call	_printf	;wreg free
 20739                           
 20740                           ;../src/w65_main.c: 462:   f_close( &rom_fl );
 20741   017176  0ED6               	movlw	low _rom_fl
 20742   017178  0106               	movlb	6	; () banked
 20743   01717A  6F2F               	movwf	f_close@fp& (0+255),b
 20744   01717C  0E0F               	movlw	high _rom_fl
 20745   01717E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20746   017180  ECDB  F0FB         	call	_f_close	;wreg free
 20747   017184  EF31  F0B7         	goto	l24793
 20748   017188                     l24843:
 20749                           
 20750                           ; BSR set to: 6
 20751                           ;../src/w65_main.c: 465:  f_close( &rom_fl );
 20752   017188  0ED6               	movlw	low _rom_fl
 20753   01718A  6F2F               	movwf	f_close@fp& (0+255),b
 20754   01718C  0E0F               	movlw	high _rom_fl
 20755   01718E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20756   017190  ECDB  F0FB         	call	_f_close	;wreg free
 20757   017194                     
 20758                           ;../src/w65_main.c: 466:  return 0;
 20759   017194  0E00               	movlw	0
 20760   017196  0107               	movlb	7	; () banked
 20761   017198  6F01               	movwf	(?_load_config+1)& (0+255),b
 20762   01719A  0E00               	movlw	0
 20763   01719C  6F00               	movwf	?_load_config& (0+255),b
 20764   01719E                     l1173:
 20765                           
 20766                           ; BSR set to: 7
 20767   01719E  0012               	return		;funcret
 20768   0171A0                     __end_of_load_config:
 20769                           	callstack 0
 20770                           
 20771 ;; *************** function _f_gets *****************
 20772 ;; Defined at:
 20773 ;;		line 6428 in file "../fatfs/ff.c"
 20774 ;; Parameters:    Size  Location     Type
 20775 ;;  buff            2  105[BANK6 ] PTR unsigned char 
 20776 ;;		 -> tmp_buf(512), 
 20777 ;;  len             2  107[BANK6 ] int 
 20778 ;;  fp              2  109[BANK6 ] PTR struct .
 20779 ;;		 -> rom_fl(546), 
 20780 ;; Auto vars:     Size  Location     Type
 20781 ;;  s               4  121[BANK6 ] unsigned char [4]
 20782 ;;  dc              4  115[BANK6 ] unsigned long 
 20783 ;;  rc              2  119[BANK6 ] unsigned int 
 20784 ;;  p               2  113[BANK6 ] PTR unsigned char 
 20785 ;;		 -> tmp_buf(512), 
 20786 ;;  nc              2  111[BANK6 ] int 
 20787 ;; Return value:  Size  Location     Type
 20788 ;;                  2  105[BANK6 ] PTR unsigned char 
 20789 ;; Registers used:
 20790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20791 ;; Tracked objects:
 20792 ;;		On entry : 0/0
 20793 ;;		On exit  : 0/0
 20794 ;;		Unchanged: 0/0
 20795 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20796 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20797 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20799 ;;      Totals:         0       1      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20800 ;;Total ram usage:       21 bytes
 20801 ;; Hardware stack levels used: 1
 20802 ;; Hardware stack levels required when called: 16
 20803 ;; This function calls:
 20804 ;;		_f_read
 20805 ;; This function is called by:
 20806 ;;		_load_config
 20807 ;; This function uses a non-reentrant model
 20808 ;;
 20809                           
 20810                           	psect	text39
 20811   01D920                     __ptext39:
 20812                           	callstack 0
 20813   01D920                     _f_gets:
 20814                           	callstack 109
 20815   01D920                     
 20816                           ;../fatfs/ff.c: 6429:  TCHAR* buff,;../fatfs/ff.c: 6430:  int len,;../fatfs/ff.c: 6431: 
      +                           FIL* fp;../fatfs/ff.c: 6433: {;../fatfs/ff.c: 6434:  int nc = 0;
 20817   01D920  0E00               	movlw	0
 20818   01D922  0106               	movlb	6	; () banked
 20819   01D924  6F70               	movwf	(f_gets@nc+1)& (0+255),b
 20820   01D926  0E00               	movlw	0
 20821   01D928  6F6F               	movwf	f_gets@nc& (0+255),b
 20822   01D92A                     
 20823                           ; BSR set to: 6
 20824                           ;../fatfs/ff.c: 6435:  TCHAR *p = buff;
 20825   01D92A  C669  F671         	movff	f_gets@buff,f_gets@p
 20826   01D92E  C66A  F672         	movff	f_gets@buff+1,f_gets@p+1
 20827   01D932                     
 20828                           ; BSR set to: 6
 20829                           ;../fatfs/ff.c: 6436:  BYTE s[4];;../fatfs/ff.c: 6437:  UINT rc;;../fatfs/ff.c: 6438:  D
      +                          WORD dc;;../fatfs/ff.c: 6536:  len -= 1;
 20830   01D932  076B               	decf	f_gets@len& (0+255),f,b
 20831   01D934  A0D8               	btfss	status,0,c
 20832   01D936  076C               	decf	(f_gets@len+1)& (0+255),f,b
 20833                           
 20834                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 20835   01D938  EFDA  F0EC         	goto	l24471
 20836   01D93C                     l24449:
 20837                           
 20838                           ; BSR set to: 5
 20839                           ;../fatfs/ff.c: 6538:   f_read(fp, s, 1, &rc);
 20840   01D93C  C66D  F63E         	movff	f_gets@fp,f_read@fp
 20841   01D940  C66E  F63F         	movff	f_gets@fp+1,f_read@fp+1
 20842   01D944  0E79               	movlw	low f_gets@s
 20843   01D946  0106               	movlb	6	; () banked
 20844   01D948  6F40               	movwf	f_read@buff& (0+255),b
 20845   01D94A  0E06               	movlw	high f_gets@s
 20846   01D94C  6F41               	movwf	(f_read@buff+1)& (0+255),b
 20847   01D94E  0E00               	movlw	0
 20848   01D950  6F43               	movwf	(f_read@btr+1)& (0+255),b
 20849   01D952  0E01               	movlw	1
 20850   01D954  6F42               	movwf	f_read@btr& (0+255),b
 20851   01D956  0E77               	movlw	low f_gets@rc
 20852   01D958  6F44               	movwf	f_read@br& (0+255),b
 20853   01D95A  0E06               	movlw	high f_gets@rc
 20854   01D95C  6F45               	movwf	(f_read@br+1)& (0+255),b
 20855   01D95E  EC9B  F096         	call	_f_read	;wreg free
 20856   01D962                     
 20857                           ;../fatfs/ff.c: 6539:   if (rc != 1) break;
 20858   01D962  0106               	movlb	6	; () banked
 20859   01D964  0577               	decf	f_gets@rc& (0+255),w,b
 20860   01D966  1178               	iorwf	(f_gets@rc+1)& (0+255),w,b
 20861   01D968  B4D8               	btfsc	status,2,c
 20862   01D96A  EFB9  F0EC         	goto	u34061
 20863   01D96E  EFBB  F0EC         	goto	u34060
 20864   01D972                     u34061:
 20865   01D972  EFBD  F0EC         	goto	l24455
 20866   01D976                     u34060:
 20867   01D976  EFEC  F0EC         	goto	l24473
 20868   01D97A                     l24455:
 20869                           
 20870                           ; BSR set to: 6
 20871                           ;../fatfs/ff.c: 6540:   dc = s[0];
 20872   01D97A  5179               	movf	f_gets@s& (0+255),w,b
 20873   01D97C  6F73               	movwf	f_gets@dc& (0+255),b
 20874   01D97E  6B74               	clrf	(f_gets@dc+1)& (0+255),b
 20875   01D980  6B75               	clrf	(f_gets@dc+2)& (0+255),b
 20876   01D982  6B76               	clrf	(f_gets@dc+3)& (0+255),b
 20877   01D984                     
 20878                           ; BSR set to: 6
 20879                           ;../fatfs/ff.c: 6542:   *p++ = (TCHAR)dc; nc++;
 20880   01D984  C671  F4D9         	movff	f_gets@p,fsr2l
 20881   01D988  C672  F4DA         	movff	f_gets@p+1,fsr2h
 20882   01D98C  C673  F4DF         	movff	f_gets@dc,indf2
 20883   01D990                     
 20884                           ; BSR set to: 6
 20885   01D990  4B71               	infsnz	f_gets@p& (0+255),f,b
 20886   01D992  2B72               	incf	(f_gets@p+1)& (0+255),f,b
 20887   01D994                     
 20888                           ; BSR set to: 6
 20889   01D994  4B6F               	infsnz	f_gets@nc& (0+255),f,b
 20890   01D996  2B70               	incf	(f_gets@nc+1)& (0+255),f,b
 20891   01D998                     
 20892                           ; BSR set to: 6
 20893                           ;../fatfs/ff.c: 6543:   if (dc == '\n') break;
 20894   01D998  0E0A               	movlw	10
 20895   01D99A  1973               	xorwf	f_gets@dc& (0+255),w,b
 20896   01D99C  1174               	iorwf	(f_gets@dc+1)& (0+255),w,b
 20897   01D99E  1175               	iorwf	(f_gets@dc+2)& (0+255),w,b
 20898   01D9A0  1176               	iorwf	(f_gets@dc+3)& (0+255),w,b
 20899   01D9A2  A4D8               	btfss	status,2,c
 20900   01D9A4  EFD6  F0EC         	goto	u34071
 20901   01D9A8  EFD8  F0EC         	goto	u34070
 20902   01D9AC                     u34071:
 20903   01D9AC  EFDA  F0EC         	goto	l24471
 20904   01D9B0                     u34070:
 20905   01D9B0  EFEC  F0EC         	goto	l24473
 20906   01D9B4                     l24471:
 20907                           
 20908                           ; BSR set to: 6
 20909                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 20910   01D9B4  516B               	movf	f_gets@len& (0+255),w,b
 20911   01D9B6  5D6F               	subwf	f_gets@nc& (0+255),w,b
 20912   01D9B8  5170               	movf	(f_gets@nc+1)& (0+255),w,b
 20913   01D9BA  0A80               	xorlw	128
 20914   01D9BC  0105               	movlb	5	; () banked
 20915   01D9BE  6FFF               	movwf	??_f_gets& (0+255),b
 20916   01D9C0  0106               	movlb	6	; () banked
 20917   01D9C2  516C               	movf	(f_gets@len+1)& (0+255),w,b
 20918   01D9C4  0A80               	xorlw	128
 20919   01D9C6  0105               	movlb	5	; () banked
 20920   01D9C8  59FF               	subwfb	??_f_gets& (0+255),w,b
 20921   01D9CA  A0D8               	btfss	status,0,c
 20922   01D9CC  EFEA  F0EC         	goto	u34081
 20923   01D9D0  EFEC  F0EC         	goto	u34080
 20924   01D9D4                     u34081:
 20925   01D9D4  EF9E  F0EC         	goto	l24449
 20926   01D9D8                     u34080:
 20927   01D9D8                     l24473:
 20928                           
 20929                           ;../fatfs/ff.c: 6547:  *p = 0;
 20930   01D9D8  C671  F4D9         	movff	f_gets@p,fsr2l
 20931   01D9DC  C672  F4DA         	movff	f_gets@p+1,fsr2h
 20932   01D9E0  6ADF               	clrf	indf2,c
 20933   01D9E2                     
 20934                           ;../fatfs/ff.c: 6548:  return nc ? buff : 0;
 20935   01D9E2  0106               	movlb	6	; () banked
 20936   01D9E4  516F               	movf	f_gets@nc& (0+255),w,b
 20937   01D9E6  1170               	iorwf	(f_gets@nc+1)& (0+255),w,b
 20938   01D9E8  A4D8               	btfss	status,2,c
 20939   01D9EA  EFF9  F0EC         	goto	u34091
 20940   01D9EE  EFFB  F0EC         	goto	u34090
 20941   01D9F2                     u34091:
 20942   01D9F2  EF01  F0ED         	goto	l24479
 20943   01D9F6                     u34090:
 20944   01D9F6                     
 20945                           ; BSR set to: 6
 20946   01D9F6  0E00               	movlw	0
 20947   01D9F8  6F69               	movwf	?_f_gets& (0+255),b
 20948   01D9FA  0E00               	movlw	0
 20949   01D9FC  6F6A               	movwf	(?_f_gets+1)& (0+255),b
 20950   01D9FE  EF05  F0ED         	goto	l2208
 20951   01DA02                     l24479:
 20952                           
 20953                           ; BSR set to: 6
 20954   01DA02  C669  F669         	movff	f_gets@buff,?_f_gets
 20955   01DA06  C66A  F66A         	movff	f_gets@buff+1,?_f_gets+1
 20956   01DA0A                     l2208:
 20957                           
 20958                           ; BSR set to: 6
 20959   01DA0A  0012               	return		;funcret
 20960   01DA0C                     __end_of_f_gets:
 20961                           	callstack 0
 20962                           
 20963 ;; *************** function _del_space *****************
 20964 ;; Defined at:
 20965 ;;		line 401 in file "../src/w65_main.c"
 20966 ;; Parameters:    Size  Location     Type
 20967 ;;  bytes           2    3[COMRAM] PTR unsigned char 
 20968 ;;		 -> tmp_buf(512), 
 20969 ;; Auto vars:     Size  Location     Type
 20970 ;;  c               1    8[COMRAM] unsigned char 
 20971 ;;  pos             1    7[COMRAM] unsigned char 
 20972 ;;  i               1    6[COMRAM] unsigned char 
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      unsigned char 
 20975 ;; Registers used:
 20976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20977 ;; Tracked objects:
 20978 ;;		On entry : 0/0
 20979 ;;		On exit  : 0/0
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20986 ;;Total ram usage:        6 bytes
 20987 ;; Hardware stack levels used: 1
 20988 ;; Hardware stack levels required when called: 1
 20989 ;; This function calls:
 20990 ;;		Nothing
 20991 ;; This function is called by:
 20992 ;;		_load_config
 20993 ;; This function uses a non-reentrant model
 20994 ;;
 20995                           
 20996                           	psect	text40
 20997   01EFD2                     __ptext40:
 20998                           	callstack 0
 20999   01EFD2                     _del_space:
 21000                           	callstack 124
 21001   01EFD2                     
 21002                           ;../src/w65_main.c: 402:  uint8_t pos = 0;
 21003   01EFD2  6A08               	clrf	del_space@pos^(0+1280),c
 21004                           
 21005                           ;../src/w65_main.c: 403:  uint8_t i = 0;
 21006   01EFD4  6A07               	clrf	del_space@i^(0+1280),c
 21007                           
 21008                           ;../src/w65_main.c: 404:  char c;;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 21009   01EFD6  EF13  F0F8         	goto	l16625
 21010   01EFDA                     l16615:
 21011                           
 21012                           ;../src/w65_main.c: 407:   if (c == '\r' || c == '\n' || c == ' ') {
 21013   01EFDA  0E0D               	movlw	13
 21014   01EFDC  1809               	xorwf	del_space@c^(0+1280),w,c
 21015   01EFDE  B4D8               	btfsc	status,2,c
 21016   01EFE0  EFF4  F0F7         	goto	u21261
 21017   01EFE4  EFF6  F0F7         	goto	u21260
 21018   01EFE8                     u21261:
 21019   01EFE8  EF13  F0F8         	goto	l16625
 21020   01EFEC                     u21260:
 21021   01EFEC  0E0A               	movlw	10
 21022   01EFEE  1809               	xorwf	del_space@c^(0+1280),w,c
 21023   01EFF0  B4D8               	btfsc	status,2,c
 21024   01EFF2  EFFD  F0F7         	goto	u21271
 21025   01EFF6  EFFF  F0F7         	goto	u21270
 21026   01EFFA                     u21271:
 21027   01EFFA  EF13  F0F8         	goto	l16625
 21028   01EFFE                     u21270:
 21029   01EFFE  0E20               	movlw	32
 21030   01F000  1809               	xorwf	del_space@c^(0+1280),w,c
 21031   01F002  A4D8               	btfss	status,2,c
 21032   01F004  EF06  F0F8         	goto	u21281
 21033   01F008  EF08  F0F8         	goto	u21280
 21034   01F00C                     u21281:
 21035   01F00C  EF0A  F0F8         	goto	l16621
 21036   01F010                     u21280:
 21037   01F010  EF13  F0F8         	goto	l16625
 21038   01F014                     l16621:
 21039                           
 21040                           ;../src/w65_main.c: 410:   bytes[pos++] = c;
 21041   01F014  5008               	movf	del_space@pos^(0+1280),w,c
 21042   01F016  2404               	addwf	del_space@bytes^(0+1280),w,c
 21043   01F018  6ED9               	movwf	fsr2l,c
 21044   01F01A  0E00               	movlw	0
 21045   01F01C  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21046   01F01E  6EDA               	movwf	fsr2h,c
 21047   01F020  C509  F4DF         	movff	del_space@c,indf2
 21048   01F024  2A08               	incf	del_space@pos^(0+1280),f,c
 21049   01F026                     l16625:
 21050                           
 21051                           ;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 21052   01F026  2A07               	incf	del_space@i^(0+1280),f,c
 21053   01F028  0407               	decf	del_space@i^(0+1280),w,c
 21054   01F02A  6E06               	movwf	??_del_space^(0+1280),c
 21055   01F02C  5006               	movf	??_del_space^(0+1280),w,c
 21056   01F02E  2404               	addwf	del_space@bytes^(0+1280),w,c
 21057   01F030  6ED9               	movwf	fsr2l,c
 21058   01F032  0E00               	movlw	0
 21059   01F034  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21060   01F036  6EDA               	movwf	fsr2h,c
 21061   01F038  50DF               	movf	indf2,w,c
 21062   01F03A  6E09               	movwf	del_space@c^(0+1280),c
 21063   01F03C  5009               	movf	del_space@c^(0+1280),w,c
 21064   01F03E  A4D8               	btfss	status,2,c
 21065   01F040  EF24  F0F8         	goto	u21291
 21066   01F044  EF26  F0F8         	goto	u21290
 21067   01F048                     u21291:
 21068   01F048  EFED  F0F7         	goto	l16615
 21069   01F04C                     u21290:
 21070   01F04C                     
 21071                           ;../src/w65_main.c: 412:  bytes[pos] = c;
 21072   01F04C  5008               	movf	del_space@pos^(0+1280),w,c
 21073   01F04E  2404               	addwf	del_space@bytes^(0+1280),w,c
 21074   01F050  6ED9               	movwf	fsr2l,c
 21075   01F052  0E00               	movlw	0
 21076   01F054  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21077   01F056  6EDA               	movwf	fsr2h,c
 21078   01F058  C509  F4DF         	movff	del_space@c,indf2
 21079   01F05C  0012               	return		;funcret
 21080   01F05E                     __end_of_del_space:
 21081                           	callstack 0
 21082                           
 21083 ;; *************** function ___strtoxl *****************
 21084 ;; Defined at:
 21085 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__strtoxl.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;  s               2   15[COMRAM] PTR const unsigned char 
 21088 ;;		 -> tmp_buf(512), 
 21089 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
 21090 ;;		 -> load_config@a(2), 
 21091 ;;  base            2   19[COMRAM] int 
 21092 ;;  is_signed       1   21[COMRAM] unsigned char 
 21093 ;; Auto vars:     Size  Location     Type
 21094 ;;  a               4   38[COMRAM] unsigned long 
 21095 ;;  limit           4   33[COMRAM] unsigned long 
 21096 ;;  prev_a          4   25[COMRAM] unsigned long 
 21097 ;;  cp              2   42[COMRAM] PTR const unsigned char 
 21098 ;;		 -> tmp_buf(512), 
 21099 ;;  c               1   44[COMRAM] unsigned char 
 21100 ;;  flags           1   37[COMRAM] enum E246
 21101 ;; Return value:  Size  Location     Type
 21102 ;;                  4   15[COMRAM] unsigned long 
 21103 ;; Registers used:
 21104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21105 ;; Tracked objects:
 21106 ;;		On entry : 0/0
 21107 ;;		On exit  : 0/0
 21108 ;;		Unchanged: 0/0
 21109 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21110 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21111 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21113 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21114 ;;Total ram usage:       30 bytes
 21115 ;; Hardware stack levels used: 1
 21116 ;; Hardware stack levels required when called: 2
 21117 ;; This function calls:
 21118 ;;		___lmul
 21119 ;; This function is called by:
 21120 ;;		_load_config
 21121 ;; This function uses a non-reentrant model
 21122 ;;
 21123                           
 21124                           	psect	text41
 21125   015870                     __ptext41:
 21126                           	callstack 0
 21127   015870                     ___strtoxl:
 21128                           	callstack 123
 21129   015870  6A26               	clrf	___strtoxl@flags^(0+1280),c
 21130   015872  0E00               	movlw	0
 21131   015874  6E27               	movwf	___strtoxl@a^(0+1280),c
 21132   015876  0E00               	movlw	0
 21133   015878  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 21134   01587A  0E00               	movlw	0
 21135   01587C  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 21136   01587E  0E00               	movlw	0
 21137   015880  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 21138   015882  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 21139   015886  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 21140   01588A  BE15               	btfsc	(___strtoxl@base+1)^(0+1280),7,c
 21141   01588C  EF53  F0AC         	goto	u33730
 21142   015890  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 21143   015892  E107               	bnz	u33731
 21144   015894  0E25               	movlw	37
 21145   015896  5C14               	subwf	___strtoxl@base^(0+1280),w,c
 21146   015898  B0D8               	btfsc	status,0,c
 21147   01589A  EF51  F0AC         	goto	u33731
 21148   01589E  EF53  F0AC         	goto	u33730
 21149   0158A2                     u33731:
 21150   0158A2  EF5C  F0AC         	goto	l24325
 21151   0158A6                     u33730:
 21152   0158A6  0414               	decf	___strtoxl@base^(0+1280),w,c
 21153   0158A8  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21154   0158AA  A4D8               	btfss	status,2,c
 21155   0158AC  EF5A  F0AC         	goto	u33741
 21156   0158B0  EF5C  F0AC         	goto	u33740
 21157   0158B4                     u33741:
 21158   0158B4  EF63  F0AC         	goto	l24327
 21159   0158B8                     u33740:
 21160   0158B8                     l24325:
 21161   0158B8  0E00               	movlw	0
 21162   0158BA  0107               	movlb	7	; () banked
 21163   0158BC  6FB4               	movwf	(_errno+1)& (0+255),b
 21164   0158BE  0E16               	movlw	22
 21165   0158C0  6FB3               	movwf	_errno& (0+255),b
 21166   0158C2  EF61  F0AE         	goto	l24431
 21167   0158C6                     l24327:
 21168   0158C6  502B               	movf	___strtoxl@cp^(0+1280),w,c
 21169   0158C8  102C               	iorwf	(___strtoxl@cp+1)^(0+1280),w,c
 21170   0158CA  B4D8               	btfsc	status,2,c
 21171   0158CC  EF6A  F0AC         	goto	u33751
 21172   0158D0  EF6C  F0AC         	goto	u33750
 21173   0158D4                     u33751:
 21174   0158D4  EF61  F0AE         	goto	l24431
 21175   0158D8                     u33750:
 21176   0158D8  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21177   0158DC  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21178   0158E0  50DF               	movf	indf2,w,c
 21179   0158E2  A4D8               	btfss	status,2,c
 21180   0158E4  EF76  F0AC         	goto	u33761
 21181   0158E8  EF78  F0AC         	goto	u33760
 21182   0158EC                     u33761:
 21183   0158EC  EF7A  F0AC         	goto	l24331
 21184   0158F0                     u33760:
 21185   0158F0  EF61  F0AE         	goto	l24431
 21186   0158F4                     l24331:
 21187   0158F4  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21188   0158F8  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21189   0158FC  50DF               	movf	indf2,w,c
 21190   0158FE  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21191   015900  EF8A  F0AC         	goto	l24335
 21192   015904                     l24333:
 21193   015904  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21194   015906  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21195   015908  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21196   01590C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21197   015910  50DF               	movf	indf2,w,c
 21198   015912  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21199   015914                     l24335:
 21200   015914  0E20               	movlw	32
 21201   015916  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21202   015918  B4D8               	btfsc	status,2,c
 21203   01591A  EF91  F0AC         	goto	u33771
 21204   01591E  EF93  F0AC         	goto	u33770
 21205   015922                     u33771:
 21206   015922  EF82  F0AC         	goto	l24333
 21207   015926                     u33770:
 21208   015926  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21209   01592A  0EF7               	movlw	247
 21210   01592C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21211   01592E  0E04               	movlw	4
 21212   015930  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21213   015932  EF9D  F0AC         	goto	u33781
 21214   015936  EF9F  F0AC         	goto	u33780
 21215   01593A                     u33781:
 21216   01593A  EF82  F0AC         	goto	l24333
 21217   01593E                     u33780:
 21218   01593E  0E2D               	movlw	45
 21219   015940  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21220   015942  A4D8               	btfss	status,2,c
 21221   015944  EFA6  F0AC         	goto	u33791
 21222   015948  EFA8  F0AC         	goto	u33790
 21223   01594C                     u33791:
 21224   01594C  EFB4  F0AC         	goto	l24345
 21225   015950                     u33790:
 21226   015950  0E01               	movlw	1
 21227   015952  6E26               	movwf	___strtoxl@flags^(0+1280),c
 21228   015954                     l24343:
 21229   015954  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21230   015956  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21231   015958  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21232   01595C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21233   015960  50DF               	movf	indf2,w,c
 21234   015962  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21235   015964  EFBF  F0AC         	goto	l24349
 21236   015968                     l24345:
 21237   015968  0E2B               	movlw	43
 21238   01596A  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21239   01596C  A4D8               	btfss	status,2,c
 21240   01596E  EFBB  F0AC         	goto	u33801
 21241   015972  EFBD  F0AC         	goto	u33800
 21242   015976                     u33801:
 21243   015976  EFBF  F0AC         	goto	l24349
 21244   01597A                     u33800:
 21245   01597A  EFAA  F0AC         	goto	l24343
 21246   01597E                     l24349:
 21247   01597E  0E30               	movlw	48
 21248   015980  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21249   015982  A4D8               	btfss	status,2,c
 21250   015984  EFC6  F0AC         	goto	u33811
 21251   015988  EFC8  F0AC         	goto	u33810
 21252   01598C                     u33811:
 21253   01598C  EF61  F0AD         	goto	l24385
 21254   015990                     u33810:
 21255   015990  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21256   015992  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21257   015994  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21258   015998  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21259   01599C  50DF               	movf	indf2,w,c
 21260   01599E  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21261   0159A0  5014               	movf	___strtoxl@base^(0+1280),w,c
 21262   0159A2  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21263   0159A4  B4D8               	btfsc	status,2,c
 21264   0159A6  EFD7  F0AC         	goto	u33821
 21265   0159AA  EFD9  F0AC         	goto	u33820
 21266   0159AE                     u33821:
 21267   0159AE  EFE3  F0AC         	goto	l24357
 21268   0159B2                     u33820:
 21269   0159B2  0E10               	movlw	16
 21270   0159B4  1814               	xorwf	___strtoxl@base^(0+1280),w,c
 21271   0159B6  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21272   0159B8  A4D8               	btfss	status,2,c
 21273   0159BA  EFE1  F0AC         	goto	u33831
 21274   0159BE  EFE3  F0AC         	goto	u33830
 21275   0159C2                     u33831:
 21276   0159C2  EF53  F0AD         	goto	l24379
 21277   0159C6                     u33830:
 21278   0159C6                     l24357:
 21279   0159C6  0E78               	movlw	120
 21280   0159C8  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21281   0159CA  B4D8               	btfsc	status,2,c
 21282   0159CC  EFEA  F0AC         	goto	u33841
 21283   0159D0  EFEC  F0AC         	goto	u33840
 21284   0159D4                     u33841:
 21285   0159D4  EFF5  F0AC         	goto	l24361
 21286   0159D8                     u33840:
 21287   0159D8  0E58               	movlw	88
 21288   0159DA  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21289   0159DC  A4D8               	btfss	status,2,c
 21290   0159DE  EFF3  F0AC         	goto	u33851
 21291   0159E2  EFF5  F0AC         	goto	u33850
 21292   0159E6                     u33851:
 21293   0159E6  EF53  F0AD         	goto	l24379
 21294   0159EA                     u33850:
 21295   0159EA                     l24361:
 21296   0159EA  0E00               	movlw	0
 21297   0159EC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21298   0159EE  0E10               	movlw	16
 21299   0159F0  6E14               	movwf	___strtoxl@base^(0+1280),c
 21300   0159F2  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21301   0159F4  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21302   0159F6  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21303   0159FA  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21304   0159FE  50DF               	movf	indf2,w,c
 21305   015A00  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21306   015A02  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21307   015A06  0E20               	movlw	32
 21308   015A08  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21309   015A0A  0E9F               	movlw	159
 21310   015A0C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21311   015A0E  0E1A               	movlw	26
 21312   015A10  6017               	cpfslt	??___strtoxl^(0+1280),c
 21313   015A12  EF0D  F0AD         	goto	u33861
 21314   015A16  EF0F  F0AD         	goto	u33860
 21315   015A1A                     u33861:
 21316   015A1A  EF33  F0AD         	goto	l24373
 21317   015A1E                     u33860:
 21318   015A1E  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21319   015A22  0E9F               	movlw	159
 21320   015A24  2617               	addwf	??___strtoxl^(0+1280),f,c
 21321   015A26  0E19               	movlw	25
 21322   015A28  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21323   015A2A  EF19  F0AD         	goto	u33871
 21324   015A2E  EF1B  F0AD         	goto	u33870
 21325   015A32                     u33871:
 21326   015A32  EF20  F0AD         	goto	l24371
 21327   015A36                     u33870:
 21328   015A36  C52D  F51E         	movff	___strtoxl@c,___strtoxl$4607
 21329   015A3A  6A1F               	clrf	(___strtoxl$4607+1)^(0+1280),c
 21330   015A3C  EF27  F0AD         	goto	l3259
 21331   015A40                     l24371:
 21332   015A40  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21333   015A44  0E5F               	movlw	95
 21334   015A46  1617               	andwf	??___strtoxl^(0+1280),f,c
 21335   015A48  5017               	movf	??___strtoxl^(0+1280),w,c
 21336   015A4A  6E1E               	movwf	___strtoxl$4607^(0+1280),c
 21337   015A4C  6A1F               	clrf	(___strtoxl$4607+1)^(0+1280),c
 21338   015A4E                     l3259:
 21339   015A4E  C51E  F517         	movff	___strtoxl$4607,??___strtoxl
 21340   015A52  0EC9               	movlw	201
 21341   015A54  2617               	addwf	??___strtoxl^(0+1280),f,c
 21342   015A56  0E10               	movlw	16
 21343   015A58  6017               	cpfslt	??___strtoxl^(0+1280),c
 21344   015A5A  EF31  F0AD         	goto	u33881
 21345   015A5E  EF33  F0AD         	goto	u33880
 21346   015A62                     u33881:
 21347   015A62  EF4D  F0AD         	goto	l24377
 21348   015A66                     u33880:
 21349   015A66                     l24373:
 21350   015A66  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21351   015A6A  0E20               	movlw	32
 21352   015A6C  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21353   015A6E  0E9F               	movlw	159
 21354   015A70  2617               	addwf	??___strtoxl^(0+1280),f,c
 21355   015A72  0E19               	movlw	25
 21356   015A74  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21357   015A76  EF3F  F0AD         	goto	u33891
 21358   015A7A  EF41  F0AD         	goto	u33890
 21359   015A7E                     u33891:
 21360   015A7E  EF61  F0AD         	goto	l24385
 21361   015A82                     u33890:
 21362   015A82  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21363   015A86  0ED0               	movlw	208
 21364   015A88  2617               	addwf	??___strtoxl^(0+1280),f,c
 21365   015A8A  0E09               	movlw	9
 21366   015A8C  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21367   015A8E  EF4B  F0AD         	goto	u33901
 21368   015A92  EF4D  F0AD         	goto	u33900
 21369   015A96                     u33901:
 21370   015A96  EF61  F0AD         	goto	l24385
 21371   015A9A                     u33900:
 21372   015A9A                     l24377:
 21373   015A9A  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21374   015A9C  062B               	decf	___strtoxl@cp^(0+1280),f,c
 21375   015A9E  A0D8               	btfss	status,0,c
 21376   015AA0  062C               	decf	(___strtoxl@cp+1)^(0+1280),f,c
 21377   015AA2  EF61  F0AE         	goto	l24431
 21378   015AA6                     l24379:
 21379   015AA6  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21380   015AA8  5014               	movf	___strtoxl@base^(0+1280),w,c
 21381   015AAA  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21382   015AAC  A4D8               	btfss	status,2,c
 21383   015AAE  EF5B  F0AD         	goto	u33911
 21384   015AB2  EF5D  F0AD         	goto	u33910
 21385   015AB6                     u33911:
 21386   015AB6  EF61  F0AD         	goto	l24385
 21387   015ABA                     u33910:
 21388   015ABA  0E00               	movlw	0
 21389   015ABC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21390   015ABE  0E08               	movlw	8
 21391   015AC0  6E14               	movwf	___strtoxl@base^(0+1280),c
 21392   015AC2                     l24385:
 21393   015AC2  5014               	movf	___strtoxl@base^(0+1280),w,c
 21394   015AC4  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21395   015AC6  A4D8               	btfss	status,2,c
 21396   015AC8  EF68  F0AD         	goto	u33921
 21397   015ACC  EF6A  F0AD         	goto	u33920
 21398   015AD0                     u33921:
 21399   015AD0  EF6E  F0AD         	goto	l3262
 21400   015AD4                     u33920:
 21401   015AD4  0E00               	movlw	0
 21402   015AD6  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21403   015AD8  0E0A               	movlw	10
 21404   015ADA  6E14               	movwf	___strtoxl@base^(0+1280),c
 21405   015ADC                     l3262:
 21406   015ADC  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 21407   015ADE  B4D8               	btfsc	status,2,c
 21408   015AE0  EF74  F0AD         	goto	u33931
 21409   015AE4  EF76  F0AD         	goto	u33930
 21410   015AE8                     u33931:
 21411   015AE8  EF91  F0AD         	goto	l3263
 21412   015AEC                     u33930:
 21413   015AEC  B026               	btfsc	___strtoxl@flags^(0+1280),0,c
 21414   015AEE  EF7B  F0AD         	goto	u33941
 21415   015AF2  EF7D  F0AD         	goto	u33940
 21416   015AF6                     u33941:
 21417   015AF6  EF87  F0AD         	goto	l24393
 21418   015AFA                     u33940:
 21419   015AFA  0EFF               	movlw	255
 21420   015AFC  6E22               	movwf	___strtoxl@limit^(0+1280),c
 21421   015AFE  0EFF               	movlw	255
 21422   015B00  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 21423   015B02  0EFF               	movlw	255
 21424   015B04  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 21425   015B06  0E7F               	movlw	127
 21426   015B08  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 21427   015B0A  EF95  F0AD         	goto	l3269
 21428   015B0E                     l24393:
 21429   015B0E  0E00               	movlw	0
 21430   015B10  6E22               	movwf	___strtoxl@limit^(0+1280),c
 21431   015B12  0E00               	movlw	0
 21432   015B14  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 21433   015B16  0E00               	movlw	0
 21434   015B18  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 21435   015B1A  0E80               	movlw	128
 21436   015B1C  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 21437   015B1E  EF95  F0AD         	goto	l3269
 21438   015B22                     l3263:
 21439   015B22  6822               	setf	___strtoxl@limit^(0+1280),c
 21440   015B24  6823               	setf	(___strtoxl@limit+1)^(0+1280),c
 21441   015B26  6824               	setf	(___strtoxl@limit+2)^(0+1280),c
 21442   015B28  6825               	setf	(___strtoxl@limit+3)^(0+1280),c
 21443   015B2A                     l3269:
 21444   015B2A  C527  F51A         	movff	___strtoxl@a,___strtoxl@prev_a
 21445   015B2E  C528  F51B         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
 21446   015B32  C529  F51C         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
 21447   015B36  C52A  F51D         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
 21448   015B3A  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21449   015B3E  0E20               	movlw	32
 21450   015B40  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21451   015B42  0E9F               	movlw	159
 21452   015B44  2617               	addwf	??___strtoxl^(0+1280),f,c
 21453   015B46  0E1A               	movlw	26
 21454   015B48  6017               	cpfslt	??___strtoxl^(0+1280),c
 21455   015B4A  EFA9  F0AD         	goto	u33951
 21456   015B4E  EFAB  F0AD         	goto	u33950
 21457   015B52                     u33951:
 21458   015B52  EFC8  F0AD         	goto	l24403
 21459   015B56                     u33950:
 21460   015B56  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21461   015B5A  0E9F               	movlw	159
 21462   015B5C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21463   015B5E  0E19               	movlw	25
 21464   015B60  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21465   015B62  EFB5  F0AD         	goto	u33961
 21466   015B66  EFB7  F0AD         	goto	u33960
 21467   015B6A                     u33961:
 21468   015B6A  EFBC  F0AD         	goto	l24401
 21469   015B6E                     u33960:
 21470   015B6E  C52D  F520         	movff	___strtoxl@c,___strtoxl$4608
 21471   015B72  6A21               	clrf	(___strtoxl$4608+1)^(0+1280),c
 21472   015B74  EFC3  F0AD         	goto	l3274
 21473   015B78                     l24401:
 21474   015B78  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21475   015B7C  0E5F               	movlw	95
 21476   015B7E  1617               	andwf	??___strtoxl^(0+1280),f,c
 21477   015B80  5017               	movf	??___strtoxl^(0+1280),w,c
 21478   015B82  6E20               	movwf	___strtoxl$4608^(0+1280),c
 21479   015B84  6A21               	clrf	(___strtoxl$4608+1)^(0+1280),c
 21480   015B86                     l3274:
 21481   015B86  5020               	movf	___strtoxl$4608^(0+1280),w,c
 21482   015B88  0FC9               	addlw	201
 21483   015B8A  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21484   015B8C  EFD6  F0AD         	goto	l24407
 21485   015B90                     l24403:
 21486   015B90  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21487   015B94  0ED0               	movlw	208
 21488   015B96  2617               	addwf	??___strtoxl^(0+1280),f,c
 21489   015B98  0E0A               	movlw	10
 21490   015B9A  6017               	cpfslt	??___strtoxl^(0+1280),c
 21491   015B9C  EFD2  F0AD         	goto	u33971
 21492   015BA0  EFD4  F0AD         	goto	u33970
 21493   015BA4                     u33971:
 21494   015BA4  EF4F  F0AE         	goto	l24427
 21495   015BA8                     u33970:
 21496   015BA8  0E30               	movlw	48
 21497   015BAA  5E2D               	subwf	___strtoxl@c^(0+1280),f,c
 21498   015BAC                     l24407:
 21499   015BAC  502D               	movf	___strtoxl@c^(0+1280),w,c
 21500   015BAE  6E17               	movwf	??___strtoxl^(0+1280),c
 21501   015BB0  6A18               	clrf	(??___strtoxl+1)^(0+1280),c
 21502   015BB2  5014               	movf	___strtoxl@base^(0+1280),w,c
 21503   015BB4  5C17               	subwf	??___strtoxl^(0+1280),w,c
 21504   015BB6  5018               	movf	(??___strtoxl+1)^(0+1280),w,c
 21505   015BB8  0A80               	xorlw	128
 21506   015BBA  6E19               	movwf	(??___strtoxl+2)^(0+1280),c
 21507   015BBC  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 21508   015BBE  0A80               	xorlw	128
 21509   015BC0  5819               	subwfb	(??___strtoxl+2)^(0+1280),w,c
 21510   015BC2  A0D8               	btfss	status,0,c
 21511   015BC4  EFE6  F0AD         	goto	u33981
 21512   015BC8  EFE8  F0AD         	goto	u33980
 21513   015BCC                     u33981:
 21514   015BCC  EFEA  F0AD         	goto	l3279
 21515   015BD0                     u33980:
 21516   015BD0  EF4F  F0AE         	goto	l24427
 21517   015BD4                     l3279:
 21518   015BD4  B226               	btfsc	___strtoxl@flags^(0+1280),1,c
 21519   015BD6  EFEF  F0AD         	goto	u33991
 21520   015BDA  EFF1  F0AD         	goto	u33990
 21521   015BDE                     u33991:
 21522   015BDE  EF44  F0AE         	goto	l24423
 21523   015BE2                     u33990:
 21524   015BE2  C514  F504         	movff	___strtoxl@base,___lmul@multiplier
 21525   015BE6  C515  F505         	movff	___strtoxl@base+1,___lmul@multiplier+1
 21526   015BEA  0E00               	movlw	0
 21527   015BEC  BE05               	btfsc	(___lmul@multiplier+1)^(0+1280),7,c
 21528   015BEE  0EFF               	movlw	-1
 21529   015BF0  6E06               	movwf	(___lmul@multiplier+2)^(0+1280),c
 21530   015BF2  6E07               	movwf	(___lmul@multiplier+3)^(0+1280),c
 21531   015BF4  C527  F508         	movff	___strtoxl@a,___lmul@multiplicand
 21532   015BF8  C528  F509         	movff	___strtoxl@a+1,___lmul@multiplicand+1
 21533   015BFC  C529  F50A         	movff	___strtoxl@a+2,___lmul@multiplicand+2
 21534   015C00  C52A  F50B         	movff	___strtoxl@a+3,___lmul@multiplicand+3
 21535   015C04  EC13  F0FB         	call	___lmul	;wreg free
 21536   015C08  502D               	movf	___strtoxl@c^(0+1280),w,c
 21537   015C0A  2404               	addwf	?___lmul^(0+1280),w,c
 21538   015C0C  6E27               	movwf	___strtoxl@a^(0+1280),c
 21539   015C0E  0E00               	movlw	0
 21540   015C10  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 21541   015C12  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 21542   015C14  0E00               	movlw	0
 21543   015C16  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 21544   015C18  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 21545   015C1A  0E00               	movlw	0
 21546   015C1C  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 21547   015C1E  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 21548   015C20  501A               	movf	___strtoxl@prev_a^(0+1280),w,c
 21549   015C22  5C27               	subwf	___strtoxl@a^(0+1280),w,c
 21550   015C24  501B               	movf	(___strtoxl@prev_a+1)^(0+1280),w,c
 21551   015C26  5828               	subwfb	(___strtoxl@a+1)^(0+1280),w,c
 21552   015C28  501C               	movf	(___strtoxl@prev_a+2)^(0+1280),w,c
 21553   015C2A  5829               	subwfb	(___strtoxl@a+2)^(0+1280),w,c
 21554   015C2C  501D               	movf	(___strtoxl@prev_a+3)^(0+1280),w,c
 21555   015C2E  582A               	subwfb	(___strtoxl@a+3)^(0+1280),w,c
 21556   015C30  A0D8               	btfss	status,0,c
 21557   015C32  EF1D  F0AE         	goto	u34001
 21558   015C36  EF1F  F0AE         	goto	u34000
 21559   015C3A                     u34001:
 21560   015C3A  EF36  F0AE         	goto	l3283
 21561   015C3E                     u34000:
 21562   015C3E  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 21563   015C40  B4D8               	btfsc	status,2,c
 21564   015C42  EF25  F0AE         	goto	u34011
 21565   015C46  EF27  F0AE         	goto	u34010
 21566   015C4A                     u34011:
 21567   015C4A  EF44  F0AE         	goto	l24423
 21568   015C4E                     u34010:
 21569   015C4E  5027               	movf	___strtoxl@a^(0+1280),w,c
 21570   015C50  5C22               	subwf	___strtoxl@limit^(0+1280),w,c
 21571   015C52  5028               	movf	(___strtoxl@a+1)^(0+1280),w,c
 21572   015C54  5823               	subwfb	(___strtoxl@limit+1)^(0+1280),w,c
 21573   015C56  5029               	movf	(___strtoxl@a+2)^(0+1280),w,c
 21574   015C58  5824               	subwfb	(___strtoxl@limit+2)^(0+1280),w,c
 21575   015C5A  502A               	movf	(___strtoxl@a+3)^(0+1280),w,c
 21576   015C5C  5825               	subwfb	(___strtoxl@limit+3)^(0+1280),w,c
 21577   015C5E  B0D8               	btfsc	status,0,c
 21578   015C60  EF34  F0AE         	goto	u34021
 21579   015C64  EF36  F0AE         	goto	u34020
 21580   015C68                     u34021:
 21581   015C68  EF44  F0AE         	goto	l24423
 21582   015C6C                     u34020:
 21583   015C6C                     l3283:
 21584   015C6C  C522  F527         	movff	___strtoxl@limit,___strtoxl@a
 21585   015C70  C523  F528         	movff	___strtoxl@limit+1,___strtoxl@a+1
 21586   015C74  C524  F529         	movff	___strtoxl@limit+2,___strtoxl@a+2
 21587   015C78  C525  F52A         	movff	___strtoxl@limit+3,___strtoxl@a+3
 21588   015C7C  0E00               	movlw	0
 21589   015C7E  0107               	movlb	7	; () banked
 21590   015C80  6FB4               	movwf	(_errno+1)& (0+255),b
 21591   015C82  0E22               	movlw	34
 21592   015C84  6FB3               	movwf	_errno& (0+255),b
 21593   015C86                     
 21594                           ; BSR set to: 7
 21595   015C86  8226               	bsf	___strtoxl@flags^(0+1280),1,c
 21596   015C88                     l24423:
 21597   015C88  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21598   015C8A  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21599   015C8C  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21600   015C90  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21601   015C94  50DF               	movf	indf2,w,c
 21602   015C96  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21603   015C98  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21604   015C9A  EF95  F0AD         	goto	l3269
 21605   015C9E                     l24427:
 21606   015C9E  5026               	movf	___strtoxl@flags^(0+1280),w,c
 21607   015CA0  0B03               	andlw	3
 21608   015CA2  06E8               	decf	wreg,f,c
 21609   015CA4  A4D8               	btfss	status,2,c
 21610   015CA6  EF57  F0AE         	goto	u34031
 21611   015CAA  EF59  F0AE         	goto	u34030
 21612   015CAE                     u34031:
 21613   015CAE  EF61  F0AE         	goto	l24431
 21614   015CB2                     u34030:
 21615   015CB2  1E2A               	comf	(___strtoxl@a+3)^(0+1280),f,c
 21616   015CB4  1E29               	comf	(___strtoxl@a+2)^(0+1280),f,c
 21617   015CB6  1E28               	comf	(___strtoxl@a+1)^(0+1280),f,c
 21618   015CB8  6C27               	negf	___strtoxl@a^(0+1280),c
 21619   015CBA  0E00               	movlw	0
 21620   015CBC  2228               	addwfc	(___strtoxl@a+1)^(0+1280),f,c
 21621   015CBE  2229               	addwfc	(___strtoxl@a+2)^(0+1280),f,c
 21622   015CC0  222A               	addwfc	(___strtoxl@a+3)^(0+1280),f,c
 21623   015CC2                     l24431:
 21624   015CC2  5012               	movf	___strtoxl@endptr^(0+1280),w,c
 21625   015CC4  1013               	iorwf	(___strtoxl@endptr+1)^(0+1280),w,c
 21626   015CC6  B4D8               	btfsc	status,2,c
 21627   015CC8  EF68  F0AE         	goto	u34041
 21628   015CCC  EF6A  F0AE         	goto	u34040
 21629   015CD0                     u34041:
 21630   015CD0  EF7D  F0AE         	goto	l24439
 21631   015CD4                     u34040:
 21632   015CD4  B426               	btfsc	___strtoxl@flags^(0+1280),2,c
 21633   015CD6  EF6F  F0AE         	goto	u34051
 21634   015CDA  EF71  F0AE         	goto	u34050
 21635   015CDE                     u34051:
 21636   015CDE  EF75  F0AE         	goto	l24437
 21637   015CE2                     u34050:
 21638   015CE2  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 21639   015CE6  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 21640   015CEA                     l24437:
 21641   015CEA  C512  F4D9         	movff	___strtoxl@endptr,fsr2l
 21642   015CEE  C513  F4DA         	movff	___strtoxl@endptr+1,fsr2h
 21643   015CF2  C52B  F4DE         	movff	___strtoxl@cp,postinc2
 21644   015CF6  C52C  F4DD         	movff	___strtoxl@cp+1,postdec2
 21645   015CFA                     l24439:
 21646   015CFA  C527  F510         	movff	___strtoxl@a,?___strtoxl
 21647   015CFE  C528  F511         	movff	___strtoxl@a+1,?___strtoxl+1
 21648   015D02  C529  F512         	movff	___strtoxl@a+2,?___strtoxl+2
 21649   015D06  C52A  F513         	movff	___strtoxl@a+3,?___strtoxl+3
 21650   015D0A  0012               	return		;funcret
 21651   015D0C                     __end_of___strtoxl:
 21652                           	callstack 0
 21653                           
 21654 ;; *************** function _get_line *****************
 21655 ;; Defined at:
 21656 ;;		line 469 in file "../src/w65_main.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;  s               2   93[BANK5 ] PTR unsigned char 
 21659 ;;		 -> line_buf(81), 
 21660 ;;  length          2   95[BANK5 ] int 
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;  c               2   97[BANK5 ] int 
 21663 ;;  n               1   99[BANK5 ] unsigned char 
 21664 ;; Return value:  Size  Location     Type
 21665 ;;                  2   93[BANK5 ] int 
 21666 ;; Registers used:
 21667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21668 ;; Tracked objects:
 21669 ;;		On entry : 0/0
 21670 ;;		On exit  : 0/0
 21671 ;;		Unchanged: 0/0
 21672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21674 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21676 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21677 ;;Total ram usage:        7 bytes
 21678 ;; Hardware stack levels used: 1
 21679 ;; Hardware stack levels required when called: 9
 21680 ;; This function calls:
 21681 ;;		_getch
 21682 ;;		_printf
 21683 ;;		_putch
 21684 ;; This function is called by:
 21685 ;;		_main
 21686 ;; This function uses a non-reentrant model
 21687 ;;
 21688                           
 21689                           	psect	text42
 21690   01CE22                     __ptext42:
 21691                           	callstack 0
 21692   01CE22                     _get_line:
 21693                           	callstack 117
 21694   01CE22                     
 21695                           ;../src/w65_main.c: 470:  char n;;../src/w65_main.c: 471:  int c;;../src/w65_main.c: 473
      +                          :  for (c=0;;) {
 21696   01CE22  0E00               	movlw	0
 21697   01CE24  0105               	movlb	5	; () banked
 21698   01CE26  6FC2               	movwf	(get_line@c+1)& (0+255),b
 21699   01CE28  0E00               	movlw	0
 21700   01CE2A  6FC1               	movwf	get_line@c& (0+255),b
 21701   01CE2C                     l24933:
 21702                           
 21703                           ; BSR set to: 5
 21704                           ;../src/w65_main.c: 474:   n = (char)getch();
 21705   01CE2C  EC4E  F0FD         	call	_getch	;wreg free
 21706   01CE30  5004               	movf	?_getch^(0+1280),w,c
 21707   01CE32  0105               	movlb	5	; () banked
 21708   01CE34  6FC3               	movwf	get_line@n& (0+255),b
 21709   01CE36                     
 21710                           ; BSR set to: 5
 21711                           ;../src/w65_main.c: 475:   if ( n == 0x08 ) {
 21712   01CE36  0E08               	movlw	8
 21713   01CE38  19C3               	xorwf	get_line@n& (0+255),w,b
 21714   01CE3A  A4D8               	btfss	status,2,c
 21715   01CE3C  EF22  F0E7         	goto	u34721
 21716   01CE40  EF24  F0E7         	goto	u34720
 21717   01CE44                     u34721:
 21718   01CE44  EF43  F0E7         	goto	l24945
 21719   01CE48                     u34720:
 21720   01CE48                     
 21721                           ; BSR set to: 5
 21722                           ;../src/w65_main.c: 476:    if ( c > 0) {
 21723   01CE48  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 21724   01CE4A  EF2F  F0E7         	goto	u34731
 21725   01CE4E  51C2               	movf	(get_line@c+1)& (0+255),w,b
 21726   01CE50  E108               	bnz	u34730
 21727   01CE52  05C1               	decf	get_line@c& (0+255),w,b
 21728   01CE54  A0D8               	btfss	status,0,c
 21729   01CE56  EF2F  F0E7         	goto	u34731
 21730   01CE5A  EF31  F0E7         	goto	u34730
 21731   01CE5E                     u34731:
 21732   01CE5E  EF16  F0E7         	goto	l24933
 21733   01CE62                     u34730:
 21734   01CE62                     
 21735                           ; BSR set to: 5
 21736                           ;../src/w65_main.c: 477:     putch(0x08);
 21737   01CE62  0E08               	movlw	8
 21738   01CE64  EC03  F001         	call	_putch
 21739                           
 21740                           ;../src/w65_main.c: 478:     putch(' ');
 21741   01CE68  0E20               	movlw	32
 21742   01CE6A  EC03  F001         	call	_putch
 21743                           
 21744                           ;../src/w65_main.c: 479:     putch(0x08);
 21745   01CE6E  0E08               	movlw	8
 21746   01CE70  EC03  F001         	call	_putch
 21747   01CE74                     
 21748                           ;../src/w65_main.c: 480:     c--;
 21749   01CE74  0105               	movlb	5	; () banked
 21750   01CE76  07C1               	decf	get_line@c& (0+255),f,b
 21751   01CE78  A0D8               	btfss	status,0,c
 21752   01CE7A  07C2               	decf	(get_line@c+1)& (0+255),f,b
 21753   01CE7C                     
 21754                           ; BSR set to: 5
 21755                           ;../src/w65_main.c: 481:     s--;
 21756   01CE7C  07BD               	decf	get_line@s& (0+255),f,b
 21757   01CE7E  A0D8               	btfss	status,0,c
 21758   01CE80  07BE               	decf	(get_line@s+1)& (0+255),f,b
 21759   01CE82  EF16  F0E7         	goto	l24933
 21760   01CE86                     l24945:
 21761                           
 21762                           ; BSR set to: 5
 21763                           ;../src/w65_main.c: 485:   if ( n == 0x0d || n == 0x0a ) {
 21764   01CE86  0E0D               	movlw	13
 21765   01CE88  19C3               	xorwf	get_line@n& (0+255),w,b
 21766   01CE8A  B4D8               	btfsc	status,2,c
 21767   01CE8C  EF4A  F0E7         	goto	u34741
 21768   01CE90  EF4C  F0E7         	goto	u34740
 21769   01CE94                     u34741:
 21770   01CE94  EF55  F0E7         	goto	l24949
 21771   01CE98                     u34740:
 21772   01CE98                     
 21773                           ; BSR set to: 5
 21774   01CE98  0E0A               	movlw	10
 21775   01CE9A  19C3               	xorwf	get_line@n& (0+255),w,b
 21776   01CE9C  A4D8               	btfss	status,2,c
 21777   01CE9E  EF53  F0E7         	goto	u34751
 21778   01CEA2  EF55  F0E7         	goto	u34750
 21779   01CEA6                     u34751:
 21780   01CEA6  EF66  F0E7         	goto	l24957
 21781   01CEAA                     u34750:
 21782   01CEAA                     l24949:
 21783                           
 21784                           ; BSR set to: 5
 21785                           ;../src/w65_main.c: 486:    *s = 0x00;
 21786   01CEAA  C5BD  F4D9         	movff	get_line@s,fsr2l
 21787   01CEAE  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 21788   01CEB2  6ADF               	clrf	indf2,c
 21789   01CEB4                     
 21790                           ; BSR set to: 5
 21791                           ;../src/w65_main.c: 487:    printf("\r\n");
 21792   01CEB4  0E90               	movlw	low (STR_88+20)
 21793   01CEB6  6FAD               	movwf	printf@fmt& (0+255),b
 21794   01CEB8  0EFB               	movlw	high (STR_88+20)
 21795   01CEBA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21796   01CEBC  ECDA  F0FF         	call	_printf	;wreg free
 21797   01CEC0                     
 21798                           ;../src/w65_main.c: 488:    return c;
 21799   01CEC0  C5C1  F5BD         	movff	get_line@c,?_get_line
 21800   01CEC4  C5C2  F5BE         	movff	get_line@c+1,?_get_line+1
 21801   01CEC8  EF96  F0E7         	goto	l1196
 21802   01CECC                     l24957:
 21803                           
 21804                           ; BSR set to: 5
 21805                           ;../src/w65_main.c: 490:   if ( c <= 81 -1 ) {
 21806   01CECC  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 21807   01CECE  EF74  F0E7         	goto	u34760
 21808   01CED2  51C2               	movf	(get_line@c+1)& (0+255),w,b
 21809   01CED4  E107               	bnz	u34761
 21810   01CED6  0E51               	movlw	81
 21811   01CED8  5DC1               	subwf	get_line@c& (0+255),w,b
 21812   01CEDA  B0D8               	btfsc	status,0,c
 21813   01CEDC  EF72  F0E7         	goto	u34761
 21814   01CEE0  EF74  F0E7         	goto	u34760
 21815   01CEE4                     u34761:
 21816   01CEE4  EF16  F0E7         	goto	l24933
 21817   01CEE8                     u34760:
 21818   01CEE8                     
 21819                           ; BSR set to: 5
 21820                           ;../src/w65_main.c: 491:    putch(n);
 21821   01CEE8  51C3               	movf	get_line@n& (0+255),w,b
 21822   01CEEA  EC03  F001         	call	_putch
 21823   01CEEE                     
 21824                           ;../src/w65_main.c: 492:    if ( n >='a' && n <='z' ) n -= 0x20;
 21825   01CEEE  0E60               	movlw	96
 21826   01CEF0  0105               	movlb	5	; () banked
 21827   01CEF2  65C3               	cpfsgt	get_line@n& (0+255),b
 21828   01CEF4  EF7E  F0E7         	goto	u34771
 21829   01CEF8  EF80  F0E7         	goto	u34770
 21830   01CEFC                     u34771:
 21831   01CEFC  EF8A  F0E7         	goto	l24967
 21832   01CF00                     u34770:
 21833   01CF00                     
 21834                           ; BSR set to: 5
 21835   01CF00  0E7B               	movlw	123
 21836   01CF02  61C3               	cpfslt	get_line@n& (0+255),b
 21837   01CF04  EF86  F0E7         	goto	u34781
 21838   01CF08  EF88  F0E7         	goto	u34780
 21839   01CF0C                     u34781:
 21840   01CF0C  EF8A  F0E7         	goto	l24967
 21841   01CF10                     u34780:
 21842   01CF10                     
 21843                           ; BSR set to: 5
 21844   01CF10  0E20               	movlw	32
 21845   01CF12  5FC3               	subwf	get_line@n& (0+255),f,b
 21846   01CF14                     l24967:
 21847                           
 21848                           ; BSR set to: 5
 21849                           ;../src/w65_main.c: 493:    *s++ = n;
 21850   01CF14  C5BD  F4D9         	movff	get_line@s,fsr2l
 21851   01CF18  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 21852   01CF1C  C5C3  F4DF         	movff	get_line@n,indf2
 21853   01CF20                     
 21854                           ; BSR set to: 5
 21855   01CF20  4BBD               	infsnz	get_line@s& (0+255),f,b
 21856   01CF22  2BBE               	incf	(get_line@s+1)& (0+255),f,b
 21857   01CF24                     
 21858                           ; BSR set to: 5
 21859                           ;../src/w65_main.c: 494:    c++;
 21860   01CF24  4BC1               	infsnz	get_line@c& (0+255),f,b
 21861   01CF26  2BC2               	incf	(get_line@c+1)& (0+255),f,b
 21862   01CF28  EF16  F0E7         	goto	l24933
 21863   01CF2C                     l1196:
 21864   01CF2C  0012               	return		;funcret
 21865   01CF2E                     __end_of_get_line:
 21866                           	callstack 0
 21867                           
 21868 ;; *************** function _getch *****************
 21869 ;; Defined at:
 21870 ;;		line 138 in file "../src/boards/w65_cmn.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;		None
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  c               1    7[COMRAM] unsigned char 
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  2    3[COMRAM] int 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;Total ram usage:        5 bytes
 21889 ;; Hardware stack levels used: 1
 21890 ;; Hardware stack levels required when called: 1
 21891 ;; This function calls:
 21892 ;;		Nothing
 21893 ;; This function is called by:
 21894 ;;		_get_line
 21895 ;; This function uses a non-reentrant model
 21896 ;;
 21897                           
 21898                           	psect	text43
 21899   01FA9C                     __ptext43:
 21900                           	callstack 0
 21901   01FA9C                     _getch:
 21902                           	callstack 124
 21903   01FA9C                     l16171:
 21904   01FA9C  0107               	movlb	7	; () banked
 21905   01FA9E  51C1               	movf	_rx_cnt& (0+255),w,b
 21906   01FAA0  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 21907   01FAA2  B4D8               	btfsc	status,2,c
 21908   01FAA4  EF56  F0FD         	goto	u20691
 21909   01FAA8  EF58  F0FD         	goto	u20690
 21910   01FAAC                     u20691:
 21911   01FAAC  EF4E  F0FD         	goto	l16171
 21912   01FAB0                     u20690:
 21913   01FAB0                     
 21914                           ; BSR set to: 7
 21915                           ;../src/boards/w65_cmn.c: 142:  U3RXIE = 0;
 21916   01FAB0  90A7               	bcf	1191,0,c	;volatile
 21917   01FAB2                     
 21918                           ; BSR set to: 7
 21919                           ;../src/boards/w65_cmn.c: 143:  c = rx_buf[rx_rp];
 21920   01FAB2  0E00               	movlw	low _rx_buf
 21921   01FAB4  25C3               	addwf	_rx_rp& (0+255),w,b
 21922   01FAB6  6ED9               	movwf	fsr2l,c
 21923   01FAB8  0E0B               	movlw	high _rx_buf
 21924   01FABA  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 21925   01FABC  6EDA               	movwf	fsr2h,c
 21926   01FABE  50DF               	movf	indf2,w,c
 21927   01FAC0  6E08               	movwf	getch@c^(0+1280),c
 21928   01FAC2                     
 21929                           ; BSR set to: 7
 21930                           ;../src/boards/w65_cmn.c: 144:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 21931   01FAC2  0E01               	movlw	1
 21932   01FAC4  25C3               	addwf	_rx_rp& (0+255),w,b
 21933   01FAC6  6E06               	movwf	??_getch^(0+1280),c
 21934   01FAC8  0E00               	movlw	0
 21935   01FACA  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 21936   01FACC  6E07               	movwf	(??_getch+1)^(0+1280),c
 21937   01FACE  0E7F               	movlw	127
 21938   01FAD0  1406               	andwf	??_getch^(0+1280),w,c
 21939   01FAD2  6FC3               	movwf	_rx_rp& (0+255),b
 21940   01FAD4  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 21941   01FAD6                     
 21942                           ; BSR set to: 7
 21943                           ;../src/boards/w65_cmn.c: 145:  rx_cnt--;
 21944   01FAD6  07C1               	decf	_rx_cnt& (0+255),f,b
 21945   01FAD8  A0D8               	btfss	status,0,c
 21946   01FADA  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 21947   01FADC                     
 21948                           ; BSR set to: 7
 21949                           ;../src/boards/w65_cmn.c: 146:  U3RXIE = 1;
 21950   01FADC  80A7               	bsf	1191,0,c	;volatile
 21951   01FADE                     
 21952                           ; BSR set to: 7
 21953                           ;../src/boards/w65_cmn.c: 147:     return c;
 21954   01FADE  C508  F504         	movff	getch@c,?_getch
 21955   01FAE2  6A05               	clrf	(?_getch+1)^(0+1280),c
 21956   01FAE4                     
 21957                           ; BSR set to: 7
 21958   01FAE4  0012               	return		;funcret
 21959   01FAE6                     __end_of_getch:
 21960                           	callstack 0
 21961                           
 21962 ;; *************** function _disk_init *****************
 21963 ;; Defined at:
 21964 ;;		line 391 in file "../src/w65_main.c"
 21965 ;; Parameters:    Size  Location     Type
 21966 ;;		None
 21967 ;; Auto vars:     Size  Location     Type
 21968 ;;		None
 21969 ;; Return value:  Size  Location     Type
 21970 ;;                  2  187[BANK6 ] int 
 21971 ;; Registers used:
 21972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21973 ;; Tracked objects:
 21974 ;;		On entry : 0/0
 21975 ;;		On exit  : 0/0
 21976 ;;		Unchanged: 0/0
 21977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21978 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21981 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21982 ;;Total ram usage:        2 bytes
 21983 ;; Hardware stack levels used: 1
 21984 ;; Hardware stack levels required when called: 18
 21985 ;; This function calls:
 21986 ;;		_f_mount
 21987 ;;		_printf
 21988 ;; This function is called by:
 21989 ;;		_main
 21990 ;; This function uses a non-reentrant model
 21991 ;;
 21992                           
 21993                           	psect	text44
 21994   01F90E                     __ptext44:
 21995                           	callstack 0
 21996   01F90E                     _disk_init:
 21997                           	callstack 108
 21998   01F90E                     
 21999                           ;../src/w65_main.c: 393:     if (f_mount(&fs, "0://", 1) != FR_OK) {
 22000   01F90E  0E80               	movlw	low _fs
 22001   01F910  0106               	movlb	6	; () banked
 22002   01F912  6FAF               	movwf	f_mount@fs& (0+255),b
 22003   01F914  0E0B               	movlw	high _fs
 22004   01F916  6FB0               	movwf	(f_mount@fs+1)& (0+255),b
 22005   01F918  0EAD               	movlw	low STR_84
 22006   01F91A  6FB1               	movwf	f_mount@path& (0+255),b
 22007   01F91C  0EFF               	movlw	high STR_84
 22008   01F91E  6FB2               	movwf	(f_mount@path+1)& (0+255),b
 22009   01F920  0E01               	movlw	1
 22010   01F922  6FB3               	movwf	f_mount@opt& (0+255),b
 22011   01F924  EC21  F0EB         	call	_f_mount	;wreg free
 22012   01F928  0900               	iorlw	0
 22013   01F92A  B4D8               	btfsc	status,2,c
 22014   01F92C  EF9A  F0FC         	goto	u34491
 22015   01F930  EF9C  F0FC         	goto	u34490
 22016   01F934                     u34491:
 22017   01F934  EFAA  F0FC         	goto	l24773
 22018   01F938                     u34490:
 22019   01F938                     
 22020                           ;../src/w65_main.c: 394:         printf("Failed to mount SD Card.\n\r");
 22021   01F938  0E9E               	movlw	low STR_85
 22022   01F93A  0105               	movlb	5	; () banked
 22023   01F93C  6FAD               	movwf	printf@fmt& (0+255),b
 22024   01F93E  0EF9               	movlw	high STR_85
 22025   01F940  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22026   01F942  ECDA  F0FF         	call	_printf	;wreg free
 22027   01F946                     
 22028                           ;../src/w65_main.c: 395:         return -2;
 22029   01F946  0EFF               	movlw	255
 22030   01F948  0106               	movlb	6	; () banked
 22031   01F94A  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 22032   01F94C  0EFE               	movlw	254
 22033   01F94E  6FBB               	movwf	?_disk_init& (0+255),b
 22034   01F950  EFAF  F0FC         	goto	l1156
 22035   01F954                     l24773:
 22036                           
 22037                           ;../src/w65_main.c: 398:     return 0;
 22038   01F954  0E00               	movlw	0
 22039   01F956  0106               	movlb	6	; () banked
 22040   01F958  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 22041   01F95A  0E00               	movlw	0
 22042   01F95C  6FBB               	movwf	?_disk_init& (0+255),b
 22043   01F95E                     l1156:
 22044                           
 22045                           ; BSR set to: 6
 22046   01F95E  0012               	return		;funcret
 22047   01F960                     __end_of_disk_init:
 22048                           	callstack 0
 22049                           
 22050 ;; *************** function _f_mount *****************
 22051 ;; Defined at:
 22052 ;;		line 3659 in file "../fatfs/ff.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;  fs              2  175[BANK6 ] PTR struct .
 22055 ;;		 -> fs(564), NULL(0), 
 22056 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 22057 ;;		 -> STR_167(15), fin_name(13), STR_84(5), line_buf(81), 
 22058 ;;		 -> STR_51(11), STR_50(11), STR_49(11), STR_48(11), 
 22059 ;;		 -> NULL(0), tmp_buf(512), 
 22060 ;;  opt             1  179[BANK6 ] unsigned char 
 22061 ;; Auto vars:     Size  Location     Type
 22062 ;;  vol             2  185[BANK6 ] int 
 22063 ;;  cfs             2  183[BANK6 ] PTR struct .
 22064 ;;		 -> fs(564), NULL(0), 
 22065 ;;  rp              2  181[BANK6 ] PTR const unsigned char 
 22066 ;;		 -> STR_167(15), fin_name(13), STR_84(5), line_buf(81), 
 22067 ;;		 -> STR_51(11), STR_50(11), STR_49(11), STR_48(11), 
 22068 ;;		 -> NULL(0), tmp_buf(512), 
 22069 ;;  res             1  180[BANK6 ] enum E597
 22070 ;; Return value:  Size  Location     Type
 22071 ;;                  1    wreg      enum E17409
 22072 ;; Registers used:
 22073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22074 ;; Tracked objects:
 22075 ;;		On entry : 0/0
 22076 ;;		On exit  : 0/0
 22077 ;;		Unchanged: 0/0
 22078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22079 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22080 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22082 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;Total ram usage:       12 bytes
 22084 ;; Hardware stack levels used: 1
 22085 ;; Hardware stack levels required when called: 17
 22086 ;; This function calls:
 22087 ;;		_get_ldnumber
 22088 ;;		_mount_volume
 22089 ;; This function is called by:
 22090 ;;		_disk_init
 22091 ;; This function uses a non-reentrant model
 22092 ;;
 22093                           
 22094                           	psect	text45
 22095   01D642                     __ptext45:
 22096                           	callstack 0
 22097   01D642                     _f_mount:
 22098                           	callstack 108
 22099   01D642                     
 22100                           ;../fatfs/ff.c: 3660:  FATFS* fs,;../fatfs/ff.c: 3661:  const TCHAR* path,;../fatfs/ff.c
      +                          : 3662:  BYTE opt;../fatfs/ff.c: 3664: {;../fatfs/ff.c: 3665:  FATFS *cfs;;../fatfs/ff.c
      +                          : 3666:  int vol;;../fatfs/ff.c: 3667:  FRESULT res;;../fatfs/ff.c: 3668:  const TCHAR *
      +                          rp = path;
 22101   01D642  C6B1  F6B5         	movff	f_mount@path,f_mount@rp
 22102   01D646  C6B2  F6B6         	movff	f_mount@path+1,f_mount@rp+1
 22103   01D64A                     
 22104                           ;../fatfs/ff.c: 3672:  vol = get_ldnumber(&rp);
 22105   01D64A  0EB5               	movlw	low f_mount@rp
 22106   01D64C  6E04               	movwf	get_ldnumber@path^(0+1280),c
 22107   01D64E  0E06               	movlw	high f_mount@rp
 22108   01D650  6E05               	movwf	(get_ldnumber@path+1)^(0+1280),c
 22109   01D652  EC82  F0D9         	call	_get_ldnumber	;wreg free
 22110   01D656  C504  F6B9         	movff	?_get_ldnumber,f_mount@vol
 22111   01D65A  C505  F6BA         	movff	?_get_ldnumber+1,f_mount@vol+1
 22112   01D65E                     
 22113                           ;../fatfs/ff.c: 3673:  if (vol < 0) return FR_INVALID_DRIVE;
 22114   01D65E  0106               	movlb	6	; () banked
 22115   01D660  BFBA               	btfsc	(f_mount@vol+1)& (0+255),7,b
 22116   01D662  EF37  F0EB         	goto	u33690
 22117   01D666  EF35  F0EB         	goto	u33691
 22118   01D66A                     u33691:
 22119   01D66A  EF3A  F0EB         	goto	l24289
 22120   01D66E                     u33690:
 22121   01D66E                     
 22122                           ; BSR set to: 6
 22123   01D66E  0E0B               	movlw	11
 22124   01D670  EF9D  F0EB         	goto	l1866
 22125   01D674                     l24289:
 22126                           
 22127                           ; BSR set to: 6
 22128                           ;../fatfs/ff.c: 3674:  cfs = FatFs[vol];
 22129   01D674  90D8               	bcf	status,0,c
 22130   01D676  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22131   01D678  6ED9               	movwf	fsr2l,c
 22132   01D67A  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22133   01D67C  6EDA               	movwf	fsr2h,c
 22134   01D67E  0EB7               	movlw	low _FatFs
 22135   01D680  26D9               	addwf	fsr2l,f,c
 22136   01D682  0E07               	movlw	high _FatFs
 22137   01D684  22DA               	addwfc	fsr2h,f,c
 22138   01D686  C4DE F6B7          	movff	postinc2,f_mount@cfs
 22139   01D68A  C4DD F6B8          	movff	postdec2,f_mount@cfs+1
 22140   01D68E                     
 22141                           ; BSR set to: 6
 22142                           ;../fatfs/ff.c: 3676:  if (cfs) {
 22143   01D68E  51B7               	movf	f_mount@cfs& (0+255),w,b
 22144   01D690  11B8               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 22145   01D692  B4D8               	btfsc	status,2,c
 22146   01D694  EF4E  F0EB         	goto	u33701
 22147   01D698  EF50  F0EB         	goto	u33700
 22148   01D69C                     u33701:
 22149   01D69C  EF60  F0EB         	goto	l1867
 22150   01D6A0                     u33700:
 22151   01D6A0                     
 22152                           ; BSR set to: 6
 22153                           ;../fatfs/ff.c: 3677:   FatFs[vol] = 0;
 22154   01D6A0  90D8               	bcf	status,0,c
 22155   01D6A2  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22156   01D6A4  6ED9               	movwf	fsr2l,c
 22157   01D6A6  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22158   01D6A8  6EDA               	movwf	fsr2h,c
 22159   01D6AA  0EB7               	movlw	low _FatFs
 22160   01D6AC  26D9               	addwf	fsr2l,f,c
 22161   01D6AE  0E07               	movlw	high _FatFs
 22162   01D6B0  22DA               	addwfc	fsr2h,f,c
 22163   01D6B2  6ADE               	clrf	postinc2,c
 22164   01D6B4  6ADD               	clrf	postdec2,c
 22165   01D6B6                     
 22166                           ; BSR set to: 6
 22167                           ;../fatfs/ff.c: 3684:   cfs->fs_type = 0;
 22168   01D6B6  C6B7  F4D9         	movff	f_mount@cfs,fsr2l
 22169   01D6BA  C6B8  F4DA         	movff	f_mount@cfs+1,fsr2h
 22170   01D6BE  6ADF               	clrf	indf2,c
 22171   01D6C0                     l1867:
 22172                           
 22173                           ; BSR set to: 6
 22174                           ;../fatfs/ff.c: 3687:  if (fs) {
 22175   01D6C0  51AF               	movf	f_mount@fs& (0+255),w,b
 22176   01D6C2  11B0               	iorwf	(f_mount@fs+1)& (0+255),w,b
 22177   01D6C4  B4D8               	btfsc	status,2,c
 22178   01D6C6  EF67  F0EB         	goto	u33711
 22179   01D6CA  EF69  F0EB         	goto	u33710
 22180   01D6CE                     u33711:
 22181   01D6CE  EF83  F0EB         	goto	l24303
 22182   01D6D2                     u33710:
 22183   01D6D2                     
 22184                           ; BSR set to: 6
 22185                           ;../fatfs/ff.c: 3688:   fs->pdrv = (BYTE)(vol);
 22186   01D6D2  EE20 F001          	lfsr	2,1
 22187   01D6D6  51AF               	movf	f_mount@fs& (0+255),w,b
 22188   01D6D8  26D9               	addwf	fsr2l,f,c
 22189   01D6DA  51B0               	movf	(f_mount@fs+1)& (0+255),w,b
 22190   01D6DC  22DA               	addwfc	fsr2h,f,c
 22191   01D6DE  C6B9  F4DF         	movff	f_mount@vol,indf2
 22192   01D6E2                     
 22193                           ; BSR set to: 6
 22194                           ;../fatfs/ff.c: 3702:   fs->fs_type = 0;
 22195   01D6E2  C6AF  F4D9         	movff	f_mount@fs,fsr2l
 22196   01D6E6  C6B0  F4DA         	movff	f_mount@fs+1,fsr2h
 22197   01D6EA  6ADF               	clrf	indf2,c
 22198   01D6EC                     
 22199                           ; BSR set to: 6
 22200                           ;../fatfs/ff.c: 3703:   FatFs[vol] = fs;
 22201   01D6EC  90D8               	bcf	status,0,c
 22202   01D6EE  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22203   01D6F0  6ED9               	movwf	fsr2l,c
 22204   01D6F2  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22205   01D6F4  6EDA               	movwf	fsr2h,c
 22206   01D6F6  0EB7               	movlw	low _FatFs
 22207   01D6F8  26D9               	addwf	fsr2l,f,c
 22208   01D6FA  0E07               	movlw	high _FatFs
 22209   01D6FC  22DA               	addwfc	fsr2h,f,c
 22210   01D6FE  C6AF  F4DE         	movff	f_mount@fs,postinc2
 22211   01D702  C6B0  F4DD         	movff	f_mount@fs+1,postdec2
 22212   01D706                     l24303:
 22213                           
 22214                           ; BSR set to: 6
 22215                           ;../fatfs/ff.c: 3706:  if (opt == 0) return FR_OK;
 22216   01D706  51B3               	movf	f_mount@opt& (0+255),w,b
 22217   01D708  A4D8               	btfss	status,2,c
 22218   01D70A  EF89  F0EB         	goto	u33721
 22219   01D70E  EF8B  F0EB         	goto	u33720
 22220   01D712                     u33721:
 22221   01D712  EF8E  F0EB         	goto	l24309
 22222   01D716                     u33720:
 22223   01D716                     
 22224                           ; BSR set to: 6
 22225   01D716  0E00               	movlw	0
 22226   01D718  EF9D  F0EB         	goto	l1866
 22227   01D71C                     l24309:
 22228                           
 22229                           ; BSR set to: 6
 22230                           ;../fatfs/ff.c: 3708:  res = mount_volume(&path, &fs, 0);
 22231   01D71C  0EB1               	movlw	low f_mount@path
 22232   01D71E  6F81               	movwf	mount_volume@path& (0+255),b
 22233   01D720  0E06               	movlw	high f_mount@path
 22234   01D722  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 22235   01D724  0EAF               	movlw	low f_mount@fs
 22236   01D726  6F83               	movwf	mount_volume@rfs& (0+255),b
 22237   01D728  0E06               	movlw	high f_mount@fs
 22238   01D72A  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 22239   01D72C  0E00               	movlw	0
 22240   01D72E  6F85               	movwf	mount_volume@mode& (0+255),b
 22241   01D730  EC00  F080         	call	_mount_volume	;wreg free
 22242   01D734  0106               	movlb	6	; () banked
 22243   01D736  6FB4               	movwf	f_mount@res& (0+255),b
 22244   01D738                     
 22245                           ; BSR set to: 6
 22246                           ;../fatfs/ff.c: 3709:  return res;
 22247   01D738  51B4               	movf	f_mount@res& (0+255),w,b
 22248   01D73A                     l1866:
 22249                           
 22250                           ; BSR set to: 6
 22251   01D73A  0012               	return		;funcret
 22252   01D73C                     __end_of_f_mount:
 22253                           	callstack 0
 22254                           
 22255 ;; *************** function _clk_init *****************
 22256 ;; Defined at:
 22257 ;;		line 316 in file "../src/boards/w65_cmn.c"
 22258 ;; Parameters:    Size  Location     Type
 22259 ;;		None
 22260 ;; Auto vars:     Size  Location     Type
 22261 ;;		None
 22262 ;; Return value:  Size  Location     Type
 22263 ;;                  1    wreg      void 
 22264 ;; Registers used:
 22265 ;;		wreg, status,2
 22266 ;; Tracked objects:
 22267 ;;		On entry : 0/0
 22268 ;;		On exit  : 0/0
 22269 ;;		Unchanged: 0/0
 22270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;Total ram usage:        0 bytes
 22276 ;; Hardware stack levels used: 1
 22277 ;; Hardware stack levels required when called: 1
 22278 ;; This function calls:
 22279 ;;		Nothing
 22280 ;; This function is called by:
 22281 ;;		_main
 22282 ;; This function uses a non-reentrant model
 22283 ;;
 22284                           
 22285                           	psect	text46
 22286   00016C                     __ptext46:
 22287                           	callstack 0
 22288   00016C                     _clk_init:
 22289                           	callstack 125
 22290   00016C                     
 22291                           ;../src/boards/w65_cmn.c: 320:  NCO1INC = 65536;
 22292   00016C  0E00               	movlw	0
 22293   00016E  0104               	movlb	4	; () banked
 22294   000170  6F43               	movwf	67,b	;volatile
 22295   000172  0E00               	movlw	0
 22296   000174  6F44               	movwf	68,b	;volatile
 22297   000176  0E01               	movlw	1
 22298   000178  6F45               	movwf	69,b	;volatile
 22299   00017A                     
 22300                           ; BSR set to: 4
 22301                           ;../src/boards/w65_cmn.c: 321:  NCO1CLK = 0x00;
 22302   00017A  6B47               	clrf	71,b	;volatile
 22303   00017C                     
 22304                           ; BSR set to: 4
 22305                           ;../src/boards/w65_cmn.c: 322:  NCO1PFM = 0;
 22306   00017C  9146               	bcf	70,0,b	;volatile
 22307   00017E                     
 22308                           ; BSR set to: 4
 22309                           ;../src/boards/w65_cmn.c: 323:  NCO1OUT = 1;
 22310   00017E  8B46               	bsf	70,5,b	;volatile
 22311   000180                     
 22312                           ; BSR set to: 4
 22313                           ;../src/boards/w65_cmn.c: 325:  NCO1EN = 1;
 22314   000180  8F46               	bsf	70,7,b	;volatile
 22315                           
 22316                           ;../src/boards/w65_cmn.c: 326:  RA3PPS = 0x3f;
 22317   000182  0E3F               	movlw	63
 22318   000184  0102               	movlb	2	; () banked
 22319   000186  6F04               	movwf	4,b	;volatile
 22320   000188                     
 22321                           ; BSR set to: 2
 22322   000188  0012               	return		;funcret
 22323   00018A                     __end_of_clk_init:
 22324                           	callstack 0
 22325                           
 22326 ;; *************** function _clc_init *****************
 22327 ;; Defined at:
 22328 ;;		line 63 in file "../src/boards/w65_bd.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;		None
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;		None
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      void 
 22335 ;; Registers used:
 22336 ;;		wreg, status,2
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22346 ;;Total ram usage:        0 bytes
 22347 ;; Hardware stack levels used: 1
 22348 ;; Hardware stack levels required when called: 1
 22349 ;; This function calls:
 22350 ;;		Nothing
 22351 ;; This function is called by:
 22352 ;;		_main
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text47
 22357   01C120                     __ptext47:
 22358                           	callstack 0
 22359   01C120                     _clc_init:
 22360                           	callstack 125
 22361   01C120                     
 22362                           ;../src/boards/w65_bd.c: 70:  CLCSELECT = 0;
 22363   01C120  0100               	movlb	0	; () banked
 22364   01C122  6BD5               	clrf	213,b	;volatile
 22365   01C124                     
 22366                           ; BSR set to: 0
 22367                           ;../src/boards/w65_bd.c: 72:  CLCnSEL0 = 0x2a;
 22368   01C124  0E2A               	movlw	42
 22369   01C126  6FD8               	movwf	216,b	;volatile
 22370                           
 22371                           ;../src/boards/w65_bd.c: 73:     CLCnSEL1 = 127;
 22372   01C128  0E7F               	movlw	127
 22373   01C12A  6FD9               	movwf	217,b	;volatile
 22374                           
 22375                           ;../src/boards/w65_bd.c: 74:  CLCnSEL2 = 127;
 22376   01C12C  0E7F               	movlw	127
 22377   01C12E  6FDA               	movwf	218,b	;volatile
 22378                           
 22379                           ;../src/boards/w65_bd.c: 75:  CLCnSEL3 = 127;
 22380   01C130  0E7F               	movlw	127
 22381   01C132  6FDB               	movwf	219,b	;volatile
 22382                           
 22383                           ;../src/boards/w65_bd.c: 77:     CLCnGLS0 = 0x02;
 22384   01C134  0E02               	movlw	2
 22385   01C136  6FDC               	movwf	220,b	;volatile
 22386   01C138                     
 22387                           ; BSR set to: 0
 22388                           ;../src/boards/w65_bd.c: 78:  CLCnGLS1 = 0x00;
 22389   01C138  6BDD               	clrf	221,b	;volatile
 22390   01C13A                     
 22391                           ; BSR set to: 0
 22392                           ;../src/boards/w65_bd.c: 79:     CLCnGLS2 = 0x00;
 22393   01C13A  6BDE               	clrf	222,b	;volatile
 22394   01C13C                     
 22395                           ; BSR set to: 0
 22396                           ;../src/boards/w65_bd.c: 80:     CLCnGLS3 = 0x00;
 22397   01C13C  6BDF               	clrf	223,b	;volatile
 22398   01C13E                     
 22399                           ; BSR set to: 0
 22400                           ;../src/boards/w65_bd.c: 82:     CLCnPOL = 0x00;
 22401   01C13E  6BD7               	clrf	215,b	;volatile
 22402                           
 22403                           ;../src/boards/w65_bd.c: 83:     CLCnCON = 0x84;
 22404   01C140  0E84               	movlw	132
 22405   01C142  6FD6               	movwf	214,b	;volatile
 22406   01C144                     
 22407                           ; BSR set to: 0
 22408                           ;../src/boards/w65_bd.c: 88:  G3POL = 1;
 22409   01C144  85D7               	bsf	215,2,b	;volatile
 22410   01C146                     
 22411                           ; BSR set to: 0
 22412                           ;../src/boards/w65_bd.c: 89:  G3POL = 0;
 22413   01C146  95D7               	bcf	215,2,b	;volatile
 22414                           
 22415                           ;../src/boards/w65_bd.c: 91:  RA0PPS = 0x01;
 22416   01C148  0E01               	movlw	1
 22417   01C14A  0102               	movlb	2	; () banked
 22418   01C14C  6F01               	movwf	1,b	;volatile
 22419                           
 22420                           ;../src/boards/w65_bd.c: 95:  CLCSELECT = 1;
 22421   01C14E  0E01               	movlw	1
 22422   01C150  0100               	movlb	0	; () banked
 22423   01C152  6FD5               	movwf	213,b	;volatile
 22424                           
 22425                           ;../src/boards/w65_bd.c: 97:  CLCnSEL0 = 0x2a;
 22426   01C154  0E2A               	movlw	42
 22427   01C156  6FD8               	movwf	216,b	;volatile
 22428                           
 22429                           ;../src/boards/w65_bd.c: 98:  CLCnSEL1 = 0x38;
 22430   01C158  0E38               	movlw	56
 22431   01C15A  6FD9               	movwf	217,b	;volatile
 22432                           
 22433                           ;../src/boards/w65_bd.c: 99:  CLCnSEL2 = 0x3a;
 22434   01C15C  0E3A               	movlw	58
 22435   01C15E  6FDA               	movwf	218,b	;volatile
 22436                           
 22437                           ;../src/boards/w65_bd.c: 100:  CLCnSEL3 = 127;
 22438   01C160  0E7F               	movlw	127
 22439   01C162  6FDB               	movwf	219,b	;volatile
 22440                           
 22441                           ;../src/boards/w65_bd.c: 102:     CLCnGLS0 = 0x02;
 22442   01C164  0E02               	movlw	2
 22443   01C166  6FDC               	movwf	220,b	;volatile
 22444                           
 22445                           ;../src/boards/w65_bd.c: 103:  CLCnGLS1 = 0x08;
 22446   01C168  0E08               	movlw	8
 22447   01C16A  6FDD               	movwf	221,b	;volatile
 22448                           
 22449                           ;../src/boards/w65_bd.c: 104:  CLCnGLS2 = 0x20;
 22450   01C16C  0E20               	movlw	32
 22451   01C16E  6FDE               	movwf	222,b	;volatile
 22452   01C170                     
 22453                           ; BSR set to: 0
 22454                           ;../src/boards/w65_bd.c: 105:     CLCnGLS3 = 0x00;
 22455   01C170  6BDF               	clrf	223,b	;volatile
 22456                           
 22457                           ;../src/boards/w65_bd.c: 107:     CLCnPOL = 0x80;
 22458   01C172  0E80               	movlw	128
 22459   01C174  6FD7               	movwf	215,b	;volatile
 22460                           
 22461                           ;../src/boards/w65_bd.c: 108:     CLCnCON = 0x84;
 22462   01C176  0E84               	movlw	132
 22463   01C178  6FD6               	movwf	214,b	;volatile
 22464                           
 22465                           ;../src/boards/w65_bd.c: 112:  CLCSELECT = 2;
 22466   01C17A  0E02               	movlw	2
 22467   01C17C  6FD5               	movwf	213,b	;volatile
 22468                           
 22469                           ;../src/boards/w65_bd.c: 114:  CLCnSEL0 = 0x2a;
 22470   01C17E  0E2A               	movlw	42
 22471   01C180  6FD8               	movwf	216,b	;volatile
 22472                           
 22473                           ;../src/boards/w65_bd.c: 115:     CLCnSEL1 = 0x34;
 22474   01C182  0E34               	movlw	52
 22475   01C184  6FD9               	movwf	217,b	;volatile
 22476                           
 22477                           ;../src/boards/w65_bd.c: 116:  CLCnSEL2 = 0x3a;
 22478   01C186  0E3A               	movlw	58
 22479   01C188  6FDA               	movwf	218,b	;volatile
 22480                           
 22481                           ;../src/boards/w65_bd.c: 117:  CLCnSEL3 = 127;
 22482   01C18A  0E7F               	movlw	127
 22483   01C18C  6FDB               	movwf	219,b	;volatile
 22484                           
 22485                           ;../src/boards/w65_bd.c: 119:     CLCnGLS0 = 0x02;
 22486   01C18E  0E02               	movlw	2
 22487   01C190  6FDC               	movwf	220,b	;volatile
 22488                           
 22489                           ;../src/boards/w65_bd.c: 120:  CLCnGLS1 = 0x04;
 22490   01C192  0E04               	movlw	4
 22491   01C194  6FDD               	movwf	221,b	;volatile
 22492                           
 22493                           ;../src/boards/w65_bd.c: 121:  CLCnGLS2 = 0x20;
 22494   01C196  0E20               	movlw	32
 22495   01C198  6FDE               	movwf	222,b	;volatile
 22496   01C19A                     
 22497                           ; BSR set to: 0
 22498                           ;../src/boards/w65_bd.c: 122:     CLCnGLS3 = 0x00;
 22499   01C19A  6BDF               	clrf	223,b	;volatile
 22500   01C19C                     
 22501                           ; BSR set to: 0
 22502                           ;../src/boards/w65_bd.c: 124:     CLCnPOL = 0x00;
 22503   01C19C  6BD7               	clrf	215,b	;volatile
 22504                           
 22505                           ;../src/boards/w65_bd.c: 125:     CLCnCON = 0x84;
 22506   01C19E  0E84               	movlw	132
 22507   01C1A0  6FD6               	movwf	214,b	;volatile
 22508   01C1A2                     
 22509                           ; BSR set to: 0
 22510                           ;../src/boards/w65_bd.c: 127:  G3POL = 1;
 22511   01C1A2  85D7               	bsf	215,2,b	;volatile
 22512   01C1A4                     
 22513                           ; BSR set to: 0
 22514                           ;../src/boards/w65_bd.c: 128:  G3POL = 0;
 22515   01C1A4  95D7               	bcf	215,2,b	;volatile
 22516                           
 22517                           ;../src/boards/w65_bd.c: 132:  CLCSELECT = 3;
 22518   01C1A6  0E03               	movlw	3
 22519   01C1A8  6FD5               	movwf	213,b	;volatile
 22520                           
 22521                           ;../src/boards/w65_bd.c: 134:  CLCnSEL0 = 0x2a;
 22522   01C1AA  0E2A               	movlw	42
 22523   01C1AC  6FD8               	movwf	216,b	;volatile
 22524                           
 22525                           ;../src/boards/w65_bd.c: 135:     CLCnSEL1 = 0x35;
 22526   01C1AE  0E35               	movlw	53
 22527   01C1B0  6FD9               	movwf	217,b	;volatile
 22528                           
 22529                           ;../src/boards/w65_bd.c: 136:  CLCnSEL2 = 0x3a;
 22530   01C1B2  0E3A               	movlw	58
 22531   01C1B4  6FDA               	movwf	218,b	;volatile
 22532                           
 22533                           ;../src/boards/w65_bd.c: 137:  CLCnSEL3 = 127;
 22534   01C1B6  0E7F               	movlw	127
 22535   01C1B8  6FDB               	movwf	219,b	;volatile
 22536                           
 22537                           ;../src/boards/w65_bd.c: 139:     CLCnGLS0 = 0x02;
 22538   01C1BA  0E02               	movlw	2
 22539   01C1BC  6FDC               	movwf	220,b	;volatile
 22540                           
 22541                           ;../src/boards/w65_bd.c: 140:  CLCnGLS1 = 0x08;
 22542   01C1BE  0E08               	movlw	8
 22543   01C1C0  6FDD               	movwf	221,b	;volatile
 22544                           
 22545                           ;../src/boards/w65_bd.c: 141:  CLCnGLS2 = 0x20;
 22546   01C1C2  0E20               	movlw	32
 22547   01C1C4  6FDE               	movwf	222,b	;volatile
 22548   01C1C6                     
 22549                           ; BSR set to: 0
 22550                           ;../src/boards/w65_bd.c: 142:     CLCnGLS3 = 0x00;
 22551   01C1C6  6BDF               	clrf	223,b	;volatile
 22552   01C1C8                     
 22553                           ; BSR set to: 0
 22554                           ;../src/boards/w65_bd.c: 144:     CLCnPOL = 0x00;
 22555   01C1C8  6BD7               	clrf	215,b	;volatile
 22556                           
 22557                           ;../src/boards/w65_bd.c: 145:     CLCnCON = 0x84;
 22558   01C1CA  0E84               	movlw	132
 22559   01C1CC  6FD6               	movwf	214,b	;volatile
 22560   01C1CE                     
 22561                           ; BSR set to: 0
 22562                           ;../src/boards/w65_bd.c: 147:  G3POL = 1;
 22563   01C1CE  85D7               	bsf	215,2,b	;volatile
 22564   01C1D0                     
 22565                           ; BSR set to: 0
 22566                           ;../src/boards/w65_bd.c: 148:  G3POL = 0;
 22567   01C1D0  95D7               	bcf	215,2,b	;volatile
 22568                           
 22569                           ;../src/boards/w65_bd.c: 152:  CLCSELECT = 4;
 22570   01C1D2  0E04               	movlw	4
 22571   01C1D4  6FD5               	movwf	213,b	;volatile
 22572                           
 22573                           ;../src/boards/w65_bd.c: 154:  CLCnSEL0 = 0x2a;
 22574   01C1D6  0E2A               	movlw	42
 22575   01C1D8  6FD8               	movwf	216,b	;volatile
 22576                           
 22577                           ;../src/boards/w65_bd.c: 155:     CLCnSEL1 = 0x36;
 22578   01C1DA  0E36               	movlw	54
 22579   01C1DC  6FD9               	movwf	217,b	;volatile
 22580                           
 22581                           ;../src/boards/w65_bd.c: 156:  CLCnSEL2 = 0x3a;
 22582   01C1DE  0E3A               	movlw	58
 22583   01C1E0  6FDA               	movwf	218,b	;volatile
 22584                           
 22585                           ;../src/boards/w65_bd.c: 157:  CLCnSEL3 = 127;
 22586   01C1E2  0E7F               	movlw	127
 22587   01C1E4  6FDB               	movwf	219,b	;volatile
 22588                           
 22589                           ;../src/boards/w65_bd.c: 159:     CLCnGLS0 = 0x02;
 22590   01C1E6  0E02               	movlw	2
 22591   01C1E8  6FDC               	movwf	220,b	;volatile
 22592                           
 22593                           ;../src/boards/w65_bd.c: 160:  CLCnGLS1 = 0x08;
 22594   01C1EA  0E08               	movlw	8
 22595   01C1EC  6FDD               	movwf	221,b	;volatile
 22596                           
 22597                           ;../src/boards/w65_bd.c: 161:  CLCnGLS2 = 0x20;
 22598   01C1EE  0E20               	movlw	32
 22599   01C1F0  6FDE               	movwf	222,b	;volatile
 22600   01C1F2                     
 22601                           ; BSR set to: 0
 22602                           ;../src/boards/w65_bd.c: 162:     CLCnGLS3 = 0x00;
 22603   01C1F2  6BDF               	clrf	223,b	;volatile
 22604   01C1F4                     
 22605                           ; BSR set to: 0
 22606                           ;../src/boards/w65_bd.c: 164:     CLCnPOL = 0x00;
 22607   01C1F4  6BD7               	clrf	215,b	;volatile
 22608                           
 22609                           ;../src/boards/w65_bd.c: 165:     CLCnCON = 0x84;
 22610   01C1F6  0E84               	movlw	132
 22611   01C1F8  6FD6               	movwf	214,b	;volatile
 22612   01C1FA                     
 22613                           ; BSR set to: 0
 22614                           ;../src/boards/w65_bd.c: 167:  G3POL = 1;
 22615   01C1FA  85D7               	bsf	215,2,b	;volatile
 22616   01C1FC                     
 22617                           ; BSR set to: 0
 22618                           ;../src/boards/w65_bd.c: 168:  G3POL = 0;
 22619   01C1FC  95D7               	bcf	215,2,b	;volatile
 22620                           
 22621                           ;../src/boards/w65_bd.c: 172:  CLCSELECT = 5;
 22622   01C1FE  0E05               	movlw	5
 22623   01C200  6FD5               	movwf	213,b	;volatile
 22624                           
 22625                           ;../src/boards/w65_bd.c: 174:  CLCnSEL0 = 0x2a;
 22626   01C202  0E2A               	movlw	42
 22627   01C204  6FD8               	movwf	216,b	;volatile
 22628                           
 22629                           ;../src/boards/w65_bd.c: 175:     CLCnSEL1 = 0x37;
 22630   01C206  0E37               	movlw	55
 22631   01C208  6FD9               	movwf	217,b	;volatile
 22632                           
 22633                           ;../src/boards/w65_bd.c: 176:  CLCnSEL2 = 0x3a;
 22634   01C20A  0E3A               	movlw	58
 22635   01C20C  6FDA               	movwf	218,b	;volatile
 22636                           
 22637                           ;../src/boards/w65_bd.c: 177:  CLCnSEL3 = 127;
 22638   01C20E  0E7F               	movlw	127
 22639   01C210  6FDB               	movwf	219,b	;volatile
 22640                           
 22641                           ;../src/boards/w65_bd.c: 179:     CLCnGLS0 = 0x02;
 22642   01C212  0E02               	movlw	2
 22643   01C214  6FDC               	movwf	220,b	;volatile
 22644                           
 22645                           ;../src/boards/w65_bd.c: 180:  CLCnGLS1 = 0x08;
 22646   01C216  0E08               	movlw	8
 22647   01C218  6FDD               	movwf	221,b	;volatile
 22648                           
 22649                           ;../src/boards/w65_bd.c: 181:  CLCnGLS2 = 0x20;
 22650   01C21A  0E20               	movlw	32
 22651   01C21C  6FDE               	movwf	222,b	;volatile
 22652   01C21E                     
 22653                           ; BSR set to: 0
 22654                           ;../src/boards/w65_bd.c: 182:     CLCnGLS3 = 0x00;
 22655   01C21E  6BDF               	clrf	223,b	;volatile
 22656   01C220                     
 22657                           ; BSR set to: 0
 22658                           ;../src/boards/w65_bd.c: 184:     CLCnPOL = 0x00;
 22659   01C220  6BD7               	clrf	215,b	;volatile
 22660                           
 22661                           ;../src/boards/w65_bd.c: 185:     CLCnCON = 0x84;
 22662   01C222  0E84               	movlw	132
 22663   01C224  6FD6               	movwf	214,b	;volatile
 22664   01C226                     
 22665                           ; BSR set to: 0
 22666                           ;../src/boards/w65_bd.c: 187:  G3POL = 1;
 22667   01C226  85D7               	bsf	215,2,b	;volatile
 22668   01C228                     
 22669                           ; BSR set to: 0
 22670                           ;../src/boards/w65_bd.c: 188:  G3POL = 0;
 22671   01C228  95D7               	bcf	215,2,b	;volatile
 22672                           
 22673                           ;../src/boards/w65_bd.c: 192:  CLCSELECT = 6;
 22674   01C22A  0E06               	movlw	6
 22675   01C22C  6FD5               	movwf	213,b	;volatile
 22676                           
 22677                           ;../src/boards/w65_bd.c: 194:  CLCnSEL0 = 0x2a;
 22678   01C22E  0E2A               	movlw	42
 22679   01C230  6FD8               	movwf	216,b	;volatile
 22680                           
 22681                           ;../src/boards/w65_bd.c: 195:  CLCnSEL1 = 0x38;
 22682   01C232  0E38               	movlw	56
 22683   01C234  6FD9               	movwf	217,b	;volatile
 22684                           
 22685                           ;../src/boards/w65_bd.c: 196:  CLCnSEL2 = 127;
 22686   01C236  0E7F               	movlw	127
 22687   01C238  6FDA               	movwf	218,b	;volatile
 22688                           
 22689                           ;../src/boards/w65_bd.c: 197:  CLCnSEL3 = 127;
 22690   01C23A  0E7F               	movlw	127
 22691   01C23C  6FDB               	movwf	219,b	;volatile
 22692                           
 22693                           ;../src/boards/w65_bd.c: 199:     CLCnGLS0 = 0x02;
 22694   01C23E  0E02               	movlw	2
 22695   01C240  6FDC               	movwf	220,b	;volatile
 22696                           
 22697                           ;../src/boards/w65_bd.c: 200:  CLCnGLS1 = 0x08;
 22698   01C242  0E08               	movlw	8
 22699   01C244  6FDD               	movwf	221,b	;volatile
 22700   01C246                     
 22701                           ; BSR set to: 0
 22702                           ;../src/boards/w65_bd.c: 201:     CLCnGLS2 = 0x00;
 22703   01C246  6BDE               	clrf	222,b	;volatile
 22704   01C248                     
 22705                           ; BSR set to: 0
 22706                           ;../src/boards/w65_bd.c: 202:     CLCnGLS3 = 0x00;
 22707   01C248  6BDF               	clrf	223,b	;volatile
 22708   01C24A                     
 22709                           ; BSR set to: 0
 22710                           ;../src/boards/w65_bd.c: 204:     CLCnPOL = 0x00;
 22711   01C24A  6BD7               	clrf	215,b	;volatile
 22712                           
 22713                           ;../src/boards/w65_bd.c: 205:     CLCnCON = 0x84;
 22714   01C24C  0E84               	movlw	132
 22715   01C24E  6FD6               	movwf	214,b	;volatile
 22716   01C250                     
 22717                           ; BSR set to: 0
 22718                           ;../src/boards/w65_bd.c: 207:  G3POL = 1;
 22719   01C250  85D7               	bsf	215,2,b	;volatile
 22720   01C252                     
 22721                           ; BSR set to: 0
 22722                           ;../src/boards/w65_bd.c: 208:  G3POL = 0;
 22723   01C252  95D7               	bcf	215,2,b	;volatile
 22724                           
 22725                           ;../src/boards/w65_bd.c: 212:  CLCSELECT = 7;
 22726   01C254  0E07               	movlw	7
 22727   01C256  6FD5               	movwf	213,b	;volatile
 22728                           
 22729                           ;../src/boards/w65_bd.c: 214:  CLCnSEL0 = 0x2a;
 22730   01C258  0E2A               	movlw	42
 22731   01C25A  6FD8               	movwf	216,b	;volatile
 22732                           
 22733                           ;../src/boards/w65_bd.c: 215:  CLCnSEL1 = 0x39;
 22734   01C25C  0E39               	movlw	57
 22735   01C25E  6FD9               	movwf	217,b	;volatile
 22736                           
 22737                           ;../src/boards/w65_bd.c: 216:  CLCnSEL2 = 0x3a;
 22738   01C260  0E3A               	movlw	58
 22739   01C262  6FDA               	movwf	218,b	;volatile
 22740                           
 22741                           ;../src/boards/w65_bd.c: 217:  CLCnSEL3 = 127;
 22742   01C264  0E7F               	movlw	127
 22743   01C266  6FDB               	movwf	219,b	;volatile
 22744                           
 22745                           ;../src/boards/w65_bd.c: 219:     CLCnGLS0 = 0x01;
 22746   01C268  0E01               	movlw	1
 22747   01C26A  6FDC               	movwf	220,b	;volatile
 22748                           
 22749                           ;../src/boards/w65_bd.c: 220:  CLCnGLS1 = 0x08;
 22750   01C26C  0E08               	movlw	8
 22751   01C26E  6FDD               	movwf	221,b	;volatile
 22752   01C270                     
 22753                           ; BSR set to: 0
 22754                           ;../src/boards/w65_bd.c: 221:     CLCnGLS2 = 0x00;
 22755   01C270  6BDE               	clrf	222,b	;volatile
 22756                           
 22757                           ;../src/boards/w65_bd.c: 222:     CLCnGLS3 = 0x20;
 22758   01C272  0E20               	movlw	32
 22759   01C274  6FDF               	movwf	223,b	;volatile
 22760   01C276                     
 22761                           ; BSR set to: 0
 22762                           ;../src/boards/w65_bd.c: 224:     CLCnPOL = 0x00;
 22763   01C276  6BD7               	clrf	215,b	;volatile
 22764                           
 22765                           ;../src/boards/w65_bd.c: 225:     CLCnCON = 0x85;
 22766   01C278  0E85               	movlw	133
 22767   01C27A  6FD6               	movwf	214,b	;volatile
 22768   01C27C                     
 22769                           ; BSR set to: 0
 22770                           ;../src/boards/w65_bd.c: 227:  G3POL = 1;
 22771   01C27C  85D7               	bsf	215,2,b	;volatile
 22772   01C27E                     
 22773                           ; BSR set to: 0
 22774                           ;../src/boards/w65_bd.c: 228:  G3POL = 0;
 22775   01C27E  95D7               	bcf	215,2,b	;volatile
 22776                           
 22777                           ;../src/boards/w65_bd.c: 231:  CLCSELECT = 1;
 22778   01C280  0E01               	movlw	1
 22779   01C282  6FD5               	movwf	213,b	;volatile
 22780   01C284                     
 22781                           ; BSR set to: 0
 22782                           ;../src/boards/w65_bd.c: 233:  G3POL = 1;
 22783   01C284  85D7               	bsf	215,2,b	;volatile
 22784   01C286                     
 22785                           ; BSR set to: 0
 22786                           ;../src/boards/w65_bd.c: 234:  G3POL = 0;
 22787   01C286  95D7               	bcf	215,2,b	;volatile
 22788                           
 22789                           ;../src/boards/w65_bd.c: 236:  RA2PPS = 0x02;
 22790   01C288  0E02               	movlw	2
 22791   01C28A  0102               	movlb	2	; () banked
 22792   01C28C  6F03               	movwf	3,b	;volatile
 22793   01C28E                     
 22794                           ; BSR set to: 2
 22795                           ;../src/boards/w65_bd.c: 238:  irq_flg = 0;
 22796   01C28E  0107               	movlb	7	; () banked
 22797   01C290  6BCB               	clrf	_irq_flg& (0+255),b
 22798   01C292                     
 22799                           ; BSR set to: 7
 22800   01C292  0012               	return		;funcret
 22801   01C294                     __end_of_clc_init:
 22802                           	callstack 0
 22803                           
 22804 ;; *************** function _f_chdir *****************
 22805 ;; Defined at:
 22806 ;;		line 4271 in file "../fatfs/ff.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;  path            2  175[BANK6 ] PTR const unsigned char 
 22809 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 22810 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 22811 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 22812 ;; Auto vars:     Size  Location     Type
 22813 ;;  dj             40  180[BANK6 ] struct .
 22814 ;;  fs              2  178[BANK6 ] PTR struct .
 22815 ;;		 -> fs(564), NULL(0), 
 22816 ;;  res             1  177[BANK6 ] enum E597
 22817 ;; Return value:  Size  Location     Type
 22818 ;;                  1    wreg      enum E17409
 22819 ;; Registers used:
 22820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22821 ;; Tracked objects:
 22822 ;;		On entry : 0/0
 22823 ;;		On exit  : 0/0
 22824 ;;		Unchanged: 0/0
 22825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22826 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22827 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22829 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22830 ;;Total ram usage:       45 bytes
 22831 ;; Hardware stack levels used: 1
 22832 ;; Hardware stack levels required when called: 19
 22833 ;; This function calls:
 22834 ;;		_follow_path
 22835 ;;		_ld_clust
 22836 ;;		_mount_volume
 22837 ;; This function is called by:
 22838 ;;		_change_directory
 22839 ;; This function uses a non-reentrant model
 22840 ;;
 22841                           
 22842                           	psect	text48
 22843   01D82E                     __ptext48:
 22844                           	callstack 0
 22845   01D82E                     _f_chdir:
 22846                           	callstack 106
 22847   01D82E                     
 22848                           ;../fatfs/ff.c: 4272:  const TCHAR* path;../fatfs/ff.c: 4274: {;../fatfs/ff.c: 4278:  FR
      +                          ESULT res;;../fatfs/ff.c: 4279:  DIR dj;;../fatfs/ff.c: 4280:  FATFS *fs;;../fatfs/ff.c:
      +                           4285:  res = mount_volume(&path, &fs, 0);
 22849   01D82E  0EAF               	movlw	low f_chdir@path
 22850   01D830  0106               	movlb	6	; () banked
 22851   01D832  6F81               	movwf	mount_volume@path& (0+255),b
 22852   01D834  0E06               	movlw	high f_chdir@path
 22853   01D836  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 22854   01D838  0EB2               	movlw	low f_chdir@fs
 22855   01D83A  6F83               	movwf	mount_volume@rfs& (0+255),b
 22856   01D83C  0E06               	movlw	high f_chdir@fs
 22857   01D83E  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 22858   01D840  0E00               	movlw	0
 22859   01D842  6F85               	movwf	mount_volume@mode& (0+255),b
 22860   01D844  EC00  F080         	call	_mount_volume	;wreg free
 22861   01D848  0106               	movlb	6	; () banked
 22862   01D84A  6FB1               	movwf	f_chdir@res& (0+255),b
 22863   01D84C                     
 22864                           ; BSR set to: 6
 22865                           ;../fatfs/ff.c: 4286:  if (res == FR_OK) {
 22866   01D84C  51B1               	movf	f_chdir@res& (0+255),w,b
 22867   01D84E  A4D8               	btfss	status,2,c
 22868   01D850  EF2C  F0EC         	goto	u34241
 22869   01D854  EF2E  F0EC         	goto	u34240
 22870   01D858                     u34241:
 22871   01D858  EF8E  F0EC         	goto	l1993
 22872   01D85C                     u34240:
 22873   01D85C                     
 22874                           ; BSR set to: 6
 22875                           ;../fatfs/ff.c: 4287:   dj.obj.fs = fs;
 22876   01D85C  C6B2  F6B4         	movff	f_chdir@fs,f_chdir@dj
 22877   01D860  C6B3  F6B5         	movff	f_chdir@fs+1,f_chdir@dj+1
 22878   01D864                     
 22879                           ; BSR set to: 6
 22880                           ;../fatfs/ff.c: 4289:   res = follow_path(&dj, path);
 22881   01D864  0EB4               	movlw	low f_chdir@dj
 22882   01D866  6F84               	movwf	follow_path@dp& (0+255),b
 22883   01D868  0E06               	movlw	high f_chdir@dj
 22884   01D86A  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 22885   01D86C  C6AF  F686         	movff	f_chdir@path,follow_path@path
 22886   01D870  C6B0  F687         	movff	f_chdir@path+1,follow_path@path+1
 22887   01D874  EC61  F0C4         	call	_follow_path	;wreg free
 22888   01D878  0106               	movlb	6	; () banked
 22889   01D87A  6FB1               	movwf	f_chdir@res& (0+255),b
 22890   01D87C                     
 22891                           ; BSR set to: 6
 22892                           ;../fatfs/ff.c: 4290:   if (res == FR_OK) {
 22893   01D87C  51B1               	movf	f_chdir@res& (0+255),w,b
 22894   01D87E  A4D8               	btfss	status,2,c
 22895   01D880  EF44  F0EC         	goto	u34251
 22896   01D884  EF46  F0EC         	goto	u34250
 22897   01D888                     u34251:
 22898   01D888  EF83  F0EC         	goto	l24577
 22899   01D88C                     u34250:
 22900   01D88C                     
 22901                           ; BSR set to: 6
 22902                           ;../fatfs/ff.c: 4291:    if (dj.fn[11] & 0x80) {
 22903   01D88C  AFDB               	btfss	(f_chdir@dj+39)& (0+255),7,b
 22904   01D88E  EF4B  F0EC         	goto	u34261
 22905   01D892  EF4D  F0EC         	goto	u34260
 22906   01D896                     u34261:
 22907   01D896  EF5F  F0EC         	goto	l1995
 22908   01D89A                     u34260:
 22909   01D89A                     
 22910                           ; BSR set to: 6
 22911                           ;../fatfs/ff.c: 4292:     fs->cdir = dj.obj.sclust;
 22912   01D89A  EE21  F2BA         	lfsr	2,f_chdir@dj+6
 22913   01D89E  EE10 F014          	lfsr	1,20
 22914   01D8A2  51B2               	movf	f_chdir@fs& (0+255),w,b
 22915   01D8A4  26E1               	addwf	fsr1l,f,c
 22916   01D8A6  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 22917   01D8A8  22E2               	addwfc	fsr1h,f,c
 22918   01D8AA  C4DE F4E6          	movff	postinc2,postinc1
 22919   01D8AE  C4DE F4E6          	movff	postinc2,postinc1
 22920   01D8B2  C4DE F4E6          	movff	postinc2,postinc1
 22921   01D8B6  C4DE F4E6          	movff	postinc2,postinc1
 22922                           
 22923                           ;../fatfs/ff.c: 4300:    } else {
 22924   01D8BA  EF83  F0EC         	goto	l24577
 22925   01D8BE                     l1995:
 22926                           
 22927                           ; BSR set to: 6
 22928                           ;../fatfs/ff.c: 4301:     if (dj.obj.attr & 0x10) {
 22929   01D8BE  A9B8               	btfss	(f_chdir@dj+4)& (0+255),4,b
 22930   01D8C0  EF64  F0EC         	goto	u34271
 22931   01D8C4  EF66  F0EC         	goto	u34270
 22932   01D8C8                     u34271:
 22933   01D8C8  EF81  F0EC         	goto	l24575
 22934   01D8CC                     u34270:
 22935   01D8CC                     
 22936                           ; BSR set to: 6
 22937                           ;../fatfs/ff.c: 4310:      {;../fatfs/ff.c: 4311:       fs->cdir = ld_clust(fs, dj.dir);
 22938   01D8CC  C6B2  F50B         	movff	f_chdir@fs,ld_clust@fs
 22939   01D8D0  C6B3  F50C         	movff	f_chdir@fs+1,ld_clust@fs+1
 22940   01D8D4  C6CE  F50D         	movff	f_chdir@dj+26,ld_clust@dir
 22941   01D8D8  C6CF  F50E         	movff	f_chdir@dj+27,ld_clust@dir+1
 22942   01D8DC  EC3A  F0F9         	call	_ld_clust	;wreg free
 22943   01D8E0  0106               	movlb	6	; () banked
 22944   01D8E2  EE20 F014          	lfsr	2,20
 22945   01D8E6  51B2               	movf	f_chdir@fs& (0+255),w,b
 22946   01D8E8  26D9               	addwf	fsr2l,f,c
 22947   01D8EA  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 22948   01D8EC  22DA               	addwfc	fsr2h,f,c
 22949   01D8EE  C50B  F4DE         	movff	?_ld_clust,postinc2
 22950   01D8F2  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 22951   01D8F6  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 22952   01D8FA  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 22953                           
 22954                           ;../fatfs/ff.c: 4312:      };../fatfs/ff.c: 4313:     } else {
 22955   01D8FE  EF83  F0EC         	goto	l24577
 22956   01D902                     l24575:
 22957                           
 22958                           ; BSR set to: 6
 22959                           ;../fatfs/ff.c: 4314:      res = FR_NO_PATH;
 22960   01D902  0E05               	movlw	5
 22961   01D904  6FB1               	movwf	f_chdir@res& (0+255),b
 22962   01D906                     l24577:
 22963                           
 22964                           ; BSR set to: 6
 22965                           ;../fatfs/ff.c: 4319:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 22966   01D906  0E04               	movlw	4
 22967   01D908  19B1               	xorwf	f_chdir@res& (0+255),w,b
 22968   01D90A  A4D8               	btfss	status,2,c
 22969   01D90C  EF8A  F0EC         	goto	u34281
 22970   01D910  EF8C  F0EC         	goto	u34280
 22971   01D914                     u34281:
 22972   01D914  EF8E  F0EC         	goto	l1993
 22973   01D918                     u34280:
 22974   01D918                     
 22975                           ; BSR set to: 6
 22976   01D918  0E05               	movlw	5
 22977   01D91A  6FB1               	movwf	f_chdir@res& (0+255),b
 22978   01D91C                     l1993:
 22979                           
 22980                           ; BSR set to: 6
 22981                           ;../fatfs/ff.c: 4328:  return res;
 22982   01D91C  51B1               	movf	f_chdir@res& (0+255),w,b
 22983   01D91E                     
 22984                           ; BSR set to: 6
 22985   01D91E  0012               	return		;funcret
 22986   01D920                     __end_of_f_chdir:
 22987                           	callstack 0
 22988                           
 22989 ;; *************** function _start_cpu *****************
 22990 ;; Defined at:
 22991 ;;		line 420 in file "../src/boards/w65_cmn.c"
 22992 ;; Parameters:    Size  Location     Type
 22993 ;;		None
 22994 ;; Auto vars:     Size  Location     Type
 22995 ;;		None
 22996 ;; Return value:  Size  Location     Type
 22997 ;;                  1    wreg      void 
 22998 ;; Registers used:
 22999 ;;		wreg, status,2, cstack
 23000 ;; Tracked objects:
 23001 ;;		On entry : 0/0
 23002 ;;		On exit  : 0/0
 23003 ;;		Unchanged: 0/0
 23004 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23009 ;;Total ram usage:        2 bytes
 23010 ;; Hardware stack levels used: 1
 23011 ;; Hardware stack levels required when called: 2
 23012 ;; This function calls:
 23013 ;;		_bus_release_req
 23014 ;; This function is called by:
 23015 ;;		_boot_file
 23016 ;;		_wstart_prog
 23017 ;;		_restart_prog
 23018 ;;		_mon_prog
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           
 23022                           	psect	text49
 23023   01FDF0                     __ptext49:
 23024                           	callstack 0
 23025   01FDF0                     _start_cpu:
 23026                           	callstack 123
 23027   01FDF0                     
 23028                           ;../src/boards/w65_cmn.c: 422:  bus_release_req();
 23029   01FDF0  EC32  F001         	call	_bus_release_req	;wreg free
 23030   01FDF4                     
 23031                           ;../src/boards/w65_cmn.c: 424:  CLCSELECT = 0;
 23032   01FDF4  0100               	movlb	0	; () banked
 23033   01FDF6  6BD5               	clrf	213,b	;volatile
 23034   01FDF8                     
 23035                           ; BSR set to: 0
 23036                           ;../src/boards/w65_cmn.c: 425:  G2POL = 0;
 23037   01FDF8  93D7               	bcf	215,1,b	;volatile
 23038   01FDFA                     
 23039                           ; BSR set to: 0
 23040                           ;../src/boards/w65_cmn.c: 426:  LATE0 = 0;
 23041   01FDFA  90C2               	bcf	1218,0,c	;volatile
 23042   01FDFC                     
 23043                           ; BSR set to: 0
 23044                           ;../src/boards/w65_cmn.c: 428:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 23045   01FDFC  0E09               	movlw	9
 23046   01FDFE  6E05               	movwf	(??_start_cpu+1)^(0+1280),c
 23047   01FE00  0E1E               	movlw	30
 23048   01FE02  6E04               	movwf	??_start_cpu^(0+1280),c
 23049   01FE04  0EE4               	movlw	228
 23050   01FE06                     u36887:
 23051   01FE06  2EE8               	decfsz	wreg,f,c
 23052   01FE08  D7FE               	bra	u36887
 23053   01FE0A  2E04               	decfsz	??_start_cpu^(0+1280),f,c
 23054   01FE0C  D7FC               	bra	u36887
 23055   01FE0E  2E05               	decfsz	(??_start_cpu+1)^(0+1280),f,c
 23056   01FE10  D7FA               	bra	u36887
 23057   01FE12  D000               	nop2	
 23058   01FE14                     
 23059                           ;../src/boards/w65_cmn.c: 430:  G2POL = 1;
 23060   01FE14  0100               	movlb	0	; () banked
 23061   01FE16  83D7               	bsf	215,1,b	;volatile
 23062   01FE18                     
 23063                           ; BSR set to: 0
 23064                           ;../src/boards/w65_cmn.c: 432:  CLCSELECT = 7;
 23065   01FE18  0E07               	movlw	7
 23066   01FE1A  6FD5               	movwf	213,b	;volatile
 23067   01FE1C                     
 23068                           ; BSR set to: 0
 23069                           ;../src/boards/w65_cmn.c: 433:  G3POL = 1;
 23070   01FE1C  85D7               	bsf	215,2,b	;volatile
 23071   01FE1E                     
 23072                           ; BSR set to: 0
 23073                           ;../src/boards/w65_cmn.c: 434:  G3POL = 0;
 23074   01FE1E  95D7               	bcf	215,2,b	;volatile
 23075   01FE20                     
 23076                           ; BSR set to: 0
 23077                           ;../src/boards/w65_cmn.c: 436:  LATE0 = 1;
 23078   01FE20  80C2               	bsf	1218,0,c	;volatile
 23079   01FE22                     
 23080                           ; BSR set to: 0
 23081                           ;../src/boards/w65_cmn.c: 438:  irq_flg = 0;
 23082   01FE22  0107               	movlb	7	; () banked
 23083   01FE24  6BCB               	clrf	_irq_flg& (0+255),b
 23084   01FE26                     
 23085                           ; BSR set to: 7
 23086   01FE26  0012               	return		;funcret
 23087   01FE28                     __end_of_start_cpu:
 23088                           	callstack 0
 23089                           
 23090 ;; *************** function _prt_reload *****************
 23091 ;; Defined at:
 23092 ;;		line 635 in file "../src/w65_main.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;		None
 23095 ;; Auto vars:     Size  Location     Type
 23096 ;;		None
 23097 ;; Return value:  Size  Location     Type
 23098 ;;                  1    wreg      void 
 23099 ;; Registers used:
 23100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23101 ;; Tracked objects:
 23102 ;;		On entry : 0/0
 23103 ;;		On exit  : 0/0
 23104 ;;		Unchanged: 0/0
 23105 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23110 ;;Total ram usage:        0 bytes
 23111 ;; Hardware stack levels used: 1
 23112 ;; Hardware stack levels required when called: 9
 23113 ;; This function calls:
 23114 ;;		_printf
 23115 ;; This function is called by:
 23116 ;;		_boot_file
 23117 ;; This function uses a non-reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text50
 23121   0001D6                     __ptext50:
 23122                           	callstack 0
 23123   0001D6                     _prt_reload:
 23124                           	callstack 116
 23125   0001D6                     
 23126                           ;../src/w65_main.c: 636:  printf("Reload monitor %s\r\n", arg[0]);
 23127   0001D6  0EAE               	movlw	low STR_106
 23128   0001D8  0105               	movlb	5	; () banked
 23129   0001DA  6FAD               	movwf	printf@fmt& (0+255),b
 23130   0001DC  0EFC               	movlw	high STR_106
 23131   0001DE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23132   0001E0  C79E  F5AF         	movff	_arg,?_printf+2
 23133   0001E4  C79F  F5B0         	movff	_arg+1,?_printf+3
 23134   0001E8  ECDA  F0FF         	call	_printf	;wreg free
 23135   0001EC  0012               	return		;funcret
 23136   0001EE                     __end_of_prt_reload:
 23137                           	callstack 0
 23138                           
 23139 ;; *************** function _load_program *****************
 23140 ;; Defined at:
 23141 ;;		line 301 in file "../src/w65_main.c"
 23142 ;; Parameters:    Size  Location     Type
 23143 ;;  fname           2    0[BANK7 ] PTR unsigned char 
 23144 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23145 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23146 ;; Auto vars:     Size  Location     Type
 23147 ;;  adr             4   10[BANK7 ] unsigned long 
 23148 ;;  adr0            4    2[BANK7 ] unsigned long 
 23149 ;;  header          2   19[BANK7 ] PTR struct .
 23150 ;;		 -> tmp_buf(512), 
 23151 ;;  br              2   16[BANK7 ] unsigned int 
 23152 ;;  cnt             2   14[BANK7 ] unsigned short 
 23153 ;;  btr             2    8[BANK7 ] unsigned int 
 23154 ;;  rdbuf           2    6[BANK7 ] PTR void 
 23155 ;;		 -> tmp_buf(512), 
 23156 ;;  fr              1   18[BANK7 ] enum E17409
 23157 ;; Return value:  Size  Location     Type
 23158 ;;                  2    0[BANK7 ] int 
 23159 ;; Registers used:
 23160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23161 ;; Tracked objects:
 23162 ;;		On entry : 0/0
 23163 ;;		On exit  : 0/0
 23164 ;;		Unchanged: 0/0
 23165 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23166 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23169 ;;      Totals:         0       1       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23170 ;;Total ram usage:       22 bytes
 23171 ;; Hardware stack levels used: 1
 23172 ;; Hardware stack levels required when called: 20
 23173 ;; This function calls:
 23174 ;;		_f_close
 23175 ;;		_f_open
 23176 ;;		_f_read
 23177 ;;		_printf
 23178 ;;		_sprintf
 23179 ;;		_strstr
 23180 ;;		_write_sram
 23181 ;; This function is called by:
 23182 ;;		_setup_monitor
 23183 ;;		_boot_file
 23184 ;;		_load_file
 23185 ;; This function uses a non-reentrant model
 23186 ;;
 23187                           
 23188                           	psect	text51
 23189   015D0C                     __ptext51:
 23190                           	callstack 0
 23191   015D0C                     _load_program:
 23192                           	callstack 105
 23193   015D0C                     
 23194                           ;../src/w65_main.c: 303:  FRESULT fr;;../src/w65_main.c: 304:  void *rdbuf;;../src/w65_m
      +                          ain.c: 305:  UINT btr, br;;../src/w65_main.c: 306:  uint16_t cnt;;../src/w65_main.c: 307
      +                          :  uint32_t adr, adr0;;../src/w65_main.c: 308:  file_header *header;;../src/w65_main.c: 
      +                          310:  rdbuf = (void *)&tmp_buf[0][0];
 23195   015D0C  0EF8               	movlw	low _tmp_buf
 23196   015D0E  0107               	movlb	7	; () banked
 23197   015D10  6F06               	movwf	load_program@rdbuf& (0+255),b
 23198   015D12  0E13               	movlw	high _tmp_buf
 23199   015D14  6F07               	movwf	(load_program@rdbuf+1)& (0+255),b
 23200                           
 23201                           ;../src/w65_main.c: 311:  header = (file_header *)&tmp_buf[0][0];
 23202   015D16  0EF8               	movlw	low _tmp_buf
 23203   015D18  6F13               	movwf	load_program@header& (0+255),b
 23204   015D1A  0E13               	movlw	high _tmp_buf
 23205   015D1C  6F14               	movwf	(load_program@header+1)& (0+255),b
 23206   015D1E                     
 23207                           ; BSR set to: 7
 23208                           ;../src/w65_main.c: 313:  fr = f_open(&rom_fl, (TCHAR *)fname, 0x01);
 23209   015D1E  0ED6               	movlw	low _rom_fl
 23210   015D20  0106               	movlb	6	; () banked
 23211   015D22  6FAF               	movwf	f_open@fp& (0+255),b
 23212   015D24  0E0F               	movlw	high _rom_fl
 23213   015D26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 23214   015D28  C700  F6B1         	movff	load_program@fname,f_open@path
 23215   015D2C  C701  F6B2         	movff	load_program@fname+1,f_open@path+1
 23216   015D30  0E01               	movlw	1
 23217   015D32  6FB3               	movwf	f_open@mode& (0+255),b
 23218   015D34  ECDB  F092         	call	_f_open	;wreg free
 23219   015D38  0107               	movlb	7	; () banked
 23220   015D3A  6F12               	movwf	load_program@fr& (0+255),b
 23221   015D3C                     
 23222                           ; BSR set to: 7
 23223                           ;../src/w65_main.c: 314:  if ( fr != FR_OK ) {
 23224   015D3C  5112               	movf	load_program@fr& (0+255),w,b
 23225   015D3E  B4D8               	btfsc	status,2,c
 23226   015D40  EFA4  F0AE         	goto	u33541
 23227   015D44  EFA6  F0AE         	goto	u33540
 23228   015D48                     u33541:
 23229   015D48  EFB3  F0AE         	goto	l24175
 23230   015D4C                     u33540:
 23231   015D4C                     
 23232                           ; BSR set to: 7
 23233                           ;../src/w65_main.c: 315:   printf("File Open Error.\r\n");
 23234   015D4C  0E5D               	movlw	low (STR_133+2)
 23235   015D4E  0105               	movlb	5	; () banked
 23236   015D50  6FAD               	movwf	printf@fmt& (0+255),b
 23237   015D52  0EFC               	movlw	high (STR_133+2)
 23238   015D54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23239   015D56  ECDA  F0FF         	call	_printf	;wreg free
 23240   015D5A                     l24171:
 23241                           
 23242                           ;../src/w65_main.c: 316:   return((int)fr);
 23243   015D5A  C712  F700         	movff	load_program@fr,?_load_program
 23244   015D5E  0107               	movlb	7	; () banked
 23245   015D60  6B01               	clrf	(?_load_program+1)& (0+255),b
 23246   015D62  EFCE  F0B0         	goto	l1134
 23247   015D66                     l24175:
 23248                           
 23249                           ; BSR set to: 7
 23250                           ;../src/w65_main.c: 318:  adr = 0;
 23251   015D66  0E00               	movlw	0
 23252   015D68  6F0A               	movwf	load_program@adr& (0+255),b
 23253   015D6A  0E00               	movlw	0
 23254   015D6C  6F0B               	movwf	(load_program@adr+1)& (0+255),b
 23255   015D6E  0E00               	movlw	0
 23256   015D70  6F0C               	movwf	(load_program@adr+2)& (0+255),b
 23257   015D72  0E00               	movlw	0
 23258   015D74  6F0D               	movwf	(load_program@adr+3)& (0+255),b
 23259   015D76                     
 23260                           ; BSR set to: 7
 23261                           ;../src/w65_main.c: 319:  cnt = file_size = (uint16_t)((&rom_fl)->obj.objsize);
 23262   015D76  0063  FF80  F7B9   	movff	_rom_fl+10,_file_size
 23263   015D7C  0063  FF84  F7BA   	movff	_rom_fl+11,_file_size+1
 23264   015D82  C7B9  F70E         	movff	_file_size,load_program@cnt
 23265   015D86  C7BA  F70F         	movff	_file_size+1,load_program@cnt+1
 23266                           
 23267                           ;../src/w65_main.c: 320:  btr = 256 * 2;
 23268   015D8A  0E02               	movlw	2
 23269   015D8C  6F09               	movwf	(load_program@btr+1)& (0+255),b
 23270   015D8E  0E00               	movlw	0
 23271   015D90  6F08               	movwf	load_program@btr& (0+255),b
 23272                           
 23273                           ;../src/w65_main.c: 321:  while( cnt ) {
 23274   015D92  EF8B  F0B0         	goto	l24245
 23275   015D96                     l24179:
 23276                           
 23277                           ; BSR set to: 7
 23278                           ;../src/w65_main.c: 322:   fr = f_read(&rom_fl, rdbuf, btr, &br);
 23279   015D96  0ED6               	movlw	low _rom_fl
 23280   015D98  0106               	movlb	6	; () banked
 23281   015D9A  6F3E               	movwf	f_read@fp& (0+255),b
 23282   015D9C  0E0F               	movlw	high _rom_fl
 23283   015D9E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 23284   015DA0  C706  F640         	movff	load_program@rdbuf,f_read@buff
 23285   015DA4  C707  F641         	movff	load_program@rdbuf+1,f_read@buff+1
 23286   015DA8  C708  F642         	movff	load_program@btr,f_read@btr
 23287   015DAC  C709  F643         	movff	load_program@btr+1,f_read@btr+1
 23288   015DB0  0E10               	movlw	low load_program@br
 23289   015DB2  6F44               	movwf	f_read@br& (0+255),b
 23290   015DB4  0E07               	movlw	high load_program@br
 23291   015DB6  6F45               	movwf	(f_read@br+1)& (0+255),b
 23292   015DB8  EC9B  F096         	call	_f_read	;wreg free
 23293   015DBC  0107               	movlb	7	; () banked
 23294   015DBE  6F12               	movwf	load_program@fr& (0+255),b
 23295   015DC0                     
 23296                           ; BSR set to: 7
 23297                           ;../src/w65_main.c: 323:   if (fr == FR_OK) {
 23298   015DC0  5112               	movf	load_program@fr& (0+255),w,b
 23299   015DC2  A4D8               	btfss	status,2,c
 23300   015DC4  EFE6  F0AE         	goto	u33551
 23301   015DC8  EFE8  F0AE         	goto	u33550
 23302   015DCC                     u33551:
 23303   015DCC  EF94  F0B0         	goto	l24247
 23304   015DD0                     u33550:
 23305   015DD0                     
 23306                           ; BSR set to: 7
 23307                           ;../src/w65_main.c: 324:    if ( !adr ) {
 23308   015DD0  510A               	movf	load_program@adr& (0+255),w,b
 23309   015DD2  110B               	iorwf	(load_program@adr+1)& (0+255),w,b
 23310   015DD4  110C               	iorwf	(load_program@adr+2)& (0+255),w,b
 23311   015DD6  110D               	iorwf	(load_program@adr+3)& (0+255),w,b
 23312   015DD8  A4D8               	btfss	status,2,c
 23313   015DDA  EFF1  F0AE         	goto	u33561
 23314   015DDE  EFF3  F0AE         	goto	u33560
 23315   015DE2                     u33561:
 23316   015DE2  EF5D  F0B0         	goto	l24235
 23317   015DE6                     u33560:
 23318   015DE6                     
 23319                           ; BSR set to: 7
 23320                           ;../src/w65_main.c: 325:     if ( raw_addr ) {
 23321   015DE6  51AD               	movf	_raw_addr& (0+255),w,b
 23322   015DE8  11AE               	iorwf	(_raw_addr+1)& (0+255),w,b
 23323   015DEA  11AF               	iorwf	(_raw_addr+2)& (0+255),w,b
 23324   015DEC  11B0               	iorwf	(_raw_addr+3)& (0+255),w,b
 23325   015DEE  B4D8               	btfsc	status,2,c
 23326   015DF0  EFFC  F0AE         	goto	u33571
 23327   015DF4  EFFE  F0AE         	goto	u33570
 23328   015DF8                     u33571:
 23329   015DF8  EF10  F0AF         	goto	l24189
 23330   015DFC                     u33570:
 23331   015DFC                     
 23332                           ; BSR set to: 7
 23333                           ;../src/w65_main.c: 326:      adr = adr0 = raw_addr;
 23334   015DFC  C7AD  F702         	movff	_raw_addr,load_program@adr0
 23335   015E00  C7AE  F703         	movff	_raw_addr+1,load_program@adr0+1
 23336   015E04  C7AF  F704         	movff	_raw_addr+2,load_program@adr0+2
 23337   015E08  C7B0  F705         	movff	_raw_addr+3,load_program@adr0+3
 23338   015E0C  C702  F70A         	movff	load_program@adr0,load_program@adr
 23339   015E10  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 23340   015E14  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 23341   015E18  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 23342                           
 23343                           ;../src/w65_main.c: 327:     }
 23344   015E1C  EF5D  F0B0         	goto	l24235
 23345   015E20                     l24189:
 23346                           
 23347                           ; BSR set to: 7
 23348                           ;../src/w65_main.c: 329:      if (!strstr((const char *)header->mezID, mezID)) {
 23349   015E20  0E08               	movlw	8
 23350   015E22  2513               	addwf	load_program@header& (0+255),w,b
 23351   015E24  6E0B               	movwf	strstr@h^(0+1280),c
 23352   015E26  0E00               	movlw	0
 23353   015E28  2114               	addwfc	(load_program@header+1)& (0+255),w,b
 23354   015E2A  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 23355   015E2C  0E50               	movlw	low STR_46
 23356   015E2E  6E0D               	movwf	strstr@n^(0+1280),c
 23357   015E30  0EFF               	movlw	high STR_46
 23358   015E32  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 23359   015E34  ECCF  F0EE         	call	_strstr	;wreg free
 23360   015E38  500B               	movf	?_strstr^(0+1280),w,c
 23361   015E3A  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 23362   015E3C  A4D8               	btfss	status,2,c
 23363   015E3E  EF23  F0AF         	goto	u33581
 23364   015E42  EF25  F0AF         	goto	u33580
 23365   015E46                     u33581:
 23366   015E46  EF31  F0AF         	goto	l24195
 23367   015E4A                     u33580:
 23368   015E4A                     
 23369                           ;../src/w65_main.c: 330:       printf("Invalid MEZW65C file.\r\n");
 23370   015E4A  0E1E               	movlw	low STR_79
 23371   015E4C  0105               	movlb	5	; () banked
 23372   015E4E  6FAD               	movwf	printf@fmt& (0+255),b
 23373   015E50  0EFB               	movlw	high STR_79
 23374   015E52  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23375   015E54  ECDA  F0FF         	call	_printf	;wreg free
 23376   015E58                     l24193:
 23377                           
 23378                           ;../src/w65_main.c: 331:       fr = FR_INVALID_OBJECT;
 23379   015E58  0E09               	movlw	9
 23380   015E5A  0107               	movlb	7	; () banked
 23381   015E5C  6F12               	movwf	load_program@fr& (0+255),b
 23382                           
 23383                           ;../src/w65_main.c: 332:       break;
 23384   015E5E  EF94  F0B0         	goto	l24247
 23385   015E62                     l24195:
 23386                           
 23387                           ;../src/w65_main.c: 334:      if (header->sw_816==1 && !cpu_flg) {
 23388   015E62  0107               	movlb	7	; () banked
 23389   015E64  EE20 F018          	lfsr	2,24
 23390   015E68  5113               	movf	load_program@header& (0+255),w,b
 23391   015E6A  26D9               	addwf	fsr2l,f,c
 23392   015E6C  5114               	movf	(load_program@header+1)& (0+255),w,b
 23393   015E6E  22DA               	addwfc	fsr2h,f,c
 23394   015E70  04DE               	decf	postinc2,w,c
 23395   015E72  A4D8               	btfss	status,2,c
 23396   015E74  EF3E  F0AF         	goto	u33591
 23397   015E78  EF40  F0AF         	goto	u33590
 23398   015E7C                     u33591:
 23399   015E7C  EF51  F0AF         	goto	l24203
 23400   015E80                     u33590:
 23401   015E80                     
 23402                           ; BSR set to: 7
 23403   015E80  51E5               	movf	_cpu_flg& (0+255),w,b
 23404   015E82  A4D8               	btfss	status,2,c
 23405   015E84  EF46  F0AF         	goto	u33601
 23406   015E88  EF48  F0AF         	goto	u33600
 23407   015E8C                     u33601:
 23408   015E8C  EF51  F0AF         	goto	l24203
 23409   015E90                     u33600:
 23410   015E90                     
 23411                           ; BSR set to: 7
 23412                           ;../src/w65_main.c: 335:       printf("Work on only W65C816..\r\n");
 23413   015E90  0E89               	movlw	low STR_80
 23414   015E92  0105               	movlb	5	; () banked
 23415   015E94  6FAD               	movwf	printf@fmt& (0+255),b
 23416   015E96  0EFA               	movlw	high STR_80
 23417   015E98  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23418   015E9A  ECDA  F0FF         	call	_printf	;wreg free
 23419   015E9E  EF2C  F0AF         	goto	l24193
 23420   015EA2                     l24203:
 23421                           
 23422                           ; BSR set to: 7
 23423                           ;../src/w65_main.c: 339:      adr = adr0 = header->load_p;
 23424   015EA2  EE20 F010          	lfsr	2,16
 23425   015EA6  5113               	movf	load_program@header& (0+255),w,b
 23426   015EA8  26D9               	addwf	fsr2l,f,c
 23427   015EAA  5114               	movf	(load_program@header+1)& (0+255),w,b
 23428   015EAC  22DA               	addwfc	fsr2h,f,c
 23429   015EAE  C4DE F702          	movff	postinc2,load_program@adr0
 23430   015EB2  C4DE F703          	movff	postinc2,load_program@adr0+1
 23431   015EB6  C4DE F704          	movff	postinc2,load_program@adr0+2
 23432   015EBA  C4DE F705          	movff	postinc2,load_program@adr0+3
 23433   015EBE  C702  F70A         	movff	load_program@adr0,load_program@adr
 23434   015EC2  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 23435   015EC6  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 23436   015ECA  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 23437   015ECE                     
 23438                           ; BSR set to: 7
 23439                           ;../src/w65_main.c: 340:      if (!load_flg) {
 23440   015ECE  51C9               	movf	_load_flg& (0+255),w,b
 23441   015ED0  A4D8               	btfss	status,2,c
 23442   015ED2  EF6D  F0AF         	goto	u33611
 23443   015ED6  EF6F  F0AF         	goto	u33610
 23444   015EDA                     u33611:
 23445   015EDA  EF5D  F0B0         	goto	l24235
 23446   015EDE                     u33610:
 23447   015EDE                     
 23448                           ; BSR set to: 7
 23449                           ;../src/w65_main.c: 341:       if ( header->bios_sw == 1 ) {
 23450   015EDE  EE20 F01F          	lfsr	2,31
 23451   015EE2  5113               	movf	load_program@header& (0+255),w,b
 23452   015EE4  26D9               	addwf	fsr2l,f,c
 23453   015EE6  5114               	movf	(load_program@header+1)& (0+255),w,b
 23454   015EE8  22DA               	addwfc	fsr2h,f,c
 23455   015EEA  04DE               	decf	postinc2,w,c
 23456   015EEC  A4D8               	btfss	status,2,c
 23457   015EEE  EF7B  F0AF         	goto	u33621
 23458   015EF2  EF7D  F0AF         	goto	u33620
 23459   015EF6                     u33621:
 23460   015EF6  EFCB  F0AF         	goto	l24225
 23461   015EFA                     u33620:
 23462   015EFA                     
 23463                           ; BSR set to: 7
 23464                           ;../src/w65_main.c: 342:        binv.sw = 1;
 23465   015EFA  0E01               	movlw	1
 23466   015EFC  0108               	movlb	8	; () banked
 23467   015EFE  6F78               	movwf	_binv& (0+255),b
 23468   015F00                     
 23469                           ; BSR set to: 8
 23470                           ;../src/w65_main.c: 343:        binv.caddr = header->cstart_addr;
 23471   015F00  0107               	movlb	7	; () banked
 23472   015F02  EE20 F001          	lfsr	2,1
 23473   015F06  5113               	movf	load_program@header& (0+255),w,b
 23474   015F08  26D9               	addwf	fsr2l,f,c
 23475   015F0A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23476   015F0C  22DA               	addwfc	fsr2h,f,c
 23477   015F0E  C4DE F87F          	movff	postinc2,_binv+7
 23478   015F12  C4DD F880          	movff	postdec2,_binv+8
 23479   015F16                     
 23480                           ; BSR set to: 7
 23481                           ;../src/w65_main.c: 344:        binv.waddr = header->wstart_addr;
 23482   015F16  EE20 F004          	lfsr	2,4
 23483   015F1A  5113               	movf	load_program@header& (0+255),w,b
 23484   015F1C  26D9               	addwf	fsr2l,f,c
 23485   015F1E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23486   015F20  22DA               	addwfc	fsr2h,f,c
 23487   015F22  C4DE F881          	movff	postinc2,_binv+9
 23488   015F26  C4DD F882          	movff	postdec2,_binv+10
 23489   015F2A                     
 23490                           ; BSR set to: 7
 23491                           ;../src/w65_main.c: 345:        binv.dp = header->direct_page;
 23492   015F2A  EE20 F006          	lfsr	2,6
 23493   015F2E  5113               	movf	load_program@header& (0+255),w,b
 23494   015F30  26D9               	addwf	fsr2l,f,c
 23495   015F32  5114               	movf	(load_program@header+1)& (0+255),w,b
 23496   015F34  22DA               	addwfc	fsr2h,f,c
 23497   015F36  C4DE F87D          	movff	postinc2,_binv+5
 23498   015F3A  C4DD F87E          	movff	postdec2,_binv+6
 23499   015F3E                     
 23500                           ; BSR set to: 7
 23501                           ;../src/w65_main.c: 346:        binv.pbnk = header->op1;
 23502   015F3E  C713  F4D9         	movff	load_program@header,fsr2l
 23503   015F42  C714  F4DA         	movff	load_program@header+1,fsr2h
 23504   015F46  50DF               	movf	indf2,w,c
 23505   015F48  0108               	movlb	8	; () banked
 23506   015F4A  6F7B               	movwf	(_binv+3)& (0+255),b
 23507   015F4C                     
 23508                           ; BSR set to: 8
 23509                           ;../src/w65_main.c: 347:        binv.dbnk = header->op2;
 23510   015F4C  0107               	movlb	7	; () banked
 23511   015F4E  EE20 F003          	lfsr	2,3
 23512   015F52  5113               	movf	load_program@header& (0+255),w,b
 23513   015F54  26D9               	addwf	fsr2l,f,c
 23514   015F56  5114               	movf	(load_program@header+1)& (0+255),w,b
 23515   015F58  22DA               	addwfc	fsr2h,f,c
 23516   015F5A  50DF               	movf	indf2,w,c
 23517   015F5C  0108               	movlb	8	; () banked
 23518   015F5E  6F7C               	movwf	(_binv+4)& (0+255),b
 23519   015F60                     
 23520                           ; BSR set to: 8
 23521                           ;../src/w65_main.c: 348:        binv.sw_816 = header->sw_816;
 23522   015F60  0107               	movlb	7	; () banked
 23523   015F62  EE20 F018          	lfsr	2,24
 23524   015F66  5113               	movf	load_program@header& (0+255),w,b
 23525   015F68  26D9               	addwf	fsr2l,f,c
 23526   015F6A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23527   015F6C  22DA               	addwfc	fsr2h,f,c
 23528   015F6E  50DF               	movf	indf2,w,c
 23529   015F70  0108               	movlb	8	; () banked
 23530   015F72  6F83               	movwf	(_binv+11)& (0+255),b
 23531   015F74                     
 23532                           ; BSR set to: 8
 23533                           ;../src/w65_main.c: 349:        sprintf((char *)binv.fname, "%s", fname);
 23534   015F74  0E84               	movlw	low (_binv+12)
 23535   015F76  0105               	movlb	5	; () banked
 23536   015F78  6FAD               	movwf	sprintf@s& (0+255),b
 23537   015F7A  0E08               	movlw	high (_binv+12)
 23538   015F7C  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 23539   015F7E  0EF9               	movlw	low STR_81
 23540   015F80  6FAF               	movwf	sprintf@fmt& (0+255),b
 23541   015F82  0EFF               	movlw	high STR_81
 23542   015F84  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 23543   015F86  C700  F5B1         	movff	load_program@fname,?_sprintf+4
 23544   015F8A  C701  F5B2         	movff	load_program@fname+1,?_sprintf+5
 23545   015F8E  ECD8  F0FC         	call	_sprintf	;wreg free
 23546                           
 23547                           ;../src/w65_main.c: 350:       }
 23548   015F92  EF5D  F0B0         	goto	l24235
 23549   015F96                     l24225:
 23550                           
 23551                           ; BSR set to: 7
 23552                           ;../src/w65_main.c: 353:        fh.bios_sw = header->bios_sw;
 23553   015F96  EE20 F01F          	lfsr	2,31
 23554   015F9A  5113               	movf	load_program@header& (0+255),w,b
 23555   015F9C  26D9               	addwf	fsr2l,f,c
 23556   015F9E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23557   015FA0  22DA               	addwfc	fsr2h,f,c
 23558   015FA2  50DF               	movf	indf2,w,c
 23559   015FA4  0108               	movlb	8	; () banked
 23560   015FA6  6FC1               	movwf	(_fh+31)& (0+255),b
 23561                           
 23562                           ;../src/w65_main.c: 354:        fh.load_p = header->load_p;
 23563   015FA8  0107               	movlb	7	; () banked
 23564   015FAA  EE20 F010          	lfsr	2,16
 23565   015FAE  5113               	movf	load_program@header& (0+255),w,b
 23566   015FB0  26D9               	addwf	fsr2l,f,c
 23567   015FB2  5114               	movf	(load_program@header+1)& (0+255),w,b
 23568   015FB4  22DA               	addwfc	fsr2h,f,c
 23569   015FB6  C4DE F8B2          	movff	postinc2,_fh+16
 23570   015FBA  C4DE F8B3          	movff	postinc2,_fh+17
 23571   015FBE  C4DE F8B4          	movff	postinc2,_fh+18
 23572   015FC2  C4DE F8B5          	movff	postinc2,_fh+19
 23573                           
 23574                           ;../src/w65_main.c: 355:        fh.sw_816 = header->sw_816;
 23575   015FC6  EE20 F018          	lfsr	2,24
 23576   015FCA  5113               	movf	load_program@header& (0+255),w,b
 23577   015FCC  26D9               	addwf	fsr2l,f,c
 23578   015FCE  5114               	movf	(load_program@header+1)& (0+255),w,b
 23579   015FD0  22DA               	addwfc	fsr2h,f,c
 23580   015FD2  50DF               	movf	indf2,w,c
 23581   015FD4  0108               	movlb	8	; () banked
 23582   015FD6  6FBA               	movwf	(_fh+24)& (0+255),b
 23583                           
 23584                           ;../src/w65_main.c: 356:        fh.cstart_addr = header->cstart_addr;
 23585   015FD8  0107               	movlb	7	; () banked
 23586   015FDA  EE20 F001          	lfsr	2,1
 23587   015FDE  5113               	movf	load_program@header& (0+255),w,b
 23588   015FE0  26D9               	addwf	fsr2l,f,c
 23589   015FE2  5114               	movf	(load_program@header+1)& (0+255),w,b
 23590   015FE4  22DA               	addwfc	fsr2h,f,c
 23591   015FE6  C4DE F8A3          	movff	postinc2,_fh+1
 23592   015FEA  C4DD F8A4          	movff	postdec2,_fh+2
 23593                           
 23594                           ;../src/w65_main.c: 357:        fh.wstart_addr = header->wstart_addr;
 23595   015FEE  EE20 F004          	lfsr	2,4
 23596   015FF2  5113               	movf	load_program@header& (0+255),w,b
 23597   015FF4  26D9               	addwf	fsr2l,f,c
 23598   015FF6  5114               	movf	(load_program@header+1)& (0+255),w,b
 23599   015FF8  22DA               	addwfc	fsr2h,f,c
 23600   015FFA  C4DE F8A6          	movff	postinc2,_fh+4
 23601   015FFE  C4DD F8A7          	movff	postdec2,_fh+5
 23602                           
 23603                           ;../src/w65_main.c: 358:        fh.picif_p = header->picif_p;
 23604   016002  EE20 F014          	lfsr	2,20
 23605   016006  5113               	movf	load_program@header& (0+255),w,b
 23606   016008  26D9               	addwf	fsr2l,f,c
 23607   01600A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23608   01600C  22DA               	addwfc	fsr2h,f,c
 23609   01600E  C4DE F8B6          	movff	postinc2,_fh+20
 23610   016012  C4DE F8B7          	movff	postinc2,_fh+21
 23611   016016  C4DE F8B8          	movff	postinc2,_fh+22
 23612   01601A  C4DE F8B9          	movff	postinc2,_fh+23
 23613                           
 23614                           ;../src/w65_main.c: 359:        fh.irq_sw = header->irq_sw;
 23615   01601E  EE20 F019          	lfsr	2,25
 23616   016022  5113               	movf	load_program@header& (0+255),w,b
 23617   016024  26D9               	addwf	fsr2l,f,c
 23618   016026  5114               	movf	(load_program@header+1)& (0+255),w,b
 23619   016028  22DA               	addwfc	fsr2h,f,c
 23620   01602A  50DF               	movf	indf2,w,c
 23621   01602C  0108               	movlb	8	; () banked
 23622   01602E  6FBB               	movwf	(_fh+25)& (0+255),b
 23623                           
 23624                           ;../src/w65_main.c: 360:        fh.reg_tblp = header->reg_tblp;
 23625   016030  0107               	movlb	7	; () banked
 23626   016032  EE20 F01A          	lfsr	2,26
 23627   016036  5113               	movf	load_program@header& (0+255),w,b
 23628   016038  26D9               	addwf	fsr2l,f,c
 23629   01603A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23630   01603C  22DA               	addwfc	fsr2h,f,c
 23631   01603E  C4DE F8BC          	movff	postinc2,_fh+26
 23632   016042  C4DD F8BD          	movff	postdec2,_fh+27
 23633                           
 23634                           ;../src/w65_main.c: 361:        fh.reg_tsize = header->reg_tsize;
 23635   016046  EE20 F01C          	lfsr	2,28
 23636   01604A  5113               	movf	load_program@header& (0+255),w,b
 23637   01604C  26D9               	addwf	fsr2l,f,c
 23638   01604E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23639   016050  22DA               	addwfc	fsr2h,f,c
 23640   016052  C4DE F8BE          	movff	postinc2,_fh+28
 23641   016056  C4DD F8BF          	movff	postdec2,_fh+29
 23642                           
 23643                           ;../src/w65_main.c: 362:        fh.nmi_sw = header->nmi_sw;
 23644   01605A  EE20 F01E          	lfsr	2,30
 23645   01605E  5113               	movf	load_program@header& (0+255),w,b
 23646   016060  26D9               	addwf	fsr2l,f,c
 23647   016062  5114               	movf	(load_program@header+1)& (0+255),w,b
 23648   016064  22DA               	addwfc	fsr2h,f,c
 23649   016066  50DF               	movf	indf2,w,c
 23650   016068  0108               	movlb	8	; () banked
 23651   01606A  6FC0               	movwf	(_fh+30)& (0+255),b
 23652   01606C                     
 23653                           ; BSR set to: 8
 23654                           ;../src/w65_main.c: 364:        bioreq_ubuffadr = fh.picif_p;
 23655   01606C  C8B6  F7DB         	movff	_fh+20,_bioreq_ubuffadr
 23656   016070  C8B7  F7DC         	movff	_fh+21,_bioreq_ubuffadr+1
 23657   016074  C8B8  F7DD         	movff	_fh+22,_bioreq_ubuffadr+2
 23658   016078  C8B9  F7DE         	movff	_fh+23,_bioreq_ubuffadr+3
 23659   01607C                     
 23660                           ; BSR set to: 8
 23661                           ;../src/w65_main.c: 365:        bioreq_cbuffadr = bioreq_ubuffadr + 2;
 23662   01607C  0E02               	movlw	2
 23663   01607E  0107               	movlb	7	; () banked
 23664   016080  25DB               	addwf	_bioreq_ubuffadr& (0+255),w,b
 23665   016082  0108               	movlb	8	; () banked
 23666   016084  6F24               	movwf	_bioreq_cbuffadr& (0+255),b
 23667   016086  0E00               	movlw	0
 23668   016088  0107               	movlb	7	; () banked
 23669   01608A  21DC               	addwfc	(_bioreq_ubuffadr+1)& (0+255),w,b
 23670   01608C  0108               	movlb	8	; () banked
 23671   01608E  6F25               	movwf	(_bioreq_cbuffadr+1)& (0+255),b
 23672   016090  0E00               	movlw	0
 23673   016092  0107               	movlb	7	; () banked
 23674   016094  21DD               	addwfc	(_bioreq_ubuffadr+2)& (0+255),w,b
 23675   016096  0108               	movlb	8	; () banked
 23676   016098  6F26               	movwf	(_bioreq_cbuffadr+2)& (0+255),b
 23677   01609A  0E00               	movlw	0
 23678   01609C  0107               	movlb	7	; () banked
 23679   01609E  21DE               	addwfc	(_bioreq_ubuffadr+3)& (0+255),w,b
 23680   0160A0  0108               	movlb	8	; () banked
 23681   0160A2  6F27               	movwf	(_bioreq_cbuffadr+3)& (0+255),b
 23682   0160A4                     
 23683                           ; BSR set to: 8
 23684                           ;../src/w65_main.c: 366:        if ( !fh.bios_sw ) binv.sw = 0;
 23685   0160A4  51C1               	movf	(_fh+31)& (0+255),w,b
 23686   0160A6  A4D8               	btfss	status,2,c
 23687   0160A8  EF58  F0B0         	goto	u33631
 23688   0160AC  EF5A  F0B0         	goto	u33630
 23689   0160B0                     u33631:
 23690   0160B0  EF5D  F0B0         	goto	l1140
 23691   0160B4                     u33630:
 23692   0160B4                     
 23693                           ; BSR set to: 8
 23694   0160B4  6B78               	clrf	_binv& (0+255),b
 23695   0160B6  EF5D  F0B0         	goto	l24235
 23696   0160BA                     l1140:
 23697   0160BA                     l24235:
 23698                           
 23699                           ;../src/w65_main.c: 371:    write_sram(adr, (uint8_t *)rdbuf, (unsigned int)br);
 23700   0160BA  C70A  F504         	movff	load_program@adr,write_sram@addr
 23701   0160BE  C70B  F505         	movff	load_program@adr+1,write_sram@addr+1
 23702   0160C2  C70C  F506         	movff	load_program@adr+2,write_sram@addr+2
 23703   0160C6  C70D  F507         	movff	load_program@adr+3,write_sram@addr+3
 23704   0160CA  C706  F508         	movff	load_program@rdbuf,write_sram@buf
 23705   0160CE  C707  F509         	movff	load_program@rdbuf+1,write_sram@buf+1
 23706   0160D2  C710  F50A         	movff	load_program@br,write_sram@len
 23707   0160D6  C711  F50B         	movff	load_program@br+1,write_sram@len+1
 23708   0160DA  EC9F  F0E8         	call	_write_sram	;wreg free
 23709   0160DE                     
 23710                           ;../src/w65_main.c: 372:    adr += (uint32_t)br;
 23711   0160DE  0107               	movlb	7	; () banked
 23712   0160E0  5110               	movf	load_program@br& (0+255),w,b
 23713   0160E2  270A               	addwf	load_program@adr& (0+255),f,b
 23714   0160E4  5111               	movf	(load_program@br+1)& (0+255),w,b
 23715   0160E6  230B               	addwfc	(load_program@adr+1)& (0+255),f,b
 23716   0160E8  0E00               	movlw	0
 23717   0160EA  230C               	addwfc	(load_program@adr+2)& (0+255),f,b
 23718   0160EC  0E00               	movlw	0
 23719   0160EE  230D               	addwfc	(load_program@adr+3)& (0+255),f,b
 23720   0160F0                     
 23721                           ; BSR set to: 7
 23722                           ;../src/w65_main.c: 373:    cnt -= (uint16_t)br;
 23723   0160F0  5110               	movf	load_program@br& (0+255),w,b
 23724   0160F2  5F0E               	subwf	load_program@cnt& (0+255),f,b
 23725   0160F4  5111               	movf	(load_program@br+1)& (0+255),w,b
 23726   0160F6  5B0F               	subwfb	(load_program@cnt+1)& (0+255),f,b
 23727   0160F8                     
 23728                           ; BSR set to: 7
 23729                           ;../src/w65_main.c: 374:    if (btr > (UINT)cnt) btr = (UINT)cnt;
 23730   0160F8  5108               	movf	load_program@btr& (0+255),w,b
 23731   0160FA  5D0E               	subwf	load_program@cnt& (0+255),w,b
 23732   0160FC  5109               	movf	(load_program@btr+1)& (0+255),w,b
 23733   0160FE  590F               	subwfb	(load_program@cnt+1)& (0+255),w,b
 23734   016100  B0D8               	btfsc	status,0,c
 23735   016102  EF85  F0B0         	goto	u33641
 23736   016106  EF87  F0B0         	goto	u33640
 23737   01610A                     u33641:
 23738   01610A  EF8B  F0B0         	goto	l24245
 23739   01610E                     u33640:
 23740   01610E                     
 23741                           ; BSR set to: 7
 23742   01610E  C70E  F708         	movff	load_program@cnt,load_program@btr
 23743   016112  C70F  F709         	movff	load_program@cnt+1,load_program@btr+1
 23744   016116                     l24245:
 23745                           
 23746                           ; BSR set to: 7
 23747                           ;../src/w65_main.c: 321:  while( cnt ) {
 23748   016116  510E               	movf	load_program@cnt& (0+255),w,b
 23749   016118  110F               	iorwf	(load_program@cnt+1)& (0+255),w,b
 23750   01611A  A4D8               	btfss	status,2,c
 23751   01611C  EF92  F0B0         	goto	u33651
 23752   016120  EF94  F0B0         	goto	u33650
 23753   016124                     u33651:
 23754   016124  EFCB  F0AE         	goto	l24179
 23755   016128                     u33650:
 23756   016128                     l24247:
 23757                           
 23758                           ; BSR set to: 7
 23759                           ;../src/w65_main.c: 378:  if (fr == FR_OK) {
 23760   016128  5112               	movf	load_program@fr& (0+255),w,b
 23761   01612A  A4D8               	btfss	status,2,c
 23762   01612C  EF9A  F0B0         	goto	u33661
 23763   016130  EF9C  F0B0         	goto	u33660
 23764   016134                     u33661:
 23765   016134  EFB5  F0B0         	goto	l24251
 23766   016138                     u33660:
 23767   016138                     
 23768                           ; BSR set to: 7
 23769                           ;../src/w65_main.c: 379:   printf("Load %s : Adr = $%06lX, Size = $%04X\r\n", fname, adr
      +                          0, file_size);
 23770   016138  0E41               	movlw	low STR_82
 23771   01613A  0105               	movlb	5	; () banked
 23772   01613C  6FAD               	movwf	printf@fmt& (0+255),b
 23773   01613E  0EF6               	movlw	high STR_82
 23774   016140  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23775   016142  C700  F5AF         	movff	load_program@fname,?_printf+2
 23776   016146  C701  F5B0         	movff	load_program@fname+1,?_printf+3
 23777   01614A  C702  F5B1         	movff	load_program@adr0,?_printf+4
 23778   01614E  C703  F5B2         	movff	load_program@adr0+1,?_printf+5
 23779   016152  C704  F5B3         	movff	load_program@adr0+2,?_printf+6
 23780   016156  C705  F5B4         	movff	load_program@adr0+3,?_printf+7
 23781   01615A  C7B9  F5B5         	movff	_file_size,?_printf+8
 23782   01615E  C7BA  F5B6         	movff	_file_size+1,?_printf+9
 23783   016162  ECDA  F0FF         	call	_printf	;wreg free
 23784                           
 23785                           ;../src/w65_main.c: 380:  }
 23786   016166  EFC5  F0B0         	goto	l1151
 23787   01616A                     l24251:
 23788                           
 23789                           ; BSR set to: 7
 23790                           ;../src/w65_main.c: 382:   if (fr != FR_INVALID_OBJECT) printf("File Load Error.\r\n");
 23791   01616A  0E09               	movlw	9
 23792   01616C  1912               	xorwf	load_program@fr& (0+255),w,b
 23793   01616E  B4D8               	btfsc	status,2,c
 23794   016170  EFBC  F0B0         	goto	u33671
 23795   016174  EFBE  F0B0         	goto	u33670
 23796   016178                     u33671:
 23797   016178  EFC5  F0B0         	goto	l1151
 23798   01617C                     u33670:
 23799   01617C                     
 23800                           ; BSR set to: 7
 23801   01617C  0EFC               	movlw	low STR_83
 23802   01617E  0105               	movlb	5	; () banked
 23803   016180  6FAD               	movwf	printf@fmt& (0+255),b
 23804   016182  0EFC               	movlw	high STR_83
 23805   016184  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23806   016186  ECDA  F0FF         	call	_printf	;wreg free
 23807   01618A                     l1151:
 23808                           
 23809                           ;../src/w65_main.c: 384:  f_close(&rom_fl);
 23810   01618A  0ED6               	movlw	low _rom_fl
 23811   01618C  0106               	movlb	6	; () banked
 23812   01618E  6F2F               	movwf	f_close@fp& (0+255),b
 23813   016190  0E0F               	movlw	high _rom_fl
 23814   016192  6F30               	movwf	(f_close@fp+1)& (0+255),b
 23815   016194  ECDB  F0FB         	call	_f_close	;wreg free
 23816   016198  EFAD  F0AE         	goto	l24171
 23817   01619C                     l1134:
 23818                           
 23819                           ; BSR set to: 7
 23820   01619C  0012               	return		;funcret
 23821   01619E                     __end_of_load_program:
 23822                           	callstack 0
 23823                           
 23824 ;; *************** function _strstr *****************
 23825 ;; Defined at:
 23826 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strstr.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;  h               2   10[COMRAM] PTR const unsigned char 
 23829 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23830 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23831 ;;  n               2   12[COMRAM] PTR const unsigned char 
 23832 ;;		 -> STR_130(2), STR_128(3), STR_68(1), STR_67(2), 
 23833 ;;		 -> STR_66(5), STR_65(6), STR_64(5), STR_63(6), 
 23834 ;;		 -> STR_62(8), STR_61(4), STR_60(5), STR_59(7), 
 23835 ;;		 -> STR_58(7), STR_57(5), STR_56(3), STR_55(4), 
 23836 ;;		 -> STR_54(3), STR_53(8), STR_52(8), STR_51(11), 
 23837 ;;		 -> STR_50(11), STR_46(8), 
 23838 ;; Auto vars:     Size  Location     Type
 23839 ;;  nl              2   14[COMRAM] unsigned int 
 23840 ;; Return value:  Size  Location     Type
 23841 ;;                  2   10[COMRAM] PTR unsigned char 
 23842 ;; Registers used:
 23843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23844 ;; Tracked objects:
 23845 ;;		On entry : 0/0
 23846 ;;		On exit  : 0/0
 23847 ;;		Unchanged: 0/0
 23848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23853 ;;Total ram usage:        6 bytes
 23854 ;; Hardware stack levels used: 1
 23855 ;; Hardware stack levels required when called: 2
 23856 ;; This function calls:
 23857 ;;		_strchr
 23858 ;;		_strlen
 23859 ;;		_strncmp
 23860 ;; This function is called by:
 23861 ;;		_main
 23862 ;;		_load_program
 23863 ;;		_load_config
 23864 ;;		_boot_file
 23865 ;;		_load_file
 23866 ;;		_mon_prog
 23867 ;;		_see_file
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text52
 23872   01DD9E                     __ptext52:
 23873                           	callstack 0
 23874   01DD9E                     _strstr:
 23875                           	callstack 124
 23876   01DD9E  500D               	movf	strstr@n^(0+1280),w,c
 23877   01DDA0  100E               	iorwf	(strstr@n+1)^(0+1280),w,c
 23878   01DDA2  B4D8               	btfsc	status,2,c
 23879   01DDA4  EFD6  F0EE         	goto	u32961
 23880   01DDA8  EFD8  F0EE         	goto	u32960
 23881   01DDAC                     u32961:
 23882   01DDAC  EF39  F0EF         	goto	l23789
 23883   01DDB0                     u32960:
 23884   01DDB0  C50D  F504         	movff	strstr@n,strlen@s
 23885   01DDB4  C50E  F505         	movff	strstr@n+1,strlen@s+1
 23886   01DDB8  ECB0  F0FC         	call	_strlen	;wreg free
 23887   01DDBC  C504  F50F         	movff	?_strlen,strstr@nl
 23888   01DDC0  C505  F510         	movff	?_strlen+1,strstr@nl+1
 23889   01DDC4  EF17  F0EF         	goto	l23785
 23890   01DDC8                     l23777:
 23891   01DDC8  C50B  F504         	movff	strstr@h,strncmp@l
 23892   01DDCC  C50C  F505         	movff	strstr@h+1,strncmp@l+1
 23893   01DDD0  C50D  F506         	movff	strstr@n,strncmp@r
 23894   01DDD4  C50E  F507         	movff	strstr@n+1,strncmp@r+1
 23895   01DDD8  C50F  F508         	movff	strstr@nl,strncmp@n
 23896   01DDDC  C510  F509         	movff	strstr@nl+1,strncmp@n+1
 23897   01DDE0  EC83  F0E6         	call	_strncmp	;wreg free
 23898   01DDE4  5004               	movf	?_strncmp^(0+1280),w,c
 23899   01DDE6  1005               	iorwf	(?_strncmp+1)^(0+1280),w,c
 23900   01DDE8  A4D8               	btfss	status,2,c
 23901   01DDEA  EFF9  F0EE         	goto	u32971
 23902   01DDEE  EFFB  F0EE         	goto	u32970
 23903   01DDF2                     u32971:
 23904   01DDF2  EF01  F0EF         	goto	l23783
 23905   01DDF6                     u32970:
 23906   01DDF6  C50B  F50B         	movff	strstr@h,?_strstr
 23907   01DDFA  C50C  F50C         	movff	strstr@h+1,?_strstr+1
 23908   01DDFE  EF3D  F0EF         	goto	l3633
 23909   01DE02                     l23783:
 23910   01DE02  0E01               	movlw	1
 23911   01DE04  240B               	addwf	strstr@h^(0+1280),w,c
 23912   01DE06  6E04               	movwf	strchr@s^(0+1280),c
 23913   01DE08  0E00               	movlw	0
 23914   01DE0A  200C               	addwfc	(strstr@h+1)^(0+1280),w,c
 23915   01DE0C  6E05               	movwf	(strchr@s+1)^(0+1280),c
 23916   01DE0E  C50D  F4F6         	movff	strstr@n,tblptrl
 23917   01DE12  C50E  F4F7         	movff	strstr@n+1,tblptrh
 23918   01DE16                     	if	0	;tblptru may be non-zero
 23919   01DE16                     	endif
 23920   01DE16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23921   01DE16  0E00               	movlw	low (__mediumconst shr (0+16))
 23922   01DE18  6EF8               	movwf	tblptru,c
 23923   01DE1A                     	endif
 23924   01DE1A  0008               	tblrd		*
 23925   01DE1C  50F5               	movf	tablat,w,c
 23926   01DE1E  6E06               	movwf	strchr@c^(0+1280),c
 23927   01DE20  6A07               	clrf	(strchr@c+1)^(0+1280),c
 23928   01DE22  EC75  F0F8         	call	_strchr	;wreg free
 23929   01DE26  C504  F50B         	movff	?_strchr,strstr@h
 23930   01DE2A  C505  F50C         	movff	?_strchr+1,strstr@h+1
 23931   01DE2E                     l23785:
 23932   01DE2E  500B               	movf	strstr@h^(0+1280),w,c
 23933   01DE30  100C               	iorwf	(strstr@h+1)^(0+1280),w,c
 23934   01DE32  B4D8               	btfsc	status,2,c
 23935   01DE34  EF1E  F0EF         	goto	u32981
 23936   01DE38  EF20  F0EF         	goto	u32980
 23937   01DE3C                     u32981:
 23938   01DE3C  EF39  F0EF         	goto	l23789
 23939   01DE40                     u32980:
 23940   01DE40  C50B  F4F6         	movff	strstr@h,tblptrl
 23941   01DE44  C50C  F4F7         	movff	strstr@h+1,tblptrh
 23942   01DE48  0E00               	movlw	low (__mediumconst shr (0+16))
 23943   01DE4A  6EF8               	movwf	tblptru,c
 23944   01DE4C  0E25               	movlw	(high __ramtop+-1)
 23945   01DE4E  64F7               	cpfsgt	tblptrh,c
 23946   01DE50  D003               	bra	u32997
 23947   01DE52  0008               	tblrd		*
 23948   01DE54  50F5               	movf	tablat,w,c
 23949   01DE56  D005               	bra	u32990
 23950   01DE58                     u32997:
 23951   01DE58  C4F6 F4E9          	movff	tblptrl,fsr0l
 23952   01DE5C  C4F7 F4EA          	movff	tblptrh,fsr0h
 23953   01DE60  50EF               	movf	indf0,w,c
 23954   01DE62                     u32990:
 23955   01DE62  0900               	iorlw	0
 23956   01DE64  A4D8               	btfss	status,2,c
 23957   01DE66  EF37  F0EF         	goto	u33001
 23958   01DE6A  EF39  F0EF         	goto	u33000
 23959   01DE6E                     u33001:
 23960   01DE6E  EFE4  F0EE         	goto	l23777
 23961   01DE72                     u33000:
 23962   01DE72                     l23789:
 23963   01DE72  0E00               	movlw	0
 23964   01DE74  6E0B               	movwf	?_strstr^(0+1280),c
 23965   01DE76  0E00               	movlw	0
 23966   01DE78  6E0C               	movwf	(?_strstr+1)^(0+1280),c
 23967   01DE7A                     l3633:
 23968   01DE7A  0012               	return		;funcret
 23969   01DE7C                     __end_of_strstr:
 23970                           	callstack 0
 23971                           
 23972 ;; *************** function _strncmp *****************
 23973 ;; Defined at:
 23974 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
 23975 ;; Parameters:    Size  Location     Type
 23976 ;;  l               2    3[COMRAM] PTR const unsigned char 
 23977 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23978 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23979 ;;  r               2    5[COMRAM] PTR const unsigned char 
 23980 ;;		 -> STR_130(2), STR_128(3), STR_68(1), STR_67(2), 
 23981 ;;		 -> STR_66(5), STR_65(6), STR_64(5), STR_63(6), 
 23982 ;;		 -> STR_62(8), STR_61(4), STR_60(5), STR_59(7), 
 23983 ;;		 -> STR_58(7), STR_57(5), STR_56(3), STR_55(4), 
 23984 ;;		 -> STR_54(3), STR_53(8), STR_52(8), STR_51(11), 
 23985 ;;		 -> STR_50(11), STR_46(8), 
 23986 ;;  n               2    7[COMRAM] unsigned int 
 23987 ;; Auto vars:     Size  Location     Type
 23988 ;;		None
 23989 ;; Return value:  Size  Location     Type
 23990 ;;                  2    3[COMRAM] int 
 23991 ;; Registers used:
 23992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23993 ;; Tracked objects:
 23994 ;;		On entry : 0/0
 23995 ;;		On exit  : 0/0
 23996 ;;		Unchanged: 0/0
 23997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24002 ;;Total ram usage:        7 bytes
 24003 ;; Hardware stack levels used: 1
 24004 ;; Hardware stack levels required when called: 1
 24005 ;; This function calls:
 24006 ;;		Nothing
 24007 ;; This function is called by:
 24008 ;;		_strstr
 24009 ;; This function uses a non-reentrant model
 24010 ;;
 24011                           
 24012                           	psect	text53
 24013   01CD06                     __ptext53:
 24014                           	callstack 0
 24015   01CD06                     _strncmp:
 24016                           	callstack 124
 24017   01CD06  0608               	decf	strncmp@n^(0+1280),f,c
 24018   01CD08  A0D8               	btfss	status,0,c
 24019   01CD0A  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 24020   01CD0C  2808               	incf	strncmp@n^(0+1280),w,c
 24021   01CD0E  E106               	bnz	u20291
 24022   01CD10  2809               	incf	(strncmp@n+1)^(0+1280),w,c
 24023   01CD12  A4D8               	btfss	status,2,c
 24024   01CD14  EF8E  F0E6         	goto	u20291
 24025   01CD18  EF90  F0E6         	goto	u20290
 24026   01CD1C                     u20291:
 24027   01CD1C  EF9D  F0E6         	goto	l15881
 24028   01CD20                     u20290:
 24029   01CD20  0E00               	movlw	0
 24030   01CD22  6E05               	movwf	(?_strncmp+1)^(0+1280),c
 24031   01CD24  0E00               	movlw	0
 24032   01CD26  6E04               	movwf	?_strncmp^(0+1280),c
 24033   01CD28  EF10  F0E7         	goto	l3640
 24034   01CD2C                     l15879:
 24035   01CD2C  4A04               	infsnz	strncmp@l^(0+1280),f,c
 24036   01CD2E  2A05               	incf	(strncmp@l+1)^(0+1280),f,c
 24037   01CD30  4A06               	infsnz	strncmp@r^(0+1280),f,c
 24038   01CD32  2A07               	incf	(strncmp@r+1)^(0+1280),f,c
 24039   01CD34  0608               	decf	strncmp@n^(0+1280),f,c
 24040   01CD36  A0D8               	btfss	status,0,c
 24041   01CD38  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 24042   01CD3A                     l15881:
 24043   01CD3A  C504  F4F6         	movff	strncmp@l,tblptrl
 24044   01CD3E  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24045   01CD42  0E00               	movlw	low (__mediumconst shr (0+16))
 24046   01CD44  6EF8               	movwf	tblptru,c
 24047   01CD46  0E25               	movlw	(high __ramtop+-1)
 24048   01CD48  64F7               	cpfsgt	tblptrh,c
 24049   01CD4A  D003               	bra	u20307
 24050   01CD4C  0008               	tblrd		*
 24051   01CD4E  50F5               	movf	tablat,w,c
 24052   01CD50  D005               	bra	u20300
 24053   01CD52                     u20307:
 24054   01CD52  C4F6 F4E9          	movff	tblptrl,fsr0l
 24055   01CD56  C4F7 F4EA          	movff	tblptrh,fsr0h
 24056   01CD5A  50EF               	movf	indf0,w,c
 24057   01CD5C                     u20300:
 24058   01CD5C  0900               	iorlw	0
 24059   01CD5E  B4D8               	btfsc	status,2,c
 24060   01CD60  EFB4  F0E6         	goto	u20311
 24061   01CD64  EFB6  F0E6         	goto	u20310
 24062   01CD68                     u20311:
 24063   01CD68  EFF1  F0E6         	goto	l15889
 24064   01CD6C                     u20310:
 24065   01CD6C  C506  F4F6         	movff	strncmp@r,tblptrl
 24066   01CD70  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24067   01CD74                     	if	0	;tblptru may be non-zero
 24068   01CD74                     	endif
 24069   01CD74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24070   01CD74  0E00               	movlw	low (__mediumconst shr (0+16))
 24071   01CD76  6EF8               	movwf	tblptru,c
 24072   01CD78                     	endif
 24073   01CD78  0008               	tblrd		*
 24074   01CD7A  50F5               	movf	tablat,w,c
 24075   01CD7C  0900               	iorlw	0
 24076   01CD7E  B4D8               	btfsc	status,2,c
 24077   01CD80  EFC4  F0E6         	goto	u20321
 24078   01CD84  EFC6  F0E6         	goto	u20320
 24079   01CD88                     u20321:
 24080   01CD88  EFF1  F0E6         	goto	l15889
 24081   01CD8C                     u20320:
 24082   01CD8C  5008               	movf	strncmp@n^(0+1280),w,c
 24083   01CD8E  1009               	iorwf	(strncmp@n+1)^(0+1280),w,c
 24084   01CD90  B4D8               	btfsc	status,2,c
 24085   01CD92  EFCD  F0E6         	goto	u20331
 24086   01CD96  EFCF  F0E6         	goto	u20330
 24087   01CD9A                     u20331:
 24088   01CD9A  EFF1  F0E6         	goto	l15889
 24089   01CD9E                     u20330:
 24090   01CD9E  C506  F4F6         	movff	strncmp@r,tblptrl
 24091   01CDA2  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24092   01CDA6                     	if	0	;tblptru may be non-zero
 24093   01CDA6                     	endif
 24094   01CDA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24095   01CDA6  0E00               	movlw	low (__mediumconst shr (0+16))
 24096   01CDA8  6EF8               	movwf	tblptru,c
 24097   01CDAA                     	endif
 24098   01CDAA  0008               	tblrd		*
 24099   01CDAC  C4F5 F50A          	movff	tablat,??_strncmp
 24100   01CDB0  C504  F4F6         	movff	strncmp@l,tblptrl
 24101   01CDB4  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24102   01CDB8  0E00               	movlw	low (__mediumconst shr (0+16))
 24103   01CDBA  6EF8               	movwf	tblptru,c
 24104   01CDBC  0E25               	movlw	(high __ramtop+-1)
 24105   01CDBE  64F7               	cpfsgt	tblptrh,c
 24106   01CDC0  D003               	bra	u20347
 24107   01CDC2  0008               	tblrd		*
 24108   01CDC4  50F5               	movf	tablat,w,c
 24109   01CDC6  D005               	bra	u20345
 24110   01CDC8                     u20347:
 24111   01CDC8  C4F6 F4E9          	movff	tblptrl,fsr0l
 24112   01CDCC  C4F7 F4EA          	movff	tblptrh,fsr0h
 24113   01CDD0  50EF               	movf	indf0,w,c
 24114   01CDD2                     u20345:
 24115   01CDD2  180A               	xorwf	??_strncmp^(0+1280),w,c
 24116   01CDD4  B4D8               	btfsc	status,2,c
 24117   01CDD6  EFEF  F0E6         	goto	u20341
 24118   01CDDA  EFF1  F0E6         	goto	u20340
 24119   01CDDE                     u20341:
 24120   01CDDE  EF96  F0E6         	goto	l15879
 24121   01CDE2                     u20340:
 24122   01CDE2                     l15889:
 24123   01CDE2  C504  F4F6         	movff	strncmp@l,tblptrl
 24124   01CDE6  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24125   01CDEA  0E00               	movlw	low (__mediumconst shr (0+16))
 24126   01CDEC  6EF8               	movwf	tblptru,c
 24127   01CDEE  0E25               	movlw	(high __ramtop+-1)
 24128   01CDF0  64F7               	cpfsgt	tblptrh,c
 24129   01CDF2  D003               	bra	u20357
 24130   01CDF4  0008               	tblrd		*
 24131   01CDF6  50F5               	movf	tablat,w,c
 24132   01CDF8  D005               	bra	u20350
 24133   01CDFA                     u20357:
 24134   01CDFA  C4F6 F4E9          	movff	tblptrl,fsr0l
 24135   01CDFE  C4F7 F4EA          	movff	tblptrh,fsr0h
 24136   01CE02  50EF               	movf	indf0,w,c
 24137   01CE04                     u20350:
 24138   01CE04  6E0A               	movwf	??_strncmp^(0+1280),c
 24139   01CE06  C506  F4F6         	movff	strncmp@r,tblptrl
 24140   01CE0A  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24141   01CE0E                     	if	0	;tblptru may be non-zero
 24142   01CE0E                     	endif
 24143   01CE0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24144   01CE0E  0E00               	movlw	low (__mediumconst shr (0+16))
 24145   01CE10  6EF8               	movwf	tblptru,c
 24146   01CE12                     	endif
 24147   01CE12  0008               	tblrd		*
 24148   01CE14  50F5               	movf	tablat,w,c
 24149   01CE16  5C0A               	subwf	??_strncmp^(0+1280),w,c
 24150   01CE18  6E04               	movwf	?_strncmp^(0+1280),c
 24151   01CE1A  6A05               	clrf	(?_strncmp+1)^(0+1280),c
 24152   01CE1C  A0D8               	btfss	status,0,c
 24153   01CE1E  0605               	decf	(?_strncmp+1)^(0+1280),f,c
 24154   01CE20                     l3640:
 24155   01CE20  0012               	return		;funcret
 24156   01CE22                     __end_of_strncmp:
 24157                           	callstack 0
 24158                           
 24159 ;; *************** function _strlen *****************
 24160 ;; Defined at:
 24161 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
 24162 ;; Parameters:    Size  Location     Type
 24163 ;;  s               2    3[COMRAM] PTR const unsigned char 
 24164 ;;		 -> f_printf@str(32), STR_130(2), STR_128(3), STR_68(1), 
 24165 ;;		 -> STR_67(2), STR_66(5), STR_65(6), STR_64(5), 
 24166 ;;		 -> STR_63(6), STR_62(8), STR_61(4), STR_60(5), 
 24167 ;;		 -> STR_59(7), STR_58(7), STR_57(5), STR_56(3), 
 24168 ;;		 -> STR_55(4), STR_54(3), STR_53(8), STR_52(8), 
 24169 ;;		 -> STR_51(11), STR_50(11), STR_46(8), 
 24170 ;; Auto vars:     Size  Location     Type
 24171 ;;  a               2    5[COMRAM] PTR const unsigned char 
 24172 ;;		 -> f_printf@str(32), STR_130(2), STR_128(3), STR_68(1), 
 24173 ;;		 -> STR_67(2), STR_66(5), STR_65(6), STR_64(5), 
 24174 ;;		 -> STR_63(6), STR_62(8), STR_61(4), STR_60(5), 
 24175 ;;		 -> STR_59(7), STR_58(7), STR_57(5), STR_56(3), 
 24176 ;;		 -> STR_55(4), STR_54(3), STR_53(8), STR_52(8), 
 24177 ;;		 -> STR_51(11), STR_50(11), STR_46(8), 
 24178 ;; Return value:  Size  Location     Type
 24179 ;;                  2    3[COMRAM] unsigned int 
 24180 ;; Registers used:
 24181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 24182 ;; Tracked objects:
 24183 ;;		On entry : 0/0
 24184 ;;		On exit  : 0/0
 24185 ;;		Unchanged: 0/0
 24186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24191 ;;Total ram usage:        4 bytes
 24192 ;; Hardware stack levels used: 1
 24193 ;; Hardware stack levels required when called: 1
 24194 ;; This function calls:
 24195 ;;		Nothing
 24196 ;; This function is called by:
 24197 ;;		_main
 24198 ;;		_load_config
 24199 ;;		_strstr
 24200 ;;		_f_printf
 24201 ;; This function uses a non-reentrant model
 24202 ;;
 24203                           
 24204                           	psect	text54
 24205   01F960                     __ptext54:
 24206                           	callstack 0
 24207   01F960                     _strlen:
 24208                           	callstack 124
 24209   01F960  C504  F506         	movff	strlen@s,strlen@a
 24210   01F964  C505  F507         	movff	strlen@s+1,strlen@a+1
 24211   01F968  EFB8  F0FC         	goto	l15867
 24212   01F96C                     l15865:
 24213   01F96C  4A04               	infsnz	strlen@s^(0+1280),f,c
 24214   01F96E  2A05               	incf	(strlen@s+1)^(0+1280),f,c
 24215   01F970                     l15867:
 24216   01F970  C504  F4F6         	movff	strlen@s,tblptrl
 24217   01F974  C505  F4F7         	movff	strlen@s+1,tblptrh
 24218   01F978  0E00               	movlw	low (__mediumconst shr (0+16))
 24219   01F97A  6EF8               	movwf	tblptru,c
 24220   01F97C  0E25               	movlw	(high __ramtop+-1)
 24221   01F97E  64F7               	cpfsgt	tblptrh,c
 24222   01F980  D003               	bra	u20277
 24223   01F982  0008               	tblrd		*
 24224   01F984  50F5               	movf	tablat,w,c
 24225   01F986  D005               	bra	u20270
 24226   01F988                     u20277:
 24227   01F988  C4F6 F4E9          	movff	tblptrl,fsr0l
 24228   01F98C  C4F7 F4EA          	movff	tblptrh,fsr0h
 24229   01F990  50EF               	movf	indf0,w,c
 24230   01F992                     u20270:
 24231   01F992  0900               	iorlw	0
 24232   01F994  A4D8               	btfss	status,2,c
 24233   01F996  EFCF  F0FC         	goto	u20281
 24234   01F99A  EFD1  F0FC         	goto	u20280
 24235   01F99E                     u20281:
 24236   01F99E  EFB6  F0FC         	goto	l15865
 24237   01F9A2                     u20280:
 24238   01F9A2  5006               	movf	strlen@a^(0+1280),w,c
 24239   01F9A4  5C04               	subwf	strlen@s^(0+1280),w,c
 24240   01F9A6  6E04               	movwf	?_strlen^(0+1280),c
 24241   01F9A8  5007               	movf	(strlen@a+1)^(0+1280),w,c
 24242   01F9AA  5805               	subwfb	(strlen@s+1)^(0+1280),w,c
 24243   01F9AC  6E05               	movwf	(?_strlen+1)^(0+1280),c
 24244   01F9AE  0012               	return		;funcret
 24245   01F9B0                     __end_of_strlen:
 24246                           	callstack 0
 24247                           
 24248 ;; *************** function _sprintf *****************
 24249 ;; Defined at:
 24250 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
 24251 ;; Parameters:    Size  Location     Type
 24252 ;;  s               2   77[BANK5 ] PTR unsigned char 
 24253 ;;		 -> fin_name(13), binv(42), 
 24254 ;;  fmt             2   79[BANK5 ] PTR const unsigned char 
 24255 ;;		 -> STR_107(3), STR_81(3), 
 24256 ;; Auto vars:     Size  Location     Type
 24257 ;;  f              11   85[BANK5 ] struct _IO_FILE
 24258 ;;  ap              2   83[BANK5 ] PTR void [1]
 24259 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24260 ;;  ret             2    0        int 
 24261 ;; Return value:  Size  Location     Type
 24262 ;;                  2   77[BANK5 ] int 
 24263 ;; Registers used:
 24264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24265 ;; Tracked objects:
 24266 ;;		On entry : 0/0
 24267 ;;		On exit  : 0/0
 24268 ;;		Unchanged: 0/0
 24269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24271 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24273 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24274 ;;Total ram usage:       19 bytes
 24275 ;; Hardware stack levels used: 1
 24276 ;; Hardware stack levels required when called: 8
 24277 ;; This function calls:
 24278 ;;		_vfprintf
 24279 ;; This function is called by:
 24280 ;;		_load_program
 24281 ;;		_boot_file
 24282 ;; This function uses a non-reentrant model
 24283 ;;
 24284                           
 24285                           	psect	text55
 24286   01F9B0                     __ptext55:
 24287                           	callstack 0
 24288   01F9B0                     _sprintf:
 24289                           	callstack 116
 24290   01F9B0  0EB1               	movlw	low (?_sprintf+4)
 24291   01F9B2  0105               	movlb	5	; () banked
 24292   01F9B4  6FB3               	movwf	sprintf@ap& (0+255),b
 24293   01F9B6  0E05               	movlw	high (?_sprintf+4)
 24294   01F9B8  6FB4               	movwf	(sprintf@ap+1)& (0+255),b
 24295   01F9BA  C5AD  F5B5         	movff	sprintf@s,sprintf@f
 24296   01F9BE  C5AE  F5B6         	movff	sprintf@s+1,sprintf@f+1
 24297   01F9C2                     
 24298                           ; BSR set to: 5
 24299   01F9C2  0E00               	movlw	0
 24300   01F9C4  6FB8               	movwf	(sprintf@f+3)& (0+255),b
 24301   01F9C6  0E00               	movlw	0
 24302   01F9C8  6FB7               	movwf	(sprintf@f+2)& (0+255),b
 24303   01F9CA                     
 24304                           ; BSR set to: 5
 24305   01F9CA  0E00               	movlw	0
 24306   01F9CC  6FBF               	movwf	(sprintf@f+10)& (0+255),b
 24307   01F9CE  0E00               	movlw	0
 24308   01F9D0  6FBE               	movwf	(sprintf@f+9)& (0+255),b
 24309   01F9D2                     
 24310                           ; BSR set to: 5
 24311   01F9D2  0EB5               	movlw	low sprintf@f
 24312   01F9D4  6FA5               	movwf	vfprintf@fp& (0+255),b
 24313   01F9D6  0E05               	movlw	high sprintf@f
 24314   01F9D8  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 24315   01F9DA  C5AF  F5A7         	movff	sprintf@fmt,vfprintf@fmt
 24316   01F9DE  C5B0  F5A8         	movff	sprintf@fmt+1,vfprintf@fmt+1
 24317   01F9E2  0EB3               	movlw	low sprintf@ap
 24318   01F9E4  6FA9               	movwf	vfprintf@ap& (0+255),b
 24319   01F9E6  0E05               	movlw	high sprintf@ap
 24320   01F9E8  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 24321   01F9EA  EC07  F0FC         	call	_vfprintf	;wreg free
 24322   01F9EE  0105               	movlb	5	; () banked
 24323   01F9F0  51B7               	movf	(sprintf@f+2)& (0+255),w,b
 24324   01F9F2  25AD               	addwf	sprintf@s& (0+255),w,b
 24325   01F9F4  6ED9               	movwf	fsr2l,c
 24326   01F9F6  51B8               	movf	(sprintf@f+3)& (0+255),w,b
 24327   01F9F8  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
 24328   01F9FA  6EDA               	movwf	fsr2h,c
 24329   01F9FC  6ADF               	clrf	indf2,c
 24330   01F9FE                     
 24331                           ; BSR set to: 5
 24332   01F9FE  0012               	return		;funcret
 24333   01FA00                     __end_of_sprintf:
 24334                           	callstack 0
 24335                           
 24336 ;; *************** function _drive_cpu *****************
 24337 ;; Defined at:
 24338 ;;		line 613 in file "../src/w65_main.c"
 24339 ;; Parameters:    Size  Location     Type
 24340 ;;		None
 24341 ;; Auto vars:     Size  Location     Type
 24342 ;;  rs              1  255[BANK6 ] enum E17409
 24343 ;; Return value:  Size  Location     Type
 24344 ;;                  1    wreg      enum E17409
 24345 ;; Registers used:
 24346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24347 ;; Tracked objects:
 24348 ;;		On entry : 0/0
 24349 ;;		On exit  : 0/0
 24350 ;;		Unchanged: 0/0
 24351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;Total ram usage:        1 bytes
 24357 ;; Hardware stack levels used: 1
 24358 ;; Hardware stack levels required when called: 24
 24359 ;; This function calls:
 24360 ;;		_board_event_loop
 24361 ;;		_board_event_loop1
 24362 ;;		_timer_off
 24363 ;;		_timer_on
 24364 ;; This function is called by:
 24365 ;;		_setup_monitor
 24366 ;;		_boot_file
 24367 ;;		_return_cpu
 24368 ;;		_wstart_prog
 24369 ;;		_restart_prog
 24370 ;;		_mon_prog
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text56
 24375   01FD40                     __ptext56:
 24376                           	callstack 0
 24377   01FD40                     _drive_cpu:
 24378                           	callstack 101
 24379   01FD40                     
 24380                           ;../src/w65_main.c: 615:  FRESULT rs;;../src/w65_main.c: 617:  nmi_sig = 0;
 24381   01FD40  0107               	movlb	7	; () banked
 24382   01FD42  6BCD               	clrf	_nmi_sig& (0+255),b
 24383   01FD44                     
 24384                           ; BSR set to: 7
 24385                           ;../src/w65_main.c: 618:  if( !fh.irq_sw ) {
 24386   01FD44  0108               	movlb	8	; () banked
 24387   01FD46  51BB               	movf	(_fh+25)& (0+255),w,b
 24388   01FD48  A4D8               	btfss	status,2,c
 24389   01FD4A  EFA9  F0FE         	goto	u33681
 24390   01FD4E  EFAB  F0FE         	goto	u33680
 24391   01FD52                     u33681:
 24392   01FD52  EFB1  F0FE         	goto	l24267
 24393   01FD56                     u33680:
 24394   01FD56                     
 24395                           ; BSR set to: 8
 24396                           ;../src/w65_main.c: 619:   timer_off();
 24397   01FD56  EC42  F001         	call	_timer_off	;wreg free
 24398   01FD5A                     
 24399                           ;../src/w65_main.c: 620:   board_event_loop1();
 24400   01FD5A  ECF5  F0F9         	call	_board_event_loop1	;wreg free
 24401                           
 24402                           ;../src/w65_main.c: 621:  }
 24403   01FD5E  EFB5  F0FE         	goto	l24271
 24404   01FD62                     l24267:
 24405                           
 24406                           ; BSR set to: 8
 24407                           ;../src/w65_main.c: 623:   timer_on();
 24408   01FD62  EC40  F001         	call	_timer_on	;wreg free
 24409   01FD66                     
 24410                           ;../src/w65_main.c: 624:   board_event_loop();
 24411   01FD66  ECD0  F0F5         	call	_board_event_loop	;wreg free
 24412   01FD6A                     l24271:
 24413                           
 24414                           ;../src/w65_main.c: 628:  rs = (FRESULT)(wup_flg - 1);
 24415   01FD6A  0107               	movlb	7	; () banked
 24416   01FD6C  05CC               	decf	_wup_flg& (0+255),w,b
 24417   01FD6E  0106               	movlb	6	; () banked
 24418   01FD70  6FFF               	movwf	drive_cpu@rs& (0+255),b
 24419   01FD72                     
 24420                           ; BSR set to: 6
 24421                           ;../src/w65_main.c: 629:  wup_flg = 0;
 24422   01FD72  0107               	movlb	7	; () banked
 24423   01FD74  6BCC               	clrf	_wup_flg& (0+255),b
 24424   01FD76                     
 24425                           ; BSR set to: 7
 24426                           ;../src/w65_main.c: 631:  return rs;
 24427   01FD76  0106               	movlb	6	; () banked
 24428   01FD78  51FF               	movf	drive_cpu@rs& (0+255),w,b
 24429   01FD7A                     
 24430                           ; BSR set to: 6
 24431   01FD7A  0012               	return		;funcret
 24432   01FD7C                     __end_of_drive_cpu:
 24433                           	callstack 0
 24434                           
 24435 ;; *************** function _timer_on *****************
 24436 ;; Defined at:
 24437 ;;		line 445 in file "../src/boards/w65_cmn.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;		None
 24440 ;; Auto vars:     Size  Location     Type
 24441 ;;		None
 24442 ;; Return value:  Size  Location     Type
 24443 ;;                  1    wreg      void 
 24444 ;; Registers used:
 24445 ;;		None
 24446 ;; Tracked objects:
 24447 ;;		On entry : 0/0
 24448 ;;		On exit  : 0/0
 24449 ;;		Unchanged: 0/0
 24450 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24455 ;;Total ram usage:        0 bytes
 24456 ;; Hardware stack levels used: 1
 24457 ;; Hardware stack levels required when called: 1
 24458 ;; This function calls:
 24459 ;;		Nothing
 24460 ;; This function is called by:
 24461 ;;		_drive_cpu
 24462 ;; This function uses a non-reentrant model
 24463 ;;
 24464                           
 24465                           	psect	text57
 24466   000280                     __ptext57:
 24467                           	callstack 0
 24468   000280                     _timer_on:
 24469                           	callstack 123
 24470   000280                     
 24471                           ;../src/boards/w65_cmn.c: 446:  TMR0IE = 1;
 24472   000280  8EA1               	bsf	1185,7,c	;volatile
 24473   000282  0012               	return		;funcret
 24474   000284                     __end_of_timer_on:
 24475                           	callstack 0
 24476                           
 24477 ;; *************** function _timer_off *****************
 24478 ;; Defined at:
 24479 ;;		line 441 in file "../src/boards/w65_cmn.c"
 24480 ;; Parameters:    Size  Location     Type
 24481 ;;		None
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;		None
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  1    wreg      void 
 24486 ;; Registers used:
 24487 ;;		None
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/0
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;Total ram usage:        0 bytes
 24498 ;; Hardware stack levels used: 1
 24499 ;; Hardware stack levels required when called: 1
 24500 ;; This function calls:
 24501 ;;		Nothing
 24502 ;; This function is called by:
 24503 ;;		_drive_cpu
 24504 ;; This function uses a non-reentrant model
 24505 ;;
 24506                           
 24507                           	psect	text58
 24508   000284                     __ptext58:
 24509                           	callstack 0
 24510   000284                     _timer_off:
 24511                           	callstack 123
 24512   000284                     
 24513                           ;../src/boards/w65_cmn.c: 442:  TMR0IE = 0;
 24514   000284  9EA1               	bcf	1185,7,c	;volatile
 24515   000286  0012               	return		;funcret
 24516   000288                     __end_of_timer_off:
 24517                           	callstack 0
 24518                           
 24519 ;; *************** function _board_event_loop1 *****************
 24520 ;; Defined at:
 24521 ;;		line 348 in file "../src/boards/w65_bd.c"
 24522 ;; Parameters:    Size  Location     Type
 24523 ;;		None
 24524 ;; Auto vars:     Size  Location     Type
 24525 ;;		None
 24526 ;; Return value:  Size  Location     Type
 24527 ;;                  1    wreg      void 
 24528 ;; Registers used:
 24529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24530 ;; Tracked objects:
 24531 ;;		On entry : 0/0
 24532 ;;		On exit  : 0/0
 24533 ;;		Unchanged: 0/0
 24534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24539 ;;Total ram usage:        0 bytes
 24540 ;; Hardware stack levels used: 1
 24541 ;; Hardware stack levels required when called: 23
 24542 ;; This function calls:
 24543 ;;		_bus_hold_req
 24544 ;;		_bus_master_operation
 24545 ;;		_bus_release_req
 24546 ;; This function is called by:
 24547 ;;		_drive_cpu
 24548 ;; This function uses a non-reentrant model
 24549 ;;
 24550                           
 24551                           	psect	text59
 24552   01F3EA                     __ptext59:
 24553                           	callstack 0
 24554   01F3EA                     _board_event_loop1:
 24555                           	callstack 101
 24556   01F3EA                     l429:
 24557   01F3EA                     l430:
 24558   01F3EA  BACE               	btfsc	1230,5,c	;volatile
 24559   01F3EC  EFFA  F0F9         	goto	u32891
 24560   01F3F0  EFFC  F0F9         	goto	u32890
 24561   01F3F4                     u32891:
 24562   01F3F4  EFF5  F0F9         	goto	l430
 24563   01F3F8                     u32890:
 24564   01F3F8                     
 24565                           ;../src/boards/w65_bd.c: 353:   CLCSELECT = 0;
 24566   01F3F8  0100               	movlb	0	; () banked
 24567   01F3FA  6BD5               	clrf	213,b	;volatile
 24568                           
 24569                           ;../src/boards/w65_bd.c: 354:   G2POL = 0;
 24570   01F3FC  93D7               	bcf	215,1,b	;volatile
 24571   01F3FE                     
 24572                           ; BSR set to: 0
 24573                           ;../src/boards/w65_bd.c: 355:   bus_hold_req();
 24574   01F3FE  EC2C  F001         	call	_bus_hold_req	;wreg free
 24575   01F402                     
 24576                           ;../src/boards/w65_bd.c: 356:   bus_master_operation();
 24577   01F402  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 24578   01F406                     
 24579                           ;../src/boards/w65_bd.c: 357:   if(wup_flg) return;
 24580   01F406  0107               	movlb	7	; () banked
 24581   01F408  51CC               	movf	_wup_flg& (0+255),w,b
 24582   01F40A  B4D8               	btfsc	status,2,c
 24583   01F40C  EF0A  F0FA         	goto	u32901
 24584   01F410  EF0C  F0FA         	goto	u32900
 24585   01F414                     u32901:
 24586   01F414  EF0E  F0FA         	goto	l23693
 24587   01F418                     u32900:
 24588   01F418  EF2F  F0FA         	goto	l434
 24589   01F41C                     l23693:
 24590                           
 24591                           ; BSR set to: 7
 24592                           ;../src/boards/w65_bd.c: 358:   bus_release_req();
 24593   01F41C  EC32  F001         	call	_bus_release_req	;wreg free
 24594   01F420                     
 24595                           ;../src/boards/w65_bd.c: 360:   G2POL = 1;
 24596   01F420  0100               	movlb	0	; () banked
 24597   01F422  83D7               	bsf	215,1,b	;volatile
 24598   01F424                     
 24599                           ; BSR set to: 0
 24600                           ;../src/boards/w65_bd.c: 362:   CLCSELECT = 1;
 24601   01F424  0E01               	movlw	1
 24602   01F426  6FD5               	movwf	213,b	;volatile
 24603   01F428                     
 24604                           ; BSR set to: 0
 24605                           ;../src/boards/w65_bd.c: 363:   G2POL = 1;
 24606   01F428  83D7               	bsf	215,1,b	;volatile
 24607   01F42A                     l435:
 24608                           
 24609                           ; BSR set to: 0
 24610   01F42A  AFD4               	btfss	212,7,b	;volatile
 24611   01F42C  EF1A  F0FA         	goto	u32911
 24612   01F430  EF1C  F0FA         	goto	u32910
 24613   01F434                     u32911:
 24614   01F434  EF15  F0FA         	goto	l435
 24615   01F438                     u32910:
 24616   01F438                     
 24617                           ; BSR set to: 0
 24618                           ;../src/boards/w65_bd.c: 365:   G2POL = 0;
 24619   01F438  93D7               	bcf	215,1,b	;volatile
 24620   01F43A                     
 24621                           ; BSR set to: 0
 24622                           ;../src/boards/w65_bd.c: 366:   CLCSELECT = 7;
 24623   01F43A  0E07               	movlw	7
 24624   01F43C  6FD5               	movwf	213,b	;volatile
 24625   01F43E                     
 24626                           ; BSR set to: 0
 24627                           ;../src/boards/w65_bd.c: 367:   G3POL = 1;
 24628   01F43E  85D7               	bsf	215,2,b	;volatile
 24629   01F440                     
 24630                           ; BSR set to: 0
 24631                           ;../src/boards/w65_bd.c: 368:   G3POL = 0;
 24632   01F440  95D7               	bcf	215,2,b	;volatile
 24633                           
 24634                           ;../src/boards/w65_bd.c: 370:   if (nmi_sig) {
 24635   01F442  0107               	movlb	7	; () banked
 24636   01F444  51CD               	movf	_nmi_sig& (0+255),w,b
 24637   01F446  B4D8               	btfsc	status,2,c
 24638   01F448  EF28  F0FA         	goto	u32921
 24639   01F44C  EF2A  F0FA         	goto	u32920
 24640   01F450                     u32921:
 24641   01F450  EFF5  F0F9         	goto	l429
 24642   01F454                     u32920:
 24643   01F454                     
 24644                           ; BSR set to: 7
 24645                           ;../src/boards/w65_bd.c: 371:    LATE1 = 0;
 24646   01F454  92C2               	bcf	1218,1,c	;volatile
 24647                           
 24648                           ;../src/boards/w65_bd.c: 372:    LATE1 = 1;
 24649   01F456  82C2               	bsf	1218,1,c	;volatile
 24650                           
 24651                           ;../src/boards/w65_bd.c: 373:    nmi_sig = 0;
 24652   01F458  6BCD               	clrf	_nmi_sig& (0+255),b
 24653   01F45A  EFF5  F0F9         	goto	l429
 24654   01F45E                     l434:
 24655                           
 24656                           ; BSR set to: 7
 24657   01F45E  0012               	return		;funcret
 24658   01F460                     __end_of_board_event_loop1:
 24659                           	callstack 0
 24660                           
 24661 ;; *************** function _board_event_loop *****************
 24662 ;; Defined at:
 24663 ;;		line 307 in file "../src/boards/w65_bd.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;		None
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;		None
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1    wreg      void 
 24670 ;; Registers used:
 24671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24672 ;; Tracked objects:
 24673 ;;		On entry : 0/0
 24674 ;;		On exit  : 0/0
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;Total ram usage:        0 bytes
 24682 ;; Hardware stack levels used: 1
 24683 ;; Hardware stack levels required when called: 23
 24684 ;; This function calls:
 24685 ;;		_bus_hold_req
 24686 ;;		_bus_master_operation
 24687 ;;		_bus_release_req
 24688 ;;		_make_irq
 24689 ;; This function is called by:
 24690 ;;		_drive_cpu
 24691 ;; This function uses a non-reentrant model
 24692 ;;
 24693                           
 24694                           	psect	text60
 24695   01EBA0                     __ptext60:
 24696                           	callstack 0
 24697   01EBA0                     _board_event_loop:
 24698                           	callstack 101
 24699   01EBA0                     l415:
 24700                           
 24701                           ;../src/boards/w65_bd.c: 310:   while (RA5) {
 24702   01EBA0  EFE1  F0F5         	goto	l23653
 24703   01EBA4                     l23643:
 24704                           
 24705                           ;../src/boards/w65_bd.c: 311:    if ( irq_flg >= 1 ) {
 24706   01EBA4  0107               	movlb	7	; () banked
 24707   01EBA6  51CB               	movf	_irq_flg& (0+255),w,b
 24708   01EBA8  B4D8               	btfsc	status,2,c
 24709   01EBAA  EFD9  F0F5         	goto	u32841
 24710   01EBAE  EFDB  F0F5         	goto	u32840
 24711   01EBB2                     u32841:
 24712   01EBB2  EFE1  F0F5         	goto	l23653
 24713   01EBB6                     u32840:
 24714   01EBB6                     
 24715                           ; BSR set to: 7
 24716                           ;../src/boards/w65_bd.c: 312:     make_irq();
 24717   01EBB6  ECEE  F0FF         	call	_make_irq	;wreg free
 24718   01EBBA                     
 24719                           ;../src/boards/w65_bd.c: 313:     GIE = 0;
 24720   01EBBA  9ED6               	bcf	1238,7,c	;volatile
 24721   01EBBC                     
 24722                           ;../src/boards/w65_bd.c: 314:     irq_flg = 0;
 24723   01EBBC  0107               	movlb	7	; () banked
 24724   01EBBE  6BCB               	clrf	_irq_flg& (0+255),b
 24725   01EBC0                     
 24726                           ; BSR set to: 7
 24727                           ;../src/boards/w65_bd.c: 315:     GIE = 1;
 24728   01EBC0  8ED6               	bsf	1238,7,c	;volatile
 24729   01EBC2                     l23653:
 24730                           
 24731                           ;../src/boards/w65_bd.c: 310:   while (RA5) {
 24732   01EBC2  BACE               	btfsc	1230,5,c	;volatile
 24733   01EBC4  EFE6  F0F5         	goto	u32851
 24734   01EBC8  EFE8  F0F5         	goto	u32850
 24735   01EBCC                     u32851:
 24736   01EBCC  EFD2  F0F5         	goto	l23643
 24737   01EBD0                     u32850:
 24738   01EBD0                     
 24739                           ;../src/boards/w65_bd.c: 319:   CLCSELECT = 0;
 24740   01EBD0  0100               	movlb	0	; () banked
 24741   01EBD2  6BD5               	clrf	213,b	;volatile
 24742                           
 24743                           ;../src/boards/w65_bd.c: 320:   G2POL = 0;
 24744   01EBD4  93D7               	bcf	215,1,b	;volatile
 24745   01EBD6                     
 24746                           ; BSR set to: 0
 24747                           ;../src/boards/w65_bd.c: 321:   bus_hold_req();
 24748   01EBD6  EC2C  F001         	call	_bus_hold_req	;wreg free
 24749   01EBDA                     
 24750                           ;../src/boards/w65_bd.c: 322:   bus_master_operation();
 24751   01EBDA  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 24752   01EBDE                     
 24753                           ;../src/boards/w65_bd.c: 323:   if(wup_flg) return;
 24754   01EBDE  0107               	movlb	7	; () banked
 24755   01EBE0  51CC               	movf	_wup_flg& (0+255),w,b
 24756   01EBE2  B4D8               	btfsc	status,2,c
 24757   01EBE4  EFF6  F0F5         	goto	u32861
 24758   01EBE8  EFF8  F0F5         	goto	u32860
 24759   01EBEC                     u32861:
 24760   01EBEC  EFFA  F0F5         	goto	l23663
 24761   01EBF0                     u32860:
 24762   01EBF0  EF1E  F0F6         	goto	l421
 24763   01EBF4                     l23663:
 24764                           
 24765                           ; BSR set to: 7
 24766                           ;../src/boards/w65_bd.c: 324:   bus_release_req();
 24767   01EBF4  EC32  F001         	call	_bus_release_req	;wreg free
 24768   01EBF8                     
 24769                           ;../src/boards/w65_bd.c: 326:   G2POL = 1;
 24770   01EBF8  0100               	movlb	0	; () banked
 24771   01EBFA  83D7               	bsf	215,1,b	;volatile
 24772   01EBFC                     
 24773                           ; BSR set to: 0
 24774                           ;../src/boards/w65_bd.c: 328:   CLCSELECT = 1;
 24775   01EBFC  0E01               	movlw	1
 24776   01EBFE  6FD5               	movwf	213,b	;volatile
 24777   01EC00                     
 24778                           ; BSR set to: 0
 24779                           ;../src/boards/w65_bd.c: 329:   G2POL = 1;
 24780   01EC00  83D7               	bsf	215,1,b	;volatile
 24781   01EC02                     l422:
 24782                           
 24783                           ; BSR set to: 0
 24784   01EC02  AFD4               	btfss	212,7,b	;volatile
 24785   01EC04  EF06  F0F6         	goto	u32871
 24786   01EC08  EF08  F0F6         	goto	u32870
 24787   01EC0C                     u32871:
 24788   01EC0C  EF01  F0F6         	goto	l422
 24789   01EC10                     u32870:
 24790   01EC10                     
 24791                           ; BSR set to: 0
 24792                           ;../src/boards/w65_bd.c: 331:   G2POL = 0;
 24793   01EC10  93D7               	bcf	215,1,b	;volatile
 24794   01EC12                     
 24795                           ; BSR set to: 0
 24796                           ;../src/boards/w65_bd.c: 332:   CLCSELECT = 7;
 24797   01EC12  0E07               	movlw	7
 24798   01EC14  6FD5               	movwf	213,b	;volatile
 24799   01EC16                     
 24800                           ; BSR set to: 0
 24801                           ;../src/boards/w65_bd.c: 333:   G3POL = 1;
 24802   01EC16  85D7               	bsf	215,2,b	;volatile
 24803   01EC18                     
 24804                           ; BSR set to: 0
 24805                           ;../src/boards/w65_bd.c: 334:   G3POL = 0;
 24806   01EC18  95D7               	bcf	215,2,b	;volatile
 24807   01EC1A                     
 24808                           ; BSR set to: 0
 24809                           ;../src/boards/w65_bd.c: 336:   GIE = 0;
 24810   01EC1A  9ED6               	bcf	1238,7,c	;volatile
 24811   01EC1C                     
 24812                           ; BSR set to: 0
 24813                           ;../src/boards/w65_bd.c: 337:   irq_flg = 0;
 24814   01EC1C  0107               	movlb	7	; () banked
 24815   01EC1E  6BCB               	clrf	_irq_flg& (0+255),b
 24816   01EC20                     
 24817                           ; BSR set to: 7
 24818                           ;../src/boards/w65_bd.c: 338:   GIE = 1;
 24819   01EC20  8ED6               	bsf	1238,7,c	;volatile
 24820                           
 24821                           ;../src/boards/w65_bd.c: 340:   if (nmi_sig) {
 24822   01EC22  51CD               	movf	_nmi_sig& (0+255),w,b
 24823   01EC24  B4D8               	btfsc	status,2,c
 24824   01EC26  EF17  F0F6         	goto	u32881
 24825   01EC2A  EF19  F0F6         	goto	u32880
 24826   01EC2E                     u32881:
 24827   01EC2E  EFD0  F0F5         	goto	l415
 24828   01EC32                     u32880:
 24829   01EC32                     
 24830                           ; BSR set to: 7
 24831                           ;../src/boards/w65_bd.c: 341:    LATE1 = 0;
 24832   01EC32  92C2               	bcf	1218,1,c	;volatile
 24833                           
 24834                           ;../src/boards/w65_bd.c: 342:    LATE1 = 1;
 24835   01EC34  82C2               	bsf	1218,1,c	;volatile
 24836                           
 24837                           ;../src/boards/w65_bd.c: 343:    nmi_sig = 0;
 24838   01EC36  6BCD               	clrf	_nmi_sig& (0+255),b
 24839   01EC38  EFD0  F0F5         	goto	l415
 24840   01EC3C                     l421:
 24841                           
 24842                           ; BSR set to: 7
 24843   01EC3C  0012               	return		;funcret
 24844   01EC3E                     __end_of_board_event_loop:
 24845                           	callstack 0
 24846                           
 24847 ;; *************** function _make_irq *****************
 24848 ;; Defined at:
 24849 ;;		line 40 in file "../src/boards/w65_cmn.c"
 24850 ;; Parameters:    Size  Location     Type
 24851 ;;		None
 24852 ;; Auto vars:     Size  Location     Type
 24853 ;;		None
 24854 ;; Return value:  Size  Location     Type
 24855 ;;                  1    wreg      void 
 24856 ;; Registers used:
 24857 ;;		wreg, status,2
 24858 ;; Tracked objects:
 24859 ;;		On entry : 0/0
 24860 ;;		On exit  : 0/0
 24861 ;;		Unchanged: 0/0
 24862 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24867 ;;Total ram usage:        0 bytes
 24868 ;; Hardware stack levels used: 1
 24869 ;; Hardware stack levels required when called: 1
 24870 ;; This function calls:
 24871 ;;		Nothing
 24872 ;; This function is called by:
 24873 ;;		_board_event_loop
 24874 ;; This function uses a non-reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text61
 24878   01FFDC                     __ptext61:
 24879                           	callstack 0
 24880   01FFDC                     _make_irq:
 24881                           	callstack 122
 24882   01FFDC                     
 24883                           ;../src/boards/w65_cmn.c: 42:  CLCSELECT = 1;
 24884   01FFDC  0E01               	movlw	1
 24885   01FFDE  0100               	movlb	0	; () banked
 24886   01FFE0  6FD5               	movwf	213,b	;volatile
 24887   01FFE2                     
 24888                           ; BSR set to: 0
 24889                           ;../src/boards/w65_cmn.c: 43:  G2POL = 1;
 24890   01FFE2  83D7               	bsf	215,1,b	;volatile
 24891   01FFE4                     l281:
 24892                           
 24893                           ; BSR set to: 0
 24894   01FFE4  AFD4               	btfss	212,7,b	;volatile
 24895   01FFE6  EFF7  F0FF         	goto	u32721
 24896   01FFEA  EFF9  F0FF         	goto	u32720
 24897   01FFEE                     u32721:
 24898   01FFEE  EFF2  F0FF         	goto	l281
 24899   01FFF2                     u32720:
 24900   01FFF2                     
 24901                           ; BSR set to: 0
 24902                           ;../src/boards/w65_cmn.c: 45:  G2POL = 0;
 24903   01FFF2  93D7               	bcf	215,1,b	;volatile
 24904   01FFF4                     
 24905                           ; BSR set to: 0
 24906                           ;../src/boards/w65_cmn.c: 46:  CLCSELECT = 7;
 24907   01FFF4  0E07               	movlw	7
 24908   01FFF6  6FD5               	movwf	213,b	;volatile
 24909   01FFF8                     
 24910                           ; BSR set to: 0
 24911                           ;../src/boards/w65_cmn.c: 47:  G3POL = 1;
 24912   01FFF8  85D7               	bsf	215,2,b	;volatile
 24913   01FFFA                     
 24914                           ; BSR set to: 0
 24915                           ;../src/boards/w65_cmn.c: 48:  G3POL = 0;
 24916   01FFFA  95D7               	bcf	215,2,b	;volatile
 24917   01FFFC                     
 24918                           ; BSR set to: 0
 24919   01FFFC  0012               	return		;funcret
 24920   01FFFE                     __end_of_make_irq:
 24921                           	callstack 0
 24922                           
 24923 ;; *************** function _bus_release_req *****************
 24924 ;; Defined at:
 24925 ;;		line 295 in file "../src/boards/w65_bd.c"
 24926 ;; Parameters:    Size  Location     Type
 24927 ;;		None
 24928 ;; Auto vars:     Size  Location     Type
 24929 ;;		None
 24930 ;; Return value:  Size  Location     Type
 24931 ;;                  1    wreg      void 
 24932 ;; Registers used:
 24933 ;;		None
 24934 ;; Tracked objects:
 24935 ;;		On entry : 0/0
 24936 ;;		On exit  : 0/0
 24937 ;;		Unchanged: 0/0
 24938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24943 ;;Total ram usage:        0 bytes
 24944 ;; Hardware stack levels used: 1
 24945 ;; Hardware stack levels required when called: 1
 24946 ;; This function calls:
 24947 ;;		Nothing
 24948 ;; This function is called by:
 24949 ;;		_reset_cpu
 24950 ;;		_start_cpu
 24951 ;;		_start_W65
 24952 ;;		_board_event_loop
 24953 ;;		_board_event_loop1
 24954 ;;		_continue_action
 24955 ;; This function uses a non-reentrant model
 24956 ;;
 24957                           
 24958                           	psect	text62
 24959   000264                     __ptext62:
 24960                           	callstack 0
 24961   000264                     _bus_release_req:
 24962                           	callstack 123
 24963   000264                     
 24964                           ;../src/boards/w65_bd.c: 297:  TRISC = 0xff;
 24965   000264  68C8               	setf	200,c	;volatile
 24966                           
 24967                           ;../src/boards/w65_bd.c: 298:  TRISD = 0xff;
 24968   000266  68C9               	setf	201,c	;volatile
 24969                           
 24970                           ;../src/boards/w65_bd.c: 300:  TRISA1 = 1;
 24971   000268  82C6               	bsf	1222,1,c	;volatile
 24972                           
 24973                           ;../src/boards/w65_bd.c: 301:  TRISA4 = 1;
 24974   00026A  88C6               	bsf	1222,4,c	;volatile
 24975   00026C  0012               	return		;funcret
 24976   00026E                     __end_of_bus_release_req:
 24977                           	callstack 0
 24978                           
 24979 ;; *************** function _bus_master_operation *****************
 24980 ;; Defined at:
 24981 ;;		line 201 in file "../src/io_dos.c"
 24982 ;; Parameters:    Size  Location     Type
 24983 ;;		None
 24984 ;; Auto vars:     Size  Location     Type
 24985 ;;  cnt             2   20[BANK7 ] unsigned short 
 24986 ;;  buf             2   18[BANK7 ] PTR unsigned char 
 24987 ;;		 -> tmp_buf(512), 
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1    wreg      void 
 24990 ;; Registers used:
 24991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24998 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25000 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25001 ;;Total ram usage:        6 bytes
 25002 ;; Hardware stack levels used: 1
 25003 ;; Hardware stack levels required when called: 22
 25004 ;; This function calls:
 25005 ;;		_dsk_err
 25006 ;;		_get_str
 25007 ;;		_in_file
 25008 ;;		_putch
 25009 ;;		_read_sector
 25010 ;;		_read_sram
 25011 ;;		_setup_drive
 25012 ;;		_str_inf
 25013 ;;		_u_getch
 25014 ;;		_unimon_console
 25015 ;;		_write_sector
 25016 ;;		_write_sram
 25017 ;; This function is called by:
 25018 ;;		_board_event_loop
 25019 ;;		_board_event_loop1
 25020 ;; This function uses a non-reentrant model
 25021 ;;
 25022                           
 25023                           	psect	text63
 25024   018BA2                     __ptext63:
 25025                           	callstack 0
 25026   018BA2                     _bus_master_operation:
 25027                           	callstack 101
 25028   018BA2                     
 25029                           ;../src/io_dos.c: 202:  uint8_t *buf;;../src/io_dos.c: 203:  uint16_t cnt;;../src/io_dos
      +                          .c: 206:  read_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, (unsigned int)sizeof(crq_hdr))
      +                          ;
 25030   018BA2  C7DB  F504         	movff	_bioreq_ubuffadr,read_sram@addr
 25031   018BA6  C7DC  F505         	movff	_bioreq_ubuffadr+1,read_sram@addr+1
 25032   018BAA  C7DD  F506         	movff	_bioreq_ubuffadr+2,read_sram@addr+2
 25033   018BAE  C7DE  F507         	movff	_bioreq_ubuffadr+3,read_sram@addr+3
 25034   018BB2  0ECE               	movlw	low _req_tbl
 25035   018BB4  6E08               	movwf	read_sram@buf^(0+1280),c
 25036   018BB6  0E07               	movlw	high _req_tbl
 25037   018BB8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 25038   018BBA  0E00               	movlw	0
 25039   018BBC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 25040   018BBE  0E0D               	movlw	13
 25041   018BC0  6E0A               	movwf	read_sram@len^(0+1280),c
 25042   018BC2  EC0C  F0F2         	call	_read_sram	;wreg free
 25043   018BC6                     
 25044                           ;../src/io_dos.c: 208:  if (req_tbl.UREQ_COM) {
 25045   018BC6  0107               	movlb	7	; () banked
 25046   018BC8  51CE               	movf	_req_tbl& (0+255),w,b
 25047   018BCA  B4D8               	btfsc	status,2,c
 25048   018BCC  EFEA  F0C5         	goto	u32731
 25049   018BD0  EFEC  F0C5         	goto	u32730
 25050   018BD4                     u32731:
 25051   018BD4  EF02  F0C6         	goto	l23585
 25052   018BD8                     u32730:
 25053   018BD8                     
 25054                           ; BSR set to: 7
 25055                           ;../src/io_dos.c: 209:   unimon_console();
 25056   018BD8  EC2D  F0D6         	call	_unimon_console	;wreg free
 25057   018BDC                     
 25058                           ;../src/io_dos.c: 212:   write_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, 2);
 25059   018BDC  C7DB  F504         	movff	_bioreq_ubuffadr,write_sram@addr
 25060   018BE0  C7DC  F505         	movff	_bioreq_ubuffadr+1,write_sram@addr+1
 25061   018BE4  C7DD  F506         	movff	_bioreq_ubuffadr+2,write_sram@addr+2
 25062   018BE8  C7DE  F507         	movff	_bioreq_ubuffadr+3,write_sram@addr+3
 25063   018BEC  0ECE               	movlw	low _req_tbl
 25064   018BEE  6E08               	movwf	write_sram@buf^(0+1280),c
 25065   018BF0  0E07               	movlw	high _req_tbl
 25066   018BF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 25067   018BF4  0E00               	movlw	0
 25068   018BF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 25069   018BF8  0E02               	movlw	2
 25070   018BFA  6E0A               	movwf	write_sram@len^(0+1280),c
 25071   018BFC  EC9F  F0E8         	call	_write_sram	;wreg free
 25072                           
 25073                           ;../src/io_dos.c: 213:  }
 25074   018C00  EF2A  F0C7         	goto	l864
 25075   018C04                     l23585:
 25076                           
 25077                           ; BSR set to: 7
 25078                           ;../src/io_dos.c: 215:   buf = &tmp_buf[0][0];
 25079   018C04  0EF8               	movlw	low _tmp_buf
 25080   018C06  6F12               	movwf	bus_master_operation@buf& (0+255),b
 25081   018C08  0E13               	movlw	high _tmp_buf
 25082   018C0A  6F13               	movwf	(bus_master_operation@buf+1)& (0+255),b
 25083                           
 25084                           ;../src/io_dos.c: 216:   switch (req_tbl.CREQ_COM) {
 25085   018C0C  EFF3  F0C6         	goto	l23635
 25086   018C10                     l23587:
 25087                           
 25088                           ; BSR set to: 7
 25089                           ;../src/io_dos.c: 219:     req_tbl.CBI_CHR = (uint8_t)(*get_char[cin_no])();
 25090   018C10  51CA               	movf	_cin_no& (0+255),w,b
 25091   018C12  0D03               	mullw	3
 25092   018C14  0ED9               	movlw	low _get_char
 25093   018C16  24F3               	addwf	243,w,c
 25094   018C18  6ED9               	movwf	fsr2l,c
 25095   018C1A  0E08               	movlw	high _get_char
 25096   018C1C  20F4               	addwfc	prodh,w,c
 25097   018C1E  6EDA               	movwf	fsr2h,c
 25098   018C20  D802               	call	u32748
 25099   018C22  EF1D  F0C6         	goto	u32749
 25100   018C26                     u32748:
 25101   018C26  0005               	push	
 25102   018C28  6EFA               	movwf	pclath,c
 25103   018C2A  50DE               	movf	postinc2,w,c
 25104   018C2C  6EFD               	movwf	tosl,c
 25105   018C2E  50DE               	movf	postinc2,w,c
 25106   018C30  6EFE               	movwf	tosh,c
 25107   018C32  50DE               	movf	postinc2,w,c
 25108   018C34  6EFF               	movwf	tosu,c
 25109   018C36  50FA               	movf	pclath,w,c
 25110   018C38  0012               	return		;indir
 25111   018C3A                     u32749:
 25112   018C3A  0107               	movlb	7	; () banked
 25113   018C3C  5100               	movf	?_in_file& (0+255),w,b
 25114   018C3E  6FD1               	movwf	(_req_tbl+3)& (0+255),b
 25115                           
 25116                           ;../src/io_dos.c: 220:     break;
 25117   018C40  EF16  F0C7         	goto	l842
 25118   018C44                     l23589:
 25119                           
 25120                           ; BSR set to: 7
 25121                           ;../src/io_dos.c: 223:     putch((char)req_tbl.CBI_CHR);
 25122   018C44  51D1               	movf	(_req_tbl+3)& (0+255),w,b
 25123   018C46  EC03  F001         	call	_putch
 25124                           
 25125                           ;../src/io_dos.c: 224:     break;
 25126   018C4A  EF16  F0C7         	goto	l842
 25127   018C4E                     l23591:
 25128                           
 25129                           ; BSR set to: 7
 25130                           ;../src/io_dos.c: 227:     if ( !cin_no ) req_tbl.CBI_CHR = (rx_cnt !=0) ? 255 : 0;
 25131   018C4E  51CA               	movf	_cin_no& (0+255),w,b
 25132   018C50  A4D8               	btfss	status,2,c
 25133   018C52  EF2D  F0C6         	goto	u32751
 25134   018C56  EF2F  F0C6         	goto	u32750
 25135   018C5A                     u32751:
 25136   018C5A  EF45  F0C6         	goto	l845
 25137   018C5E                     u32750:
 25138   018C5E                     
 25139                           ; BSR set to: 7
 25140   018C5E  51C1               	movf	_rx_cnt& (0+255),w,b
 25141   018C60  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 25142   018C62  A4D8               	btfss	status,2,c
 25143   018C64  EF36  F0C6         	goto	u32761
 25144   018C68  EF38  F0C6         	goto	u32760
 25145   018C6C                     u32761:
 25146   018C6C  EF3E  F0C6         	goto	l23597
 25147   018C70                     u32760:
 25148   018C70                     
 25149                           ; BSR set to: 7
 25150   018C70  0E00               	movlw	0
 25151   018C72  6F11               	movwf	(_bus_master_operation$1027+1)& (0+255),b
 25152   018C74  0E00               	movlw	0
 25153   018C76  6F10               	movwf	_bus_master_operation$1027& (0+255),b
 25154   018C78  EF41  F0C6         	goto	l23599
 25155   018C7C                     l23597:
 25156                           
 25157                           ; BSR set to: 7
 25158   018C7C  0E00               	movlw	0
 25159   018C7E  6F11               	movwf	(_bus_master_operation$1027+1)& (0+255),b
 25160   018C80  6910               	setf	_bus_master_operation$1027& (0+255),b
 25161   018C82                     l23599:
 25162                           
 25163                           ; BSR set to: 7
 25164   018C82  C710  F7D1         	movff	_bus_master_operation$1027,_req_tbl+3
 25165   018C86  EF16  F0C7         	goto	l842
 25166   018C8A                     l845:
 25167                           
 25168                           ; BSR set to: 7
 25169   018C8A  69D1               	setf	(_req_tbl+3)& (0+255),b
 25170   018C8C  EF16  F0C7         	goto	l842
 25171   018C90                     l851:
 25172                           
 25173                           ; BSR set to: 7
 25174                           ;../src/io_dos.c: 231:     cnt = (uint16_t)req_tbl.CBI_CHR;
 25175   018C90  C7D1  F714         	movff	_req_tbl+3,bus_master_operation@cnt
 25176   018C94  6B15               	clrf	(bus_master_operation@cnt+1)& (0+255),b
 25177   018C96                     
 25178                           ; BSR set to: 7
 25179                           ;../src/io_dos.c: 233:     read_sram(req_tbl.data_adr, buf, cnt);
 25180   018C96  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 25181   018C9A  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 25182   018C9E  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 25183   018CA2  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 25184   018CA6  C712  F508         	movff	bus_master_operation@buf,read_sram@buf
 25185   018CAA  C713  F509         	movff	bus_master_operation@buf+1,read_sram@buf+1
 25186   018CAE  C714  F50A         	movff	bus_master_operation@cnt,read_sram@len
 25187   018CB2  C715  F50B         	movff	bus_master_operation@cnt+1,read_sram@len+1
 25188   018CB6  EC0C  F0F2         	call	_read_sram	;wreg free
 25189                           
 25190                           ;../src/io_dos.c: 234:     while( cnt ) {
 25191   018CBA  EF6C  F0C6         	goto	l23609
 25192   018CBE                     l23603:
 25193                           
 25194                           ; BSR set to: 7
 25195                           ;../src/io_dos.c: 235:      putch( *buf++);
 25196   018CBE  C712  F4D9         	movff	bus_master_operation@buf,fsr2l
 25197   018CC2  C713  F4DA         	movff	bus_master_operation@buf+1,fsr2h
 25198   018CC6  50DF               	movf	indf2,w,c
 25199   018CC8  EC03  F001         	call	_putch
 25200   018CCC  0107               	movlb	7	; () banked
 25201   018CCE  4B12               	infsnz	bus_master_operation@buf& (0+255),f,b
 25202   018CD0  2B13               	incf	(bus_master_operation@buf+1)& (0+255),f,b
 25203   018CD2                     
 25204                           ; BSR set to: 7
 25205                           ;../src/io_dos.c: 236:      cnt--;
 25206   018CD2  0714               	decf	bus_master_operation@cnt& (0+255),f,b
 25207   018CD4  A0D8               	btfss	status,0,c
 25208   018CD6  0715               	decf	(bus_master_operation@cnt+1)& (0+255),f,b
 25209   018CD8                     l23609:
 25210                           
 25211                           ;../src/io_dos.c: 234:     while( cnt ) {
 25212   018CD8  0107               	movlb	7	; () banked
 25213   018CDA  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 25214   018CDC  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 25215   018CDE  A4D8               	btfss	status,2,c
 25216   018CE0  EF74  F0C6         	goto	u32771
 25217   018CE4  EF76  F0C6         	goto	u32770
 25218   018CE8                     u32771:
 25219   018CE8  EF5F  F0C6         	goto	l23603
 25220   018CEC                     u32770:
 25221   018CEC  EF16  F0C7         	goto	l842
 25222   018CF0                     l23611:
 25223                           
 25224                           ; BSR set to: 7
 25225                           ;../src/io_dos.c: 240:     if ( setup_drive() ) {
 25226   018CF0  EC30  F0FA         	call	_setup_drive	;wreg free
 25227   018CF4  5004               	movf	?_setup_drive^(0+1280),w,c
 25228   018CF6  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 25229   018CF8  B4D8               	btfsc	status,2,c
 25230   018CFA  EF81  F0C6         	goto	u32781
 25231   018CFE  EF83  F0C6         	goto	u32780
 25232   018D02                     u32781:
 25233   018D02  EF87  F0C6         	goto	l23615
 25234   018D06                     u32780:
 25235   018D06                     l23613:
 25236                           
 25237                           ;../src/io_dos.c: 241:      dsk_err();
 25238   018D06  EC37  F001         	call	_dsk_err	;wreg free
 25239                           
 25240                           ;../src/io_dos.c: 242:      break;
 25241   018D0A  EF16  F0C7         	goto	l842
 25242   018D0E                     l23615:
 25243                           
 25244                           ;../src/io_dos.c: 244:     if ( read_sector() ) {
 25245   018D0E  ECB4  F0E2         	call	_read_sector	;wreg free
 25246   018D12  0106               	movlb	6	; () banked
 25247   018D14  519A               	movf	?_read_sector& (0+255),w,b
 25248   018D16  119B               	iorwf	(?_read_sector+1)& (0+255),w,b
 25249   018D18  B4D8               	btfsc	status,2,c
 25250   018D1A  EF91  F0C6         	goto	u32791
 25251   018D1E  EF93  F0C6         	goto	u32790
 25252   018D22                     u32791:
 25253   018D22  EF16  F0C7         	goto	l842
 25254   018D26                     u32790:
 25255   018D26  EF83  F0C6         	goto	l23613
 25256   018D2A                     l23619:
 25257                           
 25258                           ; BSR set to: 7
 25259                           ;../src/io_dos.c: 250:     if ( setup_drive() ) {
 25260   018D2A  EC30  F0FA         	call	_setup_drive	;wreg free
 25261   018D2E  5004               	movf	?_setup_drive^(0+1280),w,c
 25262   018D30  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 25263   018D32  B4D8               	btfsc	status,2,c
 25264   018D34  EF9E  F0C6         	goto	u32801
 25265   018D38  EFA0  F0C6         	goto	u32800
 25266   018D3C                     u32801:
 25267   018D3C  EFA2  F0C6         	goto	l23623
 25268   018D40                     u32800:
 25269   018D40  EF83  F0C6         	goto	l23613
 25270   018D44                     l23623:
 25271                           
 25272                           ;../src/io_dos.c: 254:     if ( write_sector() ) {
 25273   018D44  ECC6  F0DC         	call	_write_sector	;wreg free
 25274   018D48  0106               	movlb	6	; () banked
 25275   018D4A  519A               	movf	?_write_sector& (0+255),w,b
 25276   018D4C  119B               	iorwf	(?_write_sector+1)& (0+255),w,b
 25277   018D4E  B4D8               	btfsc	status,2,c
 25278   018D50  EFAC  F0C6         	goto	u32811
 25279   018D54  EFAE  F0C6         	goto	u32810
 25280   018D58                     u32811:
 25281   018D58  EF16  F0C7         	goto	l842
 25282   018D5C                     u32810:
 25283   018D5C  EF83  F0C6         	goto	l23613
 25284   018D60                     l23627:
 25285                           
 25286                           ; BSR set to: 7
 25287                           ;../src/io_dos.c: 260:     cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.CB
      +                          I_CHR);
 25288   018D60  C712  F700         	movff	bus_master_operation@buf,str_inf@buf
 25289   018D64  C713  F701         	movff	bus_master_operation@buf+1,str_inf@buf+1
 25290   018D68  C7D1  F702         	movff	_req_tbl+3,str_inf@cnt
 25291   018D6C  51CA               	movf	_cin_no& (0+255),w,b
 25292   018D6E  0D03               	mullw	3
 25293   018D70  0ED3               	movlw	low _strin_func
 25294   018D72  24F3               	addwf	243,w,c
 25295   018D74  6ED9               	movwf	fsr2l,c
 25296   018D76  0E08               	movlw	high _strin_func
 25297   018D78  20F4               	addwfc	prodh,w,c
 25298   018D7A  6EDA               	movwf	fsr2h,c
 25299   018D7C  D802               	call	u32828
 25300   018D7E  EFCB  F0C6         	goto	u32829
 25301   018D82                     u32828:
 25302   018D82  0005               	push	
 25303   018D84  6EFA               	movwf	pclath,c
 25304   018D86  50DE               	movf	postinc2,w,c
 25305   018D88  6EFD               	movwf	tosl,c
 25306   018D8A  50DE               	movf	postinc2,w,c
 25307   018D8C  6EFE               	movwf	tosh,c
 25308   018D8E  50DE               	movf	postinc2,w,c
 25309   018D90  6EFF               	movwf	tosu,c
 25310   018D92  50FA               	movf	pclath,w,c
 25311   018D94  0012               	return		;indir
 25312   018D96                     u32829:
 25313   018D96  C700  F714         	movff	?_str_inf,bus_master_operation@cnt
 25314   018D9A  C701  F715         	movff	?_str_inf+1,bus_master_operation@cnt+1
 25315   018D9E                     
 25316                           ;../src/io_dos.c: 261:     req_tbl.CBI_CHR = (uint8_t)cnt;
 25317   018D9E  C714  F7D1         	movff	bus_master_operation@cnt,_req_tbl+3
 25318   018DA2                     
 25319                           ;../src/io_dos.c: 262:     if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt)
      +                          ;
 25320   018DA2  0107               	movlb	7	; () banked
 25321   018DA4  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 25322   018DA6  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 25323   018DA8  B4D8               	btfsc	status,2,c
 25324   018DAA  EFD9  F0C6         	goto	u32831
 25325   018DAE  EFDB  F0C6         	goto	u32830
 25326   018DB2                     u32831:
 25327   018DB2  EF16  F0C7         	goto	l842
 25328   018DB6                     u32830:
 25329   018DB6                     
 25330                           ; BSR set to: 7
 25331   018DB6  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 25332   018DBA  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 25333   018DBE  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 25334   018DC2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 25335   018DC6  C712  F508         	movff	bus_master_operation@buf,write_sram@buf
 25336   018DCA  C713  F509         	movff	bus_master_operation@buf+1,write_sram@buf+1
 25337   018DCE  C714  F50A         	movff	bus_master_operation@cnt,write_sram@len
 25338   018DD2  C715  F50B         	movff	bus_master_operation@cnt+1,write_sram@len+1
 25339   018DD6  EC9F  F0E8         	call	_write_sram	;wreg free
 25340   018DDA  EF16  F0C7         	goto	l842
 25341   018DDE                     l863:
 25342                           
 25343                           ; BSR set to: 7
 25344                           ;../src/io_dos.c: 265:     wup_flg = req_tbl.CBI_CHR;
 25345   018DDE  C7D1  F7CC         	movff	_req_tbl+3,_wup_flg
 25346                           
 25347                           ;../src/io_dos.c: 266:   }
 25348   018DE2  EF16  F0C7         	goto	l842
 25349   018DE6                     l23635:
 25350                           
 25351                           ; BSR set to: 7
 25352   018DE6  51D0               	movf	(_req_tbl+2)& (0+255),w,b
 25353                           
 25354                           ; Switch size 1, requested type "simple"
 25355                           ; Number of cases is 8, Range of values is 1 to 255
 25356                           ; switch strategies available:
 25357                           ; Name         Instructions Cycles
 25358                           ; simple_byte           25    13 (average)
 25359                           ;	Chosen strategy is simple_byte
 25360   018DE8  0A01               	xorlw	1	; case 1
 25361   018DEA  B4D8               	btfsc	status,2,c
 25362   018DEC  EF08  F0C6         	goto	l23587
 25363   018DF0  0A03               	xorlw	3	; case 2
 25364   018DF2  B4D8               	btfsc	status,2,c
 25365   018DF4  EF22  F0C6         	goto	l23589
 25366   018DF8  0A01               	xorlw	1	; case 3
 25367   018DFA  B4D8               	btfsc	status,2,c
 25368   018DFC  EF27  F0C6         	goto	l23591
 25369   018E00  0A07               	xorlw	7	; case 4
 25370   018E02  B4D8               	btfsc	status,2,c
 25371   018E04  EF48  F0C6         	goto	l851
 25372   018E08  0A01               	xorlw	1	; case 5
 25373   018E0A  B4D8               	btfsc	status,2,c
 25374   018E0C  EF78  F0C6         	goto	l23611
 25375   018E10  0A03               	xorlw	3	; case 6
 25376   018E12  B4D8               	btfsc	status,2,c
 25377   018E14  EF95  F0C6         	goto	l23619
 25378   018E18  0A01               	xorlw	1	; case 7
 25379   018E1A  B4D8               	btfsc	status,2,c
 25380   018E1C  EFB0  F0C6         	goto	l23627
 25381   018E20  0AF8               	xorlw	248	; case 255
 25382   018E22  B4D8               	btfsc	status,2,c
 25383   018E24  EFEF  F0C6         	goto	l863
 25384   018E28  EF16  F0C7         	goto	l842
 25385   018E2C                     l842:
 25386                           
 25387                           ;../src/io_dos.c: 267:   req_tbl.CREQ_COM = 0;
 25388   018E2C  0107               	movlb	7	; () banked
 25389   018E2E  6BD0               	clrf	(_req_tbl+2)& (0+255),b
 25390   018E30                     
 25391                           ; BSR set to: 7
 25392                           ;../src/io_dos.c: 269:   write_sram(bioreq_cbuffadr, (uint8_t *)&req_tbl.CREQ_COM, 2);
 25393   018E30  C824  F504         	movff	_bioreq_cbuffadr,write_sram@addr
 25394   018E34  C825  F505         	movff	_bioreq_cbuffadr+1,write_sram@addr+1
 25395   018E38  C826  F506         	movff	_bioreq_cbuffadr+2,write_sram@addr+2
 25396   018E3C  C827  F507         	movff	_bioreq_cbuffadr+3,write_sram@addr+3
 25397   018E40  0ED0               	movlw	low (_req_tbl+2)
 25398   018E42  6E08               	movwf	write_sram@buf^(0+1280),c
 25399   018E44  0E07               	movlw	high (_req_tbl+2)
 25400   018E46  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 25401   018E48  0E00               	movlw	0
 25402   018E4A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 25403   018E4C  0E02               	movlw	2
 25404   018E4E  6E0A               	movwf	write_sram@len^(0+1280),c
 25405   018E50  EC9F  F0E8         	call	_write_sram	;wreg free
 25406   018E54                     l864:
 25407   018E54  0012               	return		;funcret
 25408   018E56                     __end_of_bus_master_operation:
 25409                           	callstack 0
 25410                           
 25411 ;; *************** function _write_sector *****************
 25412 ;; Defined at:
 25413 ;;		line 76 in file "../src/io_dos.c"
 25414 ;; Parameters:    Size  Location     Type
 25415 ;;		None
 25416 ;; Auto vars:     Size  Location     Type
 25417 ;;  n               2  162[BANK6 ] unsigned int 
 25418 ;;  filep           2  159[BANK6 ] PTR struct .
 25419 ;;  fres            1  161[BANK6 ] enum E16851
 25420 ;; Return value:  Size  Location     Type
 25421 ;;                  2  154[BANK6 ] int 
 25422 ;; Registers used:
 25423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25424 ;; Tracked objects:
 25425 ;;		On entry : 0/0
 25426 ;;		On exit  : 0/0
 25427 ;;		Unchanged: 0/0
 25428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25429 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25430 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25431 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25432 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;Total ram usage:       10 bytes
 25434 ;; Hardware stack levels used: 1
 25435 ;; Hardware stack levels required when called: 18
 25436 ;; This function calls:
 25437 ;;		_f_sync
 25438 ;;		_f_write
 25439 ;;		_printf
 25440 ;;		_read_sram
 25441 ;;		_seek_disk
 25442 ;;		_util_hexdump_sum
 25443 ;; This function is called by:
 25444 ;;		_bus_master_operation
 25445 ;; This function uses a non-reentrant model
 25446 ;;
 25447                           
 25448                           	psect	text64
 25449   01B98C                     __ptext64:
 25450                           	callstack 0
 25451   01B98C                     _write_sector:
 25452                           	callstack 104
 25453   01B98C                     
 25454                           ;../src/io_dos.c: 77:  unsigned int n;;../src/io_dos.c: 78:  FRESULT fres;;../src/io_dos
      +                          .c: 79:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 25455   01B98C  0107               	movlb	7	; () banked
 25456   01B98E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 25457   01B990  0D04               	mullw	4
 25458   01B992  0E4D               	movlw	low (_cpm_drives+2)
 25459   01B994  24F3               	addwf	243,w,c
 25460   01B996  6ED9               	movwf	fsr2l,c
 25461   01B998  0E09               	movlw	high (_cpm_drives+2)
 25462   01B99A  20F4               	addwfc	prodh,w,c
 25463   01B99C  6EDA               	movwf	fsr2h,c
 25464   01B99E  C4DE F69F          	movff	postinc2,write_sector@filep
 25465   01B9A2  C4DD F6A0          	movff	postdec2,write_sector@filep+1
 25466   01B9A6                     
 25467                           ; BSR set to: 7
 25468                           ;../src/io_dos.c: 81:  if (seek_disk()) return(-1);
 25469   01B9A6  ECF4  F0E5         	call	_seek_disk	;wreg free
 25470   01B9AA  0106               	movlb	6	; () banked
 25471   01B9AC  518B               	movf	?_seek_disk& (0+255),w,b
 25472   01B9AE  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 25473   01B9B0  B4D8               	btfsc	status,2,c
 25474   01B9B2  EFDD  F0DC         	goto	u32481
 25475   01B9B6  EFDF  F0DC         	goto	u32480
 25476   01B9BA                     u32481:
 25477   01B9BA  EFE4  F0DC         	goto	l23439
 25478   01B9BE                     u32480:
 25479   01B9BE                     l23437:
 25480   01B9BE  0106               	movlb	6	; () banked
 25481   01B9C0  699A               	setf	?_write_sector& (0+255),b
 25482   01B9C2  699B               	setf	(?_write_sector+1)& (0+255),b
 25483   01B9C4  EF8E  F0DD         	goto	l789
 25484   01B9C8                     l23439:
 25485                           
 25486                           ; BSR set to: 6
 25487                           ;../src/io_dos.c: 84:  read_sram(req_tbl.data_adr, disk_buf, 128);
 25488   01B9C8  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 25489   01B9CC  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 25490   01B9D0  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 25491   01B9D4  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 25492   01B9D8  0E00               	movlw	low _disk_buf
 25493   01B9DA  6E08               	movwf	read_sram@buf^(0+1280),c
 25494   01B9DC  0E0A               	movlw	high _disk_buf
 25495   01B9DE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 25496   01B9E0  0E00               	movlw	0
 25497   01B9E2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 25498   01B9E4  0E80               	movlw	128
 25499   01B9E6  6E0A               	movwf	read_sram@len^(0+1280),c
 25500   01B9E8  EC0C  F0F2         	call	_read_sram	;wreg free
 25501   01B9EC                     
 25502                           ;../src/io_dos.c: 86:  if ((debug.disk_write) && (debug.disk_verbose) && !(debug.disk_ma
      +                          sk & (1 << req_tbl.disk_drive))) {
 25503   01B9EC  0108               	movlb	8	; () banked
 25504   01B9EE  5118               	movf	(_debug+2)& (0+255),w,b
 25505   01B9F0  B4D8               	btfsc	status,2,c
 25506   01B9F2  EFFD  F0DC         	goto	u32491
 25507   01B9F6  EFFF  F0DC         	goto	u32490
 25508   01B9FA                     u32491:
 25509   01B9FA  EF37  F0DD         	goto	l23449
 25510   01B9FE                     u32490:
 25511   01B9FE                     
 25512                           ; BSR set to: 8
 25513   01B9FE  5119               	movf	(_debug+3)& (0+255),w,b
 25514   01BA00  B4D8               	btfsc	status,2,c
 25515   01BA02  EF05  F0DD         	goto	u32501
 25516   01BA06  EF07  F0DD         	goto	u32500
 25517   01BA0A                     u32501:
 25518   01BA0A  EF37  F0DD         	goto	l23449
 25519   01BA0E                     u32500:
 25520   01BA0E                     
 25521                           ; BSR set to: 8
 25522   01BA0E  C7D2  F69C         	movff	_req_tbl+4,??_write_sector
 25523   01BA12  0E01               	movlw	1
 25524   01BA14  0106               	movlb	6	; () banked
 25525   01BA16  6F9D               	movwf	(??_write_sector+1)& (0+255),b
 25526   01BA18  0E00               	movlw	0
 25527   01BA1A  6F9E               	movwf	(??_write_sector+2)& (0+255),b
 25528   01BA1C  2B9C               	incf	??_write_sector& (0+255),f,b
 25529   01BA1E  EF14  F0DD         	goto	u32514
 25530   01BA22                     u32515:
 25531   01BA22  90D8               	bcf	status,0,c
 25532   01BA24  379D               	rlcf	(??_write_sector+1)& (0+255),f,b
 25533   01BA26  379E               	rlcf	(??_write_sector+2)& (0+255),f,b
 25534   01BA28                     u32514:
 25535   01BA28  2F9C               	decfsz	??_write_sector& (0+255),f,b
 25536   01BA2A  EF11  F0DD         	goto	u32515
 25537   01BA2E  0108               	movlb	8	; () banked
 25538   01BA30  511A               	movf	(_debug+4)& (0+255),w,b
 25539   01BA32  0106               	movlb	6	; () banked
 25540   01BA34  179D               	andwf	(??_write_sector+1)& (0+255),f,b
 25541   01BA36  0108               	movlb	8	; () banked
 25542   01BA38  511B               	movf	(_debug+5)& (0+255),w,b
 25543   01BA3A  0106               	movlb	6	; () banked
 25544   01BA3C  179E               	andwf	(??_write_sector+2)& (0+255),f,b
 25545   01BA3E  519D               	movf	(??_write_sector+1)& (0+255),w,b
 25546   01BA40  119E               	iorwf	(??_write_sector+2)& (0+255),w,b
 25547   01BA42  A4D8               	btfss	status,2,c
 25548   01BA44  EF26  F0DD         	goto	u32521
 25549   01BA48  EF28  F0DD         	goto	u32520
 25550   01BA4C                     u32521:
 25551   01BA4C  EF37  F0DD         	goto	l23449
 25552   01BA50                     u32520:
 25553   01BA50                     
 25554                           ; BSR set to: 6
 25555                           ;../src/io_dos.c: 87:   util_hexdump_sum("buf: ", disk_buf, 128);
 25556   01BA50  0E9D               	movlw	low STR_35
 25557   01BA52  0105               	movlb	5	; () banked
 25558   01BA54  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 25559   01BA56  0EFF               	movlw	high STR_35
 25560   01BA58  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 25561   01BA5A  0E00               	movlw	low _disk_buf
 25562   01BA5C  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 25563   01BA5E  0E0A               	movlw	high _disk_buf
 25564   01BA60  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 25565   01BA62  0E00               	movlw	0
 25566   01BA64  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 25567   01BA66  0E80               	movlw	128
 25568   01BA68  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 25569   01BA6A  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 25570   01BA6E                     l23449:
 25571                           
 25572                           ;../src/io_dos.c: 91:  if ((fres = f_write(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 25573   01BA6E  C69F  F662         	movff	write_sector@filep,f_write@fp
 25574   01BA72  C6A0  F663         	movff	write_sector@filep+1,f_write@fp+1
 25575   01BA76  0E00               	movlw	low _disk_buf
 25576   01BA78  0106               	movlb	6	; () banked
 25577   01BA7A  6F64               	movwf	f_write@buff& (0+255),b
 25578   01BA7C  0E0A               	movlw	high _disk_buf
 25579   01BA7E  6F65               	movwf	(f_write@buff+1)& (0+255),b
 25580   01BA80  0E00               	movlw	0
 25581   01BA82  6F67               	movwf	(f_write@btw+1)& (0+255),b
 25582   01BA84  0E80               	movlw	128
 25583   01BA86  6F66               	movwf	f_write@btw& (0+255),b
 25584   01BA88  0EA2               	movlw	low write_sector@n
 25585   01BA8A  6F68               	movwf	f_write@bw& (0+255),b
 25586   01BA8C  0E06               	movlw	high write_sector@n
 25587   01BA8E  6F69               	movwf	(f_write@bw+1)& (0+255),b
 25588   01BA90  EC9C  F08A         	call	_f_write	;wreg free
 25589   01BA94  0106               	movlb	6	; () banked
 25590   01BA96  6FA1               	movwf	write_sector@fres& (0+255),b
 25591   01BA98  51A1               	movf	write_sector@fres& (0+255),w,b
 25592   01BA9A  A4D8               	btfss	status,2,c
 25593   01BA9C  EF52  F0DD         	goto	u32531
 25594   01BAA0  EF54  F0DD         	goto	u32530
 25595   01BAA4                     u32531:
 25596   01BAA4  EF5E  F0DD         	goto	l23453
 25597   01BAA8                     u32530:
 25598   01BAA8                     
 25599                           ; BSR set to: 6
 25600   01BAA8  0E80               	movlw	128
 25601   01BAAA  19A2               	xorwf	write_sector@n& (0+255),w,b
 25602   01BAAC  11A3               	iorwf	(write_sector@n+1)& (0+255),w,b
 25603   01BAAE  B4D8               	btfsc	status,2,c
 25604   01BAB0  EF5C  F0DD         	goto	u32541
 25605   01BAB4  EF5E  F0DD         	goto	u32540
 25606   01BAB8                     u32541:
 25607   01BAB8  EF6E  F0DD         	goto	l23461
 25608   01BABC                     u32540:
 25609   01BABC                     l23453:
 25610                           
 25611                           ; BSR set to: 6
 25612                           ;../src/io_dos.c: 92:   printf("f_write(): ERROR res=%d, n=%d\n\r", fres, n);
 25613   01BABC  0E77               	movlw	low STR_36
 25614   01BABE  0105               	movlb	5	; () banked
 25615   01BAC0  6FAD               	movwf	printf@fmt& (0+255),b
 25616   01BAC2  0EF8               	movlw	high STR_36
 25617   01BAC4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25618   01BAC6  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 25619   01BACA  6BB0               	clrf	(?_printf+3)& (0+255),b
 25620   01BACC  C6A2  F5B1         	movff	write_sector@n,?_printf+4
 25621   01BAD0  C6A3  F5B2         	movff	write_sector@n+1,?_printf+5
 25622   01BAD4  ECDA  F0FF         	call	_printf	;wreg free
 25623   01BAD8  EFDF  F0DC         	goto	l23437
 25624   01BADC                     l23461:
 25625                           
 25626                           ; BSR set to: 6
 25627   01BADC  C69F  F624         	movff	write_sector@filep,f_sync@fp
 25628   01BAE0  C6A0  F625         	movff	write_sector@filep+1,f_sync@fp+1
 25629   01BAE4  EC6D  F0CE         	call	_f_sync	;wreg free
 25630   01BAE8  0106               	movlb	6	; () banked
 25631   01BAEA  6FA1               	movwf	write_sector@fres& (0+255),b
 25632   01BAEC  51A1               	movf	write_sector@fres& (0+255),w,b
 25633   01BAEE  B4D8               	btfsc	status,2,c
 25634   01BAF0  EF7C  F0DD         	goto	u32551
 25635   01BAF4  EF7E  F0DD         	goto	u32550
 25636   01BAF8                     u32551:
 25637   01BAF8  EF8A  F0DD         	goto	l23469
 25638   01BAFC                     u32550:
 25639   01BAFC                     
 25640                           ; BSR set to: 6
 25641                           ;../src/io_dos.c: 96:   printf("f_sync(): ERROR %d\n\r", fres);
 25642   01BAFC  0E70               	movlw	low STR_37
 25643   01BAFE  0105               	movlb	5	; () banked
 25644   01BB00  6FAD               	movwf	printf@fmt& (0+255),b
 25645   01BB02  0EFC               	movlw	high STR_37
 25646   01BB04  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25647   01BB06  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 25648   01BB0A  6BB0               	clrf	(?_printf+3)& (0+255),b
 25649   01BB0C  ECDA  F0FF         	call	_printf	;wreg free
 25650   01BB10  EFDF  F0DC         	goto	l23437
 25651   01BB14                     l23469:
 25652                           
 25653                           ; BSR set to: 6
 25654                           ;../src/io_dos.c: 99:  return(0);
 25655   01BB14  0E00               	movlw	0
 25656   01BB16  6F9B               	movwf	(?_write_sector+1)& (0+255),b
 25657   01BB18  0E00               	movlw	0
 25658   01BB1A  6F9A               	movwf	?_write_sector& (0+255),b
 25659   01BB1C                     l789:
 25660                           
 25661                           ; BSR set to: 6
 25662   01BB1C  0012               	return		;funcret
 25663   01BB1E                     __end_of_write_sector:
 25664                           	callstack 0
 25665                           
 25666 ;; *************** function _f_write *****************
 25667 ;; Defined at:
 25668 ;;		line 4016 in file "../fatfs/ff.c"
 25669 ;; Parameters:    Size  Location     Type
 25670 ;;  fp              2   98[BANK6 ] PTR struct .
 25671 ;;		 -> pb$fp(2), 
 25672 ;;  buff            2  100[BANK6 ] PTR const void 
 25673 ;;		 -> pb$buf(64), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25674 ;;		 -> disk_buf(128), 
 25675 ;;  btw             2  102[BANK6 ] unsigned int 
 25676 ;;  bw              2  104[BANK6 ] PTR unsigned int 
 25677 ;;		 -> putc_flush@nw(2), putc_bfd@n(2), write_sector@n(2), 
 25678 ;; Auto vars:     Size  Location     Type
 25679 ;;  sect            4  135[BANK6 ] unsigned long 
 25680 ;;  clst            4  129[BANK6 ] unsigned long 
 25681 ;;  fs              2  139[BANK6 ] PTR struct .
 25682 ;;		 -> fs(564), NULL(0), 
 25683 ;;  wcnt            2  133[BANK6 ] unsigned int 
 25684 ;;  cc              2  127[BANK6 ] unsigned int 
 25685 ;;  csect           2  125[BANK6 ] unsigned int 
 25686 ;;  wbuff           2  123[BANK6 ] PTR const unsigned char 
 25687 ;;		 -> pb$buf(64), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25688 ;;		 -> disk_buf(128), 
 25689 ;;  res             1  122[BANK6 ] enum E597
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1    wreg      enum E16851
 25692 ;; Registers used:
 25693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25694 ;; Tracked objects:
 25695 ;;		On entry : 0/0
 25696 ;;		On exit  : 0/0
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25699 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;Total ram usage:       43 bytes
 25704 ;; Hardware stack levels used: 1
 25705 ;; Hardware stack levels required when called: 16
 25706 ;; This function calls:
 25707 ;;		_clst2sect
 25708 ;;		_create_chain
 25709 ;;		_disk_read
 25710 ;;		_disk_write
 25711 ;;		_memcpy
 25712 ;;		_validate
 25713 ;; This function is called by:
 25714 ;;		_write_sector
 25715 ;;		_putc_bfd
 25716 ;;		_putc_flush
 25717 ;; This function uses a non-reentrant model
 25718 ;;
 25719                           
 25720                           	psect	text65
 25721   011538                     __ptext65:
 25722                           	callstack 0
 25723   011538                     _f_write:
 25724                           	callstack 105
 25725   011538                     
 25726                           ;../fatfs/ff.c: 4017:  FIL* fp,;../fatfs/ff.c: 4018:  const void* buff,;../fatfs/ff.c: 4
      +                          019:  UINT btw,;../fatfs/ff.c: 4020:  UINT* bw;../fatfs/ff.c: 4022: {;../fatfs/ff.c: 402
      +                          3:  FRESULT res;;../fatfs/ff.c: 4024:  FATFS *fs;;../fatfs/ff.c: 4025:  DWORD clst;;../f
      +                          atfs/ff.c: 4026:  LBA_t sect;;../fatfs/ff.c: 4027:  UINT wcnt, cc, csect;;../fatfs/ff.c:
      +                           4028:  const BYTE *wbuff = (const BYTE*)buff;
 25727   011538  C664  F67B         	movff	f_write@buff,f_write@wbuff
 25728   01153C  C665  F67C         	movff	f_write@buff+1,f_write@wbuff+1
 25729   011540                     
 25730                           ;../fatfs/ff.c: 4031:  *bw = 0;
 25731   011540  C668  F4D9         	movff	f_write@bw,fsr2l
 25732   011544  C669  F4DA         	movff	f_write@bw+1,fsr2h
 25733   011548  6ADE               	clrf	postinc2,c
 25734   01154A  6ADD               	clrf	postdec2,c
 25735   01154C                     
 25736                           ;../fatfs/ff.c: 4032:  res = validate(&fp->obj, &fs);
 25737   01154C  C662  F5BE         	movff	f_write@fp,validate@obj
 25738   011550  C663  F5BF         	movff	f_write@fp+1,validate@obj+1
 25739   011554  0E8B               	movlw	low f_write@fs
 25740   011556  0105               	movlb	5	; () banked
 25741   011558  6FC0               	movwf	validate@rfs& (0+255),b
 25742   01155A  0E06               	movlw	high f_write@fs
 25743   01155C  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 25744   01155E  ECA3  F0E9         	call	_validate	;wreg free
 25745   011562  0106               	movlb	6	; () banked
 25746   011564  6F7A               	movwf	f_write@res& (0+255),b
 25747   011566                     
 25748                           ; BSR set to: 6
 25749                           ;../fatfs/ff.c: 4033:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 25750   011566  517A               	movf	f_write@res& (0+255),w,b
 25751   011568  A4D8               	btfss	status,2,c
 25752   01156A  EFB9  F08A         	goto	u32041
 25753   01156E  EFBB  F08A         	goto	u32040
 25754   011572                     u32041:
 25755   011572  EFCB  F08A         	goto	l23163
 25756   011576                     u32040:
 25757   011576                     
 25758                           ; BSR set to: 6
 25759   011576  EE20 F00F          	lfsr	2,15
 25760   01157A  5162               	movf	f_write@fp& (0+255),w,b
 25761   01157C  26D9               	addwf	fsr2l,f,c
 25762   01157E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25763   011580  22DA               	addwfc	fsr2h,f,c
 25764   011582  50DF               	movf	indf2,w,c
 25765   011584  6F7A               	movwf	f_write@res& (0+255),b
 25766   011586  517A               	movf	f_write@res& (0+255),w,b
 25767   011588  B4D8               	btfsc	status,2,c
 25768   01158A  EFC9  F08A         	goto	u32051
 25769   01158E  EFCB  F08A         	goto	u32050
 25770   011592                     u32051:
 25771   011592  EFCE  F08A         	goto	l23167
 25772   011596                     u32050:
 25773   011596                     l23163:
 25774                           
 25775                           ; BSR set to: 6
 25776   011596  517A               	movf	f_write@res& (0+255),w,b
 25777   011598  EFD9  F08E         	goto	l1944
 25778   01159C                     l23167:
 25779                           
 25780                           ; BSR set to: 6
 25781                           ;../fatfs/ff.c: 4034:  if (!(fp->flag & 0x02)) return FR_DENIED;
 25782   01159C  EE20 F00E          	lfsr	2,14
 25783   0115A0  5162               	movf	f_write@fp& (0+255),w,b
 25784   0115A2  26D9               	addwf	fsr2l,f,c
 25785   0115A4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25786   0115A6  22DA               	addwfc	fsr2h,f,c
 25787   0115A8  B2DF               	btfsc	indf2,1,c
 25788   0115AA  EFD9  F08A         	goto	u32061
 25789   0115AE  EFDB  F08A         	goto	u32060
 25790   0115B2                     u32061:
 25791   0115B2  EFDE  F08A         	goto	l23175
 25792   0115B6                     u32060:
 25793   0115B6                     
 25794                           ; BSR set to: 6
 25795   0115B6  0E07               	movlw	7
 25796   0115B8  EFD9  F08E         	goto	l1944
 25797   0115BC                     l23175:
 25798                           
 25799                           ; BSR set to: 6
 25800   0115BC  EE20 F010          	lfsr	2,16
 25801   0115C0  5162               	movf	f_write@fp& (0+255),w,b
 25802   0115C2  26D9               	addwf	fsr2l,f,c
 25803   0115C4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25804   0115C6  22DA               	addwfc	fsr2h,f,c
 25805   0115C8  EE10 F010          	lfsr	1,16
 25806   0115CC  5162               	movf	f_write@fp& (0+255),w,b
 25807   0115CE  26E1               	addwf	fsr1l,f,c
 25808   0115D0  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25809   0115D2  22E2               	addwfc	fsr1h,f,c
 25810   0115D4  C4E6 F66E          	movff	postinc1,??_f_write+4
 25811   0115D8  C4E6 F66F          	movff	postinc1,??_f_write+5
 25812   0115DC  C4E6 F670          	movff	postinc1,??_f_write+6
 25813   0115E0  C4E6 F671          	movff	postinc1,??_f_write+7
 25814   0115E4  5166               	movf	f_write@btw& (0+255),w,b
 25815   0115E6  256E               	addwf	(??_f_write+4)& (0+255),w,b
 25816   0115E8  6F72               	movwf	(??_f_write+8)& (0+255),b
 25817   0115EA  5167               	movf	(f_write@btw+1)& (0+255),w,b
 25818   0115EC  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 25819   0115EE  6F73               	movwf	(??_f_write+9)& (0+255),b
 25820   0115F0  0E00               	movlw	0
 25821   0115F2  2170               	addwfc	(??_f_write+6)& (0+255),w,b
 25822   0115F4  6F74               	movwf	(??_f_write+10)& (0+255),b
 25823   0115F6  0E00               	movlw	0
 25824   0115F8  2171               	addwfc	(??_f_write+7)& (0+255),w,b
 25825   0115FA  6F75               	movwf	(??_f_write+11)& (0+255),b
 25826   0115FC  50DE               	movf	postinc2,w,c
 25827   0115FE  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 25828   011600  50DE               	movf	postinc2,w,c
 25829   011602  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 25830   011604  50DE               	movf	postinc2,w,c
 25831   011606  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 25832   011608  50DE               	movf	postinc2,w,c
 25833   01160A  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 25834   01160C  B0D8               	btfsc	status,0,c
 25835   01160E  EF0B  F08B         	goto	u32071
 25836   011612  EF0D  F08B         	goto	u32070
 25837   011616                     u32071:
 25838   011616  EF1B  F08B         	goto	l23179
 25839   01161A                     u32070:
 25840   01161A                     
 25841                           ; BSR set to: 6
 25842                           ;../fatfs/ff.c: 4038:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 25843   01161A  EE20 F010          	lfsr	2,16
 25844   01161E  5162               	movf	f_write@fp& (0+255),w,b
 25845   011620  26D9               	addwf	fsr2l,f,c
 25846   011622  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25847   011624  22DA               	addwfc	fsr2h,f,c
 25848   011626  C4DE F66A          	movff	postinc2,??_f_write
 25849   01162A  C4DD F66B          	movff	postdec2,??_f_write+1
 25850   01162E  1D6A               	comf	??_f_write& (0+255),w,b
 25851   011630  6F66               	movwf	f_write@btw& (0+255),b
 25852   011632  1D6B               	comf	(??_f_write+1)& (0+255),w,b
 25853   011634  6F67               	movwf	(f_write@btw+1)& (0+255),b
 25854   011636                     l23179:
 25855                           
 25856                           ; BSR set to: 6
 25857                           ;../fatfs/ff.c: 4041:  for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fpt
      +                          r += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) 
      +                          {
 25858   011636  5166               	movf	f_write@btw& (0+255),w,b
 25859   011638  1167               	iorwf	(f_write@btw+1)& (0+255),w,b
 25860   01163A  A4D8               	btfss	status,2,c
 25861   01163C  EF22  F08B         	goto	u32081
 25862   011640  EF24  F08B         	goto	u32080
 25863   011644                     u32081:
 25864   011644  EF26  F08B         	goto	l23183
 25865   011648                     u32080:
 25866   011648  EFD0  F08E         	goto	l23307
 25867   01164C                     l23183:
 25868                           
 25869                           ; BSR set to: 6
 25870                           ;../fatfs/ff.c: 4042:   if (fp->fptr % ((UINT)512) == 0) {
 25871   01164C  EE20 F010          	lfsr	2,16
 25872   011650  5162               	movf	f_write@fp& (0+255),w,b
 25873   011652  26D9               	addwf	fsr2l,f,c
 25874   011654  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25875   011656  22DA               	addwfc	fsr2h,f,c
 25876   011658  0EFF               	movlw	255
 25877   01165A  14DE               	andwf	postinc2,w,c
 25878   01165C  6F6A               	movwf	??_f_write& (0+255),b
 25879   01165E  0E01               	movlw	1
 25880   011660  14DE               	andwf	postinc2,w,c
 25881   011662  6F6B               	movwf	(??_f_write+1)& (0+255),b
 25882   011664  0E00               	movlw	0
 25883   011666  14DE               	andwf	postinc2,w,c
 25884   011668  6F6C               	movwf	(??_f_write+2)& (0+255),b
 25885   01166A  0E00               	movlw	0
 25886   01166C  14DE               	andwf	postinc2,w,c
 25887   01166E  6F6D               	movwf	(??_f_write+3)& (0+255),b
 25888   011670  516A               	movf	??_f_write& (0+255),w,b
 25889   011672  116B               	iorwf	(??_f_write+1)& (0+255),w,b
 25890   011674  116C               	iorwf	(??_f_write+2)& (0+255),w,b
 25891   011676  116D               	iorwf	(??_f_write+3)& (0+255),w,b
 25892   011678  A4D8               	btfss	status,2,c
 25893   01167A  EF41  F08B         	goto	u32091
 25894   01167E  EF43  F08B         	goto	u32090
 25895   011682                     u32091:
 25896   011682  EF14  F08E         	goto	l1951
 25897   011686                     u32090:
 25898   011686                     
 25899                           ; BSR set to: 6
 25900                           ;../fatfs/ff.c: 4043:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
 25901   011686  EE20 F010          	lfsr	2,16
 25902   01168A  5162               	movf	f_write@fp& (0+255),w,b
 25903   01168C  26D9               	addwf	fsr2l,f,c
 25904   01168E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25905   011690  22DA               	addwfc	fsr2h,f,c
 25906   011692  C4DE F66A          	movff	postinc2,??_f_write
 25907   011696  C4DE F66B          	movff	postinc2,??_f_write+1
 25908   01169A  C4DE F66C          	movff	postinc2,??_f_write+2
 25909   01169E  C4DE F66D          	movff	postinc2,??_f_write+3
 25910   0116A2  0E0A               	movlw	10
 25911   0116A4  EF59  F08B         	goto	u32100
 25912   0116A8                     u32105:
 25913   0116A8  90D8               	bcf	status,0,c
 25914   0116AA  336D               	rrcf	(??_f_write+3)& (0+255),f,b
 25915   0116AC  336C               	rrcf	(??_f_write+2)& (0+255),f,b
 25916   0116AE  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 25917   0116B0  336A               	rrcf	??_f_write& (0+255),f,b
 25918   0116B2                     u32100:
 25919   0116B2  2EE8               	decfsz	wreg,f,c
 25920   0116B4  EF54  F08B         	goto	u32105
 25921   0116B8  EE20 F00A          	lfsr	2,10
 25922   0116BC  518B               	movf	f_write@fs& (0+255),w,b
 25923   0116BE  26D9               	addwf	fsr2l,f,c
 25924   0116C0  518C               	movf	(f_write@fs+1)& (0+255),w,b
 25925   0116C2  22DA               	addwfc	fsr2h,f,c
 25926   0116C4  C4DE F66E          	movff	postinc2,??_f_write+4
 25927   0116C8  C4DD F66F          	movff	postdec2,??_f_write+5
 25928   0116CC  0EFF               	movlw	255
 25929   0116CE  256E               	addwf	(??_f_write+4)& (0+255),w,b
 25930   0116D0  6F70               	movwf	(??_f_write+6)& (0+255),b
 25931   0116D2  0EFF               	movlw	255
 25932   0116D4  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 25933   0116D6  6F71               	movwf	(??_f_write+7)& (0+255),b
 25934   0116D8  516A               	movf	??_f_write& (0+255),w,b
 25935   0116DA  1570               	andwf	(??_f_write+6)& (0+255),w,b
 25936   0116DC  6F7D               	movwf	f_write@csect& (0+255),b
 25937   0116DE  516B               	movf	(??_f_write+1)& (0+255),w,b
 25938   0116E0  1571               	andwf	(??_f_write+7)& (0+255),w,b
 25939   0116E2  6F7E               	movwf	(f_write@csect+1)& (0+255),b
 25940   0116E4                     
 25941                           ; BSR set to: 6
 25942                           ;../fatfs/ff.c: 4044:    if (csect == 0) {
 25943   0116E4  517D               	movf	f_write@csect& (0+255),w,b
 25944   0116E6  117E               	iorwf	(f_write@csect+1)& (0+255),w,b
 25945   0116E8  A4D8               	btfss	status,2,c
 25946   0116EA  EF79  F08B         	goto	u32111
 25947   0116EE  EF7B  F08B         	goto	u32110
 25948   0116F2                     u32111:
 25949   0116F2  EF43  F08C         	goto	l1952
 25950   0116F6                     u32110:
 25951   0116F6                     
 25952                           ; BSR set to: 6
 25953                           ;../fatfs/ff.c: 4045:     if (fp->fptr == 0) {
 25954   0116F6  EE20 F010          	lfsr	2,16
 25955   0116FA  5162               	movf	f_write@fp& (0+255),w,b
 25956   0116FC  26D9               	addwf	fsr2l,f,c
 25957   0116FE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25958   011700  22DA               	addwfc	fsr2h,f,c
 25959   011702  50DE               	movf	postinc2,w,c
 25960   011704  10DE               	iorwf	postinc2,w,c
 25961   011706  10DE               	iorwf	postinc2,w,c
 25962   011708  10DE               	iorwf	postinc2,w,c
 25963   01170A  A4D8               	btfss	status,2,c
 25964   01170C  EF8A  F08B         	goto	u32121
 25965   011710  EF8C  F08B         	goto	u32120
 25966   011714                     u32121:
 25967   011714  EFBD  F08B         	goto	l23197
 25968   011718                     u32120:
 25969   011718                     
 25970                           ; BSR set to: 6
 25971                           ;../fatfs/ff.c: 4046:      clst = fp->obj.sclust;
 25972   011718  EE20 F006          	lfsr	2,6
 25973   01171C  5162               	movf	f_write@fp& (0+255),w,b
 25974   01171E  26D9               	addwf	fsr2l,f,c
 25975   011720  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25976   011722  22DA               	addwfc	fsr2h,f,c
 25977   011724  C4DE F681          	movff	postinc2,f_write@clst
 25978   011728  C4DE F682          	movff	postinc2,f_write@clst+1
 25979   01172C  C4DE F683          	movff	postinc2,f_write@clst+2
 25980   011730  C4DE F684          	movff	postinc2,f_write@clst+3
 25981   011734                     
 25982                           ; BSR set to: 6
 25983                           ;../fatfs/ff.c: 4047:      if (clst == 0) {
 25984   011734  5181               	movf	f_write@clst& (0+255),w,b
 25985   011736  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 25986   011738  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 25987   01173A  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 25988   01173C  A4D8               	btfss	status,2,c
 25989   01173E  EFA3  F08B         	goto	u32131
 25990   011742  EFA5  F08B         	goto	u32130
 25991   011746                     u32131:
 25992   011746  EFD9  F08B         	goto	l23199
 25993   01174A                     u32130:
 25994   01174A                     
 25995                           ; BSR set to: 6
 25996                           ;../fatfs/ff.c: 4048:       clst = create_chain(&fp->obj, 0);
 25997   01174A  C662  F645         	movff	f_write@fp,create_chain@obj
 25998   01174E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 25999   011752  0E00               	movlw	0
 26000   011754  6F47               	movwf	create_chain@clst& (0+255),b
 26001   011756  0E00               	movlw	0
 26002   011758  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 26003   01175A  0E00               	movlw	0
 26004   01175C  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 26005   01175E  0E00               	movlw	0
 26006   011760  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 26007   011762  EC7C  F09D         	call	_create_chain	;wreg free
 26008   011766  C645  F681         	movff	?_create_chain,f_write@clst
 26009   01176A  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 26010   01176E  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 26011   011772  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 26012   011776  EFD9  F08B         	goto	l23199
 26013   01177A                     l23197:
 26014                           
 26015                           ; BSR set to: 6
 26016                           ;../fatfs/ff.c: 4056:      {;../fatfs/ff.c: 4057:       clst = create_chain(&fp->obj, fp
      +                          ->clust);
 26017   01177A  C662  F645         	movff	f_write@fp,create_chain@obj
 26018   01177E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 26019   011782  EE20 F014          	lfsr	2,20
 26020   011786  5162               	movf	f_write@fp& (0+255),w,b
 26021   011788  26D9               	addwf	fsr2l,f,c
 26022   01178A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26023   01178C  22DA               	addwfc	fsr2h,f,c
 26024   01178E  C4DE F647          	movff	postinc2,create_chain@clst
 26025   011792  C4DE F648          	movff	postinc2,create_chain@clst+1
 26026   011796  C4DE F649          	movff	postinc2,create_chain@clst+2
 26027   01179A  C4DE F64A          	movff	postinc2,create_chain@clst+3
 26028   01179E  EC7C  F09D         	call	_create_chain	;wreg free
 26029   0117A2  C645  F681         	movff	?_create_chain,f_write@clst
 26030   0117A6  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 26031   0117AA  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 26032   0117AE  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 26033   0117B2                     l23199:
 26034                           
 26035                           ;../fatfs/ff.c: 4060:     if (clst == 0) break;
 26036   0117B2  0106               	movlb	6	; () banked
 26037   0117B4  5181               	movf	f_write@clst& (0+255),w,b
 26038   0117B6  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 26039   0117B8  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 26040   0117BA  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 26041   0117BC  A4D8               	btfss	status,2,c
 26042   0117BE  EFE3  F08B         	goto	u32141
 26043   0117C2  EFE5  F08B         	goto	u32140
 26044   0117C6                     u32141:
 26045   0117C6  EFE7  F08B         	goto	l23203
 26046   0117CA                     u32140:
 26047   0117CA  EFD0  F08E         	goto	l23307
 26048   0117CE                     l23203:
 26049                           
 26050                           ; BSR set to: 6
 26051                           ;../fatfs/ff.c: 4061:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_E
      +                          RR; };
 26052   0117CE  0581               	decf	f_write@clst& (0+255),w,b
 26053   0117D0  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 26054   0117D2  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 26055   0117D4  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 26056   0117D6  A4D8               	btfss	status,2,c
 26057   0117D8  EFF0  F08B         	goto	u32151
 26058   0117DC  EFF2  F08B         	goto	u32150
 26059   0117E0                     u32151:
 26060   0117E0  EFFD  F08B         	goto	l23211
 26061   0117E4                     u32150:
 26062   0117E4                     
 26063                           ; BSR set to: 6
 26064   0117E4  EE20 F00F          	lfsr	2,15
 26065   0117E8  5162               	movf	f_write@fp& (0+255),w,b
 26066   0117EA  26D9               	addwf	fsr2l,f,c
 26067   0117EC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26068   0117EE  22DA               	addwfc	fsr2h,f,c
 26069   0117F0  0E02               	movlw	2
 26070   0117F2  6EDF               	movwf	indf2,c
 26071   0117F4                     l23207:
 26072                           
 26073                           ; BSR set to: 6
 26074   0117F4  0E02               	movlw	2
 26075   0117F6  EFD9  F08E         	goto	l1944
 26076   0117FA                     l23211:
 26077                           
 26078                           ; BSR set to: 6
 26079                           ;../fatfs/ff.c: 4062:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 26080   0117FA  2981               	incf	f_write@clst& (0+255),w,b
 26081   0117FC  E10A               	bnz	u32161
 26082   0117FE  2982               	incf	(f_write@clst+1)& (0+255),w,b
 26083   011800  E108               	bnz	u32161
 26084   011802  2983               	incf	(f_write@clst+2)& (0+255),w,b
 26085   011804  E106               	bnz	u32161
 26086   011806  2984               	incf	(f_write@clst+3)& (0+255),w,b
 26087   011808  A4D8               	btfss	status,2,c
 26088   01180A  EF09  F08C         	goto	u32161
 26089   01180E  EF0B  F08C         	goto	u32160
 26090   011812                     u32161:
 26091   011812  EF16  F08C         	goto	l23219
 26092   011816                     u32160:
 26093   011816                     
 26094                           ; BSR set to: 6
 26095   011816  EE20 F00F          	lfsr	2,15
 26096   01181A  5162               	movf	f_write@fp& (0+255),w,b
 26097   01181C  26D9               	addwf	fsr2l,f,c
 26098   01181E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26099   011820  22DA               	addwfc	fsr2h,f,c
 26100   011822  0E01               	movlw	1
 26101   011824  6EDF               	movwf	indf2,c
 26102   011826                     l23215:
 26103                           
 26104                           ; BSR set to: 6
 26105   011826  0E01               	movlw	1
 26106   011828  EFD9  F08E         	goto	l1944
 26107   01182C                     l23219:
 26108                           
 26109                           ; BSR set to: 6
 26110                           ;../fatfs/ff.c: 4063:     fp->clust = clst;
 26111   01182C  EE20 F014          	lfsr	2,20
 26112   011830  5162               	movf	f_write@fp& (0+255),w,b
 26113   011832  26D9               	addwf	fsr2l,f,c
 26114   011834  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26115   011836  22DA               	addwfc	fsr2h,f,c
 26116   011838  C681  F4DE         	movff	f_write@clst,postinc2
 26117   01183C  C682  F4DE         	movff	f_write@clst+1,postinc2
 26118   011840  C683  F4DE         	movff	f_write@clst+2,postinc2
 26119   011844  C684  F4DE         	movff	f_write@clst+3,postinc2
 26120                           
 26121                           ;../fatfs/ff.c: 4064:     if (fp->obj.sclust == 0) fp->obj.sclust = clst;
 26122   011848  EE20 F006          	lfsr	2,6
 26123   01184C  5162               	movf	f_write@fp& (0+255),w,b
 26124   01184E  26D9               	addwf	fsr2l,f,c
 26125   011850  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26126   011852  22DA               	addwfc	fsr2h,f,c
 26127   011854  50DE               	movf	postinc2,w,c
 26128   011856  10DE               	iorwf	postinc2,w,c
 26129   011858  10DE               	iorwf	postinc2,w,c
 26130   01185A  10DE               	iorwf	postinc2,w,c
 26131   01185C  A4D8               	btfss	status,2,c
 26132   01185E  EF33  F08C         	goto	u32171
 26133   011862  EF35  F08C         	goto	u32170
 26134   011866                     u32171:
 26135   011866  EF43  F08C         	goto	l1952
 26136   01186A                     u32170:
 26137   01186A                     
 26138                           ; BSR set to: 6
 26139   01186A  EE20 F006          	lfsr	2,6
 26140   01186E  5162               	movf	f_write@fp& (0+255),w,b
 26141   011870  26D9               	addwf	fsr2l,f,c
 26142   011872  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26143   011874  22DA               	addwfc	fsr2h,f,c
 26144   011876  C681  F4DE         	movff	f_write@clst,postinc2
 26145   01187A  C682  F4DE         	movff	f_write@clst+1,postinc2
 26146   01187E  C683  F4DE         	movff	f_write@clst+2,postinc2
 26147   011882  C684  F4DE         	movff	f_write@clst+3,postinc2
 26148   011886                     l1952:
 26149                           
 26150                           ; BSR set to: 6
 26151                           ;../fatfs/ff.c: 4069:    if (fp->flag & 0x80) {
 26152   011886  EE20 F00E          	lfsr	2,14
 26153   01188A  5162               	movf	f_write@fp& (0+255),w,b
 26154   01188C  26D9               	addwf	fsr2l,f,c
 26155   01188E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26156   011890  22DA               	addwfc	fsr2h,f,c
 26157   011892  AEDF               	btfss	indf2,7,c
 26158   011894  EF4E  F08C         	goto	u32181
 26159   011898  EF50  F08C         	goto	u32180
 26160   01189C                     u32181:
 26161   01189C  EF8D  F08C         	goto	l23233
 26162   0118A0                     u32180:
 26163   0118A0                     
 26164                           ; BSR set to: 6
 26165                           ;../fatfs/ff.c: 4070:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26166   0118A0  0E22               	movlw	34
 26167   0118A2  2562               	addwf	f_write@fp& (0+255),w,b
 26168   0118A4  6F00               	movwf	disk_write@buff& (0+255),b
 26169   0118A6  0E00               	movlw	0
 26170   0118A8  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26171   0118AA  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 26172   0118AC  EE20 F018          	lfsr	2,24
 26173   0118B0  5162               	movf	f_write@fp& (0+255),w,b
 26174   0118B2  26D9               	addwf	fsr2l,f,c
 26175   0118B4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26176   0118B6  22DA               	addwfc	fsr2h,f,c
 26177   0118B8  C4DE F602          	movff	postinc2,disk_write@sector
 26178   0118BC  C4DE F603          	movff	postinc2,disk_write@sector+1
 26179   0118C0  C4DE F604          	movff	postinc2,disk_write@sector+2
 26180   0118C4  C4DE F605          	movff	postinc2,disk_write@sector+3
 26181   0118C8  0E00               	movlw	0
 26182   0118CA  6F07               	movwf	(disk_write@count+1)& (0+255),b
 26183   0118CC  0E01               	movlw	1
 26184   0118CE  6F06               	movwf	disk_write@count& (0+255),b
 26185   0118D0  EE20 F001          	lfsr	2,1
 26186   0118D4  518B               	movf	f_write@fs& (0+255),w,b
 26187   0118D6  26D9               	addwf	fsr2l,f,c
 26188   0118D8  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26189   0118DA  22DA               	addwfc	fsr2h,f,c
 26190   0118DC  50DF               	movf	indf2,w,c
 26191   0118DE  EC7E  F0F3         	call	_disk_write
 26192   0118E2  0900               	iorlw	0
 26193   0118E4  B4D8               	btfsc	status,2,c
 26194   0118E6  EF77  F08C         	goto	u32191
 26195   0118EA  EF79  F08C         	goto	u32190
 26196   0118EE                     u32191:
 26197   0118EE  EF84  F08C         	goto	l23231
 26198   0118F2                     u32190:
 26199   0118F2  0106               	movlb	6	; () banked
 26200   0118F4  EE20 F00F          	lfsr	2,15
 26201   0118F8  5162               	movf	f_write@fp& (0+255),w,b
 26202   0118FA  26D9               	addwf	fsr2l,f,c
 26203   0118FC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26204   0118FE  22DA               	addwfc	fsr2h,f,c
 26205   011900  0E01               	movlw	1
 26206   011902  6EDF               	movwf	indf2,c
 26207   011904  EF13  F08C         	goto	l23215
 26208   011908                     l23231:
 26209                           
 26210                           ;../fatfs/ff.c: 4071:     fp->flag &= (BYTE)~0x80;
 26211   011908  0106               	movlb	6	; () banked
 26212   01190A  EE20 F00E          	lfsr	2,14
 26213   01190E  5162               	movf	f_write@fp& (0+255),w,b
 26214   011910  26D9               	addwf	fsr2l,f,c
 26215   011912  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26216   011914  22DA               	addwfc	fsr2h,f,c
 26217   011916  0E7F               	movlw	127
 26218   011918  16DF               	andwf	indf2,f,c
 26219   01191A                     l23233:
 26220                           
 26221                           ; BSR set to: 6
 26222                           ;../fatfs/ff.c: 4074:    sect = clst2sect(fs, fp->clust);
 26223   01191A  C68B  F510         	movff	f_write@fs,clst2sect@fs
 26224   01191E  C68C  F511         	movff	f_write@fs+1,clst2sect@fs+1
 26225   011922  EE20 F014          	lfsr	2,20
 26226   011926  5162               	movf	f_write@fp& (0+255),w,b
 26227   011928  26D9               	addwf	fsr2l,f,c
 26228   01192A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26229   01192C  22DA               	addwfc	fsr2h,f,c
 26230   01192E  C4DE F512          	movff	postinc2,clst2sect@clst
 26231   011932  C4DE F513          	movff	postinc2,clst2sect@clst+1
 26232   011936  C4DE F514          	movff	postinc2,clst2sect@clst+2
 26233   01193A  C4DE F515          	movff	postinc2,clst2sect@clst+3
 26234   01193E  EC7A  F0F0         	call	_clst2sect	;wreg free
 26235   011942  C510  F687         	movff	?_clst2sect,f_write@sect
 26236   011946  C511  F688         	movff	?_clst2sect+1,f_write@sect+1
 26237   01194A  C512  F689         	movff	?_clst2sect+2,f_write@sect+2
 26238   01194E  C513  F68A         	movff	?_clst2sect+3,f_write@sect+3
 26239   011952                     
 26240                           ;../fatfs/ff.c: 4075:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 26241   011952  0106               	movlb	6	; () banked
 26242   011954  5187               	movf	f_write@sect& (0+255),w,b
 26243   011956  1188               	iorwf	(f_write@sect+1)& (0+255),w,b
 26244   011958  1189               	iorwf	(f_write@sect+2)& (0+255),w,b
 26245   01195A  118A               	iorwf	(f_write@sect+3)& (0+255),w,b
 26246   01195C  A4D8               	btfss	status,2,c
 26247   01195E  EFB3  F08C         	goto	u32201
 26248   011962  EFB5  F08C         	goto	u32200
 26249   011966                     u32201:
 26250   011966  EFBF  F08C         	goto	l23243
 26251   01196A                     u32200:
 26252   01196A                     
 26253                           ; BSR set to: 6
 26254   01196A  EE20 F00F          	lfsr	2,15
 26255   01196E  5162               	movf	f_write@fp& (0+255),w,b
 26256   011970  26D9               	addwf	fsr2l,f,c
 26257   011972  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26258   011974  22DA               	addwfc	fsr2h,f,c
 26259   011976  0E02               	movlw	2
 26260   011978  6EDF               	movwf	indf2,c
 26261   01197A  EFFA  F08B         	goto	l23207
 26262   01197E                     l23243:
 26263                           
 26264                           ; BSR set to: 6
 26265                           ;../fatfs/ff.c: 4076:    sect += csect;
 26266   01197E  517D               	movf	f_write@csect& (0+255),w,b
 26267   011980  2787               	addwf	f_write@sect& (0+255),f,b
 26268   011982  517E               	movf	(f_write@csect+1)& (0+255),w,b
 26269   011984  2388               	addwfc	(f_write@sect+1)& (0+255),f,b
 26270   011986  0E00               	movlw	0
 26271   011988  2389               	addwfc	(f_write@sect+2)& (0+255),f,b
 26272   01198A  0E00               	movlw	0
 26273   01198C  238A               	addwfc	(f_write@sect+3)& (0+255),f,b
 26274   01198E                     
 26275                           ; BSR set to: 6
 26276                           ;../fatfs/ff.c: 4077:    cc = btw / ((UINT)512);
 26277   01198E  C666  F66A         	movff	f_write@btw,??_f_write
 26278   011992  C667  F66B         	movff	f_write@btw+1,??_f_write+1
 26279   011996  0E09               	movlw	9
 26280   011998  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26281   01199A                     u32215:
 26282   01199A  90D8               	bcf	status,0,c
 26283   01199C  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 26284   01199E  336A               	rrcf	??_f_write& (0+255),f,b
 26285   0119A0  2F6C               	decfsz	(??_f_write+2)& (0+255),f,b
 26286   0119A2  EFCD  F08C         	goto	u32215
 26287   0119A6  C66A  F67F         	movff	??_f_write,f_write@cc
 26288   0119AA  C66B  F680         	movff	??_f_write+1,f_write@cc+1
 26289   0119AE                     
 26290                           ; BSR set to: 6
 26291                           ;../fatfs/ff.c: 4078:    if (cc > 0) {
 26292   0119AE  517F               	movf	f_write@cc& (0+255),w,b
 26293   0119B0  1180               	iorwf	(f_write@cc+1)& (0+255),w,b
 26294   0119B2  B4D8               	btfsc	status,2,c
 26295   0119B4  EFDE  F08C         	goto	u32221
 26296   0119B8  EFE0  F08C         	goto	u32220
 26297   0119BC                     u32221:
 26298   0119BC  EFA4  F08D         	goto	l23269
 26299   0119C0                     u32220:
 26300   0119C0                     
 26301                           ; BSR set to: 6
 26302                           ;../fatfs/ff.c: 4079:     if (csect + cc > fs->csize) {
 26303   0119C0  517F               	movf	f_write@cc& (0+255),w,b
 26304   0119C2  257D               	addwf	f_write@csect& (0+255),w,b
 26305   0119C4  6F6A               	movwf	??_f_write& (0+255),b
 26306   0119C6  5180               	movf	(f_write@cc+1)& (0+255),w,b
 26307   0119C8  217E               	addwfc	(f_write@csect+1)& (0+255),w,b
 26308   0119CA  6F6B               	movwf	(??_f_write+1)& (0+255),b
 26309   0119CC  EE20 F00A          	lfsr	2,10
 26310   0119D0  518B               	movf	f_write@fs& (0+255),w,b
 26311   0119D2  26D9               	addwf	fsr2l,f,c
 26312   0119D4  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26313   0119D6  22DA               	addwfc	fsr2h,f,c
 26314   0119D8  516A               	movf	??_f_write& (0+255),w,b
 26315   0119DA  5CDE               	subwf	postinc2,w,c
 26316   0119DC  516B               	movf	(??_f_write+1)& (0+255),w,b
 26317   0119DE  58DE               	subwfb	postinc2,w,c
 26318   0119E0  B0D8               	btfsc	status,0,c
 26319   0119E2  EFF5  F08C         	goto	u32231
 26320   0119E6  EFF7  F08C         	goto	u32230
 26321   0119EA                     u32231:
 26322   0119EA  EF07  F08D         	goto	l23253
 26323   0119EE                     u32230:
 26324   0119EE                     
 26325                           ; BSR set to: 6
 26326                           ;../fatfs/ff.c: 4080:      cc = fs->csize - csect;
 26327   0119EE  EE20 F00A          	lfsr	2,10
 26328   0119F2  518B               	movf	f_write@fs& (0+255),w,b
 26329   0119F4  26D9               	addwf	fsr2l,f,c
 26330   0119F6  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26331   0119F8  22DA               	addwfc	fsr2h,f,c
 26332   0119FA  C4DE F66A          	movff	postinc2,??_f_write
 26333   0119FE  C4DD F66B          	movff	postdec2,??_f_write+1
 26334   011A02  517D               	movf	f_write@csect& (0+255),w,b
 26335   011A04  5D6A               	subwf	??_f_write& (0+255),w,b
 26336   011A06  6F7F               	movwf	f_write@cc& (0+255),b
 26337   011A08  517E               	movf	(f_write@csect+1)& (0+255),w,b
 26338   011A0A  596B               	subwfb	(??_f_write+1)& (0+255),w,b
 26339   011A0C  6F80               	movwf	(f_write@cc+1)& (0+255),b
 26340   011A0E                     l23253:
 26341                           
 26342                           ; BSR set to: 6
 26343                           ;../fatfs/ff.c: 4082:     if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26344   011A0E  C67B  F600         	movff	f_write@wbuff,disk_write@buff
 26345   011A12  C67C  F601         	movff	f_write@wbuff+1,disk_write@buff+1
 26346   011A16  C687  F602         	movff	f_write@sect,disk_write@sector
 26347   011A1A  C688  F603         	movff	f_write@sect+1,disk_write@sector+1
 26348   011A1E  C689  F604         	movff	f_write@sect+2,disk_write@sector+2
 26349   011A22  C68A  F605         	movff	f_write@sect+3,disk_write@sector+3
 26350   011A26  C67F  F606         	movff	f_write@cc,disk_write@count
 26351   011A2A  C680  F607         	movff	f_write@cc+1,disk_write@count+1
 26352   011A2E  EE20 F001          	lfsr	2,1
 26353   011A32  518B               	movf	f_write@fs& (0+255),w,b
 26354   011A34  26D9               	addwf	fsr2l,f,c
 26355   011A36  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26356   011A38  22DA               	addwfc	fsr2h,f,c
 26357   011A3A  50DF               	movf	indf2,w,c
 26358   011A3C  EC7E  F0F3         	call	_disk_write
 26359   011A40  0900               	iorlw	0
 26360   011A42  B4D8               	btfsc	status,2,c
 26361   011A44  EF26  F08D         	goto	u32241
 26362   011A48  EF28  F08D         	goto	u32240
 26363   011A4C                     u32241:
 26364   011A4C  EF33  F08D         	goto	l23261
 26365   011A50                     u32240:
 26366   011A50  0106               	movlb	6	; () banked
 26367   011A52  EE20 F00F          	lfsr	2,15
 26368   011A56  5162               	movf	f_write@fp& (0+255),w,b
 26369   011A58  26D9               	addwf	fsr2l,f,c
 26370   011A5A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26371   011A5C  22DA               	addwfc	fsr2h,f,c
 26372   011A5E  0E01               	movlw	1
 26373   011A60  6EDF               	movwf	indf2,c
 26374   011A62  EF13  F08C         	goto	l23215
 26375   011A66                     l23261:
 26376                           
 26377                           ;../fatfs/ff.c: 4090:     if (fp->sect - sect < cc) {
 26378   011A66  0106               	movlb	6	; () banked
 26379   011A68  517F               	movf	f_write@cc& (0+255),w,b
 26380   011A6A  6F6A               	movwf	??_f_write& (0+255),b
 26381   011A6C  5180               	movf	(f_write@cc+1)& (0+255),w,b
 26382   011A6E  6F6B               	movwf	(??_f_write+1)& (0+255),b
 26383   011A70  6B6C               	clrf	(??_f_write+2)& (0+255),b
 26384   011A72  6B6D               	clrf	(??_f_write+3)& (0+255),b
 26385   011A74  EE20 F018          	lfsr	2,24
 26386   011A78  5162               	movf	f_write@fp& (0+255),w,b
 26387   011A7A  26D9               	addwf	fsr2l,f,c
 26388   011A7C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26389   011A7E  22DA               	addwfc	fsr2h,f,c
 26390   011A80  C4DE F66E          	movff	postinc2,??_f_write+4
 26391   011A84  C4DE F66F          	movff	postinc2,??_f_write+5
 26392   011A88  C4DE F670          	movff	postinc2,??_f_write+6
 26393   011A8C  C4DE F671          	movff	postinc2,??_f_write+7
 26394   011A90  5187               	movf	f_write@sect& (0+255),w,b
 26395   011A92  5D6E               	subwf	(??_f_write+4)& (0+255),w,b
 26396   011A94  6F72               	movwf	(??_f_write+8)& (0+255),b
 26397   011A96  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26398   011A98  596F               	subwfb	(??_f_write+5)& (0+255),w,b
 26399   011A9A  6F73               	movwf	(??_f_write+9)& (0+255),b
 26400   011A9C  5189               	movf	(f_write@sect+2)& (0+255),w,b
 26401   011A9E  5970               	subwfb	(??_f_write+6)& (0+255),w,b
 26402   011AA0  6F74               	movwf	(??_f_write+10)& (0+255),b
 26403   011AA2  518A               	movf	(f_write@sect+3)& (0+255),w,b
 26404   011AA4  5971               	subwfb	(??_f_write+7)& (0+255),w,b
 26405   011AA6  6F75               	movwf	(??_f_write+11)& (0+255),b
 26406   011AA8  516A               	movf	??_f_write& (0+255),w,b
 26407   011AAA  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 26408   011AAC  516B               	movf	(??_f_write+1)& (0+255),w,b
 26409   011AAE  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 26410   011AB0  516C               	movf	(??_f_write+2)& (0+255),w,b
 26411   011AB2  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 26412   011AB4  516D               	movf	(??_f_write+3)& (0+255),w,b
 26413   011AB6  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 26414   011AB8  B0D8               	btfsc	status,0,c
 26415   011ABA  EF61  F08D         	goto	u32251
 26416   011ABE  EF63  F08D         	goto	u32250
 26417   011AC2                     u32251:
 26418   011AC2  EF93  F08D         	goto	l23267
 26419   011AC6                     u32250:
 26420   011AC6                     
 26421                           ; BSR set to: 6
 26422                           ;../fatfs/ff.c: 4091:      memcpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((
      +                          UINT)512));
 26423   011AC6  0E22               	movlw	34
 26424   011AC8  2562               	addwf	f_write@fp& (0+255),w,b
 26425   011ACA  6E04               	movwf	memcpy@d1^(0+1280),c
 26426   011ACC  0E00               	movlw	0
 26427   011ACE  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26428   011AD0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 26429   011AD2  EE20 F018          	lfsr	2,24
 26430   011AD6  5162               	movf	f_write@fp& (0+255),w,b
 26431   011AD8  26D9               	addwf	fsr2l,f,c
 26432   011ADA  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26433   011ADC  22DA               	addwfc	fsr2h,f,c
 26434   011ADE  C4DE F66A          	movff	postinc2,??_f_write
 26435   011AE2  C4DD F66B          	movff	postdec2,??_f_write+1
 26436   011AE6  5187               	movf	f_write@sect& (0+255),w,b
 26437   011AE8  5F6A               	subwf	??_f_write& (0+255),f,b
 26438   011AEA  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26439   011AEC  5B6B               	subwfb	(??_f_write+1)& (0+255),f,b
 26440   011AEE  0E09               	movlw	9
 26441   011AF0                     u32265:
 26442   011AF0  90D8               	bcf	status,0,c
 26443   011AF2  376A               	rlcf	??_f_write& (0+255),f,b
 26444   011AF4  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 26445   011AF6  2EE8               	decfsz	wreg,f,c
 26446   011AF8  EF78  F08D         	goto	u32265
 26447   011AFC  516A               	movf	??_f_write& (0+255),w,b
 26448   011AFE  257B               	addwf	f_write@wbuff& (0+255),w,b
 26449   011B00  6E06               	movwf	memcpy@s1^(0+1280),c
 26450   011B02  516B               	movf	(??_f_write+1)& (0+255),w,b
 26451   011B04  217C               	addwfc	(f_write@wbuff+1)& (0+255),w,b
 26452   011B06  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 26453   011B08  0E02               	movlw	2
 26454   011B0A  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 26455   011B0C  0E00               	movlw	0
 26456   011B0E  6E08               	movwf	memcpy@n^(0+1280),c
 26457   011B10  EC00  F0FD         	call	_memcpy	;wreg free
 26458   011B14                     
 26459                           ;../fatfs/ff.c: 4092:      fp->flag &= (BYTE)~0x80;
 26460   011B14  0106               	movlb	6	; () banked
 26461   011B16  EE20 F00E          	lfsr	2,14
 26462   011B1A  5162               	movf	f_write@fp& (0+255),w,b
 26463   011B1C  26D9               	addwf	fsr2l,f,c
 26464   011B1E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26465   011B20  22DA               	addwfc	fsr2h,f,c
 26466   011B22  0E7F               	movlw	127
 26467   011B24  16DF               	andwf	indf2,f,c
 26468   011B26                     l23267:
 26469                           
 26470                           ; BSR set to: 6
 26471                           ;../fatfs/ff.c: 4096:     wcnt = ((UINT)512) * cc;
 26472   011B26  C67F  F66A         	movff	f_write@cc,??_f_write
 26473   011B2A  C680  F66B         	movff	f_write@cc+1,??_f_write+1
 26474   011B2E  0E09               	movlw	9
 26475   011B30                     u32275:
 26476   011B30  90D8               	bcf	status,0,c
 26477   011B32  376A               	rlcf	??_f_write& (0+255),f,b
 26478   011B34  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 26479   011B36  2EE8               	decfsz	wreg,f,c
 26480   011B38  EF98  F08D         	goto	u32275
 26481   011B3C  C66A  F685         	movff	??_f_write,f_write@wcnt
 26482   011B40  C66B  F686         	movff	??_f_write+1,f_write@wcnt+1
 26483                           
 26484                           ;../fatfs/ff.c: 4097:     continue;
 26485   011B44  EF6A  F08E         	goto	l23291
 26486   011B48                     l23269:
 26487                           
 26488                           ; BSR set to: 6
 26489                           ;../fatfs/ff.c: 4105:    if (fp->sect != sect &&
 26490   011B48  EE20 F018          	lfsr	2,24
 26491   011B4C  5162               	movf	f_write@fp& (0+255),w,b
 26492   011B4E  26D9               	addwf	fsr2l,f,c
 26493   011B50  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26494   011B52  22DA               	addwfc	fsr2h,f,c
 26495   011B54  5187               	movf	f_write@sect& (0+255),w,b
 26496   011B56  18DE               	xorwf	postinc2,w,c
 26497   011B58  E10F               	bnz	u32280
 26498   011B5A  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26499   011B5C  18DE               	xorwf	postinc2,w,c
 26500   011B5E  E10C               	bnz	u32280
 26501   011B60  5189               	movf	(f_write@sect+2)& (0+255),w,b
 26502   011B62  18DE               	xorwf	postinc2,w,c
 26503   011B64  E109               	bnz	u32280
 26504   011B66  518A               	movf	(f_write@sect+3)& (0+255),w,b
 26505   011B68  18DE               	xorwf	postinc2,w,c
 26506   011B6A  B4D8               	btfsc	status,2,c
 26507   011B6C  EFBA  F08D         	goto	u32281
 26508   011B70  EFBC  F08D         	goto	u32280
 26509   011B74                     u32281:
 26510   011B74  EF05  F08E         	goto	l23281
 26511   011B78                     u32280:
 26512   011B78                     
 26513                           ; BSR set to: 6
 26514   011B78  EE20 F00A          	lfsr	2,10
 26515   011B7C  5162               	movf	f_write@fp& (0+255),w,b
 26516   011B7E  26D9               	addwf	fsr2l,f,c
 26517   011B80  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26518   011B82  22DA               	addwfc	fsr2h,f,c
 26519   011B84  EE10 F010          	lfsr	1,16
 26520   011B88  5162               	movf	f_write@fp& (0+255),w,b
 26521   011B8A  26E1               	addwf	fsr1l,f,c
 26522   011B8C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26523   011B8E  22E2               	addwfc	fsr1h,f,c
 26524   011B90  50DE               	movf	postinc2,w,c
 26525   011B92  5CE6               	subwf	postinc1,w,c
 26526   011B94  50DE               	movf	postinc2,w,c
 26527   011B96  58E6               	subwfb	postinc1,w,c
 26528   011B98  50DE               	movf	postinc2,w,c
 26529   011B9A  58E6               	subwfb	postinc1,w,c
 26530   011B9C  50DE               	movf	postinc2,w,c
 26531   011B9E  58E6               	subwfb	postinc1,w,c
 26532   011BA0  B0D8               	btfsc	status,0,c
 26533   011BA2  EFD5  F08D         	goto	u32291
 26534   011BA6  EFD7  F08D         	goto	u32290
 26535   011BAA                     u32291:
 26536   011BAA  EF05  F08E         	goto	l23281
 26537   011BAE                     u32290:
 26538   011BAE                     
 26539                           ; BSR set to: 6
 26540   011BAE  0E22               	movlw	34
 26541   011BB0  2562               	addwf	f_write@fp& (0+255),w,b
 26542   011BB2  6F00               	movwf	disk_read@buff& (0+255),b
 26543   011BB4  0E00               	movlw	0
 26544   011BB6  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26545   011BB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 26546   011BBA  C687  F602         	movff	f_write@sect,disk_read@sector
 26547   011BBE  C688  F603         	movff	f_write@sect+1,disk_read@sector+1
 26548   011BC2  C689  F604         	movff	f_write@sect+2,disk_read@sector+2
 26549   011BC6  C68A  F605         	movff	f_write@sect+3,disk_read@sector+3
 26550   011BCA  0E00               	movlw	0
 26551   011BCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 26552   011BCE  0E01               	movlw	1
 26553   011BD0  6F06               	movwf	disk_read@count& (0+255),b
 26554   011BD2  EE20 F001          	lfsr	2,1
 26555   011BD6  518B               	movf	f_write@fs& (0+255),w,b
 26556   011BD8  26D9               	addwf	fsr2l,f,c
 26557   011BDA  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26558   011BDC  22DA               	addwfc	fsr2h,f,c
 26559   011BDE  50DF               	movf	indf2,w,c
 26560   011BE0  ECD5  F0F3         	call	_disk_read
 26561   011BE4  0900               	iorlw	0
 26562   011BE6  B4D8               	btfsc	status,2,c
 26563   011BE8  EFF8  F08D         	goto	u32301
 26564   011BEC  EFFA  F08D         	goto	u32300
 26565   011BF0                     u32301:
 26566   011BF0  EF05  F08E         	goto	l23281
 26567   011BF4                     u32300:
 26568   011BF4                     
 26569                           ;../fatfs/ff.c: 4107:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {;../fatfs/ff
      +                          .c: 4108:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26570   011BF4  0106               	movlb	6	; () banked
 26571   011BF6  EE20 F00F          	lfsr	2,15
 26572   011BFA  5162               	movf	f_write@fp& (0+255),w,b
 26573   011BFC  26D9               	addwf	fsr2l,f,c
 26574   011BFE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26575   011C00  22DA               	addwfc	fsr2h,f,c
 26576   011C02  0E01               	movlw	1
 26577   011C04  6EDF               	movwf	indf2,c
 26578   011C06  EF13  F08C         	goto	l23215
 26579   011C0A                     l23281:
 26580                           
 26581                           ;../fatfs/ff.c: 4111:    fp->sect = sect;
 26582   011C0A  0106               	movlb	6	; () banked
 26583   011C0C  EE20 F018          	lfsr	2,24
 26584   011C10  5162               	movf	f_write@fp& (0+255),w,b
 26585   011C12  26D9               	addwf	fsr2l,f,c
 26586   011C14  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26587   011C16  22DA               	addwfc	fsr2h,f,c
 26588   011C18  C687  F4DE         	movff	f_write@sect,postinc2
 26589   011C1C  C688  F4DE         	movff	f_write@sect+1,postinc2
 26590   011C20  C689  F4DE         	movff	f_write@sect+2,postinc2
 26591   011C24  C68A  F4DE         	movff	f_write@sect+3,postinc2
 26592   011C28                     l1951:
 26593                           
 26594                           ; BSR set to: 6
 26595                           ;../fatfs/ff.c: 4113:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 26596   011C28  EE20 F010          	lfsr	2,16
 26597   011C2C  5162               	movf	f_write@fp& (0+255),w,b
 26598   011C2E  26D9               	addwf	fsr2l,f,c
 26599   011C30  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26600   011C32  22DA               	addwfc	fsr2h,f,c
 26601   011C34  C4DE F66A          	movff	postinc2,??_f_write
 26602   011C38  C4DD F66B          	movff	postdec2,??_f_write+1
 26603   011C3C  0EFF               	movlw	255
 26604   011C3E  156A               	andwf	??_f_write& (0+255),w,b
 26605   011C40  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26606   011C42  0E01               	movlw	1
 26607   011C44  156B               	andwf	(??_f_write+1)& (0+255),w,b
 26608   011C46  6F6D               	movwf	(??_f_write+3)& (0+255),b
 26609   011C48  516C               	movf	(??_f_write+2)& (0+255),w,b
 26610   011C4A  0800               	sublw	0
 26611   011C4C  6F85               	movwf	f_write@wcnt& (0+255),b
 26612   011C4E  516D               	movf	(??_f_write+3)& (0+255),w,b
 26613   011C50  A0D8               	btfss	status,0,c
 26614   011C52  2AE8               	incf	wreg,f,c
 26615   011C54  0802               	sublw	2
 26616   011C56  6F86               	movwf	(f_write@wcnt+1)& (0+255),b
 26617   011C58                     
 26618                           ; BSR set to: 6
 26619                           ;../fatfs/ff.c: 4114:   if (wcnt > btw) wcnt = btw;
 26620   011C58  5185               	movf	f_write@wcnt& (0+255),w,b
 26621   011C5A  5D66               	subwf	f_write@btw& (0+255),w,b
 26622   011C5C  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26623   011C5E  5967               	subwfb	(f_write@btw+1)& (0+255),w,b
 26624   011C60  B0D8               	btfsc	status,0,c
 26625   011C62  EF35  F08E         	goto	u32311
 26626   011C66  EF37  F08E         	goto	u32310
 26627   011C6A                     u32311:
 26628   011C6A  EF3B  F08E         	goto	l23287
 26629   011C6E                     u32310:
 26630   011C6E                     
 26631                           ; BSR set to: 6
 26632   011C6E  C666  F685         	movff	f_write@btw,f_write@wcnt
 26633   011C72  C667  F686         	movff	f_write@btw+1,f_write@wcnt+1
 26634   011C76                     l23287:
 26635                           
 26636                           ; BSR set to: 6
 26637                           ;../fatfs/ff.c: 4120:   memcpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
 26638   011C76  EE20 F010          	lfsr	2,16
 26639   011C7A  5162               	movf	f_write@fp& (0+255),w,b
 26640   011C7C  26D9               	addwf	fsr2l,f,c
 26641   011C7E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26642   011C80  22DA               	addwfc	fsr2h,f,c
 26643   011C82  C4DE F66A          	movff	postinc2,??_f_write
 26644   011C86  C4DD F66B          	movff	postdec2,??_f_write+1
 26645   011C8A  0EFF               	movlw	255
 26646   011C8C  156A               	andwf	??_f_write& (0+255),w,b
 26647   011C8E  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26648   011C90  0E01               	movlw	1
 26649   011C92  156B               	andwf	(??_f_write+1)& (0+255),w,b
 26650   011C94  6F6D               	movwf	(??_f_write+3)& (0+255),b
 26651   011C96  516C               	movf	(??_f_write+2)& (0+255),w,b
 26652   011C98  2562               	addwf	f_write@fp& (0+255),w,b
 26653   011C9A  6F6E               	movwf	(??_f_write+4)& (0+255),b
 26654   011C9C  516D               	movf	(??_f_write+3)& (0+255),w,b
 26655   011C9E  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26656   011CA0  6F6F               	movwf	(??_f_write+5)& (0+255),b
 26657   011CA2  0E22               	movlw	34
 26658   011CA4  256E               	addwf	(??_f_write+4)& (0+255),w,b
 26659   011CA6  6E04               	movwf	memcpy@d1^(0+1280),c
 26660   011CA8  0E00               	movlw	0
 26661   011CAA  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 26662   011CAC  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 26663   011CAE  C67B  F506         	movff	f_write@wbuff,memcpy@s1
 26664   011CB2  C67C  F507         	movff	f_write@wbuff+1,memcpy@s1+1
 26665   011CB6  C685  F508         	movff	f_write@wcnt,memcpy@n
 26666   011CBA  C686  F509         	movff	f_write@wcnt+1,memcpy@n+1
 26667   011CBE  EC00  F0FD         	call	_memcpy	;wreg free
 26668   011CC2                     
 26669                           ;../fatfs/ff.c: 4121:   fp->flag |= 0x80;
 26670   011CC2  0106               	movlb	6	; () banked
 26671   011CC4  EE20 F00E          	lfsr	2,14
 26672   011CC8  5162               	movf	f_write@fp& (0+255),w,b
 26673   011CCA  26D9               	addwf	fsr2l,f,c
 26674   011CCC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26675   011CCE  22DA               	addwfc	fsr2h,f,c
 26676   011CD0  0E00               	movlw	0
 26677   011CD2  8EDB               	bsf	plusw2,7,c
 26678   011CD4                     l23291:
 26679                           
 26680                           ; BSR set to: 6
 26681   011CD4  5185               	movf	f_write@wcnt& (0+255),w,b
 26682   011CD6  5F66               	subwf	f_write@btw& (0+255),f,b
 26683   011CD8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26684   011CDA  5B67               	subwfb	(f_write@btw+1)& (0+255),f,b
 26685   011CDC                     
 26686                           ; BSR set to: 6
 26687   011CDC  C668  F4D9         	movff	f_write@bw,fsr2l
 26688   011CE0  C669  F4DA         	movff	f_write@bw+1,fsr2h
 26689   011CE4  5185               	movf	f_write@wcnt& (0+255),w,b
 26690   011CE6  26DE               	addwf	postinc2,f,c
 26691   011CE8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26692   011CEA  22DD               	addwfc	postdec2,f,c
 26693   011CEC                     
 26694                           ; BSR set to: 6
 26695   011CEC  5185               	movf	f_write@wcnt& (0+255),w,b
 26696   011CEE  277B               	addwf	f_write@wbuff& (0+255),f,b
 26697   011CF0  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26698   011CF2  237C               	addwfc	(f_write@wbuff+1)& (0+255),f,b
 26699   011CF4                     
 26700                           ; BSR set to: 6
 26701   011CF4  EE20 F010          	lfsr	2,16
 26702   011CF8  5162               	movf	f_write@fp& (0+255),w,b
 26703   011CFA  26D9               	addwf	fsr2l,f,c
 26704   011CFC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26705   011CFE  22DA               	addwfc	fsr2h,f,c
 26706   011D00  5185               	movf	f_write@wcnt& (0+255),w,b
 26707   011D02  26DE               	addwf	postinc2,f,c
 26708   011D04  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26709   011D06  22DE               	addwfc	postinc2,f,c
 26710   011D08  0E00               	movlw	0
 26711   011D0A  22DE               	addwfc	postinc2,f,c
 26712   011D0C  22DE               	addwfc	postinc2,f,c
 26713   011D0E                     
 26714                           ; BSR set to: 6
 26715   011D0E  EE20 F010          	lfsr	2,16
 26716   011D12  5162               	movf	f_write@fp& (0+255),w,b
 26717   011D14  26D9               	addwf	fsr2l,f,c
 26718   011D16  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26719   011D18  22DA               	addwfc	fsr2h,f,c
 26720   011D1A  EE10 F00A          	lfsr	1,10
 26721   011D1E  5162               	movf	f_write@fp& (0+255),w,b
 26722   011D20  26E1               	addwf	fsr1l,f,c
 26723   011D22  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26724   011D24  22E2               	addwfc	fsr1h,f,c
 26725   011D26  50DE               	movf	postinc2,w,c
 26726   011D28  5CE6               	subwf	postinc1,w,c
 26727   011D2A  50DE               	movf	postinc2,w,c
 26728   011D2C  58E6               	subwfb	postinc1,w,c
 26729   011D2E  50DE               	movf	postinc2,w,c
 26730   011D30  58E6               	subwfb	postinc1,w,c
 26731   011D32  50DE               	movf	postinc2,w,c
 26732   011D34  58E6               	subwfb	postinc1,w,c
 26733   011D36  A0D8               	btfss	status,0,c
 26734   011D38  EFA0  F08E         	goto	u32321
 26735   011D3C  EFA2  F08E         	goto	u32320
 26736   011D40                     u32321:
 26737   011D40  EFB2  F08E         	goto	l23303
 26738   011D44                     u32320:
 26739   011D44                     
 26740                           ; BSR set to: 6
 26741   011D44  EE20 F00A          	lfsr	2,10
 26742   011D48  5162               	movf	f_write@fp& (0+255),w,b
 26743   011D4A  26D9               	addwf	fsr2l,f,c
 26744   011D4C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26745   011D4E  22DA               	addwfc	fsr2h,f,c
 26746   011D50  C4DE F676          	movff	postinc2,_f_write$3207
 26747   011D54  C4DE F677          	movff	postinc2,_f_write$3207+1
 26748   011D58  C4DE F678          	movff	postinc2,_f_write$3207+2
 26749   011D5C  C4DE F679          	movff	postinc2,_f_write$3207+3
 26750   011D60  EFC0  F08E         	goto	l1973
 26751   011D64                     l23303:
 26752                           
 26753                           ; BSR set to: 6
 26754   011D64  EE20 F010          	lfsr	2,16
 26755   011D68  5162               	movf	f_write@fp& (0+255),w,b
 26756   011D6A  26D9               	addwf	fsr2l,f,c
 26757   011D6C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26758   011D6E  22DA               	addwfc	fsr2h,f,c
 26759   011D70  C4DE F676          	movff	postinc2,_f_write$3207
 26760   011D74  C4DE F677          	movff	postinc2,_f_write$3207+1
 26761   011D78  C4DE F678          	movff	postinc2,_f_write$3207+2
 26762   011D7C  C4DE F679          	movff	postinc2,_f_write$3207+3
 26763   011D80                     l1973:
 26764                           
 26765                           ; BSR set to: 6
 26766   011D80  EE20 F00A          	lfsr	2,10
 26767   011D84  5162               	movf	f_write@fp& (0+255),w,b
 26768   011D86  26D9               	addwf	fsr2l,f,c
 26769   011D88  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26770   011D8A  22DA               	addwfc	fsr2h,f,c
 26771   011D8C  C676  F4DE         	movff	_f_write$3207,postinc2
 26772   011D90  C677  F4DE         	movff	_f_write$3207+1,postinc2
 26773   011D94  C678  F4DE         	movff	_f_write$3207+2,postinc2
 26774   011D98  C679  F4DE         	movff	_f_write$3207+3,postinc2
 26775   011D9C  EF1B  F08B         	goto	l23179
 26776   011DA0                     l23307:
 26777                           
 26778                           ; BSR set to: 6
 26779                           ;../fatfs/ff.c: 4125:  fp->flag |= 0x40;
 26780   011DA0  EE20 F00E          	lfsr	2,14
 26781   011DA4  5162               	movf	f_write@fp& (0+255),w,b
 26782   011DA6  26D9               	addwf	fsr2l,f,c
 26783   011DA8  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26784   011DAA  22DA               	addwfc	fsr2h,f,c
 26785   011DAC  0E00               	movlw	0
 26786   011DAE  8CDB               	bsf	plusw2,6,c
 26787   011DB0                     
 26788                           ; BSR set to: 6
 26789                           ;../fatfs/ff.c: 4127:  return FR_OK;
 26790   011DB0  0E00               	movlw	0
 26791   011DB2                     l1944:
 26792                           
 26793                           ; BSR set to: 6
 26794   011DB2  0012               	return		;funcret
 26795   011DB4                     __end_of_f_write:
 26796                           	callstack 0
 26797                           
 26798 ;; *************** function _unimon_console *****************
 26799 ;; Defined at:
 26800 ;;		line 142 in file "../src/io_dos.c"
 26801 ;; Parameters:    Size  Location     Type
 26802 ;;		None
 26803 ;; Auto vars:     Size  Location     Type
 26804 ;;  cnt             2   14[BANK7 ] unsigned short 
 26805 ;;  buf             2   12[BANK7 ] PTR unsigned char 
 26806 ;;		 -> tmp_buf(512), 
 26807 ;; Return value:  Size  Location     Type
 26808 ;;                  1    wreg      void 
 26809 ;; Registers used:
 26810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26811 ;; Tracked objects:
 26812 ;;		On entry : 0/0
 26813 ;;		On exit  : 0/0
 26814 ;;		Unchanged: 0/0
 26815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26817 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26819 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26820 ;;Total ram usage:        6 bytes
 26821 ;; Hardware stack levels used: 1
 26822 ;; Hardware stack levels required when called: 21
 26823 ;; This function calls:
 26824 ;;		_get_str
 26825 ;;		_in_file
 26826 ;;		_putch
 26827 ;;		_read_sram
 26828 ;;		_str_inf
 26829 ;;		_u_getch
 26830 ;;		_write_sram
 26831 ;; This function is called by:
 26832 ;;		_bus_master_operation
 26833 ;; This function uses a non-reentrant model
 26834 ;;
 26835                           
 26836                           	psect	text66
 26837   01AC5A                     __ptext66:
 26838                           	callstack 0
 26839   01AC5A                     _unimon_console:
 26840                           	callstack 101
 26841   01AC5A                     
 26842                           ;../src/io_dos.c: 144:  uint8_t *buf;;../src/io_dos.c: 145:  uint16_t cnt;;../src/io_dos
      +                          .c: 147:  buf = &tmp_buf[0][0];
 26843   01AC5A  0EF8               	movlw	low _tmp_buf
 26844   01AC5C  0107               	movlb	7	; () banked
 26845   01AC5E  6F0C               	movwf	unimon_console@buf& (0+255),b
 26846   01AC60  0E13               	movlw	high _tmp_buf
 26847   01AC62  6F0D               	movwf	(unimon_console@buf+1)& (0+255),b
 26848                           
 26849                           ;../src/io_dos.c: 148:  switch (req_tbl.UREQ_COM) {
 26850   01AC64  EFE7  F0D6         	goto	l23561
 26851   01AC68                     l23527:
 26852                           
 26853                           ; BSR set to: 7
 26854                           ;../src/io_dos.c: 151:    req_tbl.UNI_CHR = (uint8_t)(*get_char[cin_no])();
 26855   01AC68  51CA               	movf	_cin_no& (0+255),w,b
 26856   01AC6A  0D03               	mullw	3
 26857   01AC6C  0ED9               	movlw	low _get_char
 26858   01AC6E  24F3               	addwf	243,w,c
 26859   01AC70  6ED9               	movwf	fsr2l,c
 26860   01AC72  0E08               	movlw	high _get_char
 26861   01AC74  20F4               	addwfc	prodh,w,c
 26862   01AC76  6EDA               	movwf	fsr2h,c
 26863   01AC78  D802               	call	u32668
 26864   01AC7A  EF49  F0D6         	goto	u32669
 26865   01AC7E                     u32668:
 26866   01AC7E  0005               	push	
 26867   01AC80  6EFA               	movwf	pclath,c
 26868   01AC82  50DE               	movf	postinc2,w,c
 26869   01AC84  6EFD               	movwf	tosl,c
 26870   01AC86  50DE               	movf	postinc2,w,c
 26871   01AC88  6EFE               	movwf	tosh,c
 26872   01AC8A  50DE               	movf	postinc2,w,c
 26873   01AC8C  6EFF               	movwf	tosu,c
 26874   01AC8E  50FA               	movf	pclath,w,c
 26875   01AC90  0012               	return		;indir
 26876   01AC92                     u32669:
 26877   01AC92  0107               	movlb	7	; () banked
 26878   01AC94  5100               	movf	?_in_file& (0+255),w,b
 26879   01AC96  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 26880                           
 26881                           ;../src/io_dos.c: 152:    break;
 26882   01AC98  EF02  F0D7         	goto	l819
 26883   01AC9C                     l23529:
 26884                           
 26885                           ; BSR set to: 7
 26886                           ;../src/io_dos.c: 155:    putch((char)req_tbl.UNI_CHR);
 26887   01AC9C  51CF               	movf	(_req_tbl+1)& (0+255),w,b
 26888   01AC9E  EC03  F001         	call	_putch
 26889                           
 26890                           ;../src/io_dos.c: 156:    break;
 26891   01ACA2  EF02  F0D7         	goto	l819
 26892   01ACA6                     l23531:
 26893                           
 26894                           ; BSR set to: 7
 26895                           ;../src/io_dos.c: 159:    if ( !cin_no ) req_tbl.UNI_CHR = (rx_cnt !=0) ? 255 : 0;
 26896   01ACA6  51CA               	movf	_cin_no& (0+255),w,b
 26897   01ACA8  A4D8               	btfss	status,2,c
 26898   01ACAA  EF59  F0D6         	goto	u32671
 26899   01ACAE  EF5B  F0D6         	goto	u32670
 26900   01ACB2                     u32671:
 26901   01ACB2  EF71  F0D6         	goto	l822
 26902   01ACB6                     u32670:
 26903   01ACB6                     
 26904                           ; BSR set to: 7
 26905   01ACB6  51C1               	movf	_rx_cnt& (0+255),w,b
 26906   01ACB8  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 26907   01ACBA  A4D8               	btfss	status,2,c
 26908   01ACBC  EF62  F0D6         	goto	u32681
 26909   01ACC0  EF64  F0D6         	goto	u32680
 26910   01ACC4                     u32681:
 26911   01ACC4  EF6A  F0D6         	goto	l23537
 26912   01ACC8                     u32680:
 26913   01ACC8                     
 26914                           ; BSR set to: 7
 26915   01ACC8  0E00               	movlw	0
 26916   01ACCA  6F0B               	movwf	(_unimon_console$1022+1)& (0+255),b
 26917   01ACCC  0E00               	movlw	0
 26918   01ACCE  6F0A               	movwf	_unimon_console$1022& (0+255),b
 26919   01ACD0  EF6D  F0D6         	goto	l23539
 26920   01ACD4                     l23537:
 26921                           
 26922                           ; BSR set to: 7
 26923   01ACD4  0E00               	movlw	0
 26924   01ACD6  6F0B               	movwf	(_unimon_console$1022+1)& (0+255),b
 26925   01ACD8  690A               	setf	_unimon_console$1022& (0+255),b
 26926   01ACDA                     l23539:
 26927                           
 26928                           ; BSR set to: 7
 26929   01ACDA  C70A  F7CF         	movff	_unimon_console$1022,_req_tbl+1
 26930   01ACDE  EF02  F0D7         	goto	l819
 26931   01ACE2                     l822:
 26932                           
 26933                           ; BSR set to: 7
 26934   01ACE2  69CF               	setf	(_req_tbl+1)& (0+255),b
 26935   01ACE4  EF02  F0D7         	goto	l819
 26936   01ACE8                     l828:
 26937                           
 26938                           ; BSR set to: 7
 26939                           ;../src/io_dos.c: 163:    cnt = (uint16_t)req_tbl.UNI_CHR;
 26940   01ACE8  C7CF  F70E         	movff	_req_tbl+1,unimon_console@cnt
 26941   01ACEC  6B0F               	clrf	(unimon_console@cnt+1)& (0+255),b
 26942   01ACEE                     
 26943                           ; BSR set to: 7
 26944                           ;../src/io_dos.c: 165:    read_sram(req_tbl.data_adr, buf, cnt);
 26945   01ACEE  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 26946   01ACF2  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 26947   01ACF6  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 26948   01ACFA  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 26949   01ACFE  C70C  F508         	movff	unimon_console@buf,read_sram@buf
 26950   01AD02  C70D  F509         	movff	unimon_console@buf+1,read_sram@buf+1
 26951   01AD06  C70E  F50A         	movff	unimon_console@cnt,read_sram@len
 26952   01AD0A  C70F  F50B         	movff	unimon_console@cnt+1,read_sram@len+1
 26953   01AD0E  EC0C  F0F2         	call	_read_sram	;wreg free
 26954                           
 26955                           ;../src/io_dos.c: 166:    while( cnt ) {
 26956   01AD12  EF98  F0D6         	goto	l23549
 26957   01AD16                     l23543:
 26958                           
 26959                           ; BSR set to: 7
 26960                           ;../src/io_dos.c: 167:     putch( *buf++);
 26961   01AD16  C70C  F4D9         	movff	unimon_console@buf,fsr2l
 26962   01AD1A  C70D  F4DA         	movff	unimon_console@buf+1,fsr2h
 26963   01AD1E  50DF               	movf	indf2,w,c
 26964   01AD20  EC03  F001         	call	_putch
 26965   01AD24  0107               	movlb	7	; () banked
 26966   01AD26  4B0C               	infsnz	unimon_console@buf& (0+255),f,b
 26967   01AD28  2B0D               	incf	(unimon_console@buf+1)& (0+255),f,b
 26968   01AD2A                     
 26969                           ; BSR set to: 7
 26970                           ;../src/io_dos.c: 168:     cnt--;
 26971   01AD2A  070E               	decf	unimon_console@cnt& (0+255),f,b
 26972   01AD2C  A0D8               	btfss	status,0,c
 26973   01AD2E  070F               	decf	(unimon_console@cnt+1)& (0+255),f,b
 26974   01AD30                     l23549:
 26975                           
 26976                           ;../src/io_dos.c: 166:    while( cnt ) {
 26977   01AD30  0107               	movlb	7	; () banked
 26978   01AD32  510E               	movf	unimon_console@cnt& (0+255),w,b
 26979   01AD34  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 26980   01AD36  A4D8               	btfss	status,2,c
 26981   01AD38  EFA0  F0D6         	goto	u32691
 26982   01AD3C  EFA2  F0D6         	goto	u32690
 26983   01AD40                     u32691:
 26984   01AD40  EF8B  F0D6         	goto	l23543
 26985   01AD44                     u32690:
 26986   01AD44  EF02  F0D7         	goto	l819
 26987   01AD48                     l23551:
 26988                           
 26989                           ; BSR set to: 7
 26990                           ;../src/io_dos.c: 172:    cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.UNI
      +                          _CHR);
 26991   01AD48  C70C  F700         	movff	unimon_console@buf,str_inf@buf
 26992   01AD4C  C70D  F701         	movff	unimon_console@buf+1,str_inf@buf+1
 26993   01AD50  C7CF  F702         	movff	_req_tbl+1,str_inf@cnt
 26994   01AD54  51CA               	movf	_cin_no& (0+255),w,b
 26995   01AD56  0D03               	mullw	3
 26996   01AD58  0ED3               	movlw	low _strin_func
 26997   01AD5A  24F3               	addwf	243,w,c
 26998   01AD5C  6ED9               	movwf	fsr2l,c
 26999   01AD5E  0E08               	movlw	high _strin_func
 27000   01AD60  20F4               	addwfc	prodh,w,c
 27001   01AD62  6EDA               	movwf	fsr2h,c
 27002   01AD64  D802               	call	u32708
 27003   01AD66  EFBF  F0D6         	goto	u32709
 27004   01AD6A                     u32708:
 27005   01AD6A  0005               	push	
 27006   01AD6C  6EFA               	movwf	pclath,c
 27007   01AD6E  50DE               	movf	postinc2,w,c
 27008   01AD70  6EFD               	movwf	tosl,c
 27009   01AD72  50DE               	movf	postinc2,w,c
 27010   01AD74  6EFE               	movwf	tosh,c
 27011   01AD76  50DE               	movf	postinc2,w,c
 27012   01AD78  6EFF               	movwf	tosu,c
 27013   01AD7A  50FA               	movf	pclath,w,c
 27014   01AD7C  0012               	return		;indir
 27015   01AD7E                     u32709:
 27016   01AD7E  C700  F70E         	movff	?_str_inf,unimon_console@cnt
 27017   01AD82  C701  F70F         	movff	?_str_inf+1,unimon_console@cnt+1
 27018   01AD86                     
 27019                           ;../src/io_dos.c: 173:    req_tbl.UNI_CHR = (uint8_t)cnt;
 27020   01AD86  C70E  F7CF         	movff	unimon_console@cnt,_req_tbl+1
 27021   01AD8A                     
 27022                           ;../src/io_dos.c: 174:    if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt);
 27023   01AD8A  0107               	movlb	7	; () banked
 27024   01AD8C  510E               	movf	unimon_console@cnt& (0+255),w,b
 27025   01AD8E  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 27026   01AD90  B4D8               	btfsc	status,2,c
 27027   01AD92  EFCD  F0D6         	goto	u32711
 27028   01AD96  EFCF  F0D6         	goto	u32710
 27029   01AD9A                     u32711:
 27030   01AD9A  EF02  F0D7         	goto	l819
 27031   01AD9E                     u32710:
 27032   01AD9E                     
 27033                           ; BSR set to: 7
 27034   01AD9E  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 27035   01ADA2  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 27036   01ADA6  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 27037   01ADAA  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 27038   01ADAE  C70C  F508         	movff	unimon_console@buf,write_sram@buf
 27039   01ADB2  C70D  F509         	movff	unimon_console@buf+1,write_sram@buf+1
 27040   01ADB6  C70E  F50A         	movff	unimon_console@cnt,write_sram@len
 27041   01ADBA  C70F  F50B         	movff	unimon_console@cnt+1,write_sram@len+1
 27042   01ADBE  EC9F  F0E8         	call	_write_sram	;wreg free
 27043   01ADC2  EF02  F0D7         	goto	l819
 27044   01ADC6                     l834:
 27045                           
 27046                           ; BSR set to: 7
 27047                           ;../src/io_dos.c: 177:    wup_flg = req_tbl.UNI_CHR;
 27048   01ADC6  C7CF  F7CC         	movff	_req_tbl+1,_wup_flg
 27049                           
 27050                           ;../src/io_dos.c: 178:    break;
 27051   01ADCA  EF02  F0D7         	goto	l819
 27052   01ADCE                     l23561:
 27053                           
 27054                           ; BSR set to: 7
 27055   01ADCE  51CE               	movf	_req_tbl& (0+255),w,b
 27056                           
 27057                           ; Switch size 1, requested type "simple"
 27058                           ; Number of cases is 6, Range of values is 1 to 255
 27059                           ; switch strategies available:
 27060                           ; Name         Instructions Cycles
 27061                           ; simple_byte           19    10 (average)
 27062                           ;	Chosen strategy is simple_byte
 27063   01ADD0  0A01               	xorlw	1	; case 1
 27064   01ADD2  B4D8               	btfsc	status,2,c
 27065   01ADD4  EF34  F0D6         	goto	l23527
 27066   01ADD8  0A03               	xorlw	3	; case 2
 27067   01ADDA  B4D8               	btfsc	status,2,c
 27068   01ADDC  EF4E  F0D6         	goto	l23529
 27069   01ADE0  0A01               	xorlw	1	; case 3
 27070   01ADE2  B4D8               	btfsc	status,2,c
 27071   01ADE4  EF53  F0D6         	goto	l23531
 27072   01ADE8  0A07               	xorlw	7	; case 4
 27073   01ADEA  B4D8               	btfsc	status,2,c
 27074   01ADEC  EF74  F0D6         	goto	l828
 27075   01ADF0  0A03               	xorlw	3	; case 7
 27076   01ADF2  B4D8               	btfsc	status,2,c
 27077   01ADF4  EFA4  F0D6         	goto	l23551
 27078   01ADF8  0AF8               	xorlw	248	; case 255
 27079   01ADFA  B4D8               	btfsc	status,2,c
 27080   01ADFC  EFE3  F0D6         	goto	l834
 27081   01AE00  EF02  F0D7         	goto	l819
 27082   01AE04                     l819:
 27083                           
 27084                           ;../src/io_dos.c: 180:  req_tbl.UREQ_COM = 0;
 27085   01AE04  0107               	movlb	7	; () banked
 27086   01AE06  6BCE               	clrf	_req_tbl& (0+255),b
 27087   01AE08                     
 27088                           ; BSR set to: 7
 27089   01AE08  0012               	return		;funcret
 27090   01AE0A                     __end_of_unimon_console:
 27091                           	callstack 0
 27092                           
 27093 ;; *************** function _in_file *****************
 27094 ;; Defined at:
 27095 ;;		line 943 in file "../src/w65_main.c"
 27096 ;; Parameters:    Size  Location     Type
 27097 ;;		None
 27098 ;; Auto vars:     Size  Location     Type
 27099 ;;  chr             1  159[BANK5 ] unsigned char 
 27100 ;; Return value:  Size  Location     Type
 27101 ;;                  2    0[BANK7 ] int 
 27102 ;; Registers used:
 27103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27104 ;; Tracked objects:
 27105 ;;		On entry : 0/0
 27106 ;;		On exit  : 0/0
 27107 ;;		Unchanged: 0/0
 27108 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27109 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27112 ;;      Totals:         0       1       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27113 ;;Total ram usage:        3 bytes
 27114 ;; Hardware stack levels used: 1
 27115 ;; Hardware stack levels required when called: 20
 27116 ;; This function calls:
 27117 ;;		_f_close
 27118 ;;		_f_open
 27119 ;;		_f_read
 27120 ;;		_printf
 27121 ;; This function is called by:
 27122 ;;		_unimon_console
 27123 ;;		_bus_master_operation
 27124 ;; This function uses a non-reentrant model
 27125 ;;
 27126                           
 27127                           	psect	text67
 27128   01BFA6                     __ptext67:
 27129                           	callstack 0
 27130   01BFA6                     _in_file:
 27131                           	callstack 101
 27132   01BFA6                     
 27133                           ;../src/w65_main.c: 945:  uint8_t chr;;../src/w65_main.c: 947:  if ( fin_cnt == 0xffff )
      +                           {
 27134   01BFA6  0107               	movlb	7	; () banked
 27135   01BFA8  29E3               	incf	_fin_cnt& (0+255),w,b
 27136   01BFAA  E106               	bnz	u32331
 27137   01BFAC  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 27138   01BFAE  A4D8               	btfss	status,2,c
 27139   01BFB0  EFDC  F0DF         	goto	u32331
 27140   01BFB4  EFDE  F0DF         	goto	u32330
 27141   01BFB8                     u32331:
 27142   01BFB8  EF15  F0E0         	goto	l23329
 27143   01BFBC                     u32330:
 27144   01BFBC                     
 27145                           ; BSR set to: 7
 27146                           ;../src/w65_main.c: 949:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 27147   01BFBC  0EB4               	movlw	low _in_fl
 27148   01BFBE  0106               	movlb	6	; () banked
 27149   01BFC0  6FAF               	movwf	f_open@fp& (0+255),b
 27150   01BFC2  0E0D               	movlw	high _in_fl
 27151   01BFC4  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 27152   01BFC6  0EC2               	movlw	low _fin_name
 27153   01BFC8  6FB1               	movwf	f_open@path& (0+255),b
 27154   01BFCA  0E08               	movlw	high _fin_name
 27155   01BFCC  6FB2               	movwf	(f_open@path+1)& (0+255),b
 27156   01BFCE  0E01               	movlw	1
 27157   01BFD0  6FB3               	movwf	f_open@mode& (0+255),b
 27158   01BFD2  ECDB  F092         	call	_f_open	;wreg free
 27159   01BFD6  0900               	iorlw	0
 27160   01BFD8  B4D8               	btfsc	status,2,c
 27161   01BFDA  EFF1  F0DF         	goto	u32341
 27162   01BFDE  EFF3  F0DF         	goto	u32340
 27163   01BFE2                     u32341:
 27164   01BFE2  EF06  F0E0         	goto	l23325
 27165   01BFE6                     u32340:
 27166   01BFE6                     
 27167                           ;../src/w65_main.c: 950:    printf("File Open Error. %s\r\n", &fin_name[0]);
 27168   01BFE6  0E04               	movlw	low STR_162
 27169   01BFE8  0105               	movlb	5	; () banked
 27170   01BFEA  6FAD               	movwf	printf@fmt& (0+255),b
 27171   01BFEC  0EFC               	movlw	high STR_162
 27172   01BFEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27173   01BFF0  0EC2               	movlw	low _fin_name
 27174   01BFF2  6FAF               	movwf	(?_printf+2)& (0+255),b
 27175   01BFF4  0E08               	movlw	high _fin_name
 27176   01BFF6  6FB0               	movwf	(?_printf+3)& (0+255),b
 27177   01BFF8  ECDA  F0FF         	call	_printf	;wreg free
 27178   01BFFC                     l23319:
 27179                           
 27180                           ;../src/w65_main.c: 951:    cin_no = 0;
 27181   01BFFC  0107               	movlb	7	; () banked
 27182   01BFFE  6BCA               	clrf	_cin_no& (0+255),b
 27183   01C000                     
 27184                           ; BSR set to: 7
 27185                           ;../src/w65_main.c: 952:    return 0;
 27186   01C000  0E00               	movlw	0
 27187   01C002  6F01               	movwf	(?_in_file+1)& (0+255),b
 27188   01C004  0E00               	movlw	0
 27189   01C006  6F00               	movwf	?_in_file& (0+255),b
 27190   01C008  EF8F  F0E0         	goto	l1363
 27191   01C00C                     l23325:
 27192                           
 27193                           ;../src/w65_main.c: 954:   fin_cnt=0;
 27194   01C00C  0E00               	movlw	0
 27195   01C00E  0107               	movlb	7	; () banked
 27196   01C010  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 27197   01C012  0E00               	movlw	0
 27198   01C014  6FE3               	movwf	_fin_cnt& (0+255),b
 27199                           
 27200                           ;../src/w65_main.c: 955:   frd_ptr = 0;
 27201   01C016  0E00               	movlw	0
 27202   01C018  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27203   01C01A  0E00               	movlw	0
 27204   01C01C  6FBD               	movwf	_frd_ptr& (0+255),b
 27205   01C01E                     
 27206                           ; BSR set to: 7
 27207                           ;../src/w65_main.c: 956:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 27208   01C01E  0063  F6F8  F7BB   	movff	_in_fl+10,_fin_size
 27209   01C024  0063  F6FC  F7BC   	movff	_in_fl+11,_fin_size+1
 27210   01C02A                     l23329:
 27211                           
 27212                           ;../src/w65_main.c: 961:  if ( !fin_cnt ) {
 27213   01C02A  0107               	movlb	7	; () banked
 27214   01C02C  51E3               	movf	_fin_cnt& (0+255),w,b
 27215   01C02E  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 27216   01C030  A4D8               	btfss	status,2,c
 27217   01C032  EF1D  F0E0         	goto	u32351
 27218   01C036  EF1F  F0E0         	goto	u32350
 27219   01C03A                     u32351:
 27220   01C03A  EF4E  F0E0         	goto	l23343
 27221   01C03E                     u32350:
 27222   01C03E                     
 27223                           ; BSR set to: 7
 27224                           ;../src/w65_main.c: 962:   frd_ptr = 0;
 27225   01C03E  0E00               	movlw	0
 27226   01C040  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27227   01C042  0E00               	movlw	0
 27228   01C044  6FBD               	movwf	_frd_ptr& (0+255),b
 27229   01C046                     
 27230                           ; BSR set to: 7
 27231                           ;../src/w65_main.c: 963:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt 
      +                          ) ) {
 27232   01C046  0EB4               	movlw	low _in_fl
 27233   01C048  0106               	movlb	6	; () banked
 27234   01C04A  6F3E               	movwf	f_read@fp& (0+255),b
 27235   01C04C  0E0D               	movlw	high _in_fl
 27236   01C04E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 27237   01C050  0EF8               	movlw	low _cin_file
 27238   01C052  6F40               	movwf	f_read@buff& (0+255),b
 27239   01C054  0E11               	movlw	high _cin_file
 27240   01C056  6F41               	movwf	(f_read@buff+1)& (0+255),b
 27241   01C058  0E02               	movlw	2
 27242   01C05A  6F43               	movwf	(f_read@btr+1)& (0+255),b
 27243   01C05C  0E00               	movlw	0
 27244   01C05E  6F42               	movwf	f_read@btr& (0+255),b
 27245   01C060  0EE3               	movlw	low _fin_cnt
 27246   01C062  6F44               	movwf	f_read@br& (0+255),b
 27247   01C064  0E07               	movlw	high _fin_cnt
 27248   01C066  6F45               	movwf	(f_read@br+1)& (0+255),b
 27249   01C068  EC9B  F096         	call	_f_read	;wreg free
 27250   01C06C  0900               	iorlw	0
 27251   01C06E  B4D8               	btfsc	status,2,c
 27252   01C070  EF3C  F0E0         	goto	u32361
 27253   01C074  EF3E  F0E0         	goto	u32360
 27254   01C078                     u32361:
 27255   01C078  EF4E  F0E0         	goto	l23343
 27256   01C07C                     u32360:
 27257   01C07C                     
 27258                           ;../src/w65_main.c: 964:    printf("File read error.\r\n");
 27259   01C07C  0E0F               	movlw	low STR_163
 27260   01C07E  0105               	movlb	5	; () banked
 27261   01C080  6FAD               	movwf	printf@fmt& (0+255),b
 27262   01C082  0EFD               	movlw	high STR_163
 27263   01C084  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27264   01C086  ECDA  F0FF         	call	_printf	;wreg free
 27265                           
 27266                           ;../src/w65_main.c: 965:    f_close( &in_fl );
 27267   01C08A  0EB4               	movlw	low _in_fl
 27268   01C08C  0106               	movlb	6	; () banked
 27269   01C08E  6F2F               	movwf	f_close@fp& (0+255),b
 27270   01C090  0E0D               	movlw	high _in_fl
 27271   01C092  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27272   01C094  ECDB  F0FB         	call	_f_close	;wreg free
 27273   01C098  EFFE  F0DF         	goto	l23319
 27274   01C09C                     l23343:
 27275                           
 27276                           ;../src/w65_main.c: 971:  chr = cin_file[frd_ptr++];
 27277   01C09C  0EF8               	movlw	low _cin_file
 27278   01C09E  0107               	movlb	7	; () banked
 27279   01C0A0  25BD               	addwf	_frd_ptr& (0+255),w,b
 27280   01C0A2  6ED9               	movwf	fsr2l,c
 27281   01C0A4  0E11               	movlw	high _cin_file
 27282   01C0A6  21BE               	addwfc	(_frd_ptr+1)& (0+255),w,b
 27283   01C0A8  6EDA               	movwf	fsr2h,c
 27284   01C0AA  50DF               	movf	indf2,w,c
 27285   01C0AC  0105               	movlb	5	; () banked
 27286   01C0AE  6FFF               	movwf	in_file@chr& (0+255),b
 27287   01C0B0                     
 27288                           ; BSR set to: 5
 27289   01C0B0  0107               	movlb	7	; () banked
 27290   01C0B2  4BBD               	infsnz	_frd_ptr& (0+255),f,b
 27291   01C0B4  2BBE               	incf	(_frd_ptr+1)& (0+255),f,b
 27292   01C0B6                     
 27293                           ; BSR set to: 7
 27294                           ;../src/w65_main.c: 972:  fin_cnt--;
 27295   01C0B6  07E3               	decf	_fin_cnt& (0+255),f,b
 27296   01C0B8  A0D8               	btfss	status,0,c
 27297   01C0BA  07E4               	decf	(_fin_cnt+1)& (0+255),f,b
 27298   01C0BC                     
 27299                           ; BSR set to: 7
 27300                           ;../src/w65_main.c: 973:  fin_size--;
 27301   01C0BC  07BB               	decf	_fin_size& (0+255),f,b
 27302   01C0BE  A0D8               	btfss	status,0,c
 27303   01C0C0  07BC               	decf	(_fin_size+1)& (0+255),f,b
 27304   01C0C2                     
 27305                           ; BSR set to: 7
 27306                           ;../src/w65_main.c: 975:  if ( !fin_size ) {
 27307   01C0C2  51BB               	movf	_fin_size& (0+255),w,b
 27308   01C0C4  11BC               	iorwf	(_fin_size+1)& (0+255),w,b
 27309   01C0C6  A4D8               	btfss	status,2,c
 27310   01C0C8  EF68  F0E0         	goto	u32371
 27311   01C0CC  EF6A  F0E0         	goto	u32370
 27312   01C0D0                     u32371:
 27313   01C0D0  EF84  F0E0         	goto	l23365
 27314   01C0D4                     u32370:
 27315   01C0D4                     
 27316                           ; BSR set to: 7
 27317                           ;../src/w65_main.c: 976:   f_close( &in_fl );
 27318   01C0D4  0EB4               	movlw	low _in_fl
 27319   01C0D6  0106               	movlb	6	; () banked
 27320   01C0D8  6F2F               	movwf	f_close@fp& (0+255),b
 27321   01C0DA  0E0D               	movlw	high _in_fl
 27322   01C0DC  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27323   01C0DE  ECDB  F0FB         	call	_f_close	;wreg free
 27324   01C0E2                     
 27325                           ;../src/w65_main.c: 977:   cin_no = 0;
 27326   01C0E2  0107               	movlb	7	; () banked
 27327   01C0E4  6BCA               	clrf	_cin_no& (0+255),b
 27328   01C0E6                     
 27329                           ; BSR set to: 7
 27330                           ;../src/w65_main.c: 978:   if ( chr < 0x0d ) chr = 0x0d;
 27331   01C0E6  0E0D               	movlw	13
 27332   01C0E8  0105               	movlb	5	; () banked
 27333   01C0EA  61FF               	cpfslt	in_file@chr& (0+255),b
 27334   01C0EC  EF7A  F0E0         	goto	u32381
 27335   01C0F0  EF7C  F0E0         	goto	u32380
 27336   01C0F4                     u32381:
 27337   01C0F4  EF7E  F0E0         	goto	l23361
 27338   01C0F8                     u32380:
 27339   01C0F8                     
 27340                           ; BSR set to: 5
 27341   01C0F8  0E0D               	movlw	13
 27342   01C0FA  6FFF               	movwf	in_file@chr& (0+255),b
 27343   01C0FC                     l23361:
 27344                           
 27345                           ; BSR set to: 5
 27346                           ;../src/w65_main.c: 979:   return chr;
 27347   01C0FC  C5FF  F700         	movff	in_file@chr,?_in_file
 27348   01C100  0107               	movlb	7	; () banked
 27349   01C102  6B01               	clrf	(?_in_file+1)& (0+255),b
 27350   01C104  EF8F  F0E0         	goto	l1363
 27351   01C108                     l23365:
 27352                           
 27353                           ; BSR set to: 7
 27354                           ;../src/w65_main.c: 982:  if ( chr < 0x0d ) goto next_char;
 27355   01C108  0E0D               	movlw	13
 27356   01C10A  0105               	movlb	5	; () banked
 27357   01C10C  61FF               	cpfslt	in_file@chr& (0+255),b
 27358   01C10E  EF8B  F0E0         	goto	u32391
 27359   01C112  EF8D  F0E0         	goto	u32390
 27360   01C116                     u32391:
 27361   01C116  EF7E  F0E0         	goto	l23361
 27362   01C11A                     u32390:
 27363   01C11A  EF15  F0E0         	goto	l23329
 27364   01C11E                     l1363:
 27365                           
 27366                           ; BSR set to: 7
 27367   01C11E  0012               	return		;funcret
 27368   01C120                     __end_of_in_file:
 27369                           	callstack 0
 27370                           
 27371 ;; *************** function _u_getch *****************
 27372 ;; Defined at:
 27373 ;;		line 151 in file "../src/boards/w65_cmn.c"
 27374 ;; Parameters:    Size  Location     Type
 27375 ;;		None
 27376 ;; Auto vars:     Size  Location     Type
 27377 ;;  c               1  159[BANK5 ] unsigned char 
 27378 ;; Return value:  Size  Location     Type
 27379 ;;                  2    0[BANK7 ] int 
 27380 ;; Registers used:
 27381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27382 ;; Tracked objects:
 27383 ;;		On entry : 0/0
 27384 ;;		On exit  : 0/0
 27385 ;;		Unchanged: 0/0
 27386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27387 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27389 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27390 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27391 ;;Total ram usage:        5 bytes
 27392 ;; Hardware stack levels used: 1
 27393 ;; Hardware stack levels required when called: 1
 27394 ;; This function calls:
 27395 ;;		Nothing
 27396 ;; This function is called by:
 27397 ;;		_unimon_console
 27398 ;;		_bus_master_operation
 27399 ;; This function uses a non-reentrant model
 27400 ;;
 27401                           
 27402                           	psect	text68
 27403   01F54C                     __ptext68:
 27404                           	callstack 0
 27405   01F54C                     _u_getch:
 27406                           	callstack 120
 27407   01F54C                     
 27408                           ;../src/boards/w65_cmn.c: 152:  char c;;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 27409   01F54C  EFB6  F0FA         	goto	l23037
 27410   01F550                     l23031:
 27411                           
 27412                           ; BSR set to: 7
 27413                           ;../src/boards/w65_cmn.c: 155:   if (nmi_sig) return(0);
 27414   01F550  51CD               	movf	_nmi_sig& (0+255),w,b
 27415   01F552  B4D8               	btfsc	status,2,c
 27416   01F554  EFAE  F0FA         	goto	u31881
 27417   01F558  EFB0  F0FA         	goto	u31880
 27418   01F55C                     u31881:
 27419   01F55C  EFB6  F0FA         	goto	l23037
 27420   01F560                     u31880:
 27421   01F560                     
 27422                           ; BSR set to: 7
 27423   01F560  0E00               	movlw	0
 27424   01F562  6F01               	movwf	(?_u_getch+1)& (0+255),b
 27425   01F564  0E00               	movlw	0
 27426   01F566  6F00               	movwf	?_u_getch& (0+255),b
 27427   01F568  EFDC  F0FA         	goto	l326
 27428   01F56C                     l23037:
 27429                           
 27430                           ;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 27431   01F56C  0107               	movlb	7	; () banked
 27432   01F56E  51C1               	movf	_rx_cnt& (0+255),w,b
 27433   01F570  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 27434   01F572  B4D8               	btfsc	status,2,c
 27435   01F574  EFBE  F0FA         	goto	u31891
 27436   01F578  EFC0  F0FA         	goto	u31890
 27437   01F57C                     u31891:
 27438   01F57C  EFA8  F0FA         	goto	l23031
 27439   01F580                     u31890:
 27440   01F580                     
 27441                           ; BSR set to: 7
 27442                           ;../src/boards/w65_cmn.c: 157:  U3RXIE = 0;
 27443   01F580  90A7               	bcf	1191,0,c	;volatile
 27444   01F582                     
 27445                           ; BSR set to: 7
 27446                           ;../src/boards/w65_cmn.c: 158:  c = rx_buf[rx_rp];
 27447   01F582  0E00               	movlw	low _rx_buf
 27448   01F584  25C3               	addwf	_rx_rp& (0+255),w,b
 27449   01F586  6ED9               	movwf	fsr2l,c
 27450   01F588  0E0B               	movlw	high _rx_buf
 27451   01F58A  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27452   01F58C  6EDA               	movwf	fsr2h,c
 27453   01F58E  50DF               	movf	indf2,w,c
 27454   01F590  0105               	movlb	5	; () banked
 27455   01F592  6FFF               	movwf	u_getch@c& (0+255),b
 27456   01F594                     
 27457                           ; BSR set to: 5
 27458                           ;../src/boards/w65_cmn.c: 159:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 27459   01F594  0E01               	movlw	1
 27460   01F596  0107               	movlb	7	; () banked
 27461   01F598  25C3               	addwf	_rx_rp& (0+255),w,b
 27462   01F59A  6F02               	movwf	??_u_getch& (0+255),b
 27463   01F59C  0E00               	movlw	0
 27464   01F59E  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27465   01F5A0  6F03               	movwf	(??_u_getch+1)& (0+255),b
 27466   01F5A2  0E7F               	movlw	127
 27467   01F5A4  1502               	andwf	??_u_getch& (0+255),w,b
 27468   01F5A6  6FC3               	movwf	_rx_rp& (0+255),b
 27469   01F5A8  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 27470   01F5AA                     
 27471                           ; BSR set to: 7
 27472                           ;../src/boards/w65_cmn.c: 160:  rx_cnt--;
 27473   01F5AA  07C1               	decf	_rx_cnt& (0+255),f,b
 27474   01F5AC  A0D8               	btfss	status,0,c
 27475   01F5AE  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 27476   01F5B0                     
 27477                           ; BSR set to: 7
 27478                           ;../src/boards/w65_cmn.c: 161:  U3RXIE = 1;
 27479   01F5B0  80A7               	bsf	1191,0,c	;volatile
 27480   01F5B2                     
 27481                           ; BSR set to: 7
 27482                           ;../src/boards/w65_cmn.c: 162:     return c;
 27483   01F5B2  C5FF  F700         	movff	u_getch@c,?_u_getch
 27484   01F5B6  6B01               	clrf	(?_u_getch+1)& (0+255),b
 27485   01F5B8                     l326:
 27486                           
 27487                           ; BSR set to: 7
 27488   01F5B8  0012               	return		;funcret
 27489   01F5BA                     __end_of_u_getch:
 27490                           	callstack 0
 27491                           
 27492 ;; *************** function _get_str *****************
 27493 ;; Defined at:
 27494 ;;		line 165 in file "../src/boards/w65_cmn.c"
 27495 ;; Parameters:    Size  Location     Type
 27496 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 27497 ;;		 -> tmp_buf(512), 
 27498 ;;  cnt             1    2[BANK7 ] unsigned char 
 27499 ;; Auto vars:     Size  Location     Type
 27500 ;;  i               2    7[BANK7 ] unsigned int 
 27501 ;;  c               2    5[BANK7 ] unsigned int 
 27502 ;; Return value:  Size  Location     Type
 27503 ;;                  2    0[BANK7 ] unsigned int 
 27504 ;; Registers used:
 27505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27506 ;; Tracked objects:
 27507 ;;		On entry : 0/0
 27508 ;;		On exit  : 0/0
 27509 ;;		Unchanged: 0/0
 27510 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27511 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27512 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27513 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27514 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27515 ;;Total ram usage:        9 bytes
 27516 ;; Hardware stack levels used: 1
 27517 ;; Hardware stack levels required when called: 1
 27518 ;; This function calls:
 27519 ;;		Nothing
 27520 ;; This function is called by:
 27521 ;;		_unimon_console
 27522 ;;		_bus_master_operation
 27523 ;; This function uses a non-reentrant model
 27524 ;;
 27525                           
 27526                           	psect	text69
 27527   01EE12                     __ptext69:
 27528                           	callstack 0
 27529   01EE12                     _get_str:
 27530                           	callstack 120
 27531   01EE12                     
 27532                           ;../src/boards/w65_cmn.c: 166:  unsigned int c, i;;../src/boards/w65_cmn.c: 168:  U3RXIE
      +                           = 0;
 27533   01EE12  90A7               	bcf	1191,0,c	;volatile
 27534   01EE14                     
 27535                           ;../src/boards/w65_cmn.c: 169:  i = ( (unsigned int)cnt > rx_cnt ) ? rx_cnt : (unsigned 
      +                          int)cnt;
 27536   01EE14  0107               	movlb	7	; () banked
 27537   01EE16  5102               	movf	get_str@cnt& (0+255),w,b
 27538   01EE18  6F03               	movwf	??_get_str& (0+255),b
 27539   01EE1A  6B04               	clrf	(??_get_str+1)& (0+255),b
 27540   01EE1C  5103               	movf	??_get_str& (0+255),w,b
 27541   01EE1E  5DC1               	subwf	_rx_cnt& (0+255),w,b
 27542   01EE20  5104               	movf	(??_get_str+1)& (0+255),w,b
 27543   01EE22  59C2               	subwfb	(_rx_cnt+1)& (0+255),w,b
 27544   01EE24  A0D8               	btfss	status,0,c
 27545   01EE26  EF17  F0F7         	goto	u31901
 27546   01EE2A  EF19  F0F7         	goto	u31900
 27547   01EE2E                     u31901:
 27548   01EE2E  EF1E  F0F7         	goto	l331
 27549   01EE32                     u31900:
 27550   01EE32                     
 27551                           ; BSR set to: 7
 27552   01EE32  C702  F707         	movff	get_str@cnt,get_str@i
 27553   01EE36  6B08               	clrf	(get_str@i+1)& (0+255),b
 27554   01EE38  EF22  F0F7         	goto	l333
 27555   01EE3C                     l331:
 27556                           
 27557                           ; BSR set to: 7
 27558   01EE3C  C7C1  F707         	movff	_rx_cnt,get_str@i
 27559   01EE40  C7C2  F708         	movff	_rx_cnt+1,get_str@i+1
 27560   01EE44                     l333:
 27561                           
 27562                           ; BSR set to: 7
 27563                           ;../src/boards/w65_cmn.c: 170:  c = i;
 27564   01EE44  C707  F705         	movff	get_str@i,get_str@c
 27565   01EE48  C708  F706         	movff	get_str@i+1,get_str@c+1
 27566                           
 27567                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 27568   01EE4C  EF43  F0F7         	goto	l23065
 27569   01EE50                     l23057:
 27570                           
 27571                           ; BSR set to: 7
 27572                           ;../src/boards/w65_cmn.c: 172:   *buf++ = rx_buf[rx_rp];
 27573   01EE50  0E00               	movlw	low _rx_buf
 27574   01EE52  25C3               	addwf	_rx_rp& (0+255),w,b
 27575   01EE54  6ED9               	movwf	fsr2l,c
 27576   01EE56  0E0B               	movlw	high _rx_buf
 27577   01EE58  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27578   01EE5A  6EDA               	movwf	fsr2h,c
 27579   01EE5C  C700  F4E1         	movff	get_str@buf,fsr1l
 27580   01EE60  C701  F4E2         	movff	get_str@buf+1,fsr1h
 27581   01EE64  C4DF F4E7          	movff	indf2,indf1
 27582   01EE68                     
 27583                           ; BSR set to: 7
 27584   01EE68  4B00               	infsnz	get_str@buf& (0+255),f,b
 27585   01EE6A  2B01               	incf	(get_str@buf+1)& (0+255),f,b
 27586   01EE6C                     
 27587                           ; BSR set to: 7
 27588                           ;../src/boards/w65_cmn.c: 173:   rx_rp = (rx_rp + 1) & ( 128 - 1);
 27589   01EE6C  0E01               	movlw	1
 27590   01EE6E  25C3               	addwf	_rx_rp& (0+255),w,b
 27591   01EE70  6F03               	movwf	??_get_str& (0+255),b
 27592   01EE72  0E00               	movlw	0
 27593   01EE74  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27594   01EE76  6F04               	movwf	(??_get_str+1)& (0+255),b
 27595   01EE78  0E7F               	movlw	127
 27596   01EE7A  1503               	andwf	??_get_str& (0+255),w,b
 27597   01EE7C  6FC3               	movwf	_rx_rp& (0+255),b
 27598   01EE7E  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 27599   01EE80                     
 27600                           ; BSR set to: 7
 27601                           ;../src/boards/w65_cmn.c: 174:   rx_cnt--;
 27602   01EE80  07C1               	decf	_rx_cnt& (0+255),f,b
 27603   01EE82  A0D8               	btfss	status,0,c
 27604   01EE84  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 27605   01EE86                     l23065:
 27606                           
 27607                           ; BSR set to: 7
 27608                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 27609   01EE86  0707               	decf	get_str@i& (0+255),f,b
 27610   01EE88  A0D8               	btfss	status,0,c
 27611   01EE8A  0708               	decf	(get_str@i+1)& (0+255),f,b
 27612   01EE8C  2907               	incf	get_str@i& (0+255),w,b
 27613   01EE8E  E106               	bnz	u31911
 27614   01EE90  2908               	incf	(get_str@i+1)& (0+255),w,b
 27615   01EE92  A4D8               	btfss	status,2,c
 27616   01EE94  EF4E  F0F7         	goto	u31911
 27617   01EE98  EF50  F0F7         	goto	u31910
 27618   01EE9C                     u31911:
 27619   01EE9C  EF28  F0F7         	goto	l23057
 27620   01EEA0                     u31910:
 27621   01EEA0                     
 27622                           ; BSR set to: 7
 27623                           ;../src/boards/w65_cmn.c: 176:  U3RXIE = 1;
 27624   01EEA0  80A7               	bsf	1191,0,c	;volatile
 27625                           
 27626                           ;../src/boards/w65_cmn.c: 177:  return c;
 27627   01EEA2  C705  F700         	movff	get_str@c,?_get_str
 27628   01EEA6  C706  F701         	movff	get_str@c+1,?_get_str+1
 27629   01EEAA                     
 27630                           ; BSR set to: 7
 27631   01EEAA  0012               	return		;funcret
 27632   01EEAC                     __end_of_get_str:
 27633                           	callstack 0
 27634                           
 27635 ;; *************** function _str_inf *****************
 27636 ;; Defined at:
 27637 ;;		line 986 in file "../src/w65_main.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 27640 ;;		 -> tmp_buf(512), 
 27641 ;;  cnt             1    2[BANK7 ] unsigned char 
 27642 ;; Auto vars:     Size  Location     Type
 27643 ;;  i               2    8[BANK7 ] unsigned int 
 27644 ;;  c               2    5[BANK7 ] unsigned int 
 27645 ;;  a               1    7[BANK7 ] unsigned char 
 27646 ;; Return value:  Size  Location     Type
 27647 ;;                  2    0[BANK7 ] unsigned int 
 27648 ;; Registers used:
 27649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27650 ;; Tracked objects:
 27651 ;;		On entry : 0/0
 27652 ;;		On exit  : 0/0
 27653 ;;		Unchanged: 0/0
 27654 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27655 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27656 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27657 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27658 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27659 ;;Total ram usage:       10 bytes
 27660 ;; Hardware stack levels used: 1
 27661 ;; Hardware stack levels required when called: 20
 27662 ;; This function calls:
 27663 ;;		_f_close
 27664 ;;		_f_open
 27665 ;;		_f_read
 27666 ;;		_printf
 27667 ;; This function is called by:
 27668 ;;		_unimon_console
 27669 ;;		_bus_master_operation
 27670 ;; This function uses a non-reentrant model
 27671 ;;
 27672                           
 27673                           	psect	text70
 27674   01A8E0                     __ptext70:
 27675                           	callstack 0
 27676   01A8E0                     _str_inf:
 27677                           	callstack 101
 27678   01A8E0                     
 27679                           ;../src/w65_main.c: 987:  unsigned int c, i;;../src/w65_main.c: 988:  char a;;../src/w65
      +                          _main.c: 990:  if ( fin_cnt == 0xffff ) {
 27680   01A8E0  0107               	movlb	7	; () banked
 27681   01A8E2  29E3               	incf	_fin_cnt& (0+255),w,b
 27682   01A8E4  E106               	bnz	u32401
 27683   01A8E6  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 27684   01A8E8  A4D8               	btfss	status,2,c
 27685   01A8EA  EF79  F0D4         	goto	u32401
 27686   01A8EE  EF7B  F0D4         	goto	u32400
 27687   01A8F2                     u32401:
 27688   01A8F2  EFB2  F0D4         	goto	l23385
 27689   01A8F6                     u32400:
 27690   01A8F6                     
 27691                           ; BSR set to: 7
 27692                           ;../src/w65_main.c: 992:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 27693   01A8F6  0EB4               	movlw	low _in_fl
 27694   01A8F8  0106               	movlb	6	; () banked
 27695   01A8FA  6FAF               	movwf	f_open@fp& (0+255),b
 27696   01A8FC  0E0D               	movlw	high _in_fl
 27697   01A8FE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 27698   01A900  0EC2               	movlw	low _fin_name
 27699   01A902  6FB1               	movwf	f_open@path& (0+255),b
 27700   01A904  0E08               	movlw	high _fin_name
 27701   01A906  6FB2               	movwf	(f_open@path+1)& (0+255),b
 27702   01A908  0E01               	movlw	1
 27703   01A90A  6FB3               	movwf	f_open@mode& (0+255),b
 27704   01A90C  ECDB  F092         	call	_f_open	;wreg free
 27705   01A910  0900               	iorlw	0
 27706   01A912  B4D8               	btfsc	status,2,c
 27707   01A914  EF8E  F0D4         	goto	u32411
 27708   01A918  EF90  F0D4         	goto	u32410
 27709   01A91C                     u32411:
 27710   01A91C  EFA3  F0D4         	goto	l23381
 27711   01A920                     u32410:
 27712   01A920                     
 27713                           ;../src/w65_main.c: 993:    printf("File Open Error. %s\r\n", &fin_name[0]);
 27714   01A920  0E04               	movlw	low STR_162
 27715   01A922  0105               	movlb	5	; () banked
 27716   01A924  6FAD               	movwf	printf@fmt& (0+255),b
 27717   01A926  0EFC               	movlw	high STR_162
 27718   01A928  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27719   01A92A  0EC2               	movlw	low _fin_name
 27720   01A92C  6FAF               	movwf	(?_printf+2)& (0+255),b
 27721   01A92E  0E08               	movlw	high _fin_name
 27722   01A930  6FB0               	movwf	(?_printf+3)& (0+255),b
 27723   01A932  ECDA  F0FF         	call	_printf	;wreg free
 27724   01A936                     l23375:
 27725                           
 27726                           ;../src/w65_main.c: 994:    cin_no = 0;
 27727   01A936  0107               	movlb	7	; () banked
 27728   01A938  6BCA               	clrf	_cin_no& (0+255),b
 27729   01A93A                     
 27730                           ; BSR set to: 7
 27731                           ;../src/w65_main.c: 995:    return 0;
 27732   01A93A  0E00               	movlw	0
 27733   01A93C  6F01               	movwf	(?_str_inf+1)& (0+255),b
 27734   01A93E  0E00               	movlw	0
 27735   01A940  6F00               	movwf	?_str_inf& (0+255),b
 27736   01A942  EF52  F0D5         	goto	l1374
 27737   01A946                     l23381:
 27738                           
 27739                           ;../src/w65_main.c: 997:   fin_cnt=0;
 27740   01A946  0E00               	movlw	0
 27741   01A948  0107               	movlb	7	; () banked
 27742   01A94A  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 27743   01A94C  0E00               	movlw	0
 27744   01A94E  6FE3               	movwf	_fin_cnt& (0+255),b
 27745                           
 27746                           ;../src/w65_main.c: 998:   frd_ptr = 0;
 27747   01A950  0E00               	movlw	0
 27748   01A952  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27749   01A954  0E00               	movlw	0
 27750   01A956  6FBD               	movwf	_frd_ptr& (0+255),b
 27751   01A958                     
 27752                           ; BSR set to: 7
 27753                           ;../src/w65_main.c: 999:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 27754   01A958  0063  F6F8  F7BB   	movff	_in_fl+10,_fin_size
 27755   01A95E  0063  F6FC  F7BC   	movff	_in_fl+11,_fin_size+1
 27756   01A964                     l23385:
 27757                           
 27758                           ; BSR set to: 7
 27759                           ;../src/w65_main.c: 1002:  if ( !fin_cnt ) {
 27760   01A964  51E3               	movf	_fin_cnt& (0+255),w,b
 27761   01A966  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 27762   01A968  A4D8               	btfss	status,2,c
 27763   01A96A  EFB9  F0D4         	goto	u32421
 27764   01A96E  EFBB  F0D4         	goto	u32420
 27765   01A972                     u32421:
 27766   01A972  EFEA  F0D4         	goto	l23399
 27767   01A976                     u32420:
 27768   01A976                     
 27769                           ; BSR set to: 7
 27770                           ;../src/w65_main.c: 1003:   frd_ptr = 0;
 27771   01A976  0E00               	movlw	0
 27772   01A978  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27773   01A97A  0E00               	movlw	0
 27774   01A97C  6FBD               	movwf	_frd_ptr& (0+255),b
 27775   01A97E                     
 27776                           ; BSR set to: 7
 27777                           ;../src/w65_main.c: 1004:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt
      +                           ) ) {
 27778   01A97E  0EB4               	movlw	low _in_fl
 27779   01A980  0106               	movlb	6	; () banked
 27780   01A982  6F3E               	movwf	f_read@fp& (0+255),b
 27781   01A984  0E0D               	movlw	high _in_fl
 27782   01A986  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 27783   01A988  0EF8               	movlw	low _cin_file
 27784   01A98A  6F40               	movwf	f_read@buff& (0+255),b
 27785   01A98C  0E11               	movlw	high _cin_file
 27786   01A98E  6F41               	movwf	(f_read@buff+1)& (0+255),b
 27787   01A990  0E02               	movlw	2
 27788   01A992  6F43               	movwf	(f_read@btr+1)& (0+255),b
 27789   01A994  0E00               	movlw	0
 27790   01A996  6F42               	movwf	f_read@btr& (0+255),b
 27791   01A998  0EE3               	movlw	low _fin_cnt
 27792   01A99A  6F44               	movwf	f_read@br& (0+255),b
 27793   01A99C  0E07               	movlw	high _fin_cnt
 27794   01A99E  6F45               	movwf	(f_read@br+1)& (0+255),b
 27795   01A9A0  EC9B  F096         	call	_f_read	;wreg free
 27796   01A9A4  0900               	iorlw	0
 27797   01A9A6  B4D8               	btfsc	status,2,c
 27798   01A9A8  EFD8  F0D4         	goto	u32431
 27799   01A9AC  EFDA  F0D4         	goto	u32430
 27800   01A9B0                     u32431:
 27801   01A9B0  EFEA  F0D4         	goto	l23399
 27802   01A9B4                     u32430:
 27803   01A9B4                     
 27804                           ;../src/w65_main.c: 1005:    printf("File read error.\r\n");
 27805   01A9B4  0E0F               	movlw	low STR_163
 27806   01A9B6  0105               	movlb	5	; () banked
 27807   01A9B8  6FAD               	movwf	printf@fmt& (0+255),b
 27808   01A9BA  0EFD               	movlw	high STR_163
 27809   01A9BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27810   01A9BE  ECDA  F0FF         	call	_printf	;wreg free
 27811                           
 27812                           ;../src/w65_main.c: 1006:    f_close( &in_fl );
 27813   01A9C2  0EB4               	movlw	low _in_fl
 27814   01A9C4  0106               	movlb	6	; () banked
 27815   01A9C6  6F2F               	movwf	f_close@fp& (0+255),b
 27816   01A9C8  0E0D               	movlw	high _in_fl
 27817   01A9CA  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27818   01A9CC  ECDB  F0FB         	call	_f_close	;wreg free
 27819   01A9D0  EF9B  F0D4         	goto	l23375
 27820   01A9D4                     l23399:
 27821                           
 27822                           ;../src/w65_main.c: 1012:  i = ( (unsigned int)cnt > fin_cnt ) ? fin_cnt : (unsigned int
      +                          )cnt;
 27823   01A9D4  0107               	movlb	7	; () banked
 27824   01A9D6  5102               	movf	str_inf@cnt& (0+255),w,b
 27825   01A9D8  6F03               	movwf	??_str_inf& (0+255),b
 27826   01A9DA  6B04               	clrf	(??_str_inf+1)& (0+255),b
 27827   01A9DC  5103               	movf	??_str_inf& (0+255),w,b
 27828   01A9DE  5DE3               	subwf	_fin_cnt& (0+255),w,b
 27829   01A9E0  5104               	movf	(??_str_inf+1)& (0+255),w,b
 27830   01A9E2  59E4               	subwfb	(_fin_cnt+1)& (0+255),w,b
 27831   01A9E4  A0D8               	btfss	status,0,c
 27832   01A9E6  EFF7  F0D4         	goto	u32441
 27833   01A9EA  EFF9  F0D4         	goto	u32440
 27834   01A9EE                     u32441:
 27835   01A9EE  EFFE  F0D4         	goto	l1378
 27836   01A9F2                     u32440:
 27837   01A9F2                     
 27838                           ; BSR set to: 7
 27839   01A9F2  C702  F708         	movff	str_inf@cnt,str_inf@i
 27840   01A9F6  6B09               	clrf	(str_inf@i+1)& (0+255),b
 27841   01A9F8  EF02  F0D5         	goto	l23403
 27842   01A9FC                     l1378:
 27843                           
 27844                           ; BSR set to: 7
 27845   01A9FC  C7E3  F708         	movff	_fin_cnt,str_inf@i
 27846   01AA00  C7E4  F709         	movff	_fin_cnt+1,str_inf@i+1
 27847   01AA04                     l23403:
 27848                           
 27849                           ; BSR set to: 7
 27850                           ;../src/w65_main.c: 1014:  fin_cnt -= i;
 27851   01AA04  5108               	movf	str_inf@i& (0+255),w,b
 27852   01AA06  5FE3               	subwf	_fin_cnt& (0+255),f,b
 27853   01AA08  5109               	movf	(str_inf@i+1)& (0+255),w,b
 27854   01AA0A  5BE4               	subwfb	(_fin_cnt+1)& (0+255),f,b
 27855                           
 27856                           ;../src/w65_main.c: 1015:  fin_size -= i;
 27857   01AA0C  5108               	movf	str_inf@i& (0+255),w,b
 27858   01AA0E  5FBB               	subwf	_fin_size& (0+255),f,b
 27859   01AA10  5109               	movf	(str_inf@i+1)& (0+255),w,b
 27860   01AA12  5BBC               	subwfb	(_fin_size+1)& (0+255),f,b
 27861   01AA14                     
 27862                           ; BSR set to: 7
 27863                           ;../src/w65_main.c: 1016:  c = i;
 27864   01AA14  C708  F705         	movff	str_inf@i,str_inf@c
 27865   01AA18  C709  F706         	movff	str_inf@i+1,str_inf@c+1
 27866                           
 27867                           ;../src/w65_main.c: 1017:  while(i--) {
 27868   01AA1C  EF2F  F0D5         	goto	l23421
 27869   01AA20                     l23407:
 27870                           
 27871                           ; BSR set to: 7
 27872                           ;../src/w65_main.c: 1018:   a = cin_file[frd_ptr++];
 27873   01AA20  0EF8               	movlw	low _cin_file
 27874   01AA22  25BD               	addwf	_frd_ptr& (0+255),w,b
 27875   01AA24  6ED9               	movwf	fsr2l,c
 27876   01AA26  0E11               	movlw	high _cin_file
 27877   01AA28  21BE               	addwfc	(_frd_ptr+1)& (0+255),w,b
 27878   01AA2A  6EDA               	movwf	fsr2h,c
 27879   01AA2C  50DF               	movf	indf2,w,c
 27880   01AA2E  6F07               	movwf	str_inf@a& (0+255),b
 27881   01AA30                     
 27882                           ; BSR set to: 7
 27883   01AA30  4BBD               	infsnz	_frd_ptr& (0+255),f,b
 27884   01AA32  2BBE               	incf	(_frd_ptr+1)& (0+255),f,b
 27885   01AA34                     
 27886                           ; BSR set to: 7
 27887                           ;../src/w65_main.c: 1019:   if ( a < 0x0d ) {
 27888   01AA34  0E0D               	movlw	13
 27889   01AA36  6107               	cpfslt	str_inf@a& (0+255),b
 27890   01AA38  EF20  F0D5         	goto	u32451
 27891   01AA3C  EF22  F0D5         	goto	u32450
 27892   01AA40                     u32451:
 27893   01AA40  EF27  F0D5         	goto	l23417
 27894   01AA44                     u32450:
 27895   01AA44                     
 27896                           ; BSR set to: 7
 27897                           ;../src/w65_main.c: 1020:    c--;
 27898   01AA44  0705               	decf	str_inf@c& (0+255),f,b
 27899   01AA46  A0D8               	btfss	status,0,c
 27900   01AA48  0706               	decf	(str_inf@c+1)& (0+255),f,b
 27901                           
 27902                           ;../src/w65_main.c: 1021:    continue;
 27903   01AA4A  EF2F  F0D5         	goto	l23421
 27904   01AA4E                     l23417:
 27905                           
 27906                           ; BSR set to: 7
 27907   01AA4E  C700  F4D9         	movff	str_inf@buf,fsr2l
 27908   01AA52  C701  F4DA         	movff	str_inf@buf+1,fsr2h
 27909   01AA56  C707  F4DF         	movff	str_inf@a,indf2
 27910   01AA5A                     
 27911                           ; BSR set to: 7
 27912   01AA5A  4B00               	infsnz	str_inf@buf& (0+255),f,b
 27913   01AA5C  2B01               	incf	(str_inf@buf+1)& (0+255),f,b
 27914   01AA5E                     l23421:
 27915                           
 27916                           ; BSR set to: 7
 27917                           ;../src/w65_main.c: 1017:  while(i--) {
 27918   01AA5E  0708               	decf	str_inf@i& (0+255),f,b
 27919   01AA60  A0D8               	btfss	status,0,c
 27920   01AA62  0709               	decf	(str_inf@i+1)& (0+255),f,b
 27921   01AA64  2908               	incf	str_inf@i& (0+255),w,b
 27922   01AA66  E106               	bnz	u32461
 27923   01AA68  2909               	incf	(str_inf@i+1)& (0+255),w,b
 27924   01AA6A  A4D8               	btfss	status,2,c
 27925   01AA6C  EF3A  F0D5         	goto	u32461
 27926   01AA70  EF3C  F0D5         	goto	u32460
 27927   01AA74                     u32461:
 27928   01AA74  EF10  F0D5         	goto	l23407
 27929   01AA78                     u32460:
 27930   01AA78                     
 27931                           ; BSR set to: 7
 27932                           ;../src/w65_main.c: 1026:  if ( !fin_size ) {
 27933   01AA78  51BB               	movf	_fin_size& (0+255),w,b
 27934   01AA7A  11BC               	iorwf	(_fin_size+1)& (0+255),w,b
 27935   01AA7C  A4D8               	btfss	status,2,c
 27936   01AA7E  EF43  F0D5         	goto	u32471
 27937   01AA82  EF45  F0D5         	goto	u32470
 27938   01AA86                     u32471:
 27939   01AA86  EF4E  F0D5         	goto	l23429
 27940   01AA8A                     u32470:
 27941   01AA8A                     
 27942                           ; BSR set to: 7
 27943                           ;../src/w65_main.c: 1027:   f_close( &in_fl );
 27944   01AA8A  0EB4               	movlw	low _in_fl
 27945   01AA8C  0106               	movlb	6	; () banked
 27946   01AA8E  6F2F               	movwf	f_close@fp& (0+255),b
 27947   01AA90  0E0D               	movlw	high _in_fl
 27948   01AA92  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27949   01AA94  ECDB  F0FB         	call	_f_close	;wreg free
 27950   01AA98                     
 27951                           ;../src/w65_main.c: 1028:   cin_no = 0;
 27952   01AA98  0107               	movlb	7	; () banked
 27953   01AA9A  6BCA               	clrf	_cin_no& (0+255),b
 27954   01AA9C                     l23429:
 27955                           
 27956                           ; BSR set to: 7
 27957                           ;../src/w65_main.c: 1031:  return c;
 27958   01AA9C  C705  F700         	movff	str_inf@c,?_str_inf
 27959   01AAA0  C706  F701         	movff	str_inf@c+1,?_str_inf+1
 27960   01AAA4                     l1374:
 27961                           
 27962                           ; BSR set to: 7
 27963   01AAA4  0012               	return		;funcret
 27964   01AAA6                     __end_of_str_inf:
 27965                           	callstack 0
 27966                           
 27967 ;; *************** function _read_sram *****************
 27968 ;; Defined at:
 27969 ;;		line 382 in file "../src/boards/w65_cmn.c"
 27970 ;; Parameters:    Size  Location     Type
 27971 ;;  addr            4    3[COMRAM] unsigned long 
 27972 ;;  buf             2    7[COMRAM] PTR unsigned char 
 27973 ;;		 -> disk_buf(128), req_tbl(13), tmp_buf(512), 
 27974 ;;  len             2    9[COMRAM] unsigned int 
 27975 ;; Auto vars:     Size  Location     Type
 27976 ;;  ab              4   13[COMRAM] struct address_bus_u
 27977 ;;  i               2   11[COMRAM] unsigned int 
 27978 ;; Return value:  Size  Location     Type
 27979 ;;                  1    wreg      void 
 27980 ;; Registers used:
 27981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27982 ;; Tracked objects:
 27983 ;;		On entry : 0/0
 27984 ;;		On exit  : 0/0
 27985 ;;		Unchanged: 0/0
 27986 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27987 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27988 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27990 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27991 ;;Total ram usage:       14 bytes
 27992 ;; Hardware stack levels used: 1
 27993 ;; Hardware stack levels required when called: 1
 27994 ;; This function calls:
 27995 ;;		Nothing
 27996 ;; This function is called by:
 27997 ;;		_reset_cpu
 27998 ;;		_write_sector
 27999 ;;		_unimon_console
 28000 ;;		_bus_master_operation
 28001 ;;		_mem_init
 28002 ;;		_print_reg
 28003 ;;		_mem_dump
 28004 ;; This function uses a non-reentrant model
 28005 ;;
 28006                           
 28007                           	psect	text71
 28008   01E418                     __ptext71:
 28009                           	callstack 0
 28010   01E418                     _read_sram:
 28011                           	callstack 120
 28012   01E418                     
 28013                           ;../src/boards/w65_cmn.c: 382: void read_sram(uint32_t addr, uint8_t *buf, unsigned int 
      +                          len);../src/boards/w65_cmn.c: 383: {;../src/boards/w65_cmn.c: 384:     union address_bus
      +                          _u ab;;../src/boards/w65_cmn.c: 385:     unsigned int i;;../src/boards/w65_cmn.c: 387:  
      +                          ab.w = addr;
 28014   01E418  C504  F50E         	movff	read_sram@addr,read_sram@ab
 28015   01E41C  C505  F50F         	movff	read_sram@addr+1,read_sram@ab+1
 28016   01E420  C506  F510         	movff	read_sram@addr+2,read_sram@ab+2
 28017   01E424  C507  F511         	movff	read_sram@addr+3,read_sram@ab+3
 28018   01E428                     
 28019                           ;../src/boards/w65_cmn.c: 388:  i = 0;
 28020   01E428  0E00               	movlw	0
 28021   01E42A  6E0D               	movwf	(read_sram@i+1)^(0+1280),c
 28022   01E42C  0E00               	movlw	0
 28023   01E42E  6E0C               	movwf	read_sram@i^(0+1280),c
 28024                           
 28025                           ;../src/boards/w65_cmn.c: 390:  if (cpu_flg) {
 28026   01E430  0107               	movlb	7	; () banked
 28027   01E432  51E5               	movf	_cpu_flg& (0+255),w,b
 28028   01E434  B4D8               	btfsc	status,2,c
 28029   01E436  EF1F  F0F2         	goto	u31971
 28030   01E43A  EF21  F0F2         	goto	u31970
 28031   01E43E                     u31971:
 28032   01E43E  EF5E  F0F2         	goto	l23115
 28033   01E442                     u31970:
 28034   01E442  EF3D  F0F2         	goto	l23107
 28035   01E446                     l372:
 28036                           
 28037                           ;../src/boards/w65_cmn.c: 393:    TRISB = 0x00;
 28038   01E446  6AC7               	clrf	199,c	;volatile
 28039                           
 28040                           ;../src/boards/w65_cmn.c: 394:    LATC = ab.ll;
 28041   01E448  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 28042                           
 28043                           ;../src/boards/w65_cmn.c: 395:    LATD = ab.lh;
 28044   01E44C  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 28045                           
 28046                           ;../src/boards/w65_cmn.c: 397:       LATB = ab.hl;
 28047   01E450  C510  F4BF         	movff	read_sram@ab+2,1215	;volatile
 28048                           
 28049                           ;../src/boards/w65_cmn.c: 398:    LATA1 = 1;
 28050   01E454  82BE               	bsf	1214,1,c	;volatile
 28051                           
 28052                           ;../src/boards/w65_cmn.c: 399:    LATA1 = 0;
 28053   01E456  92BE               	bcf	1214,1,c	;volatile
 28054                           
 28055                           ;../src/boards/w65_cmn.c: 401:    TRISB = 0xFF;
 28056   01E458  68C7               	setf	199,c	;volatile
 28057   01E45A                     
 28058                           ;../src/boards/w65_cmn.c: 402:    ab.w++;
 28059   01E45A  0E01               	movlw	1
 28060   01E45C  260E               	addwf	read_sram@ab^(0+1280),f,c
 28061   01E45E  0E00               	movlw	0
 28062   01E460  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 28063   01E462  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 28064   01E464  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 28065   01E466                     
 28066                           ;../src/boards/w65_cmn.c: 403:    ((uint8_t*)buf)[i] = PORTB;
 28067   01E466  500C               	movf	read_sram@i^(0+1280),w,c
 28068   01E468  2408               	addwf	read_sram@buf^(0+1280),w,c
 28069   01E46A  6ED9               	movwf	fsr2l,c
 28070   01E46C  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 28071   01E46E  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 28072   01E470  6EDA               	movwf	fsr2h,c
 28073   01E472  C4CF F4DF          	movff	1231,indf2	;volatile
 28074   01E476                     
 28075                           ;../src/boards/w65_cmn.c: 404:    i++;
 28076   01E476  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 28077   01E478  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 28078   01E47A                     l23107:
 28079                           
 28080                           ;../src/boards/w65_cmn.c: 392:   while( i < len ) {
 28081   01E47A  500A               	movf	read_sram@len^(0+1280),w,c
 28082   01E47C  5C0C               	subwf	read_sram@i^(0+1280),w,c
 28083   01E47E  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 28084   01E480  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 28085   01E482  A0D8               	btfss	status,0,c
 28086   01E484  EF46  F0F2         	goto	u31981
 28087   01E488  EF48  F0F2         	goto	u31980
 28088   01E48C                     u31981:
 28089   01E48C  EF23  F0F2         	goto	l372
 28090   01E490                     u31980:
 28091   01E490  EF69  F0F2         	goto	l378
 28092   01E494                     l376:
 28093                           
 28094                           ;../src/boards/w65_cmn.c: 410:    LATC = ab.ll;
 28095   01E494  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 28096                           
 28097                           ;../src/boards/w65_cmn.c: 411:    LATD = ab.lh;
 28098   01E498  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 28099   01E49C                     
 28100                           ;../src/boards/w65_cmn.c: 413:    ab.w++;
 28101   01E49C  0E01               	movlw	1
 28102   01E49E  260E               	addwf	read_sram@ab^(0+1280),f,c
 28103   01E4A0  0E00               	movlw	0
 28104   01E4A2  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 28105   01E4A4  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 28106   01E4A6  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 28107   01E4A8                     
 28108                           ;../src/boards/w65_cmn.c: 414:    ((uint8_t*)buf)[i] = PORTB;
 28109   01E4A8  500C               	movf	read_sram@i^(0+1280),w,c
 28110   01E4AA  2408               	addwf	read_sram@buf^(0+1280),w,c
 28111   01E4AC  6ED9               	movwf	fsr2l,c
 28112   01E4AE  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 28113   01E4B0  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 28114   01E4B2  6EDA               	movwf	fsr2h,c
 28115   01E4B4  C4CF F4DF          	movff	1231,indf2	;volatile
 28116   01E4B8                     
 28117                           ;../src/boards/w65_cmn.c: 415:    i++;
 28118   01E4B8  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 28119   01E4BA  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 28120   01E4BC                     l23115:
 28121                           
 28122                           ;../src/boards/w65_cmn.c: 409:   while( i < len ) {
 28123   01E4BC  500A               	movf	read_sram@len^(0+1280),w,c
 28124   01E4BE  5C0C               	subwf	read_sram@i^(0+1280),w,c
 28125   01E4C0  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 28126   01E4C2  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 28127   01E4C4  A0D8               	btfss	status,0,c
 28128   01E4C6  EF67  F0F2         	goto	u31991
 28129   01E4CA  EF69  F0F2         	goto	u31990
 28130   01E4CE                     u31991:
 28131   01E4CE  EF4A  F0F2         	goto	l376
 28132   01E4D2                     u31990:
 28133   01E4D2                     l378:
 28134   01E4D2  0012               	return		;funcret
 28135   01E4D4                     __end_of_read_sram:
 28136                           	callstack 0
 28137                           
 28138 ;; *************** function _f_open *****************
 28139 ;; Defined at:
 28140 ;;		line 3719 in file "../fatfs/ff.c"
 28141 ;; Parameters:    Size  Location     Type
 28142 ;;  fp              2  175[BANK6 ] PTR struct .
 28143 ;;		 -> in_fl(546), rom_fl(546), 
 28144 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 28145 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 28146 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 28147 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 28148 ;;  mode            1  179[BANK6 ] unsigned char 
 28149 ;; Auto vars:     Size  Location     Type
 28150 ;;  dj             40  215[BANK6 ] struct .
 28151 ;;  clst            4  208[BANK6 ] unsigned long 
 28152 ;;  ofs             4  204[BANK6 ] unsigned long 
 28153 ;;  sc              4  200[BANK6 ] unsigned long 
 28154 ;;  cl              4  196[BANK6 ] unsigned long 
 28155 ;;  tm              4  192[BANK6 ] unsigned long 
 28156 ;;  bcs             4  188[BANK6 ] unsigned long 
 28157 ;;  fs              2  212[BANK6 ] PTR struct .
 28158 ;;		 -> fs(564), NULL(0), 
 28159 ;;  res             1  214[BANK6 ] enum E597
 28160 ;; Return value:  Size  Location     Type
 28161 ;;                  1    wreg      enum E17409
 28162 ;; Registers used:
 28163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28164 ;; Tracked objects:
 28165 ;;		On entry : 0/0
 28166 ;;		On exit  : 0/0
 28167 ;;		Unchanged: 0/0
 28168 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28169 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28170 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28171 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28172 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28173 ;;Total ram usage:       80 bytes
 28174 ;; Hardware stack levels used: 1
 28175 ;; Hardware stack levels required when called: 19
 28176 ;; This function calls:
 28177 ;;		_clst2sect
 28178 ;;		_dir_register
 28179 ;;		_disk_read
 28180 ;;		_follow_path
 28181 ;;		_get_fat
 28182 ;;		_get_fattime
 28183 ;;		_ld_clust
 28184 ;;		_ld_dword
 28185 ;;		_memset
 28186 ;;		_mount_volume
 28187 ;;		_move_window
 28188 ;;		_remove_chain
 28189 ;;		_st_clust
 28190 ;;		_st_dword
 28191 ;; This function is called by:
 28192 ;;		_load_program
 28193 ;;		_load_config
 28194 ;;		_scan_files
 28195 ;;		_scan_files1
 28196 ;;		_see_file
 28197 ;;		_in_file
 28198 ;;		_str_inf
 28199 ;; This function uses a non-reentrant model
 28200 ;;
 28201                           
 28202                           	psect	text72
 28203   0125B6                     __ptext72:
 28204                           	callstack 0
 28205   0125B6                     _f_open:
 28206                           	callstack 101
 28207   0125B6                     
 28208                           ;../fatfs/ff.c: 3720:  FIL* fp,;../fatfs/ff.c: 3721:  const TCHAR* path,;../fatfs/ff.c: 
      +                          3722:  BYTE mode;../fatfs/ff.c: 3724: {;../fatfs/ff.c: 3725:  FRESULT res;;../fatfs/ff.c
      +                          : 3726:  DIR dj;;../fatfs/ff.c: 3727:  FATFS *fs;;../fatfs/ff.c: 3729:  DWORD cl, bcs, c
      +                          lst, tm;;../fatfs/ff.c: 3730:  LBA_t sc;;../fatfs/ff.c: 3731:  FSIZE_t ofs;;../fatfs/ff.
      +                          c: 3736:  if (!fp) return FR_INVALID_OBJECT;
 28209   0125B6  0106               	movlb	6	; () banked
 28210   0125B8  51AF               	movf	f_open@fp& (0+255),w,b
 28211   0125BA  11B0               	iorwf	(f_open@fp+1)& (0+255),w,b
 28212   0125BC  A4D8               	btfss	status,2,c
 28213   0125BE  EFE3  F092         	goto	u31531
 28214   0125C2  EFE5  F092         	goto	u31530
 28215   0125C6                     u31531:
 28216   0125C6  EFE8  F092         	goto	l22863
 28217   0125CA                     u31530:
 28218   0125CA                     
 28219                           ; BSR set to: 6
 28220   0125CA  0E09               	movlw	9
 28221   0125CC  EF9A  F096         	goto	l1873
 28222   0125D0                     l22863:
 28223   0125D0                     
 28224                           ; BSR set to: 6
 28225   0125D0  0E3F               	movlw	63
 28226   0125D2  17B3               	andwf	f_open@mode& (0+255),f,b
 28227   0125D4                     
 28228                           ; BSR set to: 6
 28229                           ;../fatfs/ff.c: 3740:  res = mount_volume(&path, &fs, mode);
 28230   0125D4  0EB1               	movlw	low f_open@path
 28231   0125D6  6F81               	movwf	mount_volume@path& (0+255),b
 28232   0125D8  0E06               	movlw	high f_open@path
 28233   0125DA  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 28234   0125DC  0ED4               	movlw	low f_open@fs
 28235   0125DE  6F83               	movwf	mount_volume@rfs& (0+255),b
 28236   0125E0  0E06               	movlw	high f_open@fs
 28237   0125E2  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 28238   0125E4  C6B3  F685         	movff	f_open@mode,mount_volume@mode
 28239   0125E8  EC00  F080         	call	_mount_volume	;wreg free
 28240   0125EC  0106               	movlb	6	; () banked
 28241   0125EE  6FD6               	movwf	f_open@res& (0+255),b
 28242   0125F0                     
 28243                           ; BSR set to: 6
 28244                           ;../fatfs/ff.c: 3741:  if (res == FR_OK) {
 28245   0125F0  51D6               	movf	f_open@res& (0+255),w,b
 28246   0125F2  A4D8               	btfss	status,2,c
 28247   0125F4  EFFE  F092         	goto	u31541
 28248   0125F8  EF00  F093         	goto	u31540
 28249   0125FC                     u31541:
 28250   0125FC  EF8A  F096         	goto	l1878
 28251   012600                     u31540:
 28252   012600                     
 28253                           ; BSR set to: 6
 28254                           ;../fatfs/ff.c: 3742:   dj.obj.fs = fs;
 28255   012600  C6D4  F6D7         	movff	f_open@fs,f_open@dj
 28256   012604  C6D5  F6D8         	movff	f_open@fs+1,f_open@dj+1
 28257   012608                     
 28258                           ; BSR set to: 6
 28259                           ;../fatfs/ff.c: 3744:   res = follow_path(&dj, path);
 28260   012608  0ED7               	movlw	low f_open@dj
 28261   01260A  6F84               	movwf	follow_path@dp& (0+255),b
 28262   01260C  0E06               	movlw	high f_open@dj
 28263   01260E  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 28264   012610  C6B1  F686         	movff	f_open@path,follow_path@path
 28265   012614  C6B2  F687         	movff	f_open@path+1,follow_path@path+1
 28266   012618  EC61  F0C4         	call	_follow_path	;wreg free
 28267   01261C  0106               	movlb	6	; () banked
 28268   01261E  6FD6               	movwf	f_open@res& (0+255),b
 28269   012620                     
 28270                           ; BSR set to: 6
 28271                           ;../fatfs/ff.c: 3746:   if (res == FR_OK) {
 28272   012620  51D6               	movf	f_open@res& (0+255),w,b
 28273   012622  A4D8               	btfss	status,2,c
 28274   012624  EF16  F093         	goto	u31551
 28275   012628  EF18  F093         	goto	u31550
 28276   01262C                     u31551:
 28277   01262C  EF21  F093         	goto	l22883
 28278   012630                     u31550:
 28279   012630                     
 28280                           ; BSR set to: 6
 28281                           ;../fatfs/ff.c: 3747:    if (dj.fn[11] & 0x80) {
 28282   012630  AFFE               	btfss	(f_open@dj+39)& (0+255),7,b
 28283   012632  EF1D  F093         	goto	u31561
 28284   012636  EF1F  F093         	goto	u31560
 28285   01263A                     u31561:
 28286   01263A  EF21  F093         	goto	l22883
 28287   01263E                     u31560:
 28288   01263E                     
 28289                           ; BSR set to: 6
 28290                           ;../fatfs/ff.c: 3748:     res = FR_INVALID_NAME;
 28291   01263E  0E06               	movlw	6
 28292   012640  6FD6               	movwf	f_open@res& (0+255),b
 28293   012642                     l22883:
 28294                           
 28295                           ; BSR set to: 6
 28296                           ;../fatfs/ff.c: 3757:   if (mode & (0x08 | 0x10 | 0x04)) {
 28297   012642  C6B3  F6B4         	movff	f_open@mode,??_f_open
 28298   012646  0E1C               	movlw	28
 28299   012648  17B4               	andwf	??_f_open& (0+255),f,b
 28300   01264A  B4D8               	btfsc	status,2,c
 28301   01264C  EF2A  F093         	goto	u31571
 28302   012650  EF2C  F093         	goto	u31570
 28303   012654                     u31571:
 28304   012654  EF47  F094         	goto	l22929
 28305   012658                     u31570:
 28306   012658                     
 28307                           ; BSR set to: 6
 28308                           ;../fatfs/ff.c: 3758:    if (res != FR_OK) {
 28309   012658  51D6               	movf	f_open@res& (0+255),w,b
 28310   01265A  B4D8               	btfsc	status,2,c
 28311   01265C  EF32  F093         	goto	u31581
 28312   012660  EF34  F093         	goto	u31580
 28313   012664                     u31581:
 28314   012664  EF48  F093         	goto	l22893
 28315   012668                     u31580:
 28316   012668                     
 28317                           ; BSR set to: 6
 28318                           ;../fatfs/ff.c: 3759:     if (res == FR_NO_FILE) {
 28319   012668  0E04               	movlw	4
 28320   01266A  19D6               	xorwf	f_open@res& (0+255),w,b
 28321   01266C  A4D8               	btfss	status,2,c
 28322   01266E  EF3B  F093         	goto	u31591
 28323   012672  EF3D  F093         	goto	u31590
 28324   012676                     u31591:
 28325   012676  EF45  F093         	goto	l22891
 28326   01267A                     u31590:
 28327   01267A                     
 28328                           ; BSR set to: 6
 28329                           ;../fatfs/ff.c: 3763:      res = dir_register(&dj);
 28330   01267A  0ED7               	movlw	low f_open@dj
 28331   01267C  6F88               	movwf	dir_register@dp& (0+255),b
 28332   01267E  0E06               	movlw	high f_open@dj
 28333   012680  6F89               	movwf	(dir_register@dp+1)& (0+255),b
 28334   012682  ECEE  F0ED         	call	_dir_register	;wreg free
 28335   012686  0106               	movlb	6	; () banked
 28336   012688  6FD6               	movwf	f_open@res& (0+255),b
 28337   01268A                     l22891:
 28338                           
 28339                           ; BSR set to: 6
 28340                           ;../fatfs/ff.c: 3766:     mode |= 0x08;
 28341   01268A  87B3               	bsf	f_open@mode& (0+255),3,b
 28342                           
 28343                           ;../fatfs/ff.c: 3767:    }
 28344   01268C  EF60  F093         	goto	l1884
 28345   012690                     l22893:
 28346                           
 28347                           ; BSR set to: 6
 28348                           ;../fatfs/ff.c: 3769:     if (dj.obj.attr & (0x01 | 0x10)) {
 28349   012690  C6DB  F6B4         	movff	f_open@dj+4,??_f_open
 28350   012694  0E11               	movlw	17
 28351   012696  17B4               	andwf	??_f_open& (0+255),f,b
 28352   012698  B4D8               	btfsc	status,2,c
 28353   01269A  EF51  F093         	goto	u31601
 28354   01269E  EF53  F093         	goto	u31600
 28355   0126A2                     u31601:
 28356   0126A2  EF57  F093         	goto	l1885
 28357   0126A6                     u31600:
 28358   0126A6                     
 28359                           ; BSR set to: 6
 28360                           ;../fatfs/ff.c: 3770:      res = FR_DENIED;
 28361   0126A6  0E07               	movlw	7
 28362   0126A8  6FD6               	movwf	f_open@res& (0+255),b
 28363                           
 28364                           ;../fatfs/ff.c: 3771:     } else {
 28365   0126AA  EF60  F093         	goto	l1884
 28366   0126AE                     l1885:
 28367                           
 28368                           ; BSR set to: 6
 28369                           ;../fatfs/ff.c: 3772:      if (mode & 0x04) res = FR_EXIST;
 28370   0126AE  A5B3               	btfss	f_open@mode& (0+255),2,b
 28371   0126B0  EF5C  F093         	goto	u31611
 28372   0126B4  EF5E  F093         	goto	u31610
 28373   0126B8                     u31611:
 28374   0126B8  EF60  F093         	goto	l1884
 28375   0126BC                     u31610:
 28376   0126BC                     
 28377                           ; BSR set to: 6
 28378   0126BC  0E08               	movlw	8
 28379   0126BE  6FD6               	movwf	f_open@res& (0+255),b
 28380   0126C0                     l1884:
 28381                           
 28382                           ; BSR set to: 6
 28383                           ;../fatfs/ff.c: 3775:    if (res == FR_OK && (mode & 0x08)) {
 28384   0126C0  51D6               	movf	f_open@res& (0+255),w,b
 28385   0126C2  A4D8               	btfss	status,2,c
 28386   0126C4  EF66  F093         	goto	u31621
 28387   0126C8  EF68  F093         	goto	u31620
 28388   0126CC                     u31621:
 28389   0126CC  EF6A  F094         	goto	l1891
 28390   0126D0                     u31620:
 28391   0126D0                     
 28392                           ; BSR set to: 6
 28393   0126D0  A7B3               	btfss	f_open@mode& (0+255),3,b
 28394   0126D2  EF6D  F093         	goto	u31631
 28395   0126D6  EF6F  F093         	goto	u31630
 28396   0126DA                     u31631:
 28397   0126DA  EF6A  F094         	goto	l1891
 28398   0126DE                     u31630:
 28399   0126DE                     
 28400                           ; BSR set to: 6
 28401                           ;../fatfs/ff.c: 3794:     {;../fatfs/ff.c: 3796:      tm = get_fattime();
 28402   0126DE  EC0E  F001         	call	_get_fattime	;wreg free
 28403   0126E2  C504  F6C0         	movff	?_get_fattime,f_open@tm
 28404   0126E6  C505  F6C1         	movff	?_get_fattime+1,f_open@tm+1
 28405   0126EA  C506  F6C2         	movff	?_get_fattime+2,f_open@tm+2
 28406   0126EE  C507  F6C3         	movff	?_get_fattime+3,f_open@tm+3
 28407   0126F2                     
 28408                           ;../fatfs/ff.c: 3797:      st_dword(dj.dir + 14, tm);
 28409   0126F2  0E0E               	movlw	14
 28410   0126F4  0106               	movlb	6	; () banked
 28411   0126F6  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28412   0126F8  6E04               	movwf	st_dword@ptr^(0+1280),c
 28413   0126FA  0E00               	movlw	0
 28414   0126FC  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28415   0126FE  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28416   012700  C6C0  F506         	movff	f_open@tm,st_dword@val
 28417   012704  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 28418   012708  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 28419   01270C  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 28420   012710  ECDD  F0FA         	call	_st_dword	;wreg free
 28421   012714                     
 28422                           ;../fatfs/ff.c: 3798:      st_dword(dj.dir + 22, tm);
 28423   012714  0E16               	movlw	22
 28424   012716  0106               	movlb	6	; () banked
 28425   012718  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28426   01271A  6E04               	movwf	st_dword@ptr^(0+1280),c
 28427   01271C  0E00               	movlw	0
 28428   01271E  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28429   012720  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28430   012722  C6C0  F506         	movff	f_open@tm,st_dword@val
 28431   012726  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 28432   01272A  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 28433   01272E  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 28434   012732  ECDD  F0FA         	call	_st_dword	;wreg free
 28435   012736                     
 28436                           ;../fatfs/ff.c: 3799:      cl = ld_clust(fs, dj.dir);
 28437   012736  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 28438   01273A  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 28439   01273E  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 28440   012742  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 28441   012746  EC3A  F0F9         	call	_ld_clust	;wreg free
 28442   01274A  C50B  F6C4         	movff	?_ld_clust,f_open@cl
 28443   01274E  C50C  F6C5         	movff	?_ld_clust+1,f_open@cl+1
 28444   012752  C50D  F6C6         	movff	?_ld_clust+2,f_open@cl+2
 28445   012756  C50E  F6C7         	movff	?_ld_clust+3,f_open@cl+3
 28446   01275A                     
 28447                           ;../fatfs/ff.c: 3800:      dj.dir[11] = 0x20;
 28448   01275A  0106               	movlb	6	; () banked
 28449   01275C  EE20 F00B          	lfsr	2,11
 28450   012760  51F1               	movf	(f_open@dj+26)& (0+255),w,b
 28451   012762  26D9               	addwf	fsr2l,f,c
 28452   012764  51F2               	movf	(f_open@dj+27)& (0+255),w,b
 28453   012766  22DA               	addwfc	fsr2h,f,c
 28454   012768  0E20               	movlw	32
 28455   01276A  6EDF               	movwf	indf2,c
 28456   01276C                     
 28457                           ; BSR set to: 6
 28458                           ;../fatfs/ff.c: 3801:      st_clust(fs, dj.dir, 0);
 28459   01276C  C6D4  F508         	movff	f_open@fs,st_clust@fs
 28460   012770  C6D5  F509         	movff	f_open@fs+1,st_clust@fs+1
 28461   012774  C6F1  F50A         	movff	f_open@dj+26,st_clust@dir
 28462   012778  C6F2  F50B         	movff	f_open@dj+27,st_clust@dir+1
 28463   01277C  0E00               	movlw	0
 28464   01277E  6E0C               	movwf	st_clust@cl^(0+1280),c
 28465   012780  0E00               	movlw	0
 28466   012782  6E0D               	movwf	(st_clust@cl+1)^(0+1280),c
 28467   012784  0E00               	movlw	0
 28468   012786  6E0E               	movwf	(st_clust@cl+2)^(0+1280),c
 28469   012788  0E00               	movlw	0
 28470   01278A  6E0F               	movwf	(st_clust@cl+3)^(0+1280),c
 28471   01278C  EC28  F0FD         	call	_st_clust	;wreg free
 28472   012790                     
 28473                           ;../fatfs/ff.c: 3802:      st_dword(dj.dir + 28, 0);
 28474   012790  0E1C               	movlw	28
 28475   012792  0106               	movlb	6	; () banked
 28476   012794  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28477   012796  6E04               	movwf	st_dword@ptr^(0+1280),c
 28478   012798  0E00               	movlw	0
 28479   01279A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28480   01279C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28481   01279E  0E00               	movlw	0
 28482   0127A0  6E06               	movwf	st_dword@val^(0+1280),c
 28483   0127A2  0E00               	movlw	0
 28484   0127A4  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 28485   0127A6  0E00               	movlw	0
 28486   0127A8  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 28487   0127AA  0E00               	movlw	0
 28488   0127AC  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 28489   0127AE  ECDD  F0FA         	call	_st_dword	;wreg free
 28490   0127B2                     
 28491                           ;../fatfs/ff.c: 3803:      fs->wflag = 1;
 28492   0127B2  0106               	movlb	6	; () banked
 28493   0127B4  EE20 F004          	lfsr	2,4
 28494   0127B8  51D4               	movf	f_open@fs& (0+255),w,b
 28495   0127BA  26D9               	addwf	fsr2l,f,c
 28496   0127BC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28497   0127BE  22DA               	addwfc	fsr2h,f,c
 28498   0127C0  0E01               	movlw	1
 28499   0127C2  6EDF               	movwf	indf2,c
 28500   0127C4                     
 28501                           ; BSR set to: 6
 28502                           ;../fatfs/ff.c: 3804:      if (cl != 0) {
 28503   0127C4  51C4               	movf	f_open@cl& (0+255),w,b
 28504   0127C6  11C5               	iorwf	(f_open@cl+1)& (0+255),w,b
 28505   0127C8  11C6               	iorwf	(f_open@cl+2)& (0+255),w,b
 28506   0127CA  11C7               	iorwf	(f_open@cl+3)& (0+255),w,b
 28507   0127CC  B4D8               	btfsc	status,2,c
 28508   0127CE  EFEB  F093         	goto	u31641
 28509   0127D2  EFED  F093         	goto	u31640
 28510   0127D6                     u31641:
 28511   0127D6  EF6A  F094         	goto	l1891
 28512   0127DA                     u31640:
 28513   0127DA                     
 28514                           ; BSR set to: 6
 28515                           ;../fatfs/ff.c: 3805:       sc = fs->winsect;
 28516   0127DA  EE20 F030          	lfsr	2,48
 28517   0127DE  51D4               	movf	f_open@fs& (0+255),w,b
 28518   0127E0  26D9               	addwf	fsr2l,f,c
 28519   0127E2  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28520   0127E4  22DA               	addwfc	fsr2h,f,c
 28521   0127E6  C4DE F6C8          	movff	postinc2,f_open@sc
 28522   0127EA  C4DE F6C9          	movff	postinc2,f_open@sc+1
 28523   0127EE  C4DE F6CA          	movff	postinc2,f_open@sc+2
 28524   0127F2  C4DE F6CB          	movff	postinc2,f_open@sc+3
 28525   0127F6                     
 28526                           ; BSR set to: 6
 28527                           ;../fatfs/ff.c: 3806:       res = remove_chain(&dj.obj, cl, 0);
 28528   0127F6  0ED7               	movlw	low f_open@dj
 28529   0127F8  6F45               	movwf	remove_chain@obj& (0+255),b
 28530   0127FA  0E06               	movlw	high f_open@dj
 28531   0127FC  6F46               	movwf	(remove_chain@obj+1)& (0+255),b
 28532   0127FE  C6C4  F647         	movff	f_open@cl,remove_chain@clst
 28533   012802  C6C5  F648         	movff	f_open@cl+1,remove_chain@clst+1
 28534   012806  C6C6  F649         	movff	f_open@cl+2,remove_chain@clst+2
 28535   01280A  C6C7  F64A         	movff	f_open@cl+3,remove_chain@clst+3
 28536   01280E  0E00               	movlw	0
 28537   012810  6F4B               	movwf	remove_chain@pclst& (0+255),b
 28538   012812  0E00               	movlw	0
 28539   012814  6F4C               	movwf	(remove_chain@pclst+1)& (0+255),b
 28540   012816  0E00               	movlw	0
 28541   012818  6F4D               	movwf	(remove_chain@pclst+2)& (0+255),b
 28542   01281A  0E00               	movlw	0
 28543   01281C  6F4E               	movwf	(remove_chain@pclst+3)& (0+255),b
 28544   01281E  EC54  F0CD         	call	_remove_chain	;wreg free
 28545   012822  0106               	movlb	6	; () banked
 28546   012824  6FD6               	movwf	f_open@res& (0+255),b
 28547   012826                     
 28548                           ; BSR set to: 6
 28549                           ;../fatfs/ff.c: 3807:       if (res == FR_OK) {
 28550   012826  51D6               	movf	f_open@res& (0+255),w,b
 28551   012828  A4D8               	btfss	status,2,c
 28552   01282A  EF19  F094         	goto	u31651
 28553   01282E  EF1B  F094         	goto	u31650
 28554   012832                     u31651:
 28555   012832  EF6A  F094         	goto	l1891
 28556   012836                     u31650:
 28557   012836                     
 28558                           ; BSR set to: 6
 28559                           ;../fatfs/ff.c: 3808:        res = move_window(fs, sc);
 28560   012836  C6D4  F61A         	movff	f_open@fs,move_window@fs
 28561   01283A  C6D5  F61B         	movff	f_open@fs+1,move_window@fs+1
 28562   01283E  C6C8  F61C         	movff	f_open@sc,move_window@sect
 28563   012842  C6C9  F61D         	movff	f_open@sc+1,move_window@sect+1
 28564   012846  C6CA  F61E         	movff	f_open@sc+2,move_window@sect+2
 28565   01284A  C6CB  F61F         	movff	f_open@sc+3,move_window@sect+3
 28566   01284E  ECAB  F0EF         	call	_move_window	;wreg free
 28567   012852  0106               	movlb	6	; () banked
 28568   012854  6FD6               	movwf	f_open@res& (0+255),b
 28569   012856                     
 28570                           ; BSR set to: 6
 28571                           ;../fatfs/ff.c: 3809:        fs->last_clst = cl - 1;
 28572   012856  0EFF               	movlw	255
 28573   012858  25C4               	addwf	f_open@cl& (0+255),w,b
 28574   01285A  6FB4               	movwf	??_f_open& (0+255),b
 28575   01285C  0EFF               	movlw	255
 28576   01285E  21C5               	addwfc	(f_open@cl+1)& (0+255),w,b
 28577   012860  6FB5               	movwf	(??_f_open+1)& (0+255),b
 28578   012862  0EFF               	movlw	255
 28579   012864  21C6               	addwfc	(f_open@cl+2)& (0+255),w,b
 28580   012866  6FB6               	movwf	(??_f_open+2)& (0+255),b
 28581   012868  0EFF               	movlw	255
 28582   01286A  21C7               	addwfc	(f_open@cl+3)& (0+255),w,b
 28583   01286C  6FB7               	movwf	(??_f_open+3)& (0+255),b
 28584   01286E  EE20 F00C          	lfsr	2,12
 28585   012872  51D4               	movf	f_open@fs& (0+255),w,b
 28586   012874  26D9               	addwf	fsr2l,f,c
 28587   012876  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28588   012878  22DA               	addwfc	fsr2h,f,c
 28589   01287A  C6B4  F4DE         	movff	??_f_open,postinc2
 28590   01287E  C6B5  F4DE         	movff	??_f_open+1,postinc2
 28591   012882  C6B6  F4DE         	movff	??_f_open+2,postinc2
 28592   012886  C6B7  F4DE         	movff	??_f_open+3,postinc2
 28593   01288A  EF6A  F094         	goto	l1891
 28594   01288E                     l22929:
 28595                           
 28596                           ; BSR set to: 6
 28597                           ;../fatfs/ff.c: 3816:    if (res == FR_OK) {
 28598   01288E  51D6               	movf	f_open@res& (0+255),w,b
 28599   012890  A4D8               	btfss	status,2,c
 28600   012892  EF4D  F094         	goto	u31661
 28601   012896  EF4F  F094         	goto	u31660
 28602   01289A                     u31661:
 28603   01289A  EF6A  F094         	goto	l1891
 28604   01289E                     u31660:
 28605   01289E                     
 28606                           ; BSR set to: 6
 28607                           ;../fatfs/ff.c: 3817:     if (dj.obj.attr & 0x10) {
 28608   01289E  A9DB               	btfss	(f_open@dj+4)& (0+255),4,b
 28609   0128A0  EF54  F094         	goto	u31671
 28610   0128A4  EF56  F094         	goto	u31670
 28611   0128A8                     u31671:
 28612   0128A8  EF5A  F094         	goto	l1893
 28613   0128AC                     u31670:
 28614   0128AC                     
 28615                           ; BSR set to: 6
 28616                           ;../fatfs/ff.c: 3818:      res = FR_NO_FILE;
 28617   0128AC  0E04               	movlw	4
 28618   0128AE  6FD6               	movwf	f_open@res& (0+255),b
 28619                           
 28620                           ;../fatfs/ff.c: 3819:     } else {
 28621   0128B0  EF6A  F094         	goto	l1891
 28622   0128B4                     l1893:
 28623                           
 28624                           ; BSR set to: 6
 28625                           ;../fatfs/ff.c: 3820:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
 28626   0128B4  A3B3               	btfss	f_open@mode& (0+255),1,b
 28627   0128B6  EF5F  F094         	goto	u31681
 28628   0128BA  EF61  F094         	goto	u31680
 28629   0128BE                     u31681:
 28630   0128BE  EF6A  F094         	goto	l1891
 28631   0128C2                     u31680:
 28632   0128C2                     
 28633                           ; BSR set to: 6
 28634   0128C2  A1DB               	btfss	(f_open@dj+4)& (0+255),0,b
 28635   0128C4  EF66  F094         	goto	u31691
 28636   0128C8  EF68  F094         	goto	u31690
 28637   0128CC                     u31691:
 28638   0128CC  EF6A  F094         	goto	l1891
 28639   0128D0                     u31690:
 28640   0128D0                     
 28641                           ; BSR set to: 6
 28642                           ;../fatfs/ff.c: 3821:       res = FR_DENIED;
 28643   0128D0  0E07               	movlw	7
 28644   0128D2  6FD6               	movwf	f_open@res& (0+255),b
 28645   0128D4                     l1891:
 28646                           
 28647                           ; BSR set to: 6
 28648                           ;../fatfs/ff.c: 3826:   if (res == FR_OK) {
 28649   0128D4  51D6               	movf	f_open@res& (0+255),w,b
 28650   0128D6  A4D8               	btfss	status,2,c
 28651   0128D8  EF70  F094         	goto	u31701
 28652   0128DC  EF72  F094         	goto	u31700
 28653   0128E0                     u31701:
 28654   0128E0  EF98  F094         	goto	l22947
 28655   0128E4                     u31700:
 28656   0128E4                     
 28657                           ; BSR set to: 6
 28658                           ;../fatfs/ff.c: 3827:    if (mode & 0x08) mode |= 0x40;
 28659   0128E4  A7B3               	btfss	f_open@mode& (0+255),3,b
 28660   0128E6  EF77  F094         	goto	u31711
 28661   0128EA  EF79  F094         	goto	u31710
 28662   0128EE                     u31711:
 28663   0128EE  EF7A  F094         	goto	l22943
 28664   0128F2                     u31710:
 28665   0128F2                     
 28666                           ; BSR set to: 6
 28667   0128F2  8DB3               	bsf	f_open@mode& (0+255),6,b
 28668   0128F4                     l22943:
 28669                           
 28670                           ; BSR set to: 6
 28671                           ;../fatfs/ff.c: 3828:    fp->dir_sect = fs->winsect;
 28672   0128F4  EE20 F030          	lfsr	2,48
 28673   0128F8  51D4               	movf	f_open@fs& (0+255),w,b
 28674   0128FA  26D9               	addwf	fsr2l,f,c
 28675   0128FC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28676   0128FE  22DA               	addwfc	fsr2h,f,c
 28677   012900  EE10 F01C          	lfsr	1,28
 28678   012904  51AF               	movf	f_open@fp& (0+255),w,b
 28679   012906  26E1               	addwf	fsr1l,f,c
 28680   012908  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28681   01290A  22E2               	addwfc	fsr1h,f,c
 28682   01290C  C4DE F4E6          	movff	postinc2,postinc1
 28683   012910  C4DE F4E6          	movff	postinc2,postinc1
 28684   012914  C4DE F4E6          	movff	postinc2,postinc1
 28685   012918  C4DE F4E6          	movff	postinc2,postinc1
 28686   01291C                     
 28687                           ; BSR set to: 6
 28688                           ;../fatfs/ff.c: 3829:    fp->dir_ptr = dj.dir;
 28689   01291C  EE20 F020          	lfsr	2,32
 28690   012920  51AF               	movf	f_open@fp& (0+255),w,b
 28691   012922  26D9               	addwf	fsr2l,f,c
 28692   012924  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28693   012926  22DA               	addwfc	fsr2h,f,c
 28694   012928  C6F1  F4DE         	movff	f_open@dj+26,postinc2
 28695   01292C  C6F2  F4DD         	movff	f_open@dj+27,postdec2
 28696   012930                     l22947:
 28697                           
 28698                           ; BSR set to: 6
 28699                           ;../fatfs/ff.c: 3847:   if (res == FR_OK) {
 28700   012930  51D6               	movf	f_open@res& (0+255),w,b
 28701   012932  A4D8               	btfss	status,2,c
 28702   012934  EF9E  F094         	goto	u31721
 28703   012938  EFA0  F094         	goto	u31720
 28704   01293C                     u31721:
 28705   01293C  EF8A  F096         	goto	l1878
 28706   012940                     u31720:
 28707   012940                     
 28708                           ; BSR set to: 6
 28709                           ;../fatfs/ff.c: 3856:    {;../fatfs/ff.c: 3857:     fp->obj.sclust = ld_clust(fs, dj.dir
      +                          );
 28710   012940  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 28711   012944  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 28712   012948  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 28713   01294C  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 28714   012950  EC3A  F0F9         	call	_ld_clust	;wreg free
 28715   012954  0106               	movlb	6	; () banked
 28716   012956  EE20 F006          	lfsr	2,6
 28717   01295A  51AF               	movf	f_open@fp& (0+255),w,b
 28718   01295C  26D9               	addwf	fsr2l,f,c
 28719   01295E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28720   012960  22DA               	addwfc	fsr2h,f,c
 28721   012962  C50B  F4DE         	movff	?_ld_clust,postinc2
 28722   012966  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 28723   01296A  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 28724   01296E  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 28725                           
 28726                           ;../fatfs/ff.c: 3858:     fp->obj.objsize = ld_dword(dj.dir + 28);
 28727   012972  0E1C               	movlw	28
 28728   012974  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28729   012976  6E04               	movwf	ld_dword@ptr^(0+1280),c
 28730   012978  0E00               	movlw	0
 28731   01297A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28732   01297C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 28733   01297E  ECC7  F0F2         	call	_ld_dword	;wreg free
 28734   012982  0106               	movlb	6	; () banked
 28735   012984  EE20 F00A          	lfsr	2,10
 28736   012988  51AF               	movf	f_open@fp& (0+255),w,b
 28737   01298A  26D9               	addwf	fsr2l,f,c
 28738   01298C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28739   01298E  22DA               	addwfc	fsr2h,f,c
 28740   012990  C504  F4DE         	movff	?_ld_dword,postinc2
 28741   012994  C505  F4DE         	movff	?_ld_dword+1,postinc2
 28742   012998  C506  F4DE         	movff	?_ld_dword+2,postinc2
 28743   01299C  C507  F4DE         	movff	?_ld_dword+3,postinc2
 28744   0129A0                     
 28745                           ; BSR set to: 6
 28746                           ;../fatfs/ff.c: 3859:    };../fatfs/ff.c: 3863:    fp->obj.fs = fs;
 28747   0129A0  C6AF  F4D9         	movff	f_open@fp,fsr2l
 28748   0129A4  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 28749   0129A8  C6D4  F4DE         	movff	f_open@fs,postinc2
 28750   0129AC  C6D5  F4DD         	movff	f_open@fs+1,postdec2
 28751   0129B0                     
 28752                           ; BSR set to: 6
 28753                           ;../fatfs/ff.c: 3864:    fp->obj.id = fs->id;
 28754   0129B0  EE20 F006          	lfsr	2,6
 28755   0129B4  51D4               	movf	f_open@fs& (0+255),w,b
 28756   0129B6  26D9               	addwf	fsr2l,f,c
 28757   0129B8  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28758   0129BA  22DA               	addwfc	fsr2h,f,c
 28759   0129BC  EE10 F002          	lfsr	1,2
 28760   0129C0  51AF               	movf	f_open@fp& (0+255),w,b
 28761   0129C2  26E1               	addwf	fsr1l,f,c
 28762   0129C4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28763   0129C6  22E2               	addwfc	fsr1h,f,c
 28764   0129C8  C4DE F4E6          	movff	postinc2,postinc1
 28765   0129CC  C4DD F4E5          	movff	postdec2,postdec1
 28766   0129D0                     
 28767                           ; BSR set to: 6
 28768                           ;../fatfs/ff.c: 3865:    fp->flag = mode;
 28769   0129D0  EE20 F00E          	lfsr	2,14
 28770   0129D4  51AF               	movf	f_open@fp& (0+255),w,b
 28771   0129D6  26D9               	addwf	fsr2l,f,c
 28772   0129D8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28773   0129DA  22DA               	addwfc	fsr2h,f,c
 28774   0129DC  C6B3  F4DF         	movff	f_open@mode,indf2
 28775   0129E0                     
 28776                           ; BSR set to: 6
 28777                           ;../fatfs/ff.c: 3866:    fp->err = 0;
 28778   0129E0  EE20 F00F          	lfsr	2,15
 28779   0129E4  51AF               	movf	f_open@fp& (0+255),w,b
 28780   0129E6  26D9               	addwf	fsr2l,f,c
 28781   0129E8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28782   0129EA  22DA               	addwfc	fsr2h,f,c
 28783   0129EC  6ADF               	clrf	indf2,c
 28784   0129EE                     
 28785                           ; BSR set to: 6
 28786                           ;../fatfs/ff.c: 3867:    fp->sect = 0;
 28787   0129EE  EE20 F018          	lfsr	2,24
 28788   0129F2  51AF               	movf	f_open@fp& (0+255),w,b
 28789   0129F4  26D9               	addwf	fsr2l,f,c
 28790   0129F6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28791   0129F8  22DA               	addwfc	fsr2h,f,c
 28792   0129FA  6ADE               	clrf	postinc2,c
 28793   0129FC  6ADE               	clrf	postinc2,c
 28794   0129FE  6ADE               	clrf	postinc2,c
 28795   012A00  6ADD               	clrf	postdec2,c
 28796   012A02                     
 28797                           ; BSR set to: 6
 28798                           ;../fatfs/ff.c: 3868:    fp->fptr = 0;
 28799   012A02  EE20 F010          	lfsr	2,16
 28800   012A06  51AF               	movf	f_open@fp& (0+255),w,b
 28801   012A08  26D9               	addwf	fsr2l,f,c
 28802   012A0A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28803   012A0C  22DA               	addwfc	fsr2h,f,c
 28804   012A0E  6ADE               	clrf	postinc2,c
 28805   012A10  6ADE               	clrf	postinc2,c
 28806   012A12  6ADE               	clrf	postinc2,c
 28807   012A14  6ADD               	clrf	postdec2,c
 28808   012A16                     
 28809                           ; BSR set to: 6
 28810                           ;../fatfs/ff.c: 3871:    memset(fp->buf, 0, sizeof fp->buf);
 28811   012A16  0E22               	movlw	34
 28812   012A18  25AF               	addwf	f_open@fp& (0+255),w,b
 28813   012A1A  6E04               	movwf	memset@dest^(0+1280),c
 28814   012A1C  0E00               	movlw	0
 28815   012A1E  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 28816   012A20  6E05               	movwf	(memset@dest+1)^(0+1280),c
 28817   012A22  0E00               	movlw	0
 28818   012A24  6E07               	movwf	(memset@c+1)^(0+1280),c
 28819   012A26  0E00               	movlw	0
 28820   012A28  6E06               	movwf	memset@c^(0+1280),c
 28821   012A2A  0E02               	movlw	2
 28822   012A2C  6E09               	movwf	(memset@n+1)^(0+1280),c
 28823   012A2E  0E00               	movlw	0
 28824   012A30  6E08               	movwf	memset@n^(0+1280),c
 28825   012A32  EC14  F0FF         	call	_memset	;wreg free
 28826   012A36                     
 28827                           ;../fatfs/ff.c: 3873:    if ((mode & 0x20) && fp->obj.objsize > 0) {
 28828   012A36  0106               	movlb	6	; () banked
 28829   012A38  ABB3               	btfss	f_open@mode& (0+255),5,b
 28830   012A3A  EF21  F095         	goto	u31731
 28831   012A3E  EF23  F095         	goto	u31730
 28832   012A42                     u31731:
 28833   012A42  EF8A  F096         	goto	l1878
 28834   012A46                     u31730:
 28835   012A46                     
 28836                           ; BSR set to: 6
 28837   012A46  EE20 F00A          	lfsr	2,10
 28838   012A4A  51AF               	movf	f_open@fp& (0+255),w,b
 28839   012A4C  26D9               	addwf	fsr2l,f,c
 28840   012A4E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28841   012A50  22DA               	addwfc	fsr2h,f,c
 28842   012A52  50DE               	movf	postinc2,w,c
 28843   012A54  10DE               	iorwf	postinc2,w,c
 28844   012A56  10DE               	iorwf	postinc2,w,c
 28845   012A58  10DE               	iorwf	postinc2,w,c
 28846   012A5A  B4D8               	btfsc	status,2,c
 28847   012A5C  EF32  F095         	goto	u31741
 28848   012A60  EF34  F095         	goto	u31740
 28849   012A64                     u31741:
 28850   012A64  EF8A  F096         	goto	l1878
 28851   012A68                     u31740:
 28852   012A68                     
 28853                           ; BSR set to: 6
 28854                           ;../fatfs/ff.c: 3874:     fp->fptr = fp->obj.objsize;
 28855   012A68  EE20 F00A          	lfsr	2,10
 28856   012A6C  51AF               	movf	f_open@fp& (0+255),w,b
 28857   012A6E  26D9               	addwf	fsr2l,f,c
 28858   012A70  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28859   012A72  22DA               	addwfc	fsr2h,f,c
 28860   012A74  EE10 F010          	lfsr	1,16
 28861   012A78  51AF               	movf	f_open@fp& (0+255),w,b
 28862   012A7A  26E1               	addwf	fsr1l,f,c
 28863   012A7C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28864   012A7E  22E2               	addwfc	fsr1h,f,c
 28865   012A80  C4DE F4E6          	movff	postinc2,postinc1
 28866   012A84  C4DE F4E6          	movff	postinc2,postinc1
 28867   012A88  C4DE F4E6          	movff	postinc2,postinc1
 28868   012A8C  C4DE F4E6          	movff	postinc2,postinc1
 28869   012A90                     
 28870                           ; BSR set to: 6
 28871                           ;../fatfs/ff.c: 3875:     bcs = (DWORD)fs->csize * ((UINT)512);
 28872   012A90  EE20 F00A          	lfsr	2,10
 28873   012A94  51D4               	movf	f_open@fs& (0+255),w,b
 28874   012A96  26D9               	addwf	fsr2l,f,c
 28875   012A98  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28876   012A9A  22DA               	addwfc	fsr2h,f,c
 28877   012A9C  C4DE F6B4          	movff	postinc2,??_f_open
 28878   012AA0  C4DD F6B5          	movff	postdec2,??_f_open+1
 28879   012AA4  51B4               	movf	??_f_open& (0+255),w,b
 28880   012AA6  6FB6               	movwf	(??_f_open+2)& (0+255),b
 28881   012AA8  51B5               	movf	(??_f_open+1)& (0+255),w,b
 28882   012AAA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 28883   012AAC  6BB8               	clrf	(??_f_open+4)& (0+255),b
 28884   012AAE  6BB9               	clrf	(??_f_open+5)& (0+255),b
 28885   012AB0  0E09               	movlw	9
 28886   012AB2                     u31755:
 28887   012AB2  90D8               	bcf	status,0,c
 28888   012AB4  37B6               	rlcf	(??_f_open+2)& (0+255),f,b
 28889   012AB6  37B7               	rlcf	(??_f_open+3)& (0+255),f,b
 28890   012AB8  37B8               	rlcf	(??_f_open+4)& (0+255),f,b
 28891   012ABA  37B9               	rlcf	(??_f_open+5)& (0+255),f,b
 28892   012ABC  2EE8               	decfsz	wreg,f,c
 28893   012ABE  EF59  F095         	goto	u31755
 28894   012AC2  C6B6  F6BC         	movff	??_f_open+2,f_open@bcs
 28895   012AC6  C6B7  F6BD         	movff	??_f_open+3,f_open@bcs+1
 28896   012ACA  C6B8  F6BE         	movff	??_f_open+4,f_open@bcs+2
 28897   012ACE  C6B9  F6BF         	movff	??_f_open+5,f_open@bcs+3
 28898   012AD2                     
 28899                           ; BSR set to: 6
 28900                           ;../fatfs/ff.c: 3876:     clst = fp->obj.sclust;
 28901   012AD2  EE20 F006          	lfsr	2,6
 28902   012AD6  51AF               	movf	f_open@fp& (0+255),w,b
 28903   012AD8  26D9               	addwf	fsr2l,f,c
 28904   012ADA  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28905   012ADC  22DA               	addwfc	fsr2h,f,c
 28906   012ADE  C4DE F6D0          	movff	postinc2,f_open@clst
 28907   012AE2  C4DE F6D1          	movff	postinc2,f_open@clst+1
 28908   012AE6  C4DE F6D2          	movff	postinc2,f_open@clst+2
 28909   012AEA  C4DE F6D3          	movff	postinc2,f_open@clst+3
 28910   012AEE                     
 28911                           ; BSR set to: 6
 28912                           ;../fatfs/ff.c: 3877:     for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= 
      +                          bcs) {
 28913   012AEE  EE20 F00A          	lfsr	2,10
 28914   012AF2  51AF               	movf	f_open@fp& (0+255),w,b
 28915   012AF4  26D9               	addwf	fsr2l,f,c
 28916   012AF6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28917   012AF8  22DA               	addwfc	fsr2h,f,c
 28918   012AFA  C4DE F6CC          	movff	postinc2,f_open@ofs
 28919   012AFE  C4DE F6CD          	movff	postinc2,f_open@ofs+1
 28920   012B02  C4DE F6CE          	movff	postinc2,f_open@ofs+2
 28921   012B06  C4DE F6CF          	movff	postinc2,f_open@ofs+3
 28922   012B0A  EFC5  F095         	goto	l22989
 28923   012B0E                     l22977:
 28924                           
 28925                           ; BSR set to: 6
 28926                           ;../fatfs/ff.c: 3878:      clst = get_fat(&fp->obj, clst);
 28927   012B0E  C6AF  F624         	movff	f_open@fp,get_fat@obj
 28928   012B12  C6B0  F625         	movff	f_open@fp+1,get_fat@obj+1
 28929   012B16  C6D0  F626         	movff	f_open@clst,get_fat@clst
 28930   012B1A  C6D1  F627         	movff	f_open@clst+1,get_fat@clst+1
 28931   012B1E  C6D2  F628         	movff	f_open@clst+2,get_fat@clst+2
 28932   012B22  C6D3  F629         	movff	f_open@clst+3,get_fat@clst+3
 28933   012B26  ECF7  F0B4         	call	_get_fat	;wreg free
 28934   012B2A  C624  F6D0         	movff	?_get_fat,f_open@clst
 28935   012B2E  C625  F6D1         	movff	?_get_fat+1,f_open@clst+1
 28936   012B32  C626  F6D2         	movff	?_get_fat+2,f_open@clst+2
 28937   012B36  C627  F6D3         	movff	?_get_fat+3,f_open@clst+3
 28938   012B3A                     
 28939                           ;../fatfs/ff.c: 3879:      if (clst <= 1) res = FR_INT_ERR;
 28940   012B3A  0106               	movlb	6	; () banked
 28941   012B3C  51D3               	movf	(f_open@clst+3)& (0+255),w,b
 28942   012B3E  11D2               	iorwf	(f_open@clst+2)& (0+255),w,b
 28943   012B40  11D1               	iorwf	(f_open@clst+1)& (0+255),w,b
 28944   012B42  E107               	bnz	u31761
 28945   012B44  0E02               	movlw	2
 28946   012B46  5DD0               	subwf	f_open@clst& (0+255),w,b
 28947   012B48  B0D8               	btfsc	status,0,c
 28948   012B4A  EFA9  F095         	goto	u31761
 28949   012B4E  EFAB  F095         	goto	u31760
 28950   012B52                     u31761:
 28951   012B52  EFAD  F095         	goto	l22983
 28952   012B56                     u31760:
 28953   012B56                     
 28954                           ; BSR set to: 6
 28955   012B56  0E02               	movlw	2
 28956   012B58  6FD6               	movwf	f_open@res& (0+255),b
 28957   012B5A                     l22983:
 28958                           
 28959                           ; BSR set to: 6
 28960                           ;../fatfs/ff.c: 3880:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 28961   012B5A  29D0               	incf	f_open@clst& (0+255),w,b
 28962   012B5C  E10A               	bnz	u31771
 28963   012B5E  29D1               	incf	(f_open@clst+1)& (0+255),w,b
 28964   012B60  E108               	bnz	u31771
 28965   012B62  29D2               	incf	(f_open@clst+2)& (0+255),w,b
 28966   012B64  E106               	bnz	u31771
 28967   012B66  29D3               	incf	(f_open@clst+3)& (0+255),w,b
 28968   012B68  A4D8               	btfss	status,2,c
 28969   012B6A  EFB9  F095         	goto	u31771
 28970   012B6E  EFBB  F095         	goto	u31770
 28971   012B72                     u31771:
 28972   012B72  EFBD  F095         	goto	l22987
 28973   012B76                     u31770:
 28974   012B76                     
 28975                           ; BSR set to: 6
 28976   012B76  0E01               	movlw	1
 28977   012B78  6FD6               	movwf	f_open@res& (0+255),b
 28978   012B7A                     l22987:
 28979                           
 28980                           ; BSR set to: 6
 28981                           ;../fatfs/ff.c: 3881:     }
 28982   012B7A  51BC               	movf	f_open@bcs& (0+255),w,b
 28983   012B7C  5FCC               	subwf	f_open@ofs& (0+255),f,b
 28984   012B7E  51BD               	movf	(f_open@bcs+1)& (0+255),w,b
 28985   012B80  5BCD               	subwfb	(f_open@ofs+1)& (0+255),f,b
 28986   012B82  51BE               	movf	(f_open@bcs+2)& (0+255),w,b
 28987   012B84  5BCE               	subwfb	(f_open@ofs+2)& (0+255),f,b
 28988   012B86  51BF               	movf	(f_open@bcs+3)& (0+255),w,b
 28989   012B88  5BCF               	subwfb	(f_open@ofs+3)& (0+255),f,b
 28990   012B8A                     l22989:
 28991                           
 28992                           ; BSR set to: 6
 28993   012B8A  51D6               	movf	f_open@res& (0+255),w,b
 28994   012B8C  A4D8               	btfss	status,2,c
 28995   012B8E  EFCB  F095         	goto	u31781
 28996   012B92  EFCD  F095         	goto	u31780
 28997   012B96                     u31781:
 28998   012B96  EFDC  F095         	goto	l22993
 28999   012B9A                     u31780:
 29000   012B9A                     
 29001                           ; BSR set to: 6
 29002   012B9A  51CC               	movf	f_open@ofs& (0+255),w,b
 29003   012B9C  5DBC               	subwf	f_open@bcs& (0+255),w,b
 29004   012B9E  51CD               	movf	(f_open@ofs+1)& (0+255),w,b
 29005   012BA0  59BD               	subwfb	(f_open@bcs+1)& (0+255),w,b
 29006   012BA2  51CE               	movf	(f_open@ofs+2)& (0+255),w,b
 29007   012BA4  59BE               	subwfb	(f_open@bcs+2)& (0+255),w,b
 29008   012BA6  51CF               	movf	(f_open@ofs+3)& (0+255),w,b
 29009   012BA8  59BF               	subwfb	(f_open@bcs+3)& (0+255),w,b
 29010   012BAA  A0D8               	btfss	status,0,c
 29011   012BAC  EFDA  F095         	goto	u31791
 29012   012BB0  EFDC  F095         	goto	u31790
 29013   012BB4                     u31791:
 29014   012BB4  EF87  F095         	goto	l22977
 29015   012BB8                     u31790:
 29016   012BB8                     l22993:
 29017                           
 29018                           ; BSR set to: 6
 29019                           ;../fatfs/ff.c: 3882:     fp->clust = clst;
 29020   012BB8  EE20 F014          	lfsr	2,20
 29021   012BBC  51AF               	movf	f_open@fp& (0+255),w,b
 29022   012BBE  26D9               	addwf	fsr2l,f,c
 29023   012BC0  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29024   012BC2  22DA               	addwfc	fsr2h,f,c
 29025   012BC4  C6D0  F4DE         	movff	f_open@clst,postinc2
 29026   012BC8  C6D1  F4DE         	movff	f_open@clst+1,postinc2
 29027   012BCC  C6D2  F4DE         	movff	f_open@clst+2,postinc2
 29028   012BD0  C6D3  F4DE         	movff	f_open@clst+3,postinc2
 29029   012BD4                     
 29030                           ; BSR set to: 6
 29031                           ;../fatfs/ff.c: 3883:     if (res == FR_OK && ofs % ((UINT)512)) {
 29032   012BD4  51D6               	movf	f_open@res& (0+255),w,b
 29033   012BD6  A4D8               	btfss	status,2,c
 29034   012BD8  EFF0  F095         	goto	u31801
 29035   012BDC  EFF2  F095         	goto	u31800
 29036   012BE0                     u31801:
 29037   012BE0  EF8A  F096         	goto	l1878
 29038   012BE4                     u31800:
 29039   012BE4                     
 29040                           ; BSR set to: 6
 29041   012BE4  0EFF               	movlw	255
 29042   012BE6  15CC               	andwf	f_open@ofs& (0+255),w,b
 29043   012BE8  6FB4               	movwf	??_f_open& (0+255),b
 29044   012BEA  0E01               	movlw	1
 29045   012BEC  15CD               	andwf	(f_open@ofs+1)& (0+255),w,b
 29046   012BEE  6FB5               	movwf	(??_f_open+1)& (0+255),b
 29047   012BF0  0E00               	movlw	0
 29048   012BF2  15CE               	andwf	(f_open@ofs+2)& (0+255),w,b
 29049   012BF4  6FB6               	movwf	(??_f_open+2)& (0+255),b
 29050   012BF6  0E00               	movlw	0
 29051   012BF8  15CF               	andwf	(f_open@ofs+3)& (0+255),w,b
 29052   012BFA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 29053   012BFC  51B4               	movf	??_f_open& (0+255),w,b
 29054   012BFE  11B5               	iorwf	(??_f_open+1)& (0+255),w,b
 29055   012C00  11B6               	iorwf	(??_f_open+2)& (0+255),w,b
 29056   012C02  11B7               	iorwf	(??_f_open+3)& (0+255),w,b
 29057   012C04  B4D8               	btfsc	status,2,c
 29058   012C06  EF07  F096         	goto	u31811
 29059   012C0A  EF09  F096         	goto	u31810
 29060   012C0E                     u31811:
 29061   012C0E  EF8A  F096         	goto	l1878
 29062   012C12                     u31810:
 29063   012C12                     
 29064                           ; BSR set to: 6
 29065                           ;../fatfs/ff.c: 3884:      sc = clst2sect(fs, clst);
 29066   012C12  C6D4  F510         	movff	f_open@fs,clst2sect@fs
 29067   012C16  C6D5  F511         	movff	f_open@fs+1,clst2sect@fs+1
 29068   012C1A  C6D0  F512         	movff	f_open@clst,clst2sect@clst
 29069   012C1E  C6D1  F513         	movff	f_open@clst+1,clst2sect@clst+1
 29070   012C22  C6D2  F514         	movff	f_open@clst+2,clst2sect@clst+2
 29071   012C26  C6D3  F515         	movff	f_open@clst+3,clst2sect@clst+3
 29072   012C2A  EC7A  F0F0         	call	_clst2sect	;wreg free
 29073   012C2E  C510  F6C8         	movff	?_clst2sect,f_open@sc
 29074   012C32  C511  F6C9         	movff	?_clst2sect+1,f_open@sc+1
 29075   012C36  C512  F6CA         	movff	?_clst2sect+2,f_open@sc+2
 29076   012C3A  C513  F6CB         	movff	?_clst2sect+3,f_open@sc+3
 29077   012C3E                     
 29078                           ;../fatfs/ff.c: 3885:      if (sc == 0) {
 29079   012C3E  0106               	movlb	6	; () banked
 29080   012C40  51C8               	movf	f_open@sc& (0+255),w,b
 29081   012C42  11C9               	iorwf	(f_open@sc+1)& (0+255),w,b
 29082   012C44  11CA               	iorwf	(f_open@sc+2)& (0+255),w,b
 29083   012C46  11CB               	iorwf	(f_open@sc+3)& (0+255),w,b
 29084   012C48  A4D8               	btfss	status,2,c
 29085   012C4A  EF29  F096         	goto	u31821
 29086   012C4E  EF2B  F096         	goto	u31820
 29087   012C52                     u31821:
 29088   012C52  EF2F  F096         	goto	l23005
 29089   012C56                     u31820:
 29090   012C56                     
 29091                           ; BSR set to: 6
 29092                           ;../fatfs/ff.c: 3886:       res = FR_INT_ERR;
 29093   012C56  0E02               	movlw	2
 29094   012C58  6FD6               	movwf	f_open@res& (0+255),b
 29095                           
 29096                           ;../fatfs/ff.c: 3887:      } else {
 29097   012C5A  EF8A  F096         	goto	l1878
 29098   012C5E                     l23005:
 29099                           
 29100                           ; BSR set to: 6
 29101                           ;../fatfs/ff.c: 3888:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
 29102   012C5E  C6CC  F6B4         	movff	f_open@ofs,??_f_open
 29103   012C62  C6CD  F6B5         	movff	f_open@ofs+1,??_f_open+1
 29104   012C66  C6CE  F6B6         	movff	f_open@ofs+2,??_f_open+2
 29105   012C6A  C6CF  F6B7         	movff	f_open@ofs+3,??_f_open+3
 29106   012C6E  0E0A               	movlw	10
 29107   012C70  EF3F  F096         	goto	u31830
 29108   012C74                     u31835:
 29109   012C74  90D8               	bcf	status,0,c
 29110   012C76  33B7               	rrcf	(??_f_open+3)& (0+255),f,b
 29111   012C78  33B6               	rrcf	(??_f_open+2)& (0+255),f,b
 29112   012C7A  33B5               	rrcf	(??_f_open+1)& (0+255),f,b
 29113   012C7C  33B4               	rrcf	??_f_open& (0+255),f,b
 29114   012C7E                     u31830:
 29115   012C7E  2EE8               	decfsz	wreg,f,c
 29116   012C80  EF3A  F096         	goto	u31835
 29117   012C84  51C8               	movf	f_open@sc& (0+255),w,b
 29118   012C86  25B4               	addwf	??_f_open& (0+255),w,b
 29119   012C88  6FB8               	movwf	(??_f_open+4)& (0+255),b
 29120   012C8A  51C9               	movf	(f_open@sc+1)& (0+255),w,b
 29121   012C8C  21B5               	addwfc	(??_f_open+1)& (0+255),w,b
 29122   012C8E  6FB9               	movwf	(??_f_open+5)& (0+255),b
 29123   012C90  51CA               	movf	(f_open@sc+2)& (0+255),w,b
 29124   012C92  21B6               	addwfc	(??_f_open+2)& (0+255),w,b
 29125   012C94  6FBA               	movwf	(??_f_open+6)& (0+255),b
 29126   012C96  51CB               	movf	(f_open@sc+3)& (0+255),w,b
 29127   012C98  21B7               	addwfc	(??_f_open+3)& (0+255),w,b
 29128   012C9A  6FBB               	movwf	(??_f_open+7)& (0+255),b
 29129   012C9C  EE20 F018          	lfsr	2,24
 29130   012CA0  51AF               	movf	f_open@fp& (0+255),w,b
 29131   012CA2  26D9               	addwf	fsr2l,f,c
 29132   012CA4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29133   012CA6  22DA               	addwfc	fsr2h,f,c
 29134   012CA8  C6B8  F4DE         	movff	??_f_open+4,postinc2
 29135   012CAC  C6B9  F4DE         	movff	??_f_open+5,postinc2
 29136   012CB0  C6BA  F4DE         	movff	??_f_open+6,postinc2
 29137   012CB4  C6BB  F4DE         	movff	??_f_open+7,postinc2
 29138   012CB8                     
 29139                           ; BSR set to: 6
 29140                           ;../fatfs/ff.c: 3890:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res
      +                           = FR_DISK_ERR;
 29141   012CB8  0E22               	movlw	34
 29142   012CBA  25AF               	addwf	f_open@fp& (0+255),w,b
 29143   012CBC  6F00               	movwf	disk_read@buff& (0+255),b
 29144   012CBE  0E00               	movlw	0
 29145   012CC0  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 29146   012CC2  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 29147   012CC4  EE20 F018          	lfsr	2,24
 29148   012CC8  51AF               	movf	f_open@fp& (0+255),w,b
 29149   012CCA  26D9               	addwf	fsr2l,f,c
 29150   012CCC  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29151   012CCE  22DA               	addwfc	fsr2h,f,c
 29152   012CD0  C4DE F602          	movff	postinc2,disk_read@sector
 29153   012CD4  C4DE F603          	movff	postinc2,disk_read@sector+1
 29154   012CD8  C4DE F604          	movff	postinc2,disk_read@sector+2
 29155   012CDC  C4DE F605          	movff	postinc2,disk_read@sector+3
 29156   012CE0  0E00               	movlw	0
 29157   012CE2  6F07               	movwf	(disk_read@count+1)& (0+255),b
 29158   012CE4  0E01               	movlw	1
 29159   012CE6  6F06               	movwf	disk_read@count& (0+255),b
 29160   012CE8  EE20 F001          	lfsr	2,1
 29161   012CEC  51D4               	movf	f_open@fs& (0+255),w,b
 29162   012CEE  26D9               	addwf	fsr2l,f,c
 29163   012CF0  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 29164   012CF2  22DA               	addwfc	fsr2h,f,c
 29165   012CF4  50DF               	movf	indf2,w,c
 29166   012CF6  ECD5  F0F3         	call	_disk_read
 29167   012CFA  0900               	iorlw	0
 29168   012CFC  B4D8               	btfsc	status,2,c
 29169   012CFE  EF83  F096         	goto	u31841
 29170   012D02  EF85  F096         	goto	u31840
 29171   012D06                     u31841:
 29172   012D06  EF8A  F096         	goto	l1899
 29173   012D0A                     u31840:
 29174   012D0A  0E01               	movlw	1
 29175   012D0C  0106               	movlb	6	; () banked
 29176   012D0E  6FD6               	movwf	f_open@res& (0+255),b
 29177   012D10  EF8A  F096         	goto	l1878
 29178   012D14                     l1899:
 29179   012D14                     l1878:
 29180                           
 29181                           ;../fatfs/ff.c: 3904:  if (res != FR_OK) fp->obj.fs = 0;
 29182   012D14  0106               	movlb	6	; () banked
 29183   012D16  51D6               	movf	f_open@res& (0+255),w,b
 29184   012D18  B4D8               	btfsc	status,2,c
 29185   012D1A  EF91  F096         	goto	u31851
 29186   012D1E  EF93  F096         	goto	u31850
 29187   012D22                     u31851:
 29188   012D22  EF99  F096         	goto	l23013
 29189   012D26                     u31850:
 29190   012D26                     
 29191                           ; BSR set to: 6
 29192   012D26  C6AF  F4D9         	movff	f_open@fp,fsr2l
 29193   012D2A  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 29194   012D2E  6ADE               	clrf	postinc2,c
 29195   012D30  6ADD               	clrf	postdec2,c
 29196   012D32                     l23013:
 29197                           
 29198                           ; BSR set to: 6
 29199                           ;../fatfs/ff.c: 3906:  return res;
 29200   012D32  51D6               	movf	f_open@res& (0+255),w,b
 29201   012D34                     l1873:
 29202                           
 29203                           ; BSR set to: 6
 29204   012D34  0012               	return		;funcret
 29205   012D36                     __end_of_f_open:
 29206                           	callstack 0
 29207                           
 29208 ;; *************** function _remove_chain *****************
 29209 ;; Defined at:
 29210 ;;		line 1430 in file "../fatfs/ff.c"
 29211 ;; Parameters:    Size  Location     Type
 29212 ;;  obj             2   69[BANK6 ] PTR struct .
 29213 ;;		 -> f_mkdir@sobj(14), f_unlink@dj(40), f_open@dj(40), 
 29214 ;;  clst            4   71[BANK6 ] unsigned long 
 29215 ;;  pclst           4   75[BANK6 ] unsigned long 
 29216 ;; Auto vars:     Size  Location     Type
 29217 ;;  nxt             4   87[BANK6 ] unsigned long 
 29218 ;;  fs              2   92[BANK6 ] PTR struct .
 29219 ;;		 -> fs(564), NULL(0), 
 29220 ;;  res             1   91[BANK6 ] enum E597
 29221 ;; Return value:  Size  Location     Type
 29222 ;;                  1    wreg      enum E597
 29223 ;; Registers used:
 29224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29225 ;; Tracked objects:
 29226 ;;		On entry : 0/0
 29227 ;;		On exit  : 0/0
 29228 ;;		Unchanged: 0/0
 29229 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29230 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29231 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29232 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29233 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29234 ;;Total ram usage:       25 bytes
 29235 ;; Hardware stack levels used: 1
 29236 ;; Hardware stack levels required when called: 15
 29237 ;; This function calls:
 29238 ;;		_get_fat
 29239 ;;		_put_fat
 29240 ;; This function is called by:
 29241 ;;		_f_open
 29242 ;;		_f_truncate
 29243 ;;		_f_unlink
 29244 ;;		_f_mkdir
 29245 ;; This function uses a non-reentrant model
 29246 ;;
 29247                           
 29248                           	psect	text73
 29249   019AA8                     __ptext73:
 29250                           	callstack 0
 29251   019AA8                     _remove_chain:
 29252                           	callstack 104
 29253   019AA8                     
 29254                           ;../fatfs/ff.c: 1437:  DWORD nxt;;../fatfs/ff.c: 1438:  FATFS *fs = obj->fs;
 29255   019AA8  C645  F4D9         	movff	remove_chain@obj,fsr2l
 29256   019AAC  C646  F4DA         	movff	remove_chain@obj+1,fsr2h
 29257   019AB0  C4DE F65C          	movff	postinc2,remove_chain@fs
 29258   019AB4  C4DD F65D          	movff	postdec2,remove_chain@fs+1
 29259   019AB8                     
 29260                           ;../fatfs/ff.c: 1446:  if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 29261   019AB8  0106               	movlb	6	; () banked
 29262   019ABA  514A               	movf	(remove_chain@clst+3)& (0+255),w,b
 29263   019ABC  1149               	iorwf	(remove_chain@clst+2)& (0+255),w,b
 29264   019ABE  1148               	iorwf	(remove_chain@clst+1)& (0+255),w,b
 29265   019AC0  E109               	bnz	u30300
 29266   019AC2  0E02               	movlw	2
 29267   019AC4  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29268   019AC6  A0D8               	btfss	status,0,c
 29269   019AC8  EF68  F0CD         	goto	u30301
 29270   019ACC  EF6A  F0CD         	goto	u30300
 29271   019AD0                     u30301:
 29272   019AD0  EF7F  F0CD         	goto	l22187
 29273   019AD4                     u30300:
 29274   019AD4                     
 29275                           ; BSR set to: 6
 29276   019AD4  EE20 F018          	lfsr	2,24
 29277   019AD8  515C               	movf	remove_chain@fs& (0+255),w,b
 29278   019ADA  26D9               	addwf	fsr2l,f,c
 29279   019ADC  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29280   019ADE  22DA               	addwfc	fsr2h,f,c
 29281   019AE0  50DE               	movf	postinc2,w,c
 29282   019AE2  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29283   019AE4  50DE               	movf	postinc2,w,c
 29284   019AE6  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 29285   019AE8  50DE               	movf	postinc2,w,c
 29286   019AEA  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 29287   019AEC  50DE               	movf	postinc2,w,c
 29288   019AEE  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 29289   019AF0  A0D8               	btfss	status,0,c
 29290   019AF2  EF7D  F0CD         	goto	u30311
 29291   019AF6  EF7F  F0CD         	goto	u30310
 29292   019AFA                     u30311:
 29293   019AFA  EF82  F0CD         	goto	l22191
 29294   019AFE                     u30310:
 29295   019AFE                     l22187:
 29296                           
 29297                           ; BSR set to: 6
 29298   019AFE  0E02               	movlw	2
 29299   019B00  EF6C  F0CE         	goto	l1522
 29300   019B04                     l22191:
 29301                           
 29302                           ; BSR set to: 6
 29303                           ;../fatfs/ff.c: 1449:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
 29304   019B04  514B               	movf	remove_chain@pclst& (0+255),w,b
 29305   019B06  114C               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
 29306   019B08  114D               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
 29307   019B0A  114E               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
 29308   019B0C  B4D8               	btfsc	status,2,c
 29309   019B0E  EF8B  F0CD         	goto	u30321
 29310   019B12  EF8D  F0CD         	goto	u30320
 29311   019B16                     u30321:
 29312   019B16  EFB0  F0CD         	goto	l22207
 29313   019B1A                     u30320:
 29314   019B1A                     
 29315                           ; BSR set to: 6
 29316                           ;../fatfs/ff.c: 1450:   res = put_fat(fs, pclst, 0xFFFFFFFF);
 29317   019B1A  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 29318   019B1E  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 29319   019B22  C64B  F626         	movff	remove_chain@pclst,put_fat@clst
 29320   019B26  C64C  F627         	movff	remove_chain@pclst+1,put_fat@clst+1
 29321   019B2A  C64D  F628         	movff	remove_chain@pclst+2,put_fat@clst+2
 29322   019B2E  C64E  F629         	movff	remove_chain@pclst+3,put_fat@clst+3
 29323   019B32  0EFF               	movlw	255
 29324   019B34  6F2A               	movwf	put_fat@val& (0+255),b
 29325   019B36  0EFF               	movlw	255
 29326   019B38  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 29327   019B3A  0EFF               	movlw	255
 29328   019B3C  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 29329   019B3E  0EFF               	movlw	255
 29330   019B40  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 29331   019B42  EC54  F0A0         	call	_put_fat	;wreg free
 29332   019B46  0106               	movlb	6	; () banked
 29333   019B48  6F5B               	movwf	remove_chain@res& (0+255),b
 29334   019B4A                     
 29335                           ; BSR set to: 6
 29336                           ;../fatfs/ff.c: 1451:   if (res != FR_OK) return res;
 29337   019B4A  515B               	movf	remove_chain@res& (0+255),w,b
 29338   019B4C  B4D8               	btfsc	status,2,c
 29339   019B4E  EFAB  F0CD         	goto	u30331
 29340   019B52  EFAD  F0CD         	goto	u30330
 29341   019B56                     u30331:
 29342   019B56  EFB0  F0CD         	goto	l22207
 29343   019B5A                     u30330:
 29344   019B5A                     l22203:
 29345                           
 29346                           ; BSR set to: 6
 29347   019B5A  515B               	movf	remove_chain@res& (0+255),w,b
 29348   019B5C  EF6C  F0CE         	goto	l1522
 29349   019B60                     l22207:
 29350                           
 29351                           ; BSR set to: 6
 29352                           ;../fatfs/ff.c: 1456:   nxt = get_fat(obj, clst);
 29353   019B60  C645  F624         	movff	remove_chain@obj,get_fat@obj
 29354   019B64  C646  F625         	movff	remove_chain@obj+1,get_fat@obj+1
 29355   019B68  C647  F626         	movff	remove_chain@clst,get_fat@clst
 29356   019B6C  C648  F627         	movff	remove_chain@clst+1,get_fat@clst+1
 29357   019B70  C649  F628         	movff	remove_chain@clst+2,get_fat@clst+2
 29358   019B74  C64A  F629         	movff	remove_chain@clst+3,get_fat@clst+3
 29359   019B78  ECF7  F0B4         	call	_get_fat	;wreg free
 29360   019B7C  C624  F657         	movff	?_get_fat,remove_chain@nxt
 29361   019B80  C625  F658         	movff	?_get_fat+1,remove_chain@nxt+1
 29362   019B84  C626  F659         	movff	?_get_fat+2,remove_chain@nxt+2
 29363   019B88  C627  F65A         	movff	?_get_fat+3,remove_chain@nxt+3
 29364   019B8C                     
 29365                           ;../fatfs/ff.c: 1457:   if (nxt == 0) break;
 29366   019B8C  0106               	movlb	6	; () banked
 29367   019B8E  5157               	movf	remove_chain@nxt& (0+255),w,b
 29368   019B90  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 29369   019B92  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 29370   019B94  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 29371   019B96  A4D8               	btfss	status,2,c
 29372   019B98  EFD0  F0CD         	goto	u30341
 29373   019B9C  EFD2  F0CD         	goto	u30340
 29374   019BA0                     u30341:
 29375   019BA0  EFD4  F0CD         	goto	l22213
 29376   019BA4                     u30340:
 29377   019BA4  EF6B  F0CE         	goto	l22241
 29378   019BA8                     l22213:
 29379                           
 29380                           ; BSR set to: 6
 29381                           ;../fatfs/ff.c: 1458:   if (nxt == 1) return FR_INT_ERR;
 29382   019BA8  0557               	decf	remove_chain@nxt& (0+255),w,b
 29383   019BAA  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 29384   019BAC  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 29385   019BAE  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 29386   019BB0  A4D8               	btfss	status,2,c
 29387   019BB2  EFDD  F0CD         	goto	u30351
 29388   019BB6  EFDF  F0CD         	goto	u30350
 29389   019BBA                     u30351:
 29390   019BBA  EFE1  F0CD         	goto	l22219
 29391   019BBE                     u30350:
 29392   019BBE  EF7F  F0CD         	goto	l22187
 29393   019BC2                     l22219:
 29394                           
 29395                           ; BSR set to: 6
 29396                           ;../fatfs/ff.c: 1459:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
 29397   019BC2  2957               	incf	remove_chain@nxt& (0+255),w,b
 29398   019BC4  E10A               	bnz	u30361
 29399   019BC6  2958               	incf	(remove_chain@nxt+1)& (0+255),w,b
 29400   019BC8  E108               	bnz	u30361
 29401   019BCA  2959               	incf	(remove_chain@nxt+2)& (0+255),w,b
 29402   019BCC  E106               	bnz	u30361
 29403   019BCE  295A               	incf	(remove_chain@nxt+3)& (0+255),w,b
 29404   019BD0  A4D8               	btfss	status,2,c
 29405   019BD2  EFED  F0CD         	goto	u30361
 29406   019BD6  EFEF  F0CD         	goto	u30360
 29407   019BDA                     u30361:
 29408   019BDA  EFF2  F0CD         	goto	l22227
 29409   019BDE                     u30360:
 29410   019BDE                     
 29411                           ; BSR set to: 6
 29412   019BDE  0E01               	movlw	1
 29413   019BE0  EF6C  F0CE         	goto	l1522
 29414   019BE4                     l22227:
 29415                           
 29416                           ; BSR set to: 6
 29417                           ;../fatfs/ff.c: 1461:    res = put_fat(fs, clst, 0);
 29418   019BE4  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 29419   019BE8  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 29420   019BEC  C647  F626         	movff	remove_chain@clst,put_fat@clst
 29421   019BF0  C648  F627         	movff	remove_chain@clst+1,put_fat@clst+1
 29422   019BF4  C649  F628         	movff	remove_chain@clst+2,put_fat@clst+2
 29423   019BF8  C64A  F629         	movff	remove_chain@clst+3,put_fat@clst+3
 29424   019BFC  0E00               	movlw	0
 29425   019BFE  6F2A               	movwf	put_fat@val& (0+255),b
 29426   019C00  0E00               	movlw	0
 29427   019C02  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 29428   019C04  0E00               	movlw	0
 29429   019C06  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 29430   019C08  0E00               	movlw	0
 29431   019C0A  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 29432   019C0C  EC54  F0A0         	call	_put_fat	;wreg free
 29433   019C10  0106               	movlb	6	; () banked
 29434   019C12  6F5B               	movwf	remove_chain@res& (0+255),b
 29435   019C14                     
 29436                           ; BSR set to: 6
 29437                           ;../fatfs/ff.c: 1462:    if (res != FR_OK) return res;
 29438   019C14  515B               	movf	remove_chain@res& (0+255),w,b
 29439   019C16  B4D8               	btfsc	status,2,c
 29440   019C18  EF10  F0CE         	goto	u30371
 29441   019C1C  EF12  F0CE         	goto	u30370
 29442   019C20                     u30371:
 29443   019C20  EF14  F0CE         	goto	l22235
 29444   019C24                     u30370:
 29445   019C24  EFAD  F0CD         	goto	l22203
 29446   019C28                     l22235:
 29447                           
 29448                           ; BSR set to: 6
 29449                           ;../fatfs/ff.c: 1464:   if (fs->free_clst < fs->n_fatent - 2) {
 29450   019C28  EE20 F018          	lfsr	2,24
 29451   019C2C  515C               	movf	remove_chain@fs& (0+255),w,b
 29452   019C2E  26D9               	addwf	fsr2l,f,c
 29453   019C30  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29454   019C32  22DA               	addwfc	fsr2h,f,c
 29455   019C34  0EFE               	movlw	254
 29456   019C36  24DE               	addwf	postinc2,w,c
 29457   019C38  6F4F               	movwf	??_remove_chain& (0+255),b
 29458   019C3A  0EFF               	movlw	255
 29459   019C3C  20DE               	addwfc	postinc2,w,c
 29460   019C3E  6F50               	movwf	(??_remove_chain+1)& (0+255),b
 29461   019C40  0EFF               	movlw	255
 29462   019C42  20DE               	addwfc	postinc2,w,c
 29463   019C44  6F51               	movwf	(??_remove_chain+2)& (0+255),b
 29464   019C46  0EFF               	movlw	255
 29465   019C48  20DE               	addwfc	postinc2,w,c
 29466   019C4A  6F52               	movwf	(??_remove_chain+3)& (0+255),b
 29467   019C4C  EE20 F010          	lfsr	2,16
 29468   019C50  515C               	movf	remove_chain@fs& (0+255),w,b
 29469   019C52  26D9               	addwf	fsr2l,f,c
 29470   019C54  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29471   019C56  22DA               	addwfc	fsr2h,f,c
 29472   019C58  514F               	movf	??_remove_chain& (0+255),w,b
 29473   019C5A  5CDE               	subwf	postinc2,w,c
 29474   019C5C  5150               	movf	(??_remove_chain+1)& (0+255),w,b
 29475   019C5E  58DE               	subwfb	postinc2,w,c
 29476   019C60  5151               	movf	(??_remove_chain+2)& (0+255),w,b
 29477   019C62  58DE               	subwfb	postinc2,w,c
 29478   019C64  5152               	movf	(??_remove_chain+3)& (0+255),w,b
 29479   019C66  58DE               	subwfb	postinc2,w,c
 29480   019C68  B0D8               	btfsc	status,0,c
 29481   019C6A  EF39  F0CE         	goto	u30381
 29482   019C6E  EF3B  F0CE         	goto	u30380
 29483   019C72                     u30381:
 29484   019C72  EF4E  F0CE         	goto	l22239
 29485   019C76                     u30380:
 29486   019C76                     
 29487                           ; BSR set to: 6
 29488                           ;../fatfs/ff.c: 1465:    fs->free_clst++;
 29489   019C76  EE20 F010          	lfsr	2,16
 29490   019C7A  515C               	movf	remove_chain@fs& (0+255),w,b
 29491   019C7C  26D9               	addwf	fsr2l,f,c
 29492   019C7E  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29493   019C80  22DA               	addwfc	fsr2h,f,c
 29494   019C82  2ADE               	incf	postinc2,f,c
 29495   019C84  0E00               	movlw	0
 29496   019C86  22DE               	addwfc	postinc2,f,c
 29497   019C88  22DE               	addwfc	postinc2,f,c
 29498   019C8A  22DE               	addwfc	postinc2,f,c
 29499                           
 29500                           ;../fatfs/ff.c: 1466:    fs->fsi_flag |= 1;
 29501   019C8C  EE20 F005          	lfsr	2,5
 29502   019C90  515C               	movf	remove_chain@fs& (0+255),w,b
 29503   019C92  26D9               	addwf	fsr2l,f,c
 29504   019C94  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29505   019C96  22DA               	addwfc	fsr2h,f,c
 29506   019C98  0E00               	movlw	0
 29507   019C9A  80DB               	bsf	plusw2,0,c
 29508   019C9C                     l22239:
 29509                           
 29510                           ; BSR set to: 6
 29511                           ;../fatfs/ff.c: 1486:   clst = nxt;
 29512   019C9C  C657  F647         	movff	remove_chain@nxt,remove_chain@clst
 29513   019CA0  C658  F648         	movff	remove_chain@nxt+1,remove_chain@clst+1
 29514   019CA4  C659  F649         	movff	remove_chain@nxt+2,remove_chain@clst+2
 29515   019CA8  C65A  F64A         	movff	remove_chain@nxt+3,remove_chain@clst+3
 29516                           
 29517                           ;../fatfs/ff.c: 1487:  } while (clst < fs->n_fatent);
 29518   019CAC  EE20 F018          	lfsr	2,24
 29519   019CB0  515C               	movf	remove_chain@fs& (0+255),w,b
 29520   019CB2  26D9               	addwf	fsr2l,f,c
 29521   019CB4  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29522   019CB6  22DA               	addwfc	fsr2h,f,c
 29523   019CB8  50DE               	movf	postinc2,w,c
 29524   019CBA  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29525   019CBC  50DE               	movf	postinc2,w,c
 29526   019CBE  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 29527   019CC0  50DE               	movf	postinc2,w,c
 29528   019CC2  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 29529   019CC4  50DE               	movf	postinc2,w,c
 29530   019CC6  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 29531   019CC8  A0D8               	btfss	status,0,c
 29532   019CCA  EF69  F0CE         	goto	u30391
 29533   019CCE  EF6B  F0CE         	goto	u30390
 29534   019CD2                     u30391:
 29535   019CD2  EFB0  F0CD         	goto	l22207
 29536   019CD6                     u30390:
 29537   019CD6                     l22241:
 29538                           
 29539                           ; BSR set to: 6
 29540                           ;../fatfs/ff.c: 1515:  return FR_OK;
 29541   019CD6  0E00               	movlw	0
 29542   019CD8                     l1522:
 29543                           
 29544                           ; BSR set to: 6
 29545   019CD8  0012               	return		;funcret
 29546   019CDA                     __end_of_remove_chain:
 29547                           	callstack 0
 29548                           
 29549 ;; *************** function _mount_volume *****************
 29550 ;; Defined at:
 29551 ;;		line 3386 in file "../fatfs/ff.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;  path            2  129[BANK6 ] PTR PTR const unsigned c
 29554 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 29555 ;;		 -> f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), f_chdir@path(2), 
 29556 ;;		 -> f_open@path(2), f_mount@path(2), 
 29557 ;;  rfs             2  131[BANK6 ] PTR PTR struct .
 29558 ;;		 -> dj$obj(15), f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), 
 29559 ;;		 -> f_getfree@fs(2), f_opendir@fs(2), f_getcwd@fs(2), f_chdir@fs(2), 
 29560 ;;		 -> f_open@dj(40), f_open@fs(2), dj$obj$fs(2), f_mount@fs(2), 
 29561 ;;  mode            1  133[BANK6 ] unsigned char 
 29562 ;; Auto vars:     Size  Location     Type
 29563 ;;  fasize          4  167[BANK6 ] unsigned long 
 29564 ;;  nclst           4  163[BANK6 ] unsigned long 
 29565 ;;  bsect           4  158[BANK6 ] unsigned long 
 29566 ;;  tsect           4  154[BANK6 ] unsigned long 
 29567 ;;  sysect          4  148[BANK6 ] unsigned long 
 29568 ;;  szbfat          4  142[BANK6 ] unsigned long 
 29569 ;;  fs              2  173[BANK6 ] PTR struct .
 29570 ;;		 -> fs(564), NULL(0), 
 29571 ;;  fmt             2  171[BANK6 ] unsigned int 
 29572 ;;  nrsv            2  152[BANK6 ] unsigned short 
 29573 ;;  vol             2  146[BANK6 ] int 
 29574 ;;  stat            1  162[BANK6 ] unsigned char 
 29575 ;; Return value:  Size  Location     Type
 29576 ;;                  1    wreg      enum E597
 29577 ;; Registers used:
 29578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29579 ;; Tracked objects:
 29580 ;;		On entry : 0/0
 29581 ;;		On exit  : 0/0
 29582 ;;		Unchanged: 0/0
 29583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29584 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29585 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29586 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29587 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29588 ;;Total ram usage:       46 bytes
 29589 ;; Hardware stack levels used: 1
 29590 ;; Hardware stack levels required when called: 16
 29591 ;; This function calls:
 29592 ;;		___lldiv
 29593 ;;		___lmul
 29594 ;;		_disk_initialize
 29595 ;;		_disk_status
 29596 ;;		_find_volume
 29597 ;;		_get_ldnumber
 29598 ;;		_ld_dword
 29599 ;;		_ld_word
 29600 ;;		_move_window
 29601 ;; This function is called by:
 29602 ;;		_f_mount
 29603 ;;		_f_open
 29604 ;;		_f_chdir
 29605 ;;		_f_getcwd
 29606 ;;		_f_opendir
 29607 ;;		_f_stat
 29608 ;;		_f_getfree
 29609 ;;		_f_unlink
 29610 ;;		_f_mkdir
 29611 ;;		_f_rename
 29612 ;; This function uses a non-reentrant model
 29613 ;;
 29614                           
 29615                           	psect	text74
 29616   010000                     __ptext74:
 29617                           	callstack 0
 29618   010000                     _mount_volume:
 29619                           	callstack 103
 29620   010000                     
 29621                           ;../fatfs/ff.c: 3387:  const TCHAR** path,;../fatfs/ff.c: 3388:  FATFS** rfs,;../fatfs/f
      +                          f.c: 3389:  BYTE mode;../fatfs/ff.c: 3391: {;../fatfs/ff.c: 3392:  int vol;;../fatfs/ff.
      +                          c: 3393:  FATFS *fs;;../fatfs/ff.c: 3394:  DSTATUS stat;;../fatfs/ff.c: 3395:  LBA_t bse
      +                          ct;;../fatfs/ff.c: 3396:  DWORD tsect, sysect, fasize, nclst, szbfat;;../fatfs/ff.c: 339
      +                          7:  WORD nrsv;;../fatfs/ff.c: 3398:  UINT fmt;;../fatfs/ff.c: 3402:  *rfs = 0;
 29622   010000  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 29623   010004  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 29624   010008  6ADE               	clrf	postinc2,c
 29625   01000A  6ADD               	clrf	postdec2,c
 29626   01000C                     
 29627                           ;../fatfs/ff.c: 3403:  vol = get_ldnumber(path);
 29628   01000C  C681  F504         	movff	mount_volume@path,get_ldnumber@path
 29629   010010  C682  F505         	movff	mount_volume@path+1,get_ldnumber@path+1
 29630   010014  EC82  F0D9         	call	_get_ldnumber	;wreg free
 29631   010018  C504  F692         	movff	?_get_ldnumber,mount_volume@vol
 29632   01001C  C505  F693         	movff	?_get_ldnumber+1,mount_volume@vol+1
 29633   010020                     
 29634                           ;../fatfs/ff.c: 3404:  if (vol < 0) return FR_INVALID_DRIVE;
 29635   010020  0106               	movlb	6	; () banked
 29636   010022  BF93               	btfsc	(mount_volume@vol+1)& (0+255),7,b
 29637   010024  EF18  F080         	goto	u30600
 29638   010028  EF16  F080         	goto	u30601
 29639   01002C                     u30601:
 29640   01002C  EF1B  F080         	goto	l22341
 29641   010030                     u30600:
 29642   010030                     
 29643                           ; BSR set to: 6
 29644   010030  0E0B               	movlw	11
 29645   010032  EF6B  F085         	goto	l1818
 29646   010036                     l22341:
 29647                           
 29648                           ; BSR set to: 6
 29649                           ;../fatfs/ff.c: 3407:  fs = FatFs[vol];
 29650   010036  90D8               	bcf	status,0,c
 29651   010038  3592               	rlcf	mount_volume@vol& (0+255),w,b
 29652   01003A  6ED9               	movwf	fsr2l,c
 29653   01003C  3593               	rlcf	(mount_volume@vol+1)& (0+255),w,b
 29654   01003E  6EDA               	movwf	fsr2h,c
 29655   010040  0EB7               	movlw	low _FatFs
 29656   010042  26D9               	addwf	fsr2l,f,c
 29657   010044  0E07               	movlw	high _FatFs
 29658   010046  22DA               	addwfc	fsr2h,f,c
 29659   010048  C4DE F6AD          	movff	postinc2,mount_volume@fs
 29660   01004C  C4DD F6AE          	movff	postdec2,mount_volume@fs+1
 29661   010050                     
 29662                           ; BSR set to: 6
 29663                           ;../fatfs/ff.c: 3408:  if (!fs) return FR_NOT_ENABLED;
 29664   010050  51AD               	movf	mount_volume@fs& (0+255),w,b
 29665   010052  11AE               	iorwf	(mount_volume@fs+1)& (0+255),w,b
 29666   010054  A4D8               	btfss	status,2,c
 29667   010056  EF2F  F080         	goto	u30611
 29668   01005A  EF31  F080         	goto	u30610
 29669   01005E                     u30611:
 29670   01005E  EF34  F080         	goto	l22349
 29671   010062                     u30610:
 29672   010062                     
 29673                           ; BSR set to: 6
 29674   010062  0E0C               	movlw	12
 29675   010064  EF6B  F085         	goto	l1818
 29676   010068                     l22349:
 29677                           
 29678                           ; BSR set to: 6
 29679                           ;../fatfs/ff.c: 3412:  *rfs = fs;
 29680   010068  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 29681   01006C  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 29682   010070  C6AD  F4DE         	movff	mount_volume@fs,postinc2
 29683   010074  C6AE  F4DD         	movff	mount_volume@fs+1,postdec2
 29684   010078                     
 29685                           ; BSR set to: 6
 29686                           ;../fatfs/ff.c: 3414:  mode &= (BYTE)~0x01;
 29687   010078  9185               	bcf	mount_volume@mode& (0+255),0,b
 29688   01007A                     
 29689                           ; BSR set to: 6
 29690                           ;../fatfs/ff.c: 3415:  if (fs->fs_type != 0) {
 29691   01007A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 29692   01007E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 29693   010082  50DF               	movf	indf2,w,c
 29694   010084  B4D8               	btfsc	status,2,c
 29695   010086  EF47  F080         	goto	u30621
 29696   01008A  EF49  F080         	goto	u30620
 29697   01008E                     u30621:
 29698   01008E  EF70  F080         	goto	l22371
 29699   010092                     u30620:
 29700   010092                     
 29701                           ; BSR set to: 6
 29702                           ;../fatfs/ff.c: 3416:   stat = disk_status(fs->pdrv);
 29703   010092  EE20 F001          	lfsr	2,1
 29704   010096  51AD               	movf	mount_volume@fs& (0+255),w,b
 29705   010098  26D9               	addwf	fsr2l,f,c
 29706   01009A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29707   01009C  22DA               	addwfc	fsr2h,f,c
 29708   01009E  50DF               	movf	indf2,w,c
 29709   0100A0  EC42  F0FE         	call	_disk_status
 29710   0100A4  0106               	movlb	6	; () banked
 29711   0100A6  6FA2               	movwf	mount_volume@stat& (0+255),b
 29712   0100A8                     
 29713                           ; BSR set to: 6
 29714                           ;../fatfs/ff.c: 3418:    if (!0 && mode && (stat & 0x04)) {
 29715   0100A8  B1A2               	btfsc	mount_volume@stat& (0+255),0,b
 29716   0100AA  EF59  F080         	goto	u30631
 29717   0100AE  EF5B  F080         	goto	u30630
 29718   0100B2                     u30631:
 29719   0100B2  EF70  F080         	goto	l22371
 29720   0100B6                     u30630:
 29721   0100B6                     
 29722                           ; BSR set to: 6
 29723   0100B6  5185               	movf	mount_volume@mode& (0+255),w,b
 29724   0100B8  B4D8               	btfsc	status,2,c
 29725   0100BA  EF61  F080         	goto	u30641
 29726   0100BE  EF63  F080         	goto	u30640
 29727   0100C2                     u30641:
 29728   0100C2  EF6D  F080         	goto	l22367
 29729   0100C6                     u30640:
 29730   0100C6                     
 29731                           ; BSR set to: 6
 29732   0100C6  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 29733   0100C8  EF68  F080         	goto	u30651
 29734   0100CC  EF6A  F080         	goto	u30650
 29735   0100D0                     u30651:
 29736   0100D0  EF6D  F080         	goto	l22367
 29737   0100D4                     u30650:
 29738   0100D4                     l22363:
 29739                           
 29740                           ; BSR set to: 6
 29741                           ;../fatfs/ff.c: 3419:     return FR_WRITE_PROTECTED;
 29742   0100D4  0E0A               	movlw	10
 29743   0100D6  EF6B  F085         	goto	l1818
 29744   0100DA                     l22367:
 29745                           
 29746                           ; BSR set to: 6
 29747                           ;../fatfs/ff.c: 3421:    return FR_OK;
 29748   0100DA  0E00               	movlw	0
 29749   0100DC  EF6B  F085         	goto	l1818
 29750   0100E0                     l22371:
 29751                           
 29752                           ; BSR set to: 6
 29753                           ;../fatfs/ff.c: 3428:  fs->fs_type = 0;
 29754   0100E0  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 29755   0100E4  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 29756   0100E8  6ADF               	clrf	indf2,c
 29757   0100EA                     
 29758                           ; BSR set to: 6
 29759                           ;../fatfs/ff.c: 3429:  stat = disk_initialize(fs->pdrv);
 29760   0100EA  EE20 F001          	lfsr	2,1
 29761   0100EE  51AD               	movf	mount_volume@fs& (0+255),w,b
 29762   0100F0  26D9               	addwf	fsr2l,f,c
 29763   0100F2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29764   0100F4  22DA               	addwfc	fsr2h,f,c
 29765   0100F6  50DF               	movf	indf2,w,c
 29766   0100F8  EC54  F0DA         	call	_disk_initialize
 29767   0100FC  0106               	movlb	6	; () banked
 29768   0100FE  6FA2               	movwf	mount_volume@stat& (0+255),b
 29769   010100                     
 29770                           ; BSR set to: 6
 29771                           ;../fatfs/ff.c: 3430:  if (stat & 0x01) {
 29772   010100  A1A2               	btfss	mount_volume@stat& (0+255),0,b
 29773   010102  EF85  F080         	goto	u30661
 29774   010106  EF87  F080         	goto	u30660
 29775   01010A                     u30661:
 29776   01010A  EF8A  F080         	goto	l22381
 29777   01010E                     u30660:
 29778   01010E                     
 29779                           ; BSR set to: 6
 29780                           ;../fatfs/ff.c: 3431:   return FR_NOT_READY;
 29781   01010E  0E03               	movlw	3
 29782   010110  EF6B  F085         	goto	l1818
 29783   010114                     l22381:
 29784                           
 29785                           ; BSR set to: 6
 29786   010114  5185               	movf	mount_volume@mode& (0+255),w,b
 29787   010116  B4D8               	btfsc	status,2,c
 29788   010118  EF90  F080         	goto	u30671
 29789   01011C  EF92  F080         	goto	u30670
 29790   010120                     u30671:
 29791   010120  EF9B  F080         	goto	l22389
 29792   010124                     u30670:
 29793   010124                     
 29794                           ; BSR set to: 6
 29795   010124  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 29796   010126  EF97  F080         	goto	u30681
 29797   01012A  EF99  F080         	goto	u30680
 29798   01012E                     u30681:
 29799   01012E  EF9B  F080         	goto	l22389
 29800   010132                     u30680:
 29801   010132  EF6A  F080         	goto	l22363
 29802   010136                     l22389:
 29803                           
 29804                           ; BSR set to: 6
 29805                           ;../fatfs/ff.c: 3442:  fmt = find_volume(fs, 0);
 29806   010136  C6AD  F632         	movff	mount_volume@fs,find_volume@fs
 29807   01013A  C6AE  F633         	movff	mount_volume@fs+1,find_volume@fs+1
 29808   01013E  0E00               	movlw	0
 29809   010140  6F35               	movwf	(find_volume@part+1)& (0+255),b
 29810   010142  0E00               	movlw	0
 29811   010144  6F34               	movwf	find_volume@part& (0+255),b
 29812   010146  EC87  F0D2         	call	_find_volume	;wreg free
 29813   01014A  C632  F6AB         	movff	?_find_volume,mount_volume@fmt
 29814   01014E  C633  F6AC         	movff	?_find_volume+1,mount_volume@fmt+1
 29815   010152                     
 29816                           ;../fatfs/ff.c: 3444:  if (fmt == 4) return FR_DISK_ERR;
 29817   010152  0E04               	movlw	4
 29818   010154  0106               	movlb	6	; () banked
 29819   010156  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 29820   010158  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 29821   01015A  A4D8               	btfss	status,2,c
 29822   01015C  EFB2  F080         	goto	u30691
 29823   010160  EFB4  F080         	goto	u30690
 29824   010164                     u30691:
 29825   010164  EFB7  F080         	goto	l22397
 29826   010168                     u30690:
 29827   010168                     
 29828                           ; BSR set to: 6
 29829   010168  0E01               	movlw	1
 29830   01016A  EF6B  F085         	goto	l1818
 29831   01016E                     l22397:
 29832                           
 29833                           ; BSR set to: 6
 29834                           ;../fatfs/ff.c: 3445:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 29835   01016E  51AC               	movf	(mount_volume@fmt+1)& (0+255),w,b
 29836   010170  E109               	bnz	u30700
 29837   010172  0E02               	movlw	2
 29838   010174  5DAB               	subwf	mount_volume@fmt& (0+255),w,b
 29839   010176  A0D8               	btfss	status,0,c
 29840   010178  EFC0  F080         	goto	u30701
 29841   01017C  EFC2  F080         	goto	u30700
 29842   010180                     u30701:
 29843   010180  EFC5  F080         	goto	l22403
 29844   010184                     u30700:
 29845   010184                     l22399:
 29846   010184  0E0D               	movlw	13
 29847   010186  EF6B  F085         	goto	l1818
 29848   01018A                     l22403:
 29849                           
 29850                           ; BSR set to: 6
 29851                           ;../fatfs/ff.c: 3446:  bsect = fs->winsect;
 29852   01018A  EE20 F030          	lfsr	2,48
 29853   01018E  51AD               	movf	mount_volume@fs& (0+255),w,b
 29854   010190  26D9               	addwf	fsr2l,f,c
 29855   010192  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29856   010194  22DA               	addwfc	fsr2h,f,c
 29857   010196  C4DE F69E          	movff	postinc2,mount_volume@bsect
 29858   01019A  C4DE F69F          	movff	postinc2,mount_volume@bsect+1
 29859   01019E  C4DE F6A0          	movff	postinc2,mount_volume@bsect+2
 29860   0101A2  C4DE F6A1          	movff	postinc2,mount_volume@bsect+3
 29861   0101A6                     
 29862                           ; BSR set to: 6
 29863                           ;../fatfs/ff.c: 3513:  {;../fatfs/ff.c: 3514:   if (ld_word(fs->win + 11) != ((UINT)512)
      +                          ) return FR_NO_FILESYSTEM;
 29864   0101A6  0E3F               	movlw	63
 29865   0101A8  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29866   0101AA  6E04               	movwf	ld_word@ptr^(0+1280),c
 29867   0101AC  0E00               	movlw	0
 29868   0101AE  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29869   0101B0  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 29870   0101B2  EC4C  F0FF         	call	_ld_word	;wreg free
 29871   0101B6  0E02               	movlw	2
 29872   0101B8  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 29873   0101BA  1004               	iorwf	?_ld_word^(0+1280),w,c
 29874   0101BC  B4D8               	btfsc	status,2,c
 29875   0101BE  EFE3  F080         	goto	u30711
 29876   0101C2  EFE5  F080         	goto	u30710
 29877   0101C6                     u30711:
 29878   0101C6  EFE7  F080         	goto	l22411
 29879   0101CA                     u30710:
 29880   0101CA  EFC2  F080         	goto	l22399
 29881   0101CE                     l22411:
 29882                           
 29883                           ;../fatfs/ff.c: 3516:   fasize = ld_word(fs->win + 22);
 29884   0101CE  0E4A               	movlw	74
 29885   0101D0  0106               	movlb	6	; () banked
 29886   0101D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29887   0101D4  6E04               	movwf	ld_word@ptr^(0+1280),c
 29888   0101D6  0E00               	movlw	0
 29889   0101D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29890   0101DA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 29891   0101DC  EC4C  F0FF         	call	_ld_word	;wreg free
 29892   0101E0  C504  F6A7         	movff	?_ld_word,mount_volume@fasize
 29893   0101E4  C505  F6A8         	movff	?_ld_word+1,mount_volume@fasize+1
 29894   0101E8  0106               	movlb	6	; () banked
 29895   0101EA  6BA9               	clrf	(mount_volume@fasize+2)& (0+255),b
 29896   0101EC  6BAA               	clrf	(mount_volume@fasize+3)& (0+255),b
 29897   0101EE                     
 29898                           ; BSR set to: 6
 29899                           ;../fatfs/ff.c: 3517:   if (fasize == 0) fasize = ld_dword(fs->win + 36);
 29900   0101EE  51A7               	movf	mount_volume@fasize& (0+255),w,b
 29901   0101F0  11A8               	iorwf	(mount_volume@fasize+1)& (0+255),w,b
 29902   0101F2  11A9               	iorwf	(mount_volume@fasize+2)& (0+255),w,b
 29903   0101F4  11AA               	iorwf	(mount_volume@fasize+3)& (0+255),w,b
 29904   0101F6  A4D8               	btfss	status,2,c
 29905   0101F8  EF00  F081         	goto	u30721
 29906   0101FC  EF02  F081         	goto	u30720
 29907   010200                     u30721:
 29908   010200  EF12  F081         	goto	l22417
 29909   010204                     u30720:
 29910   010204                     
 29911                           ; BSR set to: 6
 29912   010204  0E58               	movlw	88
 29913   010206  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29914   010208  6E04               	movwf	ld_dword@ptr^(0+1280),c
 29915   01020A  0E00               	movlw	0
 29916   01020C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29917   01020E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 29918   010210  ECC7  F0F2         	call	_ld_dword	;wreg free
 29919   010214  C504  F6A7         	movff	?_ld_dword,mount_volume@fasize
 29920   010218  C505  F6A8         	movff	?_ld_dword+1,mount_volume@fasize+1
 29921   01021C  C506  F6A9         	movff	?_ld_dword+2,mount_volume@fasize+2
 29922   010220  C507  F6AA         	movff	?_ld_dword+3,mount_volume@fasize+3
 29923   010224                     l22417:
 29924                           
 29925                           ;../fatfs/ff.c: 3518:   fs->fsize = fasize;
 29926   010224  0106               	movlb	6	; () banked
 29927   010226  EE20 F01C          	lfsr	2,28
 29928   01022A  51AD               	movf	mount_volume@fs& (0+255),w,b
 29929   01022C  26D9               	addwf	fsr2l,f,c
 29930   01022E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29931   010230  22DA               	addwfc	fsr2h,f,c
 29932   010232  C6A7  F4DE         	movff	mount_volume@fasize,postinc2
 29933   010236  C6A8  F4DE         	movff	mount_volume@fasize+1,postinc2
 29934   01023A  C6A9  F4DE         	movff	mount_volume@fasize+2,postinc2
 29935   01023E  C6AA  F4DE         	movff	mount_volume@fasize+3,postinc2
 29936   010242                     
 29937                           ; BSR set to: 6
 29938                           ;../fatfs/ff.c: 3520:   fs->n_fats = fs->win[16];
 29939   010242  EE20 F044          	lfsr	2,68
 29940   010246  51AD               	movf	mount_volume@fs& (0+255),w,b
 29941   010248  26D9               	addwf	fsr2l,f,c
 29942   01024A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29943   01024C  22DA               	addwfc	fsr2h,f,c
 29944   01024E  EE10 F003          	lfsr	1,3
 29945   010252  51AD               	movf	mount_volume@fs& (0+255),w,b
 29946   010254  26E1               	addwf	fsr1l,f,c
 29947   010256  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29948   010258  22E2               	addwfc	fsr1h,f,c
 29949   01025A  C4DF F4E7          	movff	indf2,indf1
 29950   01025E                     
 29951                           ; BSR set to: 6
 29952                           ;../fatfs/ff.c: 3521:   if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
 29953   01025E  EE20 F003          	lfsr	2,3
 29954   010262  51AD               	movf	mount_volume@fs& (0+255),w,b
 29955   010264  26D9               	addwf	fsr2l,f,c
 29956   010266  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29957   010268  22DA               	addwfc	fsr2h,f,c
 29958   01026A  04DE               	decf	postinc2,w,c
 29959   01026C  B4D8               	btfsc	status,2,c
 29960   01026E  EF3B  F081         	goto	u30731
 29961   010272  EF3D  F081         	goto	u30730
 29962   010276                     u30731:
 29963   010276  EF4E  F081         	goto	l22429
 29964   01027A                     u30730:
 29965   01027A                     
 29966                           ; BSR set to: 6
 29967   01027A  EE20 F003          	lfsr	2,3
 29968   01027E  51AD               	movf	mount_volume@fs& (0+255),w,b
 29969   010280  26D9               	addwf	fsr2l,f,c
 29970   010282  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29971   010284  22DA               	addwfc	fsr2h,f,c
 29972   010286  0E02               	movlw	2
 29973   010288  18DE               	xorwf	postinc2,w,c
 29974   01028A  B4D8               	btfsc	status,2,c
 29975   01028C  EF4A  F081         	goto	u30741
 29976   010290  EF4C  F081         	goto	u30740
 29977   010294                     u30741:
 29978   010294  EF4E  F081         	goto	l22429
 29979   010298                     u30740:
 29980   010298  EFC2  F080         	goto	l22399
 29981   01029C                     l22429:
 29982                           
 29983                           ; BSR set to: 6
 29984                           ;../fatfs/ff.c: 3522:   fasize *= fs->n_fats;
 29985   01029C  C6A7  F504         	movff	mount_volume@fasize,___lmul@multiplier
 29986   0102A0  C6A8  F505         	movff	mount_volume@fasize+1,___lmul@multiplier+1
 29987   0102A4  C6A9  F506         	movff	mount_volume@fasize+2,___lmul@multiplier+2
 29988   0102A8  C6AA  F507         	movff	mount_volume@fasize+3,___lmul@multiplier+3
 29989   0102AC  EE20 F003          	lfsr	2,3
 29990   0102B0  51AD               	movf	mount_volume@fs& (0+255),w,b
 29991   0102B2  26D9               	addwf	fsr2l,f,c
 29992   0102B4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29993   0102B6  22DA               	addwfc	fsr2h,f,c
 29994   0102B8  50DF               	movf	indf2,w,c
 29995   0102BA  6F86               	movwf	??_mount_volume& (0+255),b
 29996   0102BC  5186               	movf	??_mount_volume& (0+255),w,b
 29997   0102BE  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 29998   0102C0  6A09               	clrf	(___lmul@multiplicand+1)^(0+1280),c
 29999   0102C2  6A0A               	clrf	(___lmul@multiplicand+2)^(0+1280),c
 30000   0102C4  6A0B               	clrf	(___lmul@multiplicand+3)^(0+1280),c
 30001   0102C6  EC13  F0FB         	call	___lmul	;wreg free
 30002   0102CA  C504  F6A7         	movff	?___lmul,mount_volume@fasize
 30003   0102CE  C505  F6A8         	movff	?___lmul+1,mount_volume@fasize+1
 30004   0102D2  C506  F6A9         	movff	?___lmul+2,mount_volume@fasize+2
 30005   0102D6  C507  F6AA         	movff	?___lmul+3,mount_volume@fasize+3
 30006   0102DA                     
 30007                           ;../fatfs/ff.c: 3524:   fs->csize = fs->win[13];
 30008   0102DA  0106               	movlb	6	; () banked
 30009   0102DC  EE20 F041          	lfsr	2,65
 30010   0102E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30011   0102E2  26D9               	addwf	fsr2l,f,c
 30012   0102E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30013   0102E6  22DA               	addwfc	fsr2h,f,c
 30014   0102E8  50DF               	movf	indf2,w,c
 30015   0102EA  6F86               	movwf	??_mount_volume& (0+255),b
 30016   0102EC  6B87               	clrf	(??_mount_volume+1)& (0+255),b
 30017   0102EE  EE20 F00A          	lfsr	2,10
 30018   0102F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30019   0102F4  26D9               	addwf	fsr2l,f,c
 30020   0102F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30021   0102F8  22DA               	addwfc	fsr2h,f,c
 30022   0102FA  C686  F4DE         	movff	??_mount_volume,postinc2
 30023   0102FE  C687  F4DD         	movff	??_mount_volume+1,postdec2
 30024   010302                     
 30025                           ; BSR set to: 6
 30026                           ;../fatfs/ff.c: 3525:   if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_N
      +                          O_FILESYSTEM;
 30027   010302  EE20 F00A          	lfsr	2,10
 30028   010306  51AD               	movf	mount_volume@fs& (0+255),w,b
 30029   010308  26D9               	addwf	fsr2l,f,c
 30030   01030A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30031   01030C  22DA               	addwfc	fsr2h,f,c
 30032   01030E  50DE               	movf	postinc2,w,c
 30033   010310  10DE               	iorwf	postinc2,w,c
 30034   010312  B4D8               	btfsc	status,2,c
 30035   010314  EF8E  F081         	goto	u30751
 30036   010318  EF90  F081         	goto	u30750
 30037   01031C                     u30751:
 30038   01031C  EFC2  F080         	goto	l22399
 30039   010320                     u30750:
 30040   010320                     
 30041                           ; BSR set to: 6
 30042   010320  EE20 F00A          	lfsr	2,10
 30043   010324  51AD               	movf	mount_volume@fs& (0+255),w,b
 30044   010326  26D9               	addwf	fsr2l,f,c
 30045   010328  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30046   01032A  22DA               	addwfc	fsr2h,f,c
 30047   01032C  C4DE F686          	movff	postinc2,??_mount_volume
 30048   010330  C4DD F687          	movff	postdec2,??_mount_volume+1
 30049   010334  EE20 F00A          	lfsr	2,10
 30050   010338  51AD               	movf	mount_volume@fs& (0+255),w,b
 30051   01033A  26D9               	addwf	fsr2l,f,c
 30052   01033C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30053   01033E  22DA               	addwfc	fsr2h,f,c
 30054   010340  C4DE F688          	movff	postinc2,??_mount_volume+2
 30055   010344  C4DD F689          	movff	postdec2,??_mount_volume+3
 30056   010348  0EFF               	movlw	255
 30057   01034A  2588               	addwf	(??_mount_volume+2)& (0+255),w,b
 30058   01034C  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30059   01034E  0EFF               	movlw	255
 30060   010350  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 30061   010352  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30062   010354  5186               	movf	??_mount_volume& (0+255),w,b
 30063   010356  158A               	andwf	(??_mount_volume+4)& (0+255),w,b
 30064   010358  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30065   01035A  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 30066   01035C  158B               	andwf	(??_mount_volume+5)& (0+255),w,b
 30067   01035E  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30068   010360  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 30069   010362  118D               	iorwf	(??_mount_volume+7)& (0+255),w,b
 30070   010364  B4D8               	btfsc	status,2,c
 30071   010366  EFB7  F081         	goto	u30761
 30072   01036A  EFB9  F081         	goto	u30760
 30073   01036E                     u30761:
 30074   01036E  EFBB  F081         	goto	l22441
 30075   010372                     u30760:
 30076   010372  EFC2  F080         	goto	l22399
 30077   010376                     l22441:
 30078                           
 30079                           ; BSR set to: 6
 30080                           ;../fatfs/ff.c: 3527:   fs->n_rootdir = ld_word(fs->win + 17);
 30081   010376  0E45               	movlw	69
 30082   010378  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30083   01037A  6E04               	movwf	ld_word@ptr^(0+1280),c
 30084   01037C  0E00               	movlw	0
 30085   01037E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30086   010380  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30087   010382  EC4C  F0FF         	call	_ld_word	;wreg free
 30088   010386  0106               	movlb	6	; () banked
 30089   010388  EE20 F008          	lfsr	2,8
 30090   01038C  51AD               	movf	mount_volume@fs& (0+255),w,b
 30091   01038E  26D9               	addwf	fsr2l,f,c
 30092   010390  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30093   010392  22DA               	addwfc	fsr2h,f,c
 30094   010394  C504  F4DE         	movff	?_ld_word,postinc2
 30095   010398  C505  F4DD         	movff	?_ld_word+1,postdec2
 30096   01039C                     
 30097                           ; BSR set to: 6
 30098                           ;../fatfs/ff.c: 3528:   if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
 30099   01039C  EE20 F008          	lfsr	2,8
 30100   0103A0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30101   0103A2  26D9               	addwf	fsr2l,f,c
 30102   0103A4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30103   0103A6  22DA               	addwfc	fsr2h,f,c
 30104   0103A8  C4DE F686          	movff	postinc2,??_mount_volume
 30105   0103AC  C4DD F687          	movff	postdec2,??_mount_volume+1
 30106   0103B0  0E0F               	movlw	15
 30107   0103B2  1786               	andwf	??_mount_volume& (0+255),f,b
 30108   0103B4  0E00               	movlw	0
 30109   0103B6  1787               	andwf	(??_mount_volume+1)& (0+255),f,b
 30110   0103B8  5186               	movf	??_mount_volume& (0+255),w,b
 30111   0103BA  1187               	iorwf	(??_mount_volume+1)& (0+255),w,b
 30112   0103BC  B4D8               	btfsc	status,2,c
 30113   0103BE  EFE3  F081         	goto	u30771
 30114   0103C2  EFE5  F081         	goto	u30770
 30115   0103C6                     u30771:
 30116   0103C6  EFE7  F081         	goto	l22449
 30117   0103CA                     u30770:
 30118   0103CA  EFC2  F080         	goto	l22399
 30119   0103CE                     l22449:
 30120                           
 30121                           ; BSR set to: 6
 30122                           ;../fatfs/ff.c: 3530:   tsect = ld_word(fs->win + 19);
 30123   0103CE  0E47               	movlw	71
 30124   0103D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30125   0103D2  6E04               	movwf	ld_word@ptr^(0+1280),c
 30126   0103D4  0E00               	movlw	0
 30127   0103D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30128   0103D8  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30129   0103DA  EC4C  F0FF         	call	_ld_word	;wreg free
 30130   0103DE  C504  F69A         	movff	?_ld_word,mount_volume@tsect
 30131   0103E2  C505  F69B         	movff	?_ld_word+1,mount_volume@tsect+1
 30132   0103E6  0106               	movlb	6	; () banked
 30133   0103E8  6B9C               	clrf	(mount_volume@tsect+2)& (0+255),b
 30134   0103EA  6B9D               	clrf	(mount_volume@tsect+3)& (0+255),b
 30135   0103EC                     
 30136                           ; BSR set to: 6
 30137                           ;../fatfs/ff.c: 3531:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 30138   0103EC  519A               	movf	mount_volume@tsect& (0+255),w,b
 30139   0103EE  119B               	iorwf	(mount_volume@tsect+1)& (0+255),w,b
 30140   0103F0  119C               	iorwf	(mount_volume@tsect+2)& (0+255),w,b
 30141   0103F2  119D               	iorwf	(mount_volume@tsect+3)& (0+255),w,b
 30142   0103F4  A4D8               	btfss	status,2,c
 30143   0103F6  EFFF  F081         	goto	u30781
 30144   0103FA  EF01  F082         	goto	u30780
 30145   0103FE                     u30781:
 30146   0103FE  EF11  F082         	goto	l1834
 30147   010402                     u30780:
 30148   010402                     
 30149                           ; BSR set to: 6
 30150   010402  0E54               	movlw	84
 30151   010404  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30152   010406  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30153   010408  0E00               	movlw	0
 30154   01040A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30155   01040C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30156   01040E  ECC7  F0F2         	call	_ld_dword	;wreg free
 30157   010412  C504  F69A         	movff	?_ld_dword,mount_volume@tsect
 30158   010416  C505  F69B         	movff	?_ld_dword+1,mount_volume@tsect+1
 30159   01041A  C506  F69C         	movff	?_ld_dword+2,mount_volume@tsect+2
 30160   01041E  C507  F69D         	movff	?_ld_dword+3,mount_volume@tsect+3
 30161   010422                     l1834:
 30162                           
 30163                           ;../fatfs/ff.c: 3533:   nrsv = ld_word(fs->win + 14);
 30164   010422  0E42               	movlw	66
 30165   010424  0106               	movlb	6	; () banked
 30166   010426  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30167   010428  6E04               	movwf	ld_word@ptr^(0+1280),c
 30168   01042A  0E00               	movlw	0
 30169   01042C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30170   01042E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30171   010430  EC4C  F0FF         	call	_ld_word	;wreg free
 30172   010434  C504  F698         	movff	?_ld_word,mount_volume@nrsv
 30173   010438  C505  F699         	movff	?_ld_word+1,mount_volume@nrsv+1
 30174   01043C                     
 30175                           ;../fatfs/ff.c: 3534:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 30176   01043C  0106               	movlb	6	; () banked
 30177   01043E  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30178   010440  1199               	iorwf	(mount_volume@nrsv+1)& (0+255),w,b
 30179   010442  A4D8               	btfss	status,2,c
 30180   010444  EF26  F082         	goto	u30791
 30181   010448  EF28  F082         	goto	u30790
 30182   01044C                     u30791:
 30183   01044C  EF2A  F082         	goto	l22461
 30184   010450                     u30790:
 30185   010450  EFC2  F080         	goto	l22399
 30186   010454                     l22461:
 30187                           
 30188                           ; BSR set to: 6
 30189                           ;../fatfs/ff.c: 3537:   sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 30190   010454  EE20 F008          	lfsr	2,8
 30191   010458  51AD               	movf	mount_volume@fs& (0+255),w,b
 30192   01045A  26D9               	addwf	fsr2l,f,c
 30193   01045C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30194   01045E  22DA               	addwfc	fsr2h,f,c
 30195   010460  C4DE F686          	movff	postinc2,??_mount_volume
 30196   010464  C4DD F687          	movff	postdec2,??_mount_volume+1
 30197   010468  0E04               	movlw	4
 30198   01046A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30199   01046C                     u30805:
 30200   01046C  90D8               	bcf	status,0,c
 30201   01046E  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 30202   010470  3386               	rrcf	??_mount_volume& (0+255),f,b
 30203   010472  2F88               	decfsz	(??_mount_volume+2)& (0+255),f,b
 30204   010474  EF36  F082         	goto	u30805
 30205   010478  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30206   01047A  2586               	addwf	??_mount_volume& (0+255),w,b
 30207   01047C  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30208   01047E  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 30209   010480  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 30210   010482  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30211   010484  6B8B               	clrf	(??_mount_volume+5)& (0+255),b
 30212   010486  B0D8               	btfsc	status,0,c
 30213   010488  2B8B               	incf	(??_mount_volume+5)& (0+255),f,b
 30214   01048A  6B8C               	clrf	(??_mount_volume+6)& (0+255),b
 30215   01048C  51A7               	movf	mount_volume@fasize& (0+255),w,b
 30216   01048E  2589               	addwf	(??_mount_volume+3)& (0+255),w,b
 30217   010490  6F94               	movwf	mount_volume@sysect& (0+255),b
 30218   010492  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 30219   010494  218A               	addwfc	(??_mount_volume+4)& (0+255),w,b
 30220   010496  6F95               	movwf	(mount_volume@sysect+1)& (0+255),b
 30221   010498  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 30222   01049A  218B               	addwfc	(??_mount_volume+5)& (0+255),w,b
 30223   01049C  6F96               	movwf	(mount_volume@sysect+2)& (0+255),b
 30224   01049E  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 30225   0104A0  218C               	addwfc	(??_mount_volume+6)& (0+255),w,b
 30226   0104A2  6F97               	movwf	(mount_volume@sysect+3)& (0+255),b
 30227   0104A4                     
 30228                           ; BSR set to: 6
 30229                           ;../fatfs/ff.c: 3538:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 30230   0104A4  5194               	movf	mount_volume@sysect& (0+255),w,b
 30231   0104A6  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 30232   0104A8  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30233   0104AA  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 30234   0104AC  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30235   0104AE  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 30236   0104B0  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30237   0104B2  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 30238   0104B4  B0D8               	btfsc	status,0,c
 30239   0104B6  EF5F  F082         	goto	u30811
 30240   0104BA  EF61  F082         	goto	u30810
 30241   0104BE                     u30811:
 30242   0104BE  EF63  F082         	goto	l22469
 30243   0104C2                     u30810:
 30244   0104C2  EFC2  F080         	goto	l22399
 30245   0104C6                     l22469:
 30246                           
 30247                           ; BSR set to: 6
 30248                           ;../fatfs/ff.c: 3539:   nclst = (tsect - sysect) / fs->csize;
 30249   0104C6  5194               	movf	mount_volume@sysect& (0+255),w,b
 30250   0104C8  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 30251   0104CA  6E04               	movwf	___lldiv@dividend^(0+1280),c
 30252   0104CC  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30253   0104CE  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 30254   0104D0  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 30255   0104D2  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30256   0104D4  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 30257   0104D6  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 30258   0104D8  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30259   0104DA  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 30260   0104DC  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 30261   0104DE  EE20 F00A          	lfsr	2,10
 30262   0104E2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30263   0104E4  26D9               	addwf	fsr2l,f,c
 30264   0104E6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30265   0104E8  22DA               	addwfc	fsr2h,f,c
 30266   0104EA  C4DE F686          	movff	postinc2,??_mount_volume
 30267   0104EE  C4DD F687          	movff	postdec2,??_mount_volume+1
 30268   0104F2  C686  F508         	movff	??_mount_volume,___lldiv@divisor
 30269   0104F6  C687  F509         	movff	??_mount_volume+1,___lldiv@divisor+1
 30270   0104FA  6A0A               	clrf	(___lldiv@divisor+2)^(0+1280),c
 30271   0104FC  6A0B               	clrf	(___lldiv@divisor+3)^(0+1280),c
 30272   0104FE  EC7E  F0F5         	call	___lldiv	;wreg free
 30273   010502  C504  F6A3         	movff	?___lldiv,mount_volume@nclst
 30274   010506  C505  F6A4         	movff	?___lldiv+1,mount_volume@nclst+1
 30275   01050A  C506  F6A5         	movff	?___lldiv+2,mount_volume@nclst+2
 30276   01050E  C507  F6A6         	movff	?___lldiv+3,mount_volume@nclst+3
 30277   010512                     
 30278                           ;../fatfs/ff.c: 3540:   if (nclst == 0) return FR_NO_FILESYSTEM;
 30279   010512  0106               	movlb	6	; () banked
 30280   010514  51A3               	movf	mount_volume@nclst& (0+255),w,b
 30281   010516  11A4               	iorwf	(mount_volume@nclst+1)& (0+255),w,b
 30282   010518  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30283   01051A  11A6               	iorwf	(mount_volume@nclst+3)& (0+255),w,b
 30284   01051C  A4D8               	btfss	status,2,c
 30285   01051E  EF93  F082         	goto	u30821
 30286   010522  EF95  F082         	goto	u30820
 30287   010526                     u30821:
 30288   010526  EF97  F082         	goto	l22477
 30289   01052A                     u30820:
 30290   01052A  EFC2  F080         	goto	l22399
 30291   01052E                     l22477:
 30292                           
 30293                           ; BSR set to: 6
 30294                           ;../fatfs/ff.c: 3541:   fmt = 0;
 30295   01052E  0E00               	movlw	0
 30296   010530  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30297   010532  0E00               	movlw	0
 30298   010534  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30299   010536                     
 30300                           ; BSR set to: 6
 30301                           ;../fatfs/ff.c: 3542:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 30302   010536  0EF6               	movlw	246
 30303   010538  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30304   01053A  0EFF               	movlw	255
 30305   01053C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30306   01053E  0EFF               	movlw	255
 30307   010540  59A5               	subwfb	(mount_volume@nclst+2)& (0+255),w,b
 30308   010542  0E0F               	movlw	15
 30309   010544  59A6               	subwfb	(mount_volume@nclst+3)& (0+255),w,b
 30310   010546  B0D8               	btfsc	status,0,c
 30311   010548  EFA8  F082         	goto	u30831
 30312   01054C  EFAA  F082         	goto	u30830
 30313   010550                     u30831:
 30314   010550  EFAE  F082         	goto	l22483
 30315   010554                     u30830:
 30316   010554                     
 30317                           ; BSR set to: 6
 30318   010554  0E00               	movlw	0
 30319   010556  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30320   010558  0E03               	movlw	3
 30321   01055A  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30322   01055C                     l22483:
 30323                           
 30324                           ; BSR set to: 6
 30325                           ;../fatfs/ff.c: 3543:   if (nclst <= 0xFFF5) fmt = 2;
 30326   01055C  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 30327   01055E  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30328   010560  E109               	bnz	u30841
 30329   010562  0EF6               	movlw	246
 30330   010564  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30331   010566  0EFF               	movlw	255
 30332   010568  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30333   01056A  B0D8               	btfsc	status,0,c
 30334   01056C  EFBA  F082         	goto	u30841
 30335   010570  EFBC  F082         	goto	u30840
 30336   010574                     u30841:
 30337   010574  EFC0  F082         	goto	l22487
 30338   010578                     u30840:
 30339   010578                     
 30340                           ; BSR set to: 6
 30341   010578  0E00               	movlw	0
 30342   01057A  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30343   01057C  0E02               	movlw	2
 30344   01057E  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30345   010580                     l22487:
 30346                           
 30347                           ; BSR set to: 6
 30348                           ;../fatfs/ff.c: 3544:   if (nclst <= 0xFF5) fmt = 1;
 30349   010580  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 30350   010582  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30351   010584  E109               	bnz	u30851
 30352   010586  0EF6               	movlw	246
 30353   010588  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30354   01058A  0E0F               	movlw	15
 30355   01058C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30356   01058E  B0D8               	btfsc	status,0,c
 30357   010590  EFCC  F082         	goto	u30851
 30358   010594  EFCE  F082         	goto	u30850
 30359   010598                     u30851:
 30360   010598  EFD2  F082         	goto	l22491
 30361   01059C                     u30850:
 30362   01059C                     
 30363                           ; BSR set to: 6
 30364   01059C  0E00               	movlw	0
 30365   01059E  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30366   0105A0  0E01               	movlw	1
 30367   0105A2  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30368   0105A4                     l22491:
 30369                           
 30370                           ; BSR set to: 6
 30371                           ;../fatfs/ff.c: 3545:   if (fmt == 0) return FR_NO_FILESYSTEM;
 30372   0105A4  51AB               	movf	mount_volume@fmt& (0+255),w,b
 30373   0105A6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30374   0105A8  A4D8               	btfss	status,2,c
 30375   0105AA  EFD9  F082         	goto	u30861
 30376   0105AE  EFDB  F082         	goto	u30860
 30377   0105B2                     u30861:
 30378   0105B2  EFDD  F082         	goto	l22497
 30379   0105B6                     u30860:
 30380   0105B6  EFC2  F080         	goto	l22399
 30381   0105BA                     l22497:
 30382                           
 30383                           ; BSR set to: 6
 30384                           ;../fatfs/ff.c: 3548:   fs->n_fatent = nclst + 2;
 30385   0105BA  0E02               	movlw	2
 30386   0105BC  25A3               	addwf	mount_volume@nclst& (0+255),w,b
 30387   0105BE  6F86               	movwf	??_mount_volume& (0+255),b
 30388   0105C0  0E00               	movlw	0
 30389   0105C2  21A4               	addwfc	(mount_volume@nclst+1)& (0+255),w,b
 30390   0105C4  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30391   0105C6  0E00               	movlw	0
 30392   0105C8  21A5               	addwfc	(mount_volume@nclst+2)& (0+255),w,b
 30393   0105CA  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30394   0105CC  0E00               	movlw	0
 30395   0105CE  21A6               	addwfc	(mount_volume@nclst+3)& (0+255),w,b
 30396   0105D0  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30397   0105D2  EE20 F018          	lfsr	2,24
 30398   0105D6  51AD               	movf	mount_volume@fs& (0+255),w,b
 30399   0105D8  26D9               	addwf	fsr2l,f,c
 30400   0105DA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30401   0105DC  22DA               	addwfc	fsr2h,f,c
 30402   0105DE  C686  F4DE         	movff	??_mount_volume,postinc2
 30403   0105E2  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30404   0105E6  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30405   0105EA  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30406                           
 30407                           ;../fatfs/ff.c: 3549:   fs->volbase = bsect;
 30408   0105EE  EE20 F020          	lfsr	2,32
 30409   0105F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30410   0105F4  26D9               	addwf	fsr2l,f,c
 30411   0105F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30412   0105F8  22DA               	addwfc	fsr2h,f,c
 30413   0105FA  C69E  F4DE         	movff	mount_volume@bsect,postinc2
 30414   0105FE  C69F  F4DE         	movff	mount_volume@bsect+1,postinc2
 30415   010602  C6A0  F4DE         	movff	mount_volume@bsect+2,postinc2
 30416   010606  C6A1  F4DE         	movff	mount_volume@bsect+3,postinc2
 30417                           
 30418                           ;../fatfs/ff.c: 3550:   fs->fatbase = bsect + nrsv;
 30419   01060A  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30420   01060C  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30421   01060E  6F86               	movwf	??_mount_volume& (0+255),b
 30422   010610  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 30423   010612  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30424   010614  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30425   010616  0E00               	movlw	0
 30426   010618  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30427   01061A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30428   01061C  0E00               	movlw	0
 30429   01061E  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30430   010620  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30431   010622  EE20 F024          	lfsr	2,36
 30432   010626  51AD               	movf	mount_volume@fs& (0+255),w,b
 30433   010628  26D9               	addwf	fsr2l,f,c
 30434   01062A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30435   01062C  22DA               	addwfc	fsr2h,f,c
 30436   01062E  C686  F4DE         	movff	??_mount_volume,postinc2
 30437   010632  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30438   010636  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30439   01063A  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30440                           
 30441                           ;../fatfs/ff.c: 3551:   fs->database = bsect + sysect;
 30442   01063E  5194               	movf	mount_volume@sysect& (0+255),w,b
 30443   010640  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30444   010642  6F86               	movwf	??_mount_volume& (0+255),b
 30445   010644  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30446   010646  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30447   010648  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30448   01064A  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30449   01064C  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30450   01064E  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30451   010650  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30452   010652  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30453   010654  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30454   010656  EE20 F02C          	lfsr	2,44
 30455   01065A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30456   01065C  26D9               	addwf	fsr2l,f,c
 30457   01065E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30458   010660  22DA               	addwfc	fsr2h,f,c
 30459   010662  C686  F4DE         	movff	??_mount_volume,postinc2
 30460   010666  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30461   01066A  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30462   01066E  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30463   010672                     
 30464                           ; BSR set to: 6
 30465                           ;../fatfs/ff.c: 3552:   if (fmt == 3) {
 30466   010672  0E03               	movlw	3
 30467   010674  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30468   010676  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30469   010678  A4D8               	btfss	status,2,c
 30470   01067A  EF41  F083         	goto	u30871
 30471   01067E  EF43  F083         	goto	u30870
 30472   010682                     u30871:
 30473   010682  EFA0  F083         	goto	l22517
 30474   010686                     u30870:
 30475   010686                     
 30476                           ; BSR set to: 6
 30477                           ;../fatfs/ff.c: 3553:    if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
 30478   010686  0E5E               	movlw	94
 30479   010688  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30480   01068A  6E04               	movwf	ld_word@ptr^(0+1280),c
 30481   01068C  0E00               	movlw	0
 30482   01068E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30483   010690  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30484   010692  EC4C  F0FF         	call	_ld_word	;wreg free
 30485   010696  5004               	movf	?_ld_word^(0+1280),w,c
 30486   010698  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 30487   01069A  B4D8               	btfsc	status,2,c
 30488   01069C  EF52  F083         	goto	u30881
 30489   0106A0  EF54  F083         	goto	u30880
 30490   0106A4                     u30881:
 30491   0106A4  EF56  F083         	goto	l22507
 30492   0106A8                     u30880:
 30493   0106A8  EFC2  F080         	goto	l22399
 30494   0106AC                     l22507:
 30495                           
 30496                           ;../fatfs/ff.c: 3554:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
 30497   0106AC  0106               	movlb	6	; () banked
 30498   0106AE  EE20 F008          	lfsr	2,8
 30499   0106B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30500   0106B4  26D9               	addwf	fsr2l,f,c
 30501   0106B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30502   0106B8  22DA               	addwfc	fsr2h,f,c
 30503   0106BA  50DE               	movf	postinc2,w,c
 30504   0106BC  10DE               	iorwf	postinc2,w,c
 30505   0106BE  B4D8               	btfsc	status,2,c
 30506   0106C0  EF64  F083         	goto	u30891
 30507   0106C4  EF66  F083         	goto	u30890
 30508   0106C8                     u30891:
 30509   0106C8  EF68  F083         	goto	l22513
 30510   0106CC                     u30890:
 30511   0106CC  EFC2  F080         	goto	l22399
 30512   0106D0                     l22513:
 30513                           
 30514                           ; BSR set to: 6
 30515                           ;../fatfs/ff.c: 3555:    fs->dirbase = ld_dword(fs->win + 44);
 30516   0106D0  0E60               	movlw	96
 30517   0106D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30518   0106D4  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30519   0106D6  0E00               	movlw	0
 30520   0106D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30521   0106DA  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30522   0106DC  ECC7  F0F2         	call	_ld_dword	;wreg free
 30523   0106E0  0106               	movlb	6	; () banked
 30524   0106E2  EE20 F028          	lfsr	2,40
 30525   0106E6  51AD               	movf	mount_volume@fs& (0+255),w,b
 30526   0106E8  26D9               	addwf	fsr2l,f,c
 30527   0106EA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30528   0106EC  22DA               	addwfc	fsr2h,f,c
 30529   0106EE  C504  F4DE         	movff	?_ld_dword,postinc2
 30530   0106F2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30531   0106F6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30532   0106FA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30533   0106FE                     
 30534                           ; BSR set to: 6
 30535                           ;../fatfs/ff.c: 3556:    szbfat = fs->n_fatent * 4;
 30536   0106FE  EE20 F018          	lfsr	2,24
 30537   010702  51AD               	movf	mount_volume@fs& (0+255),w,b
 30538   010704  26D9               	addwf	fsr2l,f,c
 30539   010706  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30540   010708  22DA               	addwfc	fsr2h,f,c
 30541   01070A  C4DE F686          	movff	postinc2,??_mount_volume
 30542   01070E  C4DE F687          	movff	postinc2,??_mount_volume+1
 30543   010712  C4DE F688          	movff	postinc2,??_mount_volume+2
 30544   010716  C4DE F689          	movff	postinc2,??_mount_volume+3
 30545   01071A  0E02               	movlw	2
 30546   01071C                     u30905:
 30547   01071C  90D8               	bcf	status,0,c
 30548   01071E  3786               	rlcf	??_mount_volume& (0+255),f,b
 30549   010720  3787               	rlcf	(??_mount_volume+1)& (0+255),f,b
 30550   010722  3788               	rlcf	(??_mount_volume+2)& (0+255),f,b
 30551   010724  3789               	rlcf	(??_mount_volume+3)& (0+255),f,b
 30552   010726  2EE8               	decfsz	wreg,f,c
 30553   010728  EF8E  F083         	goto	u30905
 30554   01072C  C686  F68E         	movff	??_mount_volume,mount_volume@szbfat
 30555   010730  C687  F68F         	movff	??_mount_volume+1,mount_volume@szbfat+1
 30556   010734  C688  F690         	movff	??_mount_volume+2,mount_volume@szbfat+2
 30557   010738  C689  F691         	movff	??_mount_volume+3,mount_volume@szbfat+3
 30558                           
 30559                           ;../fatfs/ff.c: 3557:   } else {
 30560   01073C  EF40  F084         	goto	l1845
 30561   010740                     l22517:
 30562                           
 30563                           ; BSR set to: 6
 30564                           ;../fatfs/ff.c: 3558:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
 30565   010740  EE20 F008          	lfsr	2,8
 30566   010744  51AD               	movf	mount_volume@fs& (0+255),w,b
 30567   010746  26D9               	addwf	fsr2l,f,c
 30568   010748  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30569   01074A  22DA               	addwfc	fsr2h,f,c
 30570   01074C  50DE               	movf	postinc2,w,c
 30571   01074E  10DE               	iorwf	postinc2,w,c
 30572   010750  A4D8               	btfss	status,2,c
 30573   010752  EFAD  F083         	goto	u30911
 30574   010756  EFAF  F083         	goto	u30910
 30575   01075A                     u30911:
 30576   01075A  EFB1  F083         	goto	l22523
 30577   01075E                     u30910:
 30578   01075E  EFC2  F080         	goto	l22399
 30579   010762                     l22523:
 30580                           
 30581                           ; BSR set to: 6
 30582                           ;../fatfs/ff.c: 3559:    fs->dirbase = fs->fatbase + fasize;
 30583   010762  EE20 F024          	lfsr	2,36
 30584   010766  51AD               	movf	mount_volume@fs& (0+255),w,b
 30585   010768  26D9               	addwf	fsr2l,f,c
 30586   01076A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30587   01076C  22DA               	addwfc	fsr2h,f,c
 30588   01076E  C4DE F686          	movff	postinc2,??_mount_volume
 30589   010772  C4DE F687          	movff	postinc2,??_mount_volume+1
 30590   010776  C4DE F688          	movff	postinc2,??_mount_volume+2
 30591   01077A  C4DE F689          	movff	postinc2,??_mount_volume+3
 30592   01077E  51A7               	movf	mount_volume@fasize& (0+255),w,b
 30593   010780  2586               	addwf	??_mount_volume& (0+255),w,b
 30594   010782  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30595   010784  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 30596   010786  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 30597   010788  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30598   01078A  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 30599   01078C  2188               	addwfc	(??_mount_volume+2)& (0+255),w,b
 30600   01078E  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30601   010790  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 30602   010792  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 30603   010794  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30604   010796  EE20 F028          	lfsr	2,40
 30605   01079A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30606   01079C  26D9               	addwf	fsr2l,f,c
 30607   01079E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30608   0107A0  22DA               	addwfc	fsr2h,f,c
 30609   0107A2  C68A  F4DE         	movff	??_mount_volume+4,postinc2
 30610   0107A6  C68B  F4DE         	movff	??_mount_volume+5,postinc2
 30611   0107AA  C68C  F4DE         	movff	??_mount_volume+6,postinc2
 30612   0107AE  C68D  F4DE         	movff	??_mount_volume+7,postinc2
 30613   0107B2                     
 30614                           ; BSR set to: 6
 30615                           ;../fatfs/ff.c: 3560:    szbfat = (fmt == 2) ?
 30616   0107B2  0E02               	movlw	2
 30617   0107B4  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30618   0107B6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30619   0107B8  B4D8               	btfsc	status,2,c
 30620   0107BA  EFE1  F083         	goto	u30921
 30621   0107BE  EFE3  F083         	goto	u30920
 30622   0107C2                     u30921:
 30623   0107C2  EF29  F084         	goto	l22529
 30624   0107C6                     u30920:
 30625   0107C6                     
 30626                           ; BSR set to: 6
 30627   0107C6  EE20 F018          	lfsr	2,24
 30628   0107CA  51AD               	movf	mount_volume@fs& (0+255),w,b
 30629   0107CC  26D9               	addwf	fsr2l,f,c
 30630   0107CE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30631   0107D0  22DA               	addwfc	fsr2h,f,c
 30632   0107D2  C4DE F686          	movff	postinc2,??_mount_volume
 30633   0107D6  C4DE F687          	movff	postinc2,??_mount_volume+1
 30634   0107DA  C4DE F688          	movff	postinc2,??_mount_volume+2
 30635   0107DE  C4DE F689          	movff	postinc2,??_mount_volume+3
 30636   0107E2  0E01               	movlw	1
 30637   0107E4  1586               	andwf	??_mount_volume& (0+255),w,b
 30638   0107E6  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30639   0107E8  0E00               	movlw	0
 30640   0107EA  1587               	andwf	(??_mount_volume+1)& (0+255),w,b
 30641   0107EC  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30642   0107EE  0E00               	movlw	0
 30643   0107F0  1588               	andwf	(??_mount_volume+2)& (0+255),w,b
 30644   0107F2  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30645   0107F4  0E00               	movlw	0
 30646   0107F6  1589               	andwf	(??_mount_volume+3)& (0+255),w,b
 30647   0107F8  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30648   0107FA  EE20 F018          	lfsr	2,24
 30649   0107FE  51AD               	movf	mount_volume@fs& (0+255),w,b
 30650   010800  26D9               	addwf	fsr2l,f,c
 30651   010802  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30652   010804  22DA               	addwfc	fsr2h,f,c
 30653   010806  C4DE F504          	movff	postinc2,___lmul@multiplier
 30654   01080A  C4DE F505          	movff	postinc2,___lmul@multiplier+1
 30655   01080E  C4DE F506          	movff	postinc2,___lmul@multiplier+2
 30656   010812  C4DE F507          	movff	postinc2,___lmul@multiplier+3
 30657   010816  0E03               	movlw	3
 30658   010818  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 30659   01081A  0E00               	movlw	0
 30660   01081C  6E09               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 30661   01081E  0E00               	movlw	0
 30662   010820  6E0A               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 30663   010822  0E00               	movlw	0
 30664   010824  6E0B               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 30665   010826  EC13  F0FB         	call	___lmul	;wreg free
 30666   01082A  90D8               	bcf	status,0,c
 30667   01082C  3207               	rrcf	(?___lmul+3)^(0+1280),f,c
 30668   01082E  3206               	rrcf	(?___lmul+2)^(0+1280),f,c
 30669   010830  3205               	rrcf	(?___lmul+1)^(0+1280),f,c
 30670   010832  3204               	rrcf	?___lmul^(0+1280),f,c
 30671   010834  0106               	movlb	6	; () banked
 30672   010836  518A               	movf	(??_mount_volume+4)& (0+255),w,b
 30673   010838  2404               	addwf	?___lmul^(0+1280),w,c
 30674   01083A  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 30675   01083C  518B               	movf	(??_mount_volume+5)& (0+255),w,b
 30676   01083E  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 30677   010840  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 30678   010842  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 30679   010844  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 30680   010846  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 30681   010848  518D               	movf	(??_mount_volume+7)& (0+255),w,b
 30682   01084A  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 30683   01084C  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 30684   01084E  EF40  F084         	goto	l1845
 30685   010852                     l22529:
 30686                           
 30687                           ; BSR set to: 6
 30688   010852  EE20 F018          	lfsr	2,24
 30689   010856  51AD               	movf	mount_volume@fs& (0+255),w,b
 30690   010858  26D9               	addwf	fsr2l,f,c
 30691   01085A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30692   01085C  22DA               	addwfc	fsr2h,f,c
 30693   01085E  C4DE F686          	movff	postinc2,??_mount_volume
 30694   010862  C4DE F687          	movff	postinc2,??_mount_volume+1
 30695   010866  C4DE F688          	movff	postinc2,??_mount_volume+2
 30696   01086A  C4DE F689          	movff	postinc2,??_mount_volume+3
 30697   01086E  90D8               	bcf	status,0,c
 30698   010870  3586               	rlcf	??_mount_volume& (0+255),w,b
 30699   010872  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 30700   010874  3587               	rlcf	(??_mount_volume+1)& (0+255),w,b
 30701   010876  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 30702   010878  3588               	rlcf	(??_mount_volume+2)& (0+255),w,b
 30703   01087A  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 30704   01087C  3589               	rlcf	(??_mount_volume+3)& (0+255),w,b
 30705   01087E  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 30706   010880                     l1845:
 30707                           
 30708                           ; BSR set to: 6
 30709                           ;../fatfs/ff.c: 3563:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) retu
      +                          rn FR_NO_FILESYSTEM;
 30710   010880  0EFF               	movlw	255
 30711   010882  258E               	addwf	mount_volume@szbfat& (0+255),w,b
 30712   010884  6F86               	movwf	??_mount_volume& (0+255),b
 30713   010886  0E01               	movlw	1
 30714   010888  218F               	addwfc	(mount_volume@szbfat+1)& (0+255),w,b
 30715   01088A  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30716   01088C  0E00               	movlw	0
 30717   01088E  2190               	addwfc	(mount_volume@szbfat+2)& (0+255),w,b
 30718   010890  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30719   010892  0E00               	movlw	0
 30720   010894  2191               	addwfc	(mount_volume@szbfat+3)& (0+255),w,b
 30721   010896  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30722   010898  0E0A               	movlw	10
 30723   01089A  EF54  F084         	goto	u30930
 30724   01089E                     u30935:
 30725   01089E  90D8               	bcf	status,0,c
 30726   0108A0  3389               	rrcf	(??_mount_volume+3)& (0+255),f,b
 30727   0108A2  3388               	rrcf	(??_mount_volume+2)& (0+255),f,b
 30728   0108A4  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 30729   0108A6  3386               	rrcf	??_mount_volume& (0+255),f,b
 30730   0108A8                     u30930:
 30731   0108A8  2EE8               	decfsz	wreg,f,c
 30732   0108AA  EF4F  F084         	goto	u30935
 30733   0108AE  EE20 F01C          	lfsr	2,28
 30734   0108B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30735   0108B4  26D9               	addwf	fsr2l,f,c
 30736   0108B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30737   0108B8  22DA               	addwfc	fsr2h,f,c
 30738   0108BA  5186               	movf	??_mount_volume& (0+255),w,b
 30739   0108BC  5CDE               	subwf	postinc2,w,c
 30740   0108BE  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 30741   0108C0  58DE               	subwfb	postinc2,w,c
 30742   0108C2  5188               	movf	(??_mount_volume+2)& (0+255),w,b
 30743   0108C4  58DE               	subwfb	postinc2,w,c
 30744   0108C6  5189               	movf	(??_mount_volume+3)& (0+255),w,b
 30745   0108C8  58DE               	subwfb	postinc2,w,c
 30746   0108CA  B0D8               	btfsc	status,0,c
 30747   0108CC  EF6A  F084         	goto	u30941
 30748   0108D0  EF6C  F084         	goto	u30940
 30749   0108D4                     u30941:
 30750   0108D4  EF6E  F084         	goto	l22535
 30751   0108D8                     u30940:
 30752   0108D8  EFC2  F080         	goto	l22399
 30753   0108DC                     l22535:
 30754                           
 30755                           ; BSR set to: 6
 30756                           ;../fatfs/ff.c: 3567:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 30757   0108DC  EE20 F010          	lfsr	2,16
 30758   0108E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30759   0108E2  26D9               	addwf	fsr2l,f,c
 30760   0108E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30761   0108E6  22DA               	addwfc	fsr2h,f,c
 30762   0108E8  0EFF               	movlw	255
 30763   0108EA  6EDE               	movwf	postinc2,c
 30764   0108EC  0EFF               	movlw	255
 30765   0108EE  6EDE               	movwf	postinc2,c
 30766   0108F0  0EFF               	movlw	255
 30767   0108F2  6EDE               	movwf	postinc2,c
 30768   0108F4  0EFF               	movlw	255
 30769   0108F6  6EDD               	movwf	postdec2,c
 30770   0108F8  52DD               	movf	postdec2,f,c
 30771   0108FA  52DD               	movf	postdec2,f,c
 30772   0108FC  EE10 F00C          	lfsr	1,12
 30773   010900  51AD               	movf	mount_volume@fs& (0+255),w,b
 30774   010902  26E1               	addwf	fsr1l,f,c
 30775   010904  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30776   010906  22E2               	addwfc	fsr1h,f,c
 30777   010908  C4DE F4E6          	movff	postinc2,postinc1
 30778   01090C  C4DE F4E6          	movff	postinc2,postinc1
 30779   010910  C4DE F4E6          	movff	postinc2,postinc1
 30780   010914  C4DE F4E6          	movff	postinc2,postinc1
 30781   010918                     
 30782                           ; BSR set to: 6
 30783                           ;../fatfs/ff.c: 3568:   fs->fsi_flag = 0x80;
 30784   010918  EE20 F005          	lfsr	2,5
 30785   01091C  51AD               	movf	mount_volume@fs& (0+255),w,b
 30786   01091E  26D9               	addwf	fsr2l,f,c
 30787   010920  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30788   010922  22DA               	addwfc	fsr2h,f,c
 30789   010924  0E80               	movlw	128
 30790   010926  6EDF               	movwf	indf2,c
 30791   010928                     
 30792                           ; BSR set to: 6
 30793                           ;../fatfs/ff.c: 3570:   if (fmt == 3
 30794   010928  0E03               	movlw	3
 30795   01092A  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30796   01092C  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30797   01092E  A4D8               	btfss	status,2,c
 30798   010930  EF9C  F084         	goto	u30951
 30799   010934  EF9E  F084         	goto	u30950
 30800   010938                     u30951:
 30801   010938  EF4B  F085         	goto	l22555
 30802   01093C                     u30950:
 30803   01093C                     
 30804                           ; BSR set to: 6
 30805   01093C  0E64               	movlw	100
 30806   01093E  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30807   010940  6E04               	movwf	ld_word@ptr^(0+1280),c
 30808   010942  0E00               	movlw	0
 30809   010944  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30810   010946  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30811   010948  EC4C  F0FF         	call	_ld_word	;wreg free
 30812   01094C  0404               	decf	?_ld_word^(0+1280),w,c
 30813   01094E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 30814   010950  A4D8               	btfss	status,2,c
 30815   010952  EFAD  F084         	goto	u30961
 30816   010956  EFAF  F084         	goto	u30960
 30817   01095A                     u30961:
 30818   01095A  EF4B  F085         	goto	l22555
 30819   01095E                     u30960:
 30820   01095E  C6AD  F61A         	movff	mount_volume@fs,move_window@fs
 30821   010962  C6AE  F61B         	movff	mount_volume@fs+1,move_window@fs+1
 30822   010966  0E01               	movlw	1
 30823   010968  0106               	movlb	6	; () banked
 30824   01096A  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30825   01096C  6F1C               	movwf	move_window@sect& (0+255),b
 30826   01096E  0E00               	movlw	0
 30827   010970  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30828   010972  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 30829   010974  0E00               	movlw	0
 30830   010976  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30831   010978  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 30832   01097A  0E00               	movlw	0
 30833   01097C  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30834   01097E  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 30835   010980  ECAB  F0EF         	call	_move_window	;wreg free
 30836   010984  0900               	iorlw	0
 30837   010986  A4D8               	btfss	status,2,c
 30838   010988  EFC8  F084         	goto	u30971
 30839   01098C  EFCA  F084         	goto	u30970
 30840   010990                     u30971:
 30841   010990  EF4B  F085         	goto	l22555
 30842   010994                     u30970:
 30843   010994                     
 30844                           ;../fatfs/ff.c: 3573:   {;../fatfs/ff.c: 3574:    fs->fsi_flag = 0;
 30845   010994  0106               	movlb	6	; () banked
 30846   010996  EE20 F005          	lfsr	2,5
 30847   01099A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30848   01099C  26D9               	addwf	fsr2l,f,c
 30849   01099E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30850   0109A0  22DA               	addwfc	fsr2h,f,c
 30851   0109A2  6ADF               	clrf	indf2,c
 30852   0109A4                     
 30853                           ; BSR set to: 6
 30854                           ;../fatfs/ff.c: 3575:    if (ld_word(fs->win + 510) == 0xAA55
 30855   0109A4  0E32               	movlw	50
 30856   0109A6  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30857   0109A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 30858   0109AA  0E02               	movlw	2
 30859   0109AC  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30860   0109AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30861   0109B0  EC4C  F0FF         	call	_ld_word	;wreg free
 30862   0109B4  0E55               	movlw	85
 30863   0109B6  1804               	xorwf	?_ld_word^(0+1280),w,c
 30864   0109B8  E107               	bnz	u30981
 30865   0109BA  0EAA               	movlw	170
 30866   0109BC  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 30867   0109BE  A4D8               	btfss	status,2,c
 30868   0109C0  EFE4  F084         	goto	u30981
 30869   0109C4  EFE6  F084         	goto	u30980
 30870   0109C8                     u30981:
 30871   0109C8  EF4B  F085         	goto	l22555
 30872   0109CC                     u30980:
 30873   0109CC  0E34               	movlw	52
 30874   0109CE  0106               	movlb	6	; () banked
 30875   0109D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30876   0109D2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30877   0109D4  0E00               	movlw	0
 30878   0109D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30879   0109D8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30880   0109DA  ECC7  F0F2         	call	_ld_dword	;wreg free
 30881   0109DE  0E52               	movlw	82
 30882   0109E0  1804               	xorwf	?_ld_dword^(0+1280),w,c
 30883   0109E2  E10D               	bnz	u30991
 30884   0109E4  0E52               	movlw	82
 30885   0109E6  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 30886   0109E8  E10A               	bnz	u30991
 30887   0109EA  0E61               	movlw	97
 30888   0109EC  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 30889   0109EE  E107               	bnz	u30991
 30890   0109F0  0E41               	movlw	65
 30891   0109F2  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 30892   0109F4  A4D8               	btfss	status,2,c
 30893   0109F6  EFFF  F084         	goto	u30991
 30894   0109FA  EF01  F085         	goto	u30990
 30895   0109FE                     u30991:
 30896   0109FE  EF4B  F085         	goto	l22555
 30897   010A02                     u30990:
 30898   010A02  0E18               	movlw	24
 30899   010A04  0106               	movlb	6	; () banked
 30900   010A06  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30901   010A08  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30902   010A0A  0E02               	movlw	2
 30903   010A0C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30904   010A0E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30905   010A10  ECC7  F0F2         	call	_ld_dword	;wreg free
 30906   010A14  0E72               	movlw	114
 30907   010A16  1804               	xorwf	?_ld_dword^(0+1280),w,c
 30908   010A18  E10D               	bnz	u31001
 30909   010A1A  0E72               	movlw	114
 30910   010A1C  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 30911   010A1E  E10A               	bnz	u31001
 30912   010A20  0E41               	movlw	65
 30913   010A22  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 30914   010A24  E107               	bnz	u31001
 30915   010A26  0E61               	movlw	97
 30916   010A28  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 30917   010A2A  A4D8               	btfss	status,2,c
 30918   010A2C  EF1A  F085         	goto	u31001
 30919   010A30  EF1C  F085         	goto	u31000
 30920   010A34                     u31001:
 30921   010A34  EF4B  F085         	goto	l22555
 30922   010A38                     u31000:
 30923   010A38                     
 30924                           ;../fatfs/ff.c: 3578:    {;../fatfs/ff.c: 3580:     fs->free_clst = ld_dword(fs->win + 4
      +                          88);
 30925   010A38  0E1C               	movlw	28
 30926   010A3A  0106               	movlb	6	; () banked
 30927   010A3C  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30928   010A3E  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30929   010A40  0E02               	movlw	2
 30930   010A42  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30931   010A44  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30932   010A46  ECC7  F0F2         	call	_ld_dword	;wreg free
 30933   010A4A  0106               	movlb	6	; () banked
 30934   010A4C  EE20 F010          	lfsr	2,16
 30935   010A50  51AD               	movf	mount_volume@fs& (0+255),w,b
 30936   010A52  26D9               	addwf	fsr2l,f,c
 30937   010A54  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30938   010A56  22DA               	addwfc	fsr2h,f,c
 30939   010A58  C504  F4DE         	movff	?_ld_dword,postinc2
 30940   010A5C  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30941   010A60  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30942   010A64  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30943                           
 30944                           ;../fatfs/ff.c: 3583:     fs->last_clst = ld_dword(fs->win + 492);
 30945   010A68  0E20               	movlw	32
 30946   010A6A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30947   010A6C  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30948   010A6E  0E02               	movlw	2
 30949   010A70  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30950   010A72  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30951   010A74  ECC7  F0F2         	call	_ld_dword	;wreg free
 30952   010A78  0106               	movlb	6	; () banked
 30953   010A7A  EE20 F00C          	lfsr	2,12
 30954   010A7E  51AD               	movf	mount_volume@fs& (0+255),w,b
 30955   010A80  26D9               	addwf	fsr2l,f,c
 30956   010A82  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30957   010A84  22DA               	addwfc	fsr2h,f,c
 30958   010A86  C504  F4DE         	movff	?_ld_dword,postinc2
 30959   010A8A  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30960   010A8E  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30961   010A92  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30962   010A96                     l22555:
 30963                           
 30964                           ;../fatfs/ff.c: 3589:  };../fatfs/ff.c: 3591:  fs->fs_type = (BYTE)fmt;
 30965   010A96  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 30966   010A9A  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 30967   010A9E  C6AB  F4DF         	movff	mount_volume@fmt,indf2
 30968   010AA2                     
 30969                           ;../fatfs/ff.c: 3592:  fs->id = ++Fsid;
 30970   010AA2  0107               	movlb	7	; () banked
 30971   010AA4  4BB5               	infsnz	_Fsid& (0+255),f,b
 30972   010AA6  2BB6               	incf	(_Fsid+1)& (0+255),f,b
 30973   010AA8  0106               	movlb	6	; () banked
 30974   010AAA  EE20 F006          	lfsr	2,6
 30975   010AAE  51AD               	movf	mount_volume@fs& (0+255),w,b
 30976   010AB0  26D9               	addwf	fsr2l,f,c
 30977   010AB2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30978   010AB4  22DA               	addwfc	fsr2h,f,c
 30979   010AB6  C7B5  F4DE         	movff	_Fsid,postinc2
 30980   010ABA  C7B6  F4DD         	movff	_Fsid+1,postdec2
 30981   010ABE                     
 30982                           ; BSR set to: 6
 30983                           ;../fatfs/ff.c: 3600:  fs->cdir = 0;
 30984   010ABE  EE20 F014          	lfsr	2,20
 30985   010AC2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30986   010AC4  26D9               	addwf	fsr2l,f,c
 30987   010AC6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30988   010AC8  22DA               	addwfc	fsr2h,f,c
 30989   010ACA  6ADE               	clrf	postinc2,c
 30990   010ACC  6ADE               	clrf	postinc2,c
 30991   010ACE  6ADE               	clrf	postinc2,c
 30992   010AD0  6ADD               	clrf	postdec2,c
 30993   010AD2  EF6D  F080         	goto	l22367
 30994   010AD6                     l1818:
 30995   010AD6  0012               	return		;funcret
 30996   010AD8                     __end_of_mount_volume:
 30997                           	callstack 0
 30998                           
 30999 ;; *************** function _get_ldnumber *****************
 31000 ;; Defined at:
 31001 ;;		line 3139 in file "../fatfs/ff.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;  path            2    3[COMRAM] PTR PTR const unsigned c
 31004 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 31005 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), 
 31006 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 31007 ;;		 -> f_mount@rp(2), 
 31008 ;; Auto vars:     Size  Location     Type
 31009 ;;  tp              2   14[COMRAM] PTR const unsigned char 
 31010 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 31011 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 31012 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 31013 ;;  vol             2   12[COMRAM] int 
 31014 ;;  tt              2   10[COMRAM] PTR const unsigned char 
 31015 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 31016 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 31017 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 31018 ;;  i               2    7[COMRAM] int 
 31019 ;;  tc              1    9[COMRAM] unsigned char 
 31020 ;; Return value:  Size  Location     Type
 31021 ;;                  2    3[COMRAM] int 
 31022 ;; Registers used:
 31023 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31024 ;; Tracked objects:
 31025 ;;		On entry : 0/0
 31026 ;;		On exit  : 0/0
 31027 ;;		Unchanged: 0/0
 31028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31030 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31032 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31033 ;;Total ram usage:       13 bytes
 31034 ;; Hardware stack levels used: 1
 31035 ;; Hardware stack levels required when called: 1
 31036 ;; This function calls:
 31037 ;;		Nothing
 31038 ;; This function is called by:
 31039 ;;		_mount_volume
 31040 ;;		_f_mount
 31041 ;;		_f_chdrive
 31042 ;;		_f_rename
 31043 ;; This function uses a non-reentrant model
 31044 ;;
 31045                           
 31046                           	psect	text75
 31047   01B304                     __ptext75:
 31048                           	callstack 0
 31049   01B304                     _get_ldnumber:
 31050                           	callstack 117
 31051   01B304                     
 31052                           ;../fatfs/ff.c: 3140:  const TCHAR** path;../fatfs/ff.c: 3142: {;../fatfs/ff.c: 3143:  c
      +                          onst TCHAR *tp;;../fatfs/ff.c: 3144:  const TCHAR *tt;;../fatfs/ff.c: 3145:  TCHAR tc;;.
      +                          ./fatfs/ff.c: 3146:  int i;;../fatfs/ff.c: 3147:  int vol = -1;
 31053   01B304  680D               	setf	get_ldnumber@vol^(0+1280),c
 31054   01B306  680E               	setf	(get_ldnumber@vol+1)^(0+1280),c
 31055   01B308                     
 31056                           ;../fatfs/ff.c: 3153:  tt = tp = *path;
 31057   01B308  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 31058   01B30C  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 31059   01B310  C4DE F50F          	movff	postinc2,get_ldnumber@tp
 31060   01B314  C4DD F510          	movff	postdec2,get_ldnumber@tp+1
 31061   01B318  C50F  F50B         	movff	get_ldnumber@tp,get_ldnumber@tt
 31062   01B31C  C510  F50C         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 31063   01B320                     
 31064                           ;../fatfs/ff.c: 3154:  if (!tp) return vol;
 31065   01B320  500F               	movf	get_ldnumber@tp^(0+1280),w,c
 31066   01B322  1010               	iorwf	(get_ldnumber@tp+1)^(0+1280),w,c
 31067   01B324  A4D8               	btfss	status,2,c
 31068   01B326  EF97  F0D9         	goto	u29851
 31069   01B32A  EF99  F0D9         	goto	u29850
 31070   01B32E                     u29851:
 31071   01B32E  EF9D  F0D9         	goto	l21945
 31072   01B332                     u29850:
 31073   01B332  6804               	setf	?_get_ldnumber^(0+1280),c
 31074   01B334  6805               	setf	(?_get_ldnumber+1)^(0+1280),c
 31075   01B336  EF53  F0DA         	goto	l1767
 31076   01B33A                     l21945:
 31077                           
 31078                           ;../fatfs/ff.c: 3156:   tc = *tt++;
 31079   01B33A  C50B  F4F6         	movff	get_ldnumber@tt,tblptrl
 31080   01B33E  C50C  F4F7         	movff	get_ldnumber@tt+1,tblptrh
 31081   01B342  0E00               	movlw	low (__mediumconst shr (0+16))
 31082   01B344  6EF8               	movwf	tblptru,c
 31083   01B346  0E25               	movlw	(high __ramtop+-1)
 31084   01B348  64F7               	cpfsgt	tblptrh,c
 31085   01B34A  D003               	bra	u29867
 31086   01B34C  0008               	tblrd		*
 31087   01B34E  50F5               	movf	tablat,w,c
 31088   01B350  D005               	bra	u29860
 31089   01B352                     u29867:
 31090   01B352  C4F6 F4E9          	movff	tblptrl,fsr0l
 31091   01B356  C4F7 F4EA          	movff	tblptrh,fsr0h
 31092   01B35A  50EF               	movf	indf0,w,c
 31093   01B35C                     u29860:
 31094   01B35C  6E0A               	movwf	get_ldnumber@tc^(0+1280),c
 31095   01B35E                     
 31096                           ;../fatfs/ff.c: 3157:  } while (!((UINT)(tc) < (0 ? ' ' : '!')) && tc != ':');
 31097   01B35E  4A0B               	infsnz	get_ldnumber@tt^(0+1280),f,c
 31098   01B360  2A0C               	incf	(get_ldnumber@tt+1)^(0+1280),f,c
 31099   01B362  0E20               	movlw	32
 31100   01B364  640A               	cpfsgt	get_ldnumber@tc^(0+1280),c
 31101   01B366  EFB7  F0D9         	goto	u29871
 31102   01B36A  EFB9  F0D9         	goto	u29870
 31103   01B36E                     u29871:
 31104   01B36E  EFC2  F0D9         	goto	l21957
 31105   01B372                     u29870:
 31106   01B372  0E3A               	movlw	58
 31107   01B374  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 31108   01B376  A4D8               	btfss	status,2,c
 31109   01B378  EFC0  F0D9         	goto	u29881
 31110   01B37C  EFC2  F0D9         	goto	u29880
 31111   01B380                     u29881:
 31112   01B380  EF9D  F0D9         	goto	l21945
 31113   01B384                     u29880:
 31114   01B384                     l21957:
 31115                           
 31116                           ;../fatfs/ff.c: 3159:  if (tc == ':') {
 31117   01B384  0E3A               	movlw	58
 31118   01B386  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 31119   01B388  A4D8               	btfss	status,2,c
 31120   01B38A  EFC9  F0D9         	goto	u29891
 31121   01B38E  EFCB  F0D9         	goto	u29890
 31122   01B392                     u29891:
 31123   01B392  EF4C  F0DA         	goto	l1776
 31124   01B396                     u29890:
 31125   01B396                     
 31126                           ;../fatfs/ff.c: 3160:   i = 1;
 31127   01B396  0E00               	movlw	0
 31128   01B398  6E09               	movwf	(get_ldnumber@i+1)^(0+1280),c
 31129   01B39A  0E01               	movlw	1
 31130   01B39C  6E08               	movwf	get_ldnumber@i^(0+1280),c
 31131   01B39E                     
 31132                           ;../fatfs/ff.c: 3161:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 == tt) {
 31133   01B39E  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31134   01B3A2  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31135   01B3A6  0E00               	movlw	low (__mediumconst shr (0+16))
 31136   01B3A8  6EF8               	movwf	tblptru,c
 31137   01B3AA  0E25               	movlw	(high __ramtop+-1)
 31138   01B3AC  64F7               	cpfsgt	tblptrh,c
 31139   01B3AE  D003               	bra	u29907
 31140   01B3B0  0008               	tblrd		*
 31141   01B3B2  50F5               	movf	tablat,w,c
 31142   01B3B4  D005               	bra	u29900
 31143   01B3B6                     u29907:
 31144   01B3B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 31145   01B3BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 31146   01B3BE  50EF               	movf	indf0,w,c
 31147   01B3C0                     u29900:
 31148   01B3C0  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31149   01B3C2  0E2F               	movlw	47
 31150   01B3C4  6406               	cpfsgt	??_get_ldnumber^(0+1280),c
 31151   01B3C6  EFE7  F0D9         	goto	u29911
 31152   01B3CA  EFE9  F0D9         	goto	u29910
 31153   01B3CE                     u29911:
 31154   01B3CE  EF2D  F0DA         	goto	l21969
 31155   01B3D2                     u29910:
 31156   01B3D2  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31157   01B3D6  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31158   01B3DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31159   01B3DC  6EF8               	movwf	tblptru,c
 31160   01B3DE  0E25               	movlw	(high __ramtop+-1)
 31161   01B3E0  64F7               	cpfsgt	tblptrh,c
 31162   01B3E2  D003               	bra	u29927
 31163   01B3E4  0008               	tblrd		*
 31164   01B3E6  50F5               	movf	tablat,w,c
 31165   01B3E8  D005               	bra	u29920
 31166   01B3EA                     u29927:
 31167   01B3EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 31168   01B3EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 31169   01B3F2  50EF               	movf	indf0,w,c
 31170   01B3F4                     u29920:
 31171   01B3F4  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31172   01B3F6  0E3A               	movlw	58
 31173   01B3F8  6006               	cpfslt	??_get_ldnumber^(0+1280),c
 31174   01B3FA  EF01  F0DA         	goto	u29931
 31175   01B3FE  EF03  F0DA         	goto	u29930
 31176   01B402                     u29931:
 31177   01B402  EF2D  F0DA         	goto	l21969
 31178   01B406                     u29930:
 31179   01B406  0E02               	movlw	2
 31180   01B408  240F               	addwf	get_ldnumber@tp^(0+1280),w,c
 31181   01B40A  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31182   01B40C  0E00               	movlw	0
 31183   01B40E  2010               	addwfc	(get_ldnumber@tp+1)^(0+1280),w,c
 31184   01B410  6E07               	movwf	(??_get_ldnumber+1)^(0+1280),c
 31185   01B412  500B               	movf	get_ldnumber@tt^(0+1280),w,c
 31186   01B414  1806               	xorwf	??_get_ldnumber^(0+1280),w,c
 31187   01B416  E107               	bnz	u29941
 31188   01B418  500C               	movf	(get_ldnumber@tt+1)^(0+1280),w,c
 31189   01B41A  1807               	xorwf	(??_get_ldnumber+1)^(0+1280),w,c
 31190   01B41C  A4D8               	btfss	status,2,c
 31191   01B41E  EF13  F0DA         	goto	u29941
 31192   01B422  EF15  F0DA         	goto	u29940
 31193   01B426                     u29941:
 31194   01B426  EF2D  F0DA         	goto	l21969
 31195   01B42A                     u29940:
 31196   01B42A                     
 31197                           ;../fatfs/ff.c: 3162:    i = (int)*tp - '0';
 31198   01B42A  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31199   01B42E  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31200   01B432  0E00               	movlw	low (__mediumconst shr (0+16))
 31201   01B434  6EF8               	movwf	tblptru,c
 31202   01B436  0E25               	movlw	(high __ramtop+-1)
 31203   01B438  64F7               	cpfsgt	tblptrh,c
 31204   01B43A  D003               	bra	u29957
 31205   01B43C  0008               	tblrd		*
 31206   01B43E  50F5               	movf	tablat,w,c
 31207   01B440  D005               	bra	u29950
 31208   01B442                     u29957:
 31209   01B442  C4F6 F4E9          	movff	tblptrl,fsr0l
 31210   01B446  C4F7 F4EA          	movff	tblptrh,fsr0h
 31211   01B44A  50EF               	movf	indf0,w,c
 31212   01B44C                     u29950:
 31213   01B44C  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31214   01B44E  0ED0               	movlw	208
 31215   01B450  2406               	addwf	??_get_ldnumber^(0+1280),w,c
 31216   01B452  6E08               	movwf	get_ldnumber@i^(0+1280),c
 31217   01B454  6A09               	clrf	(get_ldnumber@i+1)^(0+1280),c
 31218   01B456  0EFF               	movlw	255
 31219   01B458  2209               	addwfc	(get_ldnumber@i+1)^(0+1280),f,c
 31220   01B45A                     l21969:
 31221                           
 31222                           ;../fatfs/ff.c: 3177:   if (i < 1) {
 31223   01B45A  BE09               	btfsc	(get_ldnumber@i+1)^(0+1280),7,c
 31224   01B45C  EF3A  F0DA         	goto	u29960
 31225   01B460  5009               	movf	(get_ldnumber@i+1)^(0+1280),w,c
 31226   01B462  E106               	bnz	u29961
 31227   01B464  0408               	decf	get_ldnumber@i^(0+1280),w,c
 31228   01B466  B0D8               	btfsc	status,0,c
 31229   01B468  EF38  F0DA         	goto	u29961
 31230   01B46C  EF3A  F0DA         	goto	u29960
 31231   01B470                     u29961:
 31232   01B470  EF46  F0DA         	goto	l21975
 31233   01B474                     u29960:
 31234   01B474                     
 31235                           ;../fatfs/ff.c: 3178:    vol = i;
 31236   01B474  C508  F50D         	movff	get_ldnumber@i,get_ldnumber@vol
 31237   01B478  C509  F50E         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 31238   01B47C                     
 31239                           ;../fatfs/ff.c: 3179:    *path = tt;
 31240   01B47C  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 31241   01B480  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 31242   01B484  C50B  F4DE         	movff	get_ldnumber@tt,postinc2
 31243   01B488  C50C  F4DD         	movff	get_ldnumber@tt+1,postdec2
 31244   01B48C                     l21975:
 31245                           
 31246                           ;../fatfs/ff.c: 3181:   return vol;
 31247   01B48C  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 31248   01B490  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 31249   01B494  EF53  F0DA         	goto	l1767
 31250   01B498                     l1776:
 31251                           
 31252                           ;../fatfs/ff.c: 3204:  vol = CurrVol;
 31253   01B498  C7C7  F50D         	movff	_CurrVol,get_ldnumber@vol
 31254   01B49C  6A0E               	clrf	(get_ldnumber@vol+1)^(0+1280),c
 31255                           
 31256                           ;../fatfs/ff.c: 3208:  return vol;
 31257   01B49E  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 31258   01B4A2  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 31259   01B4A6                     l1767:
 31260   01B4A6  0012               	return		;funcret
 31261   01B4A8                     __end_of_get_ldnumber:
 31262                           	callstack 0
 31263                           
 31264 ;; *************** function _find_volume *****************
 31265 ;; Defined at:
 31266 ;;		line 3332 in file "../fatfs/ff.c"
 31267 ;; Parameters:    Size  Location     Type
 31268 ;;  fs              2   50[BANK6 ] PTR struct .
 31269 ;;		 -> fs(564), NULL(0), 
 31270 ;;  part            2   52[BANK6 ] unsigned int 
 31271 ;; Auto vars:     Size  Location     Type
 31272 ;;  mbr_pt         16   60[BANK6 ] unsigned long [4]
 31273 ;;  i               2   78[BANK6 ] unsigned int 
 31274 ;;  fmt             2   76[BANK6 ] unsigned int 
 31275 ;; Return value:  Size  Location     Type
 31276 ;;                  2   50[BANK6 ] unsigned int 
 31277 ;; Registers used:
 31278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31279 ;; Tracked objects:
 31280 ;;		On entry : 0/0
 31281 ;;		On exit  : 0/0
 31282 ;;		Unchanged: 0/0
 31283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31284 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31285 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31286 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31287 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31288 ;;Total ram usage:       30 bytes
 31289 ;; Hardware stack levels used: 1
 31290 ;; Hardware stack levels required when called: 15
 31291 ;; This function calls:
 31292 ;;		_check_fs
 31293 ;;		_ld_dword
 31294 ;; This function is called by:
 31295 ;;		_mount_volume
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text76
 31300   01A50E                     __ptext76:
 31301                           	callstack 0
 31302   01A50E                     _find_volume:
 31303                           	callstack 103
 31304   01A50E                     
 31305                           ;../fatfs/ff.c: 3333:  FATFS* fs,;../fatfs/ff.c: 3334:  UINT part;../fatfs/ff.c: 3336: {
      +                          ;../fatfs/ff.c: 3337:  UINT fmt, i;;../fatfs/ff.c: 3338:  DWORD mbr_pt[4];;../fatfs/ff.c
      +                          : 3341:  fmt = check_fs(fs, 0);
 31306   01A50E  C632  F624         	movff	find_volume@fs,check_fs@fs
 31307   01A512  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 31308   01A516  0E00               	movlw	0
 31309   01A518  0106               	movlb	6	; () banked
 31310   01A51A  6F26               	movwf	check_fs@sect& (0+255),b
 31311   01A51C  0E00               	movlw	0
 31312   01A51E  6F27               	movwf	(check_fs@sect+1)& (0+255),b
 31313   01A520  0E00               	movlw	0
 31314   01A522  6F28               	movwf	(check_fs@sect+2)& (0+255),b
 31315   01A524  0E00               	movlw	0
 31316   01A526  6F29               	movwf	(check_fs@sect+3)& (0+255),b
 31317   01A528  ECEB  F0C2         	call	_check_fs	;wreg free
 31318   01A52C  C624  F64C         	movff	?_check_fs,find_volume@fmt
 31319   01A530  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 31320   01A534                     
 31321                           ;../fatfs/ff.c: 3342:  if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;
 31322   01A534  0E02               	movlw	2
 31323   01A536  0106               	movlb	6	; () banked
 31324   01A538  194C               	xorwf	find_volume@fmt& (0+255),w,b
 31325   01A53A  114D               	iorwf	(find_volume@fmt+1)& (0+255),w,b
 31326   01A53C  B4D8               	btfsc	status,2,c
 31327   01A53E  EFA3  F0D2         	goto	u29971
 31328   01A542  EFA5  F0D2         	goto	u29970
 31329   01A546                     u29971:
 31330   01A546  EFBF  F0D2         	goto	l21993
 31331   01A54A                     u29970:
 31332   01A54A                     
 31333                           ; BSR set to: 6
 31334   01A54A  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 31335   01A54C  E107               	bnz	u29981
 31336   01A54E  0E03               	movlw	3
 31337   01A550  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 31338   01A552  B0D8               	btfsc	status,0,c
 31339   01A554  EFAE  F0D2         	goto	u29981
 31340   01A558  EFB0  F0D2         	goto	u29980
 31341   01A55C                     u29981:
 31342   01A55C  EFB9  F0D2         	goto	l1798
 31343   01A560                     u29980:
 31344   01A560                     
 31345                           ; BSR set to: 6
 31346   01A560  5134               	movf	find_volume@part& (0+255),w,b
 31347   01A562  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31348   01A564  A4D8               	btfss	status,2,c
 31349   01A566  EFB7  F0D2         	goto	u29991
 31350   01A56A  EFB9  F0D2         	goto	u29990
 31351   01A56E                     u29991:
 31352   01A56E  EFBF  F0D2         	goto	l21993
 31353   01A572                     u29990:
 31354   01A572                     l1798:
 31355                           
 31356                           ; BSR set to: 6
 31357   01A572  C64C  F632         	movff	find_volume@fmt,?_find_volume
 31358   01A576  C64D  F633         	movff	find_volume@fmt+1,?_find_volume+1
 31359   01A57A  EF80  F0D3         	goto	l1799
 31360   01A57E                     l21993:
 31361                           
 31362                           ; BSR set to: 6
 31363                           ;../fatfs/ff.c: 3369:  for (i = 0; i < 4; i++) {
 31364   01A57E  0E00               	movlw	0
 31365   01A580  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31366   01A582  0E00               	movlw	0
 31367   01A584  6F4E               	movwf	find_volume@i& (0+255),b
 31368   01A586                     l21999:
 31369                           
 31370                           ; BSR set to: 6
 31371                           ;../fatfs/ff.c: 3370:   mbr_pt[i] = ld_dword(fs->win + 446 + i * 16 + 8);
 31372   01A586  C64E  F636         	movff	find_volume@i,??_find_volume
 31373   01A58A  C64F  F637         	movff	find_volume@i+1,??_find_volume+1
 31374   01A58E  3B36               	swapf	??_find_volume& (0+255),f,b
 31375   01A590  3B37               	swapf	(??_find_volume+1)& (0+255),f,b
 31376   01A592  0EF0               	movlw	240
 31377   01A594  1737               	andwf	(??_find_volume+1)& (0+255),f,b
 31378   01A596  5136               	movf	??_find_volume& (0+255),w,b
 31379   01A598  0B0F               	andlw	15
 31380   01A59A  1337               	iorwf	(??_find_volume+1)& (0+255),f,b
 31381   01A59C  0EF0               	movlw	240
 31382   01A59E  1736               	andwf	??_find_volume& (0+255),f,b
 31383   01A5A0  5136               	movf	??_find_volume& (0+255),w,b
 31384   01A5A2  2532               	addwf	find_volume@fs& (0+255),w,b
 31385   01A5A4  6F38               	movwf	(??_find_volume+2)& (0+255),b
 31386   01A5A6  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31387   01A5A8  2133               	addwfc	(find_volume@fs+1)& (0+255),w,b
 31388   01A5AA  6F39               	movwf	(??_find_volume+3)& (0+255),b
 31389   01A5AC  0EFA               	movlw	250
 31390   01A5AE  2538               	addwf	(??_find_volume+2)& (0+255),w,b
 31391   01A5B0  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31392   01A5B2  0E01               	movlw	1
 31393   01A5B4  2139               	addwfc	(??_find_volume+3)& (0+255),w,b
 31394   01A5B6  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31395   01A5B8  ECC7  F0F2         	call	_ld_dword	;wreg free
 31396   01A5BC  0E3C               	movlw	low find_volume@mbr_pt
 31397   01A5BE  0106               	movlb	6	; () banked
 31398   01A5C0  6F3A               	movwf	(??_find_volume+4)& (0+255),b
 31399   01A5C2  0E06               	movlw	high find_volume@mbr_pt
 31400   01A5C4  6F3B               	movwf	(??_find_volume+5)& (0+255),b
 31401   01A5C6  90D8               	bcf	status,0,c
 31402   01A5C8  354E               	rlcf	find_volume@i& (0+255),w,b
 31403   01A5CA  6ED9               	movwf	fsr2l,c
 31404   01A5CC  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31405   01A5CE  6EDA               	movwf	fsr2h,c
 31406   01A5D0  90D8               	bcf	status,0,c
 31407   01A5D2  36D9               	rlcf	fsr2l,f,c
 31408   01A5D4  36DA               	rlcf	fsr2h,f,c
 31409   01A5D6  513A               	movf	(??_find_volume+4)& (0+255),w,b
 31410   01A5D8  26D9               	addwf	fsr2l,f,c
 31411   01A5DA  513B               	movf	(??_find_volume+5)& (0+255),w,b
 31412   01A5DC  22DA               	addwfc	fsr2h,f,c
 31413   01A5DE  C504  F4DE         	movff	?_ld_dword,postinc2
 31414   01A5E2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 31415   01A5E6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 31416   01A5EA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 31417   01A5EE                     
 31418                           ; BSR set to: 6
 31419                           ;../fatfs/ff.c: 3371:  }
 31420   01A5EE  4B4E               	infsnz	find_volume@i& (0+255),f,b
 31421   01A5F0  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 31422   01A5F2                     
 31423                           ; BSR set to: 6
 31424   01A5F2  514F               	movf	(find_volume@i+1)& (0+255),w,b
 31425   01A5F4  E109               	bnz	u30000
 31426   01A5F6  0E04               	movlw	4
 31427   01A5F8  5D4E               	subwf	find_volume@i& (0+255),w,b
 31428   01A5FA  A0D8               	btfss	status,0,c
 31429   01A5FC  EF02  F0D3         	goto	u30001
 31430   01A600  EF04  F0D3         	goto	u30000
 31431   01A604                     u30001:
 31432   01A604  EFC3  F0D2         	goto	l21999
 31433   01A608                     u30000:
 31434   01A608                     
 31435                           ; BSR set to: 6
 31436                           ;../fatfs/ff.c: 3372:  i = part ? part - 1 : 0;
 31437   01A608  5134               	movf	find_volume@part& (0+255),w,b
 31438   01A60A  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31439   01A60C  A4D8               	btfss	status,2,c
 31440   01A60E  EF0B  F0D3         	goto	u30011
 31441   01A612  EF0D  F0D3         	goto	u30010
 31442   01A616                     u30011:
 31443   01A616  EF13  F0D3         	goto	l22009
 31444   01A61A                     u30010:
 31445   01A61A                     
 31446                           ; BSR set to: 6
 31447   01A61A  0E00               	movlw	0
 31448   01A61C  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31449   01A61E  0E00               	movlw	0
 31450   01A620  6F4E               	movwf	find_volume@i& (0+255),b
 31451   01A622  EF19  F0D3         	goto	l22011
 31452   01A626                     l22009:
 31453                           
 31454                           ; BSR set to: 6
 31455   01A626  0EFF               	movlw	255
 31456   01A628  2534               	addwf	find_volume@part& (0+255),w,b
 31457   01A62A  6F4E               	movwf	find_volume@i& (0+255),b
 31458   01A62C  0EFF               	movlw	255
 31459   01A62E  2135               	addwfc	(find_volume@part+1)& (0+255),w,b
 31460   01A630  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31461   01A632                     l22011:
 31462                           
 31463                           ; BSR set to: 6
 31464                           ;../fatfs/ff.c: 3374:   fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;
 31465   01A632  0E3C               	movlw	low find_volume@mbr_pt
 31466   01A634  6F36               	movwf	??_find_volume& (0+255),b
 31467   01A636  0E06               	movlw	high find_volume@mbr_pt
 31468   01A638  6F37               	movwf	(??_find_volume+1)& (0+255),b
 31469   01A63A  90D8               	bcf	status,0,c
 31470   01A63C  354E               	rlcf	find_volume@i& (0+255),w,b
 31471   01A63E  6ED9               	movwf	fsr2l,c
 31472   01A640  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31473   01A642  6EDA               	movwf	fsr2h,c
 31474   01A644  90D8               	bcf	status,0,c
 31475   01A646  36D9               	rlcf	fsr2l,f,c
 31476   01A648  36DA               	rlcf	fsr2h,f,c
 31477   01A64A  5136               	movf	??_find_volume& (0+255),w,b
 31478   01A64C  26D9               	addwf	fsr2l,f,c
 31479   01A64E  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31480   01A650  22DA               	addwfc	fsr2h,f,c
 31481   01A652  50DE               	movf	postinc2,w,c
 31482   01A654  10DE               	iorwf	postinc2,w,c
 31483   01A656  10DE               	iorwf	postinc2,w,c
 31484   01A658  10DE               	iorwf	postinc2,w,c
 31485   01A65A  A4D8               	btfss	status,2,c
 31486   01A65C  EF32  F0D3         	goto	u30021
 31487   01A660  EF34  F0D3         	goto	u30020
 31488   01A664                     u30021:
 31489   01A664  EF3A  F0D3         	goto	l22015
 31490   01A668                     u30020:
 31491   01A668                     
 31492                           ; BSR set to: 6
 31493   01A668  0E00               	movlw	0
 31494   01A66A  6F4D               	movwf	(find_volume@fmt+1)& (0+255),b
 31495   01A66C  0E03               	movlw	3
 31496   01A66E  6F4C               	movwf	find_volume@fmt& (0+255),b
 31497   01A670  EF5C  F0D3         	goto	l22017
 31498   01A674                     l22015:
 31499                           
 31500                           ; BSR set to: 6
 31501   01A674  C632  F624         	movff	find_volume@fs,check_fs@fs
 31502   01A678  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 31503   01A67C  0E3C               	movlw	low find_volume@mbr_pt
 31504   01A67E  6F36               	movwf	??_find_volume& (0+255),b
 31505   01A680  0E06               	movlw	high find_volume@mbr_pt
 31506   01A682  6F37               	movwf	(??_find_volume+1)& (0+255),b
 31507   01A684  90D8               	bcf	status,0,c
 31508   01A686  354E               	rlcf	find_volume@i& (0+255),w,b
 31509   01A688  6ED9               	movwf	fsr2l,c
 31510   01A68A  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31511   01A68C  6EDA               	movwf	fsr2h,c
 31512   01A68E  90D8               	bcf	status,0,c
 31513   01A690  36D9               	rlcf	fsr2l,f,c
 31514   01A692  36DA               	rlcf	fsr2h,f,c
 31515   01A694  5136               	movf	??_find_volume& (0+255),w,b
 31516   01A696  26D9               	addwf	fsr2l,f,c
 31517   01A698  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31518   01A69A  22DA               	addwfc	fsr2h,f,c
 31519   01A69C  C4DE F626          	movff	postinc2,check_fs@sect
 31520   01A6A0  C4DE F627          	movff	postinc2,check_fs@sect+1
 31521   01A6A4  C4DE F628          	movff	postinc2,check_fs@sect+2
 31522   01A6A8  C4DE F629          	movff	postinc2,check_fs@sect+3
 31523   01A6AC  ECEB  F0C2         	call	_check_fs	;wreg free
 31524   01A6B0  C624  F64C         	movff	?_check_fs,find_volume@fmt
 31525   01A6B4  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 31526   01A6B8                     l22017:
 31527                           
 31528                           ;../fatfs/ff.c: 3375:  } while (part == 0 && fmt >= 2 && ++i < 4);
 31529   01A6B8  0106               	movlb	6	; () banked
 31530   01A6BA  5134               	movf	find_volume@part& (0+255),w,b
 31531   01A6BC  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31532   01A6BE  A4D8               	btfss	status,2,c
 31533   01A6C0  EF64  F0D3         	goto	u30031
 31534   01A6C4  EF66  F0D3         	goto	u30030
 31535   01A6C8                     u30031:
 31536   01A6C8  EFB9  F0D2         	goto	l1798
 31537   01A6CC                     u30030:
 31538   01A6CC                     
 31539                           ; BSR set to: 6
 31540   01A6CC  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 31541   01A6CE  E109               	bnz	u30040
 31542   01A6D0  0E02               	movlw	2
 31543   01A6D2  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 31544   01A6D4  A0D8               	btfss	status,0,c
 31545   01A6D6  EF6F  F0D3         	goto	u30041
 31546   01A6DA  EF71  F0D3         	goto	u30040
 31547   01A6DE                     u30041:
 31548   01A6DE  EFB9  F0D2         	goto	l1798
 31549   01A6E2                     u30040:
 31550   01A6E2                     
 31551                           ; BSR set to: 6
 31552   01A6E2  4B4E               	infsnz	find_volume@i& (0+255),f,b
 31553   01A6E4  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 31554   01A6E6  514F               	movf	(find_volume@i+1)& (0+255),w,b
 31555   01A6E8  E109               	bnz	u30050
 31556   01A6EA  0E04               	movlw	4
 31557   01A6EC  5D4E               	subwf	find_volume@i& (0+255),w,b
 31558   01A6EE  A0D8               	btfss	status,0,c
 31559   01A6F0  EF7C  F0D3         	goto	u30051
 31560   01A6F4  EF7E  F0D3         	goto	u30050
 31561   01A6F8                     u30051:
 31562   01A6F8  EF19  F0D3         	goto	l22011
 31563   01A6FC                     u30050:
 31564   01A6FC  EFB9  F0D2         	goto	l1798
 31565   01A700                     l1799:
 31566                           
 31567                           ; BSR set to: 6
 31568   01A700  0012               	return		;funcret
 31569   01A702                     __end_of_find_volume:
 31570                           	callstack 0
 31571                           
 31572 ;; *************** function _check_fs *****************
 31573 ;; Defined at:
 31574 ;;		line 3292 in file "../fatfs/ff.c"
 31575 ;; Parameters:    Size  Location     Type
 31576 ;;  fs              2   36[BANK6 ] PTR struct .
 31577 ;;		 -> fs(564), NULL(0), 
 31578 ;;  sect            4   38[BANK6 ] unsigned long 
 31579 ;; Auto vars:     Size  Location     Type
 31580 ;;  w               2   47[BANK6 ] unsigned short 
 31581 ;;  sign            2   45[BANK6 ] unsigned short 
 31582 ;;  b               1   49[BANK6 ] unsigned char 
 31583 ;; Return value:  Size  Location     Type
 31584 ;;                  2   36[BANK6 ] unsigned int 
 31585 ;; Registers used:
 31586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31587 ;; Tracked objects:
 31588 ;;		On entry : 0/0
 31589 ;;		On exit  : 0/0
 31590 ;;		Unchanged: 0/0
 31591 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31592 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31593 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31594 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31595 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31596 ;;Total ram usage:       14 bytes
 31597 ;; Hardware stack levels used: 1
 31598 ;; Hardware stack levels required when called: 14
 31599 ;; This function calls:
 31600 ;;		_ld_dword
 31601 ;;		_ld_word
 31602 ;;		_memcmp
 31603 ;;		_move_window
 31604 ;; This function is called by:
 31605 ;;		_find_volume
 31606 ;; This function uses a non-reentrant model
 31607 ;;
 31608                           
 31609                           	psect	text77
 31610   0185D6                     __ptext77:
 31611                           	callstack 0
 31612   0185D6                     _check_fs:
 31613                           	callstack 103
 31614   0185D6                     
 31615                           ;../fatfs/ff.c: 3293:  FATFS* fs,;../fatfs/ff.c: 3294:  LBA_t sect;../fatfs/ff.c: 3296: 
      +                          {;../fatfs/ff.c: 3297:  WORD w, sign;;../fatfs/ff.c: 3298:  BYTE b;;../fatfs/ff.c: 3301:
      +                            fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;
 31616   0185D6  0106               	movlb	6	; () banked
 31617   0185D8  EE20 F004          	lfsr	2,4
 31618   0185DC  5124               	movf	check_fs@fs& (0+255),w,b
 31619   0185DE  26D9               	addwf	fsr2l,f,c
 31620   0185E0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31621   0185E2  22DA               	addwfc	fsr2h,f,c
 31622   0185E4  6ADF               	clrf	indf2,c
 31623   0185E6  EE20 F030          	lfsr	2,48
 31624   0185EA  5124               	movf	check_fs@fs& (0+255),w,b
 31625   0185EC  26D9               	addwf	fsr2l,f,c
 31626   0185EE  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31627   0185F0  22DA               	addwfc	fsr2h,f,c
 31628   0185F2  0EFF               	movlw	255
 31629   0185F4  6EDE               	movwf	postinc2,c
 31630   0185F6  0EFF               	movlw	255
 31631   0185F8  6EDE               	movwf	postinc2,c
 31632   0185FA  0EFF               	movlw	255
 31633   0185FC  6EDE               	movwf	postinc2,c
 31634   0185FE  0EFF               	movlw	255
 31635   018600  6EDD               	movwf	postdec2,c
 31636   018602                     
 31637                           ; BSR set to: 6
 31638                           ;../fatfs/ff.c: 3302:  if (move_window(fs, sect) != FR_OK) return 4;
 31639   018602  C624  F61A         	movff	check_fs@fs,move_window@fs
 31640   018606  C625  F61B         	movff	check_fs@fs+1,move_window@fs+1
 31641   01860A  C626  F61C         	movff	check_fs@sect,move_window@sect
 31642   01860E  C627  F61D         	movff	check_fs@sect+1,move_window@sect+1
 31643   018612  C628  F61E         	movff	check_fs@sect+2,move_window@sect+2
 31644   018616  C629  F61F         	movff	check_fs@sect+3,move_window@sect+3
 31645   01861A  ECAB  F0EF         	call	_move_window	;wreg free
 31646   01861E  0900               	iorlw	0
 31647   018620  B4D8               	btfsc	status,2,c
 31648   018622  EF15  F0C3         	goto	u29081
 31649   018626  EF17  F0C3         	goto	u29080
 31650   01862A                     u29081:
 31651   01862A  EF1E  F0C3         	goto	l21585
 31652   01862E                     u29080:
 31653   01862E  0E00               	movlw	0
 31654   018630  0106               	movlb	6	; () banked
 31655   018632  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31656   018634  0E04               	movlw	4
 31657   018636  6F24               	movwf	?_check_fs& (0+255),b
 31658   018638  EF60  F0C4         	goto	l1782
 31659   01863C                     l21585:
 31660                           
 31661                           ;../fatfs/ff.c: 3303:  sign = ld_word(fs->win + 510);
 31662   01863C  0E32               	movlw	50
 31663   01863E  0106               	movlb	6	; () banked
 31664   018640  2524               	addwf	check_fs@fs& (0+255),w,b
 31665   018642  6E04               	movwf	ld_word@ptr^(0+1280),c
 31666   018644  0E02               	movlw	2
 31667   018646  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31668   018648  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31669   01864A  EC4C  F0FF         	call	_ld_word	;wreg free
 31670   01864E  C504  F62D         	movff	?_ld_word,check_fs@sign
 31671   018652  C505  F62E         	movff	?_ld_word+1,check_fs@sign+1
 31672   018656                     
 31673                           ;../fatfs/ff.c: 3307:  b = fs->win[0];
 31674   018656  0106               	movlb	6	; () banked
 31675   018658  EE20 F034          	lfsr	2,52
 31676   01865C  5124               	movf	check_fs@fs& (0+255),w,b
 31677   01865E  26D9               	addwf	fsr2l,f,c
 31678   018660  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31679   018662  22DA               	addwfc	fsr2h,f,c
 31680   018664  50DF               	movf	indf2,w,c
 31681   018666  6F31               	movwf	check_fs@b& (0+255),b
 31682   018668                     
 31683                           ; BSR set to: 6
 31684                           ;../fatfs/ff.c: 3308:  if (b == 0xEB || b == 0xE9 || b == 0xE8) {
 31685   018668  0EEB               	movlw	235
 31686   01866A  1931               	xorwf	check_fs@b& (0+255),w,b
 31687   01866C  B4D8               	btfsc	status,2,c
 31688   01866E  EF3B  F0C3         	goto	u29091
 31689   018672  EF3D  F0C3         	goto	u29090
 31690   018676                     u29091:
 31691   018676  EF4F  F0C3         	goto	l21595
 31692   01867A                     u29090:
 31693   01867A                     
 31694                           ; BSR set to: 6
 31695   01867A  0EE9               	movlw	233
 31696   01867C  1931               	xorwf	check_fs@b& (0+255),w,b
 31697   01867E  B4D8               	btfsc	status,2,c
 31698   018680  EF44  F0C3         	goto	u29101
 31699   018684  EF46  F0C3         	goto	u29100
 31700   018688                     u29101:
 31701   018688  EF4F  F0C3         	goto	l21595
 31702   01868C                     u29100:
 31703   01868C                     
 31704                           ; BSR set to: 6
 31705   01868C  0EE8               	movlw	232
 31706   01868E  1931               	xorwf	check_fs@b& (0+255),w,b
 31707   018690  A4D8               	btfss	status,2,c
 31708   018692  EF4D  F0C3         	goto	u29111
 31709   018696  EF4F  F0C3         	goto	u29110
 31710   01869A                     u29111:
 31711   01869A  EF49  F0C4         	goto	l21633
 31712   01869E                     u29110:
 31713   01869E                     l21595:
 31714                           
 31715                           ; BSR set to: 6
 31716                           ;../fatfs/ff.c: 3309:   if (sign == 0xAA55 && !memcmp(fs->win + 82, "FAT32   ", 8)) {
 31717   01869E  0E55               	movlw	85
 31718   0186A0  192D               	xorwf	check_fs@sign& (0+255),w,b
 31719   0186A2  E107               	bnz	u29121
 31720   0186A4  0EAA               	movlw	170
 31721   0186A6  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 31722   0186A8  A4D8               	btfss	status,2,c
 31723   0186AA  EF59  F0C3         	goto	u29121
 31724   0186AE  EF5B  F0C3         	goto	u29120
 31725   0186B2                     u29121:
 31726   0186B2  EF7B  F0C3         	goto	l21603
 31727   0186B6                     u29120:
 31728   0186B6                     
 31729                           ; BSR set to: 6
 31730   0186B6  0E86               	movlw	134
 31731   0186B8  2524               	addwf	check_fs@fs& (0+255),w,b
 31732   0186BA  6E04               	movwf	memcmp@vl^(0+1280),c
 31733   0186BC  0E00               	movlw	0
 31734   0186BE  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31735   0186C0  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 31736   0186C2  0E15               	movlw	low STR_168
 31737   0186C4  6E06               	movwf	memcmp@vr^(0+1280),c
 31738   0186C6  0EFF               	movlw	high STR_168
 31739   0186C8  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 31740   0186CA  0E00               	movlw	0
 31741   0186CC  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 31742   0186CE  0E08               	movlw	8
 31743   0186D0  6E08               	movwf	memcmp@n^(0+1280),c
 31744   0186D2  EC23  F0EA         	call	_memcmp	;wreg free
 31745   0186D6  5004               	movf	?_memcmp^(0+1280),w,c
 31746   0186D8  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 31747   0186DA  A4D8               	btfss	status,2,c
 31748   0186DC  EF72  F0C3         	goto	u29131
 31749   0186E0  EF74  F0C3         	goto	u29130
 31750   0186E4                     u29131:
 31751   0186E4  EF7B  F0C3         	goto	l21603
 31752   0186E8                     u29130:
 31753   0186E8                     l21599:
 31754                           
 31755                           ;../fatfs/ff.c: 3310:    return 0;
 31756   0186E8  0E00               	movlw	0
 31757   0186EA  0106               	movlb	6	; () banked
 31758   0186EC  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31759   0186EE  0E00               	movlw	0
 31760   0186F0  6F24               	movwf	?_check_fs& (0+255),b
 31761   0186F2  EF60  F0C4         	goto	l1782
 31762   0186F6                     l21603:
 31763                           
 31764                           ;../fatfs/ff.c: 3313:   w = ld_word(fs->win + 11);
 31765   0186F6  0E3F               	movlw	63
 31766   0186F8  0106               	movlb	6	; () banked
 31767   0186FA  2524               	addwf	check_fs@fs& (0+255),w,b
 31768   0186FC  6E04               	movwf	ld_word@ptr^(0+1280),c
 31769   0186FE  0E00               	movlw	0
 31770   018700  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31771   018702  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31772   018704  EC4C  F0FF         	call	_ld_word	;wreg free
 31773   018708  C504  F62F         	movff	?_ld_word,check_fs@w
 31774   01870C  C505  F630         	movff	?_ld_word+1,check_fs@w+1
 31775   018710                     
 31776                           ;../fatfs/ff.c: 3314:   b = fs->win[13];
 31777   018710  0106               	movlb	6	; () banked
 31778   018712  EE20 F041          	lfsr	2,65
 31779   018716  5124               	movf	check_fs@fs& (0+255),w,b
 31780   018718  26D9               	addwf	fsr2l,f,c
 31781   01871A  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31782   01871C  22DA               	addwfc	fsr2h,f,c
 31783   01871E  50DF               	movf	indf2,w,c
 31784   018720  6F31               	movwf	check_fs@b& (0+255),b
 31785   018722                     
 31786                           ; BSR set to: 6
 31787                           ;../fatfs/ff.c: 3315:   if ((w & (w - 1)) == 0 && w >= 512 && w <= 512
 31788   018722  0EFF               	movlw	255
 31789   018724  252F               	addwf	check_fs@w& (0+255),w,b
 31790   018726  6F2A               	movwf	??_check_fs& (0+255),b
 31791   018728  0EFF               	movlw	255
 31792   01872A  2130               	addwfc	(check_fs@w+1)& (0+255),w,b
 31793   01872C  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 31794   01872E  512F               	movf	check_fs@w& (0+255),w,b
 31795   018730  172A               	andwf	??_check_fs& (0+255),f,b
 31796   018732  5130               	movf	(check_fs@w+1)& (0+255),w,b
 31797   018734  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 31798   018736  512A               	movf	??_check_fs& (0+255),w,b
 31799   018738  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 31800   01873A  A4D8               	btfss	status,2,c
 31801   01873C  EFA2  F0C3         	goto	u29141
 31802   018740  EFA4  F0C3         	goto	u29140
 31803   018744                     u29141:
 31804   018744  EF49  F0C4         	goto	l21633
 31805   018748                     u29140:
 31806   018748                     
 31807                           ; BSR set to: 6
 31808   018748  0E02               	movlw	2
 31809   01874A  5D30               	subwf	(check_fs@w+1)& (0+255),w,b
 31810   01874C  A0D8               	btfss	status,0,c
 31811   01874E  EFAB  F0C3         	goto	u29151
 31812   018752  EFAD  F0C3         	goto	u29150
 31813   018756                     u29151:
 31814   018756  EF49  F0C4         	goto	l21633
 31815   01875A                     u29150:
 31816   01875A                     
 31817                           ; BSR set to: 6
 31818   01875A  052F               	decf	check_fs@w& (0+255),w,b
 31819   01875C  0E02               	movlw	2
 31820   01875E  5930               	subwfb	(check_fs@w+1)& (0+255),w,b
 31821   018760  B0D8               	btfsc	status,0,c
 31822   018762  EFB5  F0C3         	goto	u29161
 31823   018766  EFB7  F0C3         	goto	u29160
 31824   01876A                     u29161:
 31825   01876A  EF49  F0C4         	goto	l21633
 31826   01876E                     u29160:
 31827   01876E                     
 31828                           ; BSR set to: 6
 31829   01876E  5131               	movf	check_fs@b& (0+255),w,b
 31830   018770  B4D8               	btfsc	status,2,c
 31831   018772  EFBD  F0C3         	goto	u29171
 31832   018776  EFBF  F0C3         	goto	u29170
 31833   01877A                     u29171:
 31834   01877A  EF49  F0C4         	goto	l21633
 31835   01877E                     u29170:
 31836   01877E                     
 31837                           ; BSR set to: 6
 31838   01877E  0EFF               	movlw	255
 31839   018780  2531               	addwf	check_fs@b& (0+255),w,b
 31840   018782  6F2A               	movwf	??_check_fs& (0+255),b
 31841   018784  6B2B               	clrf	(??_check_fs+1)& (0+255),b
 31842   018786  0EFF               	movlw	255
 31843   018788  232B               	addwfc	(??_check_fs+1)& (0+255),f,b
 31844   01878A  5131               	movf	check_fs@b& (0+255),w,b
 31845   01878C  172A               	andwf	??_check_fs& (0+255),f,b
 31846   01878E  0E00               	movlw	0
 31847   018790  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 31848   018792  512A               	movf	??_check_fs& (0+255),w,b
 31849   018794  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 31850   018796  A4D8               	btfss	status,2,c
 31851   018798  EFD0  F0C3         	goto	u29181
 31852   01879C  EFD2  F0C3         	goto	u29180
 31853   0187A0                     u29181:
 31854   0187A0  EF49  F0C4         	goto	l21633
 31855   0187A4                     u29180:
 31856   0187A4                     
 31857                           ; BSR set to: 6
 31858   0187A4  0E42               	movlw	66
 31859   0187A6  2524               	addwf	check_fs@fs& (0+255),w,b
 31860   0187A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 31861   0187AA  0E00               	movlw	0
 31862   0187AC  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31863   0187AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31864   0187B0  EC4C  F0FF         	call	_ld_word	;wreg free
 31865   0187B4  5004               	movf	?_ld_word^(0+1280),w,c
 31866   0187B6  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31867   0187B8  B4D8               	btfsc	status,2,c
 31868   0187BA  EFE1  F0C3         	goto	u29191
 31869   0187BE  EFE3  F0C3         	goto	u29190
 31870   0187C2                     u29191:
 31871   0187C2  EF49  F0C4         	goto	l21633
 31872   0187C6                     u29190:
 31873   0187C6  0106               	movlb	6	; () banked
 31874   0187C8  EE20 F044          	lfsr	2,68
 31875   0187CC  5124               	movf	check_fs@fs& (0+255),w,b
 31876   0187CE  26D9               	addwf	fsr2l,f,c
 31877   0187D0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31878   0187D2  22DA               	addwfc	fsr2h,f,c
 31879   0187D4  50DF               	movf	indf2,w,c
 31880   0187D6  6F2A               	movwf	??_check_fs& (0+255),b
 31881   0187D8  0EFF               	movlw	255
 31882   0187DA  252A               	addwf	??_check_fs& (0+255),w,b
 31883   0187DC  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 31884   0187DE  6B2C               	clrf	(??_check_fs+2)& (0+255),b
 31885   0187E0  0EFF               	movlw	255
 31886   0187E2  232C               	addwfc	(??_check_fs+2)& (0+255),f,b
 31887   0187E4  512C               	movf	(??_check_fs+2)& (0+255),w,b
 31888   0187E6  E107               	bnz	u29201
 31889   0187E8  0E02               	movlw	2
 31890   0187EA  5D2B               	subwf	(??_check_fs+1)& (0+255),w,b
 31891   0187EC  B0D8               	btfsc	status,0,c
 31892   0187EE  EFFB  F0C3         	goto	u29201
 31893   0187F2  EFFD  F0C3         	goto	u29200
 31894   0187F6                     u29201:
 31895   0187F6  EF49  F0C4         	goto	l21633
 31896   0187FA                     u29200:
 31897   0187FA                     
 31898                           ; BSR set to: 6
 31899   0187FA  0E45               	movlw	69
 31900   0187FC  2524               	addwf	check_fs@fs& (0+255),w,b
 31901   0187FE  6E04               	movwf	ld_word@ptr^(0+1280),c
 31902   018800  0E00               	movlw	0
 31903   018802  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31904   018804  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31905   018806  EC4C  F0FF         	call	_ld_word	;wreg free
 31906   01880A  5004               	movf	?_ld_word^(0+1280),w,c
 31907   01880C  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31908   01880E  B4D8               	btfsc	status,2,c
 31909   018810  EF0C  F0C4         	goto	u29211
 31910   018814  EF0E  F0C4         	goto	u29210
 31911   018818                     u29211:
 31912   018818  EF49  F0C4         	goto	l21633
 31913   01881C                     u29210:
 31914   01881C  0E47               	movlw	71
 31915   01881E  0106               	movlb	6	; () banked
 31916   018820  2524               	addwf	check_fs@fs& (0+255),w,b
 31917   018822  6E04               	movwf	ld_word@ptr^(0+1280),c
 31918   018824  0E00               	movlw	0
 31919   018826  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31920   018828  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31921   01882A  EC4C  F0FF         	call	_ld_word	;wreg free
 31922   01882E  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 31923   018830  E107               	bnz	u29221
 31924   018832  0E80               	movlw	128
 31925   018834  5C04               	subwf	?_ld_word^(0+1280),w,c
 31926   018836  B0D8               	btfsc	status,0,c
 31927   018838  EF20  F0C4         	goto	u29221
 31928   01883C  EF22  F0C4         	goto	u29220
 31929   018840                     u29221:
 31930   018840  EF35  F0C4         	goto	l21627
 31931   018844                     u29220:
 31932   018844  0E54               	movlw	84
 31933   018846  0106               	movlb	6	; () banked
 31934   018848  2524               	addwf	check_fs@fs& (0+255),w,b
 31935   01884A  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31936   01884C  0E00               	movlw	0
 31937   01884E  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31938   018850  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31939   018852  ECC7  F0F2         	call	_ld_dword	;wreg free
 31940   018856  5007               	movf	(?_ld_dword+3)^(0+1280),w,c
 31941   018858  E108               	bnz	u29230
 31942   01885A  0406               	decf	(?_ld_dword+2)^(0+1280),w,c
 31943   01885C  A0D8               	btfss	status,0,c
 31944   01885E  EF33  F0C4         	goto	u29231
 31945   018862  EF35  F0C4         	goto	u29230
 31946   018866                     u29231:
 31947   018866  EF49  F0C4         	goto	l21633
 31948   01886A                     u29230:
 31949   01886A                     l21627:
 31950   01886A  0E4A               	movlw	74
 31951   01886C  0106               	movlb	6	; () banked
 31952   01886E  2524               	addwf	check_fs@fs& (0+255),w,b
 31953   018870  6E04               	movwf	ld_word@ptr^(0+1280),c
 31954   018872  0E00               	movlw	0
 31955   018874  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31956   018876  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31957   018878  EC4C  F0FF         	call	_ld_word	;wreg free
 31958   01887C  5004               	movf	?_ld_word^(0+1280),w,c
 31959   01887E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31960   018880  B4D8               	btfsc	status,2,c
 31961   018882  EF45  F0C4         	goto	u29241
 31962   018886  EF47  F0C4         	goto	u29240
 31963   01888A                     u29241:
 31964   01888A  EF49  F0C4         	goto	l21633
 31965   01888E                     u29240:
 31966   01888E  EF74  F0C3         	goto	l21599
 31967   018892                     l21633:
 31968                           
 31969                           ;../fatfs/ff.c: 3325:  return sign == 0xAA55 ? 2 : 3;
 31970   018892  0E55               	movlw	85
 31971   018894  0106               	movlb	6	; () banked
 31972   018896  192D               	xorwf	check_fs@sign& (0+255),w,b
 31973   018898  E109               	bnz	u29250
 31974   01889A  0EAA               	movlw	170
 31975   01889C  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 31976   01889E  B4D8               	btfsc	status,2,c
 31977   0188A0  EF54  F0C4         	goto	u29251
 31978   0188A4  EF56  F0C4         	goto	u29250
 31979   0188A8                     u29251:
 31980   0188A8  EF5C  F0C4         	goto	l21637
 31981   0188AC                     u29250:
 31982   0188AC                     
 31983                           ; BSR set to: 6
 31984   0188AC  0E00               	movlw	0
 31985   0188AE  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31986   0188B0  0E03               	movlw	3
 31987   0188B2  6F24               	movwf	?_check_fs& (0+255),b
 31988   0188B4  EF60  F0C4         	goto	l1782
 31989   0188B8                     l21637:
 31990                           
 31991                           ; BSR set to: 6
 31992   0188B8  0E00               	movlw	0
 31993   0188BA  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31994   0188BC  0E02               	movlw	2
 31995   0188BE  6F24               	movwf	?_check_fs& (0+255),b
 31996   0188C0                     l1782:
 31997                           
 31998                           ; BSR set to: 6
 31999   0188C0  0012               	return		;funcret
 32000   0188C2                     __end_of_check_fs:
 32001                           	callstack 0
 32002                           
 32003 ;; *************** function _disk_initialize *****************
 32004 ;; Defined at:
 32005 ;;		line 53 in file "../drivers/diskio.c"
 32006 ;; Parameters:    Size  Location     Type
 32007 ;;  pdrv            1    wreg     unsigned char 
 32008 ;; Auto vars:     Size  Location     Type
 32009 ;;  pdrv            1  128[BANK6 ] unsigned char 
 32010 ;;  buf           128    0[BANK6 ] unsigned char [128]
 32011 ;; Return value:  Size  Location     Type
 32012 ;;                  1    wreg      unsigned char 
 32013 ;; Registers used:
 32014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32015 ;; Tracked objects:
 32016 ;;		On entry : 0/0
 32017 ;;		On exit  : 0/0
 32018 ;;		Unchanged: 0/0
 32019 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32021 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32023 ;;      Totals:         0       4     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32024 ;;Total ram usage:      133 bytes
 32025 ;; Hardware stack levels used: 1
 32026 ;; Hardware stack levels required when called: 11
 32027 ;; This function calls:
 32028 ;;		_SDCard_read512
 32029 ;;		_printf
 32030 ;;		_util_hexdump
 32031 ;; This function is called by:
 32032 ;;		_mount_volume
 32033 ;; This function uses a non-reentrant model
 32034 ;;
 32035                           
 32036                           	psect	text78
 32037   01B4A8                     __ptext78:
 32038                           	callstack 0
 32039   01B4A8                     _disk_initialize:
 32040                           	callstack 107
 32041                           
 32042                           ; BSR set to: 6
 32043                           ;incstack = 0
 32044                           ;disk_initialize@pdrv stored from wreg
 32045   01B4A8  0106               	movlb	6	; () banked
 32046   01B4AA  6F80               	movwf	disk_initialize@pdrv& (0+255),b
 32047   01B4AC                     
 32048                           ;../drivers/diskio.c: 58:     if (pdrv != 0) {
 32049   01B4AC  0106               	movlb	6	; () banked
 32050   01B4AE  5180               	movf	disk_initialize@pdrv& (0+255),w,b
 32051   01B4B0  B4D8               	btfsc	status,2,c
 32052   01B4B2  EF5D  F0DA         	goto	u30061
 32053   01B4B6  EF5F  F0DA         	goto	u30060
 32054   01B4BA                     u30061:
 32055   01B4BA  EF62  F0DA         	goto	l2430
 32056   01B4BE                     u30060:
 32057   01B4BE                     l22029:
 32058                           
 32059                           ;../drivers/diskio.c: 60:         return 0x02;
 32060   01B4BE  0E02               	movlw	2
 32061   01B4C0  EF25  F0DB         	goto	l2428
 32062   01B4C4                     l2430:
 32063   01B4C4                     
 32064                           ; BSR set to: 6
 32065                           ;../drivers/diskio.c: 65:     if (SDCard_read512(0, 384, buf, 128) != 0) {
 32066   01B4C4  0E00               	movlw	0
 32067   01B4C6  0105               	movlb	5	; () banked
 32068   01B4C8  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 32069   01B4CA  0E00               	movlw	0
 32070   01B4CC  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 32071   01B4CE  0E00               	movlw	0
 32072   01B4D0  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 32073   01B4D2  0E00               	movlw	0
 32074   01B4D4  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 32075   01B4D6  0E01               	movlw	1
 32076   01B4D8  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 32077   01B4DA  0E80               	movlw	128
 32078   01B4DC  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 32079   01B4DE  0E00               	movlw	low disk_initialize@buf
 32080   01B4E0  6FE4               	movwf	SDCard_read512@buf& (0+255),b
 32081   01B4E2  0E06               	movlw	high disk_initialize@buf
 32082   01B4E4  6FE5               	movwf	(SDCard_read512@buf+1)& (0+255),b
 32083   01B4E6  0E00               	movlw	0
 32084   01B4E8  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 32085   01B4EA  0E80               	movlw	128
 32086   01B4EC  6FE6               	movwf	SDCard_read512@count& (0+255),b
 32087   01B4EE  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 32088   01B4F2  0105               	movlb	5	; () banked
 32089   01B4F4  51DE               	movf	?_SDCard_read512& (0+255),w,b
 32090   01B4F6  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 32091   01B4F8  B4D8               	btfsc	status,2,c
 32092   01B4FA  EF81  F0DA         	goto	u30071
 32093   01B4FE  EF83  F0DA         	goto	u30070
 32094   01B502                     u30071:
 32095   01B502  EF85  F0DA         	goto	l22047
 32096   01B506                     u30070:
 32097   01B506  EF5F  F0DA         	goto	l22029
 32098   01B50A                     l22047:
 32099                           
 32100                           ; BSR set to: 5
 32101                           ;../drivers/diskio.c: 72:     if (buf[126] != 0x55 || buf[127] != 0xaa) {
 32102   01B50A  0E55               	movlw	85
 32103   01B50C  0106               	movlb	6	; () banked
 32104   01B50E  197E               	xorwf	(disk_initialize@buf+126)& (0+255),w,b
 32105   01B510  A4D8               	btfss	status,2,c
 32106   01B512  EF8D  F0DA         	goto	u30081
 32107   01B516  EF8F  F0DA         	goto	u30080
 32108   01B51A                     u30081:
 32109   01B51A  EF9A  F0DA         	goto	l2442
 32110   01B51E                     u30080:
 32111   01B51E                     
 32112                           ; BSR set to: 6
 32113   01B51E  0EAA               	movlw	170
 32114   01B520  197F               	xorwf	(disk_initialize@buf+127)& (0+255),w,b
 32115   01B522  B4D8               	btfsc	status,2,c
 32116   01B524  EF96  F0DA         	goto	u30091
 32117   01B528  EF98  F0DA         	goto	u30090
 32118   01B52C                     u30091:
 32119   01B52C  EF9C  F0DA         	goto	l22057
 32120   01B530                     u30090:
 32121   01B530  EF5F  F0DA         	goto	l22029
 32122   01B534                     l2442:
 32123                           
 32124                           ; BSR set to: 6
 32125   01B534  EF5F  F0DA         	goto	l22029
 32126   01B538                     l22057:
 32127                           
 32128                           ; BSR set to: 6
 32129                           ;../drivers/diskio.c: 84:     if (buf[66] != 0x01 && buf[66] != 0x04 && buf[66] != 0x06 
      +                          &&
 32130   01B538  0542               	decf	(disk_initialize@buf+66)& (0+255),w,b
 32131   01B53A  B4D8               	btfsc	status,2,c
 32132   01B53C  EFA2  F0DA         	goto	u30101
 32133   01B540  EFA4  F0DA         	goto	u30100
 32134   01B544                     u30101:
 32135   01B544  EFD3  F0DA         	goto	l22075
 32136   01B548                     u30100:
 32137   01B548                     
 32138                           ; BSR set to: 6
 32139   01B548  0E04               	movlw	4
 32140   01B54A  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32141   01B54C  B4D8               	btfsc	status,2,c
 32142   01B54E  EFAB  F0DA         	goto	u30111
 32143   01B552  EFAD  F0DA         	goto	u30110
 32144   01B556                     u30111:
 32145   01B556  EFD3  F0DA         	goto	l22075
 32146   01B55A                     u30110:
 32147   01B55A                     
 32148                           ; BSR set to: 6
 32149   01B55A  0E06               	movlw	6
 32150   01B55C  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32151   01B55E  B4D8               	btfsc	status,2,c
 32152   01B560  EFB4  F0DA         	goto	u30121
 32153   01B564  EFB6  F0DA         	goto	u30120
 32154   01B568                     u30121:
 32155   01B568  EFD3  F0DA         	goto	l22075
 32156   01B56C                     u30120:
 32157   01B56C                     
 32158                           ; BSR set to: 6
 32159   01B56C  0E0B               	movlw	11
 32160   01B56E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32161   01B570  B4D8               	btfsc	status,2,c
 32162   01B572  EFBD  F0DA         	goto	u30131
 32163   01B576  EFBF  F0DA         	goto	u30130
 32164   01B57A                     u30131:
 32165   01B57A  EFD3  F0DA         	goto	l22075
 32166   01B57E                     u30130:
 32167   01B57E                     
 32168                           ; BSR set to: 6
 32169   01B57E  0E0C               	movlw	12
 32170   01B580  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32171   01B582  B4D8               	btfsc	status,2,c
 32172   01B584  EFC6  F0DA         	goto	u30141
 32173   01B588  EFC8  F0DA         	goto	u30140
 32174   01B58C                     u30141:
 32175   01B58C  EFD3  F0DA         	goto	l22075
 32176   01B590                     u30140:
 32177   01B590                     
 32178                           ; BSR set to: 6
 32179   01B590  0E0E               	movlw	14
 32180   01B592  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32181   01B594  B4D8               	btfsc	status,2,c
 32182   01B596  EFCF  F0DA         	goto	u30151
 32183   01B59A  EFD1  F0DA         	goto	u30150
 32184   01B59E                     u30151:
 32185   01B59E  EFD3  F0DA         	goto	l22075
 32186   01B5A2                     u30150:
 32187   01B5A2  EF5F  F0DA         	goto	l22029
 32188   01B5A6                     l22075:
 32189                           
 32190                           ; BSR set to: 6
 32191                           ;../drivers/diskio.c: 89:     start_lba = buf[73];
 32192   01B5A6  5149               	movf	(disk_initialize@buf+73)& (0+255),w,b
 32193   01B5A8  0107               	movlb	7	; () banked
 32194   01B5AA  6FEE               	movwf	_start_lba& (0+255),b
 32195   01B5AC  6BEF               	clrf	(_start_lba+1)& (0+255),b
 32196   01B5AE  6BF0               	clrf	(_start_lba+2)& (0+255),b
 32197   01B5B0  6BF1               	clrf	(_start_lba+3)& (0+255),b
 32198   01B5B2                     
 32199                           ; BSR set to: 7
 32200                           ;../drivers/diskio.c: 90:     start_lba = (start_lba << 8) | buf[72];
 32201   01B5B2  0106               	movlb	6	; () banked
 32202   01B5B4  5148               	movf	(disk_initialize@buf+72)& (0+255),w,b
 32203   01B5B6  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32204   01B5BA  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32205   01B5BE  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32206   01B5C2  0105               	movlb	5	; () banked
 32207   01B5C4  6BFB               	clrf	??_disk_initialize& (0+255),b
 32208   01B5C6  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32209   01B5C8  0107               	movlb	7	; () banked
 32210   01B5CA  6FEE               	movwf	_start_lba& (0+255),b
 32211   01B5CC  0105               	movlb	5	; () banked
 32212   01B5CE  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32213   01B5D0  0107               	movlb	7	; () banked
 32214   01B5D2  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32215   01B5D4  0105               	movlb	5	; () banked
 32216   01B5D6  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32217   01B5D8  0107               	movlb	7	; () banked
 32218   01B5DA  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32219   01B5DC  0105               	movlb	5	; () banked
 32220   01B5DE  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32221   01B5E0  0107               	movlb	7	; () banked
 32222   01B5E2  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32223   01B5E4                     
 32224                           ; BSR set to: 7
 32225                           ;../drivers/diskio.c: 91:     start_lba = (start_lba << 8) | buf[71];
 32226   01B5E4  0106               	movlb	6	; () banked
 32227   01B5E6  5147               	movf	(disk_initialize@buf+71)& (0+255),w,b
 32228   01B5E8  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32229   01B5EC  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32230   01B5F0  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32231   01B5F4  0105               	movlb	5	; () banked
 32232   01B5F6  6BFB               	clrf	??_disk_initialize& (0+255),b
 32233   01B5F8  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32234   01B5FA  0107               	movlb	7	; () banked
 32235   01B5FC  6FEE               	movwf	_start_lba& (0+255),b
 32236   01B5FE  0105               	movlb	5	; () banked
 32237   01B600  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32238   01B602  0107               	movlb	7	; () banked
 32239   01B604  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32240   01B606  0105               	movlb	5	; () banked
 32241   01B608  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32242   01B60A  0107               	movlb	7	; () banked
 32243   01B60C  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32244   01B60E  0105               	movlb	5	; () banked
 32245   01B610  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32246   01B612  0107               	movlb	7	; () banked
 32247   01B614  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32248   01B616                     
 32249                           ; BSR set to: 7
 32250                           ;../drivers/diskio.c: 92:     start_lba = (start_lba << 8) | buf[70];
 32251   01B616  0106               	movlb	6	; () banked
 32252   01B618  5146               	movf	(disk_initialize@buf+70)& (0+255),w,b
 32253   01B61A  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32254   01B61E  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32255   01B622  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32256   01B626  0105               	movlb	5	; () banked
 32257   01B628  6BFB               	clrf	??_disk_initialize& (0+255),b
 32258   01B62A  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32259   01B62C  0107               	movlb	7	; () banked
 32260   01B62E  6FEE               	movwf	_start_lba& (0+255),b
 32261   01B630  0105               	movlb	5	; () banked
 32262   01B632  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32263   01B634  0107               	movlb	7	; () banked
 32264   01B636  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32265   01B638  0105               	movlb	5	; () banked
 32266   01B63A  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32267   01B63C  0107               	movlb	7	; () banked
 32268   01B63E  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32269   01B640  0105               	movlb	5	; () banked
 32270   01B642  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32271   01B644  0107               	movlb	7	; () banked
 32272   01B646  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32273   01B648                     
 32274                           ; BSR set to: 7
 32275                           ;../drivers/diskio.c: 95:     return 0;
 32276   01B648  0E00               	movlw	0
 32277   01B64A                     l2428:
 32278   01B64A  0012               	return		;funcret
 32279   01B64C                     __end_of_disk_initialize:
 32280                           	callstack 0
 32281                           
 32282 ;; *************** function _follow_path *****************
 32283 ;; Defined at:
 32284 ;;		line 3052 in file "../fatfs/ff.c"
 32285 ;; Parameters:    Size  Location     Type
 32286 ;;  dp              2  132[BANK6 ] PTR struct .
 32287 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 32288 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 32289 ;;		 -> scan_files@dir(40), 
 32290 ;;  path            2  134[BANK6 ] PTR const unsigned char 
 32291 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 32292 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 32293 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 32294 ;; Auto vars:     Size  Location     Type
 32295 ;;  fs              2  142[BANK6 ] PTR struct .
 32296 ;;		 -> fs(564), NULL(0), 
 32297 ;;  res             1  145[BANK6 ] enum E597
 32298 ;;  ns              1  144[BANK6 ] unsigned char 
 32299 ;; Return value:  Size  Location     Type
 32300 ;;                  1    wreg      enum E597
 32301 ;; Registers used:
 32302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32303 ;; Tracked objects:
 32304 ;;		On entry : 0/0
 32305 ;;		On exit  : 0/0
 32306 ;;		Unchanged: 0/0
 32307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32308 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32309 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32310 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32311 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32312 ;;Total ram usage:       14 bytes
 32313 ;; Hardware stack levels used: 1
 32314 ;; Hardware stack levels required when called: 18
 32315 ;; This function calls:
 32316 ;;		_create_name
 32317 ;;		_dir_find
 32318 ;;		_dir_sdi
 32319 ;;		_ld_clust
 32320 ;; This function is called by:
 32321 ;;		_f_open
 32322 ;;		_f_chdir
 32323 ;;		_f_opendir
 32324 ;;		_f_stat
 32325 ;;		_f_unlink
 32326 ;;		_f_mkdir
 32327 ;;		_f_rename
 32328 ;; This function uses a non-reentrant model
 32329 ;;
 32330                           
 32331                           	psect	text79
 32332   0188C2                     __ptext79:
 32333                           	callstack 0
 32334   0188C2                     _follow_path:
 32335                           	callstack 101
 32336   0188C2                     
 32337                           ;../fatfs/ff.c: 3053:  DIR* dp,;../fatfs/ff.c: 3054:  const TCHAR* path;../fatfs/ff.c: 3
      +                          056: {;../fatfs/ff.c: 3057:  FRESULT res;;../fatfs/ff.c: 3058:  BYTE ns;;../fatfs/ff.c: 
      +                          3059:  FATFS *fs = dp->obj.fs;
 32338   0188C2  C684  F4D9         	movff	follow_path@dp,fsr2l
 32339   0188C6  C685  F4DA         	movff	follow_path@dp+1,fsr2h
 32340   0188CA  C4DE F68E          	movff	postinc2,follow_path@fs
 32341   0188CE  C4DD F68F          	movff	postdec2,follow_path@fs+1
 32342   0188D2                     
 32343                           ;../fatfs/ff.c: 3063:  if (!((*path) == '/' || (*path) == '\\') && (0 != 2 || !((UINT)(*
      +                          path) < (0 ? ' ' : '!')))) {
 32344   0188D2  C686  F4F6         	movff	follow_path@path,tblptrl
 32345   0188D6  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32346   0188DA  0E00               	movlw	low (__mediumconst shr (0+16))
 32347   0188DC  6EF8               	movwf	tblptru,c
 32348   0188DE  0E25               	movlw	(high __ramtop+-1)
 32349   0188E0  64F7               	cpfsgt	tblptrh,c
 32350   0188E2  D003               	bra	u30427
 32351   0188E4  0008               	tblrd		*
 32352   0188E6  50F5               	movf	tablat,w,c
 32353   0188E8  D005               	bra	u30420
 32354   0188EA                     u30427:
 32355   0188EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 32356   0188EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 32357   0188F2  50EF               	movf	indf0,w,c
 32358   0188F4                     u30420:
 32359   0188F4  0A2F               	xorlw	47
 32360   0188F6  B4D8               	btfsc	status,2,c
 32361   0188F8  EF80  F0C4         	goto	u30431
 32362   0188FC  EF82  F0C4         	goto	u30430
 32363   018900                     u30431:
 32364   018900  EFB5  F0C4         	goto	l22281
 32365   018904                     u30430:
 32366   018904  C686  F4F6         	movff	follow_path@path,tblptrl
 32367   018908  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32368   01890C  0E00               	movlw	low (__mediumconst shr (0+16))
 32369   01890E  6EF8               	movwf	tblptru,c
 32370   018910  0E25               	movlw	(high __ramtop+-1)
 32371   018912  64F7               	cpfsgt	tblptrh,c
 32372   018914  D003               	bra	u30447
 32373   018916  0008               	tblrd		*
 32374   018918  50F5               	movf	tablat,w,c
 32375   01891A  D005               	bra	u30440
 32376   01891C                     u30447:
 32377   01891C  C4F6 F4E9          	movff	tblptrl,fsr0l
 32378   018920  C4F7 F4EA          	movff	tblptrh,fsr0h
 32379   018924  50EF               	movf	indf0,w,c
 32380   018926                     u30440:
 32381   018926  0A5C               	xorlw	92
 32382   018928  B4D8               	btfsc	status,2,c
 32383   01892A  EF99  F0C4         	goto	u30451
 32384   01892E  EF9B  F0C4         	goto	u30450
 32385   018932                     u30451:
 32386   018932  EFB5  F0C4         	goto	l22281
 32387   018936                     u30450:
 32388   018936                     
 32389                           ;../fatfs/ff.c: 3064:   dp->obj.sclust = fs->cdir;
 32390   018936  0106               	movlb	6	; () banked
 32391   018938  EE20 F014          	lfsr	2,20
 32392   01893C  518E               	movf	follow_path@fs& (0+255),w,b
 32393   01893E  26D9               	addwf	fsr2l,f,c
 32394   018940  518F               	movf	(follow_path@fs+1)& (0+255),w,b
 32395   018942  22DA               	addwfc	fsr2h,f,c
 32396   018944  EE10 F006          	lfsr	1,6
 32397   018948  5184               	movf	follow_path@dp& (0+255),w,b
 32398   01894A  26E1               	addwf	fsr1l,f,c
 32399   01894C  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32400   01894E  22E2               	addwfc	fsr1h,f,c
 32401   018950  C4DE F4E6          	movff	postinc2,postinc1
 32402   018954  C4DE F4E6          	movff	postinc2,postinc1
 32403   018958  C4DE F4E6          	movff	postinc2,postinc1
 32404   01895C  C4DE F4E6          	movff	postinc2,postinc1
 32405                           
 32406                           ;../fatfs/ff.c: 3065:  } else
 32407   018960  EFF2  F0C4         	goto	l22287
 32408   018964                     l22279:
 32409   018964  0106               	movlb	6	; () banked
 32410   018966  4B86               	infsnz	follow_path@path& (0+255),f,b
 32411   018968  2B87               	incf	(follow_path@path+1)& (0+255),f,b
 32412   01896A                     l22281:
 32413   01896A  C686  F4F6         	movff	follow_path@path,tblptrl
 32414   01896E  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32415   018972  0E00               	movlw	low (__mediumconst shr (0+16))
 32416   018974  6EF8               	movwf	tblptru,c
 32417   018976  0E25               	movlw	(high __ramtop+-1)
 32418   018978  64F7               	cpfsgt	tblptrh,c
 32419   01897A  D003               	bra	u30467
 32420   01897C  0008               	tblrd		*
 32421   01897E  50F5               	movf	tablat,w,c
 32422   018980  D005               	bra	u30460
 32423   018982                     u30467:
 32424   018982  C4F6 F4E9          	movff	tblptrl,fsr0l
 32425   018986  C4F7 F4EA          	movff	tblptrh,fsr0h
 32426   01898A  50EF               	movf	indf0,w,c
 32427   01898C                     u30460:
 32428   01898C  0A2F               	xorlw	47
 32429   01898E  B4D8               	btfsc	status,2,c
 32430   018990  EFCC  F0C4         	goto	u30471
 32431   018994  EFCE  F0C4         	goto	u30470
 32432   018998                     u30471:
 32433   018998  EFB2  F0C4         	goto	l22279
 32434   01899C                     u30470:
 32435   01899C  C686  F4F6         	movff	follow_path@path,tblptrl
 32436   0189A0  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32437   0189A4  0E00               	movlw	low (__mediumconst shr (0+16))
 32438   0189A6  6EF8               	movwf	tblptru,c
 32439   0189A8  0E25               	movlw	(high __ramtop+-1)
 32440   0189AA  64F7               	cpfsgt	tblptrh,c
 32441   0189AC  D003               	bra	u30487
 32442   0189AE  0008               	tblrd		*
 32443   0189B0  50F5               	movf	tablat,w,c
 32444   0189B2  D005               	bra	u30480
 32445   0189B4                     u30487:
 32446   0189B4  C4F6 F4E9          	movff	tblptrl,fsr0l
 32447   0189B8  C4F7 F4EA          	movff	tblptrh,fsr0h
 32448   0189BC  50EF               	movf	indf0,w,c
 32449   0189BE                     u30480:
 32450   0189BE  0A5C               	xorlw	92
 32451   0189C0  B4D8               	btfsc	status,2,c
 32452   0189C2  EFE5  F0C4         	goto	u30491
 32453   0189C6  EFE7  F0C4         	goto	u30490
 32454   0189CA                     u30491:
 32455   0189CA  EFB2  F0C4         	goto	l22279
 32456   0189CE                     u30490:
 32457   0189CE                     
 32458                           ;../fatfs/ff.c: 3069:   dp->obj.sclust = 0;
 32459   0189CE  0106               	movlb	6	; () banked
 32460   0189D0  EE20 F006          	lfsr	2,6
 32461   0189D4  5184               	movf	follow_path@dp& (0+255),w,b
 32462   0189D6  26D9               	addwf	fsr2l,f,c
 32463   0189D8  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32464   0189DA  22DA               	addwfc	fsr2h,f,c
 32465   0189DC  6ADE               	clrf	postinc2,c
 32466   0189DE  6ADE               	clrf	postinc2,c
 32467   0189E0  6ADE               	clrf	postinc2,c
 32468   0189E2  6ADD               	clrf	postdec2,c
 32469   0189E4                     l22287:
 32470                           
 32471                           ; BSR set to: 6
 32472                           ;../fatfs/ff.c: 3088:  if ((UINT)*path < ' ') {
 32473   0189E4  C686  F4F6         	movff	follow_path@path,tblptrl
 32474   0189E8  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32475   0189EC  0E00               	movlw	low (__mediumconst shr (0+16))
 32476   0189EE  6EF8               	movwf	tblptru,c
 32477   0189F0  0E25               	movlw	(high __ramtop+-1)
 32478   0189F2  64F7               	cpfsgt	tblptrh,c
 32479   0189F4  D003               	bra	u30507
 32480   0189F6  0008               	tblrd		*
 32481   0189F8  50F5               	movf	tablat,w,c
 32482   0189FA  D005               	bra	u30500
 32483   0189FC                     u30507:
 32484   0189FC  C4F6 F4E9          	movff	tblptrl,fsr0l
 32485   018A00  C4F7 F4EA          	movff	tblptrh,fsr0h
 32486   018A04  50EF               	movf	indf0,w,c
 32487   018A06                     u30500:
 32488   018A06  0106               	movlb	6	; () banked
 32489   018A08  6F88               	movwf	??_follow_path& (0+255),b
 32490   018A0A  0E20               	movlw	32
 32491   018A0C  6188               	cpfslt	??_follow_path& (0+255),b
 32492   018A0E  EF0B  F0C5         	goto	u30511
 32493   018A12  EF0D  F0C5         	goto	u30510
 32494   018A16                     u30511:
 32495   018A16  EF27  F0C5         	goto	l22293
 32496   018A1A                     u30510:
 32497   018A1A                     
 32498                           ; BSR set to: 6
 32499                           ;../fatfs/ff.c: 3089:   dp->fn[11] = 0x80;
 32500   018A1A  EE20 F027          	lfsr	2,39
 32501   018A1E  5184               	movf	follow_path@dp& (0+255),w,b
 32502   018A20  26D9               	addwf	fsr2l,f,c
 32503   018A22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32504   018A24  22DA               	addwfc	fsr2h,f,c
 32505   018A26  0E80               	movlw	128
 32506   018A28  6EDF               	movwf	indf2,c
 32507   018A2A                     
 32508                           ; BSR set to: 6
 32509                           ;../fatfs/ff.c: 3090:   res = dir_sdi(dp, 0);
 32510   018A2A  C684  F63E         	movff	follow_path@dp,dir_sdi@dp
 32511   018A2E  C685  F63F         	movff	follow_path@dp+1,dir_sdi@dp+1
 32512   018A32  0E00               	movlw	0
 32513   018A34  6F40               	movwf	dir_sdi@ofs& (0+255),b
 32514   018A36  0E00               	movlw	0
 32515   018A38  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 32516   018A3A  0E00               	movlw	0
 32517   018A3C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 32518   018A3E  0E00               	movlw	0
 32519   018A40  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 32520   018A42  EC72  F0BC         	call	_dir_sdi	;wreg free
 32521   018A46  0106               	movlb	6	; () banked
 32522   018A48  6F91               	movwf	follow_path@res& (0+255),b
 32523                           
 32524                           ;../fatfs/ff.c: 3092:  } else {
 32525   018A4A  EFCF  F0C5         	goto	l22327
 32526   018A4E                     l22293:
 32527                           
 32528                           ; BSR set to: 6
 32529                           ;../fatfs/ff.c: 3094:    res = create_name(dp, &path);
 32530   018A4E  C684  F50C         	movff	follow_path@dp,create_name@dp
 32531   018A52  C685  F50D         	movff	follow_path@dp+1,create_name@dp+1
 32532   018A56  0E86               	movlw	low follow_path@path
 32533   018A58  6E0E               	movwf	create_name@path^(0+1280),c
 32534   018A5A  0E06               	movlw	high follow_path@path
 32535   018A5C  6E0F               	movwf	(create_name@path+1)^(0+1280),c
 32536   018A5E  ECCA  F0A2         	call	_create_name	;wreg free
 32537   018A62  0106               	movlb	6	; () banked
 32538   018A64  6F91               	movwf	follow_path@res& (0+255),b
 32539   018A66                     
 32540                           ; BSR set to: 6
 32541                           ;../fatfs/ff.c: 3095:    if (res != FR_OK) break;
 32542   018A66  5191               	movf	follow_path@res& (0+255),w,b
 32543   018A68  B4D8               	btfsc	status,2,c
 32544   018A6A  EF39  F0C5         	goto	u30521
 32545   018A6E  EF3B  F0C5         	goto	u30520
 32546   018A72                     u30521:
 32547   018A72  EF3D  F0C5         	goto	l22299
 32548   018A76                     u30520:
 32549   018A76  EFCF  F0C5         	goto	l22327
 32550   018A7A                     l22299:
 32551                           
 32552                           ; BSR set to: 6
 32553                           ;../fatfs/ff.c: 3096:    res = dir_find(dp);
 32554   018A7A  C684  F67C         	movff	follow_path@dp,dir_find@dp
 32555   018A7E  C685  F67D         	movff	follow_path@dp+1,dir_find@dp+1
 32556   018A82  EC52  F0DE         	call	_dir_find	;wreg free
 32557   018A86  0106               	movlb	6	; () banked
 32558   018A88  6F91               	movwf	follow_path@res& (0+255),b
 32559   018A8A                     
 32560                           ; BSR set to: 6
 32561                           ;../fatfs/ff.c: 3097:    ns = dp->fn[11];
 32562   018A8A  EE20 F027          	lfsr	2,39
 32563   018A8E  5184               	movf	follow_path@dp& (0+255),w,b
 32564   018A90  26D9               	addwf	fsr2l,f,c
 32565   018A92  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32566   018A94  22DA               	addwfc	fsr2h,f,c
 32567   018A96  50DF               	movf	indf2,w,c
 32568   018A98  6F90               	movwf	follow_path@ns& (0+255),b
 32569   018A9A                     
 32570                           ; BSR set to: 6
 32571                           ;../fatfs/ff.c: 3098:    if (res != FR_OK) {
 32572   018A9A  5191               	movf	follow_path@res& (0+255),w,b
 32573   018A9C  B4D8               	btfsc	status,2,c
 32574   018A9E  EF53  F0C5         	goto	u30531
 32575   018AA2  EF55  F0C5         	goto	u30530
 32576   018AA6                     u30531:
 32577   018AA6  EF84  F0C5         	goto	l1754
 32578   018AAA                     u30530:
 32579   018AAA                     
 32580                           ; BSR set to: 6
 32581                           ;../fatfs/ff.c: 3100:      if (2 && (ns & 0x20)) {
 32582   018AAA  0E04               	movlw	4
 32583   018AAC  1991               	xorwf	follow_path@res& (0+255),w,b
 32584   018AAE  A4D8               	btfss	status,2,c
 32585   018AB0  EF5C  F0C5         	goto	u30541
 32586   018AB4  EF5E  F0C5         	goto	u30540
 32587   018AB8                     u30541:
 32588   018AB8  EFCF  F0C5         	goto	l22327
 32589   018ABC                     u30540:
 32590   018ABC                     
 32591                           ; BSR set to: 6
 32592   018ABC  AB90               	btfss	follow_path@ns& (0+255),5,b
 32593   018ABE  EF63  F0C5         	goto	u30551
 32594   018AC2  EF65  F0C5         	goto	u30550
 32595   018AC6                     u30551:
 32596   018AC6  EF79  F0C5         	goto	l1756
 32597   018ACA                     u30550:
 32598   018ACA                     
 32599                           ; BSR set to: 6
 32600                           ;../fatfs/ff.c: 3101:       if (!(ns & 0x04)) continue;
 32601   018ACA  B590               	btfsc	follow_path@ns& (0+255),2,b
 32602   018ACC  EF6A  F0C5         	goto	u30561
 32603   018AD0  EF6C  F0C5         	goto	u30560
 32604   018AD4                     u30561:
 32605   018AD4  EF6E  F0C5         	goto	l22313
 32606   018AD8                     u30560:
 32607   018AD8  EF27  F0C5         	goto	l22293
 32608   018ADC                     l22313:
 32609                           
 32610                           ; BSR set to: 6
 32611                           ;../fatfs/ff.c: 3102:       dp->fn[11] = 0x80;
 32612   018ADC  EE20 F027          	lfsr	2,39
 32613   018AE0  5184               	movf	follow_path@dp& (0+255),w,b
 32614   018AE2  26D9               	addwf	fsr2l,f,c
 32615   018AE4  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32616   018AE6  22DA               	addwfc	fsr2h,f,c
 32617   018AE8  0E80               	movlw	128
 32618   018AEA  6EDF               	movwf	indf2,c
 32619   018AEC                     
 32620                           ; BSR set to: 6
 32621                           ;../fatfs/ff.c: 3103:       res = FR_OK;
 32622   018AEC  6B91               	clrf	follow_path@res& (0+255),b
 32623                           
 32624                           ;../fatfs/ff.c: 3104:      } else {
 32625   018AEE  EFCF  F0C5         	goto	l22327
 32626   018AF2                     l1756:
 32627                           
 32628                           ; BSR set to: 6
 32629                           ;../fatfs/ff.c: 3105:       if (!(ns & 0x04)) res = FR_NO_PATH;
 32630   018AF2  B590               	btfsc	follow_path@ns& (0+255),2,b
 32631   018AF4  EF7E  F0C5         	goto	u30571
 32632   018AF8  EF80  F0C5         	goto	u30570
 32633   018AFC                     u30571:
 32634   018AFC  EFCF  F0C5         	goto	l22327
 32635   018B00                     u30570:
 32636   018B00                     l22317:
 32637                           
 32638                           ; BSR set to: 6
 32639   018B00  0E05               	movlw	5
 32640   018B02  6F91               	movwf	follow_path@res& (0+255),b
 32641   018B04  EFCF  F0C5         	goto	l22327
 32642   018B08                     l1754:
 32643                           
 32644                           ; BSR set to: 6
 32645                           ;../fatfs/ff.c: 3110:    if (ns & 0x04) break;
 32646   018B08  A590               	btfss	follow_path@ns& (0+255),2,b
 32647   018B0A  EF89  F0C5         	goto	u30581
 32648   018B0E  EF8B  F0C5         	goto	u30580
 32649   018B12                     u30581:
 32650   018B12  EF8D  F0C5         	goto	l22321
 32651   018B16                     u30580:
 32652   018B16  EFCF  F0C5         	goto	l22327
 32653   018B1A                     l22321:
 32654                           
 32655                           ; BSR set to: 6
 32656                           ;../fatfs/ff.c: 3112:    if (!(dp->obj.attr & 0x10)) {
 32657   018B1A  EE20 F004          	lfsr	2,4
 32658   018B1E  5184               	movf	follow_path@dp& (0+255),w,b
 32659   018B20  26D9               	addwf	fsr2l,f,c
 32660   018B22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32661   018B24  22DA               	addwfc	fsr2h,f,c
 32662   018B26  B8DF               	btfsc	indf2,4,c
 32663   018B28  EF98  F0C5         	goto	u30591
 32664   018B2C  EF9A  F0C5         	goto	u30590
 32665   018B30                     u30591:
 32666   018B30  EF9C  F0C5         	goto	l22325
 32667   018B34                     u30590:
 32668   018B34  EF80  F0C5         	goto	l22317
 32669   018B38                     l22325:
 32670                           
 32671                           ; BSR set to: 6
 32672                           ;../fatfs/ff.c: 3123:    {;../fatfs/ff.c: 3124:     dp->obj.sclust = ld_clust(fs, fs->wi
      +                          n + dp->dptr % ((UINT)512));
 32673   018B38  C68E  F50B         	movff	follow_path@fs,ld_clust@fs
 32674   018B3C  C68F  F50C         	movff	follow_path@fs+1,ld_clust@fs+1
 32675   018B40  EE20 F00E          	lfsr	2,14
 32676   018B44  5184               	movf	follow_path@dp& (0+255),w,b
 32677   018B46  26D9               	addwf	fsr2l,f,c
 32678   018B48  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32679   018B4A  22DA               	addwfc	fsr2h,f,c
 32680   018B4C  C4DE F688          	movff	postinc2,??_follow_path
 32681   018B50  C4DD F689          	movff	postdec2,??_follow_path+1
 32682   018B54  0EFF               	movlw	255
 32683   018B56  1588               	andwf	??_follow_path& (0+255),w,b
 32684   018B58  6F8A               	movwf	(??_follow_path+2)& (0+255),b
 32685   018B5A  0E01               	movlw	1
 32686   018B5C  1589               	andwf	(??_follow_path+1)& (0+255),w,b
 32687   018B5E  6F8B               	movwf	(??_follow_path+3)& (0+255),b
 32688   018B60  518A               	movf	(??_follow_path+2)& (0+255),w,b
 32689   018B62  258E               	addwf	follow_path@fs& (0+255),w,b
 32690   018B64  6F8C               	movwf	(??_follow_path+4)& (0+255),b
 32691   018B66  518B               	movf	(??_follow_path+3)& (0+255),w,b
 32692   018B68  218F               	addwfc	(follow_path@fs+1)& (0+255),w,b
 32693   018B6A  6F8D               	movwf	(??_follow_path+5)& (0+255),b
 32694   018B6C  0E34               	movlw	52
 32695   018B6E  258C               	addwf	(??_follow_path+4)& (0+255),w,b
 32696   018B70  6E0D               	movwf	ld_clust@dir^(0+1280),c
 32697   018B72  0E00               	movlw	0
 32698   018B74  218D               	addwfc	(??_follow_path+5)& (0+255),w,b
 32699   018B76  6E0E               	movwf	(ld_clust@dir+1)^(0+1280),c
 32700   018B78  EC3A  F0F9         	call	_ld_clust	;wreg free
 32701   018B7C  0106               	movlb	6	; () banked
 32702   018B7E  EE20 F006          	lfsr	2,6
 32703   018B82  5184               	movf	follow_path@dp& (0+255),w,b
 32704   018B84  26D9               	addwf	fsr2l,f,c
 32705   018B86  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32706   018B88  22DA               	addwfc	fsr2h,f,c
 32707   018B8A  C50B  F4DE         	movff	?_ld_clust,postinc2
 32708   018B8E  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 32709   018B92  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 32710   018B96  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 32711   018B9A  EF27  F0C5         	goto	l22293
 32712   018B9E                     l22327:
 32713                           
 32714                           ; BSR set to: 6
 32715                           ;../fatfs/ff.c: 3129:  return res;
 32716   018B9E  5191               	movf	follow_path@res& (0+255),w,b
 32717   018BA0                     
 32718                           ; BSR set to: 6
 32719   018BA0  0012               	return		;funcret
 32720   018BA2                     __end_of_follow_path:
 32721                           	callstack 0
 32722                           
 32723 ;; *************** function _ld_clust *****************
 32724 ;; Defined at:
 32725 ;;		line 1849 in file "../fatfs/ff.c"
 32726 ;; Parameters:    Size  Location     Type
 32727 ;;  fs              2   10[COMRAM] PTR struct .
 32728 ;;		 -> fs(564), NULL(0), 
 32729 ;;  dir             2   12[COMRAM] PTR const unsigned char 
 32730 ;;		 -> fs$win(512), fs(564), NULL(0), 
 32731 ;; Auto vars:     Size  Location     Type
 32732 ;;  cl              4   18[COMRAM] unsigned long 
 32733 ;; Return value:  Size  Location     Type
 32734 ;;                  4   10[COMRAM] unsigned long 
 32735 ;; Registers used:
 32736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32737 ;; Tracked objects:
 32738 ;;		On entry : 0/0
 32739 ;;		On exit  : 0/0
 32740 ;;		Unchanged: 0/0
 32741 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32745 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32746 ;;Total ram usage:       12 bytes
 32747 ;; Hardware stack levels used: 1
 32748 ;; Hardware stack levels required when called: 2
 32749 ;; This function calls:
 32750 ;;		_ld_word
 32751 ;; This function is called by:
 32752 ;;		_follow_path
 32753 ;;		_f_open
 32754 ;;		_f_chdir
 32755 ;;		_f_getcwd
 32756 ;;		_f_opendir
 32757 ;;		_f_unlink
 32758 ;;		_f_rename
 32759 ;; This function uses a non-reentrant model
 32760 ;;
 32761                           
 32762                           	psect	text80
 32763   01F274                     __ptext80:
 32764                           	callstack 0
 32765   01F274                     _ld_clust:
 32766                           	callstack 117
 32767   01F274                     
 32768                           ;../fatfs/ff.c: 1850:  FATFS* fs,;../fatfs/ff.c: 1851:  const BYTE* dir;../fatfs/ff.c: 1
      +                          853: {;../fatfs/ff.c: 1854:  DWORD cl;;../fatfs/ff.c: 1856:  cl = ld_word(dir + 26);
 32769   01F274  0E1A               	movlw	26
 32770   01F276  240D               	addwf	ld_clust@dir^(0+1280),w,c
 32771   01F278  6E04               	movwf	ld_word@ptr^(0+1280),c
 32772   01F27A  0E00               	movlw	0
 32773   01F27C  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 32774   01F27E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32775   01F280  EC4C  F0FF         	call	_ld_word	;wreg free
 32776   01F284  C504  F513         	movff	?_ld_word,ld_clust@cl
 32777   01F288  C505  F514         	movff	?_ld_word+1,ld_clust@cl+1
 32778   01F28C  6A15               	clrf	(ld_clust@cl+2)^(0+1280),c
 32779   01F28E  6A16               	clrf	(ld_clust@cl+3)^(0+1280),c
 32780   01F290                     
 32781                           ;../fatfs/ff.c: 1857:  if (fs->fs_type == 3) {
 32782   01F290  C50B  F4D9         	movff	ld_clust@fs,fsr2l
 32783   01F294  C50C  F4DA         	movff	ld_clust@fs+1,fsr2h
 32784   01F298  0E03               	movlw	3
 32785   01F29A  18DE               	xorwf	postinc2,w,c
 32786   01F29C  A4D8               	btfss	status,2,c
 32787   01F29E  EF53  F0F9         	goto	u29441
 32788   01F2A2  EF55  F0F9         	goto	u29440
 32789   01F2A6                     u29441:
 32790   01F2A6  EF71  F0F9         	goto	l21747
 32791   01F2AA                     u29440:
 32792   01F2AA                     
 32793                           ;../fatfs/ff.c: 1858:   cl |= (DWORD)ld_word(dir + 20) << 16;
 32794   01F2AA  0E14               	movlw	20
 32795   01F2AC  240D               	addwf	ld_clust@dir^(0+1280),w,c
 32796   01F2AE  6E04               	movwf	ld_word@ptr^(0+1280),c
 32797   01F2B0  0E00               	movlw	0
 32798   01F2B2  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 32799   01F2B4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32800   01F2B6  EC4C  F0FF         	call	_ld_word	;wreg free
 32801   01F2BA  5004               	movf	?_ld_word^(0+1280),w,c
 32802   01F2BC  6E0F               	movwf	??_ld_clust^(0+1280),c
 32803   01F2BE  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 32804   01F2C0  6E10               	movwf	(??_ld_clust+1)^(0+1280),c
 32805   01F2C2  6A11               	clrf	(??_ld_clust+2)^(0+1280),c
 32806   01F2C4  6A12               	clrf	(??_ld_clust+3)^(0+1280),c
 32807   01F2C6  C510  F512         	movff	??_ld_clust+1,??_ld_clust+3
 32808   01F2CA  C50F  F511         	movff	??_ld_clust,??_ld_clust+2
 32809   01F2CE  6A10               	clrf	(??_ld_clust+1)^(0+1280),c
 32810   01F2D0  6A0F               	clrf	??_ld_clust^(0+1280),c
 32811   01F2D2  500F               	movf	??_ld_clust^(0+1280),w,c
 32812   01F2D4  1213               	iorwf	ld_clust@cl^(0+1280),f,c
 32813   01F2D6  5010               	movf	(??_ld_clust+1)^(0+1280),w,c
 32814   01F2D8  1214               	iorwf	(ld_clust@cl+1)^(0+1280),f,c
 32815   01F2DA  5011               	movf	(??_ld_clust+2)^(0+1280),w,c
 32816   01F2DC  1215               	iorwf	(ld_clust@cl+2)^(0+1280),f,c
 32817   01F2DE  5012               	movf	(??_ld_clust+3)^(0+1280),w,c
 32818   01F2E0  1216               	iorwf	(ld_clust@cl+3)^(0+1280),f,c
 32819   01F2E2                     l21747:
 32820                           
 32821                           ;../fatfs/ff.c: 1861:  return cl;
 32822   01F2E2  C513  F50B         	movff	ld_clust@cl,?_ld_clust
 32823   01F2E6  C514  F50C         	movff	ld_clust@cl+1,?_ld_clust+1
 32824   01F2EA  C515  F50D         	movff	ld_clust@cl+2,?_ld_clust+2
 32825   01F2EE  C516  F50E         	movff	ld_clust@cl+3,?_ld_clust+3
 32826   01F2F2  0012               	return		;funcret
 32827   01F2F4                     __end_of_ld_clust:
 32828                           	callstack 0
 32829                           
 32830 ;; *************** function _dir_find *****************
 32831 ;; Defined at:
 32832 ;;		line 2385 in file "../fatfs/ff.c"
 32833 ;; Parameters:    Size  Location     Type
 32834 ;;  dp              2  124[BANK6 ] PTR struct .
 32835 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 32836 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 32837 ;;		 -> scan_files@dir(40), 
 32838 ;; Auto vars:     Size  Location     Type
 32839 ;;  fs              2  128[BANK6 ] PTR struct .
 32840 ;;		 -> fs(564), NULL(0), 
 32841 ;;  res             1  131[BANK6 ] enum E597
 32842 ;;  c               1  130[BANK6 ] unsigned char 
 32843 ;; Return value:  Size  Location     Type
 32844 ;;                  1    wreg      enum E597
 32845 ;; Registers used:
 32846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32847 ;; Tracked objects:
 32848 ;;		On entry : 0/0
 32849 ;;		On exit  : 0/0
 32850 ;;		Unchanged: 0/0
 32851 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32852 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32853 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32854 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32855 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32856 ;;Total ram usage:        8 bytes
 32857 ;; Hardware stack levels used: 1
 32858 ;; Hardware stack levels required when called: 17
 32859 ;; This function calls:
 32860 ;;		_dir_next
 32861 ;;		_dir_sdi
 32862 ;;		_memcmp
 32863 ;;		_move_window
 32864 ;; This function is called by:
 32865 ;;		_follow_path
 32866 ;; This function uses a non-reentrant model
 32867 ;;
 32868                           
 32869                           	psect	text81
 32870   01BCA4                     __ptext81:
 32871                           	callstack 0
 32872   01BCA4                     _dir_find:
 32873                           	callstack 101
 32874   01BCA4                     
 32875                           ;../fatfs/ff.c: 2386:  DIR* dp;../fatfs/ff.c: 2388: {;../fatfs/ff.c: 2389:  FRESULT res;
      +                          ;../fatfs/ff.c: 2390:  FATFS *fs = dp->obj.fs;
 32876   01BCA4  C67C  F4D9         	movff	dir_find@dp,fsr2l
 32877   01BCA8  C67D  F4DA         	movff	dir_find@dp+1,fsr2h
 32878   01BCAC  C4DE F680          	movff	postinc2,dir_find@fs
 32879   01BCB0  C4DD F681          	movff	postdec2,dir_find@fs+1
 32880   01BCB4                     
 32881                           ;../fatfs/ff.c: 2391:  BYTE c;;../fatfs/ff.c: 2396:  res = dir_sdi(dp, 0);
 32882   01BCB4  C67C  F63E         	movff	dir_find@dp,dir_sdi@dp
 32883   01BCB8  C67D  F63F         	movff	dir_find@dp+1,dir_sdi@dp+1
 32884   01BCBC  0E00               	movlw	0
 32885   01BCBE  0106               	movlb	6	; () banked
 32886   01BCC0  6F40               	movwf	dir_sdi@ofs& (0+255),b
 32887   01BCC2  0E00               	movlw	0
 32888   01BCC4  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 32889   01BCC6  0E00               	movlw	0
 32890   01BCC8  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 32891   01BCCA  0E00               	movlw	0
 32892   01BCCC  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 32893   01BCCE  EC72  F0BC         	call	_dir_sdi	;wreg free
 32894   01BCD2  0106               	movlb	6	; () banked
 32895   01BCD4  6F83               	movwf	dir_find@res& (0+255),b
 32896   01BCD6                     
 32897                           ; BSR set to: 6
 32898                           ;../fatfs/ff.c: 2397:  if (res != FR_OK) return res;
 32899   01BCD6  5183               	movf	dir_find@res& (0+255),w,b
 32900   01BCD8  B4D8               	btfsc	status,2,c
 32901   01BCDA  EF71  F0DE         	goto	u29461
 32902   01BCDE  EF73  F0DE         	goto	u29460
 32903   01BCE2                     u29461:
 32904   01BCE2  EF77  F0DE         	goto	l21767
 32905   01BCE6                     u29460:
 32906   01BCE6                     l21763:
 32907   01BCE6  0106               	movlb	6	; () banked
 32908   01BCE8  5183               	movf	dir_find@res& (0+255),w,b
 32909   01BCEA  EF13  F0DF         	goto	l1668
 32910   01BCEE                     l21767:
 32911                           
 32912                           ; BSR set to: 6
 32913                           ;../fatfs/ff.c: 2423:   res = move_window(fs, dp->sect);
 32914   01BCEE  C680  F61A         	movff	dir_find@fs,move_window@fs
 32915   01BCF2  C681  F61B         	movff	dir_find@fs+1,move_window@fs+1
 32916   01BCF6  EE20 F016          	lfsr	2,22
 32917   01BCFA  517C               	movf	dir_find@dp& (0+255),w,b
 32918   01BCFC  26D9               	addwf	fsr2l,f,c
 32919   01BCFE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32920   01BD00  22DA               	addwfc	fsr2h,f,c
 32921   01BD02  C4DE F61C          	movff	postinc2,move_window@sect
 32922   01BD06  C4DE F61D          	movff	postinc2,move_window@sect+1
 32923   01BD0A  C4DE F61E          	movff	postinc2,move_window@sect+2
 32924   01BD0E  C4DE F61F          	movff	postinc2,move_window@sect+3
 32925   01BD12  ECAB  F0EF         	call	_move_window	;wreg free
 32926   01BD16  0106               	movlb	6	; () banked
 32927   01BD18  6F83               	movwf	dir_find@res& (0+255),b
 32928   01BD1A                     
 32929                           ; BSR set to: 6
 32930                           ;../fatfs/ff.c: 2424:   if (res != FR_OK) break;
 32931   01BD1A  5183               	movf	dir_find@res& (0+255),w,b
 32932   01BD1C  B4D8               	btfsc	status,2,c
 32933   01BD1E  EF93  F0DE         	goto	u29471
 32934   01BD22  EF95  F0DE         	goto	u29470
 32935   01BD26                     u29471:
 32936   01BD26  EF97  F0DE         	goto	l21773
 32937   01BD2A                     u29470:
 32938   01BD2A  EF73  F0DE         	goto	l21763
 32939   01BD2E                     l21773:
 32940                           
 32941                           ; BSR set to: 6
 32942                           ;../fatfs/ff.c: 2425:   c = dp->dir[0];
 32943   01BD2E  EE20 F01A          	lfsr	2,26
 32944   01BD32  517C               	movf	dir_find@dp& (0+255),w,b
 32945   01BD34  26D9               	addwf	fsr2l,f,c
 32946   01BD36  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32947   01BD38  22DA               	addwfc	fsr2h,f,c
 32948   01BD3A  C4DE F67E          	movff	postinc2,??_dir_find
 32949   01BD3E  C4DD F67F          	movff	postdec2,??_dir_find+1
 32950   01BD42  C67E  F4D9         	movff	??_dir_find,fsr2l
 32951   01BD46  C67F  F4DA         	movff	??_dir_find+1,fsr2h
 32952   01BD4A  50DF               	movf	indf2,w,c
 32953   01BD4C  6F82               	movwf	dir_find@c& (0+255),b
 32954   01BD4E                     
 32955                           ; BSR set to: 6
 32956                           ;../fatfs/ff.c: 2426:   if (c == 0) { res = FR_NO_FILE; break; }
 32957   01BD4E  5182               	movf	dir_find@c& (0+255),w,b
 32958   01BD50  A4D8               	btfss	status,2,c
 32959   01BD52  EFAD  F0DE         	goto	u29481
 32960   01BD56  EFAF  F0DE         	goto	u29480
 32961   01BD5A                     u29481:
 32962   01BD5A  EFB3  F0DE         	goto	l21779
 32963   01BD5E                     u29480:
 32964   01BD5E                     
 32965                           ; BSR set to: 6
 32966   01BD5E  0E04               	movlw	4
 32967   01BD60  6F83               	movwf	dir_find@res& (0+255),b
 32968   01BD62  EF73  F0DE         	goto	l21763
 32969   01BD66                     l21779:
 32970                           
 32971                           ; BSR set to: 6
 32972                           ;../fatfs/ff.c: 2449:   dp->obj.attr = dp->dir[11] & 0x3F;
 32973   01BD66  EE20 F004          	lfsr	2,4
 32974   01BD6A  517C               	movf	dir_find@dp& (0+255),w,b
 32975   01BD6C  26D9               	addwf	fsr2l,f,c
 32976   01BD6E  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32977   01BD70  22DA               	addwfc	fsr2h,f,c
 32978   01BD72  EE10 F01A          	lfsr	1,26
 32979   01BD76  517C               	movf	dir_find@dp& (0+255),w,b
 32980   01BD78  26E1               	addwf	fsr1l,f,c
 32981   01BD7A  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32982   01BD7C  22E2               	addwfc	fsr1h,f,c
 32983   01BD7E  EE00 F00B          	lfsr	0,11
 32984   01BD82  50E6               	movf	postinc1,w,c
 32985   01BD84  26E9               	addwf	fsr0l,f,c
 32986   01BD86  50E5               	movf	postdec1,w,c
 32987   01BD88  22EA               	addwfc	fsr0h,f,c
 32988   01BD8A  50EF               	movf	indf0,w,c
 32989   01BD8C  0B3F               	andlw	63
 32990   01BD8E  6EDF               	movwf	indf2,c
 32991   01BD90                     
 32992                           ; BSR set to: 6
 32993                           ;../fatfs/ff.c: 2450:   if (!(dp->dir[11] & 0x08) && !memcmp(dp->dir, dp->fn, 11)) break
      +                          ;
 32994   01BD90  EE20 F01A          	lfsr	2,26
 32995   01BD94  517C               	movf	dir_find@dp& (0+255),w,b
 32996   01BD96  26D9               	addwf	fsr2l,f,c
 32997   01BD98  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32998   01BD9A  22DA               	addwfc	fsr2h,f,c
 32999   01BD9C  EE10 F00B          	lfsr	1,11
 33000   01BDA0  50DE               	movf	postinc2,w,c
 33001   01BDA2  26E1               	addwf	fsr1l,f,c
 33002   01BDA4  50DD               	movf	postdec2,w,c
 33003   01BDA6  22E2               	addwfc	fsr1h,f,c
 33004   01BDA8  B6E7               	btfsc	indf1,3,c
 33005   01BDAA  EFD9  F0DE         	goto	u29491
 33006   01BDAE  EFDB  F0DE         	goto	u29490
 33007   01BDB2                     u29491:
 33008   01BDB2  EFFC  F0DE         	goto	l21787
 33009   01BDB6                     u29490:
 33010   01BDB6                     
 33011                           ; BSR set to: 6
 33012   01BDB6  EE20 F01A          	lfsr	2,26
 33013   01BDBA  517C               	movf	dir_find@dp& (0+255),w,b
 33014   01BDBC  26D9               	addwf	fsr2l,f,c
 33015   01BDBE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 33016   01BDC0  22DA               	addwfc	fsr2h,f,c
 33017   01BDC2  C4DE F504          	movff	postinc2,memcmp@vl
 33018   01BDC6  C4DD F505          	movff	postdec2,memcmp@vl+1
 33019   01BDCA  0E1C               	movlw	28
 33020   01BDCC  257C               	addwf	dir_find@dp& (0+255),w,b
 33021   01BDCE  6E06               	movwf	memcmp@vr^(0+1280),c
 33022   01BDD0  0E00               	movlw	0
 33023   01BDD2  217D               	addwfc	(dir_find@dp+1)& (0+255),w,b
 33024   01BDD4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 33025   01BDD6  0E00               	movlw	0
 33026   01BDD8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 33027   01BDDA  0E0B               	movlw	11
 33028   01BDDC  6E08               	movwf	memcmp@n^(0+1280),c
 33029   01BDDE  EC23  F0EA         	call	_memcmp	;wreg free
 33030   01BDE2  5004               	movf	?_memcmp^(0+1280),w,c
 33031   01BDE4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 33032   01BDE6  A4D8               	btfss	status,2,c
 33033   01BDE8  EFF8  F0DE         	goto	u29501
 33034   01BDEC  EFFA  F0DE         	goto	u29500
 33035   01BDF0                     u29501:
 33036   01BDF0  EFFC  F0DE         	goto	l21787
 33037   01BDF4                     u29500:
 33038   01BDF4  EF73  F0DE         	goto	l21763
 33039   01BDF8                     l21787:
 33040                           
 33041                           ;../fatfs/ff.c: 2452:   res = dir_next(dp, 0);
 33042   01BDF8  C67C  F662         	movff	dir_find@dp,dir_next@dp
 33043   01BDFC  C67D  F663         	movff	dir_find@dp+1,dir_next@dp+1
 33044   01BE00  0E00               	movlw	0
 33045   01BE02  0106               	movlb	6	; () banked
 33046   01BE04  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 33047   01BE06  0E00               	movlw	0
 33048   01BE08  6F64               	movwf	dir_next@stretch& (0+255),b
 33049   01BE0A  ECCF  F0B0         	call	_dir_next	;wreg free
 33050   01BE0E  0106               	movlb	6	; () banked
 33051   01BE10  6F83               	movwf	dir_find@res& (0+255),b
 33052   01BE12                     
 33053                           ; BSR set to: 6
 33054                           ;../fatfs/ff.c: 2453:  } while (res == FR_OK);
 33055   01BE12  5183               	movf	dir_find@res& (0+255),w,b
 33056   01BE14  B4D8               	btfsc	status,2,c
 33057   01BE16  EF0F  F0DF         	goto	u29511
 33058   01BE1A  EF11  F0DF         	goto	u29510
 33059   01BE1E                     u29511:
 33060   01BE1E  EF77  F0DE         	goto	l21767
 33061   01BE22                     u29510:
 33062   01BE22  EF73  F0DE         	goto	l21763
 33063   01BE26                     l1668:
 33064                           
 33065                           ; BSR set to: 6
 33066   01BE26  0012               	return		;funcret
 33067   01BE28                     __end_of_dir_find:
 33068                           	callstack 0
 33069                           
 33070 ;; *************** function _memcmp *****************
 33071 ;; Defined at:
 33072 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcmp.c"
 33073 ;; Parameters:    Size  Location     Type
 33074 ;;  vl              2    3[COMRAM] PTR const void 
 33075 ;;		 -> fs$win(512), fs(564), NULL(0), tmp_buf(512), 
 33076 ;;		 -> rom(16), 
 33077 ;;  vr              2    5[COMRAM] PTR const void 
 33078 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33079 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33080 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_169(9), 
 33081 ;;		 -> scan_files1@dir(40), scan_files@dir(40), tmp_buf(512), 
 33082 ;;  n               2    7[COMRAM] unsigned int 
 33083 ;; Auto vars:     Size  Location     Type
 33084 ;;  r               2   13[COMRAM] PTR const unsigned char 
 33085 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33086 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33087 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_169(9), 
 33088 ;;		 -> scan_files1@dir(40), scan_files@dir(40), tmp_buf(512), 
 33089 ;;  l               2   11[COMRAM] PTR const unsigned char 
 33090 ;;		 -> fs$win(512), fs(564), NULL(0), tmp_buf(512), 
 33091 ;;		 -> rom(16), 
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  2    3[COMRAM] int 
 33094 ;; Registers used:
 33095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : 0/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33101 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33102 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33104 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33105 ;;Total ram usage:       12 bytes
 33106 ;; Hardware stack levels used: 1
 33107 ;; Hardware stack levels required when called: 1
 33108 ;; This function calls:
 33109 ;;		Nothing
 33110 ;; This function is called by:
 33111 ;;		_reset_cpu
 33112 ;;		_mem_init
 33113 ;;		_dir_find
 33114 ;;		_check_fs
 33115 ;; This function uses a non-reentrant model
 33116 ;;
 33117                           
 33118                           	psect	text82
 33119   01D446                     __ptext82:
 33120                           	callstack 0
 33121   01D446                     _memcmp:
 33122                           	callstack 115
 33123   01D446  C504  F50C         	movff	memcmp@vl,memcmp@l
 33124   01D44A  C505  F50D         	movff	memcmp@vl+1,memcmp@l+1
 33125   01D44E  C506  F50E         	movff	memcmp@vr,memcmp@r
 33126   01D452  C507  F50F         	movff	memcmp@vr+1,memcmp@r+1
 33127   01D456  EF34  F0EA         	goto	l21183
 33128   01D45A                     l21181:
 33129   01D45A  0608               	decf	memcmp@n^(0+1280),f,c
 33130   01D45C  A0D8               	btfss	status,0,c
 33131   01D45E  0609               	decf	(memcmp@n+1)^(0+1280),f,c
 33132   01D460  4A0C               	infsnz	memcmp@l^(0+1280),f,c
 33133   01D462  2A0D               	incf	(memcmp@l+1)^(0+1280),f,c
 33134   01D464  4A0E               	infsnz	memcmp@r^(0+1280),f,c
 33135   01D466  2A0F               	incf	(memcmp@r+1)^(0+1280),f,c
 33136   01D468                     l21183:
 33137   01D468  5008               	movf	memcmp@n^(0+1280),w,c
 33138   01D46A  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 33139   01D46C  B4D8               	btfsc	status,2,c
 33140   01D46E  EF3B  F0EA         	goto	u28271
 33141   01D472  EF3D  F0EA         	goto	u28270
 33142   01D476                     u28271:
 33143   01D476  EF68  F0EA         	goto	l21187
 33144   01D47A                     u28270:
 33145   01D47A  C50E  F4F6         	movff	memcmp@r,tblptrl
 33146   01D47E  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 33147   01D482  0E00               	movlw	low (__mediumconst shr (0+16))
 33148   01D484  6EF8               	movwf	tblptru,c
 33149   01D486  0E25               	movlw	(high __ramtop+-1)
 33150   01D488  64F7               	cpfsgt	tblptrh,c
 33151   01D48A  D003               	bra	u28287
 33152   01D48C  0008               	tblrd		*
 33153   01D48E  50F5               	movf	tablat,w,c
 33154   01D490  D005               	bra	u28280
 33155   01D492                     u28287:
 33156   01D492  C4F6 F4E9          	movff	tblptrl,fsr0l
 33157   01D496  C4F7 F4EA          	movff	tblptrh,fsr0h
 33158   01D49A  50EF               	movf	indf0,w,c
 33159   01D49C                     u28280:
 33160   01D49C  6E0A               	movwf	??_memcmp^(0+1280),c
 33161   01D49E  C50C  F4F6         	movff	memcmp@l,tblptrl
 33162   01D4A2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 33163   01D4A6  0E00               	movlw	low (__mediumconst shr (0+16))
 33164   01D4A8  6EF8               	movwf	tblptru,c
 33165   01D4AA  0E25               	movlw	(high __ramtop+-1)
 33166   01D4AC  64F7               	cpfsgt	tblptrh,c
 33167   01D4AE  D003               	bra	u28297
 33168   01D4B0  0008               	tblrd		*
 33169   01D4B2  50F5               	movf	tablat,w,c
 33170   01D4B4  D005               	bra	u28295
 33171   01D4B6                     u28297:
 33172   01D4B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 33173   01D4BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 33174   01D4BE  50EF               	movf	indf0,w,c
 33175   01D4C0                     u28295:
 33176   01D4C0  180A               	xorwf	??_memcmp^(0+1280),w,c
 33177   01D4C2  B4D8               	btfsc	status,2,c
 33178   01D4C4  EF66  F0EA         	goto	u28291
 33179   01D4C8  EF68  F0EA         	goto	u28290
 33180   01D4CC                     u28291:
 33181   01D4CC  EF2D  F0EA         	goto	l21181
 33182   01D4D0                     u28290:
 33183   01D4D0                     l21187:
 33184   01D4D0  5008               	movf	memcmp@n^(0+1280),w,c
 33185   01D4D2  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 33186   01D4D4  A4D8               	btfss	status,2,c
 33187   01D4D6  EF6F  F0EA         	goto	u28301
 33188   01D4DA  EF71  F0EA         	goto	u28300
 33189   01D4DE                     u28301:
 33190   01D4DE  EF77  F0EA         	goto	l21191
 33191   01D4E2                     u28300:
 33192   01D4E2  0E00               	movlw	0
 33193   01D4E4  6E05               	movwf	(?_memcmp+1)^(0+1280),c
 33194   01D4E6  0E00               	movlw	0
 33195   01D4E8  6E04               	movwf	?_memcmp^(0+1280),c
 33196   01D4EA  EFA1  F0EA         	goto	l3301
 33197   01D4EE                     l21191:
 33198   01D4EE  C50C  F4F6         	movff	memcmp@l,tblptrl
 33199   01D4F2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 33200   01D4F6  0E00               	movlw	low (__mediumconst shr (0+16))
 33201   01D4F8  6EF8               	movwf	tblptru,c
 33202   01D4FA  0E25               	movlw	(high __ramtop+-1)
 33203   01D4FC  64F7               	cpfsgt	tblptrh,c
 33204   01D4FE  D003               	bra	u28317
 33205   01D500  0008               	tblrd		*
 33206   01D502  50F5               	movf	tablat,w,c
 33207   01D504  D005               	bra	u28310
 33208   01D506                     u28317:
 33209   01D506  C4F6 F4E9          	movff	tblptrl,fsr0l
 33210   01D50A  C4F7 F4EA          	movff	tblptrh,fsr0h
 33211   01D50E  50EF               	movf	indf0,w,c
 33212   01D510                     u28310:
 33213   01D510  6E0A               	movwf	??_memcmp^(0+1280),c
 33214   01D512  C50E  F4F6         	movff	memcmp@r,tblptrl
 33215   01D516  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 33216   01D51A  0E00               	movlw	low (__mediumconst shr (0+16))
 33217   01D51C  6EF8               	movwf	tblptru,c
 33218   01D51E  0E25               	movlw	(high __ramtop+-1)
 33219   01D520  64F7               	cpfsgt	tblptrh,c
 33220   01D522  D003               	bra	u28327
 33221   01D524  0008               	tblrd		*
 33222   01D526  50F5               	movf	tablat,w,c
 33223   01D528  D005               	bra	u28320
 33224   01D52A                     u28327:
 33225   01D52A  C4F6 F4E9          	movff	tblptrl,fsr0l
 33226   01D52E  C4F7 F4EA          	movff	tblptrh,fsr0h
 33227   01D532  50EF               	movf	indf0,w,c
 33228   01D534                     u28320:
 33229   01D534  6E0B               	movwf	(??_memcmp+1)^(0+1280),c
 33230   01D536  500B               	movf	(??_memcmp+1)^(0+1280),w,c
 33231   01D538  5C0A               	subwf	??_memcmp^(0+1280),w,c
 33232   01D53A  6E04               	movwf	?_memcmp^(0+1280),c
 33233   01D53C  6A05               	clrf	(?_memcmp+1)^(0+1280),c
 33234   01D53E  A0D8               	btfss	status,0,c
 33235   01D540  0605               	decf	(?_memcmp+1)^(0+1280),f,c
 33236   01D542                     l3301:
 33237   01D542  0012               	return		;funcret
 33238   01D544                     __end_of_memcmp:
 33239                           	callstack 0
 33240                           
 33241 ;; *************** function _create_name *****************
 33242 ;; Defined at:
 33243 ;;		line 2848 in file "../fatfs/ff.c"
 33244 ;; Parameters:    Size  Location     Type
 33245 ;;  dp              2   11[COMRAM] PTR struct .
 33246 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 33247 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 33248 ;;		 -> scan_files@dir(40), 
 33249 ;;  path            2   13[COMRAM] PTR PTR const unsigned c
 33250 ;;		 -> follow_path@path(2), 
 33251 ;; Auto vars:     Size  Location     Type
 33252 ;;  si              2   31[COMRAM] unsigned int 
 33253 ;;  p               2   29[COMRAM] PTR const unsigned char 
 33254 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 33255 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 33256 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 33257 ;;  sfn             2   27[COMRAM] PTR unsigned char 
 33258 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33259 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33260 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), scan_files1@dir(40), 
 33261 ;;		 -> scan_files@dir(40), 
 33262 ;;  i               2   25[COMRAM] unsigned int 
 33263 ;;  ni              2   23[COMRAM] unsigned int 
 33264 ;;  c               1   33[COMRAM] unsigned char 
 33265 ;;  d               1   22[COMRAM] unsigned char 
 33266 ;; Return value:  Size  Location     Type
 33267 ;;                  1    wreg      enum E597
 33268 ;; Registers used:
 33269 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33270 ;; Tracked objects:
 33271 ;;		On entry : 0/0
 33272 ;;		On exit  : 0/0
 33273 ;;		Unchanged: 0/0
 33274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33276 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33277 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33278 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33279 ;;Total ram usage:       23 bytes
 33280 ;; Hardware stack levels used: 1
 33281 ;; Hardware stack levels required when called: 2
 33282 ;; This function calls:
 33283 ;;		_dbc_1st
 33284 ;;		_dbc_2nd
 33285 ;;		_memset
 33286 ;;		_strchr
 33287 ;; This function is called by:
 33288 ;;		_follow_path
 33289 ;; This function uses a non-reentrant model
 33290 ;;
 33291                           
 33292                           	psect	text83
 33293   014594                     __ptext83:
 33294                           	callstack 0
 33295   014594                     _create_name:
 33296                           	callstack 116
 33297   014594                     
 33298                           ;../fatfs/ff.c: 2849:  DIR* dp,;../fatfs/ff.c: 2850:  const TCHAR** path;../fatfs/ff.c: 
      +                          2852: {;../fatfs/ff.c: 2981:  BYTE c, d;;../fatfs/ff.c: 2982:  BYTE *sfn;;../fatfs/ff.c:
      +                           2983:  UINT ni, si, i;;../fatfs/ff.c: 2984:  const char *p;;../fatfs/ff.c: 2987:  p = *
      +                          path; sfn = dp->fn;
 33299   014594  C50E  F4D9         	movff	create_name@path,fsr2l
 33300   014598  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33301   01459C  C4DE F51E          	movff	postinc2,create_name@p
 33302   0145A0  C4DD F51F          	movff	postdec2,create_name@p+1
 33303   0145A4  0E1C               	movlw	28
 33304   0145A6  240C               	addwf	create_name@dp^(0+1280),w,c
 33305   0145A8  6E1C               	movwf	create_name@sfn^(0+1280),c
 33306   0145AA  0E00               	movlw	0
 33307   0145AC  200D               	addwfc	(create_name@dp+1)^(0+1280),w,c
 33308   0145AE  6E1D               	movwf	(create_name@sfn+1)^(0+1280),c
 33309   0145B0                     
 33310                           ;../fatfs/ff.c: 2988:  memset(sfn, ' ', 11);
 33311   0145B0  C51C  F504         	movff	create_name@sfn,memset@dest
 33312   0145B4  C51D  F505         	movff	create_name@sfn+1,memset@dest+1
 33313   0145B8  0E00               	movlw	0
 33314   0145BA  6E07               	movwf	(memset@c+1)^(0+1280),c
 33315   0145BC  0E20               	movlw	32
 33316   0145BE  6E06               	movwf	memset@c^(0+1280),c
 33317   0145C0  0E00               	movlw	0
 33318   0145C2  6E09               	movwf	(memset@n+1)^(0+1280),c
 33319   0145C4  0E0B               	movlw	11
 33320   0145C6  6E08               	movwf	memset@n^(0+1280),c
 33321   0145C8  EC14  F0FF         	call	_memset	;wreg free
 33322   0145CC                     
 33323                           ;../fatfs/ff.c: 2989:  si = i = 0; ni = 8;
 33324   0145CC  0E00               	movlw	0
 33325   0145CE  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 33326   0145D0  0E00               	movlw	0
 33327   0145D2  6E1A               	movwf	create_name@i^(0+1280),c
 33328   0145D4  C51A  F520         	movff	create_name@i,create_name@si
 33329   0145D8  C51B  F521         	movff	create_name@i+1,create_name@si+1
 33330   0145DC  0E00               	movlw	0
 33331   0145DE  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 33332   0145E0  0E08               	movlw	8
 33333   0145E2  6E18               	movwf	create_name@ni^(0+1280),c
 33334   0145E4                     
 33335                           ;../fatfs/ff.c: 2991:  if (p[si] == '.') {
 33336   0145E4  5020               	movf	create_name@si^(0+1280),w,c
 33337   0145E6  241E               	addwf	create_name@p^(0+1280),w,c
 33338   0145E8  6E10               	movwf	??_create_name^(0+1280),c
 33339   0145EA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33340   0145EC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33341   0145EE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33342   0145F0  C510  F4F6         	movff	??_create_name,tblptrl
 33343   0145F4  C511  F4F7         	movff	??_create_name+1,tblptrh
 33344   0145F8  0E00               	movlw	low (__mediumconst shr (0+16))
 33345   0145FA  6EF8               	movwf	tblptru,c
 33346   0145FC  0E25               	movlw	(high __ramtop+-1)
 33347   0145FE  64F7               	cpfsgt	tblptrh,c
 33348   014600  D003               	bra	u29527
 33349   014602  0008               	tblrd		*
 33350   014604  50F5               	movf	tablat,w,c
 33351   014606  D005               	bra	u29520
 33352   014608                     u29527:
 33353   014608  C4F6 F4E9          	movff	tblptrl,fsr0l
 33354   01460C  C4F7 F4EA          	movff	tblptrh,fsr0h
 33355   014610  50EF               	movf	indf0,w,c
 33356   014612                     u29520:
 33357   014612  0A2E               	xorlw	46
 33358   014614  A4D8               	btfss	status,2,c
 33359   014616  EF0F  F0A3         	goto	u29531
 33360   01461A  EF11  F0A3         	goto	u29530
 33361   01461E                     u29531:
 33362   01461E  EF95  F0A3         	goto	l21843
 33363   014622                     u29530:
 33364   014622                     l21807:
 33365                           
 33366                           ;../fatfs/ff.c: 2993:    c = (BYTE)p[si++];
 33367   014622  5020               	movf	create_name@si^(0+1280),w,c
 33368   014624  241E               	addwf	create_name@p^(0+1280),w,c
 33369   014626  6E10               	movwf	??_create_name^(0+1280),c
 33370   014628  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33371   01462A  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33372   01462C  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33373   01462E  C510  F4F6         	movff	??_create_name,tblptrl
 33374   014632  C511  F4F7         	movff	??_create_name+1,tblptrh
 33375   014636  0E00               	movlw	low (__mediumconst shr (0+16))
 33376   014638  6EF8               	movwf	tblptru,c
 33377   01463A  0E25               	movlw	(high __ramtop+-1)
 33378   01463C  64F7               	cpfsgt	tblptrh,c
 33379   01463E  D003               	bra	u29547
 33380   014640  0008               	tblrd		*
 33381   014642  50F5               	movf	tablat,w,c
 33382   014644  D005               	bra	u29540
 33383   014646                     u29547:
 33384   014646  C4F6 F4E9          	movff	tblptrl,fsr0l
 33385   01464A  C4F7 F4EA          	movff	tblptrh,fsr0h
 33386   01464E  50EF               	movf	indf0,w,c
 33387   014650                     u29540:
 33388   014650  6E22               	movwf	create_name@c^(0+1280),c
 33389   014652  4A20               	infsnz	create_name@si^(0+1280),f,c
 33390   014654  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33391   014656                     
 33392                           ;../fatfs/ff.c: 2994:    if (c != '.' || si >= 3) break;
 33393   014656  0E2E               	movlw	46
 33394   014658  1822               	xorwf	create_name@c^(0+1280),w,c
 33395   01465A  A4D8               	btfss	status,2,c
 33396   01465C  EF32  F0A3         	goto	u29551
 33397   014660  EF34  F0A3         	goto	u29550
 33398   014664                     u29551:
 33399   014664  EF4D  F0A3         	goto	l21819
 33400   014668                     u29550:
 33401   014668  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33402   01466A  E109               	bnz	u29560
 33403   01466C  0E03               	movlw	3
 33404   01466E  5C20               	subwf	create_name@si^(0+1280),w,c
 33405   014670  A0D8               	btfss	status,0,c
 33406   014672  EF3D  F0A3         	goto	u29561
 33407   014676  EF3F  F0A3         	goto	u29560
 33408   01467A                     u29561:
 33409   01467A  EF41  F0A3         	goto	l21815
 33410   01467E                     u29560:
 33411   01467E  EF4D  F0A3         	goto	l21819
 33412   014682                     l21815:
 33413                           
 33414                           ;../fatfs/ff.c: 2995:    sfn[i++] = c;
 33415   014682  501A               	movf	create_name@i^(0+1280),w,c
 33416   014684  241C               	addwf	create_name@sfn^(0+1280),w,c
 33417   014686  6ED9               	movwf	fsr2l,c
 33418   014688  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33419   01468A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33420   01468C  6EDA               	movwf	fsr2h,c
 33421   01468E  C522  F4DF         	movff	create_name@c,indf2
 33422   014692  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33423   014694  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33424                           
 33425                           ;../fatfs/ff.c: 2996:   }
 33426   014696  EF11  F0A3         	goto	l21807
 33427   01469A                     l21819:
 33428                           
 33429                           ;../fatfs/ff.c: 2997:   if (!((c) == '/' || (c) == '\\') && c > ' ') return FR_INVALID_N
      +                          AME;
 33430   01469A  0E2F               	movlw	47
 33431   01469C  1822               	xorwf	create_name@c^(0+1280),w,c
 33432   01469E  B4D8               	btfsc	status,2,c
 33433   0146A0  EF54  F0A3         	goto	u29571
 33434   0146A4  EF56  F0A3         	goto	u29570
 33435   0146A8                     u29571:
 33436   0146A8  EF6A  F0A3         	goto	l21829
 33437   0146AC                     u29570:
 33438   0146AC  0E5C               	movlw	92
 33439   0146AE  1822               	xorwf	create_name@c^(0+1280),w,c
 33440   0146B0  B4D8               	btfsc	status,2,c
 33441   0146B2  EF5D  F0A3         	goto	u29581
 33442   0146B6  EF5F  F0A3         	goto	u29580
 33443   0146BA                     u29581:
 33444   0146BA  EF6A  F0A3         	goto	l21829
 33445   0146BE                     u29580:
 33446   0146BE  0E20               	movlw	32
 33447   0146C0  6422               	cpfsgt	create_name@c^(0+1280),c
 33448   0146C2  EF65  F0A3         	goto	u29591
 33449   0146C6  EF67  F0A3         	goto	u29590
 33450   0146CA                     u29591:
 33451   0146CA  EF6A  F0A3         	goto	l21829
 33452   0146CE                     u29590:
 33453   0146CE                     l21825:
 33454   0146CE  0E06               	movlw	6
 33455   0146D0  EF37  F0A5         	goto	l1702
 33456   0146D4                     l21829:
 33457                           
 33458                           ;../fatfs/ff.c: 2998:   *path = p + si;
 33459   0146D4  5020               	movf	create_name@si^(0+1280),w,c
 33460   0146D6  241E               	addwf	create_name@p^(0+1280),w,c
 33461   0146D8  6E10               	movwf	??_create_name^(0+1280),c
 33462   0146DA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33463   0146DC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33464   0146DE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33465   0146E0  C50E  F4D9         	movff	create_name@path,fsr2l
 33466   0146E4  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33467   0146E8  C510  F4DE         	movff	??_create_name,postinc2
 33468   0146EC  C511  F4DD         	movff	??_create_name+1,postdec2
 33469   0146F0                     
 33470                           ;../fatfs/ff.c: 2999:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
 33471   0146F0  0E20               	movlw	32
 33472   0146F2  6422               	cpfsgt	create_name@c^(0+1280),c
 33473   0146F4  EF7E  F0A3         	goto	u29601
 33474   0146F8  EF80  F0A3         	goto	u29600
 33475   0146FC                     u29601:
 33476   0146FC  EF86  F0A3         	goto	l21835
 33477   014700                     u29600:
 33478   014700  0E00               	movlw	0
 33479   014702  6E14               	movwf	(_create_name$2687+1)^(0+1280),c
 33480   014704  0E20               	movlw	32
 33481   014706  6E13               	movwf	_create_name$2687^(0+1280),c
 33482   014708  EF8A  F0A3         	goto	l21837
 33483   01470C                     l21835:
 33484   01470C  0E00               	movlw	0
 33485   01470E  6E14               	movwf	(_create_name$2687+1)^(0+1280),c
 33486   014710  0E24               	movlw	36
 33487   014712  6E13               	movwf	_create_name$2687^(0+1280),c
 33488   014714                     l21837:
 33489   014714  EE20 F00B          	lfsr	2,11
 33490   014718  501C               	movf	create_name@sfn^(0+1280),w,c
 33491   01471A  26D9               	addwf	fsr2l,f,c
 33492   01471C  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 33493   01471E  22DA               	addwfc	fsr2h,f,c
 33494   014720  C513  F4DF         	movff	_create_name$2687,indf2
 33495   014724                     l21839:
 33496                           
 33497                           ;../fatfs/ff.c: 3000:   return FR_OK;
 33498   014724  0E00               	movlw	0
 33499   014726  EF37  F0A5         	goto	l1702
 33500   01472A                     l21843:
 33501                           
 33502                           ;../fatfs/ff.c: 3004:   c = (BYTE)p[si++];
 33503   01472A  5020               	movf	create_name@si^(0+1280),w,c
 33504   01472C  241E               	addwf	create_name@p^(0+1280),w,c
 33505   01472E  6E10               	movwf	??_create_name^(0+1280),c
 33506   014730  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33507   014732  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33508   014734  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33509   014736  C510  F4F6         	movff	??_create_name,tblptrl
 33510   01473A  C511  F4F7         	movff	??_create_name+1,tblptrh
 33511   01473E  0E00               	movlw	low (__mediumconst shr (0+16))
 33512   014740  6EF8               	movwf	tblptru,c
 33513   014742  0E25               	movlw	(high __ramtop+-1)
 33514   014744  64F7               	cpfsgt	tblptrh,c
 33515   014746  D003               	bra	u29617
 33516   014748  0008               	tblrd		*
 33517   01474A  50F5               	movf	tablat,w,c
 33518   01474C  D005               	bra	u29610
 33519   01474E                     u29617:
 33520   01474E  C4F6 F4E9          	movff	tblptrl,fsr0l
 33521   014752  C4F7 F4EA          	movff	tblptrh,fsr0h
 33522   014756  50EF               	movf	indf0,w,c
 33523   014758                     u29610:
 33524   014758  6E22               	movwf	create_name@c^(0+1280),c
 33525   01475A  4A20               	infsnz	create_name@si^(0+1280),f,c
 33526   01475C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33527   01475E                     
 33528                           ;../fatfs/ff.c: 3005:   if (c <= ' ') break;
 33529   01475E  0E21               	movlw	33
 33530   014760  6022               	cpfslt	create_name@c^(0+1280),c
 33531   014762  EFB5  F0A3         	goto	u29621
 33532   014766  EFB7  F0A3         	goto	u29620
 33533   01476A                     u29621:
 33534   01476A  EFB9  F0A3         	goto	l21851
 33535   01476E                     u29620:
 33536   01476E  EFCF  F0A4         	goto	l21911
 33537   014772                     l21851:
 33538                           
 33539                           ;../fatfs/ff.c: 3006:   if (((c) == '/' || (c) == '\\')) {
 33540   014772  0E2F               	movlw	47
 33541   014774  1822               	xorwf	create_name@c^(0+1280),w,c
 33542   014776  B4D8               	btfsc	status,2,c
 33543   014778  EFC0  F0A3         	goto	u29631
 33544   01477C  EFC2  F0A3         	goto	u29630
 33545   014780                     u29631:
 33546   014780  EFCF  F0A3         	goto	l21857
 33547   014784                     u29630:
 33548   014784  0E5C               	movlw	92
 33549   014786  1822               	xorwf	create_name@c^(0+1280),w,c
 33550   014788  A4D8               	btfss	status,2,c
 33551   01478A  EFC9  F0A3         	goto	u29641
 33552   01478E  EFCB  F0A3         	goto	u29640
 33553   014792                     u29641:
 33554   014792  EF0F  F0A4         	goto	l21861
 33555   014796                     u29640:
 33556   014796  EFCF  F0A3         	goto	l21857
 33557   01479A                     l21855:
 33558   01479A  4A20               	infsnz	create_name@si^(0+1280),f,c
 33559   01479C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33560   01479E                     l21857:
 33561   01479E  5020               	movf	create_name@si^(0+1280),w,c
 33562   0147A0  241E               	addwf	create_name@p^(0+1280),w,c
 33563   0147A2  6E10               	movwf	??_create_name^(0+1280),c
 33564   0147A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33565   0147A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33566   0147A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33567   0147AA  C510  F4F6         	movff	??_create_name,tblptrl
 33568   0147AE  C511  F4F7         	movff	??_create_name+1,tblptrh
 33569   0147B2  0E00               	movlw	low (__mediumconst shr (0+16))
 33570   0147B4  6EF8               	movwf	tblptru,c
 33571   0147B6  0E25               	movlw	(high __ramtop+-1)
 33572   0147B8  64F7               	cpfsgt	tblptrh,c
 33573   0147BA  D003               	bra	u29657
 33574   0147BC  0008               	tblrd		*
 33575   0147BE  50F5               	movf	tablat,w,c
 33576   0147C0  D005               	bra	u29650
 33577   0147C2                     u29657:
 33578   0147C2  C4F6 F4E9          	movff	tblptrl,fsr0l
 33579   0147C6  C4F7 F4EA          	movff	tblptrh,fsr0h
 33580   0147CA  50EF               	movf	indf0,w,c
 33581   0147CC                     u29650:
 33582   0147CC  0A2F               	xorlw	47
 33583   0147CE  B4D8               	btfsc	status,2,c
 33584   0147D0  EFEC  F0A3         	goto	u29661
 33585   0147D4  EFEE  F0A3         	goto	u29660
 33586   0147D8                     u29661:
 33587   0147D8  EFCD  F0A3         	goto	l21855
 33588   0147DC                     u29660:
 33589   0147DC  5020               	movf	create_name@si^(0+1280),w,c
 33590   0147DE  241E               	addwf	create_name@p^(0+1280),w,c
 33591   0147E0  6E10               	movwf	??_create_name^(0+1280),c
 33592   0147E2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33593   0147E4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33594   0147E6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33595   0147E8  C510  F4F6         	movff	??_create_name,tblptrl
 33596   0147EC  C511  F4F7         	movff	??_create_name+1,tblptrh
 33597   0147F0  0E00               	movlw	low (__mediumconst shr (0+16))
 33598   0147F2  6EF8               	movwf	tblptru,c
 33599   0147F4  0E25               	movlw	(high __ramtop+-1)
 33600   0147F6  64F7               	cpfsgt	tblptrh,c
 33601   0147F8  D003               	bra	u29677
 33602   0147FA  0008               	tblrd		*
 33603   0147FC  50F5               	movf	tablat,w,c
 33604   0147FE  D005               	bra	u29670
 33605   014800                     u29677:
 33606   014800  C4F6 F4E9          	movff	tblptrl,fsr0l
 33607   014804  C4F7 F4EA          	movff	tblptrh,fsr0h
 33608   014808  50EF               	movf	indf0,w,c
 33609   01480A                     u29670:
 33610   01480A  0A5C               	xorlw	92
 33611   01480C  B4D8               	btfsc	status,2,c
 33612   01480E  EF0B  F0A4         	goto	u29681
 33613   014812  EF0D  F0A4         	goto	u29680
 33614   014816                     u29681:
 33615   014816  EFCD  F0A3         	goto	l21855
 33616   01481A                     u29680:
 33617   01481A  EFCF  F0A4         	goto	l21911
 33618   01481E                     l21861:
 33619                           
 33620                           ;../fatfs/ff.c: 3010:   if (c == '.' || i >= ni) {
 33621   01481E  0E2E               	movlw	46
 33622   014820  1822               	xorwf	create_name@c^(0+1280),w,c
 33623   014822  B4D8               	btfsc	status,2,c
 33624   014824  EF16  F0A4         	goto	u29691
 33625   014828  EF18  F0A4         	goto	u29690
 33626   01482C                     u29691:
 33627   01482C  EF23  F0A4         	goto	l21865
 33628   014830                     u29690:
 33629   014830  5018               	movf	create_name@ni^(0+1280),w,c
 33630   014832  5C1A               	subwf	create_name@i^(0+1280),w,c
 33631   014834  5019               	movf	(create_name@ni+1)^(0+1280),w,c
 33632   014836  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 33633   014838  A0D8               	btfss	status,0,c
 33634   01483A  EF21  F0A4         	goto	u29701
 33635   01483E  EF23  F0A4         	goto	u29700
 33636   014842                     u29701:
 33637   014842  EF42  F0A4         	goto	l21875
 33638   014846                     u29700:
 33639   014846                     l21865:
 33640                           
 33641                           ;../fatfs/ff.c: 3011:    if (ni == 11 || c != '.') return FR_INVALID_NAME;
 33642   014846  0E0B               	movlw	11
 33643   014848  1818               	xorwf	create_name@ni^(0+1280),w,c
 33644   01484A  1019               	iorwf	(create_name@ni+1)^(0+1280),w,c
 33645   01484C  B4D8               	btfsc	status,2,c
 33646   01484E  EF2B  F0A4         	goto	u29711
 33647   014852  EF2D  F0A4         	goto	u29710
 33648   014856                     u29711:
 33649   014856  EF67  F0A3         	goto	l21825
 33650   01485A                     u29710:
 33651   01485A  0E2E               	movlw	46
 33652   01485C  1822               	xorwf	create_name@c^(0+1280),w,c
 33653   01485E  B4D8               	btfsc	status,2,c
 33654   014860  EF34  F0A4         	goto	u29721
 33655   014864  EF36  F0A4         	goto	u29720
 33656   014868                     u29721:
 33657   014868  EF38  F0A4         	goto	l21873
 33658   01486C                     u29720:
 33659   01486C  EF67  F0A3         	goto	l21825
 33660   014870                     l21873:
 33661                           
 33662                           ;../fatfs/ff.c: 3012:    i = 8; ni = 11;
 33663   014870  0E00               	movlw	0
 33664   014872  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 33665   014874  0E08               	movlw	8
 33666   014876  6E1A               	movwf	create_name@i^(0+1280),c
 33667   014878  0E00               	movlw	0
 33668   01487A  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 33669   01487C  0E0B               	movlw	11
 33670   01487E  6E18               	movwf	create_name@ni^(0+1280),c
 33671                           
 33672                           ;../fatfs/ff.c: 3013:    continue;
 33673   014880  EF95  F0A3         	goto	l21843
 33674   014884                     l21875:
 33675                           
 33676                           ;../fatfs/ff.c: 3024:   if (dbc_1st(c)) {
 33677   014884  5022               	movf	create_name@c^(0+1280),w,c
 33678   014886  EC6E  F0F6         	call	_dbc_1st
 33679   01488A  5004               	movf	?_dbc_1st^(0+1280),w,c
 33680   01488C  1005               	iorwf	(?_dbc_1st+1)^(0+1280),w,c
 33681   01488E  B4D8               	btfsc	status,2,c
 33682   014890  EF4C  F0A4         	goto	u29731
 33683   014894  EF4E  F0A4         	goto	u29730
 33684   014898                     u29731:
 33685   014898  EF9D  F0A4         	goto	l21895
 33686   01489C                     u29730:
 33687   01489C                     
 33688                           ;../fatfs/ff.c: 3025:    d = (BYTE)p[si++];
 33689   01489C  5020               	movf	create_name@si^(0+1280),w,c
 33690   01489E  241E               	addwf	create_name@p^(0+1280),w,c
 33691   0148A0  6E10               	movwf	??_create_name^(0+1280),c
 33692   0148A2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33693   0148A4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33694   0148A6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33695   0148A8  C510  F4F6         	movff	??_create_name,tblptrl
 33696   0148AC  C511  F4F7         	movff	??_create_name+1,tblptrh
 33697   0148B0  0E00               	movlw	low (__mediumconst shr (0+16))
 33698   0148B2  6EF8               	movwf	tblptru,c
 33699   0148B4  0E25               	movlw	(high __ramtop+-1)
 33700   0148B6  64F7               	cpfsgt	tblptrh,c
 33701   0148B8  D003               	bra	u29747
 33702   0148BA  0008               	tblrd		*
 33703   0148BC  50F5               	movf	tablat,w,c
 33704   0148BE  D005               	bra	u29740
 33705   0148C0                     u29747:
 33706   0148C0  C4F6 F4E9          	movff	tblptrl,fsr0l
 33707   0148C4  C4F7 F4EA          	movff	tblptrh,fsr0h
 33708   0148C8  50EF               	movf	indf0,w,c
 33709   0148CA                     u29740:
 33710   0148CA  6E17               	movwf	create_name@d^(0+1280),c
 33711   0148CC  4A20               	infsnz	create_name@si^(0+1280),f,c
 33712   0148CE  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33713   0148D0                     
 33714                           ;../fatfs/ff.c: 3026:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;
 33715   0148D0  5017               	movf	create_name@d^(0+1280),w,c
 33716   0148D2  EC5F  F0EE         	call	_dbc_2nd
 33717   0148D6  5004               	movf	?_dbc_2nd^(0+1280),w,c
 33718   0148D8  1005               	iorwf	(?_dbc_2nd+1)^(0+1280),w,c
 33719   0148DA  B4D8               	btfsc	status,2,c
 33720   0148DC  EF72  F0A4         	goto	u29751
 33721   0148E0  EF74  F0A4         	goto	u29750
 33722   0148E4                     u29751:
 33723   0148E4  EF67  F0A3         	goto	l21825
 33724   0148E8                     u29750:
 33725   0148E8  0EFF               	movlw	255
 33726   0148EA  2418               	addwf	create_name@ni^(0+1280),w,c
 33727   0148EC  6E10               	movwf	??_create_name^(0+1280),c
 33728   0148EE  0EFF               	movlw	255
 33729   0148F0  2019               	addwfc	(create_name@ni+1)^(0+1280),w,c
 33730   0148F2  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33731   0148F4  5010               	movf	??_create_name^(0+1280),w,c
 33732   0148F6  5C1A               	subwf	create_name@i^(0+1280),w,c
 33733   0148F8  5011               	movf	(??_create_name+1)^(0+1280),w,c
 33734   0148FA  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 33735   0148FC  A0D8               	btfss	status,0,c
 33736   0148FE  EF83  F0A4         	goto	u29761
 33737   014902  EF85  F0A4         	goto	u29760
 33738   014906                     u29761:
 33739   014906  EF87  F0A4         	goto	l21889
 33740   01490A                     u29760:
 33741   01490A  EF67  F0A3         	goto	l21825
 33742   01490E                     l21889:
 33743                           
 33744                           ;../fatfs/ff.c: 3027:    sfn[i++] = c;
 33745   01490E  501A               	movf	create_name@i^(0+1280),w,c
 33746   014910  241C               	addwf	create_name@sfn^(0+1280),w,c
 33747   014912  6ED9               	movwf	fsr2l,c
 33748   014914  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33749   014916  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33750   014918  6EDA               	movwf	fsr2h,c
 33751   01491A  C522  F4DF         	movff	create_name@c,indf2
 33752   01491E  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33753   014920  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33754   014922                     
 33755                           ;../fatfs/ff.c: 3028:    sfn[i++] = d;
 33756   014922  501A               	movf	create_name@i^(0+1280),w,c
 33757   014924  241C               	addwf	create_name@sfn^(0+1280),w,c
 33758   014926  6ED9               	movwf	fsr2l,c
 33759   014928  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33760   01492A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33761   01492C  6EDA               	movwf	fsr2h,c
 33762   01492E  C517  F4DF         	movff	create_name@d,indf2
 33763   014932  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33764   014934  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33765                           
 33766                           ;../fatfs/ff.c: 3029:   } else {
 33767   014936  EF95  F0A3         	goto	l21843
 33768   01493A                     l21895:
 33769                           
 33770                           ;../fatfs/ff.c: 3030:    if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NA
      +                          ME;
 33771   01493A  0E07               	movlw	low STR_166
 33772   01493C  6E04               	movwf	strchr@s^(0+1280),c
 33773   01493E  0EFE               	movlw	high STR_166
 33774   014940  6E05               	movwf	(strchr@s+1)^(0+1280),c
 33775   014942  C522  F506         	movff	create_name@c,strchr@c
 33776   014946  6A07               	clrf	(strchr@c+1)^(0+1280),c
 33777   014948  EC75  F0F8         	call	_strchr	;wreg free
 33778   01494C  5004               	movf	?_strchr^(0+1280),w,c
 33779   01494E  1005               	iorwf	(?_strchr+1)^(0+1280),w,c
 33780   014950  B4D8               	btfsc	status,2,c
 33781   014952  EFAD  F0A4         	goto	u29771
 33782   014956  EFAF  F0A4         	goto	u29770
 33783   01495A                     u29771:
 33784   01495A  EFB1  F0A4         	goto	l21901
 33785   01495E                     u29770:
 33786   01495E  EF67  F0A3         	goto	l21825
 33787   014962                     l21901:
 33788                           
 33789                           ;../fatfs/ff.c: 3031:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 33790   014962  0E60               	movlw	96
 33791   014964  6422               	cpfsgt	create_name@c^(0+1280),c
 33792   014966  EFB7  F0A4         	goto	u29781
 33793   01496A  EFB9  F0A4         	goto	u29780
 33794   01496E                     u29781:
 33795   01496E  EFC3  F0A4         	goto	l21907
 33796   014972                     u29780:
 33797   014972  0E7B               	movlw	123
 33798   014974  6022               	cpfslt	create_name@c^(0+1280),c
 33799   014976  EFBF  F0A4         	goto	u29791
 33800   01497A  EFC1  F0A4         	goto	u29790
 33801   01497E                     u29791:
 33802   01497E  EFC3  F0A4         	goto	l21907
 33803   014982                     u29790:
 33804   014982  0E20               	movlw	32
 33805   014984  5E22               	subwf	create_name@c^(0+1280),f,c
 33806   014986                     l21907:
 33807                           
 33808                           ;../fatfs/ff.c: 3032:    sfn[i++] = c;
 33809   014986  501A               	movf	create_name@i^(0+1280),w,c
 33810   014988  241C               	addwf	create_name@sfn^(0+1280),w,c
 33811   01498A  6ED9               	movwf	fsr2l,c
 33812   01498C  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33813   01498E  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33814   014990  6EDA               	movwf	fsr2h,c
 33815   014992  C522  F4DF         	movff	create_name@c,indf2
 33816   014996  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33817   014998  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33818   01499A  EF95  F0A3         	goto	l21843
 33819   01499E                     l21911:
 33820                           
 33821                           ;../fatfs/ff.c: 3035:  *path = &p[si];
 33822   01499E  5020               	movf	create_name@si^(0+1280),w,c
 33823   0149A0  241E               	addwf	create_name@p^(0+1280),w,c
 33824   0149A2  6E10               	movwf	??_create_name^(0+1280),c
 33825   0149A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33826   0149A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33827   0149A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33828   0149AA  C50E  F4D9         	movff	create_name@path,fsr2l
 33829   0149AE  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33830   0149B2  C510  F4DE         	movff	??_create_name,postinc2
 33831   0149B6  C511  F4DD         	movff	??_create_name+1,postdec2
 33832   0149BA                     
 33833                           ;../fatfs/ff.c: 3036:  if (i == 0) return FR_INVALID_NAME;
 33834   0149BA  501A               	movf	create_name@i^(0+1280),w,c
 33835   0149BC  101B               	iorwf	(create_name@i+1)^(0+1280),w,c
 33836   0149BE  A4D8               	btfss	status,2,c
 33837   0149C0  EFE4  F0A4         	goto	u29801
 33838   0149C4  EFE6  F0A4         	goto	u29800
 33839   0149C8                     u29801:
 33840   0149C8  EFE8  F0A4         	goto	l21919
 33841   0149CC                     u29800:
 33842   0149CC  EF67  F0A3         	goto	l21825
 33843   0149D0                     l21919:
 33844                           
 33845                           ;../fatfs/ff.c: 3038:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 33846   0149D0  C51C  F4D9         	movff	create_name@sfn,fsr2l
 33847   0149D4  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 33848   0149D8  0EE5               	movlw	229
 33849   0149DA  18DE               	xorwf	postinc2,w,c
 33850   0149DC  A4D8               	btfss	status,2,c
 33851   0149DE  EFF3  F0A4         	goto	u29811
 33852   0149E2  EFF5  F0A4         	goto	u29810
 33853   0149E6                     u29811:
 33854   0149E6  EFFB  F0A4         	goto	l21923
 33855   0149EA                     u29810:
 33856   0149EA  C51C  F4D9         	movff	create_name@sfn,fsr2l
 33857   0149EE  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 33858   0149F2  0E05               	movlw	5
 33859   0149F4  6EDF               	movwf	indf2,c
 33860   0149F6                     l21923:
 33861                           
 33862                           ;../fatfs/ff.c: 3039:  sfn[11] = (c <= ' ' || p[si] <= ' ') ? 0x04 : 0;
 33863   0149F6  0E20               	movlw	32
 33864   0149F8  6422               	cpfsgt	create_name@c^(0+1280),c
 33865   0149FA  EF01  F0A5         	goto	u29821
 33866   0149FE  EF03  F0A5         	goto	u29820
 33867   014A02                     u29821:
 33868   014A02  EF29  F0A5         	goto	l21929
 33869   014A06                     u29820:
 33870   014A06  5020               	movf	create_name@si^(0+1280),w,c
 33871   014A08  241E               	addwf	create_name@p^(0+1280),w,c
 33872   014A0A  6E10               	movwf	??_create_name^(0+1280),c
 33873   014A0C  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33874   014A0E  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33875   014A10  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33876   014A12  C510  F4F6         	movff	??_create_name,tblptrl
 33877   014A16  C511  F4F7         	movff	??_create_name+1,tblptrh
 33878   014A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 33879   014A1C  6EF8               	movwf	tblptru,c
 33880   014A1E  0E25               	movlw	(high __ramtop+-1)
 33881   014A20  64F7               	cpfsgt	tblptrh,c
 33882   014A22  D003               	bra	u29837
 33883   014A24  0008               	tblrd		*
 33884   014A26  50F5               	movf	tablat,w,c
 33885   014A28  D005               	bra	u29830
 33886   014A2A                     u29837:
 33887   014A2A  C4F6 F4E9          	movff	tblptrl,fsr0l
 33888   014A2E  C4F7 F4EA          	movff	tblptrh,fsr0h
 33889   014A32  50EF               	movf	indf0,w,c
 33890   014A34                     u29830:
 33891   014A34  6E12               	movwf	(??_create_name+2)^(0+1280),c
 33892   014A36  0E20               	movlw	32
 33893   014A38  6412               	cpfsgt	(??_create_name+2)^(0+1280),c
 33894   014A3A  EF21  F0A5         	goto	u29841
 33895   014A3E  EF23  F0A5         	goto	u29840
 33896   014A42                     u29841:
 33897   014A42  EF29  F0A5         	goto	l21929
 33898   014A46                     u29840:
 33899   014A46  0E00               	movlw	0
 33900   014A48  6E16               	movwf	(_create_name$2691+1)^(0+1280),c
 33901   014A4A  0E00               	movlw	0
 33902   014A4C  6E15               	movwf	_create_name$2691^(0+1280),c
 33903   014A4E  EF2D  F0A5         	goto	l21931
 33904   014A52                     l21929:
 33905   014A52  0E00               	movlw	0
 33906   014A54  6E16               	movwf	(_create_name$2691+1)^(0+1280),c
 33907   014A56  0E04               	movlw	4
 33908   014A58  6E15               	movwf	_create_name$2691^(0+1280),c
 33909   014A5A                     l21931:
 33910   014A5A  EE20 F00B          	lfsr	2,11
 33911   014A5E  501C               	movf	create_name@sfn^(0+1280),w,c
 33912   014A60  26D9               	addwf	fsr2l,f,c
 33913   014A62  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 33914   014A64  22DA               	addwfc	fsr2h,f,c
 33915   014A66  C515  F4DF         	movff	_create_name$2691,indf2
 33916   014A6A  EF92  F0A3         	goto	l21839
 33917   014A6E                     l1702:
 33918   014A6E  0012               	return		;funcret
 33919   014A70                     __end_of_create_name:
 33920                           	callstack 0
 33921                           
 33922 ;; *************** function _strchr *****************
 33923 ;; Defined at:
 33924 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
 33925 ;; Parameters:    Size  Location     Type
 33926 ;;  s               2    3[COMRAM] PTR const unsigned char 
 33927 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 33928 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 33929 ;;  c               2    5[COMRAM] int 
 33930 ;; Auto vars:     Size  Location     Type
 33931 ;;		None
 33932 ;; Return value:  Size  Location     Type
 33933 ;;                  2    3[COMRAM] PTR unsigned char 
 33934 ;; Registers used:
 33935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 33936 ;; Tracked objects:
 33937 ;;		On entry : 0/0
 33938 ;;		On exit  : 0/0
 33939 ;;		Unchanged: 0/0
 33940 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33945 ;;Total ram usage:        6 bytes
 33946 ;; Hardware stack levels used: 1
 33947 ;; Hardware stack levels required when called: 1
 33948 ;; This function calls:
 33949 ;;		Nothing
 33950 ;; This function is called by:
 33951 ;;		_create_name
 33952 ;;		_strstr
 33953 ;; This function uses a non-reentrant model
 33954 ;;
 33955                           
 33956                           	psect	text84
 33957   01F0EA                     __ptext84:
 33958                           	callstack 0
 33959   01F0EA                     _strchr:
 33960                           	callstack 116
 33961   01F0EA                     l3605:
 33962   01F0EA  C504  F4F6         	movff	strchr@s,tblptrl
 33963   01F0EE  C505  F4F7         	movff	strchr@s+1,tblptrh
 33964   01F0F2  0E00               	movlw	low (__mediumconst shr (0+16))
 33965   01F0F4  6EF8               	movwf	tblptru,c
 33966   01F0F6  0E25               	movlw	(high __ramtop+-1)
 33967   01F0F8  64F7               	cpfsgt	tblptrh,c
 33968   01F0FA  D003               	bra	u29047
 33969   01F0FC  0008               	tblrd		*
 33970   01F0FE  50F5               	movf	tablat,w,c
 33971   01F100  D005               	bra	u29040
 33972   01F102                     u29047:
 33973   01F102  C4F6 F4E9          	movff	tblptrl,fsr0l
 33974   01F106  C4F7 F4EA          	movff	tblptrh,fsr0h
 33975   01F10A  50EF               	movf	indf0,w,c
 33976   01F10C                     u29040:
 33977   01F10C  1806               	xorwf	strchr@c^(0+1280),w,c
 33978   01F10E  A4D8               	btfss	status,2,c
 33979   01F110  EF8C  F0F8         	goto	u29051
 33980   01F114  EF8E  F0F8         	goto	u29050
 33981   01F118                     u29051:
 33982   01F118  EF94  F0F8         	goto	l21571
 33983   01F11C                     u29050:
 33984   01F11C  C504  F504         	movff	strchr@s,?_strchr
 33985   01F120  C505  F505         	movff	strchr@s+1,?_strchr+1
 33986   01F124  EFB7  F0F8         	goto	l3607
 33987   01F128                     l21571:
 33988   01F128  5004               	movf	strchr@s^(0+1280),w,c
 33989   01F12A  6E08               	movwf	??_strchr^(0+1280),c
 33990   01F12C  5005               	movf	(strchr@s+1)^(0+1280),w,c
 33991   01F12E  6E09               	movwf	(??_strchr+1)^(0+1280),c
 33992   01F130  4A04               	infsnz	strchr@s^(0+1280),f,c
 33993   01F132  2A05               	incf	(strchr@s+1)^(0+1280),f,c
 33994   01F134  C508  F4F6         	movff	??_strchr,tblptrl
 33995   01F138  C509  F4F7         	movff	??_strchr+1,tblptrh
 33996   01F13C  0E00               	movlw	low (__mediumconst shr (0+16))
 33997   01F13E  6EF8               	movwf	tblptru,c
 33998   01F140  0E25               	movlw	(high __ramtop+-1)
 33999   01F142  64F7               	cpfsgt	tblptrh,c
 34000   01F144  D003               	bra	u29067
 34001   01F146  0008               	tblrd		*
 34002   01F148  50F5               	movf	tablat,w,c
 34003   01F14A  D005               	bra	u29060
 34004   01F14C                     u29067:
 34005   01F14C  C4F6 F4E9          	movff	tblptrl,fsr0l
 34006   01F150  C4F7 F4EA          	movff	tblptrh,fsr0h
 34007   01F154  50EF               	movf	indf0,w,c
 34008   01F156                     u29060:
 34009   01F156  0900               	iorlw	0
 34010   01F158  A4D8               	btfss	status,2,c
 34011   01F15A  EFB1  F0F8         	goto	u29071
 34012   01F15E  EFB3  F0F8         	goto	u29070
 34013   01F162                     u29071:
 34014   01F162  EF75  F0F8         	goto	l3605
 34015   01F166                     u29070:
 34016   01F166  0E00               	movlw	0
 34017   01F168  6E04               	movwf	?_strchr^(0+1280),c
 34018   01F16A  0E00               	movlw	0
 34019   01F16C  6E05               	movwf	(?_strchr+1)^(0+1280),c
 34020   01F16E                     l3607:
 34021   01F16E  0012               	return		;funcret
 34022   01F170                     __end_of_strchr:
 34023                           	callstack 0
 34024                           
 34025 ;; *************** function _dbc_2nd *****************
 34026 ;; Defined at:
 34027 ;;		line 713 in file "../fatfs/ff.c"
 34028 ;; Parameters:    Size  Location     Type
 34029 ;;  c               1    wreg     unsigned char 
 34030 ;; Auto vars:     Size  Location     Type
 34031 ;;  c               1    5[COMRAM] unsigned char 
 34032 ;; Return value:  Size  Location     Type
 34033 ;;                  2    3[COMRAM] int 
 34034 ;; Registers used:
 34035 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34036 ;; Tracked objects:
 34037 ;;		On entry : 0/0
 34038 ;;		On exit  : 0/0
 34039 ;;		Unchanged: 0/0
 34040 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;Total ram usage:        3 bytes
 34046 ;; Hardware stack levels used: 1
 34047 ;; Hardware stack levels required when called: 1
 34048 ;; This function calls:
 34049 ;;		Nothing
 34050 ;; This function is called by:
 34051 ;;		_create_name
 34052 ;; This function uses a non-reentrant model
 34053 ;;
 34054                           
 34055                           	psect	text85
 34056   01DCBE                     __ptext85:
 34057                           	callstack 0
 34058   01DCBE                     _dbc_2nd:
 34059                           	callstack 116
 34060                           
 34061                           ;incstack = 0
 34062                           ;dbc_2nd@c stored from wreg
 34063   01DCBE  6E06               	movwf	dbc_2nd@c^(0+1280),c
 34064   01DCC0                     
 34065                           ;../fatfs/ff.c: 713: static int dbc_2nd (BYTE c);../fatfs/ff.c: 714: {;../fatfs/ff.c: 72
      +                          2:  if (c >= DbcTbl[4]) {
 34066   01DCC0  0E05               	movlw	low (_DbcTbl+4)
 34067   01DCC2  6EF6               	movwf	tblptrl,c
 34068   01DCC4  0EF2               	movlw	high (_DbcTbl+4)
 34069   01DCC6  6EF7               	movwf	tblptrh,c
 34070   01DCC8                     	if	0	;tblptru may be non-zero
 34071   01DCC8                     	endif
 34072   01DCC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34073   01DCC8  0E00               	movlw	low (__mediumconst shr (0+16))
 34074   01DCCA  6EF8               	movwf	tblptru,c
 34075   01DCCC                     	endif
 34076   01DCCC  0009               	tblrd		*+
 34077   01DCCE  50F5               	movf	tablat,w,c
 34078   01DCD0  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34079   01DCD2  A0D8               	btfss	status,0,c
 34080   01DCD4  EF6E  F0EE         	goto	u28681
 34081   01DCD8  EF70  F0EE         	goto	u28680
 34082   01DCDC                     u28681:
 34083   01DCDC  EFCA  F0EE         	goto	l21381
 34084   01DCE0                     u28680:
 34085   01DCE0                     
 34086                           ;../fatfs/ff.c: 723:   if (c <= DbcTbl[5]) return 1;
 34087   01DCE0  0E06               	movlw	low (_DbcTbl+5)
 34088   01DCE2  6EF6               	movwf	tblptrl,c
 34089   01DCE4  0EF2               	movlw	high (_DbcTbl+5)
 34090   01DCE6  6EF7               	movwf	tblptrh,c
 34091   01DCE8                     	if	0	;tblptru may be non-zero
 34092   01DCE8                     	endif
 34093   01DCE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34094   01DCE8  0E00               	movlw	low (__mediumconst shr (0+16))
 34095   01DCEA  6EF8               	movwf	tblptru,c
 34096   01DCEC                     	endif
 34097   01DCEC  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34098   01DCEE  0009               	tblrd		*+
 34099   01DCF0  5CF5               	subwf	tablat,w,c
 34100   01DCF2  A0D8               	btfss	status,0,c
 34101   01DCF4  EF7E  F0EE         	goto	u28691
 34102   01DCF8  EF80  F0EE         	goto	u28690
 34103   01DCFC                     u28691:
 34104   01DCFC  EF86  F0EE         	goto	l21365
 34105   01DD00                     u28690:
 34106   01DD00                     l21361:
 34107   01DD00  0E00               	movlw	0
 34108   01DD02  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 34109   01DD04  0E01               	movlw	1
 34110   01DD06  6E04               	movwf	?_dbc_2nd^(0+1280),c
 34111   01DD08  EFCE  F0EE         	goto	l1445
 34112   01DD0C                     l21365:
 34113                           
 34114                           ;../fatfs/ff.c: 724:   if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 34115   01DD0C  0E07               	movlw	low (_DbcTbl+6)
 34116   01DD0E  6EF6               	movwf	tblptrl,c
 34117   01DD10  0EF2               	movlw	high (_DbcTbl+6)
 34118   01DD12  6EF7               	movwf	tblptrh,c
 34119   01DD14                     	if	0	;tblptru may be non-zero
 34120   01DD14                     	endif
 34121   01DD14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34122   01DD14  0E00               	movlw	low (__mediumconst shr (0+16))
 34123   01DD16  6EF8               	movwf	tblptru,c
 34124   01DD18                     	endif
 34125   01DD18  0009               	tblrd		*+
 34126   01DD1A  50F5               	movf	tablat,w,c
 34127   01DD1C  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34128   01DD1E  A0D8               	btfss	status,0,c
 34129   01DD20  EF94  F0EE         	goto	u28701
 34130   01DD24  EF96  F0EE         	goto	u28700
 34131   01DD28                     u28701:
 34132   01DD28  EFA8  F0EE         	goto	l21373
 34133   01DD2C                     u28700:
 34134   01DD2C  0E08               	movlw	low (_DbcTbl+7)
 34135   01DD2E  6EF6               	movwf	tblptrl,c
 34136   01DD30  0EF2               	movlw	high (_DbcTbl+7)
 34137   01DD32  6EF7               	movwf	tblptrh,c
 34138   01DD34                     	if	0	;tblptru may be non-zero
 34139   01DD34                     	endif
 34140   01DD34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34141   01DD34  0E00               	movlw	low (__mediumconst shr (0+16))
 34142   01DD36  6EF8               	movwf	tblptru,c
 34143   01DD38                     	endif
 34144   01DD38  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34145   01DD3A  0009               	tblrd		*+
 34146   01DD3C  5CF5               	subwf	tablat,w,c
 34147   01DD3E  A0D8               	btfss	status,0,c
 34148   01DD40  EFA4  F0EE         	goto	u28711
 34149   01DD44  EFA6  F0EE         	goto	u28710
 34150   01DD48                     u28711:
 34151   01DD48  EFA8  F0EE         	goto	l21373
 34152   01DD4C                     u28710:
 34153   01DD4C  EF80  F0EE         	goto	l21361
 34154   01DD50                     l21373:
 34155                           
 34156                           ;../fatfs/ff.c: 725:   if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 34157   01DD50  0E09               	movlw	low (_DbcTbl+8)
 34158   01DD52  6EF6               	movwf	tblptrl,c
 34159   01DD54  0EF2               	movlw	high (_DbcTbl+8)
 34160   01DD56  6EF7               	movwf	tblptrh,c
 34161   01DD58                     	if	0	;tblptru may be non-zero
 34162   01DD58                     	endif
 34163   01DD58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34164   01DD58  0E00               	movlw	low (__mediumconst shr (0+16))
 34165   01DD5A  6EF8               	movwf	tblptru,c
 34166   01DD5C                     	endif
 34167   01DD5C  0009               	tblrd		*+
 34168   01DD5E  50F5               	movf	tablat,w,c
 34169   01DD60  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34170   01DD62  A0D8               	btfss	status,0,c
 34171   01DD64  EFB6  F0EE         	goto	u28721
 34172   01DD68  EFB8  F0EE         	goto	u28720
 34173   01DD6C                     u28721:
 34174   01DD6C  EFCA  F0EE         	goto	l21381
 34175   01DD70                     u28720:
 34176   01DD70  0E0A               	movlw	low (_DbcTbl+9)
 34177   01DD72  6EF6               	movwf	tblptrl,c
 34178   01DD74  0EF2               	movlw	high (_DbcTbl+9)
 34179   01DD76  6EF7               	movwf	tblptrh,c
 34180   01DD78                     	if	0	;tblptru may be non-zero
 34181   01DD78                     	endif
 34182   01DD78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34183   01DD78  0E00               	movlw	low (__mediumconst shr (0+16))
 34184   01DD7A  6EF8               	movwf	tblptru,c
 34185   01DD7C                     	endif
 34186   01DD7C  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34187   01DD7E  0009               	tblrd		*+
 34188   01DD80  5CF5               	subwf	tablat,w,c
 34189   01DD82  A0D8               	btfss	status,0,c
 34190   01DD84  EFC6  F0EE         	goto	u28731
 34191   01DD88  EFC8  F0EE         	goto	u28730
 34192   01DD8C                     u28731:
 34193   01DD8C  EFCA  F0EE         	goto	l21381
 34194   01DD90                     u28730:
 34195   01DD90  EF80  F0EE         	goto	l21361
 34196   01DD94                     l21381:
 34197                           
 34198                           ;../fatfs/ff.c: 730:  return 0;
 34199   01DD94  0E00               	movlw	0
 34200   01DD96  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 34201   01DD98  0E00               	movlw	0
 34202   01DD9A  6E04               	movwf	?_dbc_2nd^(0+1280),c
 34203   01DD9C                     l1445:
 34204   01DD9C  0012               	return		;funcret
 34205   01DD9E                     __end_of_dbc_2nd:
 34206                           	callstack 0
 34207                           
 34208 ;; *************** function _dbc_1st *****************
 34209 ;; Defined at:
 34210 ;;		line 693 in file "../fatfs/ff.c"
 34211 ;; Parameters:    Size  Location     Type
 34212 ;;  c               1    wreg     unsigned char 
 34213 ;; Auto vars:     Size  Location     Type
 34214 ;;  c               1    5[COMRAM] unsigned char 
 34215 ;; Return value:  Size  Location     Type
 34216 ;;                  2    3[COMRAM] int 
 34217 ;; Registers used:
 34218 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34219 ;; Tracked objects:
 34220 ;;		On entry : 0/0
 34221 ;;		On exit  : 0/0
 34222 ;;		Unchanged: 0/0
 34223 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34228 ;;Total ram usage:        3 bytes
 34229 ;; Hardware stack levels used: 1
 34230 ;; Hardware stack levels required when called: 1
 34231 ;; This function calls:
 34232 ;;		Nothing
 34233 ;; This function is called by:
 34234 ;;		_create_name
 34235 ;; This function uses a non-reentrant model
 34236 ;;
 34237                           
 34238                           	psect	text86
 34239   01ECDC                     __ptext86:
 34240                           	callstack 0
 34241   01ECDC                     _dbc_1st:
 34242                           	callstack 116
 34243                           
 34244                           ;incstack = 0
 34245                           ;dbc_1st@c stored from wreg
 34246   01ECDC  6E06               	movwf	dbc_1st@c^(0+1280),c
 34247   01ECDE                     
 34248                           ;../fatfs/ff.c: 693: static int dbc_1st (BYTE c);../fatfs/ff.c: 694: {;../fatfs/ff.c: 70
      +                          1:  if (c >= DbcTbl[0]) {
 34249   01ECDE  0E01               	movlw	low _DbcTbl
 34250   01ECE0  6EF6               	movwf	tblptrl,c
 34251   01ECE2                     	if	1	;There is more than 1 active tblptr byte
 34252   01ECE2  0EF2               	movlw	high _DbcTbl
 34253   01ECE4  6EF7               	movwf	tblptrh,c
 34254   01ECE6                     	endif
 34255   01ECE6                     	if	1	;There are 3 active tblptr bytes
 34256   01ECE6  0E00               	movlw	low (_DbcTbl shr (0+16))
 34257   01ECE8  6EF8               	movwf	tblptru,c
 34258   01ECEA                     	endif
 34259   01ECEA  0009               	tblrd		*+
 34260   01ECEC  50F5               	movf	tablat,w,c
 34261   01ECEE  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 34262   01ECF0  A0D8               	btfss	status,0,c
 34263   01ECF2  EF7D  F0F6         	goto	u28641
 34264   01ECF6  EF7F  F0F6         	goto	u28640
 34265   01ECFA                     u28641:
 34266   01ECFA  EFB7  F0F6         	goto	l21353
 34267   01ECFE                     u28640:
 34268   01ECFE                     
 34269                           ;../fatfs/ff.c: 702:   if (c <= DbcTbl[1]) return 1;
 34270   01ECFE  0E02               	movlw	low (_DbcTbl+1)
 34271   01ED00  6EF6               	movwf	tblptrl,c
 34272   01ED02  0EF2               	movlw	high (_DbcTbl+1)
 34273   01ED04  6EF7               	movwf	tblptrh,c
 34274   01ED06                     	if	0	;tblptru may be non-zero
 34275   01ED06                     	endif
 34276   01ED06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34277   01ED06  0E00               	movlw	low (__mediumconst shr (0+16))
 34278   01ED08  6EF8               	movwf	tblptru,c
 34279   01ED0A                     	endif
 34280   01ED0A  5006               	movf	dbc_1st@c^(0+1280),w,c
 34281   01ED0C  0009               	tblrd		*+
 34282   01ED0E  5CF5               	subwf	tablat,w,c
 34283   01ED10  A0D8               	btfss	status,0,c
 34284   01ED12  EF8D  F0F6         	goto	u28651
 34285   01ED16  EF8F  F0F6         	goto	u28650
 34286   01ED1A                     u28651:
 34287   01ED1A  EF95  F0F6         	goto	l21345
 34288   01ED1E                     u28650:
 34289   01ED1E                     l21341:
 34290   01ED1E  0E00               	movlw	0
 34291   01ED20  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 34292   01ED22  0E01               	movlw	1
 34293   01ED24  6E04               	movwf	?_dbc_1st^(0+1280),c
 34294   01ED26  EFBB  F0F6         	goto	l1439
 34295   01ED2A                     l21345:
 34296                           
 34297                           ;../fatfs/ff.c: 703:   if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 34298   01ED2A  0E03               	movlw	low (_DbcTbl+2)
 34299   01ED2C  6EF6               	movwf	tblptrl,c
 34300   01ED2E  0EF2               	movlw	high (_DbcTbl+2)
 34301   01ED30  6EF7               	movwf	tblptrh,c
 34302   01ED32                     	if	0	;tblptru may be non-zero
 34303   01ED32                     	endif
 34304   01ED32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34305   01ED32  0E00               	movlw	low (__mediumconst shr (0+16))
 34306   01ED34  6EF8               	movwf	tblptru,c
 34307   01ED36                     	endif
 34308   01ED36  0009               	tblrd		*+
 34309   01ED38  50F5               	movf	tablat,w,c
 34310   01ED3A  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 34311   01ED3C  A0D8               	btfss	status,0,c
 34312   01ED3E  EFA3  F0F6         	goto	u28661
 34313   01ED42  EFA5  F0F6         	goto	u28660
 34314   01ED46                     u28661:
 34315   01ED46  EFB7  F0F6         	goto	l21353
 34316   01ED4A                     u28660:
 34317   01ED4A  0E04               	movlw	low (_DbcTbl+3)
 34318   01ED4C  6EF6               	movwf	tblptrl,c
 34319   01ED4E  0EF2               	movlw	high (_DbcTbl+3)
 34320   01ED50  6EF7               	movwf	tblptrh,c
 34321   01ED52                     	if	0	;tblptru may be non-zero
 34322   01ED52                     	endif
 34323   01ED52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34324   01ED52  0E00               	movlw	low (__mediumconst shr (0+16))
 34325   01ED54  6EF8               	movwf	tblptru,c
 34326   01ED56                     	endif
 34327   01ED56  5006               	movf	dbc_1st@c^(0+1280),w,c
 34328   01ED58  0009               	tblrd		*+
 34329   01ED5A  5CF5               	subwf	tablat,w,c
 34330   01ED5C  A0D8               	btfss	status,0,c
 34331   01ED5E  EFB3  F0F6         	goto	u28671
 34332   01ED62  EFB5  F0F6         	goto	u28670
 34333   01ED66                     u28671:
 34334   01ED66  EFB7  F0F6         	goto	l21353
 34335   01ED6A                     u28670:
 34336   01ED6A  EF8F  F0F6         	goto	l21341
 34337   01ED6E                     l21353:
 34338                           
 34339                           ;../fatfs/ff.c: 708:  return 0;
 34340   01ED6E  0E00               	movlw	0
 34341   01ED70  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 34342   01ED72  0E00               	movlw	0
 34343   01ED74  6E04               	movwf	?_dbc_1st^(0+1280),c
 34344   01ED76                     l1439:
 34345   01ED76  0012               	return		;funcret
 34346   01ED78                     __end_of_dbc_1st:
 34347                           	callstack 0
 34348                           
 34349 ;; *************** function _dir_register *****************
 34350 ;; Defined at:
 34351 ;;		line 2466 in file "../fatfs/ff.c"
 34352 ;; Parameters:    Size  Location     Type
 34353 ;;  dp              2  136[BANK6 ] PTR struct .
 34354 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 34355 ;; Auto vars:     Size  Location     Type
 34356 ;;  fs              2  138[BANK6 ] PTR struct .
 34357 ;;		 -> fs(564), NULL(0), 
 34358 ;;  res             1  140[BANK6 ] enum E597
 34359 ;; Return value:  Size  Location     Type
 34360 ;;                  1    wreg      enum E597
 34361 ;; Registers used:
 34362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34363 ;; Tracked objects:
 34364 ;;		On entry : 0/0
 34365 ;;		On exit  : 0/0
 34366 ;;		Unchanged: 0/0
 34367 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34368 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34369 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34371 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34372 ;;Total ram usage:        5 bytes
 34373 ;; Hardware stack levels used: 1
 34374 ;; Hardware stack levels required when called: 18
 34375 ;; This function calls:
 34376 ;;		_dir_alloc
 34377 ;;		_memcpy
 34378 ;;		_memset
 34379 ;;		_move_window
 34380 ;; This function is called by:
 34381 ;;		_f_open
 34382 ;;		_f_mkdir
 34383 ;;		_f_rename
 34384 ;; This function uses a non-reentrant model
 34385 ;;
 34386                           
 34387                           	psect	text87
 34388   01DBDC                     __ptext87:
 34389                           	callstack 0
 34390   01DBDC                     _dir_register:
 34391                           	callstack 101
 34392   01DBDC                     
 34393                           ;../fatfs/ff.c: 2467:  DIR* dp;../fatfs/ff.c: 2469: {;../fatfs/ff.c: 2470:  FRESULT res;
      +                          ;../fatfs/ff.c: 2471:  FATFS *fs = dp->obj.fs;
 34394   01DBDC  C688  F4D9         	movff	dir_register@dp,fsr2l
 34395   01DBE0  C689  F4DA         	movff	dir_register@dp+1,fsr2h
 34396   01DBE4  C4DE F68A          	movff	postinc2,dir_register@fs
 34397   01DBE8  C4DD F68B          	movff	postdec2,dir_register@fs+1
 34398   01DBEC                     
 34399                           ;../fatfs/ff.c: 2543:  res = dir_alloc(dp, 1);
 34400   01DBEC  C688  F67C         	movff	dir_register@dp,dir_alloc@dp
 34401   01DBF0  C689  F67D         	movff	dir_register@dp+1,dir_alloc@dp+1
 34402   01DBF4  0E00               	movlw	0
 34403   01DBF6  0106               	movlb	6	; () banked
 34404   01DBF8  6F7F               	movwf	(dir_alloc@n_ent+1)& (0+255),b
 34405   01DBFA  0E01               	movlw	1
 34406   01DBFC  6F7E               	movwf	dir_alloc@n_ent& (0+255),b
 34407   01DBFE  ECB4  F0E4         	call	_dir_alloc	;wreg free
 34408   01DC02  0106               	movlb	6	; () banked
 34409   01DC04  6F8C               	movwf	dir_register@res& (0+255),b
 34410   01DC06                     
 34411                           ; BSR set to: 6
 34412                           ;../fatfs/ff.c: 2548:  if (res == FR_OK) {
 34413   01DC06  518C               	movf	dir_register@res& (0+255),w,b
 34414   01DC08  A4D8               	btfss	status,2,c
 34415   01DC0A  EF09  F0EE         	goto	u30401
 34416   01DC0E  EF0B  F0EE         	goto	u30400
 34417   01DC12                     u30401:
 34418   01DC12  EF5D  F0EE         	goto	l22259
 34419   01DC16                     u30400:
 34420   01DC16                     
 34421                           ; BSR set to: 6
 34422                           ;../fatfs/ff.c: 2549:   res = move_window(fs, dp->sect);
 34423   01DC16  C68A  F61A         	movff	dir_register@fs,move_window@fs
 34424   01DC1A  C68B  F61B         	movff	dir_register@fs+1,move_window@fs+1
 34425   01DC1E  EE20 F016          	lfsr	2,22
 34426   01DC22  5188               	movf	dir_register@dp& (0+255),w,b
 34427   01DC24  26D9               	addwf	fsr2l,f,c
 34428   01DC26  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34429   01DC28  22DA               	addwfc	fsr2h,f,c
 34430   01DC2A  C4DE F61C          	movff	postinc2,move_window@sect
 34431   01DC2E  C4DE F61D          	movff	postinc2,move_window@sect+1
 34432   01DC32  C4DE F61E          	movff	postinc2,move_window@sect+2
 34433   01DC36  C4DE F61F          	movff	postinc2,move_window@sect+3
 34434   01DC3A  ECAB  F0EF         	call	_move_window	;wreg free
 34435   01DC3E  0106               	movlb	6	; () banked
 34436   01DC40  6F8C               	movwf	dir_register@res& (0+255),b
 34437   01DC42                     
 34438                           ; BSR set to: 6
 34439                           ;../fatfs/ff.c: 2550:   if (res == FR_OK) {
 34440   01DC42  518C               	movf	dir_register@res& (0+255),w,b
 34441   01DC44  A4D8               	btfss	status,2,c
 34442   01DC46  EF27  F0EE         	goto	u30411
 34443   01DC4A  EF29  F0EE         	goto	u30410
 34444   01DC4E                     u30411:
 34445   01DC4E  EF5D  F0EE         	goto	l22259
 34446   01DC52                     u30410:
 34447   01DC52                     
 34448                           ; BSR set to: 6
 34449                           ;../fatfs/ff.c: 2551:    memset(dp->dir, 0, 32);
 34450   01DC52  EE20 F01A          	lfsr	2,26
 34451   01DC56  5188               	movf	dir_register@dp& (0+255),w,b
 34452   01DC58  26D9               	addwf	fsr2l,f,c
 34453   01DC5A  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34454   01DC5C  22DA               	addwfc	fsr2h,f,c
 34455   01DC5E  C4DE F504          	movff	postinc2,memset@dest
 34456   01DC62  C4DD F505          	movff	postdec2,memset@dest+1
 34457   01DC66  0E00               	movlw	0
 34458   01DC68  6E07               	movwf	(memset@c+1)^(0+1280),c
 34459   01DC6A  0E00               	movlw	0
 34460   01DC6C  6E06               	movwf	memset@c^(0+1280),c
 34461   01DC6E  0E00               	movlw	0
 34462   01DC70  6E09               	movwf	(memset@n+1)^(0+1280),c
 34463   01DC72  0E20               	movlw	32
 34464   01DC74  6E08               	movwf	memset@n^(0+1280),c
 34465   01DC76  EC14  F0FF         	call	_memset	;wreg free
 34466                           
 34467                           ;../fatfs/ff.c: 2552:    memcpy(dp->dir + 0, dp->fn, 11);
 34468   01DC7A  0106               	movlb	6	; () banked
 34469   01DC7C  EE20 F01A          	lfsr	2,26
 34470   01DC80  5188               	movf	dir_register@dp& (0+255),w,b
 34471   01DC82  26D9               	addwf	fsr2l,f,c
 34472   01DC84  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34473   01DC86  22DA               	addwfc	fsr2h,f,c
 34474   01DC88  C4DE F504          	movff	postinc2,memcpy@d1
 34475   01DC8C  C4DD F505          	movff	postdec2,memcpy@d1+1
 34476   01DC90  0E1C               	movlw	28
 34477   01DC92  2588               	addwf	dir_register@dp& (0+255),w,b
 34478   01DC94  6E06               	movwf	memcpy@s1^(0+1280),c
 34479   01DC96  0E00               	movlw	0
 34480   01DC98  2189               	addwfc	(dir_register@dp+1)& (0+255),w,b
 34481   01DC9A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 34482   01DC9C  0E00               	movlw	0
 34483   01DC9E  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 34484   01DCA0  0E0B               	movlw	11
 34485   01DCA2  6E08               	movwf	memcpy@n^(0+1280),c
 34486   01DCA4  EC00  F0FD         	call	_memcpy	;wreg free
 34487   01DCA8                     
 34488                           ;../fatfs/ff.c: 2556:    fs->wflag = 1;
 34489   01DCA8  0106               	movlb	6	; () banked
 34490   01DCAA  EE20 F004          	lfsr	2,4
 34491   01DCAE  518A               	movf	dir_register@fs& (0+255),w,b
 34492   01DCB0  26D9               	addwf	fsr2l,f,c
 34493   01DCB2  518B               	movf	(dir_register@fs+1)& (0+255),w,b
 34494   01DCB4  22DA               	addwfc	fsr2h,f,c
 34495   01DCB6  0E01               	movlw	1
 34496   01DCB8  6EDF               	movwf	indf2,c
 34497   01DCBA                     l22259:
 34498                           
 34499                           ; BSR set to: 6
 34500                           ;../fatfs/ff.c: 2560:  return res;
 34501   01DCBA  518C               	movf	dir_register@res& (0+255),w,b
 34502   01DCBC                     
 34503                           ; BSR set to: 6
 34504   01DCBC  0012               	return		;funcret
 34505   01DCBE                     __end_of_dir_register:
 34506                           	callstack 0
 34507                           
 34508 ;; *************** function _dir_alloc *****************
 34509 ;; Defined at:
 34510 ;;		line 1807 in file "../fatfs/ff.c"
 34511 ;; Parameters:    Size  Location     Type
 34512 ;;  dp              2  124[BANK6 ] PTR struct .
 34513 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 34514 ;;  n_ent           2  126[BANK6 ] unsigned int 
 34515 ;; Auto vars:     Size  Location     Type
 34516 ;;  n               2  133[BANK6 ] unsigned int 
 34517 ;;  fs              2  131[BANK6 ] PTR struct .
 34518 ;;		 -> fs(564), NULL(0), 
 34519 ;;  res             1  135[BANK6 ] enum E597
 34520 ;; Return value:  Size  Location     Type
 34521 ;;                  1    wreg      enum E597
 34522 ;; Registers used:
 34523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34524 ;; Tracked objects:
 34525 ;;		On entry : 0/0
 34526 ;;		On exit  : 0/0
 34527 ;;		Unchanged: 0/0
 34528 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34529 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34531 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34532 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34533 ;;Total ram usage:       12 bytes
 34534 ;; Hardware stack levels used: 1
 34535 ;; Hardware stack levels required when called: 17
 34536 ;; This function calls:
 34537 ;;		_dir_next
 34538 ;;		_dir_sdi
 34539 ;;		_move_window
 34540 ;; This function is called by:
 34541 ;;		_dir_register
 34542 ;; This function uses a non-reentrant model
 34543 ;;
 34544                           
 34545                           	psect	text88
 34546   01C968                     __ptext88:
 34547                           	callstack 0
 34548   01C968                     _dir_alloc:
 34549                           	callstack 101
 34550   01C968                     
 34551                           ;../fatfs/ff.c: 1808:  DIR* dp,;../fatfs/ff.c: 1809:  UINT n_ent;../fatfs/ff.c: 1811: {;
      +                          ../fatfs/ff.c: 1812:  FRESULT res;;../fatfs/ff.c: 1813:  UINT n;;../fatfs/ff.c: 1814:  F
      +                          ATFS *fs = dp->obj.fs;
 34552   01C968  C67C  F4D9         	movff	dir_alloc@dp,fsr2l
 34553   01C96C  C67D  F4DA         	movff	dir_alloc@dp+1,fsr2h
 34554   01C970  C4DE F683          	movff	postinc2,dir_alloc@fs
 34555   01C974  C4DD F684          	movff	postdec2,dir_alloc@fs+1
 34556   01C978                     
 34557                           ;../fatfs/ff.c: 1817:  res = dir_sdi(dp, 0);
 34558   01C978  C67C  F63E         	movff	dir_alloc@dp,dir_sdi@dp
 34559   01C97C  C67D  F63F         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 34560   01C980  0E00               	movlw	0
 34561   01C982  0106               	movlb	6	; () banked
 34562   01C984  6F40               	movwf	dir_sdi@ofs& (0+255),b
 34563   01C986  0E00               	movlw	0
 34564   01C988  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 34565   01C98A  0E00               	movlw	0
 34566   01C98C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 34567   01C98E  0E00               	movlw	0
 34568   01C990  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 34569   01C992  EC72  F0BC         	call	_dir_sdi	;wreg free
 34570   01C996  0106               	movlb	6	; () banked
 34571   01C998  6F87               	movwf	dir_alloc@res& (0+255),b
 34572   01C99A                     
 34573                           ; BSR set to: 6
 34574                           ;../fatfs/ff.c: 1818:  if (res == FR_OK) {
 34575   01C99A  5187               	movf	dir_alloc@res& (0+255),w,b
 34576   01C99C  A4D8               	btfss	status,2,c
 34577   01C99E  EFD3  F0E4         	goto	u29371
 34578   01C9A2  EFD5  F0E4         	goto	u29370
 34579   01C9A6                     u29371:
 34580   01C9A6  EF4E  F0E5         	goto	l21735
 34581   01C9AA                     u29370:
 34582   01C9AA                     
 34583                           ; BSR set to: 6
 34584                           ;../fatfs/ff.c: 1819:   n = 0;
 34585   01C9AA  0E00               	movlw	0
 34586   01C9AC  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 34587   01C9AE  0E00               	movlw	0
 34588   01C9B0  6F85               	movwf	dir_alloc@n& (0+255),b
 34589   01C9B2                     l21715:
 34590                           
 34591                           ; BSR set to: 6
 34592                           ;../fatfs/ff.c: 1821:    res = move_window(fs, dp->sect);
 34593   01C9B2  C683  F61A         	movff	dir_alloc@fs,move_window@fs
 34594   01C9B6  C684  F61B         	movff	dir_alloc@fs+1,move_window@fs+1
 34595   01C9BA  EE20 F016          	lfsr	2,22
 34596   01C9BE  517C               	movf	dir_alloc@dp& (0+255),w,b
 34597   01C9C0  26D9               	addwf	fsr2l,f,c
 34598   01C9C2  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34599   01C9C4  22DA               	addwfc	fsr2h,f,c
 34600   01C9C6  C4DE F61C          	movff	postinc2,move_window@sect
 34601   01C9CA  C4DE F61D          	movff	postinc2,move_window@sect+1
 34602   01C9CE  C4DE F61E          	movff	postinc2,move_window@sect+2
 34603   01C9D2  C4DE F61F          	movff	postinc2,move_window@sect+3
 34604   01C9D6  ECAB  F0EF         	call	_move_window	;wreg free
 34605   01C9DA  0106               	movlb	6	; () banked
 34606   01C9DC  6F87               	movwf	dir_alloc@res& (0+255),b
 34607   01C9DE                     
 34608                           ; BSR set to: 6
 34609                           ;../fatfs/ff.c: 1822:    if (res != FR_OK) break;
 34610   01C9DE  5187               	movf	dir_alloc@res& (0+255),w,b
 34611   01C9E0  B4D8               	btfsc	status,2,c
 34612   01C9E2  EFF5  F0E4         	goto	u29381
 34613   01C9E6  EFF7  F0E4         	goto	u29380
 34614   01C9EA                     u29381:
 34615   01C9EA  EFF9  F0E4         	goto	l21721
 34616   01C9EE                     u29380:
 34617   01C9EE  EF4E  F0E5         	goto	l21735
 34618   01C9F2                     l21721:
 34619                           
 34620                           ; BSR set to: 6
 34621                           ;../fatfs/ff.c: 1826:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 34622   01C9F2  EE20 F01A          	lfsr	2,26
 34623   01C9F6  517C               	movf	dir_alloc@dp& (0+255),w,b
 34624   01C9F8  26D9               	addwf	fsr2l,f,c
 34625   01C9FA  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34626   01C9FC  22DA               	addwfc	fsr2h,f,c
 34627   01C9FE  C4DE F680          	movff	postinc2,??_dir_alloc
 34628   01CA02  C4DD F681          	movff	postdec2,??_dir_alloc+1
 34629   01CA06  C680  F4D9         	movff	??_dir_alloc,fsr2l
 34630   01CA0A  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 34631   01CA0E  0EE5               	movlw	229
 34632   01CA10  18DE               	xorwf	postinc2,w,c
 34633   01CA12  B4D8               	btfsc	status,2,c
 34634   01CA14  EF0E  F0E5         	goto	u29391
 34635   01CA18  EF10  F0E5         	goto	u29390
 34636   01CA1C                     u29391:
 34637   01CA1C  EF26  F0E5         	goto	l21725
 34638   01CA20                     u29390:
 34639   01CA20                     
 34640                           ; BSR set to: 6
 34641   01CA20  EE20 F01A          	lfsr	2,26
 34642   01CA24  517C               	movf	dir_alloc@dp& (0+255),w,b
 34643   01CA26  26D9               	addwf	fsr2l,f,c
 34644   01CA28  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34645   01CA2A  22DA               	addwfc	fsr2h,f,c
 34646   01CA2C  C4DE F680          	movff	postinc2,??_dir_alloc
 34647   01CA30  C4DD F681          	movff	postdec2,??_dir_alloc+1
 34648   01CA34  C680  F4D9         	movff	??_dir_alloc,fsr2l
 34649   01CA38  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 34650   01CA3C  50DF               	movf	indf2,w,c
 34651   01CA3E  A4D8               	btfss	status,2,c
 34652   01CA40  EF24  F0E5         	goto	u29401
 34653   01CA44  EF26  F0E5         	goto	u29400
 34654   01CA48                     u29401:
 34655   01CA48  EF36  F0E5         	goto	l21729
 34656   01CA4C                     u29400:
 34657   01CA4C                     l21725:
 34658                           
 34659                           ; BSR set to: 6
 34660                           ;../fatfs/ff.c: 1828:     if (++n == n_ent) break;
 34661   01CA4C  4B85               	infsnz	dir_alloc@n& (0+255),f,b
 34662   01CA4E  2B86               	incf	(dir_alloc@n+1)& (0+255),f,b
 34663   01CA50  517E               	movf	dir_alloc@n_ent& (0+255),w,b
 34664   01CA52  1985               	xorwf	dir_alloc@n& (0+255),w,b
 34665   01CA54  E107               	bnz	u29411
 34666   01CA56  517F               	movf	(dir_alloc@n_ent+1)& (0+255),w,b
 34667   01CA58  1986               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 34668   01CA5A  A4D8               	btfss	status,2,c
 34669   01CA5C  EF32  F0E5         	goto	u29411
 34670   01CA60  EF34  F0E5         	goto	u29410
 34671   01CA64                     u29411:
 34672   01CA64  EF3A  F0E5         	goto	l21731
 34673   01CA68                     u29410:
 34674   01CA68  EF4E  F0E5         	goto	l21735
 34675   01CA6C                     l21729:
 34676                           
 34677                           ; BSR set to: 6
 34678                           ;../fatfs/ff.c: 1830:     n = 0;
 34679   01CA6C  0E00               	movlw	0
 34680   01CA6E  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 34681   01CA70  0E00               	movlw	0
 34682   01CA72  6F85               	movwf	dir_alloc@n& (0+255),b
 34683   01CA74                     l21731:
 34684                           
 34685                           ; BSR set to: 6
 34686                           ;../fatfs/ff.c: 1832:    res = dir_next(dp, 1);
 34687   01CA74  C67C  F662         	movff	dir_alloc@dp,dir_next@dp
 34688   01CA78  C67D  F663         	movff	dir_alloc@dp+1,dir_next@dp+1
 34689   01CA7C  0E00               	movlw	0
 34690   01CA7E  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 34691   01CA80  0E01               	movlw	1
 34692   01CA82  6F64               	movwf	dir_next@stretch& (0+255),b
 34693   01CA84  ECCF  F0B0         	call	_dir_next	;wreg free
 34694   01CA88  0106               	movlb	6	; () banked
 34695   01CA8A  6F87               	movwf	dir_alloc@res& (0+255),b
 34696   01CA8C                     
 34697                           ; BSR set to: 6
 34698                           ;../fatfs/ff.c: 1833:   } while (res == FR_OK);
 34699   01CA8C  5187               	movf	dir_alloc@res& (0+255),w,b
 34700   01CA8E  B4D8               	btfsc	status,2,c
 34701   01CA90  EF4C  F0E5         	goto	u29421
 34702   01CA94  EF4E  F0E5         	goto	u29420
 34703   01CA98                     u29421:
 34704   01CA98  EFD9  F0E4         	goto	l21715
 34705   01CA9C                     u29420:
 34706   01CA9C                     l21735:
 34707                           
 34708                           ; BSR set to: 6
 34709                           ;../fatfs/ff.c: 1836:  if (res == FR_NO_FILE) res = FR_DENIED;
 34710   01CA9C  0E04               	movlw	4
 34711   01CA9E  1987               	xorwf	dir_alloc@res& (0+255),w,b
 34712   01CAA0  A4D8               	btfss	status,2,c
 34713   01CAA2  EF55  F0E5         	goto	u29431
 34714   01CAA6  EF57  F0E5         	goto	u29430
 34715   01CAAA                     u29431:
 34716   01CAAA  EF59  F0E5         	goto	l1644
 34717   01CAAE                     u29430:
 34718   01CAAE                     
 34719                           ; BSR set to: 6
 34720   01CAAE  0E07               	movlw	7
 34721   01CAB0  6F87               	movwf	dir_alloc@res& (0+255),b
 34722   01CAB2                     l1644:
 34723                           
 34724                           ; BSR set to: 6
 34725                           ;../fatfs/ff.c: 1837:  return res;
 34726   01CAB2  5187               	movf	dir_alloc@res& (0+255),w,b
 34727   01CAB4                     
 34728                           ; BSR set to: 6
 34729   01CAB4  0012               	return		;funcret
 34730   01CAB6                     __end_of_dir_alloc:
 34731                           	callstack 0
 34732                           
 34733 ;; *************** function _dir_sdi *****************
 34734 ;; Defined at:
 34735 ;;		line 1698 in file "../fatfs/ff.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;  dp              2   62[BANK6 ] PTR struct .
 34738 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 34739 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), 
 34740 ;;		 -> f_open@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 34741 ;;  ofs             4   64[BANK6 ] unsigned long 
 34742 ;; Auto vars:     Size  Location     Type
 34743 ;;  clst            4   82[BANK6 ] unsigned long 
 34744 ;;  csz             4   78[BANK6 ] unsigned long 
 34745 ;;  fs              2   86[BANK6 ] PTR struct .
 34746 ;;		 -> fs(564), NULL(0), 
 34747 ;; Return value:  Size  Location     Type
 34748 ;;                  1    wreg      enum E597
 34749 ;; Registers used:
 34750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34751 ;; Tracked objects:
 34752 ;;		On entry : 0/0
 34753 ;;		On exit  : 0/0
 34754 ;;		Unchanged: 0/0
 34755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34756 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34757 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34758 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34759 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34760 ;;Total ram usage:       26 bytes
 34761 ;; Hardware stack levels used: 1
 34762 ;; Hardware stack levels required when called: 15
 34763 ;; This function calls:
 34764 ;;		_clst2sect
 34765 ;;		_get_fat
 34766 ;; This function is called by:
 34767 ;;		_dir_alloc
 34768 ;;		_dir_find
 34769 ;;		_follow_path
 34770 ;;		_f_getcwd
 34771 ;;		_f_opendir
 34772 ;;		_f_readdir
 34773 ;;		_f_unlink
 34774 ;; This function uses a non-reentrant model
 34775 ;;
 34776                           
 34777                           	psect	text89
 34778   0178E4                     __ptext89:
 34779                           	callstack 0
 34780   0178E4                     _dir_sdi:
 34781                           	callstack 103
 34782   0178E4                     
 34783                           ;../fatfs/ff.c: 1699:  DIR* dp,;../fatfs/ff.c: 1700:  DWORD ofs;../fatfs/ff.c: 1702: {;.
      +                          ./fatfs/ff.c: 1703:  DWORD csz, clst;;../fatfs/ff.c: 1704:  FATFS *fs = dp->obj.fs;
 34784   0178E4  C63E  F4D9         	movff	dir_sdi@dp,fsr2l
 34785   0178E8  C63F  F4DA         	movff	dir_sdi@dp+1,fsr2h
 34786   0178EC  C4DE F656          	movff	postinc2,dir_sdi@fs
 34787   0178F0  C4DD F657          	movff	postdec2,dir_sdi@fs+1
 34788   0178F4  0106               	movlb	6	; () banked
 34789   0178F6  5143               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 34790   0178F8  E107               	bnz	u28741
 34791   0178FA  0E20               	movlw	32
 34792   0178FC  5D42               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 34793   0178FE  B0D8               	btfsc	status,0,c
 34794   017900  EF84  F0BC         	goto	u28741
 34795   017904  EF86  F0BC         	goto	u28740
 34796   017908                     u28741:
 34797   017908  EF9D  F0BC         	goto	l21411
 34798   01790C                     u28740:
 34799   01790C                     
 34800                           ; BSR set to: 6
 34801   01790C  0E1F               	movlw	31
 34802   01790E  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 34803   017910  6F44               	movwf	??_dir_sdi& (0+255),b
 34804   017912  0E00               	movlw	0
 34805   017914  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 34806   017916  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 34807   017918  0E00               	movlw	0
 34808   01791A  1542               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
 34809   01791C  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34810   01791E  0E00               	movlw	0
 34811   017920  1543               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
 34812   017922  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 34813   017924  5144               	movf	??_dir_sdi& (0+255),w,b
 34814   017926  1145               	iorwf	(??_dir_sdi+1)& (0+255),w,b
 34815   017928  1146               	iorwf	(??_dir_sdi+2)& (0+255),w,b
 34816   01792A  1147               	iorwf	(??_dir_sdi+3)& (0+255),w,b
 34817   01792C  B4D8               	btfsc	status,2,c
 34818   01792E  EF9B  F0BC         	goto	u28751
 34819   017932  EF9D  F0BC         	goto	u28750
 34820   017936                     u28751:
 34821   017936  EFA0  F0BC         	goto	l21415
 34822   01793A                     u28750:
 34823   01793A                     l21411:
 34824                           
 34825                           ; BSR set to: 6
 34826                           ;../fatfs/ff.c: 1708:   return FR_INT_ERR;
 34827   01793A  0E02               	movlw	2
 34828   01793C  EF36  F0BE         	goto	l1594
 34829   017940                     l21415:
 34830                           
 34831                           ; BSR set to: 6
 34832                           ;../fatfs/ff.c: 1710:  dp->dptr = ofs;
 34833   017940  EE20 F00E          	lfsr	2,14
 34834   017944  513E               	movf	dir_sdi@dp& (0+255),w,b
 34835   017946  26D9               	addwf	fsr2l,f,c
 34836   017948  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34837   01794A  22DA               	addwfc	fsr2h,f,c
 34838   01794C  C640  F4DE         	movff	dir_sdi@ofs,postinc2
 34839   017950  C641  F4DE         	movff	dir_sdi@ofs+1,postinc2
 34840   017954  C642  F4DE         	movff	dir_sdi@ofs+2,postinc2
 34841   017958  C643  F4DE         	movff	dir_sdi@ofs+3,postinc2
 34842                           
 34843                           ;../fatfs/ff.c: 1711:  clst = dp->obj.sclust;
 34844   01795C  EE20 F006          	lfsr	2,6
 34845   017960  513E               	movf	dir_sdi@dp& (0+255),w,b
 34846   017962  26D9               	addwf	fsr2l,f,c
 34847   017964  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34848   017966  22DA               	addwfc	fsr2h,f,c
 34849   017968  C4DE F652          	movff	postinc2,dir_sdi@clst
 34850   01796C  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 34851   017970  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 34852   017974  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 34853   017978                     
 34854                           ; BSR set to: 6
 34855                           ;../fatfs/ff.c: 1712:  if (clst == 0 && fs->fs_type >= 3) {
 34856   017978  5152               	movf	dir_sdi@clst& (0+255),w,b
 34857   01797A  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 34858   01797C  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 34859   01797E  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 34860   017980  A4D8               	btfss	status,2,c
 34861   017982  EFC5  F0BC         	goto	u28761
 34862   017986  EFC7  F0BC         	goto	u28760
 34863   01798A                     u28761:
 34864   01798A  EFE1  F0BC         	goto	l21425
 34865   01798E                     u28760:
 34866   01798E                     
 34867                           ; BSR set to: 6
 34868   01798E  C656  F4D9         	movff	dir_sdi@fs,fsr2l
 34869   017992  C657  F4DA         	movff	dir_sdi@fs+1,fsr2h
 34870   017996  0E02               	movlw	2
 34871   017998  64DF               	cpfsgt	indf2,c
 34872   01799A  EFD1  F0BC         	goto	u28771
 34873   01799E  EFD3  F0BC         	goto	u28770
 34874   0179A2                     u28771:
 34875   0179A2  EFE1  F0BC         	goto	l21425
 34876   0179A6                     u28770:
 34877   0179A6                     
 34878                           ; BSR set to: 6
 34879                           ;../fatfs/ff.c: 1713:   clst = (DWORD)fs->dirbase;
 34880   0179A6  EE20 F028          	lfsr	2,40
 34881   0179AA  5156               	movf	dir_sdi@fs& (0+255),w,b
 34882   0179AC  26D9               	addwf	fsr2l,f,c
 34883   0179AE  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34884   0179B0  22DA               	addwfc	fsr2h,f,c
 34885   0179B2  C4DE F652          	movff	postinc2,dir_sdi@clst
 34886   0179B6  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 34887   0179BA  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 34888   0179BE  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 34889   0179C2                     l21425:
 34890                           
 34891                           ; BSR set to: 6
 34892                           ;../fatfs/ff.c: 1717:  if (clst == 0) {
 34893   0179C2  5152               	movf	dir_sdi@clst& (0+255),w,b
 34894   0179C4  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 34895   0179C6  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 34896   0179C8  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 34897   0179CA  A4D8               	btfss	status,2,c
 34898   0179CC  EFEA  F0BC         	goto	u28781
 34899   0179D0  EFEC  F0BC         	goto	u28780
 34900   0179D4                     u28781:
 34901   0179D4  EF36  F0BD         	goto	l21435
 34902   0179D8                     u28780:
 34903   0179D8                     
 34904                           ; BSR set to: 6
 34905                           ;../fatfs/ff.c: 1718:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
 34906   0179D8  EE20 F008          	lfsr	2,8
 34907   0179DC  5156               	movf	dir_sdi@fs& (0+255),w,b
 34908   0179DE  26D9               	addwf	fsr2l,f,c
 34909   0179E0  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34910   0179E2  22DA               	addwfc	fsr2h,f,c
 34911   0179E4  C4DE F644          	movff	postinc2,??_dir_sdi
 34912   0179E8  C4DD F645          	movff	postdec2,??_dir_sdi+1
 34913   0179EC  5144               	movf	??_dir_sdi& (0+255),w,b
 34914   0179EE  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34915   0179F0  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 34916   0179F2  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 34917   0179F4  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 34918   0179F6  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 34919   0179F8  C640  F64A         	movff	dir_sdi@ofs,??_dir_sdi+6
 34920   0179FC  C641  F64B         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 34921   017A00  C642  F64C         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 34922   017A04  C643  F64D         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 34923   017A08  0E06               	movlw	6
 34924   017A0A  EF0C  F0BD         	goto	u28790
 34925   017A0E                     u28795:
 34926   017A0E  90D8               	bcf	status,0,c
 34927   017A10  334D               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 34928   017A12  334C               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 34929   017A14  334B               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 34930   017A16  334A               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 34931   017A18                     u28790:
 34932   017A18  2EE8               	decfsz	wreg,f,c
 34933   017A1A  EF07  F0BD         	goto	u28795
 34934   017A1E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 34935   017A20  5D4A               	subwf	(??_dir_sdi+6)& (0+255),w,b
 34936   017A22  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 34937   017A24  594B               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 34938   017A26  5148               	movf	(??_dir_sdi+4)& (0+255),w,b
 34939   017A28  594C               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 34940   017A2A  5149               	movf	(??_dir_sdi+5)& (0+255),w,b
 34941   017A2C  594D               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 34942   017A2E  A0D8               	btfss	status,0,c
 34943   017A30  EF1C  F0BD         	goto	u28801
 34944   017A34  EF1E  F0BD         	goto	u28800
 34945   017A38                     u28801:
 34946   017A38  EF20  F0BD         	goto	l21433
 34947   017A3C                     u28800:
 34948   017A3C  EF9D  F0BC         	goto	l21411
 34949   017A40                     l21433:
 34950                           
 34951                           ; BSR set to: 6
 34952                           ;../fatfs/ff.c: 1719:   dp->sect = fs->dirbase;
 34953   017A40  EE20 F028          	lfsr	2,40
 34954   017A44  5156               	movf	dir_sdi@fs& (0+255),w,b
 34955   017A46  26D9               	addwf	fsr2l,f,c
 34956   017A48  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34957   017A4A  22DA               	addwfc	fsr2h,f,c
 34958   017A4C  EE10 F016          	lfsr	1,22
 34959   017A50  513E               	movf	dir_sdi@dp& (0+255),w,b
 34960   017A52  26E1               	addwf	fsr1l,f,c
 34961   017A54  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34962   017A56  22E2               	addwfc	fsr1h,f,c
 34963   017A58  C4DE F4E6          	movff	postinc2,postinc1
 34964   017A5C  C4DE F4E6          	movff	postinc2,postinc1
 34965   017A60  C4DE F4E6          	movff	postinc2,postinc1
 34966   017A64  C4DE F4E6          	movff	postinc2,postinc1
 34967                           
 34968                           ;../fatfs/ff.c: 1721:  } else {
 34969   017A68  EFD9  F0BD         	goto	l21457
 34970   017A6C                     l21435:
 34971                           
 34972                           ; BSR set to: 6
 34973                           ;../fatfs/ff.c: 1722:   csz = (DWORD)fs->csize * ((UINT)512);
 34974   017A6C  EE20 F00A          	lfsr	2,10
 34975   017A70  5156               	movf	dir_sdi@fs& (0+255),w,b
 34976   017A72  26D9               	addwf	fsr2l,f,c
 34977   017A74  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34978   017A76  22DA               	addwfc	fsr2h,f,c
 34979   017A78  C4DE F644          	movff	postinc2,??_dir_sdi
 34980   017A7C  C4DD F645          	movff	postdec2,??_dir_sdi+1
 34981   017A80  5144               	movf	??_dir_sdi& (0+255),w,b
 34982   017A82  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34983   017A84  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 34984   017A86  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 34985   017A88  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 34986   017A8A  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 34987   017A8C  0E09               	movlw	9
 34988   017A8E                     u28815:
 34989   017A8E  90D8               	bcf	status,0,c
 34990   017A90  3746               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 34991   017A92  3747               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 34992   017A94  3748               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 34993   017A96  3749               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 34994   017A98  2EE8               	decfsz	wreg,f,c
 34995   017A9A  EF47  F0BD         	goto	u28815
 34996   017A9E  C646  F64E         	movff	??_dir_sdi+2,dir_sdi@csz
 34997   017AA2  C647  F64F         	movff	??_dir_sdi+3,dir_sdi@csz+1
 34998   017AA6  C648  F650         	movff	??_dir_sdi+4,dir_sdi@csz+2
 34999   017AAA  C649  F651         	movff	??_dir_sdi+5,dir_sdi@csz+3
 35000                           
 35001                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 35002   017AAE  EFAD  F0BD         	goto	l1600
 35003   017AB2                     l21437:
 35004                           
 35005                           ; BSR set to: 6
 35006                           ;../fatfs/ff.c: 1724:    clst = get_fat(&dp->obj, clst);
 35007   017AB2  C63E  F624         	movff	dir_sdi@dp,get_fat@obj
 35008   017AB6  C63F  F625         	movff	dir_sdi@dp+1,get_fat@obj+1
 35009   017ABA  C652  F626         	movff	dir_sdi@clst,get_fat@clst
 35010   017ABE  C653  F627         	movff	dir_sdi@clst+1,get_fat@clst+1
 35011   017AC2  C654  F628         	movff	dir_sdi@clst+2,get_fat@clst+2
 35012   017AC6  C655  F629         	movff	dir_sdi@clst+3,get_fat@clst+3
 35013   017ACA  ECF7  F0B4         	call	_get_fat	;wreg free
 35014   017ACE  C624  F652         	movff	?_get_fat,dir_sdi@clst
 35015   017AD2  C625  F653         	movff	?_get_fat+1,dir_sdi@clst+1
 35016   017AD6  C626  F654         	movff	?_get_fat+2,dir_sdi@clst+2
 35017   017ADA  C627  F655         	movff	?_get_fat+3,dir_sdi@clst+3
 35018   017ADE                     
 35019                           ;../fatfs/ff.c: 1725:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35020   017ADE  0106               	movlb	6	; () banked
 35021   017AE0  2952               	incf	dir_sdi@clst& (0+255),w,b
 35022   017AE2  E10A               	bnz	u28821
 35023   017AE4  2953               	incf	(dir_sdi@clst+1)& (0+255),w,b
 35024   017AE6  E108               	bnz	u28821
 35025   017AE8  2954               	incf	(dir_sdi@clst+2)& (0+255),w,b
 35026   017AEA  E106               	bnz	u28821
 35027   017AEC  2955               	incf	(dir_sdi@clst+3)& (0+255),w,b
 35028   017AEE  A4D8               	btfss	status,2,c
 35029   017AF0  EF7C  F0BD         	goto	u28821
 35030   017AF4  EF7E  F0BD         	goto	u28820
 35031   017AF8                     u28821:
 35032   017AF8  EF81  F0BD         	goto	l21445
 35033   017AFC                     u28820:
 35034   017AFC                     
 35035                           ; BSR set to: 6
 35036   017AFC  0E01               	movlw	1
 35037   017AFE  EF36  F0BE         	goto	l1594
 35038   017B02                     l21445:
 35039                           
 35040                           ; BSR set to: 6
 35041                           ;../fatfs/ff.c: 1726:    if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 35042   017B02  5155               	movf	(dir_sdi@clst+3)& (0+255),w,b
 35043   017B04  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 35044   017B06  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 35045   017B08  E109               	bnz	u28830
 35046   017B0A  0E02               	movlw	2
 35047   017B0C  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 35048   017B0E  A0D8               	btfss	status,0,c
 35049   017B10  EF8C  F0BD         	goto	u28831
 35050   017B14  EF8E  F0BD         	goto	u28830
 35051   017B18                     u28831:
 35052   017B18  EF9D  F0BC         	goto	l21411
 35053   017B1C                     u28830:
 35054   017B1C                     
 35055                           ; BSR set to: 6
 35056   017B1C  EE20 F018          	lfsr	2,24
 35057   017B20  5156               	movf	dir_sdi@fs& (0+255),w,b
 35058   017B22  26D9               	addwf	fsr2l,f,c
 35059   017B24  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 35060   017B26  22DA               	addwfc	fsr2h,f,c
 35061   017B28  50DE               	movf	postinc2,w,c
 35062   017B2A  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 35063   017B2C  50DE               	movf	postinc2,w,c
 35064   017B2E  5953               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 35065   017B30  50DE               	movf	postinc2,w,c
 35066   017B32  5954               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 35067   017B34  50DE               	movf	postinc2,w,c
 35068   017B36  5955               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 35069   017B38  A0D8               	btfss	status,0,c
 35070   017B3A  EFA1  F0BD         	goto	u28841
 35071   017B3E  EFA3  F0BD         	goto	u28840
 35072   017B42                     u28841:
 35073   017B42  EFA5  F0BD         	goto	l21453
 35074   017B46                     u28840:
 35075   017B46  EF9D  F0BC         	goto	l21411
 35076   017B4A                     l21453:
 35077                           
 35078                           ; BSR set to: 6
 35079                           ;../fatfs/ff.c: 1727:    ofs -= csz;
 35080   017B4A  514E               	movf	dir_sdi@csz& (0+255),w,b
 35081   017B4C  5F40               	subwf	dir_sdi@ofs& (0+255),f,b
 35082   017B4E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 35083   017B50  5B41               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 35084   017B52  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 35085   017B54  5B42               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 35086   017B56  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 35087   017B58  5B43               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 35088   017B5A                     l1600:
 35089                           
 35090                           ; BSR set to: 6
 35091                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 35092   017B5A  514E               	movf	dir_sdi@csz& (0+255),w,b
 35093   017B5C  5D40               	subwf	dir_sdi@ofs& (0+255),w,b
 35094   017B5E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 35095   017B60  5941               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 35096   017B62  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 35097   017B64  5942               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 35098   017B66  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 35099   017B68  5943               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 35100   017B6A  B0D8               	btfsc	status,0,c
 35101   017B6C  EFBA  F0BD         	goto	u28851
 35102   017B70  EFBC  F0BD         	goto	u28850
 35103   017B74                     u28851:
 35104   017B74  EF59  F0BD         	goto	l21437
 35105   017B78                     u28850:
 35106   017B78                     
 35107                           ; BSR set to: 6
 35108                           ;../fatfs/ff.c: 1729:   dp->sect = clst2sect(fs, clst);
 35109   017B78  C656  F510         	movff	dir_sdi@fs,clst2sect@fs
 35110   017B7C  C657  F511         	movff	dir_sdi@fs+1,clst2sect@fs+1
 35111   017B80  C652  F512         	movff	dir_sdi@clst,clst2sect@clst
 35112   017B84  C653  F513         	movff	dir_sdi@clst+1,clst2sect@clst+1
 35113   017B88  C654  F514         	movff	dir_sdi@clst+2,clst2sect@clst+2
 35114   017B8C  C655  F515         	movff	dir_sdi@clst+3,clst2sect@clst+3
 35115   017B90  EC7A  F0F0         	call	_clst2sect	;wreg free
 35116   017B94  0106               	movlb	6	; () banked
 35117   017B96  EE20 F016          	lfsr	2,22
 35118   017B9A  513E               	movf	dir_sdi@dp& (0+255),w,b
 35119   017B9C  26D9               	addwf	fsr2l,f,c
 35120   017B9E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35121   017BA0  22DA               	addwfc	fsr2h,f,c
 35122   017BA2  C510  F4DE         	movff	?_clst2sect,postinc2
 35123   017BA6  C511  F4DE         	movff	?_clst2sect+1,postinc2
 35124   017BAA  C512  F4DE         	movff	?_clst2sect+2,postinc2
 35125   017BAE  C513  F4DE         	movff	?_clst2sect+3,postinc2
 35126   017BB2                     l21457:
 35127                           
 35128                           ; BSR set to: 6
 35129                           ;../fatfs/ff.c: 1731:  dp->clust = clst;
 35130   017BB2  EE20 F012          	lfsr	2,18
 35131   017BB6  513E               	movf	dir_sdi@dp& (0+255),w,b
 35132   017BB8  26D9               	addwf	fsr2l,f,c
 35133   017BBA  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35134   017BBC  22DA               	addwfc	fsr2h,f,c
 35135   017BBE  C652  F4DE         	movff	dir_sdi@clst,postinc2
 35136   017BC2  C653  F4DE         	movff	dir_sdi@clst+1,postinc2
 35137   017BC6  C654  F4DE         	movff	dir_sdi@clst+2,postinc2
 35138   017BCA  C655  F4DE         	movff	dir_sdi@clst+3,postinc2
 35139   017BCE                     
 35140                           ; BSR set to: 6
 35141                           ;../fatfs/ff.c: 1732:  if (dp->sect == 0) return FR_INT_ERR;
 35142   017BCE  EE20 F016          	lfsr	2,22
 35143   017BD2  513E               	movf	dir_sdi@dp& (0+255),w,b
 35144   017BD4  26D9               	addwf	fsr2l,f,c
 35145   017BD6  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35146   017BD8  22DA               	addwfc	fsr2h,f,c
 35147   017BDA  50DE               	movf	postinc2,w,c
 35148   017BDC  10DE               	iorwf	postinc2,w,c
 35149   017BDE  10DE               	iorwf	postinc2,w,c
 35150   017BE0  10DE               	iorwf	postinc2,w,c
 35151   017BE2  A4D8               	btfss	status,2,c
 35152   017BE4  EFF6  F0BD         	goto	u28861
 35153   017BE8  EFF8  F0BD         	goto	u28860
 35154   017BEC                     u28861:
 35155   017BEC  EFFA  F0BD         	goto	l21465
 35156   017BF0                     u28860:
 35157   017BF0  EF9D  F0BC         	goto	l21411
 35158   017BF4                     l21465:
 35159                           
 35160                           ; BSR set to: 6
 35161                           ;../fatfs/ff.c: 1733:  dp->sect += ofs / ((UINT)512);
 35162   017BF4  C640  F644         	movff	dir_sdi@ofs,??_dir_sdi
 35163   017BF8  C641  F645         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 35164   017BFC  C642  F646         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 35165   017C00  C643  F647         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 35166   017C04  0E0A               	movlw	10
 35167   017C06  EF0A  F0BE         	goto	u28870
 35168   017C0A                     u28875:
 35169   017C0A  90D8               	bcf	status,0,c
 35170   017C0C  3347               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 35171   017C0E  3346               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 35172   017C10  3345               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 35173   017C12  3344               	rrcf	??_dir_sdi& (0+255),f,b
 35174   017C14                     u28870:
 35175   017C14  2EE8               	decfsz	wreg,f,c
 35176   017C16  EF05  F0BE         	goto	u28875
 35177   017C1A  EE20 F016          	lfsr	2,22
 35178   017C1E  513E               	movf	dir_sdi@dp& (0+255),w,b
 35179   017C20  26D9               	addwf	fsr2l,f,c
 35180   017C22  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35181   017C24  22DA               	addwfc	fsr2h,f,c
 35182   017C26  5144               	movf	??_dir_sdi& (0+255),w,b
 35183   017C28  26DE               	addwf	postinc2,f,c
 35184   017C2A  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 35185   017C2C  22DE               	addwfc	postinc2,f,c
 35186   017C2E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 35187   017C30  22DE               	addwfc	postinc2,f,c
 35188   017C32  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 35189   017C34  22DE               	addwfc	postinc2,f,c
 35190                           
 35191                           ;../fatfs/ff.c: 1734:  dp->dir = fs->win + (ofs % ((UINT)512));
 35192   017C36  0EFF               	movlw	255
 35193   017C38  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 35194   017C3A  6F44               	movwf	??_dir_sdi& (0+255),b
 35195   017C3C  0E01               	movlw	1
 35196   017C3E  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 35197   017C40  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 35198   017C42  5144               	movf	??_dir_sdi& (0+255),w,b
 35199   017C44  2556               	addwf	dir_sdi@fs& (0+255),w,b
 35200   017C46  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 35201   017C48  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 35202   017C4A  2157               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 35203   017C4C  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 35204   017C4E  0E34               	movlw	52
 35205   017C50  2746               	addwf	(??_dir_sdi+2)& (0+255),f,b
 35206   017C52  0E00               	movlw	0
 35207   017C54  2347               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 35208   017C56  EE20 F01A          	lfsr	2,26
 35209   017C5A  513E               	movf	dir_sdi@dp& (0+255),w,b
 35210   017C5C  26D9               	addwf	fsr2l,f,c
 35211   017C5E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35212   017C60  22DA               	addwfc	fsr2h,f,c
 35213   017C62  C646  F4DE         	movff	??_dir_sdi+2,postinc2
 35214   017C66  C647  F4DD         	movff	??_dir_sdi+3,postdec2
 35215   017C6A                     
 35216                           ; BSR set to: 6
 35217                           ;../fatfs/ff.c: 1736:  return FR_OK;
 35218   017C6A  0E00               	movlw	0
 35219   017C6C                     l1594:
 35220                           
 35221                           ; BSR set to: 6
 35222   017C6C  0012               	return		;funcret
 35223   017C6E                     __end_of_dir_sdi:
 35224                           	callstack 0
 35225                           
 35226 ;; *************** function _dir_next *****************
 35227 ;; Defined at:
 35228 ;;		line 1746 in file "../fatfs/ff.c"
 35229 ;; Parameters:    Size  Location     Type
 35230 ;;  dp              2   98[BANK6 ] PTR struct .
 35231 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 35232 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), 
 35233 ;;		 -> f_open@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 35234 ;;  stretch         2  100[BANK6 ] int 
 35235 ;; Auto vars:     Size  Location     Type
 35236 ;;  clst            4  120[BANK6 ] unsigned long 
 35237 ;;  ofs             4  114[BANK6 ] unsigned long 
 35238 ;;  fs              2  118[BANK6 ] PTR struct .
 35239 ;;		 -> fs(564), NULL(0), 
 35240 ;; Return value:  Size  Location     Type
 35241 ;;                  1    wreg      enum E597
 35242 ;; Registers used:
 35243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35244 ;; Tracked objects:
 35245 ;;		On entry : 0/0
 35246 ;;		On exit  : 0/0
 35247 ;;		Unchanged: 0/0
 35248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35249 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35250 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35251 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35252 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35253 ;;Total ram usage:       26 bytes
 35254 ;; Hardware stack levels used: 1
 35255 ;; Hardware stack levels required when called: 16
 35256 ;; This function calls:
 35257 ;;		_clst2sect
 35258 ;;		_create_chain
 35259 ;;		_dir_clear
 35260 ;;		_get_fat
 35261 ;; This function is called by:
 35262 ;;		_dir_alloc
 35263 ;;		_dir_read
 35264 ;;		_dir_find
 35265 ;;		_f_getcwd
 35266 ;;		_f_readdir
 35267 ;; This function uses a non-reentrant model
 35268 ;;
 35269                           
 35270                           	psect	text90
 35271   01619E                     __ptext90:
 35272                           	callstack 0
 35273   01619E                     _dir_next:
 35274                           	callstack 101
 35275   01619E                     
 35276                           ;../fatfs/ff.c: 1747:  DIR* dp,;../fatfs/ff.c: 1748:  int stretch;../fatfs/ff.c: 1750: {
      +                          ;../fatfs/ff.c: 1751:  DWORD ofs, clst;;../fatfs/ff.c: 1752:  FATFS *fs = dp->obj.fs;
 35277   01619E  C662  F4D9         	movff	dir_next@dp,fsr2l
 35278   0161A2  C663  F4DA         	movff	dir_next@dp+1,fsr2h
 35279   0161A6  C4DE F676          	movff	postinc2,dir_next@fs
 35280   0161AA  C4DD F677          	movff	postdec2,dir_next@fs+1
 35281   0161AE                     
 35282                           ;../fatfs/ff.c: 1755:  ofs = dp->dptr + 32;
 35283   0161AE  0106               	movlb	6	; () banked
 35284   0161B0  EE20 F00E          	lfsr	2,14
 35285   0161B4  5162               	movf	dir_next@dp& (0+255),w,b
 35286   0161B6  26D9               	addwf	fsr2l,f,c
 35287   0161B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35288   0161BA  22DA               	addwfc	fsr2h,f,c
 35289   0161BC  C4DE F666          	movff	postinc2,??_dir_next
 35290   0161C0  C4DE F667          	movff	postinc2,??_dir_next+1
 35291   0161C4  C4DE F668          	movff	postinc2,??_dir_next+2
 35292   0161C8  C4DE F669          	movff	postinc2,??_dir_next+3
 35293   0161CC  0E20               	movlw	32
 35294   0161CE  2566               	addwf	??_dir_next& (0+255),w,b
 35295   0161D0  6F72               	movwf	dir_next@ofs& (0+255),b
 35296   0161D2  0E00               	movlw	0
 35297   0161D4  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 35298   0161D6  6F73               	movwf	(dir_next@ofs+1)& (0+255),b
 35299   0161D8  0E00               	movlw	0
 35300   0161DA  2168               	addwfc	(??_dir_next+2)& (0+255),w,b
 35301   0161DC  6F74               	movwf	(dir_next@ofs+2)& (0+255),b
 35302   0161DE  0E00               	movlw	0
 35303   0161E0  2169               	addwfc	(??_dir_next+3)& (0+255),w,b
 35304   0161E2  6F75               	movwf	(dir_next@ofs+3)& (0+255),b
 35305   0161E4                     
 35306                           ; BSR set to: 6
 35307   0161E4  5175               	movf	(dir_next@ofs+3)& (0+255),w,b
 35308   0161E6  E109               	bnz	u28880
 35309   0161E8  0E20               	movlw	32
 35310   0161EA  5D74               	subwf	(dir_next@ofs+2)& (0+255),w,b
 35311   0161EC  A0D8               	btfss	status,0,c
 35312   0161EE  EFFB  F0B0         	goto	u28881
 35313   0161F2  EFFD  F0B0         	goto	u28880
 35314   0161F6                     u28881:
 35315   0161F6  EF07  F0B1         	goto	l1610
 35316   0161FA                     u28880:
 35317   0161FA                     
 35318                           ; BSR set to: 6
 35319   0161FA  EE20 F016          	lfsr	2,22
 35320   0161FE  5162               	movf	dir_next@dp& (0+255),w,b
 35321   016200  26D9               	addwf	fsr2l,f,c
 35322   016202  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35323   016204  22DA               	addwfc	fsr2h,f,c
 35324   016206  6ADE               	clrf	postinc2,c
 35325   016208  6ADE               	clrf	postinc2,c
 35326   01620A  6ADE               	clrf	postinc2,c
 35327   01620C  6ADD               	clrf	postdec2,c
 35328   01620E                     l1610:
 35329                           
 35330                           ; BSR set to: 6
 35331                           ;../fatfs/ff.c: 1757:  if (dp->sect == 0) return FR_NO_FILE;
 35332   01620E  EE20 F016          	lfsr	2,22
 35333   016212  5162               	movf	dir_next@dp& (0+255),w,b
 35334   016214  26D9               	addwf	fsr2l,f,c
 35335   016216  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35336   016218  22DA               	addwfc	fsr2h,f,c
 35337   01621A  50DE               	movf	postinc2,w,c
 35338   01621C  10DE               	iorwf	postinc2,w,c
 35339   01621E  10DE               	iorwf	postinc2,w,c
 35340   016220  10DE               	iorwf	postinc2,w,c
 35341   016222  A4D8               	btfss	status,2,c
 35342   016224  EF16  F0B1         	goto	u28891
 35343   016228  EF18  F0B1         	goto	u28890
 35344   01622C                     u28891:
 35345   01622C  EF1B  F0B1         	goto	l21489
 35346   016230                     u28890:
 35347   016230                     l21485:
 35348                           
 35349                           ; BSR set to: 6
 35350   016230  0E04               	movlw	4
 35351   016232  EFE3  F0B2         	goto	l1618
 35352   016236                     l21489:
 35353                           
 35354                           ; BSR set to: 6
 35355                           ;../fatfs/ff.c: 1759:  if (ofs % ((UINT)512) == 0) {
 35356   016236  0EFF               	movlw	255
 35357   016238  1572               	andwf	dir_next@ofs& (0+255),w,b
 35358   01623A  6F66               	movwf	??_dir_next& (0+255),b
 35359   01623C  0E01               	movlw	1
 35360   01623E  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 35361   016240  6F67               	movwf	(??_dir_next+1)& (0+255),b
 35362   016242  0E00               	movlw	0
 35363   016244  1574               	andwf	(dir_next@ofs+2)& (0+255),w,b
 35364   016246  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35365   016248  0E00               	movlw	0
 35366   01624A  1575               	andwf	(dir_next@ofs+3)& (0+255),w,b
 35367   01624C  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35368   01624E  5166               	movf	??_dir_next& (0+255),w,b
 35369   016250  1167               	iorwf	(??_dir_next+1)& (0+255),w,b
 35370   016252  1168               	iorwf	(??_dir_next+2)& (0+255),w,b
 35371   016254  1169               	iorwf	(??_dir_next+3)& (0+255),w,b
 35372   016256  A4D8               	btfss	status,2,c
 35373   016258  EF30  F0B1         	goto	u28901
 35374   01625C  EF32  F0B1         	goto	u28900
 35375   016260                     u28901:
 35376   016260  EFBA  F0B2         	goto	l21557
 35377   016264                     u28900:
 35378   016264                     
 35379                           ; BSR set to: 6
 35380                           ;../fatfs/ff.c: 1760:   dp->sect++;
 35381   016264  EE20 F016          	lfsr	2,22
 35382   016268  5162               	movf	dir_next@dp& (0+255),w,b
 35383   01626A  26D9               	addwf	fsr2l,f,c
 35384   01626C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35385   01626E  22DA               	addwfc	fsr2h,f,c
 35386   016270  2ADE               	incf	postinc2,f,c
 35387   016272  0E00               	movlw	0
 35388   016274  22DE               	addwfc	postinc2,f,c
 35389   016276  22DE               	addwfc	postinc2,f,c
 35390   016278  22DE               	addwfc	postinc2,f,c
 35391                           
 35392                           ;../fatfs/ff.c: 1762:   if (dp->clust == 0) {
 35393   01627A  EE20 F012          	lfsr	2,18
 35394   01627E  5162               	movf	dir_next@dp& (0+255),w,b
 35395   016280  26D9               	addwf	fsr2l,f,c
 35396   016282  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35397   016284  22DA               	addwfc	fsr2h,f,c
 35398   016286  50DE               	movf	postinc2,w,c
 35399   016288  10DE               	iorwf	postinc2,w,c
 35400   01628A  10DE               	iorwf	postinc2,w,c
 35401   01628C  10DE               	iorwf	postinc2,w,c
 35402   01628E  A4D8               	btfss	status,2,c
 35403   016290  EF4C  F0B1         	goto	u28911
 35404   016294  EF4E  F0B1         	goto	u28910
 35405   016298                     u28911:
 35406   016298  EF8C  F0B1         	goto	l21501
 35407   01629C                     u28910:
 35408   01629C                     
 35409                           ; BSR set to: 6
 35410                           ;../fatfs/ff.c: 1763:    if (ofs / 32 >= fs->n_rootdir) {
 35411   01629C  EE20 F008          	lfsr	2,8
 35412   0162A0  5176               	movf	dir_next@fs& (0+255),w,b
 35413   0162A2  26D9               	addwf	fsr2l,f,c
 35414   0162A4  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35415   0162A6  22DA               	addwfc	fsr2h,f,c
 35416   0162A8  C4DE F666          	movff	postinc2,??_dir_next
 35417   0162AC  C4DD F667          	movff	postdec2,??_dir_next+1
 35418   0162B0  5166               	movf	??_dir_next& (0+255),w,b
 35419   0162B2  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35420   0162B4  5167               	movf	(??_dir_next+1)& (0+255),w,b
 35421   0162B6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35422   0162B8  6B6A               	clrf	(??_dir_next+4)& (0+255),b
 35423   0162BA  6B6B               	clrf	(??_dir_next+5)& (0+255),b
 35424   0162BC  C672  F66C         	movff	dir_next@ofs,??_dir_next+6
 35425   0162C0  C673  F66D         	movff	dir_next@ofs+1,??_dir_next+7
 35426   0162C4  C674  F66E         	movff	dir_next@ofs+2,??_dir_next+8
 35427   0162C8  C675  F66F         	movff	dir_next@ofs+3,??_dir_next+9
 35428   0162CC  0E06               	movlw	6
 35429   0162CE  EF6E  F0B1         	goto	u28920
 35430   0162D2                     u28925:
 35431   0162D2  90D8               	bcf	status,0,c
 35432   0162D4  336F               	rrcf	(??_dir_next+9)& (0+255),f,b
 35433   0162D6  336E               	rrcf	(??_dir_next+8)& (0+255),f,b
 35434   0162D8  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 35435   0162DA  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 35436   0162DC                     u28920:
 35437   0162DC  2EE8               	decfsz	wreg,f,c
 35438   0162DE  EF69  F0B1         	goto	u28925
 35439   0162E2  5168               	movf	(??_dir_next+2)& (0+255),w,b
 35440   0162E4  5D6C               	subwf	(??_dir_next+6)& (0+255),w,b
 35441   0162E6  5169               	movf	(??_dir_next+3)& (0+255),w,b
 35442   0162E8  596D               	subwfb	(??_dir_next+7)& (0+255),w,b
 35443   0162EA  516A               	movf	(??_dir_next+4)& (0+255),w,b
 35444   0162EC  596E               	subwfb	(??_dir_next+8)& (0+255),w,b
 35445   0162EE  516B               	movf	(??_dir_next+5)& (0+255),w,b
 35446   0162F0  596F               	subwfb	(??_dir_next+9)& (0+255),w,b
 35447   0162F2  A0D8               	btfss	status,0,c
 35448   0162F4  EF7E  F0B1         	goto	u28931
 35449   0162F8  EF80  F0B1         	goto	u28930
 35450   0162FC                     u28931:
 35451   0162FC  EFBA  F0B2         	goto	l21557
 35452   016300                     u28930:
 35453   016300                     
 35454                           ; BSR set to: 6
 35455                           ;../fatfs/ff.c: 1764:     dp->sect = 0; return FR_NO_FILE;
 35456   016300  EE20 F016          	lfsr	2,22
 35457   016304  5162               	movf	dir_next@dp& (0+255),w,b
 35458   016306  26D9               	addwf	fsr2l,f,c
 35459   016308  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35460   01630A  22DA               	addwfc	fsr2h,f,c
 35461   01630C  6ADE               	clrf	postinc2,c
 35462   01630E  6ADE               	clrf	postinc2,c
 35463   016310  6ADE               	clrf	postinc2,c
 35464   016312  6ADD               	clrf	postdec2,c
 35465   016314  EF18  F0B1         	goto	l21485
 35466   016318                     l21501:
 35467                           
 35468                           ; BSR set to: 6
 35469                           ;../fatfs/ff.c: 1768:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
 35470   016318  EE20 F00A          	lfsr	2,10
 35471   01631C  5176               	movf	dir_next@fs& (0+255),w,b
 35472   01631E  26D9               	addwf	fsr2l,f,c
 35473   016320  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35474   016322  22DA               	addwfc	fsr2h,f,c
 35475   016324  C4DE F666          	movff	postinc2,??_dir_next
 35476   016328  C4DD F667          	movff	postdec2,??_dir_next+1
 35477   01632C  0EFF               	movlw	255
 35478   01632E  2566               	addwf	??_dir_next& (0+255),w,b
 35479   016330  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35480   016332  0EFF               	movlw	255
 35481   016334  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 35482   016336  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35483   016338  C672  F66A         	movff	dir_next@ofs,??_dir_next+4
 35484   01633C  C673  F66B         	movff	dir_next@ofs+1,??_dir_next+5
 35485   016340  C674  F66C         	movff	dir_next@ofs+2,??_dir_next+6
 35486   016344  C675  F66D         	movff	dir_next@ofs+3,??_dir_next+7
 35487   016348  0E0A               	movlw	10
 35488   01634A  EFAC  F0B1         	goto	u28940
 35489   01634E                     u28945:
 35490   01634E  90D8               	bcf	status,0,c
 35491   016350  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 35492   016352  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 35493   016354  336B               	rrcf	(??_dir_next+5)& (0+255),f,b
 35494   016356  336A               	rrcf	(??_dir_next+4)& (0+255),f,b
 35495   016358                     u28940:
 35496   016358  2EE8               	decfsz	wreg,f,c
 35497   01635A  EFA7  F0B1         	goto	u28945
 35498   01635E  5168               	movf	(??_dir_next+2)& (0+255),w,b
 35499   016360  156A               	andwf	(??_dir_next+4)& (0+255),w,b
 35500   016362  6F6E               	movwf	(??_dir_next+8)& (0+255),b
 35501   016364  5169               	movf	(??_dir_next+3)& (0+255),w,b
 35502   016366  156B               	andwf	(??_dir_next+5)& (0+255),w,b
 35503   016368  6F6F               	movwf	(??_dir_next+9)& (0+255),b
 35504   01636A  0E00               	movlw	0
 35505   01636C  156C               	andwf	(??_dir_next+6)& (0+255),w,b
 35506   01636E  6F70               	movwf	(??_dir_next+10)& (0+255),b
 35507   016370  0E00               	movlw	0
 35508   016372  156D               	andwf	(??_dir_next+7)& (0+255),w,b
 35509   016374  6F71               	movwf	(??_dir_next+11)& (0+255),b
 35510   016376  516E               	movf	(??_dir_next+8)& (0+255),w,b
 35511   016378  116F               	iorwf	(??_dir_next+9)& (0+255),w,b
 35512   01637A  1170               	iorwf	(??_dir_next+10)& (0+255),w,b
 35513   01637C  1171               	iorwf	(??_dir_next+11)& (0+255),w,b
 35514   01637E  A4D8               	btfss	status,2,c
 35515   016380  EFC4  F0B1         	goto	u28951
 35516   016384  EFC6  F0B1         	goto	u28950
 35517   016388                     u28951:
 35518   016388  EFBA  F0B2         	goto	l21557
 35519   01638C                     u28950:
 35520   01638C                     
 35521                           ; BSR set to: 6
 35522                           ;../fatfs/ff.c: 1769:     clst = get_fat(&dp->obj, dp->clust);
 35523   01638C  C662  F624         	movff	dir_next@dp,get_fat@obj
 35524   016390  C663  F625         	movff	dir_next@dp+1,get_fat@obj+1
 35525   016394  EE20 F012          	lfsr	2,18
 35526   016398  5162               	movf	dir_next@dp& (0+255),w,b
 35527   01639A  26D9               	addwf	fsr2l,f,c
 35528   01639C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35529   01639E  22DA               	addwfc	fsr2h,f,c
 35530   0163A0  C4DE F626          	movff	postinc2,get_fat@clst
 35531   0163A4  C4DE F627          	movff	postinc2,get_fat@clst+1
 35532   0163A8  C4DE F628          	movff	postinc2,get_fat@clst+2
 35533   0163AC  C4DE F629          	movff	postinc2,get_fat@clst+3
 35534   0163B0  ECF7  F0B4         	call	_get_fat	;wreg free
 35535   0163B4  C624  F678         	movff	?_get_fat,dir_next@clst
 35536   0163B8  C625  F679         	movff	?_get_fat+1,dir_next@clst+1
 35537   0163BC  C626  F67A         	movff	?_get_fat+2,dir_next@clst+2
 35538   0163C0  C627  F67B         	movff	?_get_fat+3,dir_next@clst+3
 35539   0163C4                     
 35540                           ;../fatfs/ff.c: 1770:     if (clst <= 1) return FR_INT_ERR;
 35541   0163C4  0106               	movlb	6	; () banked
 35542   0163C6  517B               	movf	(dir_next@clst+3)& (0+255),w,b
 35543   0163C8  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35544   0163CA  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35545   0163CC  E107               	bnz	u28961
 35546   0163CE  0E02               	movlw	2
 35547   0163D0  5D78               	subwf	dir_next@clst& (0+255),w,b
 35548   0163D2  B0D8               	btfsc	status,0,c
 35549   0163D4  EFEE  F0B1         	goto	u28961
 35550   0163D8  EFF0  F0B1         	goto	u28960
 35551   0163DC                     u28961:
 35552   0163DC  EFF3  F0B1         	goto	l21511
 35553   0163E0                     u28960:
 35554   0163E0                     l21507:
 35555                           
 35556                           ; BSR set to: 6
 35557   0163E0  0E02               	movlw	2
 35558   0163E2  EFE3  F0B2         	goto	l1618
 35559   0163E6                     l21511:
 35560                           
 35561                           ; BSR set to: 6
 35562                           ;../fatfs/ff.c: 1771:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35563   0163E6  2978               	incf	dir_next@clst& (0+255),w,b
 35564   0163E8  E10A               	bnz	u28971
 35565   0163EA  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 35566   0163EC  E108               	bnz	u28971
 35567   0163EE  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 35568   0163F0  E106               	bnz	u28971
 35569   0163F2  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 35570   0163F4  A4D8               	btfss	status,2,c
 35571   0163F6  EFFF  F0B1         	goto	u28971
 35572   0163FA  EF01  F0B2         	goto	u28970
 35573   0163FE                     u28971:
 35574   0163FE  EF04  F0B2         	goto	l21517
 35575   016402                     u28970:
 35576   016402                     l21513:
 35577   016402  0E01               	movlw	1
 35578   016404  EFE3  F0B2         	goto	l1618
 35579   016408                     l21517:
 35580                           
 35581                           ; BSR set to: 6
 35582                           ;../fatfs/ff.c: 1772:     if (clst >= fs->n_fatent) {
 35583   016408  EE20 F018          	lfsr	2,24
 35584   01640C  5176               	movf	dir_next@fs& (0+255),w,b
 35585   01640E  26D9               	addwf	fsr2l,f,c
 35586   016410  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35587   016412  22DA               	addwfc	fsr2h,f,c
 35588   016414  50DE               	movf	postinc2,w,c
 35589   016416  5D78               	subwf	dir_next@clst& (0+255),w,b
 35590   016418  50DE               	movf	postinc2,w,c
 35591   01641A  5979               	subwfb	(dir_next@clst+1)& (0+255),w,b
 35592   01641C  50DE               	movf	postinc2,w,c
 35593   01641E  597A               	subwfb	(dir_next@clst+2)& (0+255),w,b
 35594   016420  50DE               	movf	postinc2,w,c
 35595   016422  597B               	subwfb	(dir_next@clst+3)& (0+255),w,b
 35596   016424  A0D8               	btfss	status,0,c
 35597   016426  EF17  F0B2         	goto	u28981
 35598   01642A  EF19  F0B2         	goto	u28980
 35599   01642E                     u28981:
 35600   01642E  EF8E  F0B2         	goto	l1626
 35601   016432                     u28980:
 35602   016432                     
 35603                           ; BSR set to: 6
 35604                           ;../fatfs/ff.c: 1774:      if (!stretch) {
 35605   016432  5164               	movf	dir_next@stretch& (0+255),w,b
 35606   016434  1165               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 35607   016436  A4D8               	btfss	status,2,c
 35608   016438  EF20  F0B2         	goto	u28991
 35609   01643C  EF22  F0B2         	goto	u28990
 35610   016440                     u28991:
 35611   016440  EF2E  F0B2         	goto	l21527
 35612   016444                     u28990:
 35613   016444                     
 35614                           ; BSR set to: 6
 35615                           ;../fatfs/ff.c: 1775:       dp->sect = 0; return FR_NO_FILE;
 35616   016444  EE20 F016          	lfsr	2,22
 35617   016448  5162               	movf	dir_next@dp& (0+255),w,b
 35618   01644A  26D9               	addwf	fsr2l,f,c
 35619   01644C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35620   01644E  22DA               	addwfc	fsr2h,f,c
 35621   016450  6ADE               	clrf	postinc2,c
 35622   016452  6ADE               	clrf	postinc2,c
 35623   016454  6ADE               	clrf	postinc2,c
 35624   016456  6ADD               	clrf	postdec2,c
 35625   016458  EF18  F0B1         	goto	l21485
 35626   01645C                     l21527:
 35627                           
 35628                           ; BSR set to: 6
 35629                           ;../fatfs/ff.c: 1777:      clst = create_chain(&dp->obj, dp->clust);
 35630   01645C  C662  F645         	movff	dir_next@dp,create_chain@obj
 35631   016460  C663  F646         	movff	dir_next@dp+1,create_chain@obj+1
 35632   016464  EE20 F012          	lfsr	2,18
 35633   016468  5162               	movf	dir_next@dp& (0+255),w,b
 35634   01646A  26D9               	addwf	fsr2l,f,c
 35635   01646C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35636   01646E  22DA               	addwfc	fsr2h,f,c
 35637   016470  C4DE F647          	movff	postinc2,create_chain@clst
 35638   016474  C4DE F648          	movff	postinc2,create_chain@clst+1
 35639   016478  C4DE F649          	movff	postinc2,create_chain@clst+2
 35640   01647C  C4DE F64A          	movff	postinc2,create_chain@clst+3
 35641   016480  EC7C  F09D         	call	_create_chain	;wreg free
 35642   016484  C645  F678         	movff	?_create_chain,dir_next@clst
 35643   016488  C646  F679         	movff	?_create_chain+1,dir_next@clst+1
 35644   01648C  C647  F67A         	movff	?_create_chain+2,dir_next@clst+2
 35645   016490  C648  F67B         	movff	?_create_chain+3,dir_next@clst+3
 35646   016494                     
 35647                           ;../fatfs/ff.c: 1778:      if (clst == 0) return FR_DENIED;
 35648   016494  0106               	movlb	6	; () banked
 35649   016496  5178               	movf	dir_next@clst& (0+255),w,b
 35650   016498  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35651   01649A  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35652   01649C  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 35653   01649E  A4D8               	btfss	status,2,c
 35654   0164A0  EF54  F0B2         	goto	u29001
 35655   0164A4  EF56  F0B2         	goto	u29000
 35656   0164A8                     u29001:
 35657   0164A8  EF59  F0B2         	goto	l21535
 35658   0164AC                     u29000:
 35659   0164AC                     
 35660                           ; BSR set to: 6
 35661   0164AC  0E07               	movlw	7
 35662   0164AE  EFE3  F0B2         	goto	l1618
 35663   0164B2                     l21535:
 35664                           
 35665                           ; BSR set to: 6
 35666                           ;../fatfs/ff.c: 1779:      if (clst == 1) return FR_INT_ERR;
 35667   0164B2  0578               	decf	dir_next@clst& (0+255),w,b
 35668   0164B4  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35669   0164B6  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35670   0164B8  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 35671   0164BA  A4D8               	btfss	status,2,c
 35672   0164BC  EF62  F0B2         	goto	u29011
 35673   0164C0  EF64  F0B2         	goto	u29010
 35674   0164C4                     u29011:
 35675   0164C4  EF66  F0B2         	goto	l21541
 35676   0164C8                     u29010:
 35677   0164C8  EFF0  F0B1         	goto	l21507
 35678   0164CC                     l21541:
 35679                           
 35680                           ; BSR set to: 6
 35681                           ;../fatfs/ff.c: 1780:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35682   0164CC  2978               	incf	dir_next@clst& (0+255),w,b
 35683   0164CE  E10A               	bnz	u29021
 35684   0164D0  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 35685   0164D2  E108               	bnz	u29021
 35686   0164D4  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 35687   0164D6  E106               	bnz	u29021
 35688   0164D8  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 35689   0164DA  A4D8               	btfss	status,2,c
 35690   0164DC  EF72  F0B2         	goto	u29021
 35691   0164E0  EF74  F0B2         	goto	u29020
 35692   0164E4                     u29021:
 35693   0164E4  EF76  F0B2         	goto	l21547
 35694   0164E8                     u29020:
 35695   0164E8  EF01  F0B2         	goto	l21513
 35696   0164EC                     l21547:
 35697                           
 35698                           ; BSR set to: 6
 35699                           ;../fatfs/ff.c: 1781:      if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
 35700   0164EC  C676  F61A         	movff	dir_next@fs,dir_clear@fs
 35701   0164F0  C677  F61B         	movff	dir_next@fs+1,dir_clear@fs+1
 35702   0164F4  C678  F61C         	movff	dir_next@clst,dir_clear@clst
 35703   0164F8  C679  F61D         	movff	dir_next@clst+1,dir_clear@clst+1
 35704   0164FC  C67A  F61E         	movff	dir_next@clst+2,dir_clear@clst+2
 35705   016500  C67B  F61F         	movff	dir_next@clst+3,dir_clear@clst+3
 35706   016504  EC0C  F0E4         	call	_dir_clear	;wreg free
 35707   016508  0900               	iorlw	0
 35708   01650A  B4D8               	btfsc	status,2,c
 35709   01650C  EF8A  F0B2         	goto	u29031
 35710   016510  EF8C  F0B2         	goto	u29030
 35711   016514                     u29031:
 35712   016514  EF8E  F0B2         	goto	l1626
 35713   016518                     u29030:
 35714   016518  EF01  F0B2         	goto	l21513
 35715   01651C                     l1626:
 35716                           
 35717                           ;../fatfs/ff.c: 1788:     dp->clust = clst;
 35718   01651C  0106               	movlb	6	; () banked
 35719   01651E  EE20 F012          	lfsr	2,18
 35720   016522  5162               	movf	dir_next@dp& (0+255),w,b
 35721   016524  26D9               	addwf	fsr2l,f,c
 35722   016526  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35723   016528  22DA               	addwfc	fsr2h,f,c
 35724   01652A  C678  F4DE         	movff	dir_next@clst,postinc2
 35725   01652E  C679  F4DE         	movff	dir_next@clst+1,postinc2
 35726   016532  C67A  F4DE         	movff	dir_next@clst+2,postinc2
 35727   016536  C67B  F4DE         	movff	dir_next@clst+3,postinc2
 35728   01653A                     
 35729                           ; BSR set to: 6
 35730                           ;../fatfs/ff.c: 1789:     dp->sect = clst2sect(fs, clst);
 35731   01653A  C676  F510         	movff	dir_next@fs,clst2sect@fs
 35732   01653E  C677  F511         	movff	dir_next@fs+1,clst2sect@fs+1
 35733   016542  C678  F512         	movff	dir_next@clst,clst2sect@clst
 35734   016546  C679  F513         	movff	dir_next@clst+1,clst2sect@clst+1
 35735   01654A  C67A  F514         	movff	dir_next@clst+2,clst2sect@clst+2
 35736   01654E  C67B  F515         	movff	dir_next@clst+3,clst2sect@clst+3
 35737   016552  EC7A  F0F0         	call	_clst2sect	;wreg free
 35738   016556  0106               	movlb	6	; () banked
 35739   016558  EE20 F016          	lfsr	2,22
 35740   01655C  5162               	movf	dir_next@dp& (0+255),w,b
 35741   01655E  26D9               	addwf	fsr2l,f,c
 35742   016560  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35743   016562  22DA               	addwfc	fsr2h,f,c
 35744   016564  C510  F4DE         	movff	?_clst2sect,postinc2
 35745   016568  C511  F4DE         	movff	?_clst2sect+1,postinc2
 35746   01656C  C512  F4DE         	movff	?_clst2sect+2,postinc2
 35747   016570  C513  F4DE         	movff	?_clst2sect+3,postinc2
 35748   016574                     l21557:
 35749                           
 35750                           ; BSR set to: 6
 35751                           ;../fatfs/ff.c: 1793:  dp->dptr = ofs;
 35752   016574  EE20 F00E          	lfsr	2,14
 35753   016578  5162               	movf	dir_next@dp& (0+255),w,b
 35754   01657A  26D9               	addwf	fsr2l,f,c
 35755   01657C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35756   01657E  22DA               	addwfc	fsr2h,f,c
 35757   016580  C672  F4DE         	movff	dir_next@ofs,postinc2
 35758   016584  C673  F4DE         	movff	dir_next@ofs+1,postinc2
 35759   016588  C674  F4DE         	movff	dir_next@ofs+2,postinc2
 35760   01658C  C675  F4DE         	movff	dir_next@ofs+3,postinc2
 35761   016590                     
 35762                           ; BSR set to: 6
 35763                           ;../fatfs/ff.c: 1794:  dp->dir = fs->win + ofs % ((UINT)512);
 35764   016590  0EFF               	movlw	255
 35765   016592  1572               	andwf	dir_next@ofs& (0+255),w,b
 35766   016594  6F66               	movwf	??_dir_next& (0+255),b
 35767   016596  0E01               	movlw	1
 35768   016598  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 35769   01659A  6F67               	movwf	(??_dir_next+1)& (0+255),b
 35770   01659C  5166               	movf	??_dir_next& (0+255),w,b
 35771   01659E  2576               	addwf	dir_next@fs& (0+255),w,b
 35772   0165A0  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35773   0165A2  5167               	movf	(??_dir_next+1)& (0+255),w,b
 35774   0165A4  2177               	addwfc	(dir_next@fs+1)& (0+255),w,b
 35775   0165A6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35776   0165A8  0E34               	movlw	52
 35777   0165AA  2768               	addwf	(??_dir_next+2)& (0+255),f,b
 35778   0165AC  0E00               	movlw	0
 35779   0165AE  2369               	addwfc	(??_dir_next+3)& (0+255),f,b
 35780   0165B0  EE20 F01A          	lfsr	2,26
 35781   0165B4  5162               	movf	dir_next@dp& (0+255),w,b
 35782   0165B6  26D9               	addwf	fsr2l,f,c
 35783   0165B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35784   0165BA  22DA               	addwfc	fsr2h,f,c
 35785   0165BC  C668  F4DE         	movff	??_dir_next+2,postinc2
 35786   0165C0  C669  F4DD         	movff	??_dir_next+3,postdec2
 35787   0165C4                     
 35788                           ; BSR set to: 6
 35789                           ;../fatfs/ff.c: 1796:  return FR_OK;
 35790   0165C4  0E00               	movlw	0
 35791   0165C6                     l1618:
 35792   0165C6  0012               	return		;funcret
 35793   0165C8                     __end_of_dir_next:
 35794                           	callstack 0
 35795                           
 35796 ;; *************** function _dir_clear *****************
 35797 ;; Defined at:
 35798 ;;		line 1659 in file "../fatfs/ff.c"
 35799 ;; Parameters:    Size  Location     Type
 35800 ;;  fs              2   26[BANK6 ] PTR struct .
 35801 ;;		 -> fs(564), NULL(0), 
 35802 ;;  clst            4   28[BANK6 ] unsigned long 
 35803 ;; Auto vars:     Size  Location     Type
 35804 ;;  sect            4   34[BANK6 ] unsigned long 
 35805 ;;  n               2   40[BANK6 ] unsigned int 
 35806 ;;  szb             2   38[BANK6 ] unsigned int 
 35807 ;;  ibuf            2   32[BANK6 ] PTR unsigned char 
 35808 ;;		 -> fs$win(512), fs(564), NULL(0), 
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1    wreg      enum E597
 35811 ;; Registers used:
 35812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35813 ;; Tracked objects:
 35814 ;;		On entry : 0/0
 35815 ;;		On exit  : 0/0
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35818 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35821 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35822 ;;Total ram usage:       18 bytes
 35823 ;; Hardware stack levels used: 1
 35824 ;; Hardware stack levels required when called: 13
 35825 ;; This function calls:
 35826 ;;		_clst2sect
 35827 ;;		_disk_write
 35828 ;;		_memset
 35829 ;;		_sync_window
 35830 ;; This function is called by:
 35831 ;;		_dir_next
 35832 ;;		_f_mkdir
 35833 ;; This function uses a non-reentrant model
 35834 ;;
 35835                           
 35836                           	psect	text91
 35837   01C818                     __ptext91:
 35838                           	callstack 0
 35839   01C818                     _dir_clear:
 35840                           	callstack 103
 35841   01C818                     
 35842                           ;../fatfs/ff.c: 1660:  FATFS *fs,;../fatfs/ff.c: 1661:  DWORD clst;../fatfs/ff.c: 1663: 
      +                          {;../fatfs/ff.c: 1664:  LBA_t sect;;../fatfs/ff.c: 1665:  UINT n, szb;;../fatfs/ff.c: 16
      +                          66:  BYTE *ibuf;;../fatfs/ff.c: 1669:  if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 35843   01C818  C61A  F608         	movff	dir_clear@fs,sync_window@fs
 35844   01C81C  C61B  F609         	movff	dir_clear@fs+1,sync_window@fs+1
 35845   01C820  EC26  F0DB         	call	_sync_window	;wreg free
 35846   01C824  0900               	iorlw	0
 35847   01C826  B4D8               	btfsc	status,2,c
 35848   01C828  EF18  F0E4         	goto	u28591
 35849   01C82C  EF1A  F0E4         	goto	u28590
 35850   01C830                     u28591:
 35851   01C830  EF1D  F0E4         	goto	l21315
 35852   01C834                     u28590:
 35853   01C834  0E01               	movlw	1
 35854   01C836  EFB3  F0E4         	goto	l1577
 35855   01C83A                     l21315:
 35856                           
 35857                           ;../fatfs/ff.c: 1670:  sect = clst2sect(fs, clst);
 35858   01C83A  C61A  F510         	movff	dir_clear@fs,clst2sect@fs
 35859   01C83E  C61B  F511         	movff	dir_clear@fs+1,clst2sect@fs+1
 35860   01C842  C61C  F512         	movff	dir_clear@clst,clst2sect@clst
 35861   01C846  C61D  F513         	movff	dir_clear@clst+1,clst2sect@clst+1
 35862   01C84A  C61E  F514         	movff	dir_clear@clst+2,clst2sect@clst+2
 35863   01C84E  C61F  F515         	movff	dir_clear@clst+3,clst2sect@clst+3
 35864   01C852  EC7A  F0F0         	call	_clst2sect	;wreg free
 35865   01C856  C510  F622         	movff	?_clst2sect,dir_clear@sect
 35866   01C85A  C511  F623         	movff	?_clst2sect+1,dir_clear@sect+1
 35867   01C85E  C512  F624         	movff	?_clst2sect+2,dir_clear@sect+2
 35868   01C862  C513  F625         	movff	?_clst2sect+3,dir_clear@sect+3
 35869   01C866                     
 35870                           ;../fatfs/ff.c: 1671:  fs->winsect = sect;
 35871   01C866  0106               	movlb	6	; () banked
 35872   01C868  EE20 F030          	lfsr	2,48
 35873   01C86C  511A               	movf	dir_clear@fs& (0+255),w,b
 35874   01C86E  26D9               	addwf	fsr2l,f,c
 35875   01C870  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35876   01C872  22DA               	addwfc	fsr2h,f,c
 35877   01C874  C622  F4DE         	movff	dir_clear@sect,postinc2
 35878   01C878  C623  F4DE         	movff	dir_clear@sect+1,postinc2
 35879   01C87C  C624  F4DE         	movff	dir_clear@sect+2,postinc2
 35880   01C880  C625  F4DE         	movff	dir_clear@sect+3,postinc2
 35881   01C884                     
 35882                           ; BSR set to: 6
 35883                           ;../fatfs/ff.c: 1672:  memset(fs->win, 0, sizeof fs->win);
 35884   01C884  0E34               	movlw	52
 35885   01C886  251A               	addwf	dir_clear@fs& (0+255),w,b
 35886   01C888  6E04               	movwf	memset@dest^(0+1280),c
 35887   01C88A  0E00               	movlw	0
 35888   01C88C  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 35889   01C88E  6E05               	movwf	(memset@dest+1)^(0+1280),c
 35890   01C890  0E00               	movlw	0
 35891   01C892  6E07               	movwf	(memset@c+1)^(0+1280),c
 35892   01C894  0E00               	movlw	0
 35893   01C896  6E06               	movwf	memset@c^(0+1280),c
 35894   01C898  0E02               	movlw	2
 35895   01C89A  6E09               	movwf	(memset@n+1)^(0+1280),c
 35896   01C89C  0E00               	movlw	0
 35897   01C89E  6E08               	movwf	memset@n^(0+1280),c
 35898   01C8A0  EC14  F0FF         	call	_memset	;wreg free
 35899   01C8A4                     
 35900                           ;../fatfs/ff.c: 1683:  {;../fatfs/ff.c: 1684:   ibuf = fs->win; szb = 1;
 35901   01C8A4  0E34               	movlw	52
 35902   01C8A6  0106               	movlb	6	; () banked
 35903   01C8A8  251A               	addwf	dir_clear@fs& (0+255),w,b
 35904   01C8AA  6F20               	movwf	dir_clear@ibuf& (0+255),b
 35905   01C8AC  0E00               	movlw	0
 35906   01C8AE  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 35907   01C8B0  6F21               	movwf	(dir_clear@ibuf+1)& (0+255),b
 35908   01C8B2                     
 35909                           ; BSR set to: 6
 35910   01C8B2  0E00               	movlw	0
 35911   01C8B4  6F27               	movwf	(dir_clear@szb+1)& (0+255),b
 35912   01C8B6  0E01               	movlw	1
 35913   01C8B8  6F26               	movwf	dir_clear@szb& (0+255),b
 35914   01C8BA                     
 35915                           ; BSR set to: 6
 35916                           ;../fatfs/ff.c: 1685:   for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n
      +                          , szb) == RES_OK; n += szb) ;
 35917   01C8BA  0E00               	movlw	0
 35918   01C8BC  6F29               	movwf	(dir_clear@n+1)& (0+255),b
 35919   01C8BE  0E00               	movlw	0
 35920   01C8C0  6F28               	movwf	dir_clear@n& (0+255),b
 35921   01C8C2  EF68  F0E4         	goto	l21329
 35922   01C8C6                     l21327:
 35923   01C8C6  0106               	movlb	6	; () banked
 35924   01C8C8  5126               	movf	dir_clear@szb& (0+255),w,b
 35925   01C8CA  2728               	addwf	dir_clear@n& (0+255),f,b
 35926   01C8CC  5127               	movf	(dir_clear@szb+1)& (0+255),w,b
 35927   01C8CE  2329               	addwfc	(dir_clear@n+1)& (0+255),f,b
 35928   01C8D0                     l21329:
 35929                           
 35930                           ; BSR set to: 6
 35931   01C8D0  EE20 F00A          	lfsr	2,10
 35932   01C8D4  511A               	movf	dir_clear@fs& (0+255),w,b
 35933   01C8D6  26D9               	addwf	fsr2l,f,c
 35934   01C8D8  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35935   01C8DA  22DA               	addwfc	fsr2h,f,c
 35936   01C8DC  50DE               	movf	postinc2,w,c
 35937   01C8DE  5D28               	subwf	dir_clear@n& (0+255),w,b
 35938   01C8E0  50DE               	movf	postinc2,w,c
 35939   01C8E2  5929               	subwfb	(dir_clear@n+1)& (0+255),w,b
 35940   01C8E4  B0D8               	btfsc	status,0,c
 35941   01C8E6  EF77  F0E4         	goto	u28601
 35942   01C8EA  EF79  F0E4         	goto	u28600
 35943   01C8EE                     u28601:
 35944   01C8EE  EF9E  F0E4         	goto	l21333
 35945   01C8F2                     u28600:
 35946   01C8F2                     
 35947                           ; BSR set to: 6
 35948   01C8F2  C620  F600         	movff	dir_clear@ibuf,disk_write@buff
 35949   01C8F6  C621  F601         	movff	dir_clear@ibuf+1,disk_write@buff+1
 35950   01C8FA  5128               	movf	dir_clear@n& (0+255),w,b
 35951   01C8FC  2522               	addwf	dir_clear@sect& (0+255),w,b
 35952   01C8FE  6F02               	movwf	disk_write@sector& (0+255),b
 35953   01C900  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 35954   01C902  2123               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 35955   01C904  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 35956   01C906  0E00               	movlw	0
 35957   01C908  2124               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 35958   01C90A  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 35959   01C90C  0E00               	movlw	0
 35960   01C90E  2125               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 35961   01C910  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 35962   01C912  C626  F606         	movff	dir_clear@szb,disk_write@count
 35963   01C916  C627  F607         	movff	dir_clear@szb+1,disk_write@count+1
 35964   01C91A  EE20 F001          	lfsr	2,1
 35965   01C91E  511A               	movf	dir_clear@fs& (0+255),w,b
 35966   01C920  26D9               	addwf	fsr2l,f,c
 35967   01C922  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35968   01C924  22DA               	addwfc	fsr2h,f,c
 35969   01C926  50DF               	movf	indf2,w,c
 35970   01C928  EC7E  F0F3         	call	_disk_write
 35971   01C92C  0900               	iorlw	0
 35972   01C92E  B4D8               	btfsc	status,2,c
 35973   01C930  EF9C  F0E4         	goto	u28611
 35974   01C934  EF9E  F0E4         	goto	u28610
 35975   01C938                     u28611:
 35976   01C938  EF63  F0E4         	goto	l21327
 35977   01C93C                     u28610:
 35978   01C93C                     l21333:
 35979                           
 35980                           ;../fatfs/ff.c: 1686:  };../fatfs/ff.c: 1687:  return (n == fs->csize) ? FR_OK : FR_DISK
      +                          _ERR;
 35981   01C93C  0106               	movlb	6	; () banked
 35982   01C93E  EE20 F00A          	lfsr	2,10
 35983   01C942  511A               	movf	dir_clear@fs& (0+255),w,b
 35984   01C944  26D9               	addwf	fsr2l,f,c
 35985   01C946  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35986   01C948  22DA               	addwfc	fsr2h,f,c
 35987   01C94A  5128               	movf	dir_clear@n& (0+255),w,b
 35988   01C94C  18DE               	xorwf	postinc2,w,c
 35989   01C94E  E107               	bnz	u28621
 35990   01C950  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 35991   01C952  18DE               	xorwf	postinc2,w,c
 35992   01C954  A4D8               	btfss	status,2,c
 35993   01C956  EFAF  F0E4         	goto	u28621
 35994   01C95A  EFB2  F0E4         	goto	u28620
 35995   01C95E                     u28621:
 35996   01C95E  0E01               	movlw	1
 35997   01C960  EFB3  F0E4         	goto	u28630
 35998   01C964                     u28620:
 35999   01C964  0E00               	movlw	0
 36000   01C966                     u28630:
 36001   01C966                     l1577:
 36002   01C966  0012               	return		;funcret
 36003   01C968                     __end_of_dir_clear:
 36004                           	callstack 0
 36005                           
 36006 ;; *************** function _f_close *****************
 36007 ;; Defined at:
 36008 ;;		line 4218 in file "../fatfs/ff.c"
 36009 ;; Parameters:    Size  Location     Type
 36010 ;;  fp              2   47[BANK6 ] PTR struct .
 36011 ;;		 -> in_fl(546), rom_fl(546), 
 36012 ;; Auto vars:     Size  Location     Type
 36013 ;;  fs              2   49[BANK6 ] PTR struct .
 36014 ;;		 -> fs(564), NULL(0), 
 36015 ;;  res             1   51[BANK6 ] enum E597
 36016 ;; Return value:  Size  Location     Type
 36017 ;;                  1    wreg      enum E17409
 36018 ;; Registers used:
 36019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36020 ;; Tracked objects:
 36021 ;;		On entry : 0/0
 36022 ;;		On exit  : 0/0
 36023 ;;		Unchanged: 0/0
 36024 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36025 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36026 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36028 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36029 ;;Total ram usage:        5 bytes
 36030 ;; Hardware stack levels used: 1
 36031 ;; Hardware stack levels required when called: 15
 36032 ;; This function calls:
 36033 ;;		_f_sync
 36034 ;;		_validate
 36035 ;; This function is called by:
 36036 ;;		_load_program
 36037 ;;		_load_config
 36038 ;;		_scan_files
 36039 ;;		_scan_files1
 36040 ;;		_see_file
 36041 ;;		_in_file
 36042 ;;		_str_inf
 36043 ;; This function uses a non-reentrant model
 36044 ;;
 36045                           
 36046                           	psect	text92
 36047   01F7B6                     __ptext92:
 36048                           	callstack 0
 36049   01F7B6                     _f_close:
 36050                           	callstack 105
 36051   01F7B6                     
 36052                           ;../fatfs/ff.c: 4219:  FIL* fp;../fatfs/ff.c: 4221: {;../fatfs/ff.c: 4222:  FRESULT res;
      +                          ;../fatfs/ff.c: 4223:  FATFS *fs;;../fatfs/ff.c: 4226:  res = f_sync(fp);
 36053   01F7B6  C62F  F624         	movff	f_close@fp,f_sync@fp
 36054   01F7BA  C630  F625         	movff	f_close@fp+1,f_sync@fp+1
 36055   01F7BE  EC6D  F0CE         	call	_f_sync	;wreg free
 36056   01F7C2  0106               	movlb	6	; () banked
 36057   01F7C4  6F33               	movwf	f_close@res& (0+255),b
 36058   01F7C6                     
 36059                           ; BSR set to: 6
 36060                           ;../fatfs/ff.c: 4227:  if (res == FR_OK)
 36061   01F7C6  5133               	movf	f_close@res& (0+255),w,b
 36062   01F7C8  A4D8               	btfss	status,2,c
 36063   01F7CA  EFE9  F0FB         	goto	u31861
 36064   01F7CE  EFEB  F0FB         	goto	u31860
 36065   01F7D2                     u31861:
 36066   01F7D2  EF06  F0FC         	goto	l1986
 36067   01F7D6                     u31860:
 36068   01F7D6                     
 36069                           ; BSR set to: 6
 36070                           ;../fatfs/ff.c: 4229:  {;../fatfs/ff.c: 4230:   res = validate(&fp->obj, &fs);
 36071   01F7D6  C62F  F5BE         	movff	f_close@fp,validate@obj
 36072   01F7DA  C630  F5BF         	movff	f_close@fp+1,validate@obj+1
 36073   01F7DE  0E31               	movlw	low f_close@fs
 36074   01F7E0  0105               	movlb	5	; () banked
 36075   01F7E2  6FC0               	movwf	validate@rfs& (0+255),b
 36076   01F7E4  0E06               	movlw	high f_close@fs
 36077   01F7E6  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 36078   01F7E8  ECA3  F0E9         	call	_validate	;wreg free
 36079   01F7EC  0106               	movlb	6	; () banked
 36080   01F7EE  6F33               	movwf	f_close@res& (0+255),b
 36081   01F7F0                     
 36082                           ; BSR set to: 6
 36083                           ;../fatfs/ff.c: 4231:   if (res == FR_OK) {
 36084   01F7F0  5133               	movf	f_close@res& (0+255),w,b
 36085   01F7F2  A4D8               	btfss	status,2,c
 36086   01F7F4  EFFE  F0FB         	goto	u31871
 36087   01F7F8  EF00  F0FC         	goto	u31870
 36088   01F7FC                     u31871:
 36089   01F7FC  EF06  F0FC         	goto	l1986
 36090   01F800                     u31870:
 36091   01F800                     
 36092                           ; BSR set to: 6
 36093                           ;../fatfs/ff.c: 4236:    fp->obj.fs = 0;
 36094   01F800  C62F  F4D9         	movff	f_close@fp,fsr2l
 36095   01F804  C630  F4DA         	movff	f_close@fp+1,fsr2h
 36096   01F808  6ADE               	clrf	postinc2,c
 36097   01F80A  6ADD               	clrf	postdec2,c
 36098   01F80C                     l1986:
 36099                           
 36100                           ; BSR set to: 6
 36101   01F80C  0012               	return		;funcret
 36102   01F80E                     __end_of_f_close:
 36103                           	callstack 0
 36104                           
 36105 ;; *************** function _f_sync *****************
 36106 ;; Defined at:
 36107 ;;		line 4137 in file "../fatfs/ff.c"
 36108 ;; Parameters:    Size  Location     Type
 36109 ;;  fp              2   36[BANK6 ] PTR struct .
 36110 ;;		 -> in_fl(546), rom_fl(546), 
 36111 ;; Auto vars:     Size  Location     Type
 36112 ;;  tm              4   38[BANK6 ] unsigned long 
 36113 ;;  fs              2   45[BANK6 ] PTR struct .
 36114 ;;		 -> fs(564), NULL(0), 
 36115 ;;  dir             2   43[BANK6 ] PTR unsigned char 
 36116 ;;		 -> fs(564), NULL(0), 
 36117 ;;  res             1   42[BANK6 ] enum E597
 36118 ;; Return value:  Size  Location     Type
 36119 ;;                  1    wreg      enum E16851
 36120 ;; Registers used:
 36121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36122 ;; Tracked objects:
 36123 ;;		On entry : 0/0
 36124 ;;		On exit  : 0/0
 36125 ;;		Unchanged: 0/0
 36126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36127 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36128 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36130 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36131 ;;Total ram usage:       11 bytes
 36132 ;; Hardware stack levels used: 1
 36133 ;; Hardware stack levels required when called: 14
 36134 ;; This function calls:
 36135 ;;		_disk_write
 36136 ;;		_get_fattime
 36137 ;;		_move_window
 36138 ;;		_st_clust
 36139 ;;		_st_dword
 36140 ;;		_st_word
 36141 ;;		_sync_fs
 36142 ;;		_validate
 36143 ;; This function is called by:
 36144 ;;		_write_sector
 36145 ;;		_f_close
 36146 ;; This function uses a non-reentrant model
 36147 ;;
 36148                           
 36149                           	psect	text93
 36150   019CDA                     __ptext93:
 36151                           	callstack 0
 36152   019CDA                     _f_sync:
 36153                           	callstack 107
 36154   019CDA                     
 36155                           ;../fatfs/ff.c: 4138:  FIL* fp;../fatfs/ff.c: 4140: {;../fatfs/ff.c: 4141:  FRESULT res;
      +                          ;../fatfs/ff.c: 4142:  FATFS *fs;;../fatfs/ff.c: 4143:  DWORD tm;;../fatfs/ff.c: 4144:  
      +                          BYTE *dir;;../fatfs/ff.c: 4147:  res = validate(&fp->obj, &fs);
 36156   019CDA  C624  F5BE         	movff	f_sync@fp,validate@obj
 36157   019CDE  C625  F5BF         	movff	f_sync@fp+1,validate@obj+1
 36158   019CE2  0E2D               	movlw	low f_sync@fs
 36159   019CE4  0105               	movlb	5	; () banked
 36160   019CE6  6FC0               	movwf	validate@rfs& (0+255),b
 36161   019CE8  0E06               	movlw	high f_sync@fs
 36162   019CEA  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 36163   019CEC  ECA3  F0E9         	call	_validate	;wreg free
 36164   019CF0  0106               	movlb	6	; () banked
 36165   019CF2  6F2A               	movwf	f_sync@res& (0+255),b
 36166   019CF4                     
 36167                           ; BSR set to: 6
 36168                           ;../fatfs/ff.c: 4148:  if (res == FR_OK) {
 36169   019CF4  512A               	movf	f_sync@res& (0+255),w,b
 36170   019CF6  A4D8               	btfss	status,2,c
 36171   019CF8  EF80  F0CE         	goto	u30251
 36172   019CFC  EF82  F0CE         	goto	u30250
 36173   019D00                     u30251:
 36174   019D00  EF76  F0CF         	goto	l22175
 36175   019D04                     u30250:
 36176   019D04                     
 36177                           ; BSR set to: 6
 36178                           ;../fatfs/ff.c: 4149:   if (fp->flag & 0x40) {
 36179   019D04  EE20 F00E          	lfsr	2,14
 36180   019D08  5124               	movf	f_sync@fp& (0+255),w,b
 36181   019D0A  26D9               	addwf	fsr2l,f,c
 36182   019D0C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36183   019D0E  22DA               	addwfc	fsr2h,f,c
 36184   019D10  ACDF               	btfss	indf2,6,c
 36185   019D12  EF8D  F0CE         	goto	u30261
 36186   019D16  EF8F  F0CE         	goto	u30260
 36187   019D1A                     u30261:
 36188   019D1A  EF76  F0CF         	goto	l22175
 36189   019D1E                     u30260:
 36190   019D1E                     
 36191                           ; BSR set to: 6
 36192                           ;../fatfs/ff.c: 4151:    if (fp->flag & 0x80) {
 36193   019D1E  EE20 F00E          	lfsr	2,14
 36194   019D22  5124               	movf	f_sync@fp& (0+255),w,b
 36195   019D24  26D9               	addwf	fsr2l,f,c
 36196   019D26  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36197   019D28  22DA               	addwfc	fsr2h,f,c
 36198   019D2A  AEDF               	btfss	indf2,7,c
 36199   019D2C  EF9A  F0CE         	goto	u30271
 36200   019D30  EF9C  F0CE         	goto	u30270
 36201   019D34                     u30271:
 36202   019D34  EFD1  F0CE         	goto	l22155
 36203   019D38                     u30270:
 36204   019D38                     
 36205                           ; BSR set to: 6
 36206                           ;../fatfs/ff.c: 4152:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) retu
      +                          rn FR_DISK_ERR;
 36207   019D38  0E22               	movlw	34
 36208   019D3A  2524               	addwf	f_sync@fp& (0+255),w,b
 36209   019D3C  6F00               	movwf	disk_write@buff& (0+255),b
 36210   019D3E  0E00               	movlw	0
 36211   019D40  2125               	addwfc	(f_sync@fp+1)& (0+255),w,b
 36212   019D42  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 36213   019D44  EE20 F018          	lfsr	2,24
 36214   019D48  5124               	movf	f_sync@fp& (0+255),w,b
 36215   019D4A  26D9               	addwf	fsr2l,f,c
 36216   019D4C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36217   019D4E  22DA               	addwfc	fsr2h,f,c
 36218   019D50  C4DE F602          	movff	postinc2,disk_write@sector
 36219   019D54  C4DE F603          	movff	postinc2,disk_write@sector+1
 36220   019D58  C4DE F604          	movff	postinc2,disk_write@sector+2
 36221   019D5C  C4DE F605          	movff	postinc2,disk_write@sector+3
 36222   019D60  0E00               	movlw	0
 36223   019D62  6F07               	movwf	(disk_write@count+1)& (0+255),b
 36224   019D64  0E01               	movlw	1
 36225   019D66  6F06               	movwf	disk_write@count& (0+255),b
 36226   019D68  EE20 F001          	lfsr	2,1
 36227   019D6C  512D               	movf	f_sync@fs& (0+255),w,b
 36228   019D6E  26D9               	addwf	fsr2l,f,c
 36229   019D70  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 36230   019D72  22DA               	addwfc	fsr2h,f,c
 36231   019D74  50DF               	movf	indf2,w,c
 36232   019D76  EC7E  F0F3         	call	_disk_write
 36233   019D7A  0900               	iorlw	0
 36234   019D7C  B4D8               	btfsc	status,2,c
 36235   019D7E  EFC3  F0CE         	goto	u30281
 36236   019D82  EFC5  F0CE         	goto	u30280
 36237   019D86                     u30281:
 36238   019D86  EFC8  F0CE         	goto	l22153
 36239   019D8A                     u30280:
 36240   019D8A  0E01               	movlw	1
 36241   019D8C  EF77  F0CF         	goto	l1980
 36242   019D90                     l22153:
 36243                           
 36244                           ;../fatfs/ff.c: 4153:     fp->flag &= (BYTE)~0x80;
 36245   019D90  0106               	movlb	6	; () banked
 36246   019D92  EE20 F00E          	lfsr	2,14
 36247   019D96  5124               	movf	f_sync@fp& (0+255),w,b
 36248   019D98  26D9               	addwf	fsr2l,f,c
 36249   019D9A  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36250   019D9C  22DA               	addwfc	fsr2h,f,c
 36251   019D9E  0E7F               	movlw	127
 36252   019DA0  16DF               	andwf	indf2,f,c
 36253   019DA2                     l22155:
 36254                           
 36255                           ; BSR set to: 6
 36256                           ;../fatfs/ff.c: 4157:    tm = get_fattime();
 36257   019DA2  EC0E  F001         	call	_get_fattime	;wreg free
 36258   019DA6  C504  F626         	movff	?_get_fattime,f_sync@tm
 36259   019DAA  C505  F627         	movff	?_get_fattime+1,f_sync@tm+1
 36260   019DAE  C506  F628         	movff	?_get_fattime+2,f_sync@tm+2
 36261   019DB2  C507  F629         	movff	?_get_fattime+3,f_sync@tm+3
 36262   019DB6                     
 36263                           ;../fatfs/ff.c: 4189:    {;../fatfs/ff.c: 4190:     res = move_window(fs, fp->dir_sect);
 36264   019DB6  C62D  F61A         	movff	f_sync@fs,move_window@fs
 36265   019DBA  C62E  F61B         	movff	f_sync@fs+1,move_window@fs+1
 36266   019DBE  0106               	movlb	6	; () banked
 36267   019DC0  EE20 F01C          	lfsr	2,28
 36268   019DC4  5124               	movf	f_sync@fp& (0+255),w,b
 36269   019DC6  26D9               	addwf	fsr2l,f,c
 36270   019DC8  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36271   019DCA  22DA               	addwfc	fsr2h,f,c
 36272   019DCC  C4DE F61C          	movff	postinc2,move_window@sect
 36273   019DD0  C4DE F61D          	movff	postinc2,move_window@sect+1
 36274   019DD4  C4DE F61E          	movff	postinc2,move_window@sect+2
 36275   019DD8  C4DE F61F          	movff	postinc2,move_window@sect+3
 36276   019DDC  ECAB  F0EF         	call	_move_window	;wreg free
 36277   019DE0  0106               	movlb	6	; () banked
 36278   019DE2  6F2A               	movwf	f_sync@res& (0+255),b
 36279   019DE4                     
 36280                           ; BSR set to: 6
 36281                           ;../fatfs/ff.c: 4191:     if (res == FR_OK) {
 36282   019DE4  512A               	movf	f_sync@res& (0+255),w,b
 36283   019DE6  A4D8               	btfss	status,2,c
 36284   019DE8  EFF8  F0CE         	goto	u30291
 36285   019DEC  EFFA  F0CE         	goto	u30290
 36286   019DF0                     u30291:
 36287   019DF0  EF76  F0CF         	goto	l22175
 36288   019DF4                     u30290:
 36289   019DF4                     
 36290                           ; BSR set to: 6
 36291                           ;../fatfs/ff.c: 4192:      dir = fp->dir_ptr;
 36292   019DF4  EE20 F020          	lfsr	2,32
 36293   019DF8  5124               	movf	f_sync@fp& (0+255),w,b
 36294   019DFA  26D9               	addwf	fsr2l,f,c
 36295   019DFC  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36296   019DFE  22DA               	addwfc	fsr2h,f,c
 36297   019E00  C4DE F62B          	movff	postinc2,f_sync@dir
 36298   019E04  C4DD F62C          	movff	postdec2,f_sync@dir+1
 36299                           
 36300                           ;../fatfs/ff.c: 4193:      dir[11] |= 0x20;
 36301   019E08  EE20 F00B          	lfsr	2,11
 36302   019E0C  512B               	movf	f_sync@dir& (0+255),w,b
 36303   019E0E  26D9               	addwf	fsr2l,f,c
 36304   019E10  512C               	movf	(f_sync@dir+1)& (0+255),w,b
 36305   019E12  22DA               	addwfc	fsr2h,f,c
 36306   019E14  0E00               	movlw	0
 36307   019E16  8ADB               	bsf	plusw2,5,c
 36308   019E18                     
 36309                           ; BSR set to: 6
 36310                           ;../fatfs/ff.c: 4194:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 36311   019E18  C624  F4D9         	movff	f_sync@fp,fsr2l
 36312   019E1C  C625  F4DA         	movff	f_sync@fp+1,fsr2h
 36313   019E20  C4DE F508          	movff	postinc2,st_clust@fs
 36314   019E24  C4DD F509          	movff	postdec2,st_clust@fs+1
 36315   019E28  C62B  F50A         	movff	f_sync@dir,st_clust@dir
 36316   019E2C  C62C  F50B         	movff	f_sync@dir+1,st_clust@dir+1
 36317   019E30  EE20 F006          	lfsr	2,6
 36318   019E34  5124               	movf	f_sync@fp& (0+255),w,b
 36319   019E36  26D9               	addwf	fsr2l,f,c
 36320   019E38  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36321   019E3A  22DA               	addwfc	fsr2h,f,c
 36322   019E3C  C4DE F50C          	movff	postinc2,st_clust@cl
 36323   019E40  C4DE F50D          	movff	postinc2,st_clust@cl+1
 36324   019E44  C4DE F50E          	movff	postinc2,st_clust@cl+2
 36325   019E48  C4DE F50F          	movff	postinc2,st_clust@cl+3
 36326   019E4C  EC28  F0FD         	call	_st_clust	;wreg free
 36327   019E50                     
 36328                           ;../fatfs/ff.c: 4195:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 36329   019E50  0E1C               	movlw	28
 36330   019E52  0106               	movlb	6	; () banked
 36331   019E54  252B               	addwf	f_sync@dir& (0+255),w,b
 36332   019E56  6E04               	movwf	st_dword@ptr^(0+1280),c
 36333   019E58  0E00               	movlw	0
 36334   019E5A  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36335   019E5C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36336   019E5E  EE20 F00A          	lfsr	2,10
 36337   019E62  5124               	movf	f_sync@fp& (0+255),w,b
 36338   019E64  26D9               	addwf	fsr2l,f,c
 36339   019E66  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36340   019E68  22DA               	addwfc	fsr2h,f,c
 36341   019E6A  C4DE F506          	movff	postinc2,st_dword@val
 36342   019E6E  C4DE F507          	movff	postinc2,st_dword@val+1
 36343   019E72  C4DE F508          	movff	postinc2,st_dword@val+2
 36344   019E76  C4DE F509          	movff	postinc2,st_dword@val+3
 36345   019E7A  ECDD  F0FA         	call	_st_dword	;wreg free
 36346   019E7E                     
 36347                           ;../fatfs/ff.c: 4196:      st_dword(dir + 22, tm);
 36348   019E7E  0E16               	movlw	22
 36349   019E80  0106               	movlb	6	; () banked
 36350   019E82  252B               	addwf	f_sync@dir& (0+255),w,b
 36351   019E84  6E04               	movwf	st_dword@ptr^(0+1280),c
 36352   019E86  0E00               	movlw	0
 36353   019E88  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36354   019E8A  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36355   019E8C  C626  F506         	movff	f_sync@tm,st_dword@val
 36356   019E90  C627  F507         	movff	f_sync@tm+1,st_dword@val+1
 36357   019E94  C628  F508         	movff	f_sync@tm+2,st_dword@val+2
 36358   019E98  C629  F509         	movff	f_sync@tm+3,st_dword@val+3
 36359   019E9C  ECDD  F0FA         	call	_st_dword	;wreg free
 36360   019EA0                     
 36361                           ;../fatfs/ff.c: 4197:      st_word(dir + 18, 0);
 36362   019EA0  0E12               	movlw	18
 36363   019EA2  0106               	movlb	6	; () banked
 36364   019EA4  252B               	addwf	f_sync@dir& (0+255),w,b
 36365   019EA6  6E04               	movwf	st_word@ptr^(0+1280),c
 36366   019EA8  0E00               	movlw	0
 36367   019EAA  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36368   019EAC  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36369   019EAE  0E00               	movlw	0
 36370   019EB0  6E07               	movwf	(st_word@val+1)^(0+1280),c
 36371   019EB2  0E00               	movlw	0
 36372   019EB4  6E06               	movwf	st_word@val^(0+1280),c
 36373   019EB6  ECC6  F0FF         	call	_st_word	;wreg free
 36374                           
 36375                           ;../fatfs/ff.c: 4198:      fs->wflag = 1;
 36376   019EBA  0106               	movlb	6	; () banked
 36377   019EBC  EE20 F004          	lfsr	2,4
 36378   019EC0  512D               	movf	f_sync@fs& (0+255),w,b
 36379   019EC2  26D9               	addwf	fsr2l,f,c
 36380   019EC4  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 36381   019EC6  22DA               	addwfc	fsr2h,f,c
 36382   019EC8  0E01               	movlw	1
 36383   019ECA  6EDF               	movwf	indf2,c
 36384   019ECC                     
 36385                           ; BSR set to: 6
 36386                           ;../fatfs/ff.c: 4199:      res = sync_fs(fs);
 36387   019ECC  C62D  F61A         	movff	f_sync@fs,sync_fs@fs
 36388   019ED0  C62E  F61B         	movff	f_sync@fs+1,sync_fs@fs+1
 36389   019ED4  EC78  F0CF         	call	_sync_fs	;wreg free
 36390   019ED8  0106               	movlb	6	; () banked
 36391   019EDA  6F2A               	movwf	f_sync@res& (0+255),b
 36392   019EDC                     
 36393                           ; BSR set to: 6
 36394                           ;../fatfs/ff.c: 4200:      fp->flag &= (BYTE)~0x40;
 36395   019EDC  EE20 F00E          	lfsr	2,14
 36396   019EE0  5124               	movf	f_sync@fp& (0+255),w,b
 36397   019EE2  26D9               	addwf	fsr2l,f,c
 36398   019EE4  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36399   019EE6  22DA               	addwfc	fsr2h,f,c
 36400   019EE8  0EBF               	movlw	191
 36401   019EEA  16DF               	andwf	indf2,f,c
 36402   019EEC                     l22175:
 36403                           
 36404                           ; BSR set to: 6
 36405                           ;../fatfs/ff.c: 4206:  return res;
 36406   019EEC  512A               	movf	f_sync@res& (0+255),w,b
 36407   019EEE                     l1980:
 36408   019EEE  0012               	return		;funcret
 36409   019EF0                     __end_of_f_sync:
 36410                           	callstack 0
 36411                           
 36412 ;; *************** function _sync_fs *****************
 36413 ;; Defined at:
 36414 ;;		line 1109 in file "../fatfs/ff.c"
 36415 ;; Parameters:    Size  Location     Type
 36416 ;;  fs              2   26[BANK6 ] PTR struct .
 36417 ;;		 -> fs(564), NULL(0), 
 36418 ;; Auto vars:     Size  Location     Type
 36419 ;;  res             1  157[BANK5 ] enum E597
 36420 ;; Return value:  Size  Location     Type
 36421 ;;                  1    wreg      enum E597
 36422 ;; Registers used:
 36423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36424 ;; Tracked objects:
 36425 ;;		On entry : 0/0
 36426 ;;		On exit  : 0/0
 36427 ;;		Unchanged: 0/0
 36428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36429 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36431 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36432 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36433 ;;Total ram usage:       11 bytes
 36434 ;; Hardware stack levels used: 1
 36435 ;; Hardware stack levels required when called: 13
 36436 ;; This function calls:
 36437 ;;		_disk_ioctl
 36438 ;;		_disk_write
 36439 ;;		_memset
 36440 ;;		_st_dword
 36441 ;;		_st_word
 36442 ;;		_sync_window
 36443 ;; This function is called by:
 36444 ;;		_f_sync
 36445 ;;		_f_unlink
 36446 ;;		_f_mkdir
 36447 ;;		_f_rename
 36448 ;; This function uses a non-reentrant model
 36449 ;;
 36450                           
 36451                           	psect	text94
 36452   019EF0                     __ptext94:
 36453                           	callstack 0
 36454   019EF0                     _sync_fs:
 36455                           	callstack 107
 36456   019EF0                     
 36457                           ;../fatfs/ff.c: 1110:  FATFS* fs;../fatfs/ff.c: 1112: {;../fatfs/ff.c: 1113:  FRESULT re
      +                          s;;../fatfs/ff.c: 1116:  res = sync_window(fs);
 36458   019EF0  C61A  F608         	movff	sync_fs@fs,sync_window@fs
 36459   019EF4  C61B  F609         	movff	sync_fs@fs+1,sync_window@fs+1
 36460   019EF8  EC26  F0DB         	call	_sync_window	;wreg free
 36461   019EFC  0105               	movlb	5	; () banked
 36462   019EFE  6FFD               	movwf	sync_fs@res& (0+255),b
 36463   019F00                     
 36464                           ; BSR set to: 5
 36465                           ;../fatfs/ff.c: 1117:  if (res == FR_OK) {
 36466   019F00  51FD               	movf	sync_fs@res& (0+255),w,b
 36467   019F02  A4D8               	btfss	status,2,c
 36468   019F04  EF86  F0CF         	goto	u29331
 36469   019F08  EF88  F0CF         	goto	u29330
 36470   019F0C                     u29331:
 36471   019F0C  EF7F  F0D0         	goto	l1464
 36472   019F10                     u29330:
 36473   019F10                     
 36474                           ; BSR set to: 5
 36475                           ;../fatfs/ff.c: 1118:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 36476   019F10  C61A  F4D9         	movff	sync_fs@fs,fsr2l
 36477   019F14  C61B  F4DA         	movff	sync_fs@fs+1,fsr2h
 36478   019F18  0E03               	movlw	3
 36479   019F1A  18DE               	xorwf	postinc2,w,c
 36480   019F1C  A4D8               	btfss	status,2,c
 36481   019F1E  EF93  F0CF         	goto	u29341
 36482   019F22  EF95  F0CF         	goto	u29340
 36483   019F26                     u29341:
 36484   019F26  EF63  F0D0         	goto	l21701
 36485   019F2A                     u29340:
 36486   019F2A                     
 36487                           ; BSR set to: 5
 36488   019F2A  0106               	movlb	6	; () banked
 36489   019F2C  EE20 F005          	lfsr	2,5
 36490   019F30  511A               	movf	sync_fs@fs& (0+255),w,b
 36491   019F32  26D9               	addwf	fsr2l,f,c
 36492   019F34  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36493   019F36  22DA               	addwfc	fsr2h,f,c
 36494   019F38  04DE               	decf	postinc2,w,c
 36495   019F3A  A4D8               	btfss	status,2,c
 36496   019F3C  EFA2  F0CF         	goto	u29351
 36497   019F40  EFA4  F0CF         	goto	u29350
 36498   019F44                     u29351:
 36499   019F44  EF63  F0D0         	goto	l21701
 36500   019F48                     u29350:
 36501   019F48                     
 36502                           ; BSR set to: 6
 36503                           ;../fatfs/ff.c: 1120:    memset(fs->win, 0, sizeof fs->win);
 36504   019F48  0E34               	movlw	52
 36505   019F4A  251A               	addwf	sync_fs@fs& (0+255),w,b
 36506   019F4C  6E04               	movwf	memset@dest^(0+1280),c
 36507   019F4E  0E00               	movlw	0
 36508   019F50  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36509   019F52  6E05               	movwf	(memset@dest+1)^(0+1280),c
 36510   019F54  0E00               	movlw	0
 36511   019F56  6E07               	movwf	(memset@c+1)^(0+1280),c
 36512   019F58  0E00               	movlw	0
 36513   019F5A  6E06               	movwf	memset@c^(0+1280),c
 36514   019F5C  0E02               	movlw	2
 36515   019F5E  6E09               	movwf	(memset@n+1)^(0+1280),c
 36516   019F60  0E00               	movlw	0
 36517   019F62  6E08               	movwf	memset@n^(0+1280),c
 36518   019F64  EC14  F0FF         	call	_memset	;wreg free
 36519                           
 36520                           ;../fatfs/ff.c: 1121:    st_word(fs->win + 510, 0xAA55);
 36521   019F68  0E32               	movlw	50
 36522   019F6A  0106               	movlb	6	; () banked
 36523   019F6C  251A               	addwf	sync_fs@fs& (0+255),w,b
 36524   019F6E  6E04               	movwf	st_word@ptr^(0+1280),c
 36525   019F70  0E02               	movlw	2
 36526   019F72  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36527   019F74  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36528   019F76  0EAA               	movlw	170
 36529   019F78  6E07               	movwf	(st_word@val+1)^(0+1280),c
 36530   019F7A  0E55               	movlw	85
 36531   019F7C  6E06               	movwf	st_word@val^(0+1280),c
 36532   019F7E  ECC6  F0FF         	call	_st_word	;wreg free
 36533                           
 36534                           ;../fatfs/ff.c: 1122:    st_dword(fs->win + 0, 0x41615252);
 36535   019F82  0E34               	movlw	52
 36536   019F84  0106               	movlb	6	; () banked
 36537   019F86  251A               	addwf	sync_fs@fs& (0+255),w,b
 36538   019F88  6E04               	movwf	st_dword@ptr^(0+1280),c
 36539   019F8A  0E00               	movlw	0
 36540   019F8C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36541   019F8E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36542   019F90  0E52               	movlw	82
 36543   019F92  6E06               	movwf	st_dword@val^(0+1280),c
 36544   019F94  0E52               	movlw	82
 36545   019F96  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 36546   019F98  0E61               	movlw	97
 36547   019F9A  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 36548   019F9C  0E41               	movlw	65
 36549   019F9E  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 36550   019FA0  ECDD  F0FA         	call	_st_dword	;wreg free
 36551                           
 36552                           ;../fatfs/ff.c: 1123:    st_dword(fs->win + 484, 0x61417272);
 36553   019FA4  0E18               	movlw	24
 36554   019FA6  0106               	movlb	6	; () banked
 36555   019FA8  251A               	addwf	sync_fs@fs& (0+255),w,b
 36556   019FAA  6E04               	movwf	st_dword@ptr^(0+1280),c
 36557   019FAC  0E02               	movlw	2
 36558   019FAE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36559   019FB0  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36560   019FB2  0E72               	movlw	114
 36561   019FB4  6E06               	movwf	st_dword@val^(0+1280),c
 36562   019FB6  0E72               	movlw	114
 36563   019FB8  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 36564   019FBA  0E41               	movlw	65
 36565   019FBC  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 36566   019FBE  0E61               	movlw	97
 36567   019FC0  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 36568   019FC2  ECDD  F0FA         	call	_st_dword	;wreg free
 36569                           
 36570                           ;../fatfs/ff.c: 1124:    st_dword(fs->win + 488, fs->free_clst);
 36571   019FC6  0E1C               	movlw	28
 36572   019FC8  0106               	movlb	6	; () banked
 36573   019FCA  251A               	addwf	sync_fs@fs& (0+255),w,b
 36574   019FCC  6E04               	movwf	st_dword@ptr^(0+1280),c
 36575   019FCE  0E02               	movlw	2
 36576   019FD0  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36577   019FD2  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36578   019FD4  EE20 F010          	lfsr	2,16
 36579   019FD8  511A               	movf	sync_fs@fs& (0+255),w,b
 36580   019FDA  26D9               	addwf	fsr2l,f,c
 36581   019FDC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36582   019FDE  22DA               	addwfc	fsr2h,f,c
 36583   019FE0  C4DE F506          	movff	postinc2,st_dword@val
 36584   019FE4  C4DE F507          	movff	postinc2,st_dword@val+1
 36585   019FE8  C4DE F508          	movff	postinc2,st_dword@val+2
 36586   019FEC  C4DE F509          	movff	postinc2,st_dword@val+3
 36587   019FF0  ECDD  F0FA         	call	_st_dword	;wreg free
 36588                           
 36589                           ;../fatfs/ff.c: 1125:    st_dword(fs->win + 492, fs->last_clst);
 36590   019FF4  0E20               	movlw	32
 36591   019FF6  0106               	movlb	6	; () banked
 36592   019FF8  251A               	addwf	sync_fs@fs& (0+255),w,b
 36593   019FFA  6E04               	movwf	st_dword@ptr^(0+1280),c
 36594   019FFC  0E02               	movlw	2
 36595   019FFE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36596   01A000  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36597   01A002  EE20 F00C          	lfsr	2,12
 36598   01A006  511A               	movf	sync_fs@fs& (0+255),w,b
 36599   01A008  26D9               	addwf	fsr2l,f,c
 36600   01A00A  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36601   01A00C  22DA               	addwfc	fsr2h,f,c
 36602   01A00E  C4DE F506          	movff	postinc2,st_dword@val
 36603   01A012  C4DE F507          	movff	postinc2,st_dword@val+1
 36604   01A016  C4DE F508          	movff	postinc2,st_dword@val+2
 36605   01A01A  C4DE F509          	movff	postinc2,st_dword@val+3
 36606   01A01E  ECDD  F0FA         	call	_st_dword	;wreg free
 36607   01A022                     
 36608                           ;../fatfs/ff.c: 1126:    fs->winsect = fs->volbase + 1;
 36609   01A022  0106               	movlb	6	; () banked
 36610   01A024  EE20 F020          	lfsr	2,32
 36611   01A028  511A               	movf	sync_fs@fs& (0+255),w,b
 36612   01A02A  26D9               	addwf	fsr2l,f,c
 36613   01A02C  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36614   01A02E  22DA               	addwfc	fsr2h,f,c
 36615   01A030  C4DE F61C          	movff	postinc2,??_sync_fs
 36616   01A034  C4DE F61D          	movff	postinc2,??_sync_fs+1
 36617   01A038  C4DE F61E          	movff	postinc2,??_sync_fs+2
 36618   01A03C  C4DE F61F          	movff	postinc2,??_sync_fs+3
 36619   01A040  0E01               	movlw	1
 36620   01A042  251C               	addwf	??_sync_fs& (0+255),w,b
 36621   01A044  6F20               	movwf	(??_sync_fs+4)& (0+255),b
 36622   01A046  0E00               	movlw	0
 36623   01A048  211D               	addwfc	(??_sync_fs+1)& (0+255),w,b
 36624   01A04A  6F21               	movwf	(??_sync_fs+5)& (0+255),b
 36625   01A04C  0E00               	movlw	0
 36626   01A04E  211E               	addwfc	(??_sync_fs+2)& (0+255),w,b
 36627   01A050  6F22               	movwf	(??_sync_fs+6)& (0+255),b
 36628   01A052  0E00               	movlw	0
 36629   01A054  211F               	addwfc	(??_sync_fs+3)& (0+255),w,b
 36630   01A056  6F23               	movwf	(??_sync_fs+7)& (0+255),b
 36631   01A058  EE20 F030          	lfsr	2,48
 36632   01A05C  511A               	movf	sync_fs@fs& (0+255),w,b
 36633   01A05E  26D9               	addwf	fsr2l,f,c
 36634   01A060  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36635   01A062  22DA               	addwfc	fsr2h,f,c
 36636   01A064  C620  F4DE         	movff	??_sync_fs+4,postinc2
 36637   01A068  C621  F4DE         	movff	??_sync_fs+5,postinc2
 36638   01A06C  C622  F4DE         	movff	??_sync_fs+6,postinc2
 36639   01A070  C623  F4DE         	movff	??_sync_fs+7,postinc2
 36640   01A074                     
 36641                           ; BSR set to: 6
 36642                           ;../fatfs/ff.c: 1127:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 36643   01A074  0E34               	movlw	52
 36644   01A076  251A               	addwf	sync_fs@fs& (0+255),w,b
 36645   01A078  6F00               	movwf	disk_write@buff& (0+255),b
 36646   01A07A  0E00               	movlw	0
 36647   01A07C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36648   01A07E  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 36649   01A080  EE20 F030          	lfsr	2,48
 36650   01A084  511A               	movf	sync_fs@fs& (0+255),w,b
 36651   01A086  26D9               	addwf	fsr2l,f,c
 36652   01A088  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36653   01A08A  22DA               	addwfc	fsr2h,f,c
 36654   01A08C  C4DE F602          	movff	postinc2,disk_write@sector
 36655   01A090  C4DE F603          	movff	postinc2,disk_write@sector+1
 36656   01A094  C4DE F604          	movff	postinc2,disk_write@sector+2
 36657   01A098  C4DE F605          	movff	postinc2,disk_write@sector+3
 36658   01A09C  0E00               	movlw	0
 36659   01A09E  6F07               	movwf	(disk_write@count+1)& (0+255),b
 36660   01A0A0  0E01               	movlw	1
 36661   01A0A2  6F06               	movwf	disk_write@count& (0+255),b
 36662   01A0A4  EE20 F001          	lfsr	2,1
 36663   01A0A8  511A               	movf	sync_fs@fs& (0+255),w,b
 36664   01A0AA  26D9               	addwf	fsr2l,f,c
 36665   01A0AC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36666   01A0AE  22DA               	addwfc	fsr2h,f,c
 36667   01A0B0  50DF               	movf	indf2,w,c
 36668   01A0B2  EC7E  F0F3         	call	_disk_write
 36669                           
 36670                           ;../fatfs/ff.c: 1128:    fs->fsi_flag = 0;
 36671   01A0B6  0106               	movlb	6	; () banked
 36672   01A0B8  EE20 F005          	lfsr	2,5
 36673   01A0BC  511A               	movf	sync_fs@fs& (0+255),w,b
 36674   01A0BE  26D9               	addwf	fsr2l,f,c
 36675   01A0C0  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36676   01A0C2  22DA               	addwfc	fsr2h,f,c
 36677   01A0C4  6ADF               	clrf	indf2,c
 36678   01A0C6                     l21701:
 36679                           
 36680                           ;../fatfs/ff.c: 1131:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
 36681   01A0C6  0E00               	movlw	0
 36682   01A0C8  0105               	movlb	5	; () banked
 36683   01A0CA  6FBD               	movwf	disk_ioctl@cmd& (0+255),b
 36684   01A0CC  0E00               	movlw	0
 36685   01A0CE  6FBE               	movwf	disk_ioctl@buff& (0+255),b
 36686   01A0D0  0E00               	movlw	0
 36687   01A0D2  6FBF               	movwf	(disk_ioctl@buff+1)& (0+255),b
 36688   01A0D4  0106               	movlb	6	; () banked
 36689   01A0D6  EE20 F001          	lfsr	2,1
 36690   01A0DA  511A               	movf	sync_fs@fs& (0+255),w,b
 36691   01A0DC  26D9               	addwf	fsr2l,f,c
 36692   01A0DE  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36693   01A0E0  22DA               	addwfc	fsr2h,f,c
 36694   01A0E2  50DF               	movf	indf2,w,c
 36695   01A0E4  EC7A  F0FB         	call	_disk_ioctl
 36696   01A0E8  0900               	iorlw	0
 36697   01A0EA  B4D8               	btfsc	status,2,c
 36698   01A0EC  EF7A  F0D0         	goto	u29361
 36699   01A0F0  EF7C  F0D0         	goto	u29360
 36700   01A0F4                     u29361:
 36701   01A0F4  EF7F  F0D0         	goto	l1464
 36702   01A0F8                     u29360:
 36703   01A0F8  0E01               	movlw	1
 36704   01A0FA  0105               	movlb	5	; () banked
 36705   01A0FC  6FFD               	movwf	sync_fs@res& (0+255),b
 36706   01A0FE                     l1464:
 36707                           
 36708                           ;../fatfs/ff.c: 1134:  return res;
 36709   01A0FE  0105               	movlb	5	; () banked
 36710   01A100  51FD               	movf	sync_fs@res& (0+255),w,b
 36711   01A102                     
 36712                           ; BSR set to: 5
 36713   01A102  0012               	return		;funcret
 36714   01A104                     __end_of_sync_fs:
 36715                           	callstack 0
 36716                           
 36717 ;; *************** function _memset *****************
 36718 ;; Defined at:
 36719 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
 36720 ;; Parameters:    Size  Location     Type
 36721 ;;  dest            2    3[COMRAM] PTR void 
 36722 ;;		 -> dir$fn(12), djn$fn(12), f_printf@pb(70), f_puts@pb(70), 
 36723 ;;		 -> f_putc@pb(70), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 36724 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 36725 ;;		 -> dj$fn(12), f_open@dj(40), in_fl(546), scan_files1@dir(40), 
 36726 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), NULL(0), 
 36727 ;;  c               2    5[COMRAM] int 
 36728 ;;  n               2    7[COMRAM] unsigned int 
 36729 ;; Auto vars:     Size  Location     Type
 36730 ;;  p               2    9[COMRAM] PTR unsigned char 
 36731 ;;		 -> dir$fn(12), djn$fn(12), f_printf@pb(70), f_puts@pb(70), 
 36732 ;;		 -> f_putc@pb(70), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 36733 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 36734 ;;		 -> dj$fn(12), f_open@dj(40), in_fl(546), scan_files1@dir(40), 
 36735 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), NULL(0), 
 36736 ;; Return value:  Size  Location     Type
 36737 ;;                  2    3[COMRAM] PTR void 
 36738 ;; Registers used:
 36739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36740 ;; Tracked objects:
 36741 ;;		On entry : 0/0
 36742 ;;		On exit  : 0/0
 36743 ;;		Unchanged: 0/0
 36744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36748 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36749 ;;Total ram usage:        8 bytes
 36750 ;; Hardware stack levels used: 1
 36751 ;; Hardware stack levels required when called: 1
 36752 ;; This function calls:
 36753 ;;		Nothing
 36754 ;; This function is called by:
 36755 ;;		_sync_fs
 36756 ;;		_dir_clear
 36757 ;;		_dir_register
 36758 ;;		_create_name
 36759 ;;		_f_open
 36760 ;;		_f_mkdir
 36761 ;;		_putc_init
 36762 ;; This function uses a non-reentrant model
 36763 ;;
 36764                           
 36765                           	psect	text95
 36766   01FE28                     __ptext95:
 36767                           	callstack 0
 36768   01FE28                     _memset:
 36769                           	callstack 118
 36770   01FE28  C504  F50A         	movff	memset@dest,memset@p
 36771   01FE2C  C505  F50B         	movff	memset@dest+1,memset@p+1
 36772   01FE30  EF22  F0FF         	goto	l21041
 36773   01FE34                     l21037:
 36774   01FE34  C50A  F4D9         	movff	memset@p,fsr2l
 36775   01FE38  C50B  F4DA         	movff	memset@p+1,fsr2h
 36776   01FE3C  C506  F4DF         	movff	memset@c,indf2
 36777   01FE40  4A0A               	infsnz	memset@p^(0+1280),f,c
 36778   01FE42  2A0B               	incf	(memset@p+1)^(0+1280),f,c
 36779   01FE44                     l21041:
 36780   01FE44  0608               	decf	memset@n^(0+1280),f,c
 36781   01FE46  A0D8               	btfss	status,0,c
 36782   01FE48  0609               	decf	(memset@n+1)^(0+1280),f,c
 36783   01FE4A  2808               	incf	memset@n^(0+1280),w,c
 36784   01FE4C  E106               	bnz	u28021
 36785   01FE4E  2809               	incf	(memset@n+1)^(0+1280),w,c
 36786   01FE50  A4D8               	btfss	status,2,c
 36787   01FE52  EF2D  F0FF         	goto	u28021
 36788   01FE56  EF2F  F0FF         	goto	u28020
 36789   01FE5A                     u28021:
 36790   01FE5A  EF1A  F0FF         	goto	l21037
 36791   01FE5E                     u28020:
 36792   01FE5E  0012               	return		;funcret
 36793   01FE60                     __end_of_memset:
 36794                           	callstack 0
 36795                           
 36796 ;; *************** function _disk_ioctl *****************
 36797 ;; Defined at:
 36798 ;;		line 149 in file "../drivers/diskio.c"
 36799 ;; Parameters:    Size  Location     Type
 36800 ;;  pdrv            1    wreg     unsigned char 
 36801 ;;  cmd             1   93[BANK5 ] unsigned char 
 36802 ;;  buff            2   94[BANK5 ] PTR void 
 36803 ;;		 -> NULL(0), 
 36804 ;; Auto vars:     Size  Location     Type
 36805 ;;  pdrv            1   96[BANK5 ] unsigned char 
 36806 ;;  res             1   97[BANK5 ] enum E17312
 36807 ;; Return value:  Size  Location     Type
 36808 ;;                  1    wreg      enum E737
 36809 ;; Registers used:
 36810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36811 ;; Tracked objects:
 36812 ;;		On entry : 0/0
 36813 ;;		On exit  : 0/0
 36814 ;;		Unchanged: 0/0
 36815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36816 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36820 ;;Total ram usage:        5 bytes
 36821 ;; Hardware stack levels used: 1
 36822 ;; Hardware stack levels required when called: 9
 36823 ;; This function calls:
 36824 ;;		_printf
 36825 ;; This function is called by:
 36826 ;;		_sync_fs
 36827 ;; This function uses a non-reentrant model
 36828 ;;
 36829                           
 36830                           	psect	text96
 36831   01F6F4                     __ptext96:
 36832                           	callstack 0
 36833   01F6F4                     _disk_ioctl:
 36834                           	callstack 110
 36835                           
 36836                           ;incstack = 0
 36837                           ;disk_ioctl@pdrv stored from wreg
 36838   01F6F4  0105               	movlb	5	; () banked
 36839   01F6F6  6FC0               	movwf	disk_ioctl@pdrv& (0+255),b
 36840   01F6F8                     
 36841                           ;../drivers/diskio.c: 149: DRESULT disk_ioctl(BYTE pdrv, BYTE cmd, void* buff);../driver
      +                          s/diskio.c: 150: {;../drivers/diskio.c: 151:     DRESULT res = RES_ERROR;
 36842   01F6F8  0E01               	movlw	1
 36843   01F6FA  0105               	movlb	5	; () banked
 36844   01F6FC  6FC1               	movwf	disk_ioctl@res& (0+255),b
 36845                           
 36846                           ;../drivers/diskio.c: 154:     switch (cmd) {
 36847   01F6FE  EF92  F0FB         	goto	l21391
 36848   01F702                     l2493:
 36849                           
 36850                           ; BSR set to: 5
 36851                           ;../drivers/diskio.c: 156:         res = RES_OK;
 36852   01F702  6BC1               	clrf	disk_ioctl@res& (0+255),b
 36853                           
 36854                           ;../drivers/diskio.c: 157:         break;
 36855   01F704  EFA9  F0FB         	goto	l21395
 36856   01F708                     l2498:
 36857   01F708                     l21387:
 36858                           
 36859                           ; BSR set to: 5
 36860                           ;../drivers/diskio.c: 163:         printf("disk_ioctl: pdrv=%d, cmd=%d: Not handled.\n\r
      +                          ", pdrv, cmd);
 36861   01F708  0E73               	movlw	low STR_190
 36862   01F70A  6FAD               	movwf	printf@fmt& (0+255),b
 36863   01F70C  0EF4               	movlw	high STR_190
 36864   01F70E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 36865   01F710  C5C0  F5AF         	movff	disk_ioctl@pdrv,?_printf+2
 36866   01F714  6BB0               	clrf	(?_printf+3)& (0+255),b
 36867   01F716  C5BD  F5B1         	movff	disk_ioctl@cmd,?_printf+4
 36868   01F71A  6BB2               	clrf	(?_printf+5)& (0+255),b
 36869   01F71C  ECDA  F0FF         	call	_printf	;wreg free
 36870                           
 36871                           ;../drivers/diskio.c: 164:         break;
 36872   01F720  EFA9  F0FB         	goto	l21395
 36873   01F724                     l21391:
 36874                           
 36875                           ; BSR set to: 5
 36876   01F724  51BD               	movf	disk_ioctl@cmd& (0+255),w,b
 36877                           
 36878                           ; Switch size 1, requested type "simple"
 36879                           ; Number of cases is 5, Range of values is 0 to 4
 36880                           ; switch strategies available:
 36881                           ; Name         Instructions Cycles
 36882                           ; simple_byte           16     9 (average)
 36883                           ;	Chosen strategy is simple_byte
 36884   01F726  0A00               	xorlw	0	; case 0
 36885   01F728  B4D8               	btfsc	status,2,c
 36886   01F72A  EF81  F0FB         	goto	l2493
 36887   01F72E  0A01               	xorlw	1	; case 1
 36888   01F730  B4D8               	btfsc	status,2,c
 36889   01F732  EF84  F0FB         	goto	l2498
 36890   01F736  0A03               	xorlw	3	; case 2
 36891   01F738  B4D8               	btfsc	status,2,c
 36892   01F73A  EF84  F0FB         	goto	l21387
 36893   01F73E  0A01               	xorlw	1	; case 3
 36894   01F740  B4D8               	btfsc	status,2,c
 36895   01F742  EF84  F0FB         	goto	l21387
 36896   01F746  0A07               	xorlw	7	; case 4
 36897   01F748  B4D8               	btfsc	status,2,c
 36898   01F74A  EF84  F0FB         	goto	l21387
 36899   01F74E  EF84  F0FB         	goto	l21387
 36900   01F752                     l21395:
 36901                           
 36902                           ;../drivers/diskio.c: 168:     return res;
 36903   01F752  0105               	movlb	5	; () banked
 36904   01F754  51C1               	movf	disk_ioctl@res& (0+255),w,b
 36905   01F756                     
 36906                           ; BSR set to: 5
 36907   01F756  0012               	return		;funcret
 36908   01F758                     __end_of_disk_ioctl:
 36909                           	callstack 0
 36910                           
 36911 ;; *************** function _st_clust *****************
 36912 ;; Defined at:
 36913 ;;		line 1866 in file "../fatfs/ff.c"
 36914 ;; Parameters:    Size  Location     Type
 36915 ;;  fs              2    7[COMRAM] PTR struct .
 36916 ;;		 -> fs(564), NULL(0), 
 36917 ;;  dir             2    9[COMRAM] PTR unsigned char 
 36918 ;;		 -> fs$win(512), fs(564), NULL(0), 
 36919 ;;  cl              4   11[COMRAM] unsigned long 
 36920 ;; Auto vars:     Size  Location     Type
 36921 ;;		None
 36922 ;; Return value:  Size  Location     Type
 36923 ;;                  1    wreg      void 
 36924 ;; Registers used:
 36925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36926 ;; Tracked objects:
 36927 ;;		On entry : 0/0
 36928 ;;		On exit  : 0/0
 36929 ;;		Unchanged: 0/0
 36930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36931 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36934 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36935 ;;Total ram usage:        9 bytes
 36936 ;; Hardware stack levels used: 1
 36937 ;; Hardware stack levels required when called: 2
 36938 ;; This function calls:
 36939 ;;		_st_word
 36940 ;; This function is called by:
 36941 ;;		_f_open
 36942 ;;		_f_sync
 36943 ;;		_f_mkdir
 36944 ;;		_f_rename
 36945 ;; This function uses a non-reentrant model
 36946 ;;
 36947                           
 36948                           	psect	text97
 36949   01FA50                     __ptext97:
 36950                           	callstack 0
 36951   01FA50                     _st_clust:
 36952                           	callstack 118
 36953   01FA50                     
 36954                           ;../fatfs/ff.c: 1867:  FATFS* fs,;../fatfs/ff.c: 1868:  BYTE* dir,;../fatfs/ff.c: 1869: 
      +                           DWORD cl;../fatfs/ff.c: 1871: {;../fatfs/ff.c: 1872:  st_word(dir + 26, (WORD)cl);
 36955   01FA50  0E1A               	movlw	26
 36956   01FA52  240A               	addwf	st_clust@dir^(0+1280),w,c
 36957   01FA54  6E04               	movwf	st_word@ptr^(0+1280),c
 36958   01FA56  0E00               	movlw	0
 36959   01FA58  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 36960   01FA5A  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36961   01FA5C  C50C  F506         	movff	st_clust@cl,st_word@val
 36962   01FA60  C50D  F507         	movff	st_clust@cl+1,st_word@val+1
 36963   01FA64  ECC6  F0FF         	call	_st_word	;wreg free
 36964   01FA68                     
 36965                           ;../fatfs/ff.c: 1873:  if (fs->fs_type == 3) {
 36966   01FA68  C508  F4D9         	movff	st_clust@fs,fsr2l
 36967   01FA6C  C509  F4DA         	movff	st_clust@fs+1,fsr2h
 36968   01FA70  0E03               	movlw	3
 36969   01FA72  18DE               	xorwf	postinc2,w,c
 36970   01FA74  A4D8               	btfss	status,2,c
 36971   01FA76  EF3F  F0FD         	goto	u29451
 36972   01FA7A  EF41  F0FD         	goto	u29450
 36973   01FA7E                     u29451:
 36974   01FA7E  EF4D  F0FD         	goto	l1653
 36975   01FA82                     u29450:
 36976   01FA82                     
 36977                           ;../fatfs/ff.c: 1874:   st_word(dir + 20, (WORD)(cl >> 16));
 36978   01FA82  0E14               	movlw	20
 36979   01FA84  240A               	addwf	st_clust@dir^(0+1280),w,c
 36980   01FA86  6E04               	movwf	st_word@ptr^(0+1280),c
 36981   01FA88  0E00               	movlw	0
 36982   01FA8A  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 36983   01FA8C  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36984   01FA8E  C50E  F506         	movff	st_clust@cl+2,st_word@val
 36985   01FA92  C50F  F507         	movff	st_clust@cl+3,st_word@val+1
 36986   01FA96  ECC6  F0FF         	call	_st_word	;wreg free
 36987   01FA9A                     l1653:
 36988   01FA9A  0012               	return		;funcret
 36989   01FA9C                     __end_of_st_clust:
 36990                           	callstack 0
 36991                           
 36992 ;; *************** function _get_fattime *****************
 36993 ;; Defined at:
 36994 ;;		line 47 in file "../drivers/diskio.c"
 36995 ;; Parameters:    Size  Location     Type
 36996 ;;		None
 36997 ;; Auto vars:     Size  Location     Type
 36998 ;;		None
 36999 ;; Return value:  Size  Location     Type
 37000 ;;                  4    3[COMRAM] unsigned long 
 37001 ;; Registers used:
 37002 ;;		wreg, status,2
 37003 ;; Tracked objects:
 37004 ;;		On entry : 0/0
 37005 ;;		On exit  : 0/0
 37006 ;;		Unchanged: 0/0
 37007 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37012 ;;Total ram usage:        4 bytes
 37013 ;; Hardware stack levels used: 1
 37014 ;; Hardware stack levels required when called: 1
 37015 ;; This function calls:
 37016 ;;		Nothing
 37017 ;; This function is called by:
 37018 ;;		_f_open
 37019 ;;		_f_sync
 37020 ;;		_f_mkdir
 37021 ;; This function uses a non-reentrant model
 37022 ;;
 37023                           
 37024                           	psect	text98
 37025   00021C                     __ptext98:
 37026                           	callstack 0
 37027   00021C                     _get_fattime:
 37028                           	callstack 119
 37029   00021C                     
 37030                           ;../drivers/diskio.c: 50:     return (DWORD)0 << 25 | (DWORD)1 << 21 | (DWORD)1 << 16;
 37031   00021C  0E00               	movlw	0
 37032   00021E  6E04               	movwf	?_get_fattime^(0+1280),c
 37033   000220  0E00               	movlw	0
 37034   000222  6E05               	movwf	(?_get_fattime+1)^(0+1280),c
 37035   000224  0E21               	movlw	33
 37036   000226  6E06               	movwf	(?_get_fattime+2)^(0+1280),c
 37037   000228  0E00               	movlw	0
 37038   00022A  6E07               	movwf	(?_get_fattime+3)^(0+1280),c
 37039   00022C  0012               	return		;funcret
 37040   00022E                     __end_of_get_fattime:
 37041                           	callstack 0
 37042                           
 37043 ;; *************** function _setup_drive *****************
 37044 ;; Defined at:
 37045 ;;		line 130 in file "../src/io_dos.c"
 37046 ;; Parameters:    Size  Location     Type
 37047 ;;		None
 37048 ;; Auto vars:     Size  Location     Type
 37049 ;;		None
 37050 ;; Return value:  Size  Location     Type
 37051 ;;                  2    3[COMRAM] int 
 37052 ;; Registers used:
 37053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37054 ;; Tracked objects:
 37055 ;;		On entry : 0/0
 37056 ;;		On exit  : 0/0
 37057 ;;		Unchanged: 0/0
 37058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37062 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37063 ;;Total ram usage:        4 bytes
 37064 ;; Hardware stack levels used: 1
 37065 ;; Hardware stack levels required when called: 1
 37066 ;; This function calls:
 37067 ;;		Nothing
 37068 ;; This function is called by:
 37069 ;;		_bus_master_operation
 37070 ;; This function uses a non-reentrant model
 37071 ;;
 37072                           
 37073                           	psect	text99
 37074   01F460                     __ptext99:
 37075                           	callstack 0
 37076   01F460                     _setup_drive:
 37077                           	callstack 121
 37078   01F460                     
 37079                           ;../src/io_dos.c: 131:  req_tbl.CBI_CHR = 0;
 37080   01F460  0107               	movlb	7	; () banked
 37081   01F462  6BD1               	clrf	(_req_tbl+3)& (0+255),b
 37082   01F464                     
 37083                           ; BSR set to: 7
 37084                           ;../src/io_dos.c: 132:  if ( req_tbl.disk_drive >= 16 ) return( -1 );
 37085   01F464  0E0F               	movlw	15
 37086   01F466  65D2               	cpfsgt	(_req_tbl+4)& (0+255),b
 37087   01F468  EF38  F0FA         	goto	u32631
 37088   01F46C  EF3A  F0FA         	goto	u32630
 37089   01F470                     u32631:
 37090   01F470  EF3E  F0FA         	goto	l23511
 37091   01F474                     u32630:
 37092   01F474                     l23509:
 37093                           
 37094                           ; BSR set to: 7
 37095   01F474  6804               	setf	?_setup_drive^(0+1280),c
 37096   01F476  6805               	setf	(?_setup_drive+1)^(0+1280),c
 37097   01F478  EF6A  F0FA         	goto	l809
 37098   01F47C                     l23511:
 37099                           
 37100                           ; BSR set to: 7
 37101                           ;../src/io_dos.c: 133:  if ( cpm_drives[req_tbl.disk_drive].sectors == 0 ) return( -1 );
 37102   01F47C  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37103   01F47E  0D04               	mullw	4
 37104   01F480  0E4B               	movlw	low _cpm_drives
 37105   01F482  24F3               	addwf	243,w,c
 37106   01F484  6ED9               	movwf	fsr2l,c
 37107   01F486  0E09               	movlw	high _cpm_drives
 37108   01F488  20F4               	addwfc	prodh,w,c
 37109   01F48A  6EDA               	movwf	fsr2h,c
 37110   01F48C  50DE               	movf	postinc2,w,c
 37111   01F48E  10DE               	iorwf	postinc2,w,c
 37112   01F490  A4D8               	btfss	status,2,c
 37113   01F492  EF4D  F0FA         	goto	u32641
 37114   01F496  EF4F  F0FA         	goto	u32640
 37115   01F49A                     u32641:
 37116   01F49A  EF51  F0FA         	goto	l23515
 37117   01F49E                     u32640:
 37118   01F49E  EF3A  F0FA         	goto	l23509
 37119   01F4A2                     l23515:
 37120                           
 37121                           ; BSR set to: 7
 37122                           ;../src/io_dos.c: 134:  if ( req_tbl.disk_sector > cpm_drives[req_tbl.disk_drive].sector
      +                          s ) return( -1 );
 37123   01F4A2  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37124   01F4A4  0D04               	mullw	4
 37125   01F4A6  0E4B               	movlw	low _cpm_drives
 37126   01F4A8  24F3               	addwf	243,w,c
 37127   01F4AA  6ED9               	movwf	fsr2l,c
 37128   01F4AC  0E09               	movlw	high _cpm_drives
 37129   01F4AE  20F4               	addwfc	prodh,w,c
 37130   01F4B0  6EDA               	movwf	fsr2h,c
 37131   01F4B2  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 37132   01F4B4  5CDE               	subwf	postinc2,w,c
 37133   01F4B6  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 37134   01F4B8  58DE               	subwfb	postinc2,w,c
 37135   01F4BA  B0D8               	btfsc	status,0,c
 37136   01F4BC  EF62  F0FA         	goto	u32651
 37137   01F4C0  EF64  F0FA         	goto	u32650
 37138   01F4C4                     u32651:
 37139   01F4C4  EF66  F0FA         	goto	l23519
 37140   01F4C8                     u32650:
 37141   01F4C8  EF3A  F0FA         	goto	l23509
 37142   01F4CC                     l23519:
 37143                           
 37144                           ; BSR set to: 7
 37145                           ;../src/io_dos.c: 135:  return( 0 );
 37146   01F4CC  0E00               	movlw	0
 37147   01F4CE  6E05               	movwf	(?_setup_drive+1)^(0+1280),c
 37148   01F4D0  0E00               	movlw	0
 37149   01F4D2  6E04               	movwf	?_setup_drive^(0+1280),c
 37150   01F4D4                     l809:
 37151                           
 37152                           ; BSR set to: 7
 37153   01F4D4  0012               	return		;funcret
 37154   01F4D6                     __end_of_setup_drive:
 37155                           	callstack 0
 37156                           
 37157 ;; *************** function _read_sector *****************
 37158 ;; Defined at:
 37159 ;;		line 102 in file "../src/io_dos.c"
 37160 ;; Parameters:    Size  Location     Type
 37161 ;;		None
 37162 ;; Auto vars:     Size  Location     Type
 37163 ;;  n               2  162[BANK6 ] unsigned int 
 37164 ;;  filep           2  159[BANK6 ] PTR struct .
 37165 ;;  fres            1  161[BANK6 ] enum E16851
 37166 ;; Return value:  Size  Location     Type
 37167 ;;                  2  154[BANK6 ] int 
 37168 ;; Registers used:
 37169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37170 ;; Tracked objects:
 37171 ;;		On entry : 0/0
 37172 ;;		On exit  : 0/0
 37173 ;;		Unchanged: 0/0
 37174 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37175 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37176 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37177 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37178 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37179 ;;Total ram usage:       10 bytes
 37180 ;; Hardware stack levels used: 1
 37181 ;; Hardware stack levels required when called: 18
 37182 ;; This function calls:
 37183 ;;		_f_read
 37184 ;;		_printf
 37185 ;;		_seek_disk
 37186 ;;		_util_hexdump_sum
 37187 ;;		_write_sram
 37188 ;; This function is called by:
 37189 ;;		_bus_master_operation
 37190 ;; This function uses a non-reentrant model
 37191 ;;
 37192                           
 37193                           	psect	text100
 37194   01C568                     __ptext100:
 37195                           	callstack 0
 37196   01C568                     _read_sector:
 37197                           	callstack 104
 37198   01C568                     
 37199                           ;../src/io_dos.c: 103:  unsigned int n;;../src/io_dos.c: 104:  FRESULT fres;;../src/io_d
      +                          os.c: 105:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 37200   01C568  0107               	movlb	7	; () banked
 37201   01C56A  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37202   01C56C  0D04               	mullw	4
 37203   01C56E  0E4D               	movlw	low (_cpm_drives+2)
 37204   01C570  24F3               	addwf	243,w,c
 37205   01C572  6ED9               	movwf	fsr2l,c
 37206   01C574  0E09               	movlw	high (_cpm_drives+2)
 37207   01C576  20F4               	addwfc	prodh,w,c
 37208   01C578  6EDA               	movwf	fsr2h,c
 37209   01C57A  C4DE F69F          	movff	postinc2,read_sector@filep
 37210   01C57E  C4DD F6A0          	movff	postdec2,read_sector@filep+1
 37211   01C582                     
 37212                           ; BSR set to: 7
 37213                           ;../src/io_dos.c: 107:  if (seek_disk()) return(-1);
 37214   01C582  ECF4  F0E5         	call	_seek_disk	;wreg free
 37215   01C586  0106               	movlb	6	; () banked
 37216   01C588  518B               	movf	?_seek_disk& (0+255),w,b
 37217   01C58A  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 37218   01C58C  B4D8               	btfsc	status,2,c
 37219   01C58E  EFCB  F0E2         	goto	u32561
 37220   01C592  EFCD  F0E2         	goto	u32560
 37221   01C596                     u32561:
 37222   01C596  EFD2  F0E2         	goto	l23479
 37223   01C59A                     u32560:
 37224   01C59A                     l23477:
 37225   01C59A  0106               	movlb	6	; () banked
 37226   01C59C  699A               	setf	?_read_sector& (0+255),b
 37227   01C59E  699B               	setf	(?_read_sector+1)& (0+255),b
 37228   01C5A0  EF62  F0E3         	goto	l799
 37229   01C5A4                     l23479:
 37230                           
 37231                           ; BSR set to: 6
 37232                           ;../src/io_dos.c: 110:  if ((fres = f_read(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 37233   01C5A4  C69F  F63E         	movff	read_sector@filep,f_read@fp
 37234   01C5A8  C6A0  F63F         	movff	read_sector@filep+1,f_read@fp+1
 37235   01C5AC  0E00               	movlw	low _disk_buf
 37236   01C5AE  6F40               	movwf	f_read@buff& (0+255),b
 37237   01C5B0  0E0A               	movlw	high _disk_buf
 37238   01C5B2  6F41               	movwf	(f_read@buff+1)& (0+255),b
 37239   01C5B4  0E00               	movlw	0
 37240   01C5B6  6F43               	movwf	(f_read@btr+1)& (0+255),b
 37241   01C5B8  0E80               	movlw	128
 37242   01C5BA  6F42               	movwf	f_read@btr& (0+255),b
 37243   01C5BC  0EA2               	movlw	low read_sector@n
 37244   01C5BE  6F44               	movwf	f_read@br& (0+255),b
 37245   01C5C0  0E06               	movlw	high read_sector@n
 37246   01C5C2  6F45               	movwf	(f_read@br+1)& (0+255),b
 37247   01C5C4  EC9B  F096         	call	_f_read	;wreg free
 37248   01C5C8  0106               	movlb	6	; () banked
 37249   01C5CA  6FA1               	movwf	read_sector@fres& (0+255),b
 37250   01C5CC  51A1               	movf	read_sector@fres& (0+255),w,b
 37251   01C5CE  A4D8               	btfss	status,2,c
 37252   01C5D0  EFEC  F0E2         	goto	u32571
 37253   01C5D4  EFEE  F0E2         	goto	u32570
 37254   01C5D8                     u32571:
 37255   01C5D8  EFF8  F0E2         	goto	l23483
 37256   01C5DC                     u32570:
 37257   01C5DC                     
 37258                           ; BSR set to: 6
 37259   01C5DC  0E80               	movlw	128
 37260   01C5DE  19A2               	xorwf	read_sector@n& (0+255),w,b
 37261   01C5E0  11A3               	iorwf	(read_sector@n+1)& (0+255),w,b
 37262   01C5E2  B4D8               	btfsc	status,2,c
 37263   01C5E4  EFF6  F0E2         	goto	u32581
 37264   01C5E8  EFF8  F0E2         	goto	u32580
 37265   01C5EC                     u32581:
 37266   01C5EC  EF08  F0E3         	goto	l23491
 37267   01C5F0                     u32580:
 37268   01C5F0                     l23483:
 37269                           
 37270                           ; BSR set to: 6
 37271                           ;../src/io_dos.c: 111:   printf("f_read(): ERROR res=%d, n=%d\n\r", fres, n);
 37272   01C5F0  0ED5               	movlw	low STR_38
 37273   01C5F2  0105               	movlb	5	; () banked
 37274   01C5F4  6FAD               	movwf	printf@fmt& (0+255),b
 37275   01C5F6  0EF8               	movlw	high STR_38
 37276   01C5F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37277   01C5FA  C6A1  F5AF         	movff	read_sector@fres,?_printf+2
 37278   01C5FE  6BB0               	clrf	(?_printf+3)& (0+255),b
 37279   01C600  C6A2  F5B1         	movff	read_sector@n,?_printf+4
 37280   01C604  C6A3  F5B2         	movff	read_sector@n+1,?_printf+5
 37281   01C608  ECDA  F0FF         	call	_printf	;wreg free
 37282   01C60C  EFCD  F0E2         	goto	l23477
 37283   01C610                     l23491:
 37284                           
 37285                           ; BSR set to: 6
 37286   01C610  0108               	movlb	8	; () banked
 37287   01C612  5117               	movf	(_debug+1)& (0+255),w,b
 37288   01C614  B4D8               	btfsc	status,2,c
 37289   01C616  EF0F  F0E3         	goto	u32591
 37290   01C61A  EF11  F0E3         	goto	u32590
 37291   01C61E                     u32591:
 37292   01C61E  EF4B  F0E3         	goto	l23499
 37293   01C622                     u32590:
 37294   01C622                     
 37295                           ; BSR set to: 8
 37296   01C622  5119               	movf	(_debug+3)& (0+255),w,b
 37297   01C624  B4D8               	btfsc	status,2,c
 37298   01C626  EF17  F0E3         	goto	u32601
 37299   01C62A  EF19  F0E3         	goto	u32600
 37300   01C62E                     u32601:
 37301   01C62E  EF4B  F0E3         	goto	l23499
 37302   01C632                     u32600:
 37303   01C632                     
 37304                           ; BSR set to: 8
 37305   01C632  C7D2  F69C         	movff	_req_tbl+4,??_read_sector
 37306   01C636  0E01               	movlw	1
 37307   01C638  0106               	movlb	6	; () banked
 37308   01C63A  6F9D               	movwf	(??_read_sector+1)& (0+255),b
 37309   01C63C  0E00               	movlw	0
 37310   01C63E  6F9E               	movwf	(??_read_sector+2)& (0+255),b
 37311   01C640  2B9C               	incf	??_read_sector& (0+255),f,b
 37312   01C642  EF26  F0E3         	goto	u32614
 37313   01C646                     u32615:
 37314   01C646  90D8               	bcf	status,0,c
 37315   01C648  379D               	rlcf	(??_read_sector+1)& (0+255),f,b
 37316   01C64A  379E               	rlcf	(??_read_sector+2)& (0+255),f,b
 37317   01C64C                     u32614:
 37318   01C64C  2F9C               	decfsz	??_read_sector& (0+255),f,b
 37319   01C64E  EF23  F0E3         	goto	u32615
 37320   01C652  0108               	movlb	8	; () banked
 37321   01C654  511A               	movf	(_debug+4)& (0+255),w,b
 37322   01C656  0106               	movlb	6	; () banked
 37323   01C658  179D               	andwf	(??_read_sector+1)& (0+255),f,b
 37324   01C65A  0108               	movlb	8	; () banked
 37325   01C65C  511B               	movf	(_debug+5)& (0+255),w,b
 37326   01C65E  0106               	movlb	6	; () banked
 37327   01C660  179E               	andwf	(??_read_sector+2)& (0+255),f,b
 37328   01C662  519D               	movf	(??_read_sector+1)& (0+255),w,b
 37329   01C664  119E               	iorwf	(??_read_sector+2)& (0+255),w,b
 37330   01C666  A4D8               	btfss	status,2,c
 37331   01C668  EF38  F0E3         	goto	u32621
 37332   01C66C  EF3A  F0E3         	goto	u32620
 37333   01C670                     u32621:
 37334   01C670  EF4B  F0E3         	goto	l23499
 37335   01C674                     u32620:
 37336   01C674                     
 37337                           ; BSR set to: 6
 37338                           ;../src/io_dos.c: 115:   util_hexdump_sum("buf: ", disk_buf, 128);
 37339   01C674  0E9D               	movlw	low STR_35
 37340   01C676  0105               	movlb	5	; () banked
 37341   01C678  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 37342   01C67A  0EFF               	movlw	high STR_35
 37343   01C67C  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 37344   01C67E  0E00               	movlw	low _disk_buf
 37345   01C680  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 37346   01C682  0E0A               	movlw	high _disk_buf
 37347   01C684  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 37348   01C686  0E00               	movlw	0
 37349   01C688  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 37350   01C68A  0E80               	movlw	128
 37351   01C68C  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 37352   01C68E  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 37353                           
 37354                           ;../src/io_dos.c: 116:  }
 37355   01C692  EF5D  F0E3         	goto	l23501
 37356   01C696                     l23499:
 37357                           
 37358                           ;../src/io_dos.c: 119:   write_sram(req_tbl.data_adr, disk_buf, 128);
 37359   01C696  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 37360   01C69A  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 37361   01C69E  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 37362   01C6A2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 37363   01C6A6  0E00               	movlw	low _disk_buf
 37364   01C6A8  6E08               	movwf	write_sram@buf^(0+1280),c
 37365   01C6AA  0E0A               	movlw	high _disk_buf
 37366   01C6AC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 37367   01C6AE  0E00               	movlw	0
 37368   01C6B0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 37369   01C6B2  0E80               	movlw	128
 37370   01C6B4  6E0A               	movwf	write_sram@len^(0+1280),c
 37371   01C6B6  EC9F  F0E8         	call	_write_sram	;wreg free
 37372   01C6BA                     l23501:
 37373                           
 37374                           ;../src/io_dos.c: 127:  return(0);
 37375   01C6BA  0E00               	movlw	0
 37376   01C6BC  0106               	movlb	6	; () banked
 37377   01C6BE  6F9B               	movwf	(?_read_sector+1)& (0+255),b
 37378   01C6C0  0E00               	movlw	0
 37379   01C6C2  6F9A               	movwf	?_read_sector& (0+255),b
 37380   01C6C4                     l799:
 37381                           
 37382                           ; BSR set to: 6
 37383   01C6C4  0012               	return		;funcret
 37384   01C6C6                     __end_of_read_sector:
 37385                           	callstack 0
 37386                           
 37387 ;; *************** function _write_sram *****************
 37388 ;; Defined at:
 37389 ;;		line 338 in file "../src/boards/w65_cmn.c"
 37390 ;; Parameters:    Size  Location     Type
 37391 ;;  addr            4    3[COMRAM] unsigned long 
 37392 ;;  buf             2    7[COMRAM] PTR unsigned char 
 37393 ;;		 -> mon_prog@sw(1), binv(42), disk_buf(128), req_tbl(13), 
 37394 ;;		 -> tmp_buf(512), rom(16), cpu_flg(1), fh(32), 
 37395 ;;  len             2    9[COMRAM] unsigned int 
 37396 ;; Auto vars:     Size  Location     Type
 37397 ;;  ab              4   15[COMRAM] struct address_bus_u
 37398 ;;  i               2   13[COMRAM] unsigned int 
 37399 ;; Return value:  Size  Location     Type
 37400 ;;                  1    wreg      void 
 37401 ;; Registers used:
 37402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 37403 ;; Tracked objects:
 37404 ;;		On entry : 0/0
 37405 ;;		On exit  : 0/0
 37406 ;;		Unchanged: 0/0
 37407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37409 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37411 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37412 ;;Total ram usage:       16 bytes
 37413 ;; Hardware stack levels used: 1
 37414 ;; Hardware stack levels required when called: 1
 37415 ;; This function calls:
 37416 ;;		Nothing
 37417 ;; This function is called by:
 37418 ;;		_reset_cpu
 37419 ;;		_read_sector
 37420 ;;		_unimon_console
 37421 ;;		_bus_master_operation
 37422 ;;		_mem_init
 37423 ;;		_setup_monitor
 37424 ;;		_load_program
 37425 ;;		_boot_file
 37426 ;;		_wstart_prog
 37427 ;;		_restart_prog
 37428 ;;		_mon_prog
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text101
 37433   01D13E                     __ptext101:
 37434                           	callstack 0
 37435   01D13E                     _write_sram:
 37436                           	callstack 124
 37437   01D13E                     
 37438                           ;../src/boards/w65_cmn.c: 338: void write_sram(uint32_t addr, uint8_t *buf, unsigned int
      +                           len);../src/boards/w65_cmn.c: 339: {;../src/boards/w65_cmn.c: 340:     union address_bu
      +                          s_u ab;;../src/boards/w65_cmn.c: 341:     unsigned int i;;../src/boards/w65_cmn.c: 343: 
      +                           ab.w = addr;
 37439   01D13E  C504  F510         	movff	write_sram@addr,write_sram@ab
 37440   01D142  C505  F511         	movff	write_sram@addr+1,write_sram@ab+1
 37441   01D146  C506  F512         	movff	write_sram@addr+2,write_sram@ab+2
 37442   01D14A  C507  F513         	movff	write_sram@addr+3,write_sram@ab+3
 37443   01D14E                     
 37444                           ;../src/boards/w65_cmn.c: 344:  i = 0;
 37445   01D14E  0E00               	movlw	0
 37446   01D150  6E0F               	movwf	(write_sram@i+1)^(0+1280),c
 37447   01D152  0E00               	movlw	0
 37448   01D154  6E0E               	movwf	write_sram@i^(0+1280),c
 37449   01D156                     
 37450                           ;../src/boards/w65_cmn.c: 346:  TRISB = 0x00;
 37451   01D156  6AC7               	clrf	199,c	;volatile
 37452                           
 37453                           ;../src/boards/w65_cmn.c: 347:  if (cpu_flg) {
 37454   01D158  0107               	movlb	7	; () banked
 37455   01D15A  51E5               	movf	_cpu_flg& (0+255),w,b
 37456   01D15C  B4D8               	btfsc	status,2,c
 37457   01D15E  EFB3  F0E8         	goto	u31921
 37458   01D162  EFB5  F0E8         	goto	u31920
 37459   01D166                     u31921:
 37460   01D166  EF14  F0E9         	goto	l23093
 37461   01D16A                     u31920:
 37462   01D16A  EFE1  F0E8         	goto	l23083
 37463   01D16E                     l361:
 37464                           
 37465                           ;../src/boards/w65_cmn.c: 350:       LATC = ab.ll;
 37466   01D16E  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 37467                           
 37468                           ;../src/boards/w65_cmn.c: 351:    LATD = ab.lh;
 37469   01D172  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 37470                           
 37471                           ;../src/boards/w65_cmn.c: 353:       LATB = ab.hl;
 37472   01D176  C512  F4BF         	movff	write_sram@ab+2,1215	;volatile
 37473                           
 37474                           ;../src/boards/w65_cmn.c: 354:    LATA1 = 1;
 37475   01D17A  82BE               	bsf	1214,1,c	;volatile
 37476                           
 37477                           ;../src/boards/w65_cmn.c: 355:    LATA1 = 0;
 37478   01D17C  92BE               	bcf	1214,1,c	;volatile
 37479                           
 37480                           ;../src/boards/w65_cmn.c: 357:          LATA4 = 0;
 37481   01D17E  98BE               	bcf	1214,4,c	;volatile
 37482   01D180                     
 37483                           ;../src/boards/w65_cmn.c: 358:          LATB = ((uint8_t*)buf)[i];
 37484   01D180  500E               	movf	write_sram@i^(0+1280),w,c
 37485   01D182  2408               	addwf	write_sram@buf^(0+1280),w,c
 37486   01D184  6E0C               	movwf	??_write_sram^(0+1280),c
 37487   01D186  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 37488   01D188  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 37489   01D18A  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 37490   01D18C  C50C  F4F6         	movff	??_write_sram,tblptrl
 37491   01D190  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 37492   01D194  0E00               	movlw	low (__mediumconst shr (0+16))
 37493   01D196  6EF8               	movwf	tblptru,c
 37494   01D198  0E25               	movlw	(high __ramtop+-1)
 37495   01D19A  64F7               	cpfsgt	tblptrh,c
 37496   01D19C  D003               	bra	u31937
 37497   01D19E  0008               	tblrd		*
 37498   01D1A0  50F5               	movf	tablat,w,c
 37499   01D1A2  D005               	bra	u31930
 37500   01D1A4                     u31937:
 37501   01D1A4  C4F6 F4E9          	movff	tblptrl,fsr0l
 37502   01D1A8  C4F7 F4EA          	movff	tblptrh,fsr0h
 37503   01D1AC  50EF               	movf	indf0,w,c
 37504   01D1AE                     u31930:
 37505   01D1AE  6EBF               	movwf	191,c	;volatile
 37506   01D1B0                     
 37507                           ;../src/boards/w65_cmn.c: 359:          LATA4 = 1;
 37508   01D1B0  88BE               	bsf	1214,4,c	;volatile
 37509   01D1B2                     
 37510                           ;../src/boards/w65_cmn.c: 361:    i++;
 37511   01D1B2  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 37512   01D1B4  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 37513   01D1B6                     
 37514                           ;../src/boards/w65_cmn.c: 362:    ab.w++;
 37515   01D1B6  0E01               	movlw	1
 37516   01D1B8  2610               	addwf	write_sram@ab^(0+1280),f,c
 37517   01D1BA  0E00               	movlw	0
 37518   01D1BC  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 37519   01D1BE  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 37520   01D1C0  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 37521   01D1C2                     l23083:
 37522                           
 37523                           ;../src/boards/w65_cmn.c: 349:   while( i < len ) {
 37524   01D1C2  500A               	movf	write_sram@len^(0+1280),w,c
 37525   01D1C4  5C0E               	subwf	write_sram@i^(0+1280),w,c
 37526   01D1C6  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 37527   01D1C8  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 37528   01D1CA  A0D8               	btfss	status,0,c
 37529   01D1CC  EFEA  F0E8         	goto	u31941
 37530   01D1D0  EFEC  F0E8         	goto	u31940
 37531   01D1D4                     u31941:
 37532   01D1D4  EFB7  F0E8         	goto	l361
 37533   01D1D8                     u31940:
 37534   01D1D8  EF1F  F0E9         	goto	l363
 37535   01D1DC                     l365:
 37536                           
 37537                           ;../src/boards/w65_cmn.c: 368:       LATC = ab.ll;
 37538   01D1DC  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 37539                           
 37540                           ;../src/boards/w65_cmn.c: 369:    LATD = ab.lh;
 37541   01D1E0  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 37542                           
 37543                           ;../src/boards/w65_cmn.c: 371:          LATA4 = 0;
 37544   01D1E4  98BE               	bcf	1214,4,c	;volatile
 37545   01D1E6                     
 37546                           ;../src/boards/w65_cmn.c: 372:          LATB = ((uint8_t*)buf)[i];
 37547   01D1E6  500E               	movf	write_sram@i^(0+1280),w,c
 37548   01D1E8  2408               	addwf	write_sram@buf^(0+1280),w,c
 37549   01D1EA  6E0C               	movwf	??_write_sram^(0+1280),c
 37550   01D1EC  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 37551   01D1EE  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 37552   01D1F0  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 37553   01D1F2  C50C  F4F6         	movff	??_write_sram,tblptrl
 37554   01D1F6  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 37555   01D1FA  0E00               	movlw	low (__mediumconst shr (0+16))
 37556   01D1FC  6EF8               	movwf	tblptru,c
 37557   01D1FE  0E25               	movlw	(high __ramtop+-1)
 37558   01D200  64F7               	cpfsgt	tblptrh,c
 37559   01D202  D003               	bra	u31957
 37560   01D204  0008               	tblrd		*
 37561   01D206  50F5               	movf	tablat,w,c
 37562   01D208  D005               	bra	u31950
 37563   01D20A                     u31957:
 37564   01D20A  C4F6 F4E9          	movff	tblptrl,fsr0l
 37565   01D20E  C4F7 F4EA          	movff	tblptrh,fsr0h
 37566   01D212  50EF               	movf	indf0,w,c
 37567   01D214                     u31950:
 37568   01D214  6EBF               	movwf	191,c	;volatile
 37569   01D216                     
 37570                           ;../src/boards/w65_cmn.c: 373:          LATA4 = 1;
 37571   01D216  88BE               	bsf	1214,4,c	;volatile
 37572   01D218                     
 37573                           ;../src/boards/w65_cmn.c: 375:    i++;
 37574   01D218  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 37575   01D21A  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 37576   01D21C                     
 37577                           ;../src/boards/w65_cmn.c: 376:    ab.w++;
 37578   01D21C  0E01               	movlw	1
 37579   01D21E  2610               	addwf	write_sram@ab^(0+1280),f,c
 37580   01D220  0E00               	movlw	0
 37581   01D222  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 37582   01D224  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 37583   01D226  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 37584   01D228                     l23093:
 37585                           
 37586                           ;../src/boards/w65_cmn.c: 367:   while( i < len ) {
 37587   01D228  500A               	movf	write_sram@len^(0+1280),w,c
 37588   01D22A  5C0E               	subwf	write_sram@i^(0+1280),w,c
 37589   01D22C  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 37590   01D22E  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 37591   01D230  A0D8               	btfss	status,0,c
 37592   01D232  EF1D  F0E9         	goto	u31961
 37593   01D236  EF1F  F0E9         	goto	u31960
 37594   01D23A                     u31961:
 37595   01D23A  EFEE  F0E8         	goto	l365
 37596   01D23E                     u31960:
 37597   01D23E                     l363:
 37598                           
 37599                           ;../src/boards/w65_cmn.c: 379:  TRISB = 0xff;
 37600   01D23E  68C7               	setf	199,c	;volatile
 37601   01D240  0012               	return		;funcret
 37602   01D242                     __end_of_write_sram:
 37603                           	callstack 0
 37604                           
 37605 ;; *************** function _util_hexdump_sum *****************
 37606 ;; Defined at:
 37607 ;;		line 78 in file "../drivers/utils.c"
 37608 ;; Parameters:    Size  Location     Type
 37609 ;;  header          2  122[BANK5 ] PTR const unsigned char 
 37610 ;;		 -> STR_39(6), STR_35(6), 
 37611 ;;  addr            2  124[BANK5 ] PTR const void 
 37612 ;;		 -> disk_buf(128), 
 37613 ;;  size            2  126[BANK5 ] unsigned int 
 37614 ;; Auto vars:     Size  Location     Type
 37615 ;;  i               2  130[BANK5 ] int 
 37616 ;;  p               2  128[BANK5 ] PTR const unsigned char 
 37617 ;;		 -> disk_buf(128), 
 37618 ;;  sum             1  132[BANK5 ] unsigned char 
 37619 ;; Return value:  Size  Location     Type
 37620 ;;                  1    wreg      void 
 37621 ;; Registers used:
 37622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37623 ;; Tracked objects:
 37624 ;;		On entry : 0/0
 37625 ;;		On exit  : 0/0
 37626 ;;		Unchanged: 0/0
 37627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37629 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37631 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37632 ;;Total ram usage:       11 bytes
 37633 ;; Hardware stack levels used: 1
 37634 ;; Hardware stack levels required when called: 10
 37635 ;; This function calls:
 37636 ;;		_printf
 37637 ;;		_util_hexdump
 37638 ;; This function is called by:
 37639 ;;		_write_sector
 37640 ;;		_read_sector
 37641 ;; This function uses a non-reentrant model
 37642 ;;
 37643                           
 37644                           	psect	text102
 37645   01F170                     __ptext102:
 37646                           	callstack 0
 37647   01F170                     _util_hexdump_sum:
 37648                           	callstack 111
 37649   01F170                     
 37650                           ;../drivers/utils.c: 78: void util_hexdump_sum(const char *header, const void *addr, uns
      +                          igned int size);../drivers/utils.c: 79: {;../drivers/utils.c: 80:     util_hexdump(heade
      +                          r, addr, size);
 37651   01F170  C5DA  F5BD         	movff	util_hexdump_sum@header,util_hexdump@header
 37652   01F174  C5DB  F5BE         	movff	util_hexdump_sum@header+1,util_hexdump@header+1
 37653   01F178  C5DC  F5BF         	movff	util_hexdump_sum@addr,util_hexdump@addr
 37654   01F17C  C5DD  F5C0         	movff	util_hexdump_sum@addr+1,util_hexdump@addr+1
 37655   01F180  C5DE  F5C1         	movff	util_hexdump_sum@size,util_hexdump@size
 37656   01F184  C5DF  F5C2         	movff	util_hexdump_sum@size+1,util_hexdump@size+1
 37657   01F188  EC03  F0E2         	call	_util_hexdump	;wreg free
 37658   01F18C                     
 37659                           ;../drivers/utils.c: 82:     uint8_t sum = 0;
 37660   01F18C  0105               	movlb	5	; () banked
 37661   01F18E  6BE4               	clrf	util_hexdump_sum@sum& (0+255),b
 37662   01F190                     
 37663                           ; BSR set to: 5
 37664                           ;../drivers/utils.c: 83:     const uint8_t *p = addr;
 37665   01F190  C5DC  F5E0         	movff	util_hexdump_sum@addr,util_hexdump_sum@p
 37666   01F194  C5DD  F5E1         	movff	util_hexdump_sum@addr+1,util_hexdump_sum@p+1
 37667   01F198                     
 37668                           ; BSR set to: 5
 37669                           ;../drivers/utils.c: 84:     for (int i = 0; i < size; i++)
 37670   01F198  0E00               	movlw	0
 37671   01F19A  6FE3               	movwf	(util_hexdump_sum@i+1)& (0+255),b
 37672   01F19C  0E00               	movlw	0
 37673   01F19E  6FE2               	movwf	util_hexdump_sum@i& (0+255),b
 37674   01F1A0  EFDC  F0F8         	goto	l23149
 37675   01F1A4                     l23143:
 37676                           
 37677                           ; BSR set to: 5
 37678                           ;../drivers/utils.c: 85:         sum += *p++;
 37679   01F1A4  C5E0  F4D9         	movff	util_hexdump_sum@p,fsr2l
 37680   01F1A8  C5E1  F4DA         	movff	util_hexdump_sum@p+1,fsr2h
 37681   01F1AC  50DF               	movf	indf2,w,c
 37682   01F1AE  27E4               	addwf	util_hexdump_sum@sum& (0+255),f,b
 37683   01F1B0                     
 37684                           ; BSR set to: 5
 37685   01F1B0  4BE0               	infsnz	util_hexdump_sum@p& (0+255),f,b
 37686   01F1B2  2BE1               	incf	(util_hexdump_sum@p+1)& (0+255),f,b
 37687   01F1B4                     
 37688                           ; BSR set to: 5
 37689   01F1B4  4BE2               	infsnz	util_hexdump_sum@i& (0+255),f,b
 37690   01F1B6  2BE3               	incf	(util_hexdump_sum@i+1)& (0+255),f,b
 37691   01F1B8                     l23149:
 37692                           
 37693                           ; BSR set to: 5
 37694   01F1B8  51DE               	movf	util_hexdump_sum@size& (0+255),w,b
 37695   01F1BA  5DE2               	subwf	util_hexdump_sum@i& (0+255),w,b
 37696   01F1BC  51DF               	movf	(util_hexdump_sum@size+1)& (0+255),w,b
 37697   01F1BE  59E3               	subwfb	(util_hexdump_sum@i+1)& (0+255),w,b
 37698   01F1C0  A0D8               	btfss	status,0,c
 37699   01F1C2  EFE5  F0F8         	goto	u32031
 37700   01F1C6  EFE7  F0F8         	goto	u32030
 37701   01F1CA                     u32031:
 37702   01F1CA  EFD2  F0F8         	goto	l23143
 37703   01F1CE                     u32030:
 37704   01F1CE                     
 37705                           ; BSR set to: 5
 37706                           ;../drivers/utils.c: 86:     printf("%s%53s CHECKSUM: %02x\n\r", header, "", sum);
 37707   01F1CE  0E06               	movlw	low STR_198
 37708   01F1D0  6FAD               	movwf	printf@fmt& (0+255),b
 37709   01F1D2  0EFB               	movlw	high STR_198
 37710   01F1D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37711   01F1D6  C5DA  F5AF         	movff	util_hexdump_sum@header,?_printf+2
 37712   01F1DA  C5DB  F5B0         	movff	util_hexdump_sum@header+1,?_printf+3
 37713   01F1DE  0E7B               	movlw	low (STR_71+22)
 37714   01F1E0  6FB1               	movwf	(?_printf+4)& (0+255),b
 37715   01F1E2  0EFB               	movlw	high (STR_71+22)
 37716   01F1E4  6FB2               	movwf	(?_printf+5)& (0+255),b
 37717   01F1E6  C5E4  F5B3         	movff	util_hexdump_sum@sum,?_printf+6
 37718   01F1EA  6BB4               	clrf	(?_printf+7)& (0+255),b
 37719   01F1EC  ECDA  F0FF         	call	_printf	;wreg free
 37720   01F1F0  0012               	return		;funcret
 37721   01F1F2                     __end_of_util_hexdump_sum:
 37722                           	callstack 0
 37723                           
 37724 ;; *************** function _util_hexdump *****************
 37725 ;; Defined at:
 37726 ;;		line 36 in file "../drivers/utils.c"
 37727 ;; Parameters:    Size  Location     Type
 37728 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 37729 ;;		 -> STR_178(1), STR_39(6), STR_35(6), 
 37730 ;;  addr            2   95[BANK5 ] PTR const void 
 37731 ;;		 -> disk_initialize@buf(128), disk_buf(128), 
 37732 ;;  size            2   97[BANK5 ] unsigned int 
 37733 ;; Auto vars:     Size  Location     Type
 37734 ;;  i               2  120[BANK5 ] int 
 37735 ;;  chars          17  101[BANK5 ] unsigned char [17]
 37736 ;;  buf             2  118[BANK5 ] PTR const unsigned char 
 37737 ;;		 -> disk_initialize@buf(128), disk_buf(128), 
 37738 ;; Return value:  Size  Location     Type
 37739 ;;                  1    wreg      void 
 37740 ;; Registers used:
 37741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37742 ;; Tracked objects:
 37743 ;;		On entry : 0/0
 37744 ;;		On exit  : 0/0
 37745 ;;		Unchanged: 0/0
 37746 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37748 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37750 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37751 ;;Total ram usage:       29 bytes
 37752 ;; Hardware stack levels used: 1
 37753 ;; Hardware stack levels required when called: 9
 37754 ;; This function calls:
 37755 ;;		_printf
 37756 ;; This function is called by:
 37757 ;;		_disk_initialize
 37758 ;;		_util_hexdump_sum
 37759 ;; This function uses a non-reentrant model
 37760 ;;
 37761                           
 37762                           	psect	text103
 37763   01C406                     __ptext103:
 37764                           	callstack 0
 37765   01C406                     _util_hexdump:
 37766                           	callstack 111
 37767   01C406                     
 37768                           ;../drivers/utils.c: 36: void util_hexdump(const char *header, const void *addr, unsigne
      +                          d int size);../drivers/utils.c: 37: {;../drivers/utils.c: 38:     char chars[17];;../dri
      +                          vers/utils.c: 39:     const uint8_t *buf = addr;
 37769   01C406  C5BF  F5D6         	movff	util_hexdump@addr,util_hexdump@buf
 37770   01C40A  C5C0  F5D7         	movff	util_hexdump@addr+1,util_hexdump@buf+1
 37771                           
 37772                           ;../drivers/utils.c: 40:     size = ((size + 15) & ~0xfU);
 37773   01C40E  0E0F               	movlw	15
 37774   01C410  0105               	movlb	5	; () banked
 37775   01C412  25C1               	addwf	util_hexdump@size& (0+255),w,b
 37776   01C414  6FC3               	movwf	??_util_hexdump& (0+255),b
 37777   01C416  0E00               	movlw	0
 37778   01C418  21C2               	addwfc	(util_hexdump@size+1)& (0+255),w,b
 37779   01C41A  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37780   01C41C  0EF0               	movlw	240
 37781   01C41E  15C3               	andwf	??_util_hexdump& (0+255),w,b
 37782   01C420  6FC1               	movwf	util_hexdump@size& (0+255),b
 37783   01C422  0EFF               	movlw	255
 37784   01C424  15C4               	andwf	(??_util_hexdump+1)& (0+255),w,b
 37785   01C426  6FC2               	movwf	(util_hexdump@size+1)& (0+255),b
 37786   01C428                     
 37787                           ; BSR set to: 5
 37788                           ;../drivers/utils.c: 41:     for (int i = 0; i < size; i++) {
 37789   01C428  0E00               	movlw	0
 37790   01C42A  6FD9               	movwf	(util_hexdump@i+1)& (0+255),b
 37791   01C42C  0E00               	movlw	0
 37792   01C42E  6FD8               	movwf	util_hexdump@i& (0+255),b
 37793   01C430  EFA8  F0E2         	goto	l21685
 37794   01C434                     l21665:
 37795                           
 37796                           ; BSR set to: 5
 37797                           ;../drivers/utils.c: 42:         if ((i % 16) == 0)
 37798   01C434  0E0F               	movlw	15
 37799   01C436  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37800   01C438  6FC3               	movwf	??_util_hexdump& (0+255),b
 37801   01C43A  0E00               	movlw	0
 37802   01C43C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37803   01C43E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37804   01C440  51C3               	movf	??_util_hexdump& (0+255),w,b
 37805   01C442  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 37806   01C444  A4D8               	btfss	status,2,c
 37807   01C446  EF27  F0E2         	goto	u29281
 37808   01C44A  EF29  F0E2         	goto	u29280
 37809   01C44E                     u29281:
 37810   01C44E  EF37  F0E2         	goto	l2510
 37811   01C452                     u29280:
 37812   01C452                     
 37813                           ; BSR set to: 5
 37814                           ;../drivers/utils.c: 43:             printf("%s%04x:", header, i);
 37815   01C452  0E30               	movlw	low STR_192
 37816   01C454  6FAD               	movwf	printf@fmt& (0+255),b
 37817   01C456  0EFF               	movlw	high STR_192
 37818   01C458  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37819   01C45A  C5BD  F5AF         	movff	util_hexdump@header,?_printf+2
 37820   01C45E  C5BE  F5B0         	movff	util_hexdump@header+1,?_printf+3
 37821   01C462  C5D8  F5B1         	movff	util_hexdump@i,?_printf+4
 37822   01C466  C5D9  F5B2         	movff	util_hexdump@i+1,?_printf+5
 37823   01C46A  ECDA  F0FF         	call	_printf	;wreg free
 37824   01C46E                     l2510:
 37825                           
 37826                           ;../drivers/utils.c: 44:         printf(" %02x", buf[i]);
 37827   01C46E  0E85               	movlw	low STR_193
 37828   01C470  0105               	movlb	5	; () banked
 37829   01C472  6FAD               	movwf	printf@fmt& (0+255),b
 37830   01C474  0EFF               	movlw	high STR_193
 37831   01C476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37832   01C478  51D8               	movf	util_hexdump@i& (0+255),w,b
 37833   01C47A  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37834   01C47C  6ED9               	movwf	fsr2l,c
 37835   01C47E  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37836   01C480  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37837   01C482  6EDA               	movwf	fsr2h,c
 37838   01C484  50DF               	movf	indf2,w,c
 37839   01C486  6FC3               	movwf	??_util_hexdump& (0+255),b
 37840   01C488  51C3               	movf	??_util_hexdump& (0+255),w,b
 37841   01C48A  6FAF               	movwf	(?_printf+2)& (0+255),b
 37842   01C48C  6BB0               	clrf	(?_printf+3)& (0+255),b
 37843   01C48E  ECDA  F0FF         	call	_printf	;wreg free
 37844   01C492                     
 37845                           ;../drivers/utils.c: 45:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 37846   01C492  0105               	movlb	5	; () banked
 37847   01C494  51D8               	movf	util_hexdump@i& (0+255),w,b
 37848   01C496  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37849   01C498  6ED9               	movwf	fsr2l,c
 37850   01C49A  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37851   01C49C  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37852   01C49E  6EDA               	movwf	fsr2h,c
 37853   01C4A0  0E1F               	movlw	31
 37854   01C4A2  64DF               	cpfsgt	indf2,c
 37855   01C4A4  EF56  F0E2         	goto	u29291
 37856   01C4A8  EF58  F0E2         	goto	u29290
 37857   01C4AC                     u29291:
 37858   01C4AC  EF7C  F0E2         	goto	l21675
 37859   01C4B0                     u29290:
 37860   01C4B0                     
 37861                           ; BSR set to: 5
 37862   01C4B0  51D8               	movf	util_hexdump@i& (0+255),w,b
 37863   01C4B2  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37864   01C4B4  6ED9               	movwf	fsr2l,c
 37865   01C4B6  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37866   01C4B8  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37867   01C4BA  6EDA               	movwf	fsr2h,c
 37868   01C4BC  0E7F               	movlw	127
 37869   01C4BE  60DF               	cpfslt	indf2,c
 37870   01C4C0  EF64  F0E2         	goto	u29301
 37871   01C4C4  EF66  F0E2         	goto	u29300
 37872   01C4C8                     u29301:
 37873   01C4C8  EF7C  F0E2         	goto	l21675
 37874   01C4CC                     u29300:
 37875   01C4CC                     
 37876                           ; BSR set to: 5
 37877                           ;../drivers/utils.c: 46:             chars[i % 16] = buf[i];
 37878   01C4CC  51D8               	movf	util_hexdump@i& (0+255),w,b
 37879   01C4CE  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37880   01C4D0  6ED9               	movwf	fsr2l,c
 37881   01C4D2  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37882   01C4D4  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37883   01C4D6  6EDA               	movwf	fsr2h,c
 37884   01C4D8  0E0F               	movlw	15
 37885   01C4DA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37886   01C4DC  6FC3               	movwf	??_util_hexdump& (0+255),b
 37887   01C4DE  0E00               	movlw	0
 37888   01C4E0  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37889   01C4E2  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37890   01C4E4  0EC5               	movlw	low util_hexdump@chars
 37891   01C4E6  25C3               	addwf	??_util_hexdump& (0+255),w,b
 37892   01C4E8  6EE1               	movwf	fsr1l,c
 37893   01C4EA  0E05               	movlw	high util_hexdump@chars
 37894   01C4EC  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 37895   01C4EE  6EE2               	movwf	fsr1h,c
 37896   01C4F0  C4DF F4E7          	movff	indf2,indf1
 37897                           
 37898                           ;../drivers/utils.c: 47:         } else {
 37899   01C4F4  EF8A  F0E2         	goto	l21677
 37900   01C4F8                     l21675:
 37901                           
 37902                           ; BSR set to: 5
 37903                           ;../drivers/utils.c: 48:             chars[i % 16] = '.';
 37904   01C4F8  0E0F               	movlw	15
 37905   01C4FA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37906   01C4FC  6FC3               	movwf	??_util_hexdump& (0+255),b
 37907   01C4FE  0E00               	movlw	0
 37908   01C500  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37909   01C502  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37910   01C504  0EC5               	movlw	low util_hexdump@chars
 37911   01C506  25C3               	addwf	??_util_hexdump& (0+255),w,b
 37912   01C508  6ED9               	movwf	fsr2l,c
 37913   01C50A  0E05               	movlw	high util_hexdump@chars
 37914   01C50C  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 37915   01C50E  6EDA               	movwf	fsr2h,c
 37916   01C510  0E2E               	movlw	46
 37917   01C512  6EDF               	movwf	indf2,c
 37918   01C514                     l21677:
 37919                           
 37920                           ; BSR set to: 5
 37921                           ;../drivers/utils.c: 50:         if ((i % 16) == 15) {
 37922   01C514  0E0F               	movlw	15
 37923   01C516  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37924   01C518  6FC3               	movwf	??_util_hexdump& (0+255),b
 37925   01C51A  0E00               	movlw	0
 37926   01C51C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37927   01C51E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37928   01C520  0E0F               	movlw	15
 37929   01C522  19C3               	xorwf	??_util_hexdump& (0+255),w,b
 37930   01C524  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 37931   01C526  A4D8               	btfss	status,2,c
 37932   01C528  EF98  F0E2         	goto	u29311
 37933   01C52C  EF9A  F0E2         	goto	u29310
 37934   01C530                     u29311:
 37935   01C530  EFA5  F0E2         	goto	l21683
 37936   01C534                     u29310:
 37937   01C534                     
 37938                           ; BSR set to: 5
 37939                           ;../drivers/utils.c: 51:             chars[16] = '\0';
 37940   01C534  6BD5               	clrf	(util_hexdump@chars+16)& (0+255),b
 37941   01C536                     
 37942                           ; BSR set to: 5
 37943                           ;../drivers/utils.c: 52:             printf(" %s\n\r", chars);
 37944   01C536  0E58               	movlw	low (STR_73+8)
 37945   01C538  6FAD               	movwf	printf@fmt& (0+255),b
 37946   01C53A  0EFE               	movlw	high (STR_73+8)
 37947   01C53C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37948   01C53E  0EC5               	movlw	low util_hexdump@chars
 37949   01C540  6FAF               	movwf	(?_printf+2)& (0+255),b
 37950   01C542  0E05               	movlw	high util_hexdump@chars
 37951   01C544  6FB0               	movwf	(?_printf+3)& (0+255),b
 37952   01C546  ECDA  F0FF         	call	_printf	;wreg free
 37953   01C54A                     l21683:
 37954                           
 37955                           ;../drivers/utils.c: 54:     }
 37956   01C54A  0105               	movlb	5	; () banked
 37957   01C54C  4BD8               	infsnz	util_hexdump@i& (0+255),f,b
 37958   01C54E  2BD9               	incf	(util_hexdump@i+1)& (0+255),f,b
 37959   01C550                     l21685:
 37960                           
 37961                           ; BSR set to: 5
 37962   01C550  51C1               	movf	util_hexdump@size& (0+255),w,b
 37963   01C552  5DD8               	subwf	util_hexdump@i& (0+255),w,b
 37964   01C554  51C2               	movf	(util_hexdump@size+1)& (0+255),w,b
 37965   01C556  59D9               	subwfb	(util_hexdump@i+1)& (0+255),w,b
 37966   01C558  A0D8               	btfss	status,0,c
 37967   01C55A  EFB1  F0E2         	goto	u29321
 37968   01C55E  EFB3  F0E2         	goto	u29320
 37969   01C562                     u29321:
 37970   01C562  EF1A  F0E2         	goto	l21665
 37971   01C566                     u29320:
 37972   01C566                     
 37973                           ; BSR set to: 5
 37974   01C566  0012               	return		;funcret
 37975   01C568                     __end_of_util_hexdump:
 37976                           	callstack 0
 37977                           
 37978 ;; *************** function _seek_disk *****************
 37979 ;; Defined at:
 37980 ;;		line 60 in file "../src/io_dos.c"
 37981 ;; Parameters:    Size  Location     Type
 37982 ;;		None
 37983 ;; Auto vars:     Size  Location     Type
 37984 ;;  sector          4  147[BANK6 ] unsigned long 
 37985 ;;  filep           2  151[BANK6 ] PTR struct .
 37986 ;;  n               2    0        unsigned int 
 37987 ;;  fres            1  153[BANK6 ] enum E16851
 37988 ;; Return value:  Size  Location     Type
 37989 ;;                  2  139[BANK6 ] int 
 37990 ;; Registers used:
 37991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37992 ;; Tracked objects:
 37993 ;;		On entry : 0/0
 37994 ;;		On exit  : 0/0
 37995 ;;		Unchanged: 0/0
 37996 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37997 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37998 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37999 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38000 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38001 ;;Total ram usage:       15 bytes
 38002 ;; Hardware stack levels used: 1
 38003 ;; Hardware stack levels required when called: 17
 38004 ;; This function calls:
 38005 ;;		_f_lseek
 38006 ;;		_printf
 38007 ;; This function is called by:
 38008 ;;		_write_sector
 38009 ;;		_read_sector
 38010 ;; This function uses a non-reentrant model
 38011 ;;
 38012                           
 38013                           	psect	text104
 38014   01CBE8                     __ptext104:
 38015                           	callstack 0
 38016   01CBE8                     _seek_disk:
 38017                           	callstack 104
 38018   01CBE8                     
 38019                           ;../src/io_dos.c: 61:  unsigned int n;;../src/io_dos.c: 62:  FRESULT fres;;../src/io_dos
      +                          .c: 63:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 38020   01CBE8  0107               	movlb	7	; () banked
 38021   01CBEA  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38022   01CBEC  0D04               	mullw	4
 38023   01CBEE  0E4D               	movlw	low (_cpm_drives+2)
 38024   01CBF0  24F3               	addwf	243,w,c
 38025   01CBF2  6ED9               	movwf	fsr2l,c
 38026   01CBF4  0E09               	movlw	high (_cpm_drives+2)
 38027   01CBF6  20F4               	addwfc	prodh,w,c
 38028   01CBF8  6EDA               	movwf	fsr2h,c
 38029   01CBFA  C4DE F697          	movff	postinc2,seek_disk@filep
 38030   01CBFE  C4DD F698          	movff	postdec2,seek_disk@filep+1
 38031                           
 38032                           ;../src/io_dos.c: 64:  uint32_t sector;;../src/io_dos.c: 66:  if (cpm_drives[req_tbl.dis
      +                          k_drive].filep == ((void*)0)) return(-1);
 38033   01CC02  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38034   01CC04  0D04               	mullw	4
 38035   01CC06  0E4D               	movlw	low (_cpm_drives+2)
 38036   01CC08  24F3               	addwf	243,w,c
 38037   01CC0A  6ED9               	movwf	fsr2l,c
 38038   01CC0C  0E09               	movlw	high (_cpm_drives+2)
 38039   01CC0E  20F4               	addwfc	prodh,w,c
 38040   01CC10  6EDA               	movwf	fsr2h,c
 38041   01CC12  50DE               	movf	postinc2,w,c
 38042   01CC14  10DE               	iorwf	postinc2,w,c
 38043   01CC16  A4D8               	btfss	status,2,c
 38044   01CC18  EF10  F0E6         	goto	u32001
 38045   01CC1C  EF12  F0E6         	goto	u32000
 38046   01CC20                     u32001:
 38047   01CC20  EF17  F0E6         	goto	l23121
 38048   01CC24                     u32000:
 38049   01CC24                     l23119:
 38050   01CC24  0106               	movlb	6	; () banked
 38051   01CC26  698B               	setf	?_seek_disk& (0+255),b
 38052   01CC28  698C               	setf	(?_seek_disk+1)& (0+255),b
 38053   01CC2A  EF82  F0E6         	goto	l784
 38054   01CC2E                     l23121:
 38055                           
 38056                           ; BSR set to: 7
 38057                           ;../src/io_dos.c: 67:  sector = req_tbl.disk_track * cpm_drives[req_tbl.disk_drive].sect
      +                          ors + req_tbl.disk_sector - 1;
 38058   01CC2E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38059   01CC30  0D04               	mullw	4
 38060   01CC32  0E4B               	movlw	low _cpm_drives
 38061   01CC34  24F3               	addwf	243,w,c
 38062   01CC36  6ED9               	movwf	fsr2l,c
 38063   01CC38  0E09               	movlw	high _cpm_drives
 38064   01CC3A  20F4               	addwfc	prodh,w,c
 38065   01CC3C  6EDA               	movwf	fsr2h,c
 38066   01CC3E  C4DE F68D          	movff	postinc2,??_seek_disk
 38067   01CC42  C4DD F68E          	movff	postdec2,??_seek_disk+1
 38068   01CC46  0106               	movlb	6	; () banked
 38069   01CC48  518D               	movf	??_seek_disk& (0+255),w,b
 38070   01CC4A  0107               	movlb	7	; () banked
 38071   01CC4C  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 38072   01CC4E  C4F3 F68F          	movff	prodl,??_seek_disk+2
 38073   01CC52  C4F4 F690          	movff	prodh,??_seek_disk+3
 38074   01CC56  03D4               	mulwf	(_req_tbl+6)& (0+255),b
 38075   01CC58  50F3               	movf	prodl,w,c
 38076   01CC5A  0106               	movlb	6	; () banked
 38077   01CC5C  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 38078   01CC5E  518E               	movf	(??_seek_disk+1)& (0+255),w,b
 38079   01CC60  0107               	movlb	7	; () banked
 38080   01CC62  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 38081   01CC64  0106               	movlb	6	; () banked
 38082   01CC66  50F3               	movf	prodl,w,c
 38083   01CC68  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 38084   01CC6A  0107               	movlb	7	; () banked
 38085   01CC6C  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 38086   01CC6E  0106               	movlb	6	; () banked
 38087   01CC70  278F               	addwf	(??_seek_disk+2)& (0+255),f,b
 38088   01CC72  0107               	movlb	7	; () banked
 38089   01CC74  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 38090   01CC76  0106               	movlb	6	; () banked
 38091   01CC78  2390               	addwfc	(??_seek_disk+3)& (0+255),f,b
 38092   01CC7A  0EFF               	movlw	255
 38093   01CC7C  258F               	addwf	(??_seek_disk+2)& (0+255),w,b
 38094   01CC7E  6F91               	movwf	(??_seek_disk+4)& (0+255),b
 38095   01CC80  0EFF               	movlw	255
 38096   01CC82  2190               	addwfc	(??_seek_disk+3)& (0+255),w,b
 38097   01CC84  6F92               	movwf	(??_seek_disk+5)& (0+255),b
 38098   01CC86  C691  F693         	movff	??_seek_disk+4,seek_disk@sector
 38099   01CC8A  C692  F694         	movff	??_seek_disk+5,seek_disk@sector+1
 38100   01CC8E  6B95               	clrf	(seek_disk@sector+2)& (0+255),b
 38101   01CC90  6B96               	clrf	(seek_disk@sector+3)& (0+255),b
 38102   01CC92                     
 38103                           ; BSR set to: 6
 38104                           ;../src/io_dos.c: 69:  if ((fres = f_lseek(filep, sector * 128)) != FR_OK) {
 38105   01CC92  C697  F662         	movff	seek_disk@filep,f_lseek@fp
 38106   01CC96  C698  F663         	movff	seek_disk@filep+1,f_lseek@fp+1
 38107   01CC9A  C693  F68D         	movff	seek_disk@sector,??_seek_disk
 38108   01CC9E  C694  F68E         	movff	seek_disk@sector+1,??_seek_disk+1
 38109   01CCA2  C695  F68F         	movff	seek_disk@sector+2,??_seek_disk+2
 38110   01CCA6  C696  F690         	movff	seek_disk@sector+3,??_seek_disk+3
 38111   01CCAA  0E07               	movlw	7
 38112   01CCAC                     u32015:
 38113   01CCAC  90D8               	bcf	status,0,c
 38114   01CCAE  378D               	rlcf	??_seek_disk& (0+255),f,b
 38115   01CCB0  378E               	rlcf	(??_seek_disk+1)& (0+255),f,b
 38116   01CCB2  378F               	rlcf	(??_seek_disk+2)& (0+255),f,b
 38117   01CCB4  3790               	rlcf	(??_seek_disk+3)& (0+255),f,b
 38118   01CCB6  2EE8               	decfsz	wreg,f,c
 38119   01CCB8  EF56  F0E6         	goto	u32015
 38120   01CCBC  C68D  F664         	movff	??_seek_disk,f_lseek@ofs
 38121   01CCC0  C68E  F665         	movff	??_seek_disk+1,f_lseek@ofs+1
 38122   01CCC4  C68F  F666         	movff	??_seek_disk+2,f_lseek@ofs+2
 38123   01CCC8  C690  F667         	movff	??_seek_disk+3,f_lseek@ofs+3
 38124   01CCCC  ECDA  F08E         	call	_f_lseek	;wreg free
 38125   01CCD0  0106               	movlb	6	; () banked
 38126   01CCD2  6F99               	movwf	seek_disk@fres& (0+255),b
 38127   01CCD4  5199               	movf	seek_disk@fres& (0+255),w,b
 38128   01CCD6  B4D8               	btfsc	status,2,c
 38129   01CCD8  EF70  F0E6         	goto	u32021
 38130   01CCDC  EF72  F0E6         	goto	u32020
 38131   01CCE0                     u32021:
 38132   01CCE0  EF7E  F0E6         	goto	l23131
 38133   01CCE4                     u32020:
 38134   01CCE4                     
 38135                           ; BSR set to: 6
 38136                           ;../src/io_dos.c: 70:   printf("f_lseek(): ERROR %d\n\r", fres);
 38137   01CCE4  0E30               	movlw	low STR_34
 38138   01CCE6  0105               	movlb	5	; () banked
 38139   01CCE8  6FAD               	movwf	printf@fmt& (0+255),b
 38140   01CCEA  0EFC               	movlw	high STR_34
 38141   01CCEC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 38142   01CCEE  C699  F5AF         	movff	seek_disk@fres,?_printf+2
 38143   01CCF2  6BB0               	clrf	(?_printf+3)& (0+255),b
 38144   01CCF4  ECDA  F0FF         	call	_printf	;wreg free
 38145   01CCF8  EF12  F0E6         	goto	l23119
 38146   01CCFC                     l23131:
 38147                           
 38148                           ; BSR set to: 6
 38149                           ;../src/io_dos.c: 73:  return(0);
 38150   01CCFC  0E00               	movlw	0
 38151   01CCFE  6F8C               	movwf	(?_seek_disk+1)& (0+255),b
 38152   01CD00  0E00               	movlw	0
 38153   01CD02  6F8B               	movwf	?_seek_disk& (0+255),b
 38154   01CD04                     l784:
 38155                           
 38156                           ; BSR set to: 6
 38157   01CD04  0012               	return		;funcret
 38158   01CD06                     __end_of_seek_disk:
 38159                           	callstack 0
 38160                           
 38161 ;; *************** function _f_lseek *****************
 38162 ;; Defined at:
 38163 ;;		line 4435 in file "../fatfs/ff.c"
 38164 ;; Parameters:    Size  Location     Type
 38165 ;;  fp              2   98[BANK6 ] PTR struct .
 38166 ;;  ofs             4  100[BANK6 ] unsigned long 
 38167 ;; Auto vars:     Size  Location     Type
 38168 ;;  clst            4  135[BANK6 ] unsigned long 
 38169 ;;  bcs             4  129[BANK6 ] unsigned long 
 38170 ;;  nsect           4  124[BANK6 ] unsigned long 
 38171 ;;  ifptr           4  120[BANK6 ] unsigned long 
 38172 ;;  fs              2  133[BANK6 ] PTR struct .
 38173 ;;		 -> fs(564), NULL(0), 
 38174 ;;  res             1  128[BANK6 ] enum E597
 38175 ;; Return value:  Size  Location     Type
 38176 ;;                  1    wreg      enum E16851
 38177 ;; Registers used:
 38178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38179 ;; Tracked objects:
 38180 ;;		On entry : 0/0
 38181 ;;		On exit  : 0/0
 38182 ;;		Unchanged: 0/0
 38183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38184 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38185 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38186 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38187 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38188 ;;Total ram usage:       41 bytes
 38189 ;; Hardware stack levels used: 1
 38190 ;; Hardware stack levels required when called: 16
 38191 ;; This function calls:
 38192 ;;		___lldiv
 38193 ;;		_clst2sect
 38194 ;;		_create_chain
 38195 ;;		_disk_read
 38196 ;;		_disk_write
 38197 ;;		_get_fat
 38198 ;;		_validate
 38199 ;; This function is called by:
 38200 ;;		_seek_disk
 38201 ;; This function uses a non-reentrant model
 38202 ;;
 38203                           
 38204                           	psect	text105
 38205   011DB4                     __ptext105:
 38206                           	callstack 0
 38207   011DB4                     _f_lseek:
 38208                           	callstack 104
 38209   011DB4                     
 38210                           ;../fatfs/ff.c: 4436:  FIL* fp,;../fatfs/ff.c: 4437:  FSIZE_t ofs;../fatfs/ff.c: 4439: {
      +                          ;../fatfs/ff.c: 4440:  FRESULT res;;../fatfs/ff.c: 4441:  FATFS *fs;;../fatfs/ff.c: 4442
      +                          :  DWORD clst, bcs;;../fatfs/ff.c: 4443:  LBA_t nsect;;../fatfs/ff.c: 4444:  FSIZE_t ifp
      +                          tr;;../fatfs/ff.c: 4451:  res = validate(&fp->obj, &fs);
 38211   011DB4  C662  F5BE         	movff	f_lseek@fp,validate@obj
 38212   011DB8  C663  F5BF         	movff	f_lseek@fp+1,validate@obj+1
 38213   011DBC  0E85               	movlw	low f_lseek@fs
 38214   011DBE  0105               	movlb	5	; () banked
 38215   011DC0  6FC0               	movwf	validate@rfs& (0+255),b
 38216   011DC2  0E06               	movlw	high f_lseek@fs
 38217   011DC4  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 38218   011DC6  ECA3  F0E9         	call	_validate	;wreg free
 38219   011DCA  0106               	movlb	6	; () banked
 38220   011DCC  6F80               	movwf	f_lseek@res& (0+255),b
 38221   011DCE                     
 38222                           ; BSR set to: 6
 38223                           ;../fatfs/ff.c: 4452:  if (res == FR_OK) res = (FRESULT)fp->err;
 38224   011DCE  5180               	movf	f_lseek@res& (0+255),w,b
 38225   011DD0  A4D8               	btfss	status,2,c
 38226   011DD2  EFED  F08E         	goto	u31011
 38227   011DD6  EFEF  F08E         	goto	u31010
 38228   011DDA                     u31011:
 38229   011DDA  EFF7  F08E         	goto	l22571
 38230   011DDE                     u31010:
 38231   011DDE                     
 38232                           ; BSR set to: 6
 38233   011DDE  EE20 F00F          	lfsr	2,15
 38234   011DE2  5162               	movf	f_lseek@fp& (0+255),w,b
 38235   011DE4  26D9               	addwf	fsr2l,f,c
 38236   011DE6  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38237   011DE8  22DA               	addwfc	fsr2h,f,c
 38238   011DEA  50DF               	movf	indf2,w,c
 38239   011DEC  6F80               	movwf	f_lseek@res& (0+255),b
 38240   011DEE                     l22571:
 38241                           
 38242                           ; BSR set to: 6
 38243                           ;../fatfs/ff.c: 4458:  if (res != FR_OK) return res;
 38244   011DEE  5180               	movf	f_lseek@res& (0+255),w,b
 38245   011DF0  B4D8               	btfsc	status,2,c
 38246   011DF2  EFFD  F08E         	goto	u31021
 38247   011DF6  EFFF  F08E         	goto	u31020
 38248   011DFA                     u31021:
 38249   011DFA  EF02  F08F         	goto	l22577
 38250   011DFE                     u31020:
 38251   011DFE                     l22573:
 38252                           
 38253                           ; BSR set to: 6
 38254   011DFE  5180               	movf	f_lseek@res& (0+255),w,b
 38255   011E00  EFDA  F092         	goto	l2036
 38256   011E04                     l22577:
 38257                           
 38258                           ; BSR set to: 6
 38259                           ;../fatfs/ff.c: 4513:  {;../fatfs/ff.c: 4517:   if (ofs > fp->obj.objsize && (0 || !(fp-
      +                          >flag & 0x02))) {
 38260   011E04  EE20 F00A          	lfsr	2,10
 38261   011E08  5162               	movf	f_lseek@fp& (0+255),w,b
 38262   011E0A  26D9               	addwf	fsr2l,f,c
 38263   011E0C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38264   011E0E  22DA               	addwfc	fsr2h,f,c
 38265   011E10  5164               	movf	f_lseek@ofs& (0+255),w,b
 38266   011E12  5CDE               	subwf	postinc2,w,c
 38267   011E14  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38268   011E16  58DE               	subwfb	postinc2,w,c
 38269   011E18  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38270   011E1A  58DE               	subwfb	postinc2,w,c
 38271   011E1C  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38272   011E1E  58DE               	subwfb	postinc2,w,c
 38273   011E20  B0D8               	btfsc	status,0,c
 38274   011E22  EF15  F08F         	goto	u31031
 38275   011E26  EF17  F08F         	goto	u31030
 38276   011E2A                     u31031:
 38277   011E2A  EF32  F08F         	goto	l2037
 38278   011E2E                     u31030:
 38279   011E2E                     
 38280                           ; BSR set to: 6
 38281   011E2E  EE20 F00E          	lfsr	2,14
 38282   011E32  5162               	movf	f_lseek@fp& (0+255),w,b
 38283   011E34  26D9               	addwf	fsr2l,f,c
 38284   011E36  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38285   011E38  22DA               	addwfc	fsr2h,f,c
 38286   011E3A  B2DF               	btfsc	indf2,1,c
 38287   011E3C  EF22  F08F         	goto	u31041
 38288   011E40  EF24  F08F         	goto	u31040
 38289   011E44                     u31041:
 38290   011E44  EF32  F08F         	goto	l2037
 38291   011E48                     u31040:
 38292   011E48                     
 38293                           ; BSR set to: 6
 38294                           ;../fatfs/ff.c: 4518:    ofs = fp->obj.objsize;
 38295   011E48  EE20 F00A          	lfsr	2,10
 38296   011E4C  5162               	movf	f_lseek@fp& (0+255),w,b
 38297   011E4E  26D9               	addwf	fsr2l,f,c
 38298   011E50  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38299   011E52  22DA               	addwfc	fsr2h,f,c
 38300   011E54  C4DE F664          	movff	postinc2,f_lseek@ofs
 38301   011E58  C4DE F665          	movff	postinc2,f_lseek@ofs+1
 38302   011E5C  C4DE F666          	movff	postinc2,f_lseek@ofs+2
 38303   011E60  C4DE F667          	movff	postinc2,f_lseek@ofs+3
 38304   011E64                     l2037:
 38305                           
 38306                           ; BSR set to: 6
 38307                           ;../fatfs/ff.c: 4520:   ifptr = fp->fptr;
 38308   011E64  EE20 F010          	lfsr	2,16
 38309   011E68  5162               	movf	f_lseek@fp& (0+255),w,b
 38310   011E6A  26D9               	addwf	fsr2l,f,c
 38311   011E6C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38312   011E6E  22DA               	addwfc	fsr2h,f,c
 38313   011E70  C4DE F678          	movff	postinc2,f_lseek@ifptr
 38314   011E74  C4DE F679          	movff	postinc2,f_lseek@ifptr+1
 38315   011E78  C4DE F67A          	movff	postinc2,f_lseek@ifptr+2
 38316   011E7C  C4DE F67B          	movff	postinc2,f_lseek@ifptr+3
 38317                           
 38318                           ;../fatfs/ff.c: 4521:   fp->fptr = nsect = 0;
 38319   011E80  0E00               	movlw	0
 38320   011E82  6F7C               	movwf	f_lseek@nsect& (0+255),b
 38321   011E84  0E00               	movlw	0
 38322   011E86  6F7D               	movwf	(f_lseek@nsect+1)& (0+255),b
 38323   011E88  0E00               	movlw	0
 38324   011E8A  6F7E               	movwf	(f_lseek@nsect+2)& (0+255),b
 38325   011E8C  0E00               	movlw	0
 38326   011E8E  6F7F               	movwf	(f_lseek@nsect+3)& (0+255),b
 38327   011E90  EE20 F010          	lfsr	2,16
 38328   011E94  5162               	movf	f_lseek@fp& (0+255),w,b
 38329   011E96  26D9               	addwf	fsr2l,f,c
 38330   011E98  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38331   011E9A  22DA               	addwfc	fsr2h,f,c
 38332   011E9C  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 38333   011EA0  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 38334   011EA4  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 38335   011EA8  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 38336   011EAC                     
 38337                           ; BSR set to: 6
 38338                           ;../fatfs/ff.c: 4522:   if (ofs > 0) {
 38339   011EAC  5164               	movf	f_lseek@ofs& (0+255),w,b
 38340   011EAE  1165               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 38341   011EB0  1166               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 38342   011EB2  1167               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 38343   011EB4  B4D8               	btfsc	status,2,c
 38344   011EB6  EF5F  F08F         	goto	u31051
 38345   011EBA  EF61  F08F         	goto	u31050
 38346   011EBE                     u31051:
 38347   011EBE  EFE5  F091         	goto	l22681
 38348   011EC2                     u31050:
 38349   011EC2                     
 38350                           ; BSR set to: 6
 38351                           ;../fatfs/ff.c: 4523:    bcs = (DWORD)fs->csize * ((UINT)512);
 38352   011EC2  EE20 F00A          	lfsr	2,10
 38353   011EC6  5185               	movf	f_lseek@fs& (0+255),w,b
 38354   011EC8  26D9               	addwf	fsr2l,f,c
 38355   011ECA  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 38356   011ECC  22DA               	addwfc	fsr2h,f,c
 38357   011ECE  C4DE F668          	movff	postinc2,??_f_lseek
 38358   011ED2  C4DD F669          	movff	postdec2,??_f_lseek+1
 38359   011ED6  5168               	movf	??_f_lseek& (0+255),w,b
 38360   011ED8  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38361   011EDA  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 38362   011EDC  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38363   011EDE  6B6C               	clrf	(??_f_lseek+4)& (0+255),b
 38364   011EE0  6B6D               	clrf	(??_f_lseek+5)& (0+255),b
 38365   011EE2  0E09               	movlw	9
 38366   011EE4                     u31065:
 38367   011EE4  90D8               	bcf	status,0,c
 38368   011EE6  376A               	rlcf	(??_f_lseek+2)& (0+255),f,b
 38369   011EE8  376B               	rlcf	(??_f_lseek+3)& (0+255),f,b
 38370   011EEA  376C               	rlcf	(??_f_lseek+4)& (0+255),f,b
 38371   011EEC  376D               	rlcf	(??_f_lseek+5)& (0+255),f,b
 38372   011EEE  2EE8               	decfsz	wreg,f,c
 38373   011EF0  EF72  F08F         	goto	u31065
 38374   011EF4  C66A  F681         	movff	??_f_lseek+2,f_lseek@bcs
 38375   011EF8  C66B  F682         	movff	??_f_lseek+3,f_lseek@bcs+1
 38376   011EFC  C66C  F683         	movff	??_f_lseek+4,f_lseek@bcs+2
 38377   011F00  C66D  F684         	movff	??_f_lseek+5,f_lseek@bcs+3
 38378   011F04                     
 38379                           ; BSR set to: 6
 38380                           ;../fatfs/ff.c: 4524:    if (ifptr > 0 &&
 38381   011F04  5178               	movf	f_lseek@ifptr& (0+255),w,b
 38382   011F06  1179               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 38383   011F08  117A               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 38384   011F0A  117B               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 38385   011F0C  B4D8               	btfsc	status,2,c
 38386   011F0E  EF8B  F08F         	goto	u31071
 38387   011F12  EF8D  F08F         	goto	u31070
 38388   011F16                     u31071:
 38389   011F16  EF2A  F090         	goto	l22593
 38390   011F1A                     u31070:
 38391   011F1A                     
 38392                           ; BSR set to: 6
 38393   011F1A  0EFF               	movlw	255
 38394   011F1C  2564               	addwf	f_lseek@ofs& (0+255),w,b
 38395   011F1E  6E04               	movwf	___lldiv@dividend^(0+1280),c
 38396   011F20  0EFF               	movlw	255
 38397   011F22  2165               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 38398   011F24  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38399   011F26  0EFF               	movlw	255
 38400   011F28  2166               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 38401   011F2A  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38402   011F2C  0EFF               	movlw	255
 38403   011F2E  2167               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 38404   011F30  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38405   011F32  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 38406   011F36  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 38407   011F3A  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 38408   011F3E  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 38409   011F42  EC7E  F0F5         	call	___lldiv	;wreg free
 38410   011F46  C504  F668         	movff	?___lldiv,??_f_lseek
 38411   011F4A  C505  F669         	movff	?___lldiv+1,??_f_lseek+1
 38412   011F4E  C506  F66A         	movff	?___lldiv+2,??_f_lseek+2
 38413   011F52  C507  F66B         	movff	?___lldiv+3,??_f_lseek+3
 38414   011F56  0EFF               	movlw	255
 38415   011F58  0106               	movlb	6	; () banked
 38416   011F5A  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 38417   011F5C  6E04               	movwf	___lldiv@dividend^(0+1280),c
 38418   011F5E  0EFF               	movlw	255
 38419   011F60  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 38420   011F62  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38421   011F64  0EFF               	movlw	255
 38422   011F66  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 38423   011F68  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38424   011F6A  0EFF               	movlw	255
 38425   011F6C  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 38426   011F6E  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38427   011F70  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 38428   011F74  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 38429   011F78  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 38430   011F7C  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 38431   011F80  EC7E  F0F5         	call	___lldiv	;wreg free
 38432   011F84  5004               	movf	?___lldiv^(0+1280),w,c
 38433   011F86  0106               	movlb	6	; () banked
 38434   011F88  5D68               	subwf	??_f_lseek& (0+255),w,b
 38435   011F8A  5005               	movf	(?___lldiv+1)^(0+1280),w,c
 38436   011F8C  5969               	subwfb	(??_f_lseek+1)& (0+255),w,b
 38437   011F8E  5006               	movf	(?___lldiv+2)^(0+1280),w,c
 38438   011F90  596A               	subwfb	(??_f_lseek+2)& (0+255),w,b
 38439   011F92  5007               	movf	(?___lldiv+3)^(0+1280),w,c
 38440   011F94  596B               	subwfb	(??_f_lseek+3)& (0+255),w,b
 38441   011F96  A0D8               	btfss	status,0,c
 38442   011F98  EFD0  F08F         	goto	u31081
 38443   011F9C  EFD2  F08F         	goto	u31080
 38444   011FA0                     u31081:
 38445   011FA0  EF2A  F090         	goto	l22593
 38446   011FA4                     u31080:
 38447   011FA4                     
 38448                           ; BSR set to: 6
 38449                           ;../fatfs/ff.c: 4525:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;../fatfs/ff.c: 4526:  
      +                             fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 38450   011FA4  0EFF               	movlw	255
 38451   011FA6  2581               	addwf	f_lseek@bcs& (0+255),w,b
 38452   011FA8  6F68               	movwf	??_f_lseek& (0+255),b
 38453   011FAA  0EFF               	movlw	255
 38454   011FAC  2182               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 38455   011FAE  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 38456   011FB0  0EFF               	movlw	255
 38457   011FB2  2183               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 38458   011FB4  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38459   011FB6  0EFF               	movlw	255
 38460   011FB8  2184               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 38461   011FBA  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38462   011FBC  1D68               	comf	??_f_lseek& (0+255),w,b
 38463   011FBE  6F6C               	movwf	(??_f_lseek+4)& (0+255),b
 38464   011FC0  1D69               	comf	(??_f_lseek+1)& (0+255),w,b
 38465   011FC2  6F6D               	movwf	(??_f_lseek+5)& (0+255),b
 38466   011FC4  1D6A               	comf	(??_f_lseek+2)& (0+255),w,b
 38467   011FC6  6F6E               	movwf	(??_f_lseek+6)& (0+255),b
 38468   011FC8  1D6B               	comf	(??_f_lseek+3)& (0+255),w,b
 38469   011FCA  6F6F               	movwf	(??_f_lseek+7)& (0+255),b
 38470   011FCC  0EFF               	movlw	255
 38471   011FCE  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 38472   011FD0  6F70               	movwf	(??_f_lseek+8)& (0+255),b
 38473   011FD2  0EFF               	movlw	255
 38474   011FD4  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 38475   011FD6  6F71               	movwf	(??_f_lseek+9)& (0+255),b
 38476   011FD8  0EFF               	movlw	255
 38477   011FDA  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 38478   011FDC  6F72               	movwf	(??_f_lseek+10)& (0+255),b
 38479   011FDE  0EFF               	movlw	255
 38480   011FE0  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 38481   011FE2  6F73               	movwf	(??_f_lseek+11)& (0+255),b
 38482   011FE4  516C               	movf	(??_f_lseek+4)& (0+255),w,b
 38483   011FE6  1570               	andwf	(??_f_lseek+8)& (0+255),w,b
 38484   011FE8  6F74               	movwf	(??_f_lseek+12)& (0+255),b
 38485   011FEA  516D               	movf	(??_f_lseek+5)& (0+255),w,b
 38486   011FEC  1571               	andwf	(??_f_lseek+9)& (0+255),w,b
 38487   011FEE  6F75               	movwf	(??_f_lseek+13)& (0+255),b
 38488   011FF0  516E               	movf	(??_f_lseek+6)& (0+255),w,b
 38489   011FF2  1572               	andwf	(??_f_lseek+10)& (0+255),w,b
 38490   011FF4  6F76               	movwf	(??_f_lseek+14)& (0+255),b
 38491   011FF6  516F               	movf	(??_f_lseek+7)& (0+255),w,b
 38492   011FF8  1573               	andwf	(??_f_lseek+11)& (0+255),w,b
 38493   011FFA  6F77               	movwf	(??_f_lseek+15)& (0+255),b
 38494   011FFC  EE20 F010          	lfsr	2,16
 38495   012000  5162               	movf	f_lseek@fp& (0+255),w,b
 38496   012002  26D9               	addwf	fsr2l,f,c
 38497   012004  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38498   012006  22DA               	addwfc	fsr2h,f,c
 38499   012008  C674  F4DE         	movff	??_f_lseek+12,postinc2
 38500   01200C  C675  F4DE         	movff	??_f_lseek+13,postinc2
 38501   012010  C676  F4DE         	movff	??_f_lseek+14,postinc2
 38502   012014  C677  F4DE         	movff	??_f_lseek+15,postinc2
 38503                           
 38504                           ;../fatfs/ff.c: 4527:     ofs -= fp->fptr;
 38505   012018  EE20 F010          	lfsr	2,16
 38506   01201C  5162               	movf	f_lseek@fp& (0+255),w,b
 38507   01201E  26D9               	addwf	fsr2l,f,c
 38508   012020  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38509   012022  22DA               	addwfc	fsr2h,f,c
 38510   012024  50DE               	movf	postinc2,w,c
 38511   012026  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 38512   012028  50DE               	movf	postinc2,w,c
 38513   01202A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 38514   01202C  50DE               	movf	postinc2,w,c
 38515   01202E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 38516   012030  50DD               	movf	postdec2,w,c
 38517   012032  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 38518                           
 38519                           ;../fatfs/ff.c: 4528:     clst = fp->clust;
 38520   012034  EE20 F014          	lfsr	2,20
 38521   012038  5162               	movf	f_lseek@fp& (0+255),w,b
 38522   01203A  26D9               	addwf	fsr2l,f,c
 38523   01203C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38524   01203E  22DA               	addwfc	fsr2h,f,c
 38525   012040  C4DE F687          	movff	postinc2,f_lseek@clst
 38526   012044  C4DE F688          	movff	postinc2,f_lseek@clst+1
 38527   012048  C4DE F689          	movff	postinc2,f_lseek@clst+2
 38528   01204C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 38529                           
 38530                           ;../fatfs/ff.c: 4529:    } else {
 38531   012050  EFA5  F090         	goto	l22617
 38532   012054                     l22593:
 38533                           
 38534                           ; BSR set to: 6
 38535                           ;../fatfs/ff.c: 4530:     clst = fp->obj.sclust;
 38536   012054  EE20 F006          	lfsr	2,6
 38537   012058  5162               	movf	f_lseek@fp& (0+255),w,b
 38538   01205A  26D9               	addwf	fsr2l,f,c
 38539   01205C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38540   01205E  22DA               	addwfc	fsr2h,f,c
 38541   012060  C4DE F687          	movff	postinc2,f_lseek@clst
 38542   012064  C4DE F688          	movff	postinc2,f_lseek@clst+1
 38543   012068  C4DE F689          	movff	postinc2,f_lseek@clst+2
 38544   01206C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 38545   012070                     
 38546                           ; BSR set to: 6
 38547                           ;../fatfs/ff.c: 4532:     if (clst == 0) {
 38548   012070  5187               	movf	f_lseek@clst& (0+255),w,b
 38549   012072  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38550   012074  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38551   012076  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38552   012078  A4D8               	btfss	status,2,c
 38553   01207A  EF41  F090         	goto	u31091
 38554   01207E  EF43  F090         	goto	u31090
 38555   012082                     u31091:
 38556   012082  EF97  F090         	goto	l2043
 38557   012086                     u31090:
 38558   012086                     
 38559                           ; BSR set to: 6
 38560                           ;../fatfs/ff.c: 4533:      clst = create_chain(&fp->obj, 0);
 38561   012086  C662  F645         	movff	f_lseek@fp,create_chain@obj
 38562   01208A  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 38563   01208E  0E00               	movlw	0
 38564   012090  6F47               	movwf	create_chain@clst& (0+255),b
 38565   012092  0E00               	movlw	0
 38566   012094  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 38567   012096  0E00               	movlw	0
 38568   012098  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 38569   01209A  0E00               	movlw	0
 38570   01209C  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 38571   01209E  EC7C  F09D         	call	_create_chain	;wreg free
 38572   0120A2  C645  F687         	movff	?_create_chain,f_lseek@clst
 38573   0120A6  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 38574   0120AA  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 38575   0120AE  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 38576   0120B2                     
 38577                           ;../fatfs/ff.c: 4534:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_
      +                          ERR; };
 38578   0120B2  0106               	movlb	6	; () banked
 38579   0120B4  0587               	decf	f_lseek@clst& (0+255),w,b
 38580   0120B6  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38581   0120B8  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38582   0120BA  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38583   0120BC  A4D8               	btfss	status,2,c
 38584   0120BE  EF63  F090         	goto	u31101
 38585   0120C2  EF65  F090         	goto	u31100
 38586   0120C6                     u31101:
 38587   0120C6  EF70  F090         	goto	l22607
 38588   0120CA                     u31100:
 38589   0120CA                     
 38590                           ; BSR set to: 6
 38591   0120CA  EE20 F00F          	lfsr	2,15
 38592   0120CE  5162               	movf	f_lseek@fp& (0+255),w,b
 38593   0120D0  26D9               	addwf	fsr2l,f,c
 38594   0120D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38595   0120D4  22DA               	addwfc	fsr2h,f,c
 38596   0120D6  0E02               	movlw	2
 38597   0120D8  6EDF               	movwf	indf2,c
 38598   0120DA                     l22603:
 38599                           
 38600                           ; BSR set to: 6
 38601   0120DA  0E02               	movlw	2
 38602   0120DC  EFDA  F092         	goto	l2036
 38603   0120E0                     l22607:
 38604                           
 38605                           ; BSR set to: 6
 38606                           ;../fatfs/ff.c: 4535:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 38607   0120E0  2987               	incf	f_lseek@clst& (0+255),w,b
 38608   0120E2  E10A               	bnz	u31111
 38609   0120E4  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 38610   0120E6  E108               	bnz	u31111
 38611   0120E8  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 38612   0120EA  E106               	bnz	u31111
 38613   0120EC  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 38614   0120EE  A4D8               	btfss	status,2,c
 38615   0120F0  EF7C  F090         	goto	u31111
 38616   0120F4  EF7E  F090         	goto	u31110
 38617   0120F8                     u31111:
 38618   0120F8  EF89  F090         	goto	l22615
 38619   0120FC                     u31110:
 38620   0120FC                     
 38621                           ; BSR set to: 6
 38622   0120FC  EE20 F00F          	lfsr	2,15
 38623   012100  5162               	movf	f_lseek@fp& (0+255),w,b
 38624   012102  26D9               	addwf	fsr2l,f,c
 38625   012104  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38626   012106  22DA               	addwfc	fsr2h,f,c
 38627   012108  0E01               	movlw	1
 38628   01210A  6EDF               	movwf	indf2,c
 38629   01210C                     l22611:
 38630                           
 38631                           ; BSR set to: 6
 38632   01210C  0E01               	movlw	1
 38633   01210E  EFDA  F092         	goto	l2036
 38634   012112                     l22615:
 38635                           
 38636                           ; BSR set to: 6
 38637                           ;../fatfs/ff.c: 4536:      fp->obj.sclust = clst;
 38638   012112  EE20 F006          	lfsr	2,6
 38639   012116  5162               	movf	f_lseek@fp& (0+255),w,b
 38640   012118  26D9               	addwf	fsr2l,f,c
 38641   01211A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38642   01211C  22DA               	addwfc	fsr2h,f,c
 38643   01211E  C687  F4DE         	movff	f_lseek@clst,postinc2
 38644   012122  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38645   012126  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38646   01212A  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38647   01212E                     l2043:
 38648                           
 38649                           ; BSR set to: 6
 38650                           ;../fatfs/ff.c: 4539:     fp->clust = clst;
 38651   01212E  EE20 F014          	lfsr	2,20
 38652   012132  5162               	movf	f_lseek@fp& (0+255),w,b
 38653   012134  26D9               	addwf	fsr2l,f,c
 38654   012136  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38655   012138  22DA               	addwfc	fsr2h,f,c
 38656   01213A  C687  F4DE         	movff	f_lseek@clst,postinc2
 38657   01213E  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38658   012142  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38659   012146  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38660   01214A                     l22617:
 38661                           
 38662                           ; BSR set to: 6
 38663                           ;../fatfs/ff.c: 4541:    if (clst != 0) {
 38664   01214A  5187               	movf	f_lseek@clst& (0+255),w,b
 38665   01214C  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38666   01214E  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38667   012150  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38668   012152  B4D8               	btfsc	status,2,c
 38669   012154  EFAE  F090         	goto	u31121
 38670   012158  EFB0  F090         	goto	u31120
 38671   01215C                     u31121:
 38672   01215C  EFE5  F091         	goto	l22681
 38673   012160                     u31120:
 38674   012160  EF6A  F091         	goto	l22663
 38675   012164                     l22621:
 38676                           
 38677                           ; BSR set to: 6
 38678                           ;../fatfs/ff.c: 4543:      ofs -= bcs; fp->fptr += bcs;
 38679   012164  5181               	movf	f_lseek@bcs& (0+255),w,b
 38680   012166  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 38681   012168  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 38682   01216A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 38683   01216C  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 38684   01216E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 38685   012170  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 38686   012172  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 38687   012174                     
 38688                           ; BSR set to: 6
 38689   012174  EE20 F010          	lfsr	2,16
 38690   012178  5162               	movf	f_lseek@fp& (0+255),w,b
 38691   01217A  26D9               	addwf	fsr2l,f,c
 38692   01217C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38693   01217E  22DA               	addwfc	fsr2h,f,c
 38694   012180  5181               	movf	f_lseek@bcs& (0+255),w,b
 38695   012182  26DE               	addwf	postinc2,f,c
 38696   012184  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 38697   012186  22DE               	addwfc	postinc2,f,c
 38698   012188  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 38699   01218A  22DE               	addwfc	postinc2,f,c
 38700   01218C  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 38701   01218E  22DE               	addwfc	postinc2,f,c
 38702   012190                     
 38703                           ; BSR set to: 6
 38704                           ;../fatfs/ff.c: 4545:      if (fp->flag & 0x02) {
 38705   012190  EE20 F00E          	lfsr	2,14
 38706   012194  5162               	movf	f_lseek@fp& (0+255),w,b
 38707   012196  26D9               	addwf	fsr2l,f,c
 38708   012198  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38709   01219A  22DA               	addwfc	fsr2h,f,c
 38710   01219C  A2DF               	btfss	indf2,1,c
 38711   01219E  EFD3  F090         	goto	u31131
 38712   0121A2  EFD5  F090         	goto	u31130
 38713   0121A6                     u31131:
 38714   0121A6  EF01  F091         	goto	l22641
 38715   0121AA                     u31130:
 38716   0121AA                     
 38717                           ; BSR set to: 6
 38718                           ;../fatfs/ff.c: 4550:       clst = create_chain(&fp->obj, clst);
 38719   0121AA  C662  F645         	movff	f_lseek@fp,create_chain@obj
 38720   0121AE  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 38721   0121B2  C687  F647         	movff	f_lseek@clst,create_chain@clst
 38722   0121B6  C688  F648         	movff	f_lseek@clst+1,create_chain@clst+1
 38723   0121BA  C689  F649         	movff	f_lseek@clst+2,create_chain@clst+2
 38724   0121BE  C68A  F64A         	movff	f_lseek@clst+3,create_chain@clst+3
 38725   0121C2  EC7C  F09D         	call	_create_chain	;wreg free
 38726   0121C6  C645  F687         	movff	?_create_chain,f_lseek@clst
 38727   0121CA  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 38728   0121CE  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 38729   0121D2  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 38730   0121D6                     
 38731                           ;../fatfs/ff.c: 4551:       if (clst == 0) {
 38732   0121D6  0106               	movlb	6	; () banked
 38733   0121D8  5187               	movf	f_lseek@clst& (0+255),w,b
 38734   0121DA  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38735   0121DC  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38736   0121DE  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38737   0121E0  A4D8               	btfss	status,2,c
 38738   0121E2  EFF5  F090         	goto	u31141
 38739   0121E6  EFF7  F090         	goto	u31140
 38740   0121EA                     u31141:
 38741   0121EA  EF17  F091         	goto	l22643
 38742   0121EE                     u31140:
 38743   0121EE                     
 38744                           ; BSR set to: 6
 38745                           ;../fatfs/ff.c: 4552:        ofs = 0; break;
 38746   0121EE  0E00               	movlw	0
 38747   0121F0  6F64               	movwf	f_lseek@ofs& (0+255),b
 38748   0121F2  0E00               	movlw	0
 38749   0121F4  6F65               	movwf	(f_lseek@ofs+1)& (0+255),b
 38750   0121F6  0E00               	movlw	0
 38751   0121F8  6F66               	movwf	(f_lseek@ofs+2)& (0+255),b
 38752   0121FA  0E00               	movlw	0
 38753   0121FC  6F67               	movwf	(f_lseek@ofs+3)& (0+255),b
 38754   0121FE  EF79  F091         	goto	l22665
 38755   012202                     l22641:
 38756                           
 38757                           ; BSR set to: 6
 38758                           ;../fatfs/ff.c: 4556:      {;../fatfs/ff.c: 4557:       clst = get_fat(&fp->obj, clst);
 38759   012202  C662  F624         	movff	f_lseek@fp,get_fat@obj
 38760   012206  C663  F625         	movff	f_lseek@fp+1,get_fat@obj+1
 38761   01220A  C687  F626         	movff	f_lseek@clst,get_fat@clst
 38762   01220E  C688  F627         	movff	f_lseek@clst+1,get_fat@clst+1
 38763   012212  C689  F628         	movff	f_lseek@clst+2,get_fat@clst+2
 38764   012216  C68A  F629         	movff	f_lseek@clst+3,get_fat@clst+3
 38765   01221A  ECF7  F0B4         	call	_get_fat	;wreg free
 38766   01221E  C624  F687         	movff	?_get_fat,f_lseek@clst
 38767   012222  C625  F688         	movff	?_get_fat+1,f_lseek@clst+1
 38768   012226  C626  F689         	movff	?_get_fat+2,f_lseek@clst+2
 38769   01222A  C627  F68A         	movff	?_get_fat+3,f_lseek@clst+3
 38770   01222E                     l22643:
 38771                           
 38772                           ;../fatfs/ff.c: 4559:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 38773   01222E  0106               	movlb	6	; () banked
 38774   012230  2987               	incf	f_lseek@clst& (0+255),w,b
 38775   012232  E10A               	bnz	u31151
 38776   012234  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 38777   012236  E108               	bnz	u31151
 38778   012238  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 38779   01223A  E106               	bnz	u31151
 38780   01223C  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 38781   01223E  A4D8               	btfss	status,2,c
 38782   012240  EF24  F091         	goto	u31151
 38783   012244  EF26  F091         	goto	u31150
 38784   012248                     u31151:
 38785   012248  EF30  F091         	goto	l22651
 38786   01224C                     u31150:
 38787   01224C                     
 38788                           ; BSR set to: 6
 38789   01224C  EE20 F00F          	lfsr	2,15
 38790   012250  5162               	movf	f_lseek@fp& (0+255),w,b
 38791   012252  26D9               	addwf	fsr2l,f,c
 38792   012254  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38793   012256  22DA               	addwfc	fsr2h,f,c
 38794   012258  0E01               	movlw	1
 38795   01225A  6EDF               	movwf	indf2,c
 38796   01225C  EF86  F090         	goto	l22611
 38797   012260                     l22651:
 38798                           
 38799                           ; BSR set to: 6
 38800                           ;../fatfs/ff.c: 4560:      if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_
      +                          INT_ERR); return FR_INT_ERR; };
 38801   012260  518A               	movf	(f_lseek@clst+3)& (0+255),w,b
 38802   012262  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38803   012264  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38804   012266  E109               	bnz	u31160
 38805   012268  0E02               	movlw	2
 38806   01226A  5D87               	subwf	f_lseek@clst& (0+255),w,b
 38807   01226C  A0D8               	btfss	status,0,c
 38808   01226E  EF3B  F091         	goto	u31161
 38809   012272  EF3D  F091         	goto	u31160
 38810   012276                     u31161:
 38811   012276  EF52  F091         	goto	l22655
 38812   01227A                     u31160:
 38813   01227A                     
 38814                           ; BSR set to: 6
 38815   01227A  EE20 F018          	lfsr	2,24
 38816   01227E  5185               	movf	f_lseek@fs& (0+255),w,b
 38817   012280  26D9               	addwf	fsr2l,f,c
 38818   012282  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 38819   012284  22DA               	addwfc	fsr2h,f,c
 38820   012286  50DE               	movf	postinc2,w,c
 38821   012288  5D87               	subwf	f_lseek@clst& (0+255),w,b
 38822   01228A  50DE               	movf	postinc2,w,c
 38823   01228C  5988               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 38824   01228E  50DE               	movf	postinc2,w,c
 38825   012290  5989               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 38826   012292  50DE               	movf	postinc2,w,c
 38827   012294  598A               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 38828   012296  A0D8               	btfss	status,0,c
 38829   012298  EF50  F091         	goto	u31171
 38830   01229C  EF52  F091         	goto	u31170
 38831   0122A0                     u31171:
 38832   0122A0  EF5C  F091         	goto	l22661
 38833   0122A4                     u31170:
 38834   0122A4                     l22655:
 38835                           
 38836                           ; BSR set to: 6
 38837   0122A4  EE20 F00F          	lfsr	2,15
 38838   0122A8  5162               	movf	f_lseek@fp& (0+255),w,b
 38839   0122AA  26D9               	addwf	fsr2l,f,c
 38840   0122AC  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38841   0122AE  22DA               	addwfc	fsr2h,f,c
 38842   0122B0  0E02               	movlw	2
 38843   0122B2  6EDF               	movwf	indf2,c
 38844   0122B4  EF6D  F090         	goto	l22603
 38845   0122B8                     l22661:
 38846                           
 38847                           ; BSR set to: 6
 38848                           ;../fatfs/ff.c: 4561:      fp->clust = clst;
 38849   0122B8  EE20 F014          	lfsr	2,20
 38850   0122BC  5162               	movf	f_lseek@fp& (0+255),w,b
 38851   0122BE  26D9               	addwf	fsr2l,f,c
 38852   0122C0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38853   0122C2  22DA               	addwfc	fsr2h,f,c
 38854   0122C4  C687  F4DE         	movff	f_lseek@clst,postinc2
 38855   0122C8  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38856   0122CC  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38857   0122D0  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38858   0122D4                     l22663:
 38859                           
 38860                           ; BSR set to: 6
 38861                           ;../fatfs/ff.c: 4542:     while (ofs > bcs) {
 38862   0122D4  5164               	movf	f_lseek@ofs& (0+255),w,b
 38863   0122D6  5D81               	subwf	f_lseek@bcs& (0+255),w,b
 38864   0122D8  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38865   0122DA  5982               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 38866   0122DC  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38867   0122DE  5983               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 38868   0122E0  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38869   0122E2  5984               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 38870   0122E4  A0D8               	btfss	status,0,c
 38871   0122E6  EF77  F091         	goto	u31181
 38872   0122EA  EF79  F091         	goto	u31180
 38873   0122EE                     u31181:
 38874   0122EE  EFB2  F090         	goto	l22621
 38875   0122F2                     u31180:
 38876   0122F2                     l22665:
 38877                           
 38878                           ; BSR set to: 6
 38879                           ;../fatfs/ff.c: 4563:     fp->fptr += ofs;
 38880   0122F2  EE20 F010          	lfsr	2,16
 38881   0122F6  5162               	movf	f_lseek@fp& (0+255),w,b
 38882   0122F8  26D9               	addwf	fsr2l,f,c
 38883   0122FA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38884   0122FC  22DA               	addwfc	fsr2h,f,c
 38885   0122FE  5164               	movf	f_lseek@ofs& (0+255),w,b
 38886   012300  26DE               	addwf	postinc2,f,c
 38887   012302  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38888   012304  22DE               	addwfc	postinc2,f,c
 38889   012306  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38890   012308  22DE               	addwfc	postinc2,f,c
 38891   01230A  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38892   01230C  22DE               	addwfc	postinc2,f,c
 38893   01230E                     
 38894                           ; BSR set to: 6
 38895                           ;../fatfs/ff.c: 4564:     if (ofs % ((UINT)512)) {
 38896   01230E  0EFF               	movlw	255
 38897   012310  1564               	andwf	f_lseek@ofs& (0+255),w,b
 38898   012312  6F68               	movwf	??_f_lseek& (0+255),b
 38899   012314  0E01               	movlw	1
 38900   012316  1565               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 38901   012318  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 38902   01231A  0E00               	movlw	0
 38903   01231C  1566               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 38904   01231E  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38905   012320  0E00               	movlw	0
 38906   012322  1567               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 38907   012324  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38908   012326  5168               	movf	??_f_lseek& (0+255),w,b
 38909   012328  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 38910   01232A  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 38911   01232C  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 38912   01232E  B4D8               	btfsc	status,2,c
 38913   012330  EF9C  F091         	goto	u31191
 38914   012334  EF9E  F091         	goto	u31190
 38915   012338                     u31191:
 38916   012338  EFE5  F091         	goto	l22681
 38917   01233C                     u31190:
 38918   01233C                     
 38919                           ; BSR set to: 6
 38920                           ;../fatfs/ff.c: 4565:      nsect = clst2sect(fs, clst);
 38921   01233C  C685  F510         	movff	f_lseek@fs,clst2sect@fs
 38922   012340  C686  F511         	movff	f_lseek@fs+1,clst2sect@fs+1
 38923   012344  C687  F512         	movff	f_lseek@clst,clst2sect@clst
 38924   012348  C688  F513         	movff	f_lseek@clst+1,clst2sect@clst+1
 38925   01234C  C689  F514         	movff	f_lseek@clst+2,clst2sect@clst+2
 38926   012350  C68A  F515         	movff	f_lseek@clst+3,clst2sect@clst+3
 38927   012354  EC7A  F0F0         	call	_clst2sect	;wreg free
 38928   012358  C510  F67C         	movff	?_clst2sect,f_lseek@nsect
 38929   01235C  C511  F67D         	movff	?_clst2sect+1,f_lseek@nsect+1
 38930   012360  C512  F67E         	movff	?_clst2sect+2,f_lseek@nsect+2
 38931   012364  C513  F67F         	movff	?_clst2sect+3,f_lseek@nsect+3
 38932   012368                     
 38933                           ;../fatfs/ff.c: 4566:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT
      +                          _ERR; };
 38934   012368  0106               	movlb	6	; () banked
 38935   01236A  517C               	movf	f_lseek@nsect& (0+255),w,b
 38936   01236C  117D               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 38937   01236E  117E               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 38938   012370  117F               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 38939   012372  A4D8               	btfss	status,2,c
 38940   012374  EFBE  F091         	goto	u31201
 38941   012378  EFC0  F091         	goto	u31200
 38942   01237C                     u31201:
 38943   01237C  EFCA  F091         	goto	l22679
 38944   012380                     u31200:
 38945   012380                     
 38946                           ; BSR set to: 6
 38947   012380  EE20 F00F          	lfsr	2,15
 38948   012384  5162               	movf	f_lseek@fp& (0+255),w,b
 38949   012386  26D9               	addwf	fsr2l,f,c
 38950   012388  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38951   01238A  22DA               	addwfc	fsr2h,f,c
 38952   01238C  0E02               	movlw	2
 38953   01238E  6EDF               	movwf	indf2,c
 38954   012390  EF6D  F090         	goto	l22603
 38955   012394                     l22679:
 38956                           
 38957                           ; BSR set to: 6
 38958                           ;../fatfs/ff.c: 4567:      nsect += (DWORD)(ofs / ((UINT)512));
 38959   012394  C664  F668         	movff	f_lseek@ofs,??_f_lseek
 38960   012398  C665  F669         	movff	f_lseek@ofs+1,??_f_lseek+1
 38961   01239C  C666  F66A         	movff	f_lseek@ofs+2,??_f_lseek+2
 38962   0123A0  C667  F66B         	movff	f_lseek@ofs+3,??_f_lseek+3
 38963   0123A4  0E0A               	movlw	10
 38964   0123A6  EFDA  F091         	goto	u31210
 38965   0123AA                     u31215:
 38966   0123AA  90D8               	bcf	status,0,c
 38967   0123AC  336B               	rrcf	(??_f_lseek+3)& (0+255),f,b
 38968   0123AE  336A               	rrcf	(??_f_lseek+2)& (0+255),f,b
 38969   0123B0  3369               	rrcf	(??_f_lseek+1)& (0+255),f,b
 38970   0123B2  3368               	rrcf	??_f_lseek& (0+255),f,b
 38971   0123B4                     u31210:
 38972   0123B4  2EE8               	decfsz	wreg,f,c
 38973   0123B6  EFD5  F091         	goto	u31215
 38974   0123BA  5168               	movf	??_f_lseek& (0+255),w,b
 38975   0123BC  277C               	addwf	f_lseek@nsect& (0+255),f,b
 38976   0123BE  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 38977   0123C0  237D               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 38978   0123C2  516A               	movf	(??_f_lseek+2)& (0+255),w,b
 38979   0123C4  237E               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 38980   0123C6  516B               	movf	(??_f_lseek+3)& (0+255),w,b
 38981   0123C8  237F               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 38982   0123CA                     l22681:
 38983                           
 38984                           ; BSR set to: 6
 38985   0123CA  EE20 F010          	lfsr	2,16
 38986   0123CE  5162               	movf	f_lseek@fp& (0+255),w,b
 38987   0123D0  26D9               	addwf	fsr2l,f,c
 38988   0123D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38989   0123D4  22DA               	addwfc	fsr2h,f,c
 38990   0123D6  EE10 F00A          	lfsr	1,10
 38991   0123DA  5162               	movf	f_lseek@fp& (0+255),w,b
 38992   0123DC  26E1               	addwf	fsr1l,f,c
 38993   0123DE  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38994   0123E0  22E2               	addwfc	fsr1h,f,c
 38995   0123E2  50DE               	movf	postinc2,w,c
 38996   0123E4  5CE6               	subwf	postinc1,w,c
 38997   0123E6  50DE               	movf	postinc2,w,c
 38998   0123E8  58E6               	subwfb	postinc1,w,c
 38999   0123EA  50DE               	movf	postinc2,w,c
 39000   0123EC  58E6               	subwfb	postinc1,w,c
 39001   0123EE  50DE               	movf	postinc2,w,c
 39002   0123F0  58E6               	subwfb	postinc1,w,c
 39003   0123F2  B0D8               	btfsc	status,0,c
 39004   0123F4  EFFE  F091         	goto	u31221
 39005   0123F8  EF00  F092         	goto	u31220
 39006   0123FC                     u31221:
 39007   0123FC  EF1C  F092         	goto	l22687
 39008   012400                     u31220:
 39009   012400                     
 39010                           ; BSR set to: 6
 39011                           ;../fatfs/ff.c: 4572:    fp->obj.objsize = fp->fptr;
 39012   012400  EE20 F010          	lfsr	2,16
 39013   012404  5162               	movf	f_lseek@fp& (0+255),w,b
 39014   012406  26D9               	addwf	fsr2l,f,c
 39015   012408  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39016   01240A  22DA               	addwfc	fsr2h,f,c
 39017   01240C  EE10 F00A          	lfsr	1,10
 39018   012410  5162               	movf	f_lseek@fp& (0+255),w,b
 39019   012412  26E1               	addwf	fsr1l,f,c
 39020   012414  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39021   012416  22E2               	addwfc	fsr1h,f,c
 39022   012418  C4DE F4E6          	movff	postinc2,postinc1
 39023   01241C  C4DE F4E6          	movff	postinc2,postinc1
 39024   012420  C4DE F4E6          	movff	postinc2,postinc1
 39025   012424  C4DE F4E6          	movff	postinc2,postinc1
 39026   012428                     
 39027                           ; BSR set to: 6
 39028                           ;../fatfs/ff.c: 4573:    fp->flag |= 0x40;
 39029   012428  EE20 F00E          	lfsr	2,14
 39030   01242C  5162               	movf	f_lseek@fp& (0+255),w,b
 39031   01242E  26D9               	addwf	fsr2l,f,c
 39032   012430  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39033   012432  22DA               	addwfc	fsr2h,f,c
 39034   012434  0E00               	movlw	0
 39035   012436  8CDB               	bsf	plusw2,6,c
 39036   012438                     l22687:
 39037                           
 39038                           ; BSR set to: 6
 39039                           ;../fatfs/ff.c: 4575:   if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
 39040   012438  EE20 F010          	lfsr	2,16
 39041   01243C  5162               	movf	f_lseek@fp& (0+255),w,b
 39042   01243E  26D9               	addwf	fsr2l,f,c
 39043   012440  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39044   012442  22DA               	addwfc	fsr2h,f,c
 39045   012444  0EFF               	movlw	255
 39046   012446  14DE               	andwf	postinc2,w,c
 39047   012448  6F68               	movwf	??_f_lseek& (0+255),b
 39048   01244A  0E01               	movlw	1
 39049   01244C  14DE               	andwf	postinc2,w,c
 39050   01244E  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 39051   012450  0E00               	movlw	0
 39052   012452  14DE               	andwf	postinc2,w,c
 39053   012454  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 39054   012456  0E00               	movlw	0
 39055   012458  14DE               	andwf	postinc2,w,c
 39056   01245A  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 39057   01245C  5168               	movf	??_f_lseek& (0+255),w,b
 39058   01245E  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 39059   012460  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 39060   012462  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 39061   012464  B4D8               	btfsc	status,2,c
 39062   012466  EF37  F092         	goto	u31231
 39063   01246A  EF39  F092         	goto	u31230
 39064   01246E                     u31231:
 39065   01246E  EFFF  F08E         	goto	l22573
 39066   012472                     u31230:
 39067   012472                     
 39068                           ; BSR set to: 6
 39069   012472  EE20 F018          	lfsr	2,24
 39070   012476  5162               	movf	f_lseek@fp& (0+255),w,b
 39071   012478  26D9               	addwf	fsr2l,f,c
 39072   01247A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39073   01247C  22DA               	addwfc	fsr2h,f,c
 39074   01247E  517C               	movf	f_lseek@nsect& (0+255),w,b
 39075   012480  18DE               	xorwf	postinc2,w,c
 39076   012482  E10F               	bnz	u31240
 39077   012484  517D               	movf	(f_lseek@nsect+1)& (0+255),w,b
 39078   012486  18DE               	xorwf	postinc2,w,c
 39079   012488  E10C               	bnz	u31240
 39080   01248A  517E               	movf	(f_lseek@nsect+2)& (0+255),w,b
 39081   01248C  18DE               	xorwf	postinc2,w,c
 39082   01248E  E109               	bnz	u31240
 39083   012490  517F               	movf	(f_lseek@nsect+3)& (0+255),w,b
 39084   012492  18DE               	xorwf	postinc2,w,c
 39085   012494  B4D8               	btfsc	status,2,c
 39086   012496  EF4F  F092         	goto	u31241
 39087   01249A  EF51  F092         	goto	u31240
 39088   01249E                     u31241:
 39089   01249E  EFFF  F08E         	goto	l22573
 39090   0124A2                     u31240:
 39091   0124A2                     
 39092                           ; BSR set to: 6
 39093                           ;../fatfs/ff.c: 4578:    if (fp->flag & 0x80) {
 39094   0124A2  EE20 F00E          	lfsr	2,14
 39095   0124A6  5162               	movf	f_lseek@fp& (0+255),w,b
 39096   0124A8  26D9               	addwf	fsr2l,f,c
 39097   0124AA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39098   0124AC  22DA               	addwfc	fsr2h,f,c
 39099   0124AE  AEDF               	btfss	indf2,7,c
 39100   0124B0  EF5C  F092         	goto	u31251
 39101   0124B4  EF5E  F092         	goto	u31250
 39102   0124B8                     u31251:
 39103   0124B8  EF9B  F092         	goto	l22703
 39104   0124BC                     u31250:
 39105   0124BC                     
 39106                           ; BSR set to: 6
 39107                           ;../fatfs/ff.c: 4579:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 39108   0124BC  0E22               	movlw	34
 39109   0124BE  2562               	addwf	f_lseek@fp& (0+255),w,b
 39110   0124C0  6F00               	movwf	disk_write@buff& (0+255),b
 39111   0124C2  0E00               	movlw	0
 39112   0124C4  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 39113   0124C6  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 39114   0124C8  EE20 F018          	lfsr	2,24
 39115   0124CC  5162               	movf	f_lseek@fp& (0+255),w,b
 39116   0124CE  26D9               	addwf	fsr2l,f,c
 39117   0124D0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39118   0124D2  22DA               	addwfc	fsr2h,f,c
 39119   0124D4  C4DE F602          	movff	postinc2,disk_write@sector
 39120   0124D8  C4DE F603          	movff	postinc2,disk_write@sector+1
 39121   0124DC  C4DE F604          	movff	postinc2,disk_write@sector+2
 39122   0124E0  C4DE F605          	movff	postinc2,disk_write@sector+3
 39123   0124E4  0E00               	movlw	0
 39124   0124E6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 39125   0124E8  0E01               	movlw	1
 39126   0124EA  6F06               	movwf	disk_write@count& (0+255),b
 39127   0124EC  EE20 F001          	lfsr	2,1
 39128   0124F0  5185               	movf	f_lseek@fs& (0+255),w,b
 39129   0124F2  26D9               	addwf	fsr2l,f,c
 39130   0124F4  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 39131   0124F6  22DA               	addwfc	fsr2h,f,c
 39132   0124F8  50DF               	movf	indf2,w,c
 39133   0124FA  EC7E  F0F3         	call	_disk_write
 39134   0124FE  0900               	iorlw	0
 39135   012500  B4D8               	btfsc	status,2,c
 39136   012502  EF85  F092         	goto	u31261
 39137   012506  EF87  F092         	goto	u31260
 39138   01250A                     u31261:
 39139   01250A  EF92  F092         	goto	l22701
 39140   01250E                     u31260:
 39141   01250E  0106               	movlb	6	; () banked
 39142   012510  EE20 F00F          	lfsr	2,15
 39143   012514  5162               	movf	f_lseek@fp& (0+255),w,b
 39144   012516  26D9               	addwf	fsr2l,f,c
 39145   012518  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39146   01251A  22DA               	addwfc	fsr2h,f,c
 39147   01251C  0E01               	movlw	1
 39148   01251E  6EDF               	movwf	indf2,c
 39149   012520  EF86  F090         	goto	l22611
 39150   012524                     l22701:
 39151                           
 39152                           ;../fatfs/ff.c: 4580:     fp->flag &= (BYTE)~0x80;
 39153   012524  0106               	movlb	6	; () banked
 39154   012526  EE20 F00E          	lfsr	2,14
 39155   01252A  5162               	movf	f_lseek@fp& (0+255),w,b
 39156   01252C  26D9               	addwf	fsr2l,f,c
 39157   01252E  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39158   012530  22DA               	addwfc	fsr2h,f,c
 39159   012532  0E7F               	movlw	127
 39160   012534  16DF               	andwf	indf2,f,c
 39161   012536                     l22703:
 39162                           
 39163                           ; BSR set to: 6
 39164                           ;../fatfs/ff.c: 4583:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 39165   012536  0E22               	movlw	34
 39166   012538  2562               	addwf	f_lseek@fp& (0+255),w,b
 39167   01253A  6F00               	movwf	disk_read@buff& (0+255),b
 39168   01253C  0E00               	movlw	0
 39169   01253E  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 39170   012540  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 39171   012542  C67C  F602         	movff	f_lseek@nsect,disk_read@sector
 39172   012546  C67D  F603         	movff	f_lseek@nsect+1,disk_read@sector+1
 39173   01254A  C67E  F604         	movff	f_lseek@nsect+2,disk_read@sector+2
 39174   01254E  C67F  F605         	movff	f_lseek@nsect+3,disk_read@sector+3
 39175   012552  0E00               	movlw	0
 39176   012554  6F07               	movwf	(disk_read@count+1)& (0+255),b
 39177   012556  0E01               	movlw	1
 39178   012558  6F06               	movwf	disk_read@count& (0+255),b
 39179   01255A  EE20 F001          	lfsr	2,1
 39180   01255E  5185               	movf	f_lseek@fs& (0+255),w,b
 39181   012560  26D9               	addwf	fsr2l,f,c
 39182   012562  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 39183   012564  22DA               	addwfc	fsr2h,f,c
 39184   012566  50DF               	movf	indf2,w,c
 39185   012568  ECD5  F0F3         	call	_disk_read
 39186   01256C  0900               	iorlw	0
 39187   01256E  B4D8               	btfsc	status,2,c
 39188   012570  EFBC  F092         	goto	u31271
 39189   012574  EFBE  F092         	goto	u31270
 39190   012578                     u31271:
 39191   012578  EFC9  F092         	goto	l22711
 39192   01257C                     u31270:
 39193   01257C  0106               	movlb	6	; () banked
 39194   01257E  EE20 F00F          	lfsr	2,15
 39195   012582  5162               	movf	f_lseek@fp& (0+255),w,b
 39196   012584  26D9               	addwf	fsr2l,f,c
 39197   012586  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39198   012588  22DA               	addwfc	fsr2h,f,c
 39199   01258A  0E01               	movlw	1
 39200   01258C  6EDF               	movwf	indf2,c
 39201   01258E  EF86  F090         	goto	l22611
 39202   012592                     l22711:
 39203                           
 39204                           ;../fatfs/ff.c: 4585:    fp->sect = nsect;
 39205   012592  0106               	movlb	6	; () banked
 39206   012594  EE20 F018          	lfsr	2,24
 39207   012598  5162               	movf	f_lseek@fp& (0+255),w,b
 39208   01259A  26D9               	addwf	fsr2l,f,c
 39209   01259C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39210   01259E  22DA               	addwfc	fsr2h,f,c
 39211   0125A0  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 39212   0125A4  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 39213   0125A8  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 39214   0125AC  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 39215   0125B0  EFFF  F08E         	goto	l22573
 39216   0125B4                     l2036:
 39217                           
 39218                           ; BSR set to: 6
 39219   0125B4  0012               	return		;funcret
 39220   0125B6                     __end_of_f_lseek:
 39221                           	callstack 0
 39222                           
 39223 ;; *************** function _create_chain *****************
 39224 ;; Defined at:
 39225 ;;		line 1525 in file "../fatfs/ff.c"
 39226 ;; Parameters:    Size  Location     Type
 39227 ;;  obj             2   69[BANK6 ] PTR struct .
 39228 ;;		 -> pb$fp(2), f_rename@djn(40), f_rename@djo(40), f_mkdir@sobj(14), 
 39229 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), 
 39230 ;;		 -> f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 39231 ;;		 -> scan_files@dir(40), 
 39232 ;;  clst            4   71[BANK6 ] unsigned long 
 39233 ;; Auto vars:     Size  Location     Type
 39234 ;;  cs              4   94[BANK6 ] unsigned long 
 39235 ;;  ncl             4   88[BANK6 ] unsigned long 
 39236 ;;  scl             4   84[BANK6 ] unsigned long 
 39237 ;;  fs              2   92[BANK6 ] PTR struct .
 39238 ;;		 -> fs(564), NULL(0), 
 39239 ;;  res             1   83[BANK6 ] enum E597
 39240 ;; Return value:  Size  Location     Type
 39241 ;;                  4   69[BANK6 ] unsigned long 
 39242 ;; Registers used:
 39243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39244 ;; Tracked objects:
 39245 ;;		On entry : 0/0
 39246 ;;		On exit  : 0/0
 39247 ;;		Unchanged: 0/0
 39248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39249 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39250 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39251 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39252 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39253 ;;Total ram usage:       29 bytes
 39254 ;; Hardware stack levels used: 1
 39255 ;; Hardware stack levels required when called: 15
 39256 ;; This function calls:
 39257 ;;		_get_fat
 39258 ;;		_put_fat
 39259 ;; This function is called by:
 39260 ;;		_dir_next
 39261 ;;		_f_write
 39262 ;;		_f_lseek
 39263 ;;		_f_mkdir
 39264 ;; This function uses a non-reentrant model
 39265 ;;
 39266                           
 39267                           	psect	text106
 39268   013AF8                     __ptext106:
 39269                           	callstack 0
 39270   013AF8                     _create_chain:
 39271                           	callstack 104
 39272   013AF8                     
 39273                           ;../fatfs/ff.c: 1526:  FFOBJID* obj,;../fatfs/ff.c: 1527:  DWORD clst;../fatfs/ff.c: 152
      +                          9: {;../fatfs/ff.c: 1530:  DWORD cs, ncl, scl;;../fatfs/ff.c: 1531:  FRESULT res;;../fat
      +                          fs/ff.c: 1532:  FATFS *fs = obj->fs;
 39274   013AF8  C645  F4D9         	movff	create_chain@obj,fsr2l
 39275   013AFC  C646  F4DA         	movff	create_chain@obj+1,fsr2h
 39276   013B00  C4DE F65C          	movff	postinc2,create_chain@fs
 39277   013B04  C4DD F65D          	movff	postdec2,create_chain@fs+1
 39278   013B08                     
 39279                           ;../fatfs/ff.c: 1535:  if (clst == 0) {
 39280   013B08  0106               	movlb	6	; () banked
 39281   013B0A  5147               	movf	create_chain@clst& (0+255),w,b
 39282   013B0C  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 39283   013B0E  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 39284   013B10  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 39285   013B12  A4D8               	btfss	status,2,c
 39286   013B14  EF8E  F09D         	goto	u28331
 39287   013B18  EF90  F09D         	goto	u28330
 39288   013B1C                     u28331:
 39289   013B1C  EFC8  F09D         	goto	l21207
 39290   013B20                     u28330:
 39291   013B20                     
 39292                           ; BSR set to: 6
 39293                           ;../fatfs/ff.c: 1536:   scl = fs->last_clst;
 39294   013B20  EE20 F00C          	lfsr	2,12
 39295   013B24  515C               	movf	create_chain@fs& (0+255),w,b
 39296   013B26  26D9               	addwf	fsr2l,f,c
 39297   013B28  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39298   013B2A  22DA               	addwfc	fsr2h,f,c
 39299   013B2C  C4DE F654          	movff	postinc2,create_chain@scl
 39300   013B30  C4DE F655          	movff	postinc2,create_chain@scl+1
 39301   013B34  C4DE F656          	movff	postinc2,create_chain@scl+2
 39302   013B38  C4DE F657          	movff	postinc2,create_chain@scl+3
 39303   013B3C                     
 39304                           ; BSR set to: 6
 39305                           ;../fatfs/ff.c: 1537:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 39306   013B3C  5154               	movf	create_chain@scl& (0+255),w,b
 39307   013B3E  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 39308   013B40  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 39309   013B42  1157               	iorwf	(create_chain@scl+3)& (0+255),w,b
 39310   013B44  B4D8               	btfsc	status,2,c
 39311   013B46  EFA7  F09D         	goto	u28341
 39312   013B4A  EFA9  F09D         	goto	u28340
 39313   013B4E                     u28341:
 39314   013B4E  EFBE  F09D         	goto	l21205
 39315   013B52                     u28340:
 39316   013B52                     
 39317                           ; BSR set to: 6
 39318   013B52  EE20 F018          	lfsr	2,24
 39319   013B56  515C               	movf	create_chain@fs& (0+255),w,b
 39320   013B58  26D9               	addwf	fsr2l,f,c
 39321   013B5A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39322   013B5C  22DA               	addwfc	fsr2h,f,c
 39323   013B5E  50DE               	movf	postinc2,w,c
 39324   013B60  5D54               	subwf	create_chain@scl& (0+255),w,b
 39325   013B62  50DE               	movf	postinc2,w,c
 39326   013B64  5955               	subwfb	(create_chain@scl+1)& (0+255),w,b
 39327   013B66  50DE               	movf	postinc2,w,c
 39328   013B68  5956               	subwfb	(create_chain@scl+2)& (0+255),w,b
 39329   013B6A  50DE               	movf	postinc2,w,c
 39330   013B6C  5957               	subwfb	(create_chain@scl+3)& (0+255),w,b
 39331   013B6E  A0D8               	btfss	status,0,c
 39332   013B70  EFBC  F09D         	goto	u28351
 39333   013B74  EFBE  F09D         	goto	u28350
 39334   013B78                     u28351:
 39335   013B78  EF2D  F09E         	goto	l21223
 39336   013B7C                     u28350:
 39337   013B7C                     l21205:
 39338                           
 39339                           ; BSR set to: 6
 39340   013B7C  0E01               	movlw	1
 39341   013B7E  6F54               	movwf	create_chain@scl& (0+255),b
 39342   013B80  0E00               	movlw	0
 39343   013B82  6F55               	movwf	(create_chain@scl+1)& (0+255),b
 39344   013B84  0E00               	movlw	0
 39345   013B86  6F56               	movwf	(create_chain@scl+2)& (0+255),b
 39346   013B88  0E00               	movlw	0
 39347   013B8A  6F57               	movwf	(create_chain@scl+3)& (0+255),b
 39348   013B8C  EF2D  F09E         	goto	l21223
 39349   013B90                     l21207:
 39350                           
 39351                           ; BSR set to: 6
 39352                           ;../fatfs/ff.c: 1540:   cs = get_fat(obj, clst);
 39353   013B90  C645  F624         	movff	create_chain@obj,get_fat@obj
 39354   013B94  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39355   013B98  C647  F626         	movff	create_chain@clst,get_fat@clst
 39356   013B9C  C648  F627         	movff	create_chain@clst+1,get_fat@clst+1
 39357   013BA0  C649  F628         	movff	create_chain@clst+2,get_fat@clst+2
 39358   013BA4  C64A  F629         	movff	create_chain@clst+3,get_fat@clst+3
 39359   013BA8  ECF7  F0B4         	call	_get_fat	;wreg free
 39360   013BAC  C624  F65E         	movff	?_get_fat,create_chain@cs
 39361   013BB0  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39362   013BB4  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39363   013BB8  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39364   013BBC                     
 39365                           ;../fatfs/ff.c: 1541:   if (cs < 2) return 1;
 39366   013BBC  0106               	movlb	6	; () banked
 39367   013BBE  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 39368   013BC0  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39369   013BC2  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39370   013BC4  E107               	bnz	u28361
 39371   013BC6  0E02               	movlw	2
 39372   013BC8  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39373   013BCA  B0D8               	btfsc	status,0,c
 39374   013BCC  EFEA  F09D         	goto	u28361
 39375   013BD0  EFEC  F09D         	goto	u28360
 39376   013BD4                     u28361:
 39377   013BD4  EFF6  F09D         	goto	l21215
 39378   013BD8                     u28360:
 39379   013BD8                     
 39380                           ; BSR set to: 6
 39381   013BD8  0E01               	movlw	1
 39382   013BDA  6F45               	movwf	?_create_chain& (0+255),b
 39383   013BDC  0E00               	movlw	0
 39384   013BDE  6F46               	movwf	(?_create_chain+1)& (0+255),b
 39385   013BE0  0E00               	movlw	0
 39386   013BE2  6F47               	movwf	(?_create_chain+2)& (0+255),b
 39387   013BE4  0E00               	movlw	0
 39388   013BE6  6F48               	movwf	(?_create_chain+3)& (0+255),b
 39389   013BE8  EF53  F0A0         	goto	l1545
 39390   013BEC                     l21215:
 39391                           
 39392                           ; BSR set to: 6
 39393                           ;../fatfs/ff.c: 1542:   if (cs == 0xFFFFFFFF) return cs;
 39394   013BEC  295E               	incf	create_chain@cs& (0+255),w,b
 39395   013BEE  E10A               	bnz	u28371
 39396   013BF0  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39397   013BF2  E108               	bnz	u28371
 39398   013BF4  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39399   013BF6  E106               	bnz	u28371
 39400   013BF8  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39401   013BFA  A4D8               	btfss	status,2,c
 39402   013BFC  EF02  F09E         	goto	u28371
 39403   013C00  EF04  F09E         	goto	u28370
 39404   013C04                     u28371:
 39405   013C04  EF0E  F09E         	goto	l21219
 39406   013C08                     u28370:
 39407   013C08                     l21217:
 39408                           
 39409                           ; BSR set to: 6
 39410   013C08  C65E  F645         	movff	create_chain@cs,?_create_chain
 39411   013C0C  C65F  F646         	movff	create_chain@cs+1,?_create_chain+1
 39412   013C10  C660  F647         	movff	create_chain@cs+2,?_create_chain+2
 39413   013C14  C661  F648         	movff	create_chain@cs+3,?_create_chain+3
 39414   013C18  EF53  F0A0         	goto	l1545
 39415   013C1C                     l21219:
 39416                           
 39417                           ; BSR set to: 6
 39418                           ;../fatfs/ff.c: 1543:   if (cs < fs->n_fatent) return cs;
 39419   013C1C  EE20 F018          	lfsr	2,24
 39420   013C20  515C               	movf	create_chain@fs& (0+255),w,b
 39421   013C22  26D9               	addwf	fsr2l,f,c
 39422   013C24  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39423   013C26  22DA               	addwfc	fsr2h,f,c
 39424   013C28  50DE               	movf	postinc2,w,c
 39425   013C2A  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39426   013C2C  50DE               	movf	postinc2,w,c
 39427   013C2E  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 39428   013C30  50DE               	movf	postinc2,w,c
 39429   013C32  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 39430   013C34  50DE               	movf	postinc2,w,c
 39431   013C36  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 39432   013C38  B0D8               	btfsc	status,0,c
 39433   013C3A  EF21  F09E         	goto	u28381
 39434   013C3E  EF23  F09E         	goto	u28380
 39435   013C42                     u28381:
 39436   013C42  EF25  F09E         	goto	l1547
 39437   013C46                     u28380:
 39438   013C46  EF04  F09E         	goto	l21217
 39439   013C4A                     l1547:
 39440                           
 39441                           ; BSR set to: 6
 39442                           ;../fatfs/ff.c: 1544:   scl = clst;
 39443   013C4A  C647  F654         	movff	create_chain@clst,create_chain@scl
 39444   013C4E  C648  F655         	movff	create_chain@clst+1,create_chain@scl+1
 39445   013C52  C649  F656         	movff	create_chain@clst+2,create_chain@scl+2
 39446   013C56  C64A  F657         	movff	create_chain@clst+3,create_chain@scl+3
 39447   013C5A                     l21223:
 39448                           
 39449                           ; BSR set to: 6
 39450                           ;../fatfs/ff.c: 1546:  if (fs->free_clst == 0) return 0;
 39451   013C5A  EE20 F010          	lfsr	2,16
 39452   013C5E  515C               	movf	create_chain@fs& (0+255),w,b
 39453   013C60  26D9               	addwf	fsr2l,f,c
 39454   013C62  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39455   013C64  22DA               	addwfc	fsr2h,f,c
 39456   013C66  50DE               	movf	postinc2,w,c
 39457   013C68  10DE               	iorwf	postinc2,w,c
 39458   013C6A  10DE               	iorwf	postinc2,w,c
 39459   013C6C  10DE               	iorwf	postinc2,w,c
 39460   013C6E  A4D8               	btfss	status,2,c
 39461   013C70  EF3C  F09E         	goto	u28391
 39462   013C74  EF3E  F09E         	goto	u28390
 39463   013C78                     u28391:
 39464   013C78  EF48  F09E         	goto	l21229
 39465   013C7C                     u28390:
 39466   013C7C                     l21225:
 39467                           
 39468                           ; BSR set to: 6
 39469   013C7C  0E00               	movlw	0
 39470   013C7E  6F45               	movwf	?_create_chain& (0+255),b
 39471   013C80  0E00               	movlw	0
 39472   013C82  6F46               	movwf	(?_create_chain+1)& (0+255),b
 39473   013C84  0E00               	movlw	0
 39474   013C86  6F47               	movwf	(?_create_chain+2)& (0+255),b
 39475   013C88  0E00               	movlw	0
 39476   013C8A  6F48               	movwf	(?_create_chain+3)& (0+255),b
 39477   013C8C  EF53  F0A0         	goto	l1545
 39478   013C90                     l21229:
 39479                           
 39480                           ; BSR set to: 6
 39481                           ;../fatfs/ff.c: 1574:  {;../fatfs/ff.c: 1575:   ncl = 0;
 39482   013C90  0E00               	movlw	0
 39483   013C92  6F58               	movwf	create_chain@ncl& (0+255),b
 39484   013C94  0E00               	movlw	0
 39485   013C96  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39486   013C98  0E00               	movlw	0
 39487   013C9A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39488   013C9C  0E00               	movlw	0
 39489   013C9E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39490   013CA0                     
 39491                           ; BSR set to: 6
 39492                           ;../fatfs/ff.c: 1576:   if (scl == clst) {
 39493   013CA0  5147               	movf	create_chain@clst& (0+255),w,b
 39494   013CA2  1954               	xorwf	create_chain@scl& (0+255),w,b
 39495   013CA4  E10D               	bnz	u28401
 39496   013CA6  5148               	movf	(create_chain@clst+1)& (0+255),w,b
 39497   013CA8  1955               	xorwf	(create_chain@scl+1)& (0+255),w,b
 39498   013CAA  E10A               	bnz	u28401
 39499   013CAC  5149               	movf	(create_chain@clst+2)& (0+255),w,b
 39500   013CAE  1956               	xorwf	(create_chain@scl+2)& (0+255),w,b
 39501   013CB0  E107               	bnz	u28401
 39502   013CB2  514A               	movf	(create_chain@clst+3)& (0+255),w,b
 39503   013CB4  1957               	xorwf	(create_chain@scl+3)& (0+255),w,b
 39504   013CB6  A4D8               	btfss	status,2,c
 39505   013CB8  EF60  F09E         	goto	u28401
 39506   013CBC  EF62  F09E         	goto	u28400
 39507   013CC0                     u28401:
 39508   013CC0  EF08  F09F         	goto	l21257
 39509   013CC4                     u28400:
 39510   013CC4                     
 39511                           ; BSR set to: 6
 39512                           ;../fatfs/ff.c: 1577:    ncl = scl + 1;
 39513   013CC4  0E01               	movlw	1
 39514   013CC6  2554               	addwf	create_chain@scl& (0+255),w,b
 39515   013CC8  6F58               	movwf	create_chain@ncl& (0+255),b
 39516   013CCA  0E00               	movlw	0
 39517   013CCC  2155               	addwfc	(create_chain@scl+1)& (0+255),w,b
 39518   013CCE  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39519   013CD0  0E00               	movlw	0
 39520   013CD2  2156               	addwfc	(create_chain@scl+2)& (0+255),w,b
 39521   013CD4  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39522   013CD6  0E00               	movlw	0
 39523   013CD8  2157               	addwfc	(create_chain@scl+3)& (0+255),w,b
 39524   013CDA  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39525   013CDC                     
 39526                           ; BSR set to: 6
 39527                           ;../fatfs/ff.c: 1578:    if (ncl >= fs->n_fatent) ncl = 2;
 39528   013CDC  EE20 F018          	lfsr	2,24
 39529   013CE0  515C               	movf	create_chain@fs& (0+255),w,b
 39530   013CE2  26D9               	addwf	fsr2l,f,c
 39531   013CE4  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39532   013CE6  22DA               	addwfc	fsr2h,f,c
 39533   013CE8  50DE               	movf	postinc2,w,c
 39534   013CEA  5D58               	subwf	create_chain@ncl& (0+255),w,b
 39535   013CEC  50DE               	movf	postinc2,w,c
 39536   013CEE  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 39537   013CF0  50DE               	movf	postinc2,w,c
 39538   013CF2  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 39539   013CF4  50DE               	movf	postinc2,w,c
 39540   013CF6  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 39541   013CF8  A0D8               	btfss	status,0,c
 39542   013CFA  EF81  F09E         	goto	u28411
 39543   013CFE  EF83  F09E         	goto	u28410
 39544   013D02                     u28411:
 39545   013D02  EF8B  F09E         	goto	l21239
 39546   013D06                     u28410:
 39547   013D06                     
 39548                           ; BSR set to: 6
 39549   013D06  0E02               	movlw	2
 39550   013D08  6F58               	movwf	create_chain@ncl& (0+255),b
 39551   013D0A  0E00               	movlw	0
 39552   013D0C  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39553   013D0E  0E00               	movlw	0
 39554   013D10  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39555   013D12  0E00               	movlw	0
 39556   013D14  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39557   013D16                     l21239:
 39558                           
 39559                           ; BSR set to: 6
 39560                           ;../fatfs/ff.c: 1579:    cs = get_fat(obj, ncl);
 39561   013D16  C645  F624         	movff	create_chain@obj,get_fat@obj
 39562   013D1A  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39563   013D1E  C658  F626         	movff	create_chain@ncl,get_fat@clst
 39564   013D22  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 39565   013D26  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 39566   013D2A  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 39567   013D2E  ECF7  F0B4         	call	_get_fat	;wreg free
 39568   013D32  C624  F65E         	movff	?_get_fat,create_chain@cs
 39569   013D36  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39570   013D3A  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39571   013D3E  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39572   013D42                     
 39573                           ;../fatfs/ff.c: 1580:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 39574   013D42  0106               	movlb	6	; () banked
 39575   013D44  055E               	decf	create_chain@cs& (0+255),w,b
 39576   013D46  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39577   013D48  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39578   013D4A  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39579   013D4C  B4D8               	btfsc	status,2,c
 39580   013D4E  EFAB  F09E         	goto	u28421
 39581   013D52  EFAD  F09E         	goto	u28420
 39582   013D56                     u28421:
 39583   013D56  EF04  F09E         	goto	l21217
 39584   013D5A                     u28420:
 39585   013D5A                     
 39586                           ; BSR set to: 6
 39587   013D5A  295E               	incf	create_chain@cs& (0+255),w,b
 39588   013D5C  E10A               	bnz	u28431
 39589   013D5E  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39590   013D60  E108               	bnz	u28431
 39591   013D62  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39592   013D64  E106               	bnz	u28431
 39593   013D66  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39594   013D68  A4D8               	btfss	status,2,c
 39595   013D6A  EFB9  F09E         	goto	u28431
 39596   013D6E  EFBB  F09E         	goto	u28430
 39597   013D72                     u28431:
 39598   013D72  EFBD  F09E         	goto	l21245
 39599   013D76                     u28430:
 39600   013D76  EF04  F09E         	goto	l21217
 39601   013D7A                     l21245:
 39602                           
 39603                           ; BSR set to: 6
 39604                           ;../fatfs/ff.c: 1581:    if (cs != 0) {
 39605   013D7A  515E               	movf	create_chain@cs& (0+255),w,b
 39606   013D7C  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39607   013D7E  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39608   013D80  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39609   013D82  B4D8               	btfsc	status,2,c
 39610   013D84  EFC6  F09E         	goto	u28441
 39611   013D88  EFC8  F09E         	goto	u28440
 39612   013D8C                     u28441:
 39613   013D8C  EF08  F09F         	goto	l21257
 39614   013D90                     u28440:
 39615   013D90                     
 39616                           ; BSR set to: 6
 39617                           ;../fatfs/ff.c: 1582:     cs = fs->last_clst;
 39618   013D90  EE20 F00C          	lfsr	2,12
 39619   013D94  515C               	movf	create_chain@fs& (0+255),w,b
 39620   013D96  26D9               	addwf	fsr2l,f,c
 39621   013D98  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39622   013D9A  22DA               	addwfc	fsr2h,f,c
 39623   013D9C  C4DE F65E          	movff	postinc2,create_chain@cs
 39624   013DA0  C4DE F65F          	movff	postinc2,create_chain@cs+1
 39625   013DA4  C4DE F660          	movff	postinc2,create_chain@cs+2
 39626   013DA8  C4DE F661          	movff	postinc2,create_chain@cs+3
 39627   013DAC                     
 39628                           ; BSR set to: 6
 39629                           ;../fatfs/ff.c: 1583:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 39630   013DAC  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 39631   013DAE  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39632   013DB0  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39633   013DB2  E109               	bnz	u28450
 39634   013DB4  0E02               	movlw	2
 39635   013DB6  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39636   013DB8  A0D8               	btfss	status,0,c
 39637   013DBA  EFE1  F09E         	goto	u28451
 39638   013DBE  EFE3  F09E         	goto	u28450
 39639   013DC2                     u28451:
 39640   013DC2  EF00  F09F         	goto	l21255
 39641   013DC6                     u28450:
 39642   013DC6                     
 39643                           ; BSR set to: 6
 39644   013DC6  EE20 F018          	lfsr	2,24
 39645   013DCA  515C               	movf	create_chain@fs& (0+255),w,b
 39646   013DCC  26D9               	addwf	fsr2l,f,c
 39647   013DCE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39648   013DD0  22DA               	addwfc	fsr2h,f,c
 39649   013DD2  50DE               	movf	postinc2,w,c
 39650   013DD4  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39651   013DD6  50DE               	movf	postinc2,w,c
 39652   013DD8  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 39653   013DDA  50DE               	movf	postinc2,w,c
 39654   013DDC  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 39655   013DDE  50DE               	movf	postinc2,w,c
 39656   013DE0  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 39657   013DE2  B0D8               	btfsc	status,0,c
 39658   013DE4  EFF6  F09E         	goto	u28461
 39659   013DE8  EFF8  F09E         	goto	u28460
 39660   013DEC                     u28461:
 39661   013DEC  EF00  F09F         	goto	l21255
 39662   013DF0                     u28460:
 39663   013DF0                     
 39664                           ; BSR set to: 6
 39665   013DF0  C65E  F654         	movff	create_chain@cs,create_chain@scl
 39666   013DF4  C65F  F655         	movff	create_chain@cs+1,create_chain@scl+1
 39667   013DF8  C660  F656         	movff	create_chain@cs+2,create_chain@scl+2
 39668   013DFC  C661  F657         	movff	create_chain@cs+3,create_chain@scl+3
 39669   013E00                     l21255:
 39670                           
 39671                           ; BSR set to: 6
 39672                           ;../fatfs/ff.c: 1584:     ncl = 0;
 39673   013E00  0E00               	movlw	0
 39674   013E02  6F58               	movwf	create_chain@ncl& (0+255),b
 39675   013E04  0E00               	movlw	0
 39676   013E06  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39677   013E08  0E00               	movlw	0
 39678   013E0A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39679   013E0C  0E00               	movlw	0
 39680   013E0E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39681   013E10                     l21257:
 39682                           
 39683                           ; BSR set to: 6
 39684                           ;../fatfs/ff.c: 1587:   if (ncl == 0) {
 39685   013E10  5158               	movf	create_chain@ncl& (0+255),w,b
 39686   013E12  1159               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 39687   013E14  115A               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 39688   013E16  115B               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 39689   013E18  A4D8               	btfss	status,2,c
 39690   013E1A  EF11  F09F         	goto	u28471
 39691   013E1E  EF13  F09F         	goto	u28470
 39692   013E22                     u28471:
 39693   013E22  EFA0  F09F         	goto	l21289
 39694   013E26                     u28470:
 39695   013E26                     
 39696                           ; BSR set to: 6
 39697                           ;../fatfs/ff.c: 1588:    ncl = scl;
 39698   013E26  C654  F658         	movff	create_chain@scl,create_chain@ncl
 39699   013E2A  C655  F659         	movff	create_chain@scl+1,create_chain@ncl+1
 39700   013E2E  C656  F65A         	movff	create_chain@scl+2,create_chain@ncl+2
 39701   013E32  C657  F65B         	movff	create_chain@scl+3,create_chain@ncl+3
 39702   013E36                     l21261:
 39703                           
 39704                           ; BSR set to: 6
 39705                           ;../fatfs/ff.c: 1590:     ncl++;
 39706   013E36  0E01               	movlw	1
 39707   013E38  2758               	addwf	create_chain@ncl& (0+255),f,b
 39708   013E3A  0E00               	movlw	0
 39709   013E3C  2359               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 39710   013E3E  235A               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 39711   013E40  235B               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 39712   013E42                     
 39713                           ; BSR set to: 6
 39714                           ;../fatfs/ff.c: 1591:     if (ncl >= fs->n_fatent) {
 39715   013E42  EE20 F018          	lfsr	2,24
 39716   013E46  515C               	movf	create_chain@fs& (0+255),w,b
 39717   013E48  26D9               	addwf	fsr2l,f,c
 39718   013E4A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39719   013E4C  22DA               	addwfc	fsr2h,f,c
 39720   013E4E  50DE               	movf	postinc2,w,c
 39721   013E50  5D58               	subwf	create_chain@ncl& (0+255),w,b
 39722   013E52  50DE               	movf	postinc2,w,c
 39723   013E54  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 39724   013E56  50DE               	movf	postinc2,w,c
 39725   013E58  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 39726   013E5A  50DE               	movf	postinc2,w,c
 39727   013E5C  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 39728   013E5E  A0D8               	btfss	status,0,c
 39729   013E60  EF34  F09F         	goto	u28481
 39730   013E64  EF36  F09F         	goto	u28480
 39731   013E68                     u28481:
 39732   013E68  EF4D  F09F         	goto	l21273
 39733   013E6C                     u28480:
 39734   013E6C                     
 39735                           ; BSR set to: 6
 39736                           ;../fatfs/ff.c: 1592:      ncl = 2;
 39737   013E6C  0E02               	movlw	2
 39738   013E6E  6F58               	movwf	create_chain@ncl& (0+255),b
 39739   013E70  0E00               	movlw	0
 39740   013E72  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39741   013E74  0E00               	movlw	0
 39742   013E76  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39743   013E78  0E00               	movlw	0
 39744   013E7A  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39745   013E7C                     
 39746                           ; BSR set to: 6
 39747                           ;../fatfs/ff.c: 1593:      if (ncl > scl) return 0;
 39748   013E7C  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 39749   013E7E  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 39750   013E80  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 39751   013E82  E107               	bnz	u28491
 39752   013E84  0E02               	movlw	2
 39753   013E86  5D54               	subwf	create_chain@scl& (0+255),w,b
 39754   013E88  B0D8               	btfsc	status,0,c
 39755   013E8A  EF49  F09F         	goto	u28491
 39756   013E8E  EF4B  F09F         	goto	u28490
 39757   013E92                     u28491:
 39758   013E92  EF4D  F09F         	goto	l21273
 39759   013E96                     u28490:
 39760   013E96  EF3E  F09E         	goto	l21225
 39761   013E9A                     l21273:
 39762                           
 39763                           ; BSR set to: 6
 39764                           ;../fatfs/ff.c: 1595:     cs = get_fat(obj, ncl);
 39765   013E9A  C645  F624         	movff	create_chain@obj,get_fat@obj
 39766   013E9E  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39767   013EA2  C658  F626         	movff	create_chain@ncl,get_fat@clst
 39768   013EA6  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 39769   013EAA  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 39770   013EAE  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 39771   013EB2  ECF7  F0B4         	call	_get_fat	;wreg free
 39772   013EB6  C624  F65E         	movff	?_get_fat,create_chain@cs
 39773   013EBA  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39774   013EBE  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39775   013EC2  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39776   013EC6                     
 39777                           ;../fatfs/ff.c: 1596:     if (cs == 0) break;
 39778   013EC6  0106               	movlb	6	; () banked
 39779   013EC8  515E               	movf	create_chain@cs& (0+255),w,b
 39780   013ECA  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39781   013ECC  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39782   013ECE  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39783   013ED0  A4D8               	btfss	status,2,c
 39784   013ED2  EF6D  F09F         	goto	u28501
 39785   013ED6  EF6F  F09F         	goto	u28500
 39786   013EDA                     u28501:
 39787   013EDA  EF71  F09F         	goto	l21279
 39788   013EDE                     u28500:
 39789   013EDE  EFA0  F09F         	goto	l21289
 39790   013EE2                     l21279:
 39791                           
 39792                           ; BSR set to: 6
 39793                           ;../fatfs/ff.c: 1597:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 39794   013EE2  055E               	decf	create_chain@cs& (0+255),w,b
 39795   013EE4  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39796   013EE6  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39797   013EE8  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39798   013EEA  B4D8               	btfsc	status,2,c
 39799   013EEC  EF7A  F09F         	goto	u28511
 39800   013EF0  EF7C  F09F         	goto	u28510
 39801   013EF4                     u28511:
 39802   013EF4  EF04  F09E         	goto	l21217
 39803   013EF8                     u28510:
 39804   013EF8                     
 39805                           ; BSR set to: 6
 39806   013EF8  295E               	incf	create_chain@cs& (0+255),w,b
 39807   013EFA  E10A               	bnz	u28521
 39808   013EFC  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39809   013EFE  E108               	bnz	u28521
 39810   013F00  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39811   013F02  E106               	bnz	u28521
 39812   013F04  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39813   013F06  A4D8               	btfss	status,2,c
 39814   013F08  EF88  F09F         	goto	u28521
 39815   013F0C  EF8A  F09F         	goto	u28520
 39816   013F10                     u28521:
 39817   013F10  EF8C  F09F         	goto	l21283
 39818   013F14                     u28520:
 39819   013F14  EF04  F09E         	goto	l21217
 39820   013F18                     l21283:
 39821                           
 39822                           ; BSR set to: 6
 39823                           ;../fatfs/ff.c: 1598:     if (ncl == scl) return 0;
 39824   013F18  5154               	movf	create_chain@scl& (0+255),w,b
 39825   013F1A  1958               	xorwf	create_chain@ncl& (0+255),w,b
 39826   013F1C  E10D               	bnz	u28531
 39827   013F1E  5155               	movf	(create_chain@scl+1)& (0+255),w,b
 39828   013F20  1959               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 39829   013F22  E10A               	bnz	u28531
 39830   013F24  5156               	movf	(create_chain@scl+2)& (0+255),w,b
 39831   013F26  195A               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 39832   013F28  E107               	bnz	u28531
 39833   013F2A  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 39834   013F2C  195B               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 39835   013F2E  A4D8               	btfss	status,2,c
 39836   013F30  EF9C  F09F         	goto	u28531
 39837   013F34  EF9E  F09F         	goto	u28530
 39838   013F38                     u28531:
 39839   013F38  EF1B  F09F         	goto	l21261
 39840   013F3C                     u28530:
 39841   013F3C  EF3E  F09E         	goto	l21225
 39842   013F40                     l21289:
 39843                           
 39844                           ; BSR set to: 6
 39845                           ;../fatfs/ff.c: 1601:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 39846   013F40  C65C  F624         	movff	create_chain@fs,put_fat@fs
 39847   013F44  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 39848   013F48  C658  F626         	movff	create_chain@ncl,put_fat@clst
 39849   013F4C  C659  F627         	movff	create_chain@ncl+1,put_fat@clst+1
 39850   013F50  C65A  F628         	movff	create_chain@ncl+2,put_fat@clst+2
 39851   013F54  C65B  F629         	movff	create_chain@ncl+3,put_fat@clst+3
 39852   013F58  0EFF               	movlw	255
 39853   013F5A  6F2A               	movwf	put_fat@val& (0+255),b
 39854   013F5C  0EFF               	movlw	255
 39855   013F5E  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 39856   013F60  0EFF               	movlw	255
 39857   013F62  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 39858   013F64  0EFF               	movlw	255
 39859   013F66  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 39860   013F68  EC54  F0A0         	call	_put_fat	;wreg free
 39861   013F6C  0106               	movlb	6	; () banked
 39862   013F6E  6F53               	movwf	create_chain@res& (0+255),b
 39863   013F70                     
 39864                           ; BSR set to: 6
 39865                           ;../fatfs/ff.c: 1602:   if (res == FR_OK && clst != 0) {
 39866   013F70  5153               	movf	create_chain@res& (0+255),w,b
 39867   013F72  A4D8               	btfss	status,2,c
 39868   013F74  EFBE  F09F         	goto	u28541
 39869   013F78  EFC0  F09F         	goto	u28540
 39870   013F7C                     u28541:
 39871   013F7C  EFE3  F09F         	goto	l21297
 39872   013F80                     u28540:
 39873   013F80                     
 39874                           ; BSR set to: 6
 39875   013F80  5147               	movf	create_chain@clst& (0+255),w,b
 39876   013F82  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 39877   013F84  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 39878   013F86  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 39879   013F88  B4D8               	btfsc	status,2,c
 39880   013F8A  EFC9  F09F         	goto	u28551
 39881   013F8E  EFCB  F09F         	goto	u28550
 39882   013F92                     u28551:
 39883   013F92  EFE3  F09F         	goto	l21297
 39884   013F96                     u28550:
 39885   013F96                     
 39886                           ; BSR set to: 6
 39887                           ;../fatfs/ff.c: 1603:    res = put_fat(fs, clst, ncl);
 39888   013F96  C65C  F624         	movff	create_chain@fs,put_fat@fs
 39889   013F9A  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 39890   013F9E  C647  F626         	movff	create_chain@clst,put_fat@clst
 39891   013FA2  C648  F627         	movff	create_chain@clst+1,put_fat@clst+1
 39892   013FA6  C649  F628         	movff	create_chain@clst+2,put_fat@clst+2
 39893   013FAA  C64A  F629         	movff	create_chain@clst+3,put_fat@clst+3
 39894   013FAE  C658  F62A         	movff	create_chain@ncl,put_fat@val
 39895   013FB2  C659  F62B         	movff	create_chain@ncl+1,put_fat@val+1
 39896   013FB6  C65A  F62C         	movff	create_chain@ncl+2,put_fat@val+2
 39897   013FBA  C65B  F62D         	movff	create_chain@ncl+3,put_fat@val+3
 39898   013FBE  EC54  F0A0         	call	_put_fat	;wreg free
 39899   013FC2  0106               	movlb	6	; () banked
 39900   013FC4  6F53               	movwf	create_chain@res& (0+255),b
 39901   013FC6                     l21297:
 39902                           
 39903                           ; BSR set to: 6
 39904                           ;../fatfs/ff.c: 1605:  };../fatfs/ff.c: 1607:  if (res == FR_OK) {
 39905   013FC6  5153               	movf	create_chain@res& (0+255),w,b
 39906   013FC8  A4D8               	btfss	status,2,c
 39907   013FCA  EFE9  F09F         	goto	u28561
 39908   013FCE  EFEB  F09F         	goto	u28560
 39909   013FD2                     u28561:
 39910   013FD2  EF35  F0A0         	goto	l21305
 39911   013FD6                     u28560:
 39912   013FD6                     
 39913                           ; BSR set to: 6
 39914                           ;../fatfs/ff.c: 1608:   fs->last_clst = ncl;
 39915   013FD6  EE20 F00C          	lfsr	2,12
 39916   013FDA  515C               	movf	create_chain@fs& (0+255),w,b
 39917   013FDC  26D9               	addwf	fsr2l,f,c
 39918   013FDE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39919   013FE0  22DA               	addwfc	fsr2h,f,c
 39920   013FE2  C658  F4DE         	movff	create_chain@ncl,postinc2
 39921   013FE6  C659  F4DE         	movff	create_chain@ncl+1,postinc2
 39922   013FEA  C65A  F4DE         	movff	create_chain@ncl+2,postinc2
 39923   013FEE  C65B  F4DE         	movff	create_chain@ncl+3,postinc2
 39924   013FF2                     
 39925                           ; BSR set to: 6
 39926                           ;../fatfs/ff.c: 1609:   if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 39927   013FF2  EE20 F010          	lfsr	2,16
 39928   013FF6  515C               	movf	create_chain@fs& (0+255),w,b
 39929   013FF8  26D9               	addwf	fsr2l,f,c
 39930   013FFA  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39931   013FFC  22DA               	addwfc	fsr2h,f,c
 39932   013FFE  EE10 F018          	lfsr	1,24
 39933   014002  515C               	movf	create_chain@fs& (0+255),w,b
 39934   014004  26E1               	addwf	fsr1l,f,c
 39935   014006  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39936   014008  22E2               	addwfc	fsr1h,f,c
 39937   01400A  0EFE               	movlw	254
 39938   01400C  24E6               	addwf	postinc1,w,c
 39939   01400E  6F4F               	movwf	(??_create_chain+4)& (0+255),b
 39940   014010  0EFF               	movlw	255
 39941   014012  20E6               	addwfc	postinc1,w,c
 39942   014014  6F50               	movwf	(??_create_chain+5)& (0+255),b
 39943   014016  0EFF               	movlw	255
 39944   014018  20E6               	addwfc	postinc1,w,c
 39945   01401A  6F51               	movwf	(??_create_chain+6)& (0+255),b
 39946   01401C  0EFF               	movlw	255
 39947   01401E  20E6               	addwfc	postinc1,w,c
 39948   014020  6F52               	movwf	(??_create_chain+7)& (0+255),b
 39949   014022  50DE               	movf	postinc2,w,c
 39950   014024  5D4F               	subwf	(??_create_chain+4)& (0+255),w,b
 39951   014026  50DE               	movf	postinc2,w,c
 39952   014028  5950               	subwfb	(??_create_chain+5)& (0+255),w,b
 39953   01402A  50DE               	movf	postinc2,w,c
 39954   01402C  5951               	subwfb	(??_create_chain+6)& (0+255),w,b
 39955   01402E  50DE               	movf	postinc2,w,c
 39956   014030  5952               	subwfb	(??_create_chain+7)& (0+255),w,b
 39957   014032  A0D8               	btfss	status,0,c
 39958   014034  EF1E  F0A0         	goto	u28571
 39959   014038  EF20  F0A0         	goto	u28570
 39960   01403C                     u28571:
 39961   01403C  EF2B  F0A0         	goto	l1568
 39962   014040                     u28570:
 39963   014040                     
 39964                           ; BSR set to: 6
 39965   014040  EE20 F010          	lfsr	2,16
 39966   014044  515C               	movf	create_chain@fs& (0+255),w,b
 39967   014046  26D9               	addwf	fsr2l,f,c
 39968   014048  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39969   01404A  22DA               	addwfc	fsr2h,f,c
 39970   01404C  06DE               	decf	postinc2,f,c
 39971   01404E  0E00               	movlw	0
 39972   014050  5ADE               	subwfb	postinc2,f,c
 39973   014052  5ADE               	subwfb	postinc2,f,c
 39974   014054  5ADE               	subwfb	postinc2,f,c
 39975   014056                     l1568:
 39976                           
 39977                           ; BSR set to: 6
 39978                           ;../fatfs/ff.c: 1610:   fs->fsi_flag |= 1;
 39979   014056  EE20 F005          	lfsr	2,5
 39980   01405A  515C               	movf	create_chain@fs& (0+255),w,b
 39981   01405C  26D9               	addwf	fsr2l,f,c
 39982   01405E  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39983   014060  22DA               	addwfc	fsr2h,f,c
 39984   014062  0E00               	movlw	0
 39985   014064  80DB               	bsf	plusw2,0,c
 39986                           
 39987                           ;../fatfs/ff.c: 1611:  } else {
 39988   014066  EF4B  F0A0         	goto	l1569
 39989   01406A                     l21305:
 39990                           
 39991                           ; BSR set to: 6
 39992                           ;../fatfs/ff.c: 1612:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 39993   01406A  0553               	decf	create_chain@res& (0+255),w,b
 39994   01406C  B4D8               	btfsc	status,2,c
 39995   01406E  EF3B  F0A0         	goto	u28581
 39996   014072  EF3D  F0A0         	goto	u28580
 39997   014076                     u28581:
 39998   014076  EF47  F0A0         	goto	l1571
 39999   01407A                     u28580:
 40000   01407A                     
 40001                           ; BSR set to: 6
 40002   01407A  0E01               	movlw	1
 40003   01407C  6F58               	movwf	create_chain@ncl& (0+255),b
 40004   01407E  0E00               	movlw	0
 40005   014080  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 40006   014082  0E00               	movlw	0
 40007   014084  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 40008   014086  0E00               	movlw	0
 40009   014088  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 40010   01408A  EF4B  F0A0         	goto	l1569
 40011   01408E                     l1571:
 40012                           
 40013                           ; BSR set to: 6
 40014   01408E  6958               	setf	create_chain@ncl& (0+255),b
 40015   014090  6959               	setf	(create_chain@ncl+1)& (0+255),b
 40016   014092  695A               	setf	(create_chain@ncl+2)& (0+255),b
 40017   014094  695B               	setf	(create_chain@ncl+3)& (0+255),b
 40018   014096                     l1569:
 40019                           
 40020                           ; BSR set to: 6
 40021                           ;../fatfs/ff.c: 1615:  return ncl;
 40022   014096  C658  F645         	movff	create_chain@ncl,?_create_chain
 40023   01409A  C659  F646         	movff	create_chain@ncl+1,?_create_chain+1
 40024   01409E  C65A  F647         	movff	create_chain@ncl+2,?_create_chain+2
 40025   0140A2  C65B  F648         	movff	create_chain@ncl+3,?_create_chain+3
 40026   0140A6                     l1545:
 40027                           
 40028                           ; BSR set to: 6
 40029   0140A6  0012               	return		;funcret
 40030   0140A8                     __end_of_create_chain:
 40031                           	callstack 0
 40032                           
 40033 ;; *************** function _put_fat *****************
 40034 ;; Defined at:
 40035 ;;		line 1240 in file "../fatfs/ff.c"
 40036 ;; Parameters:    Size  Location     Type
 40037 ;;  fs              2   36[BANK6 ] PTR struct .
 40038 ;;		 -> fs(564), NULL(0), 
 40039 ;;  clst            4   38[BANK6 ] unsigned long 
 40040 ;;  val             4   42[BANK6 ] unsigned long 
 40041 ;; Auto vars:     Size  Location     Type
 40042 ;;  bc              2   66[BANK6 ] unsigned int 
 40043 ;;  p               2   64[BANK6 ] PTR unsigned char 
 40044 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40045 ;;  res             1   68[BANK6 ] enum E597
 40046 ;; Return value:  Size  Location     Type
 40047 ;;                  1    wreg      enum E597
 40048 ;; Registers used:
 40049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 40050 ;; Tracked objects:
 40051 ;;		On entry : 0/0
 40052 ;;		On exit  : 0/0
 40053 ;;		Unchanged: 0/0
 40054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40055 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40056 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40057 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40058 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40059 ;;Total ram usage:       33 bytes
 40060 ;; Hardware stack levels used: 1
 40061 ;; Hardware stack levels required when called: 14
 40062 ;; This function calls:
 40063 ;;		_ld_dword
 40064 ;;		_move_window
 40065 ;;		_st_dword
 40066 ;;		_st_word
 40067 ;; This function is called by:
 40068 ;;		_remove_chain
 40069 ;;		_create_chain
 40070 ;; This function uses a non-reentrant model
 40071 ;;
 40072                           
 40073                           	psect	text107
 40074   0140A8                     __ptext107:
 40075                           	callstack 0
 40076   0140A8                     _put_fat:
 40077                           	callstack 104
 40078   0140A8                     
 40079                           ;../fatfs/ff.c: 1241:  FATFS* fs,;../fatfs/ff.c: 1242:  DWORD clst,;../fatfs/ff.c: 1243:
      +                            DWORD val;../fatfs/ff.c: 1245: {;../fatfs/ff.c: 1246:  UINT bc;;../fatfs/ff.c: 1247:  
      +                          BYTE *p;;../fatfs/ff.c: 1248:  FRESULT res = FR_INT_ERR;
 40080   0140A8  0E02               	movlw	2
 40081   0140AA  0106               	movlb	6	; () banked
 40082   0140AC  6F44               	movwf	put_fat@res& (0+255),b
 40083   0140AE                     
 40084                           ; BSR set to: 6
 40085                           ;../fatfs/ff.c: 1251:  if (clst >= 2 && clst < fs->n_fatent) {
 40086   0140AE  5129               	movf	(put_fat@clst+3)& (0+255),w,b
 40087   0140B0  1128               	iorwf	(put_fat@clst+2)& (0+255),w,b
 40088   0140B2  1127               	iorwf	(put_fat@clst+1)& (0+255),w,b
 40089   0140B4  E109               	bnz	u28150
 40090   0140B6  0E02               	movlw	2
 40091   0140B8  5D26               	subwf	put_fat@clst& (0+255),w,b
 40092   0140BA  A0D8               	btfss	status,0,c
 40093   0140BC  EF62  F0A0         	goto	u28151
 40094   0140C0  EF64  F0A0         	goto	u28150
 40095   0140C4                     u28151:
 40096   0140C4  EFC8  F0A2         	goto	l21175
 40097   0140C8                     u28150:
 40098   0140C8                     
 40099                           ; BSR set to: 6
 40100   0140C8  EE20 F018          	lfsr	2,24
 40101   0140CC  5124               	movf	put_fat@fs& (0+255),w,b
 40102   0140CE  26D9               	addwf	fsr2l,f,c
 40103   0140D0  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40104   0140D2  22DA               	addwfc	fsr2h,f,c
 40105   0140D4  50DE               	movf	postinc2,w,c
 40106   0140D6  5D26               	subwf	put_fat@clst& (0+255),w,b
 40107   0140D8  50DE               	movf	postinc2,w,c
 40108   0140DA  5927               	subwfb	(put_fat@clst+1)& (0+255),w,b
 40109   0140DC  50DE               	movf	postinc2,w,c
 40110   0140DE  5928               	subwfb	(put_fat@clst+2)& (0+255),w,b
 40111   0140E0  50DE               	movf	postinc2,w,c
 40112   0140E2  5929               	subwfb	(put_fat@clst+3)& (0+255),w,b
 40113   0140E4  B0D8               	btfsc	status,0,c
 40114   0140E6  EF77  F0A0         	goto	u28161
 40115   0140EA  EF79  F0A0         	goto	u28160
 40116   0140EE                     u28161:
 40117   0140EE  EFC8  F0A2         	goto	l21175
 40118   0140F2                     u28160:
 40119   0140F2  EFB5  F0A2         	goto	l21173
 40120   0140F6                     l1497:
 40121                           
 40122                           ; BSR set to: 6
 40123                           ;../fatfs/ff.c: 1254:    bc = (UINT)clst; bc += bc / 2;
 40124   0140F6  C626  F642         	movff	put_fat@clst,put_fat@bc
 40125   0140FA  C627  F643         	movff	put_fat@clst+1,put_fat@bc+1
 40126   0140FE                     
 40127                           ; BSR set to: 6
 40128   0140FE  90D8               	bcf	status,0,c
 40129   014100  3143               	rrcf	(put_fat@bc+1)& (0+255),w,b
 40130   014102  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40131   014104  3142               	rrcf	put_fat@bc& (0+255),w,b
 40132   014106  6F2E               	movwf	??_put_fat& (0+255),b
 40133   014108  512E               	movf	??_put_fat& (0+255),w,b
 40134   01410A  2742               	addwf	put_fat@bc& (0+255),f,b
 40135   01410C  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40136   01410E  2343               	addwfc	(put_fat@bc+1)& (0+255),f,b
 40137   014110                     
 40138                           ; BSR set to: 6
 40139                           ;../fatfs/ff.c: 1255:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 40140   014110  C624  F61A         	movff	put_fat@fs,move_window@fs
 40141   014114  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40142   014118  EE20 F024          	lfsr	2,36
 40143   01411C  5124               	movf	put_fat@fs& (0+255),w,b
 40144   01411E  26D9               	addwf	fsr2l,f,c
 40145   014120  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40146   014122  22DA               	addwfc	fsr2h,f,c
 40147   014124  C4DE F62E          	movff	postinc2,??_put_fat
 40148   014128  C4DE F62F          	movff	postinc2,??_put_fat+1
 40149   01412C  C4DE F630          	movff	postinc2,??_put_fat+2
 40150   014130  C4DE F631          	movff	postinc2,??_put_fat+3
 40151   014134  C642  F632         	movff	put_fat@bc,??_put_fat+4
 40152   014138  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 40153   01413C  0E09               	movlw	9
 40154   01413E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40155   014140                     u28175:
 40156   014140  90D8               	bcf	status,0,c
 40157   014142  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40158   014144  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40159   014146  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 40160   014148  EFA0  F0A0         	goto	u28175
 40161   01414C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40162   01414E  252E               	addwf	??_put_fat& (0+255),w,b
 40163   014150  6F1C               	movwf	move_window@sect& (0+255),b
 40164   014152  5133               	movf	(??_put_fat+5)& (0+255),w,b
 40165   014154  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 40166   014156  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40167   014158  0E00               	movlw	0
 40168   01415A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 40169   01415C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40170   01415E  0E00               	movlw	0
 40171   014160  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40172   014162  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40173   014164  ECAB  F0EF         	call	_move_window	;wreg free
 40174   014168  0106               	movlb	6	; () banked
 40175   01416A  6F44               	movwf	put_fat@res& (0+255),b
 40176   01416C                     
 40177                           ; BSR set to: 6
 40178                           ;../fatfs/ff.c: 1256:    if (res != FR_OK) break;
 40179   01416C  5144               	movf	put_fat@res& (0+255),w,b
 40180   01416E  B4D8               	btfsc	status,2,c
 40181   014170  EFBC  F0A0         	goto	u28181
 40182   014174  EFBE  F0A0         	goto	u28180
 40183   014178                     u28181:
 40184   014178  EFC0  F0A0         	goto	l21119
 40185   01417C                     u28180:
 40186   01417C  EFC8  F0A2         	goto	l21175
 40187   014180                     l21119:
 40188                           
 40189                           ; BSR set to: 6
 40190                           ;../fatfs/ff.c: 1257:    p = fs->win + bc++ % ((UINT)512);
 40191   014180  0EFF               	movlw	255
 40192   014182  1542               	andwf	put_fat@bc& (0+255),w,b
 40193   014184  6F2E               	movwf	??_put_fat& (0+255),b
 40194   014186  0E01               	movlw	1
 40195   014188  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 40196   01418A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40197   01418C  512E               	movf	??_put_fat& (0+255),w,b
 40198   01418E  2524               	addwf	put_fat@fs& (0+255),w,b
 40199   014190  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40200   014192  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40201   014194  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40202   014196  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40203   014198  0E34               	movlw	52
 40204   01419A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 40205   01419C  6F40               	movwf	put_fat@p& (0+255),b
 40206   01419E  0E00               	movlw	0
 40207   0141A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40208   0141A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 40209   0141A4                     
 40210                           ; BSR set to: 6
 40211   0141A4  4B42               	infsnz	put_fat@bc& (0+255),f,b
 40212   0141A6  2B43               	incf	(put_fat@bc+1)& (0+255),f,b
 40213   0141A8                     
 40214                           ; BSR set to: 6
 40215                           ;../fatfs/ff.c: 1258:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 40216   0141A8  B126               	btfsc	put_fat@clst& (0+255),0,b
 40217   0141AA  EFD9  F0A0         	goto	u28191
 40218   0141AE  EFDB  F0A0         	goto	u28190
 40219   0141B2                     u28191:
 40220   0141B2  EFE0  F0A0         	goto	l21127
 40221   0141B6                     u28190:
 40222   0141B6                     
 40223                           ; BSR set to: 6
 40224   0141B6  C62A  F63C         	movff	put_fat@val,_put_fat$2184
 40225   0141BA  6B3D               	clrf	(_put_fat$2184+1)& (0+255),b
 40226   0141BC  EFFA  F0A0         	goto	l21129
 40227   0141C0                     l21127:
 40228                           
 40229                           ; BSR set to: 6
 40230   0141C0  512A               	movf	put_fat@val& (0+255),w,b
 40231   0141C2  6F2E               	movwf	??_put_fat& (0+255),b
 40232   0141C4  6B2F               	clrf	(??_put_fat+1)& (0+255),b
 40233   0141C6  3B2E               	swapf	??_put_fat& (0+255),f,b
 40234   0141C8  3B2F               	swapf	(??_put_fat+1)& (0+255),f,b
 40235   0141CA  0EF0               	movlw	240
 40236   0141CC  172F               	andwf	(??_put_fat+1)& (0+255),f,b
 40237   0141CE  512E               	movf	??_put_fat& (0+255),w,b
 40238   0141D0  0B0F               	andlw	15
 40239   0141D2  132F               	iorwf	(??_put_fat+1)& (0+255),f,b
 40240   0141D4  0EF0               	movlw	240
 40241   0141D6  172E               	andwf	??_put_fat& (0+255),f,b
 40242   0141D8  C640  F4D9         	movff	put_fat@p,fsr2l
 40243   0141DC  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40244   0141E0  50DF               	movf	indf2,w,c
 40245   0141E2  0B0F               	andlw	15
 40246   0141E4  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40247   0141E6  6B31               	clrf	(??_put_fat+3)& (0+255),b
 40248   0141E8  512E               	movf	??_put_fat& (0+255),w,b
 40249   0141EA  1130               	iorwf	(??_put_fat+2)& (0+255),w,b
 40250   0141EC  6F3C               	movwf	_put_fat$2184& (0+255),b
 40251   0141EE  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40252   0141F0  1131               	iorwf	(??_put_fat+3)& (0+255),w,b
 40253   0141F2  6F3D               	movwf	(_put_fat$2184+1)& (0+255),b
 40254   0141F4                     l21129:
 40255                           
 40256                           ; BSR set to: 6
 40257   0141F4  C640  F4D9         	movff	put_fat@p,fsr2l
 40258   0141F8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40259   0141FC  C63C  F4DF         	movff	_put_fat$2184,indf2
 40260   014200                     
 40261                           ; BSR set to: 6
 40262                           ;../fatfs/ff.c: 1259:    fs->wflag = 1;
 40263   014200  EE20 F004          	lfsr	2,4
 40264   014204  5124               	movf	put_fat@fs& (0+255),w,b
 40265   014206  26D9               	addwf	fsr2l,f,c
 40266   014208  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40267   01420A  22DA               	addwfc	fsr2h,f,c
 40268   01420C  0E01               	movlw	1
 40269   01420E  6EDF               	movwf	indf2,c
 40270   014210                     
 40271                           ; BSR set to: 6
 40272                           ;../fatfs/ff.c: 1260:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 40273   014210  C624  F61A         	movff	put_fat@fs,move_window@fs
 40274   014214  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40275   014218  EE20 F024          	lfsr	2,36
 40276   01421C  5124               	movf	put_fat@fs& (0+255),w,b
 40277   01421E  26D9               	addwf	fsr2l,f,c
 40278   014220  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40279   014222  22DA               	addwfc	fsr2h,f,c
 40280   014224  C4DE F62E          	movff	postinc2,??_put_fat
 40281   014228  C4DE F62F          	movff	postinc2,??_put_fat+1
 40282   01422C  C4DE F630          	movff	postinc2,??_put_fat+2
 40283   014230  C4DE F631          	movff	postinc2,??_put_fat+3
 40284   014234  C642  F632         	movff	put_fat@bc,??_put_fat+4
 40285   014238  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 40286   01423C  0E09               	movlw	9
 40287   01423E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40288   014240                     u28205:
 40289   014240  90D8               	bcf	status,0,c
 40290   014242  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40291   014244  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40292   014246  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 40293   014248  EF20  F0A1         	goto	u28205
 40294   01424C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40295   01424E  252E               	addwf	??_put_fat& (0+255),w,b
 40296   014250  6F1C               	movwf	move_window@sect& (0+255),b
 40297   014252  5133               	movf	(??_put_fat+5)& (0+255),w,b
 40298   014254  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 40299   014256  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40300   014258  0E00               	movlw	0
 40301   01425A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 40302   01425C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40303   01425E  0E00               	movlw	0
 40304   014260  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40305   014262  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40306   014264  ECAB  F0EF         	call	_move_window	;wreg free
 40307   014268  0106               	movlb	6	; () banked
 40308   01426A  6F44               	movwf	put_fat@res& (0+255),b
 40309   01426C                     
 40310                           ; BSR set to: 6
 40311                           ;../fatfs/ff.c: 1261:    if (res != FR_OK) break;
 40312   01426C  5144               	movf	put_fat@res& (0+255),w,b
 40313   01426E  B4D8               	btfsc	status,2,c
 40314   014270  EF3C  F0A1         	goto	u28211
 40315   014274  EF3E  F0A1         	goto	u28210
 40316   014278                     u28211:
 40317   014278  EF40  F0A1         	goto	l21139
 40318   01427C                     u28210:
 40319   01427C  EFC8  F0A2         	goto	l21175
 40320   014280                     l21139:
 40321                           
 40322                           ; BSR set to: 6
 40323                           ;../fatfs/ff.c: 1262:    p = fs->win + bc % ((UINT)512);
 40324   014280  0EFF               	movlw	255
 40325   014282  1542               	andwf	put_fat@bc& (0+255),w,b
 40326   014284  6F2E               	movwf	??_put_fat& (0+255),b
 40327   014286  0E01               	movlw	1
 40328   014288  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 40329   01428A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40330   01428C  512E               	movf	??_put_fat& (0+255),w,b
 40331   01428E  2524               	addwf	put_fat@fs& (0+255),w,b
 40332   014290  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40333   014292  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40334   014294  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40335   014296  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40336   014298  0E34               	movlw	52
 40337   01429A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 40338   01429C  6F40               	movwf	put_fat@p& (0+255),b
 40339   01429E  0E00               	movlw	0
 40340   0142A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40341   0142A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 40342   0142A4                     
 40343                           ; BSR set to: 6
 40344                           ;../fatfs/ff.c: 1263:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val
      +                           >> 8) & 0x0F));
 40345   0142A4  B126               	btfsc	put_fat@clst& (0+255),0,b
 40346   0142A6  EF57  F0A1         	goto	u28221
 40347   0142AA  EF59  F0A1         	goto	u28220
 40348   0142AE                     u28221:
 40349   0142AE  EF77  F0A1         	goto	l21145
 40350   0142B2                     u28220:
 40351   0142B2                     
 40352                           ; BSR set to: 6
 40353   0142B2  C62A  F62E         	movff	put_fat@val,??_put_fat
 40354   0142B6  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 40355   0142BA  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 40356   0142BE  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 40357   0142C2  C62F  F62E         	movff	??_put_fat+1,??_put_fat
 40358   0142C6  C630  F62F         	movff	??_put_fat+2,??_put_fat+1
 40359   0142CA  C631  F630         	movff	??_put_fat+3,??_put_fat+2
 40360   0142CE  6B31               	clrf	(??_put_fat+3)& (0+255),b
 40361   0142D0  0E0F               	movlw	15
 40362   0142D2  172E               	andwf	??_put_fat& (0+255),f,b
 40363   0142D4  C640  F4D9         	movff	put_fat@p,fsr2l
 40364   0142D8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40365   0142DC  50DF               	movf	indf2,w,c
 40366   0142DE  0BF0               	andlw	240
 40367   0142E0  112E               	iorwf	??_put_fat& (0+255),w,b
 40368   0142E2  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40369   0142E4  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40370   0142E6  6F3E               	movwf	_put_fat$2185& (0+255),b
 40371   0142E8  6B3F               	clrf	(_put_fat$2185+1)& (0+255),b
 40372   0142EA  EF8D  F0A1         	goto	l21147
 40373   0142EE                     l21145:
 40374                           
 40375                           ; BSR set to: 6
 40376   0142EE  C62A  F62E         	movff	put_fat@val,??_put_fat
 40377   0142F2  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 40378   0142F6  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 40379   0142FA  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 40380   0142FE  0E05               	movlw	5
 40381   014300  EF87  F0A1         	goto	u28230
 40382   014304                     u28235:
 40383   014304  90D8               	bcf	status,0,c
 40384   014306  3331               	rrcf	(??_put_fat+3)& (0+255),f,b
 40385   014308  3330               	rrcf	(??_put_fat+2)& (0+255),f,b
 40386   01430A  332F               	rrcf	(??_put_fat+1)& (0+255),f,b
 40387   01430C  332E               	rrcf	??_put_fat& (0+255),f,b
 40388   01430E                     u28230:
 40389   01430E  2EE8               	decfsz	wreg,f,c
 40390   014310  EF82  F0A1         	goto	u28235
 40391   014314  512E               	movf	??_put_fat& (0+255),w,b
 40392   014316  6F3E               	movwf	_put_fat$2185& (0+255),b
 40393   014318  6B3F               	clrf	(_put_fat$2185+1)& (0+255),b
 40394   01431A                     l21147:
 40395                           
 40396                           ; BSR set to: 6
 40397   01431A  C640  F4D9         	movff	put_fat@p,fsr2l
 40398   01431E  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40399   014322  C63E  F4DF         	movff	_put_fat$2185,indf2
 40400                           
 40401                           ;../fatfs/ff.c: 1264:    fs->wflag = 1;
 40402   014326  EE20 F004          	lfsr	2,4
 40403   01432A  5124               	movf	put_fat@fs& (0+255),w,b
 40404   01432C  26D9               	addwf	fsr2l,f,c
 40405   01432E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40406   014330  22DA               	addwfc	fsr2h,f,c
 40407   014332  0E01               	movlw	1
 40408   014334  6EDF               	movwf	indf2,c
 40409                           
 40410                           ;../fatfs/ff.c: 1265:    break;
 40411   014336  EFC8  F0A2         	goto	l21175
 40412   01433A                     l21149:
 40413                           
 40414                           ; BSR set to: 6
 40415                           ;../fatfs/ff.c: 1268:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)))
      +                          ;
 40416   01433A  C624  F61A         	movff	put_fat@fs,move_window@fs
 40417   01433E  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40418   014342  EE20 F024          	lfsr	2,36
 40419   014346  5124               	movf	put_fat@fs& (0+255),w,b
 40420   014348  26D9               	addwf	fsr2l,f,c
 40421   01434A  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40422   01434C  22DA               	addwfc	fsr2h,f,c
 40423   01434E  C4DE F62E          	movff	postinc2,??_put_fat
 40424   014352  C4DE F62F          	movff	postinc2,??_put_fat+1
 40425   014356  C4DE F630          	movff	postinc2,??_put_fat+2
 40426   01435A  C4DE F631          	movff	postinc2,??_put_fat+3
 40427   01435E  C626  F632         	movff	put_fat@clst,??_put_fat+4
 40428   014362  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 40429   014366  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 40430   01436A  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 40431   01436E  C633  F632         	movff	??_put_fat+5,??_put_fat+4
 40432   014372  C634  F633         	movff	??_put_fat+6,??_put_fat+5
 40433   014376  C635  F634         	movff	??_put_fat+7,??_put_fat+6
 40434   01437A  6B35               	clrf	(??_put_fat+7)& (0+255),b
 40435   01437C  512E               	movf	??_put_fat& (0+255),w,b
 40436   01437E  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40437   014380  6F1C               	movwf	move_window@sect& (0+255),b
 40438   014382  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40439   014384  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40440   014386  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40441   014388  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40442   01438A  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 40443   01438C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40444   01438E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40445   014390  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 40446   014392  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40447   014394  ECAB  F0EF         	call	_move_window	;wreg free
 40448   014398  0106               	movlb	6	; () banked
 40449   01439A  6F44               	movwf	put_fat@res& (0+255),b
 40450   01439C                     
 40451                           ; BSR set to: 6
 40452                           ;../fatfs/ff.c: 1269:    if (res != FR_OK) break;
 40453   01439C  5144               	movf	put_fat@res& (0+255),w,b
 40454   01439E  B4D8               	btfsc	status,2,c
 40455   0143A0  EFD4  F0A1         	goto	u28241
 40456   0143A4  EFD6  F0A1         	goto	u28240
 40457   0143A8                     u28241:
 40458   0143A8  EFD8  F0A1         	goto	l21155
 40459   0143AC                     u28240:
 40460   0143AC  EFC8  F0A2         	goto	l21175
 40461   0143B0                     l21155:
 40462                           
 40463                           ; BSR set to: 6
 40464                           ;../fatfs/ff.c: 1270:    st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
 40465   0143B0  C626  F62E         	movff	put_fat@clst,??_put_fat
 40466   0143B4  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40467   0143B8  90D8               	bcf	status,0,c
 40468   0143BA  372E               	rlcf	??_put_fat& (0+255),f,b
 40469   0143BC  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40470   0143BE  0EFF               	movlw	255
 40471   0143C0  152E               	andwf	??_put_fat& (0+255),w,b
 40472   0143C2  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40473   0143C4  0E01               	movlw	1
 40474   0143C6  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40475   0143C8  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40476   0143CA  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40477   0143CC  2524               	addwf	put_fat@fs& (0+255),w,b
 40478   0143CE  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40479   0143D0  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40480   0143D2  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40481   0143D4  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40482   0143D6  0E34               	movlw	52
 40483   0143D8  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40484   0143DA  6E04               	movwf	st_word@ptr^(0+1280),c
 40485   0143DC  0E00               	movlw	0
 40486   0143DE  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40487   0143E0  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 40488   0143E2  C62A  F506         	movff	put_fat@val,st_word@val
 40489   0143E6  C62B  F507         	movff	put_fat@val+1,st_word@val+1
 40490   0143EA  ECC6  F0FF         	call	_st_word	;wreg free
 40491   0143EE                     
 40492                           ;../fatfs/ff.c: 1271:    fs->wflag = 1;
 40493   0143EE  0106               	movlb	6	; () banked
 40494   0143F0  EE20 F004          	lfsr	2,4
 40495   0143F4  5124               	movf	put_fat@fs& (0+255),w,b
 40496   0143F6  26D9               	addwf	fsr2l,f,c
 40497   0143F8  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40498   0143FA  22DA               	addwfc	fsr2h,f,c
 40499   0143FC  0E01               	movlw	1
 40500   0143FE  6EDF               	movwf	indf2,c
 40501                           
 40502                           ;../fatfs/ff.c: 1272:    break;
 40503   014400  EFC8  F0A2         	goto	l21175
 40504   014404                     l21159:
 40505                           
 40506                           ; BSR set to: 6
 40507                           ;../fatfs/ff.c: 1278:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)))
      +                          ;
 40508   014404  C624  F61A         	movff	put_fat@fs,move_window@fs
 40509   014408  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40510   01440C  EE20 F024          	lfsr	2,36
 40511   014410  5124               	movf	put_fat@fs& (0+255),w,b
 40512   014412  26D9               	addwf	fsr2l,f,c
 40513   014414  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40514   014416  22DA               	addwfc	fsr2h,f,c
 40515   014418  C4DE F62E          	movff	postinc2,??_put_fat
 40516   01441C  C4DE F62F          	movff	postinc2,??_put_fat+1
 40517   014420  C4DE F630          	movff	postinc2,??_put_fat+2
 40518   014424  C4DE F631          	movff	postinc2,??_put_fat+3
 40519   014428  C626  F632         	movff	put_fat@clst,??_put_fat+4
 40520   01442C  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 40521   014430  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 40522   014434  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 40523   014438  0E08               	movlw	8
 40524   01443A  EF24  F0A2         	goto	u28250
 40525   01443E                     u28255:
 40526   01443E  90D8               	bcf	status,0,c
 40527   014440  3335               	rrcf	(??_put_fat+7)& (0+255),f,b
 40528   014442  3334               	rrcf	(??_put_fat+6)& (0+255),f,b
 40529   014444  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40530   014446  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40531   014448                     u28250:
 40532   014448  2EE8               	decfsz	wreg,f,c
 40533   01444A  EF1F  F0A2         	goto	u28255
 40534   01444E  512E               	movf	??_put_fat& (0+255),w,b
 40535   014450  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40536   014452  6F1C               	movwf	move_window@sect& (0+255),b
 40537   014454  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40538   014456  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40539   014458  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40540   01445A  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40541   01445C  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 40542   01445E  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40543   014460  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40544   014462  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 40545   014464  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40546   014466  ECAB  F0EF         	call	_move_window	;wreg free
 40547   01446A  0106               	movlb	6	; () banked
 40548   01446C  6F44               	movwf	put_fat@res& (0+255),b
 40549   01446E                     
 40550                           ; BSR set to: 6
 40551                           ;../fatfs/ff.c: 1279:    if (res != FR_OK) break;
 40552   01446E  5144               	movf	put_fat@res& (0+255),w,b
 40553   014470  B4D8               	btfsc	status,2,c
 40554   014472  EF3D  F0A2         	goto	u28261
 40555   014476  EF3F  F0A2         	goto	u28260
 40556   01447A                     u28261:
 40557   01447A  EF41  F0A2         	goto	l21167
 40558   01447E                     u28260:
 40559   01447E  EFC8  F0A2         	goto	l21175
 40560   014482                     l21167:
 40561                           
 40562                           ; BSR set to: 6
 40563                           ;../fatfs/ff.c: 1281:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UI
      +                          NT)512)) & 0xF0000000);
 40564   014482  C626  F62E         	movff	put_fat@clst,??_put_fat
 40565   014486  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40566   01448A  90D8               	bcf	status,0,c
 40567   01448C  372E               	rlcf	??_put_fat& (0+255),f,b
 40568   01448E  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40569   014490  90D8               	bcf	status,0,c
 40570   014492  372E               	rlcf	??_put_fat& (0+255),f,b
 40571   014494  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40572   014496  0EFF               	movlw	255
 40573   014498  152E               	andwf	??_put_fat& (0+255),w,b
 40574   01449A  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40575   01449C  0E01               	movlw	1
 40576   01449E  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40577   0144A0  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40578   0144A2  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40579   0144A4  2524               	addwf	put_fat@fs& (0+255),w,b
 40580   0144A6  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40581   0144A8  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40582   0144AA  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40583   0144AC  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40584   0144AE  0E34               	movlw	52
 40585   0144B0  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40586   0144B2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 40587   0144B4  0E00               	movlw	0
 40588   0144B6  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40589   0144B8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 40590   0144BA  ECC7  F0F2         	call	_ld_dword	;wreg free
 40591   0144BE  0E00               	movlw	0
 40592   0144C0  1404               	andwf	?_ld_dword^(0+1280),w,c
 40593   0144C2  0106               	movlb	6	; () banked
 40594   0144C4  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40595   0144C6  0E00               	movlw	0
 40596   0144C8  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 40597   0144CA  6F35               	movwf	(??_put_fat+7)& (0+255),b
 40598   0144CC  0E00               	movlw	0
 40599   0144CE  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 40600   0144D0  6F36               	movwf	(??_put_fat+8)& (0+255),b
 40601   0144D2  0EF0               	movlw	240
 40602   0144D4  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 40603   0144D6  6F37               	movwf	(??_put_fat+9)& (0+255),b
 40604   0144D8  0EFF               	movlw	255
 40605   0144DA  152A               	andwf	put_fat@val& (0+255),w,b
 40606   0144DC  6F38               	movwf	(??_put_fat+10)& (0+255),b
 40607   0144DE  0EFF               	movlw	255
 40608   0144E0  152B               	andwf	(put_fat@val+1)& (0+255),w,b
 40609   0144E2  6F39               	movwf	(??_put_fat+11)& (0+255),b
 40610   0144E4  0EFF               	movlw	255
 40611   0144E6  152C               	andwf	(put_fat@val+2)& (0+255),w,b
 40612   0144E8  6F3A               	movwf	(??_put_fat+12)& (0+255),b
 40613   0144EA  0E0F               	movlw	15
 40614   0144EC  152D               	andwf	(put_fat@val+3)& (0+255),w,b
 40615   0144EE  6F3B               	movwf	(??_put_fat+13)& (0+255),b
 40616   0144F0  5134               	movf	(??_put_fat+6)& (0+255),w,b
 40617   0144F2  1138               	iorwf	(??_put_fat+10)& (0+255),w,b
 40618   0144F4  6F2A               	movwf	put_fat@val& (0+255),b
 40619   0144F6  5135               	movf	(??_put_fat+7)& (0+255),w,b
 40620   0144F8  1139               	iorwf	(??_put_fat+11)& (0+255),w,b
 40621   0144FA  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 40622   0144FC  5136               	movf	(??_put_fat+8)& (0+255),w,b
 40623   0144FE  113A               	iorwf	(??_put_fat+12)& (0+255),w,b
 40624   014500  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 40625   014502  5137               	movf	(??_put_fat+9)& (0+255),w,b
 40626   014504  113B               	iorwf	(??_put_fat+13)& (0+255),w,b
 40627   014506  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 40628   014508                     
 40629                           ; BSR set to: 6
 40630                           ;../fatfs/ff.c: 1283:    st_dword(fs->win + clst * 4 % ((UINT)512), val);
 40631   014508  C626  F62E         	movff	put_fat@clst,??_put_fat
 40632   01450C  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40633   014510  90D8               	bcf	status,0,c
 40634   014512  372E               	rlcf	??_put_fat& (0+255),f,b
 40635   014514  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40636   014516  90D8               	bcf	status,0,c
 40637   014518  372E               	rlcf	??_put_fat& (0+255),f,b
 40638   01451A  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40639   01451C  0EFF               	movlw	255
 40640   01451E  152E               	andwf	??_put_fat& (0+255),w,b
 40641   014520  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40642   014522  0E01               	movlw	1
 40643   014524  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40644   014526  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40645   014528  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40646   01452A  2524               	addwf	put_fat@fs& (0+255),w,b
 40647   01452C  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40648   01452E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40649   014530  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40650   014532  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40651   014534  0E34               	movlw	52
 40652   014536  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40653   014538  6E04               	movwf	st_dword@ptr^(0+1280),c
 40654   01453A  0E00               	movlw	0
 40655   01453C  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40656   01453E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 40657   014540  C62A  F506         	movff	put_fat@val,st_dword@val
 40658   014544  C62B  F507         	movff	put_fat@val+1,st_dword@val+1
 40659   014548  C62C  F508         	movff	put_fat@val+2,st_dword@val+2
 40660   01454C  C62D  F509         	movff	put_fat@val+3,st_dword@val+3
 40661   014550  ECDD  F0FA         	call	_st_dword	;wreg free
 40662   014554                     
 40663                           ;../fatfs/ff.c: 1284:    fs->wflag = 1;
 40664   014554  0106               	movlb	6	; () banked
 40665   014556  EE20 F004          	lfsr	2,4
 40666   01455A  5124               	movf	put_fat@fs& (0+255),w,b
 40667   01455C  26D9               	addwf	fsr2l,f,c
 40668   01455E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40669   014560  22DA               	addwfc	fsr2h,f,c
 40670   014562  0E01               	movlw	1
 40671   014564  6EDF               	movwf	indf2,c
 40672                           
 40673                           ;../fatfs/ff.c: 1285:    break;
 40674   014566  EFC8  F0A2         	goto	l21175
 40675   01456A                     l21173:
 40676                           
 40677                           ; BSR set to: 6
 40678   01456A  C624  F4D9         	movff	put_fat@fs,fsr2l
 40679   01456E  C625  F4DA         	movff	put_fat@fs+1,fsr2h
 40680   014572  50DF               	movf	indf2,w,c
 40681                           
 40682                           ; Switch size 1, requested type "simple"
 40683                           ; Number of cases is 3, Range of values is 1 to 3
 40684                           ; switch strategies available:
 40685                           ; Name         Instructions Cycles
 40686                           ; simple_byte           10     6 (average)
 40687                           ;	Chosen strategy is simple_byte
 40688   014574  0A01               	xorlw	1	; case 1
 40689   014576  B4D8               	btfsc	status,2,c
 40690   014578  EF7B  F0A0         	goto	l1497
 40691   01457C  0A03               	xorlw	3	; case 2
 40692   01457E  B4D8               	btfsc	status,2,c
 40693   014580  EF9D  F0A1         	goto	l21149
 40694   014584  0A01               	xorlw	1	; case 3
 40695   014586  B4D8               	btfsc	status,2,c
 40696   014588  EF02  F0A2         	goto	l21159
 40697   01458C  EFC8  F0A2         	goto	l21175
 40698   014590                     l21175:
 40699                           
 40700                           ; BSR set to: 6
 40701                           ;../fatfs/ff.c: 1288:  return res;
 40702   014590  5144               	movf	put_fat@res& (0+255),w,b
 40703   014592                     
 40704                           ; BSR set to: 6
 40705   014592  0012               	return		;funcret
 40706   014594                     __end_of_put_fat:
 40707                           	callstack 0
 40708                           
 40709 ;; *************** function _st_word *****************
 40710 ;; Defined at:
 40711 ;;		line 657 in file "../fatfs/ff.c"
 40712 ;; Parameters:    Size  Location     Type
 40713 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 40714 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40715 ;;  val             2    5[COMRAM] unsigned short 
 40716 ;; Auto vars:     Size  Location     Type
 40717 ;;		None
 40718 ;; Return value:  Size  Location     Type
 40719 ;;                  1    wreg      void 
 40720 ;; Registers used:
 40721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40722 ;; Tracked objects:
 40723 ;;		On entry : 0/0
 40724 ;;		On exit  : 0/0
 40725 ;;		Unchanged: 0/0
 40726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40731 ;;Total ram usage:        4 bytes
 40732 ;; Hardware stack levels used: 1
 40733 ;; Hardware stack levels required when called: 1
 40734 ;; This function calls:
 40735 ;;		Nothing
 40736 ;; This function is called by:
 40737 ;;		_sync_fs
 40738 ;;		_put_fat
 40739 ;;		_st_clust
 40740 ;;		_f_sync
 40741 ;; This function uses a non-reentrant model
 40742 ;;
 40743                           
 40744                           	psect	text108
 40745   01FF8C                     __ptext108:
 40746                           	callstack 0
 40747   01FF8C                     _st_word:
 40748                           	callstack 116
 40749   01FF8C                     
 40750                           ;../fatfs/ff.c: 657: static void st_word (BYTE* ptr, WORD val);../fatfs/ff.c: 658: {;../
      +                          fatfs/ff.c: 659:  *ptr++ = (BYTE)val; val >>= 8;
 40751   01FF8C  C504  F4D9         	movff	st_word@ptr,fsr2l
 40752   01FF90  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 40753   01FF94  C506  F4DF         	movff	st_word@val,indf2
 40754   01FF98  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 40755   01FF9A  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 40756   01FF9C  5007               	movf	(st_word@val+1)^(0+1280),w,c
 40757   01FF9E  6E06               	movwf	st_word@val^(0+1280),c
 40758   01FFA0  6A07               	clrf	(st_word@val+1)^(0+1280),c
 40759   01FFA2                     
 40760                           ;../fatfs/ff.c: 660:  *ptr++ = (BYTE)val;
 40761   01FFA2  C504  F4D9         	movff	st_word@ptr,fsr2l
 40762   01FFA6  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 40763   01FFAA  C506  F4DF         	movff	st_word@val,indf2
 40764   01FFAE  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 40765   01FFB0  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 40766   01FFB2  0012               	return		;funcret
 40767   01FFB4                     __end_of_st_word:
 40768                           	callstack 0
 40769                           
 40770 ;; *************** function _st_dword *****************
 40771 ;; Defined at:
 40772 ;;		line 663 in file "../fatfs/ff.c"
 40773 ;; Parameters:    Size  Location     Type
 40774 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 40775 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40776 ;;  val             4    5[COMRAM] unsigned long 
 40777 ;; Auto vars:     Size  Location     Type
 40778 ;;		None
 40779 ;; Return value:  Size  Location     Type
 40780 ;;                  1    wreg      void 
 40781 ;; Registers used:
 40782 ;;		fsr2l, fsr2h, status,2, status,0
 40783 ;; Tracked objects:
 40784 ;;		On entry : 0/0
 40785 ;;		On exit  : 0/0
 40786 ;;		Unchanged: 0/0
 40787 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40792 ;;Total ram usage:        6 bytes
 40793 ;; Hardware stack levels used: 1
 40794 ;; Hardware stack levels required when called: 1
 40795 ;; This function calls:
 40796 ;;		Nothing
 40797 ;; This function is called by:
 40798 ;;		_sync_fs
 40799 ;;		_put_fat
 40800 ;;		_f_open
 40801 ;;		_f_sync
 40802 ;;		_f_mkdir
 40803 ;; This function uses a non-reentrant model
 40804 ;;
 40805                           
 40806                           	psect	text109
 40807   01F5BA                     __ptext109:
 40808                           	callstack 0
 40809   01F5BA                     _st_dword:
 40810                           	callstack 116
 40811   01F5BA                     
 40812                           ;../fatfs/ff.c: 663: static void st_dword (BYTE* ptr, DWORD val);../fatfs/ff.c: 664: {;.
      +                          ./fatfs/ff.c: 665:  *ptr++ = (BYTE)val; val >>= 8;
 40813   01F5BA  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40814   01F5BE  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40815   01F5C2  C506  F4DF         	movff	st_dword@val,indf2
 40816   01F5C6  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40817   01F5C8  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40818   01F5CA  C507  F506         	movff	st_dword@val+1,st_dword@val
 40819   01F5CE  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40820   01F5D2  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40821   01F5D6  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40822   01F5D8                     
 40823                           ;../fatfs/ff.c: 666:  *ptr++ = (BYTE)val; val >>= 8;
 40824   01F5D8  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40825   01F5DC  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40826   01F5E0  C506  F4DF         	movff	st_dword@val,indf2
 40827   01F5E4  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40828   01F5E6  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40829   01F5E8  C507  F506         	movff	st_dword@val+1,st_dword@val
 40830   01F5EC  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40831   01F5F0  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40832   01F5F4  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40833   01F5F6                     
 40834                           ;../fatfs/ff.c: 667:  *ptr++ = (BYTE)val; val >>= 8;
 40835   01F5F6  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40836   01F5FA  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40837   01F5FE  C506  F4DF         	movff	st_dword@val,indf2
 40838   01F602  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40839   01F604  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40840   01F606  C507  F506         	movff	st_dword@val+1,st_dword@val
 40841   01F60A  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40842   01F60E  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40843   01F612  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40844   01F614                     
 40845                           ;../fatfs/ff.c: 668:  *ptr++ = (BYTE)val;
 40846   01F614  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40847   01F618  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40848   01F61C  C506  F4DF         	movff	st_dword@val,indf2
 40849   01F620  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40850   01F622  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40851   01F624  0012               	return		;funcret
 40852   01F626                     __end_of_st_dword:
 40853                           	callstack 0
 40854                           
 40855 ;; *************** function ___lldiv *****************
 40856 ;; Defined at:
 40857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
 40858 ;; Parameters:    Size  Location     Type
 40859 ;;  dividend        4    3[COMRAM] unsigned long 
 40860 ;;  divisor         4    7[COMRAM] unsigned long 
 40861 ;; Auto vars:     Size  Location     Type
 40862 ;;  quotient        4   11[COMRAM] unsigned long 
 40863 ;;  counter         1   15[COMRAM] unsigned char 
 40864 ;; Return value:  Size  Location     Type
 40865 ;;                  4    3[COMRAM] unsigned long 
 40866 ;; Registers used:
 40867 ;;		wreg, status,2, status,0
 40868 ;; Tracked objects:
 40869 ;;		On entry : 0/0
 40870 ;;		On exit  : 0/0
 40871 ;;		Unchanged: 0/0
 40872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40873 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40874 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40876 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40877 ;;Total ram usage:       13 bytes
 40878 ;; Hardware stack levels used: 1
 40879 ;; Hardware stack levels required when called: 1
 40880 ;; This function calls:
 40881 ;;		Nothing
 40882 ;; This function is called by:
 40883 ;;		_mount_volume
 40884 ;;		_f_lseek
 40885 ;; This function uses a non-reentrant model
 40886 ;;
 40887                           
 40888                           	psect	text110
 40889   01EAFC                     __ptext110:
 40890                           	callstack 0
 40891   01EAFC                     ___lldiv:
 40892                           	callstack 118
 40893   01EAFC  0E00               	movlw	0
 40894   01EAFE  6E0C               	movwf	___lldiv@quotient^(0+1280),c
 40895   01EB00  0E00               	movlw	0
 40896   01EB02  6E0D               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40897   01EB04  0E00               	movlw	0
 40898   01EB06  6E0E               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40899   01EB08  0E00               	movlw	0
 40900   01EB0A  6E0F               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40901   01EB0C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40902   01EB0E  1009               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40903   01EB10  100A               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40904   01EB12  100B               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40905   01EB14  B4D8               	btfsc	status,2,c
 40906   01EB16  EF8F  F0F5         	goto	u30221
 40907   01EB1A  EF91  F0F5         	goto	u30220
 40908   01EB1E                     u30221:
 40909   01EB1E  EFC7  F0F5         	goto	l2572
 40910   01EB22                     u30220:
 40911   01EB22  0E01               	movlw	1
 40912   01EB24  6E10               	movwf	___lldiv@counter^(0+1280),c
 40913   01EB26  EF9B  F0F5         	goto	l22125
 40914   01EB2A                     l22123:
 40915   01EB2A  90D8               	bcf	status,0,c
 40916   01EB2C  3608               	rlcf	___lldiv@divisor^(0+1280),f,c
 40917   01EB2E  3609               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40918   01EB30  360A               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40919   01EB32  360B               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40920   01EB34  2A10               	incf	___lldiv@counter^(0+1280),f,c
 40921   01EB36                     l22125:
 40922   01EB36  AE0B               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40923   01EB38  EFA0  F0F5         	goto	u30231
 40924   01EB3C  EFA2  F0F5         	goto	u30230
 40925   01EB40                     u30231:
 40926   01EB40  EF95  F0F5         	goto	l22123
 40927   01EB44                     u30230:
 40928   01EB44                     l22127:
 40929   01EB44  90D8               	bcf	status,0,c
 40930   01EB46  360C               	rlcf	___lldiv@quotient^(0+1280),f,c
 40931   01EB48  360D               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40932   01EB4A  360E               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40933   01EB4C  360F               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40934   01EB4E  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40935   01EB50  5C04               	subwf	___lldiv@dividend^(0+1280),w,c
 40936   01EB52  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40937   01EB54  5805               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40938   01EB56  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40939   01EB58  5806               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40940   01EB5A  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40941   01EB5C  5807               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40942   01EB5E  A0D8               	btfss	status,0,c
 40943   01EB60  EFB4  F0F5         	goto	u30241
 40944   01EB64  EFB6  F0F5         	goto	u30240
 40945   01EB68                     u30241:
 40946   01EB68  EFBF  F0F5         	goto	l22135
 40947   01EB6C                     u30240:
 40948   01EB6C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40949   01EB6E  5E04               	subwf	___lldiv@dividend^(0+1280),f,c
 40950   01EB70  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40951   01EB72  5A05               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40952   01EB74  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40953   01EB76  5A06               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40954   01EB78  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40955   01EB7A  5A07               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40956   01EB7C  800C               	bsf	___lldiv@quotient^(0+1280),0,c
 40957   01EB7E                     l22135:
 40958   01EB7E  90D8               	bcf	status,0,c
 40959   01EB80  320B               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40960   01EB82  320A               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40961   01EB84  3209               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40962   01EB86  3208               	rrcf	___lldiv@divisor^(0+1280),f,c
 40963   01EB88  2E10               	decfsz	___lldiv@counter^(0+1280),f,c
 40964   01EB8A  EFA2  F0F5         	goto	l22127
 40965   01EB8E                     l2572:
 40966   01EB8E  C50C  F504         	movff	___lldiv@quotient,?___lldiv
 40967   01EB92  C50D  F505         	movff	___lldiv@quotient+1,?___lldiv+1
 40968   01EB96  C50E  F506         	movff	___lldiv@quotient+2,?___lldiv+2
 40969   01EB9A  C50F  F507         	movff	___lldiv@quotient+3,?___lldiv+3
 40970   01EB9E  0012               	return		;funcret
 40971   01EBA0                     __end_of___lldiv:
 40972                           	callstack 0
 40973                           
 40974 ;; *************** function _f_read *****************
 40975 ;; Defined at:
 40976 ;;		line 3916 in file "../fatfs/ff.c"
 40977 ;; Parameters:    Size  Location     Type
 40978 ;;  fp              2   62[BANK6 ] PTR struct .
 40979 ;;		 -> in_fl(546), rom_fl(546), 
 40980 ;;  buff            2   64[BANK6 ] PTR void 
 40981 ;;		 -> f_gets@s(4), cin_file(512), disk_buf(128), tmp_buf(512), 
 40982 ;;  btr             2   66[BANK6 ] unsigned int 
 40983 ;;  br              2   68[BANK6 ] PTR unsigned int 
 40984 ;;		 -> f_gets@rc(2), see_file@br(2), fin_cnt(2), load_program@br(2), 
 40985 ;;		 -> read_sector@n(2), 
 40986 ;; Auto vars:     Size  Location     Type
 40987 ;;  sect            4   99[BANK6 ] unsigned long 
 40988 ;;  clst            4   87[BANK6 ] unsigned long 
 40989 ;;  remain          4   82[BANK6 ] unsigned long 
 40990 ;;  fs              2  103[BANK6 ] PTR struct .
 40991 ;;		 -> fs(564), NULL(0), 
 40992 ;;  rcnt            2   97[BANK6 ] unsigned int 
 40993 ;;  cc              2   95[BANK6 ] unsigned int 
 40994 ;;  csect           2   93[BANK6 ] unsigned int 
 40995 ;;  rbuff           2   91[BANK6 ] PTR unsigned char 
 40996 ;;		 -> f_gets@s(4), cin_file(512), disk_buf(128), tmp_buf(512), 
 40997 ;;  res             1   86[BANK6 ] enum E597
 40998 ;; Return value:  Size  Location     Type
 40999 ;;                  1    wreg      enum E16851
 41000 ;; Registers used:
 41001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41002 ;; Tracked objects:
 41003 ;;		On entry : 0/0
 41004 ;;		On exit  : 0/0
 41005 ;;		Unchanged: 0/0
 41006 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41007 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41008 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41009 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41010 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41011 ;;Total ram usage:       43 bytes
 41012 ;; Hardware stack levels used: 1
 41013 ;; Hardware stack levels required when called: 15
 41014 ;; This function calls:
 41015 ;;		_clst2sect
 41016 ;;		_disk_read
 41017 ;;		_disk_write
 41018 ;;		_get_fat
 41019 ;;		_memcpy
 41020 ;;		_validate
 41021 ;; This function is called by:
 41022 ;;		_read_sector
 41023 ;;		_load_program
 41024 ;;		_see_file
 41025 ;;		_in_file
 41026 ;;		_str_inf
 41027 ;;		_f_gets
 41028 ;; This function uses a non-reentrant model
 41029 ;;
 41030                           
 41031                           	psect	text111
 41032   012D36                     __ptext111:
 41033                           	callstack 0
 41034   012D36                     _f_read:
 41035                           	callstack 105
 41036   012D36                     
 41037                           ;../fatfs/ff.c: 3917:  FIL* fp,;../fatfs/ff.c: 3918:  void* buff,;../fatfs/ff.c: 3919:  
      +                          UINT btr,;../fatfs/ff.c: 3920:  UINT* br;../fatfs/ff.c: 3922: {;../fatfs/ff.c: 3923:  FR
      +                          ESULT res;;../fatfs/ff.c: 3924:  FATFS *fs;;../fatfs/ff.c: 3925:  DWORD clst;;../fatfs/f
      +                          f.c: 3926:  LBA_t sect;;../fatfs/ff.c: 3927:  FSIZE_t remain;;../fatfs/ff.c: 3928:  UINT
      +                           rcnt, cc, csect;;../fatfs/ff.c: 3929:  BYTE *rbuff = (BYTE*)buff;
 41038   012D36  C640  F65B         	movff	f_read@buff,f_read@rbuff
 41039   012D3A  C641  F65C         	movff	f_read@buff+1,f_read@rbuff+1
 41040   012D3E                     
 41041                           ;../fatfs/ff.c: 3932:  *br = 0;
 41042   012D3E  C644  F4D9         	movff	f_read@br,fsr2l
 41043   012D42  C645  F4DA         	movff	f_read@br+1,fsr2h
 41044   012D46  6ADE               	clrf	postinc2,c
 41045   012D48  6ADD               	clrf	postdec2,c
 41046   012D4A                     
 41047                           ;../fatfs/ff.c: 3933:  res = validate(&fp->obj, &fs);
 41048   012D4A  C63E  F5BE         	movff	f_read@fp,validate@obj
 41049   012D4E  C63F  F5BF         	movff	f_read@fp+1,validate@obj+1
 41050   012D52  0E67               	movlw	low f_read@fs
 41051   012D54  0105               	movlb	5	; () banked
 41052   012D56  6FC0               	movwf	validate@rfs& (0+255),b
 41053   012D58  0E06               	movlw	high f_read@fs
 41054   012D5A  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 41055   012D5C  ECA3  F0E9         	call	_validate	;wreg free
 41056   012D60  0106               	movlb	6	; () banked
 41057   012D62  6F56               	movwf	f_read@res& (0+255),b
 41058   012D64                     
 41059                           ; BSR set to: 6
 41060                           ;../fatfs/ff.c: 3934:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 41061   012D64  5156               	movf	f_read@res& (0+255),w,b
 41062   012D66  A4D8               	btfss	status,2,c
 41063   012D68  EFB8  F096         	goto	u31281
 41064   012D6C  EFBA  F096         	goto	u31280
 41065   012D70                     u31281:
 41066   012D70  EFCA  F096         	goto	l22727
 41067   012D74                     u31280:
 41068   012D74                     
 41069                           ; BSR set to: 6
 41070   012D74  EE20 F00F          	lfsr	2,15
 41071   012D78  513E               	movf	f_read@fp& (0+255),w,b
 41072   012D7A  26D9               	addwf	fsr2l,f,c
 41073   012D7C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41074   012D7E  22DA               	addwfc	fsr2h,f,c
 41075   012D80  50DF               	movf	indf2,w,c
 41076   012D82  6F56               	movwf	f_read@res& (0+255),b
 41077   012D84  5156               	movf	f_read@res& (0+255),w,b
 41078   012D86  B4D8               	btfsc	status,2,c
 41079   012D88  EFC8  F096         	goto	u31291
 41080   012D8C  EFCA  F096         	goto	u31290
 41081   012D90                     u31291:
 41082   012D90  EFCD  F096         	goto	l22731
 41083   012D94                     u31290:
 41084   012D94                     l22727:
 41085                           
 41086                           ; BSR set to: 6
 41087   012D94  5156               	movf	f_read@res& (0+255),w,b
 41088   012D96  EF24  F09A         	goto	l1917
 41089   012D9A                     l22731:
 41090                           
 41091                           ; BSR set to: 6
 41092                           ;../fatfs/ff.c: 3935:  if (!(fp->flag & 0x01)) return FR_DENIED;
 41093   012D9A  EE20 F00E          	lfsr	2,14
 41094   012D9E  513E               	movf	f_read@fp& (0+255),w,b
 41095   012DA0  26D9               	addwf	fsr2l,f,c
 41096   012DA2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41097   012DA4  22DA               	addwfc	fsr2h,f,c
 41098   012DA6  B0DF               	btfsc	indf2,0,c
 41099   012DA8  EFD8  F096         	goto	u31301
 41100   012DAC  EFDA  F096         	goto	u31300
 41101   012DB0                     u31301:
 41102   012DB0  EFDD  F096         	goto	l22737
 41103   012DB4                     u31300:
 41104   012DB4                     
 41105                           ; BSR set to: 6
 41106   012DB4  0E07               	movlw	7
 41107   012DB6  EF24  F09A         	goto	l1917
 41108   012DBA                     l22737:
 41109                           
 41110                           ; BSR set to: 6
 41111                           ;../fatfs/ff.c: 3936:  remain = fp->obj.objsize - fp->fptr;
 41112   012DBA  EE20 F010          	lfsr	2,16
 41113   012DBE  513E               	movf	f_read@fp& (0+255),w,b
 41114   012DC0  26D9               	addwf	fsr2l,f,c
 41115   012DC2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41116   012DC4  22DA               	addwfc	fsr2h,f,c
 41117   012DC6  C4DE F646          	movff	postinc2,??_f_read
 41118   012DCA  C4DE F647          	movff	postinc2,??_f_read+1
 41119   012DCE  C4DE F648          	movff	postinc2,??_f_read+2
 41120   012DD2  C4DE F649          	movff	postinc2,??_f_read+3
 41121   012DD6  EE20 F00A          	lfsr	2,10
 41122   012DDA  513E               	movf	f_read@fp& (0+255),w,b
 41123   012DDC  26D9               	addwf	fsr2l,f,c
 41124   012DDE  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41125   012DE0  22DA               	addwfc	fsr2h,f,c
 41126   012DE2  C4DE F64A          	movff	postinc2,??_f_read+4
 41127   012DE6  C4DE F64B          	movff	postinc2,??_f_read+5
 41128   012DEA  C4DE F64C          	movff	postinc2,??_f_read+6
 41129   012DEE  C4DE F64D          	movff	postinc2,??_f_read+7
 41130   012DF2  5146               	movf	??_f_read& (0+255),w,b
 41131   012DF4  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 41132   012DF6  6F52               	movwf	f_read@remain& (0+255),b
 41133   012DF8  5147               	movf	(??_f_read+1)& (0+255),w,b
 41134   012DFA  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 41135   012DFC  6F53               	movwf	(f_read@remain+1)& (0+255),b
 41136   012DFE  5148               	movf	(??_f_read+2)& (0+255),w,b
 41137   012E00  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 41138   012E02  6F54               	movwf	(f_read@remain+2)& (0+255),b
 41139   012E04  5149               	movf	(??_f_read+3)& (0+255),w,b
 41140   012E06  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 41141   012E08  6F55               	movwf	(f_read@remain+3)& (0+255),b
 41142   012E0A                     
 41143                           ; BSR set to: 6
 41144                           ;../fatfs/ff.c: 3937:  if (btr > remain) btr = (UINT)remain;
 41145   012E0A  5142               	movf	f_read@btr& (0+255),w,b
 41146   012E0C  6F46               	movwf	??_f_read& (0+255),b
 41147   012E0E  5143               	movf	(f_read@btr+1)& (0+255),w,b
 41148   012E10  6F47               	movwf	(??_f_read+1)& (0+255),b
 41149   012E12  6B48               	clrf	(??_f_read+2)& (0+255),b
 41150   012E14  6B49               	clrf	(??_f_read+3)& (0+255),b
 41151   012E16  5146               	movf	??_f_read& (0+255),w,b
 41152   012E18  5D52               	subwf	f_read@remain& (0+255),w,b
 41153   012E1A  5147               	movf	(??_f_read+1)& (0+255),w,b
 41154   012E1C  5953               	subwfb	(f_read@remain+1)& (0+255),w,b
 41155   012E1E  5148               	movf	(??_f_read+2)& (0+255),w,b
 41156   012E20  5954               	subwfb	(f_read@remain+2)& (0+255),w,b
 41157   012E22  5149               	movf	(??_f_read+3)& (0+255),w,b
 41158   012E24  5955               	subwfb	(f_read@remain+3)& (0+255),w,b
 41159   012E26  B0D8               	btfsc	status,0,c
 41160   012E28  EF18  F097         	goto	u31311
 41161   012E2C  EF1A  F097         	goto	u31310
 41162   012E30                     u31311:
 41163   012E30  EF1E  F097         	goto	l22743
 41164   012E34                     u31310:
 41165   012E34                     
 41166                           ; BSR set to: 6
 41167   012E34  C652  F642         	movff	f_read@remain,f_read@btr
 41168   012E38  C653  F643         	movff	f_read@remain+1,f_read@btr+1
 41169   012E3C                     l22743:
 41170                           
 41171                           ; BSR set to: 6
 41172                           ;../fatfs/ff.c: 3939:  for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fpt
      +                          r += rcnt) {
 41173   012E3C  5142               	movf	f_read@btr& (0+255),w,b
 41174   012E3E  1143               	iorwf	(f_read@btr+1)& (0+255),w,b
 41175   012E40  A4D8               	btfss	status,2,c
 41176   012E42  EF25  F097         	goto	u31321
 41177   012E46  EF27  F097         	goto	u31320
 41178   012E4A                     u31321:
 41179   012E4A  EF29  F097         	goto	l22747
 41180   012E4E                     u31320:
 41181   012E4E  EF23  F09A         	goto	l22853
 41182   012E52                     l22747:
 41183                           
 41184                           ; BSR set to: 6
 41185                           ;../fatfs/ff.c: 3940:   if (fp->fptr % ((UINT)512) == 0) {
 41186   012E52  EE20 F010          	lfsr	2,16
 41187   012E56  513E               	movf	f_read@fp& (0+255),w,b
 41188   012E58  26D9               	addwf	fsr2l,f,c
 41189   012E5A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41190   012E5C  22DA               	addwfc	fsr2h,f,c
 41191   012E5E  0EFF               	movlw	255
 41192   012E60  14DE               	andwf	postinc2,w,c
 41193   012E62  6F46               	movwf	??_f_read& (0+255),b
 41194   012E64  0E01               	movlw	1
 41195   012E66  14DE               	andwf	postinc2,w,c
 41196   012E68  6F47               	movwf	(??_f_read+1)& (0+255),b
 41197   012E6A  0E00               	movlw	0
 41198   012E6C  14DE               	andwf	postinc2,w,c
 41199   012E6E  6F48               	movwf	(??_f_read+2)& (0+255),b
 41200   012E70  0E00               	movlw	0
 41201   012E72  14DE               	andwf	postinc2,w,c
 41202   012E74  6F49               	movwf	(??_f_read+3)& (0+255),b
 41203   012E76  5146               	movf	??_f_read& (0+255),w,b
 41204   012E78  1147               	iorwf	(??_f_read+1)& (0+255),w,b
 41205   012E7A  1148               	iorwf	(??_f_read+2)& (0+255),w,b
 41206   012E7C  1149               	iorwf	(??_f_read+3)& (0+255),w,b
 41207   012E7E  A4D8               	btfss	status,2,c
 41208   012E80  EF44  F097         	goto	u31331
 41209   012E84  EF46  F097         	goto	u31330
 41210   012E88                     u31331:
 41211   012E88  EFB6  F099         	goto	l1922
 41212   012E8C                     u31330:
 41213   012E8C                     
 41214                           ; BSR set to: 6
 41215                           ;../fatfs/ff.c: 3941:    csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
 41216   012E8C  EE20 F010          	lfsr	2,16
 41217   012E90  513E               	movf	f_read@fp& (0+255),w,b
 41218   012E92  26D9               	addwf	fsr2l,f,c
 41219   012E94  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41220   012E96  22DA               	addwfc	fsr2h,f,c
 41221   012E98  C4DE F646          	movff	postinc2,??_f_read
 41222   012E9C  C4DE F647          	movff	postinc2,??_f_read+1
 41223   012EA0  C4DE F648          	movff	postinc2,??_f_read+2
 41224   012EA4  C4DE F649          	movff	postinc2,??_f_read+3
 41225   012EA8  0E0A               	movlw	10
 41226   012EAA  EF5C  F097         	goto	u31340
 41227   012EAE                     u31345:
 41228   012EAE  90D8               	bcf	status,0,c
 41229   012EB0  3349               	rrcf	(??_f_read+3)& (0+255),f,b
 41230   012EB2  3348               	rrcf	(??_f_read+2)& (0+255),f,b
 41231   012EB4  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 41232   012EB6  3346               	rrcf	??_f_read& (0+255),f,b
 41233   012EB8                     u31340:
 41234   012EB8  2EE8               	decfsz	wreg,f,c
 41235   012EBA  EF57  F097         	goto	u31345
 41236   012EBE  EE20 F00A          	lfsr	2,10
 41237   012EC2  5167               	movf	f_read@fs& (0+255),w,b
 41238   012EC4  26D9               	addwf	fsr2l,f,c
 41239   012EC6  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41240   012EC8  22DA               	addwfc	fsr2h,f,c
 41241   012ECA  C4DE F64A          	movff	postinc2,??_f_read+4
 41242   012ECE  C4DD F64B          	movff	postdec2,??_f_read+5
 41243   012ED2  0EFF               	movlw	255
 41244   012ED4  254A               	addwf	(??_f_read+4)& (0+255),w,b
 41245   012ED6  6F4C               	movwf	(??_f_read+6)& (0+255),b
 41246   012ED8  0EFF               	movlw	255
 41247   012EDA  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 41248   012EDC  6F4D               	movwf	(??_f_read+7)& (0+255),b
 41249   012EDE  5146               	movf	??_f_read& (0+255),w,b
 41250   012EE0  154C               	andwf	(??_f_read+6)& (0+255),w,b
 41251   012EE2  6F5D               	movwf	f_read@csect& (0+255),b
 41252   012EE4  5147               	movf	(??_f_read+1)& (0+255),w,b
 41253   012EE6  154D               	andwf	(??_f_read+7)& (0+255),w,b
 41254   012EE8  6F5E               	movwf	(f_read@csect+1)& (0+255),b
 41255   012EEA                     
 41256                           ; BSR set to: 6
 41257                           ;../fatfs/ff.c: 3942:    if (csect == 0) {
 41258   012EEA  515D               	movf	f_read@csect& (0+255),w,b
 41259   012EEC  115E               	iorwf	(f_read@csect+1)& (0+255),w,b
 41260   012EEE  A4D8               	btfss	status,2,c
 41261   012EF0  EF7C  F097         	goto	u31351
 41262   012EF4  EF7E  F097         	goto	u31350
 41263   012EF8                     u31351:
 41264   012EF8  EFFB  F097         	goto	l22777
 41265   012EFC                     u31350:
 41266   012EFC                     
 41267                           ; BSR set to: 6
 41268                           ;../fatfs/ff.c: 3943:     if (fp->fptr == 0) {
 41269   012EFC  EE20 F010          	lfsr	2,16
 41270   012F00  513E               	movf	f_read@fp& (0+255),w,b
 41271   012F02  26D9               	addwf	fsr2l,f,c
 41272   012F04  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41273   012F06  22DA               	addwfc	fsr2h,f,c
 41274   012F08  50DE               	movf	postinc2,w,c
 41275   012F0A  10DE               	iorwf	postinc2,w,c
 41276   012F0C  10DE               	iorwf	postinc2,w,c
 41277   012F0E  10DE               	iorwf	postinc2,w,c
 41278   012F10  A4D8               	btfss	status,2,c
 41279   012F12  EF8D  F097         	goto	u31361
 41280   012F16  EF8F  F097         	goto	u31360
 41281   012F1A                     u31361:
 41282   012F1A  EF9F  F097         	goto	l22757
 41283   012F1E                     u31360:
 41284   012F1E                     
 41285                           ; BSR set to: 6
 41286                           ;../fatfs/ff.c: 3944:      clst = fp->obj.sclust;
 41287   012F1E  EE20 F006          	lfsr	2,6
 41288   012F22  513E               	movf	f_read@fp& (0+255),w,b
 41289   012F24  26D9               	addwf	fsr2l,f,c
 41290   012F26  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41291   012F28  22DA               	addwfc	fsr2h,f,c
 41292   012F2A  C4DE F657          	movff	postinc2,f_read@clst
 41293   012F2E  C4DE F658          	movff	postinc2,f_read@clst+1
 41294   012F32  C4DE F659          	movff	postinc2,f_read@clst+2
 41295   012F36  C4DE F65A          	movff	postinc2,f_read@clst+3
 41296                           
 41297                           ;../fatfs/ff.c: 3945:     } else {
 41298   012F3A  EFBB  F097         	goto	l22759
 41299   012F3E                     l22757:
 41300                           
 41301                           ; BSR set to: 6
 41302                           ;../fatfs/ff.c: 3951:      {;../fatfs/ff.c: 3952:       clst = get_fat(&fp->obj, fp->clu
      +                          st);
 41303   012F3E  C63E  F624         	movff	f_read@fp,get_fat@obj
 41304   012F42  C63F  F625         	movff	f_read@fp+1,get_fat@obj+1
 41305   012F46  EE20 F014          	lfsr	2,20
 41306   012F4A  513E               	movf	f_read@fp& (0+255),w,b
 41307   012F4C  26D9               	addwf	fsr2l,f,c
 41308   012F4E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41309   012F50  22DA               	addwfc	fsr2h,f,c
 41310   012F52  C4DE F626          	movff	postinc2,get_fat@clst
 41311   012F56  C4DE F627          	movff	postinc2,get_fat@clst+1
 41312   012F5A  C4DE F628          	movff	postinc2,get_fat@clst+2
 41313   012F5E  C4DE F629          	movff	postinc2,get_fat@clst+3
 41314   012F62  ECF7  F0B4         	call	_get_fat	;wreg free
 41315   012F66  C624  F657         	movff	?_get_fat,f_read@clst
 41316   012F6A  C625  F658         	movff	?_get_fat+1,f_read@clst+1
 41317   012F6E  C626  F659         	movff	?_get_fat+2,f_read@clst+2
 41318   012F72  C627  F65A         	movff	?_get_fat+3,f_read@clst+3
 41319   012F76                     l22759:
 41320                           
 41321                           ;../fatfs/ff.c: 3955:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 41322   012F76  0106               	movlb	6	; () banked
 41323   012F78  515A               	movf	(f_read@clst+3)& (0+255),w,b
 41324   012F7A  1159               	iorwf	(f_read@clst+2)& (0+255),w,b
 41325   012F7C  1158               	iorwf	(f_read@clst+1)& (0+255),w,b
 41326   012F7E  E107               	bnz	u31371
 41327   012F80  0E02               	movlw	2
 41328   012F82  5D57               	subwf	f_read@clst& (0+255),w,b
 41329   012F84  B0D8               	btfsc	status,0,c
 41330   012F86  EFC7  F097         	goto	u31371
 41331   012F8A  EFC9  F097         	goto	u31370
 41332   012F8E                     u31371:
 41333   012F8E  EFD4  F097         	goto	l22767
 41334   012F92                     u31370:
 41335   012F92                     
 41336                           ; BSR set to: 6
 41337   012F92  EE20 F00F          	lfsr	2,15
 41338   012F96  513E               	movf	f_read@fp& (0+255),w,b
 41339   012F98  26D9               	addwf	fsr2l,f,c
 41340   012F9A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41341   012F9C  22DA               	addwfc	fsr2h,f,c
 41342   012F9E  0E02               	movlw	2
 41343   012FA0  6EDF               	movwf	indf2,c
 41344   012FA2                     l22763:
 41345                           
 41346                           ; BSR set to: 6
 41347   012FA2  0E02               	movlw	2
 41348   012FA4  EF24  F09A         	goto	l1917
 41349   012FA8                     l22767:
 41350                           
 41351                           ; BSR set to: 6
 41352                           ;../fatfs/ff.c: 3956:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 41353   012FA8  2957               	incf	f_read@clst& (0+255),w,b
 41354   012FAA  E10A               	bnz	u31381
 41355   012FAC  2958               	incf	(f_read@clst+1)& (0+255),w,b
 41356   012FAE  E108               	bnz	u31381
 41357   012FB0  2959               	incf	(f_read@clst+2)& (0+255),w,b
 41358   012FB2  E106               	bnz	u31381
 41359   012FB4  295A               	incf	(f_read@clst+3)& (0+255),w,b
 41360   012FB6  A4D8               	btfss	status,2,c
 41361   012FB8  EFE0  F097         	goto	u31381
 41362   012FBC  EFE2  F097         	goto	u31380
 41363   012FC0                     u31381:
 41364   012FC0  EFED  F097         	goto	l22775
 41365   012FC4                     u31380:
 41366   012FC4                     
 41367                           ; BSR set to: 6
 41368   012FC4  EE20 F00F          	lfsr	2,15
 41369   012FC8  513E               	movf	f_read@fp& (0+255),w,b
 41370   012FCA  26D9               	addwf	fsr2l,f,c
 41371   012FCC  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41372   012FCE  22DA               	addwfc	fsr2h,f,c
 41373   012FD0  0E01               	movlw	1
 41374   012FD2  6EDF               	movwf	indf2,c
 41375   012FD4                     l22771:
 41376                           
 41377                           ; BSR set to: 6
 41378   012FD4  0E01               	movlw	1
 41379   012FD6  EF24  F09A         	goto	l1917
 41380   012FDA                     l22775:
 41381                           
 41382                           ; BSR set to: 6
 41383                           ;../fatfs/ff.c: 3957:     fp->clust = clst;
 41384   012FDA  EE20 F014          	lfsr	2,20
 41385   012FDE  513E               	movf	f_read@fp& (0+255),w,b
 41386   012FE0  26D9               	addwf	fsr2l,f,c
 41387   012FE2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41388   012FE4  22DA               	addwfc	fsr2h,f,c
 41389   012FE6  C657  F4DE         	movff	f_read@clst,postinc2
 41390   012FEA  C658  F4DE         	movff	f_read@clst+1,postinc2
 41391   012FEE  C659  F4DE         	movff	f_read@clst+2,postinc2
 41392   012FF2  C65A  F4DE         	movff	f_read@clst+3,postinc2
 41393   012FF6                     l22777:
 41394                           
 41395                           ; BSR set to: 6
 41396                           ;../fatfs/ff.c: 3959:    sect = clst2sect(fs, fp->clust);
 41397   012FF6  C667  F510         	movff	f_read@fs,clst2sect@fs
 41398   012FFA  C668  F511         	movff	f_read@fs+1,clst2sect@fs+1
 41399   012FFE  EE20 F014          	lfsr	2,20
 41400   013002  513E               	movf	f_read@fp& (0+255),w,b
 41401   013004  26D9               	addwf	fsr2l,f,c
 41402   013006  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41403   013008  22DA               	addwfc	fsr2h,f,c
 41404   01300A  C4DE F512          	movff	postinc2,clst2sect@clst
 41405   01300E  C4DE F513          	movff	postinc2,clst2sect@clst+1
 41406   013012  C4DE F514          	movff	postinc2,clst2sect@clst+2
 41407   013016  C4DE F515          	movff	postinc2,clst2sect@clst+3
 41408   01301A  EC7A  F0F0         	call	_clst2sect	;wreg free
 41409   01301E  C510  F663         	movff	?_clst2sect,f_read@sect
 41410   013022  C511  F664         	movff	?_clst2sect+1,f_read@sect+1
 41411   013026  C512  F665         	movff	?_clst2sect+2,f_read@sect+2
 41412   01302A  C513  F666         	movff	?_clst2sect+3,f_read@sect+3
 41413   01302E                     
 41414                           ;../fatfs/ff.c: 3960:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 41415   01302E  0106               	movlb	6	; () banked
 41416   013030  5163               	movf	f_read@sect& (0+255),w,b
 41417   013032  1164               	iorwf	(f_read@sect+1)& (0+255),w,b
 41418   013034  1165               	iorwf	(f_read@sect+2)& (0+255),w,b
 41419   013036  1166               	iorwf	(f_read@sect+3)& (0+255),w,b
 41420   013038  A4D8               	btfss	status,2,c
 41421   01303A  EF21  F098         	goto	u31391
 41422   01303E  EF23  F098         	goto	u31390
 41423   013042                     u31391:
 41424   013042  EF2D  F098         	goto	l22787
 41425   013046                     u31390:
 41426   013046                     
 41427                           ; BSR set to: 6
 41428   013046  EE20 F00F          	lfsr	2,15
 41429   01304A  513E               	movf	f_read@fp& (0+255),w,b
 41430   01304C  26D9               	addwf	fsr2l,f,c
 41431   01304E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41432   013050  22DA               	addwfc	fsr2h,f,c
 41433   013052  0E02               	movlw	2
 41434   013054  6EDF               	movwf	indf2,c
 41435   013056  EFD1  F097         	goto	l22763
 41436   01305A                     l22787:
 41437                           
 41438                           ; BSR set to: 6
 41439                           ;../fatfs/ff.c: 3961:    sect += csect;
 41440   01305A  515D               	movf	f_read@csect& (0+255),w,b
 41441   01305C  2763               	addwf	f_read@sect& (0+255),f,b
 41442   01305E  515E               	movf	(f_read@csect+1)& (0+255),w,b
 41443   013060  2364               	addwfc	(f_read@sect+1)& (0+255),f,b
 41444   013062  0E00               	movlw	0
 41445   013064  2365               	addwfc	(f_read@sect+2)& (0+255),f,b
 41446   013066  0E00               	movlw	0
 41447   013068  2366               	addwfc	(f_read@sect+3)& (0+255),f,b
 41448   01306A                     
 41449                           ; BSR set to: 6
 41450                           ;../fatfs/ff.c: 3962:    cc = btr / ((UINT)512);
 41451   01306A  C642  F646         	movff	f_read@btr,??_f_read
 41452   01306E  C643  F647         	movff	f_read@btr+1,??_f_read+1
 41453   013072  0E09               	movlw	9
 41454   013074  6F48               	movwf	(??_f_read+2)& (0+255),b
 41455   013076                     u31405:
 41456   013076  90D8               	bcf	status,0,c
 41457   013078  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 41458   01307A  3346               	rrcf	??_f_read& (0+255),f,b
 41459   01307C  2F48               	decfsz	(??_f_read+2)& (0+255),f,b
 41460   01307E  EF3B  F098         	goto	u31405
 41461   013082  C646  F65F         	movff	??_f_read,f_read@cc
 41462   013086  C647  F660         	movff	??_f_read+1,f_read@cc+1
 41463   01308A                     
 41464                           ; BSR set to: 6
 41465                           ;../fatfs/ff.c: 3963:    if (cc > 0) {
 41466   01308A  515F               	movf	f_read@cc& (0+255),w,b
 41467   01308C  1160               	iorwf	(f_read@cc+1)& (0+255),w,b
 41468   01308E  B4D8               	btfsc	status,2,c
 41469   013090  EF4C  F098         	goto	u31411
 41470   013094  EF4E  F098         	goto	u31410
 41471   013098                     u31411:
 41472   013098  EF17  F099         	goto	l22813
 41473   01309C                     u31410:
 41474   01309C                     
 41475                           ; BSR set to: 6
 41476                           ;../fatfs/ff.c: 3964:     if (csect + cc > fs->csize) {
 41477   01309C  515F               	movf	f_read@cc& (0+255),w,b
 41478   01309E  255D               	addwf	f_read@csect& (0+255),w,b
 41479   0130A0  6F46               	movwf	??_f_read& (0+255),b
 41480   0130A2  5160               	movf	(f_read@cc+1)& (0+255),w,b
 41481   0130A4  215E               	addwfc	(f_read@csect+1)& (0+255),w,b
 41482   0130A6  6F47               	movwf	(??_f_read+1)& (0+255),b
 41483   0130A8  EE20 F00A          	lfsr	2,10
 41484   0130AC  5167               	movf	f_read@fs& (0+255),w,b
 41485   0130AE  26D9               	addwf	fsr2l,f,c
 41486   0130B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41487   0130B2  22DA               	addwfc	fsr2h,f,c
 41488   0130B4  5146               	movf	??_f_read& (0+255),w,b
 41489   0130B6  5CDE               	subwf	postinc2,w,c
 41490   0130B8  5147               	movf	(??_f_read+1)& (0+255),w,b
 41491   0130BA  58DE               	subwfb	postinc2,w,c
 41492   0130BC  B0D8               	btfsc	status,0,c
 41493   0130BE  EF63  F098         	goto	u31421
 41494   0130C2  EF65  F098         	goto	u31420
 41495   0130C6                     u31421:
 41496   0130C6  EF75  F098         	goto	l22797
 41497   0130CA                     u31420:
 41498   0130CA                     
 41499                           ; BSR set to: 6
 41500                           ;../fatfs/ff.c: 3965:      cc = fs->csize - csect;
 41501   0130CA  EE20 F00A          	lfsr	2,10
 41502   0130CE  5167               	movf	f_read@fs& (0+255),w,b
 41503   0130D0  26D9               	addwf	fsr2l,f,c
 41504   0130D2  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41505   0130D4  22DA               	addwfc	fsr2h,f,c
 41506   0130D6  C4DE F646          	movff	postinc2,??_f_read
 41507   0130DA  C4DD F647          	movff	postdec2,??_f_read+1
 41508   0130DE  515D               	movf	f_read@csect& (0+255),w,b
 41509   0130E0  5D46               	subwf	??_f_read& (0+255),w,b
 41510   0130E2  6F5F               	movwf	f_read@cc& (0+255),b
 41511   0130E4  515E               	movf	(f_read@csect+1)& (0+255),w,b
 41512   0130E6  5947               	subwfb	(??_f_read+1)& (0+255),w,b
 41513   0130E8  6F60               	movwf	(f_read@cc+1)& (0+255),b
 41514   0130EA                     l22797:
 41515                           
 41516                           ; BSR set to: 6
 41517                           ;../fatfs/ff.c: 3967:     if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err 
      +                          = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41518   0130EA  C65B  F600         	movff	f_read@rbuff,disk_read@buff
 41519   0130EE  C65C  F601         	movff	f_read@rbuff+1,disk_read@buff+1
 41520   0130F2  C663  F602         	movff	f_read@sect,disk_read@sector
 41521   0130F6  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 41522   0130FA  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 41523   0130FE  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 41524   013102  C65F  F606         	movff	f_read@cc,disk_read@count
 41525   013106  C660  F607         	movff	f_read@cc+1,disk_read@count+1
 41526   01310A  EE20 F001          	lfsr	2,1
 41527   01310E  5167               	movf	f_read@fs& (0+255),w,b
 41528   013110  26D9               	addwf	fsr2l,f,c
 41529   013112  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41530   013114  22DA               	addwfc	fsr2h,f,c
 41531   013116  50DF               	movf	indf2,w,c
 41532   013118  ECD5  F0F3         	call	_disk_read
 41533   01311C  0900               	iorlw	0
 41534   01311E  B4D8               	btfsc	status,2,c
 41535   013120  EF94  F098         	goto	u31431
 41536   013124  EF96  F098         	goto	u31430
 41537   013128                     u31431:
 41538   013128  EFA1  F098         	goto	l22805
 41539   01312C                     u31430:
 41540   01312C  0106               	movlb	6	; () banked
 41541   01312E  EE20 F00F          	lfsr	2,15
 41542   013132  513E               	movf	f_read@fp& (0+255),w,b
 41543   013134  26D9               	addwf	fsr2l,f,c
 41544   013136  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41545   013138  22DA               	addwfc	fsr2h,f,c
 41546   01313A  0E01               	movlw	1
 41547   01313C  6EDF               	movwf	indf2,c
 41548   01313E  EFEA  F097         	goto	l22771
 41549   013142                     l22805:
 41550                           
 41551                           ;../fatfs/ff.c: 3974:     if ((fp->flag & 0x80) && fp->sect - sect < cc) {
 41552   013142  0106               	movlb	6	; () banked
 41553   013144  EE20 F00E          	lfsr	2,14
 41554   013148  513E               	movf	f_read@fp& (0+255),w,b
 41555   01314A  26D9               	addwf	fsr2l,f,c
 41556   01314C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41557   01314E  22DA               	addwfc	fsr2h,f,c
 41558   013150  AEDF               	btfss	indf2,7,c
 41559   013152  EFAD  F098         	goto	u31441
 41560   013156  EFAF  F098         	goto	u31440
 41561   01315A                     u31441:
 41562   01315A  EF05  F099         	goto	l22811
 41563   01315E                     u31440:
 41564   01315E                     
 41565                           ; BSR set to: 6
 41566   01315E  515F               	movf	f_read@cc& (0+255),w,b
 41567   013160  6F46               	movwf	??_f_read& (0+255),b
 41568   013162  5160               	movf	(f_read@cc+1)& (0+255),w,b
 41569   013164  6F47               	movwf	(??_f_read+1)& (0+255),b
 41570   013166  6B48               	clrf	(??_f_read+2)& (0+255),b
 41571   013168  6B49               	clrf	(??_f_read+3)& (0+255),b
 41572   01316A  EE20 F018          	lfsr	2,24
 41573   01316E  513E               	movf	f_read@fp& (0+255),w,b
 41574   013170  26D9               	addwf	fsr2l,f,c
 41575   013172  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41576   013174  22DA               	addwfc	fsr2h,f,c
 41577   013176  C4DE F64A          	movff	postinc2,??_f_read+4
 41578   01317A  C4DE F64B          	movff	postinc2,??_f_read+5
 41579   01317E  C4DE F64C          	movff	postinc2,??_f_read+6
 41580   013182  C4DE F64D          	movff	postinc2,??_f_read+7
 41581   013186  5163               	movf	f_read@sect& (0+255),w,b
 41582   013188  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 41583   01318A  6F4E               	movwf	(??_f_read+8)& (0+255),b
 41584   01318C  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41585   01318E  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 41586   013190  6F4F               	movwf	(??_f_read+9)& (0+255),b
 41587   013192  5165               	movf	(f_read@sect+2)& (0+255),w,b
 41588   013194  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 41589   013196  6F50               	movwf	(??_f_read+10)& (0+255),b
 41590   013198  5166               	movf	(f_read@sect+3)& (0+255),w,b
 41591   01319A  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 41592   01319C  6F51               	movwf	(??_f_read+11)& (0+255),b
 41593   01319E  5146               	movf	??_f_read& (0+255),w,b
 41594   0131A0  5D4E               	subwf	(??_f_read+8)& (0+255),w,b
 41595   0131A2  5147               	movf	(??_f_read+1)& (0+255),w,b
 41596   0131A4  594F               	subwfb	(??_f_read+9)& (0+255),w,b
 41597   0131A6  5148               	movf	(??_f_read+2)& (0+255),w,b
 41598   0131A8  5950               	subwfb	(??_f_read+10)& (0+255),w,b
 41599   0131AA  5149               	movf	(??_f_read+3)& (0+255),w,b
 41600   0131AC  5951               	subwfb	(??_f_read+11)& (0+255),w,b
 41601   0131AE  B0D8               	btfsc	status,0,c
 41602   0131B0  EFDC  F098         	goto	u31451
 41603   0131B4  EFDE  F098         	goto	u31450
 41604   0131B8                     u31451:
 41605   0131B8  EF05  F099         	goto	l22811
 41606   0131BC                     u31450:
 41607   0131BC                     
 41608                           ; BSR set to: 6
 41609                           ;../fatfs/ff.c: 3975:      memcpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((
      +                          UINT)512));
 41610   0131BC  EE20 F018          	lfsr	2,24
 41611   0131C0  513E               	movf	f_read@fp& (0+255),w,b
 41612   0131C2  26D9               	addwf	fsr2l,f,c
 41613   0131C4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41614   0131C6  22DA               	addwfc	fsr2h,f,c
 41615   0131C8  C4DE F646          	movff	postinc2,??_f_read
 41616   0131CC  C4DD F647          	movff	postdec2,??_f_read+1
 41617   0131D0  5163               	movf	f_read@sect& (0+255),w,b
 41618   0131D2  5F46               	subwf	??_f_read& (0+255),f,b
 41619   0131D4  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41620   0131D6  5B47               	subwfb	(??_f_read+1)& (0+255),f,b
 41621   0131D8  0E09               	movlw	9
 41622   0131DA                     u31465:
 41623   0131DA  90D8               	bcf	status,0,c
 41624   0131DC  3746               	rlcf	??_f_read& (0+255),f,b
 41625   0131DE  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 41626   0131E0  2EE8               	decfsz	wreg,f,c
 41627   0131E2  EFED  F098         	goto	u31465
 41628   0131E6  5146               	movf	??_f_read& (0+255),w,b
 41629   0131E8  255B               	addwf	f_read@rbuff& (0+255),w,b
 41630   0131EA  6E04               	movwf	memcpy@d1^(0+1280),c
 41631   0131EC  5147               	movf	(??_f_read+1)& (0+255),w,b
 41632   0131EE  215C               	addwfc	(f_read@rbuff+1)& (0+255),w,b
 41633   0131F0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 41634   0131F2  0E22               	movlw	34
 41635   0131F4  253E               	addwf	f_read@fp& (0+255),w,b
 41636   0131F6  6E06               	movwf	memcpy@s1^(0+1280),c
 41637   0131F8  0E00               	movlw	0
 41638   0131FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41639   0131FC  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 41640   0131FE  0E02               	movlw	2
 41641   013200  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 41642   013202  0E00               	movlw	0
 41643   013204  6E08               	movwf	memcpy@n^(0+1280),c
 41644   013206  EC00  F0FD         	call	_memcpy	;wreg free
 41645   01320A                     l22811:
 41646                           
 41647                           ;../fatfs/ff.c: 3979:     rcnt = ((UINT)512) * cc;
 41648   01320A  C65F  F646         	movff	f_read@cc,??_f_read
 41649   01320E  C660  F647         	movff	f_read@cc+1,??_f_read+1
 41650   013212  0E09               	movlw	9
 41651   013214                     u31475:
 41652   013214  90D8               	bcf	status,0,c
 41653   013216  0106               	movlb	6	; () banked
 41654   013218  3746               	rlcf	??_f_read& (0+255),f,b
 41655   01321A  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 41656   01321C  2EE8               	decfsz	wreg,f,c
 41657   01321E  EF0A  F099         	goto	u31475
 41658   013222  C646  F661         	movff	??_f_read,f_read@rcnt
 41659   013226  C647  F662         	movff	??_f_read+1,f_read@rcnt+1
 41660                           
 41661                           ;../fatfs/ff.c: 3980:     continue;
 41662   01322A  EF03  F09A         	goto	l22843
 41663   01322E                     l22813:
 41664                           
 41665                           ; BSR set to: 6
 41666                           ;../fatfs/ff.c: 3983:    if (fp->sect != sect) {
 41667   01322E  EE20 F018          	lfsr	2,24
 41668   013232  513E               	movf	f_read@fp& (0+255),w,b
 41669   013234  26D9               	addwf	fsr2l,f,c
 41670   013236  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41671   013238  22DA               	addwfc	fsr2h,f,c
 41672   01323A  5163               	movf	f_read@sect& (0+255),w,b
 41673   01323C  18DE               	xorwf	postinc2,w,c
 41674   01323E  E10F               	bnz	u31480
 41675   013240  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41676   013242  18DE               	xorwf	postinc2,w,c
 41677   013244  E10C               	bnz	u31480
 41678   013246  5165               	movf	(f_read@sect+2)& (0+255),w,b
 41679   013248  18DE               	xorwf	postinc2,w,c
 41680   01324A  E109               	bnz	u31480
 41681   01324C  5166               	movf	(f_read@sect+3)& (0+255),w,b
 41682   01324E  18DE               	xorwf	postinc2,w,c
 41683   013250  B4D8               	btfsc	status,2,c
 41684   013252  EF2D  F099         	goto	u31481
 41685   013256  EF2F  F099         	goto	u31480
 41686   01325A                     u31481:
 41687   01325A  EFA7  F099         	goto	l22835
 41688   01325E                     u31480:
 41689   01325E                     
 41690                           ; BSR set to: 6
 41691                           ;../fatfs/ff.c: 3985:     if (fp->flag & 0x80) {
 41692   01325E  EE20 F00E          	lfsr	2,14
 41693   013262  513E               	movf	f_read@fp& (0+255),w,b
 41694   013264  26D9               	addwf	fsr2l,f,c
 41695   013266  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41696   013268  22DA               	addwfc	fsr2h,f,c
 41697   01326A  AEDF               	btfss	indf2,7,c
 41698   01326C  EF3A  F099         	goto	u31491
 41699   013270  EF3C  F099         	goto	u31490
 41700   013274                     u31491:
 41701   013274  EF79  F099         	goto	l22827
 41702   013278                     u31490:
 41703   013278                     
 41704                           ; BSR set to: 6
 41705                           ;../fatfs/ff.c: 3986:      if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { f
      +                          p->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41706   013278  0E22               	movlw	34
 41707   01327A  253E               	addwf	f_read@fp& (0+255),w,b
 41708   01327C  6F00               	movwf	disk_write@buff& (0+255),b
 41709   01327E  0E00               	movlw	0
 41710   013280  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41711   013282  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 41712   013284  EE20 F018          	lfsr	2,24
 41713   013288  513E               	movf	f_read@fp& (0+255),w,b
 41714   01328A  26D9               	addwf	fsr2l,f,c
 41715   01328C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41716   01328E  22DA               	addwfc	fsr2h,f,c
 41717   013290  C4DE F602          	movff	postinc2,disk_write@sector
 41718   013294  C4DE F603          	movff	postinc2,disk_write@sector+1
 41719   013298  C4DE F604          	movff	postinc2,disk_write@sector+2
 41720   01329C  C4DE F605          	movff	postinc2,disk_write@sector+3
 41721   0132A0  0E00               	movlw	0
 41722   0132A2  6F07               	movwf	(disk_write@count+1)& (0+255),b
 41723   0132A4  0E01               	movlw	1
 41724   0132A6  6F06               	movwf	disk_write@count& (0+255),b
 41725   0132A8  EE20 F001          	lfsr	2,1
 41726   0132AC  5167               	movf	f_read@fs& (0+255),w,b
 41727   0132AE  26D9               	addwf	fsr2l,f,c
 41728   0132B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41729   0132B2  22DA               	addwfc	fsr2h,f,c
 41730   0132B4  50DF               	movf	indf2,w,c
 41731   0132B6  EC7E  F0F3         	call	_disk_write
 41732   0132BA  0900               	iorlw	0
 41733   0132BC  B4D8               	btfsc	status,2,c
 41734   0132BE  EF63  F099         	goto	u31501
 41735   0132C2  EF65  F099         	goto	u31500
 41736   0132C6                     u31501:
 41737   0132C6  EF70  F099         	goto	l22825
 41738   0132CA                     u31500:
 41739   0132CA  0106               	movlb	6	; () banked
 41740   0132CC  EE20 F00F          	lfsr	2,15
 41741   0132D0  513E               	movf	f_read@fp& (0+255),w,b
 41742   0132D2  26D9               	addwf	fsr2l,f,c
 41743   0132D4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41744   0132D6  22DA               	addwfc	fsr2h,f,c
 41745   0132D8  0E01               	movlw	1
 41746   0132DA  6EDF               	movwf	indf2,c
 41747   0132DC  EFEA  F097         	goto	l22771
 41748   0132E0                     l22825:
 41749                           
 41750                           ;../fatfs/ff.c: 3987:      fp->flag &= (BYTE)~0x80;
 41751   0132E0  0106               	movlb	6	; () banked
 41752   0132E2  EE20 F00E          	lfsr	2,14
 41753   0132E6  513E               	movf	f_read@fp& (0+255),w,b
 41754   0132E8  26D9               	addwf	fsr2l,f,c
 41755   0132EA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41756   0132EC  22DA               	addwfc	fsr2h,f,c
 41757   0132EE  0E7F               	movlw	127
 41758   0132F0  16DF               	andwf	indf2,f,c
 41759   0132F2                     l22827:
 41760                           
 41761                           ; BSR set to: 6
 41762                           ;../fatfs/ff.c: 3990:     if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41763   0132F2  0E22               	movlw	34
 41764   0132F4  253E               	addwf	f_read@fp& (0+255),w,b
 41765   0132F6  6F00               	movwf	disk_read@buff& (0+255),b
 41766   0132F8  0E00               	movlw	0
 41767   0132FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41768   0132FC  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 41769   0132FE  C663  F602         	movff	f_read@sect,disk_read@sector
 41770   013302  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 41771   013306  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 41772   01330A  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 41773   01330E  0E00               	movlw	0
 41774   013310  6F07               	movwf	(disk_read@count+1)& (0+255),b
 41775   013312  0E01               	movlw	1
 41776   013314  6F06               	movwf	disk_read@count& (0+255),b
 41777   013316  EE20 F001          	lfsr	2,1
 41778   01331A  5167               	movf	f_read@fs& (0+255),w,b
 41779   01331C  26D9               	addwf	fsr2l,f,c
 41780   01331E  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41781   013320  22DA               	addwfc	fsr2h,f,c
 41782   013322  50DF               	movf	indf2,w,c
 41783   013324  ECD5  F0F3         	call	_disk_read
 41784   013328  0900               	iorlw	0
 41785   01332A  B4D8               	btfsc	status,2,c
 41786   01332C  EF9A  F099         	goto	u31511
 41787   013330  EF9C  F099         	goto	u31510
 41788   013334                     u31511:
 41789   013334  EFA7  F099         	goto	l22835
 41790   013338                     u31510:
 41791   013338  0106               	movlb	6	; () banked
 41792   01333A  EE20 F00F          	lfsr	2,15
 41793   01333E  513E               	movf	f_read@fp& (0+255),w,b
 41794   013340  26D9               	addwf	fsr2l,f,c
 41795   013342  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41796   013344  22DA               	addwfc	fsr2h,f,c
 41797   013346  0E01               	movlw	1
 41798   013348  6EDF               	movwf	indf2,c
 41799   01334A  EFEA  F097         	goto	l22771
 41800   01334E                     l22835:
 41801                           
 41802                           ;../fatfs/ff.c: 3993:    fp->sect = sect;
 41803   01334E  0106               	movlb	6	; () banked
 41804   013350  EE20 F018          	lfsr	2,24
 41805   013354  513E               	movf	f_read@fp& (0+255),w,b
 41806   013356  26D9               	addwf	fsr2l,f,c
 41807   013358  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41808   01335A  22DA               	addwfc	fsr2h,f,c
 41809   01335C  C663  F4DE         	movff	f_read@sect,postinc2
 41810   013360  C664  F4DE         	movff	f_read@sect+1,postinc2
 41811   013364  C665  F4DE         	movff	f_read@sect+2,postinc2
 41812   013368  C666  F4DE         	movff	f_read@sect+3,postinc2
 41813   01336C                     l1922:
 41814                           
 41815                           ; BSR set to: 6
 41816                           ;../fatfs/ff.c: 3995:   rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 41817   01336C  EE20 F010          	lfsr	2,16
 41818   013370  513E               	movf	f_read@fp& (0+255),w,b
 41819   013372  26D9               	addwf	fsr2l,f,c
 41820   013374  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41821   013376  22DA               	addwfc	fsr2h,f,c
 41822   013378  C4DE F646          	movff	postinc2,??_f_read
 41823   01337C  C4DD F647          	movff	postdec2,??_f_read+1
 41824   013380  0EFF               	movlw	255
 41825   013382  1546               	andwf	??_f_read& (0+255),w,b
 41826   013384  6F48               	movwf	(??_f_read+2)& (0+255),b
 41827   013386  0E01               	movlw	1
 41828   013388  1547               	andwf	(??_f_read+1)& (0+255),w,b
 41829   01338A  6F49               	movwf	(??_f_read+3)& (0+255),b
 41830   01338C  5148               	movf	(??_f_read+2)& (0+255),w,b
 41831   01338E  0800               	sublw	0
 41832   013390  6F61               	movwf	f_read@rcnt& (0+255),b
 41833   013392  5149               	movf	(??_f_read+3)& (0+255),w,b
 41834   013394  A0D8               	btfss	status,0,c
 41835   013396  2AE8               	incf	wreg,f,c
 41836   013398  0802               	sublw	2
 41837   01339A  6F62               	movwf	(f_read@rcnt+1)& (0+255),b
 41838   01339C                     
 41839                           ; BSR set to: 6
 41840                           ;../fatfs/ff.c: 3996:   if (rcnt > btr) rcnt = btr;
 41841   01339C  5161               	movf	f_read@rcnt& (0+255),w,b
 41842   01339E  5D42               	subwf	f_read@btr& (0+255),w,b
 41843   0133A0  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41844   0133A2  5943               	subwfb	(f_read@btr+1)& (0+255),w,b
 41845   0133A4  B0D8               	btfsc	status,0,c
 41846   0133A6  EFD7  F099         	goto	u31521
 41847   0133AA  EFD9  F099         	goto	u31520
 41848   0133AE                     u31521:
 41849   0133AE  EFDD  F099         	goto	l22841
 41850   0133B2                     u31520:
 41851   0133B2                     
 41852                           ; BSR set to: 6
 41853   0133B2  C642  F661         	movff	f_read@btr,f_read@rcnt
 41854   0133B6  C643  F662         	movff	f_read@btr+1,f_read@rcnt+1
 41855   0133BA                     l22841:
 41856                           
 41857                           ; BSR set to: 6
 41858                           ;../fatfs/ff.c: 4001:   memcpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
 41859   0133BA  C65B  F504         	movff	f_read@rbuff,memcpy@d1
 41860   0133BE  C65C  F505         	movff	f_read@rbuff+1,memcpy@d1+1
 41861   0133C2  EE20 F010          	lfsr	2,16
 41862   0133C6  513E               	movf	f_read@fp& (0+255),w,b
 41863   0133C8  26D9               	addwf	fsr2l,f,c
 41864   0133CA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41865   0133CC  22DA               	addwfc	fsr2h,f,c
 41866   0133CE  C4DE F646          	movff	postinc2,??_f_read
 41867   0133D2  C4DD F647          	movff	postdec2,??_f_read+1
 41868   0133D6  0EFF               	movlw	255
 41869   0133D8  1546               	andwf	??_f_read& (0+255),w,b
 41870   0133DA  6F48               	movwf	(??_f_read+2)& (0+255),b
 41871   0133DC  0E01               	movlw	1
 41872   0133DE  1547               	andwf	(??_f_read+1)& (0+255),w,b
 41873   0133E0  6F49               	movwf	(??_f_read+3)& (0+255),b
 41874   0133E2  5148               	movf	(??_f_read+2)& (0+255),w,b
 41875   0133E4  253E               	addwf	f_read@fp& (0+255),w,b
 41876   0133E6  6F4A               	movwf	(??_f_read+4)& (0+255),b
 41877   0133E8  5149               	movf	(??_f_read+3)& (0+255),w,b
 41878   0133EA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41879   0133EC  6F4B               	movwf	(??_f_read+5)& (0+255),b
 41880   0133EE  0E22               	movlw	34
 41881   0133F0  254A               	addwf	(??_f_read+4)& (0+255),w,b
 41882   0133F2  6E06               	movwf	memcpy@s1^(0+1280),c
 41883   0133F4  0E00               	movlw	0
 41884   0133F6  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 41885   0133F8  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 41886   0133FA  C661  F508         	movff	f_read@rcnt,memcpy@n
 41887   0133FE  C662  F509         	movff	f_read@rcnt+1,memcpy@n+1
 41888   013402  EC00  F0FD         	call	_memcpy	;wreg free
 41889   013406                     l22843:
 41890   013406  0106               	movlb	6	; () banked
 41891   013408  5161               	movf	f_read@rcnt& (0+255),w,b
 41892   01340A  5F42               	subwf	f_read@btr& (0+255),f,b
 41893   01340C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41894   01340E  5B43               	subwfb	(f_read@btr+1)& (0+255),f,b
 41895   013410                     
 41896                           ; BSR set to: 6
 41897   013410  C644  F4D9         	movff	f_read@br,fsr2l
 41898   013414  C645  F4DA         	movff	f_read@br+1,fsr2h
 41899   013418  5161               	movf	f_read@rcnt& (0+255),w,b
 41900   01341A  26DE               	addwf	postinc2,f,c
 41901   01341C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41902   01341E  22DD               	addwfc	postdec2,f,c
 41903   013420                     
 41904                           ; BSR set to: 6
 41905   013420  5161               	movf	f_read@rcnt& (0+255),w,b
 41906   013422  275B               	addwf	f_read@rbuff& (0+255),f,b
 41907   013424  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41908   013426  235C               	addwfc	(f_read@rbuff+1)& (0+255),f,b
 41909   013428                     
 41910                           ; BSR set to: 6
 41911   013428  EE20 F010          	lfsr	2,16
 41912   01342C  513E               	movf	f_read@fp& (0+255),w,b
 41913   01342E  26D9               	addwf	fsr2l,f,c
 41914   013430  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41915   013432  22DA               	addwfc	fsr2h,f,c
 41916   013434  5161               	movf	f_read@rcnt& (0+255),w,b
 41917   013436  26DE               	addwf	postinc2,f,c
 41918   013438  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41919   01343A  22DE               	addwfc	postinc2,f,c
 41920   01343C  0E00               	movlw	0
 41921   01343E  22DE               	addwfc	postinc2,f,c
 41922   013440  22DE               	addwfc	postinc2,f,c
 41923   013442  EF1E  F097         	goto	l22743
 41924   013446                     l22853:
 41925                           
 41926                           ; BSR set to: 6
 41927                           ;../fatfs/ff.c: 4005:  return FR_OK;
 41928   013446  0E00               	movlw	0
 41929   013448                     l1917:
 41930                           
 41931                           ; BSR set to: 6
 41932   013448  0012               	return		;funcret
 41933   01344A                     __end_of_f_read:
 41934                           	callstack 0
 41935                           
 41936 ;; *************** function _validate *****************
 41937 ;; Defined at:
 41938 ;;		line 3615 in file "../fatfs/ff.c"
 41939 ;; Parameters:    Size  Location     Type
 41940 ;;  obj             2   94[BANK5 ] PTR struct .
 41941 ;;		 -> pb$fp(2), in_fl(546), scan_files1@dir(40), scan_files@dir(40), 
 41942 ;;		 -> rom_fl(546), 
 41943 ;;  rfs             2   96[BANK5 ] PTR PTR struct .
 41944 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 41945 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 41946 ;; Auto vars:     Size  Location     Type
 41947 ;;  res             1  104[BANK5 ] enum E597
 41948 ;; Return value:  Size  Location     Type
 41949 ;;                  1    wreg      enum E597
 41950 ;; Registers used:
 41951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41952 ;; Tracked objects:
 41953 ;;		On entry : 0/0
 41954 ;;		On exit  : 0/0
 41955 ;;		Unchanged: 0/0
 41956 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41958 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41959 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41960 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41961 ;;Total ram usage:       11 bytes
 41962 ;; Hardware stack levels used: 1
 41963 ;; Hardware stack levels required when called: 10
 41964 ;; This function calls:
 41965 ;;		_disk_status
 41966 ;; This function is called by:
 41967 ;;		_f_read
 41968 ;;		_f_write
 41969 ;;		_f_sync
 41970 ;;		_f_close
 41971 ;;		_f_lseek
 41972 ;;		_f_closedir
 41973 ;;		_f_readdir
 41974 ;;		_f_truncate
 41975 ;; This function uses a non-reentrant model
 41976 ;;
 41977                           
 41978                           	psect	text112
 41979   01D346                     __ptext112:
 41980                           	callstack 0
 41981   01D346                     _validate:
 41982                           	callstack 109
 41983   01D346                     
 41984                           ;../fatfs/ff.c: 3616:  FFOBJID* obj,;../fatfs/ff.c: 3617:  FATFS** rfs;../fatfs/ff.c: 36
      +                          19: {;../fatfs/ff.c: 3620:  FRESULT res = FR_INVALID_OBJECT;
 41985   01D346  0E09               	movlw	9
 41986   01D348  0105               	movlb	5	; () banked
 41987   01D34A  6FC8               	movwf	validate@res& (0+255),b
 41988   01D34C                     
 41989                           ; BSR set to: 5
 41990                           ;../fatfs/ff.c: 3623:  if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id)
      +                           {
 41991   01D34C  51BE               	movf	validate@obj& (0+255),w,b
 41992   01D34E  11BF               	iorwf	(validate@obj+1)& (0+255),w,b
 41993   01D350  B4D8               	btfsc	status,2,c
 41994   01D352  EFAD  F0E9         	goto	u30161
 41995   01D356  EFAF  F0E9         	goto	u30160
 41996   01D35A                     u30161:
 41997   01D35A  EF03  F0EA         	goto	l22103
 41998   01D35E                     u30160:
 41999   01D35E                     
 42000                           ; BSR set to: 5
 42001   01D35E  C5BE  F4D9         	movff	validate@obj,fsr2l
 42002   01D362  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42003   01D366  50DE               	movf	postinc2,w,c
 42004   01D368  10DE               	iorwf	postinc2,w,c
 42005   01D36A  B4D8               	btfsc	status,2,c
 42006   01D36C  EFBA  F0E9         	goto	u30171
 42007   01D370  EFBC  F0E9         	goto	u30170
 42008   01D374                     u30171:
 42009   01D374  EF03  F0EA         	goto	l22103
 42010   01D378                     u30170:
 42011   01D378                     
 42012                           ; BSR set to: 5
 42013   01D378  C5BE  F4D9         	movff	validate@obj,fsr2l
 42014   01D37C  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42015   01D380  C4DE F5C2          	movff	postinc2,??_validate
 42016   01D384  C4DD F5C3          	movff	postdec2,??_validate+1
 42017   01D388  C5C2  F4D9         	movff	??_validate,fsr2l
 42018   01D38C  C5C3  F4DA         	movff	??_validate+1,fsr2h
 42019   01D390  50DF               	movf	indf2,w,c
 42020   01D392  B4D8               	btfsc	status,2,c
 42021   01D394  EFCE  F0E9         	goto	u30181
 42022   01D398  EFD0  F0E9         	goto	u30180
 42023   01D39C                     u30181:
 42024   01D39C  EF03  F0EA         	goto	l22103
 42025   01D3A0                     u30180:
 42026   01D3A0                     
 42027                           ; BSR set to: 5
 42028   01D3A0  C5BE  F4D9         	movff	validate@obj,fsr2l
 42029   01D3A4  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42030   01D3A8  EE10 F006          	lfsr	1,6
 42031   01D3AC  50DE               	movf	postinc2,w,c
 42032   01D3AE  26E1               	addwf	fsr1l,f,c
 42033   01D3B0  50DD               	movf	postdec2,w,c
 42034   01D3B2  22E2               	addwfc	fsr1h,f,c
 42035   01D3B4  EE20 F002          	lfsr	2,2
 42036   01D3B8  51BE               	movf	validate@obj& (0+255),w,b
 42037   01D3BA  26D9               	addwf	fsr2l,f,c
 42038   01D3BC  51BF               	movf	(validate@obj+1)& (0+255),w,b
 42039   01D3BE  22DA               	addwfc	fsr2h,f,c
 42040   01D3C0  50E6               	movf	postinc1,w,c
 42041   01D3C2  18DE               	xorwf	postinc2,w,c
 42042   01D3C4  E107               	bnz	u30191
 42043   01D3C6  50E6               	movf	postinc1,w,c
 42044   01D3C8  18DE               	xorwf	postinc2,w,c
 42045   01D3CA  A4D8               	btfss	status,2,c
 42046   01D3CC  EFEA  F0E9         	goto	u30191
 42047   01D3D0  EFEC  F0E9         	goto	u30190
 42048   01D3D4                     u30191:
 42049   01D3D4  EF03  F0EA         	goto	l22103
 42050   01D3D8                     u30190:
 42051   01D3D8                     
 42052                           ; BSR set to: 5
 42053                           ;../fatfs/ff.c: 3635:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 42054   01D3D8  C5BE  F4D9         	movff	validate@obj,fsr2l
 42055   01D3DC  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42056   01D3E0  EE10 F001          	lfsr	1,1
 42057   01D3E4  50DE               	movf	postinc2,w,c
 42058   01D3E6  26E1               	addwf	fsr1l,f,c
 42059   01D3E8  50DD               	movf	postdec2,w,c
 42060   01D3EA  22E2               	addwfc	fsr1h,f,c
 42061   01D3EC  50E7               	movf	indf1,w,c
 42062   01D3EE  EC42  F0FE         	call	_disk_status
 42063   01D3F2  0105               	movlb	5	; () banked
 42064   01D3F4  6FC2               	movwf	??_validate& (0+255),b
 42065   01D3F6  B1C2               	btfsc	??_validate& (0+255),0,b
 42066   01D3F8  EF00  F0EA         	goto	u30201
 42067   01D3FC  EF02  F0EA         	goto	u30200
 42068   01D400                     u30201:
 42069   01D400  EF03  F0EA         	goto	l22103
 42070   01D404                     u30200:
 42071   01D404                     
 42072                           ; BSR set to: 5
 42073                           ;../fatfs/ff.c: 3636:    res = FR_OK;
 42074   01D404  6BC8               	clrf	validate@res& (0+255),b
 42075   01D406                     l22103:
 42076                           
 42077                           ; BSR set to: 5
 42078                           ;../fatfs/ff.c: 3640:  *rfs = (res == FR_OK) ? obj->fs : 0;
 42079   01D406  51C8               	movf	validate@res& (0+255),w,b
 42080   01D408  B4D8               	btfsc	status,2,c
 42081   01D40A  EF09  F0EA         	goto	u30211
 42082   01D40E  EF0B  F0EA         	goto	u30210
 42083   01D412                     u30211:
 42084   01D412  EF11  F0EA         	goto	l22107
 42085   01D416                     u30210:
 42086   01D416                     
 42087                           ; BSR set to: 5
 42088   01D416  0E00               	movlw	0
 42089   01D418  6FC6               	movwf	_validate$2890& (0+255),b
 42090   01D41A  0E00               	movlw	0
 42091   01D41C  6FC7               	movwf	(_validate$2890+1)& (0+255),b
 42092   01D41E  EF19  F0EA         	goto	l1861
 42093   01D422                     l22107:
 42094                           
 42095                           ; BSR set to: 5
 42096   01D422  C5BE  F4D9         	movff	validate@obj,fsr2l
 42097   01D426  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42098   01D42A  C4DE F5C6          	movff	postinc2,_validate$2890
 42099   01D42E  C4DD F5C7          	movff	postdec2,_validate$2890+1
 42100   01D432                     l1861:
 42101                           
 42102                           ; BSR set to: 5
 42103   01D432  C5C0  F4D9         	movff	validate@rfs,fsr2l
 42104   01D436  C5C1  F4DA         	movff	validate@rfs+1,fsr2h
 42105   01D43A  C5C6  F4DE         	movff	_validate$2890,postinc2
 42106   01D43E  C5C7  F4DD         	movff	_validate$2890+1,postdec2
 42107   01D442                     
 42108                           ; BSR set to: 5
 42109                           ;../fatfs/ff.c: 3641:  return res;
 42110   01D442  51C8               	movf	validate@res& (0+255),w,b
 42111   01D444                     
 42112                           ; BSR set to: 5
 42113   01D444  0012               	return		;funcret
 42114   01D446                     __end_of_validate:
 42115                           	callstack 0
 42116                           
 42117 ;; *************** function _disk_status *****************
 42118 ;; Defined at:
 42119 ;;		line 98 in file "../drivers/diskio.c"
 42120 ;; Parameters:    Size  Location     Type
 42121 ;;  pdrv            1    wreg     unsigned char 
 42122 ;; Auto vars:     Size  Location     Type
 42123 ;;  pdrv            1   93[BANK5 ] unsigned char 
 42124 ;; Return value:  Size  Location     Type
 42125 ;;                  1    wreg      unsigned char 
 42126 ;; Registers used:
 42127 ;;		wreg, status,2, status,0
 42128 ;; Tracked objects:
 42129 ;;		On entry : 0/0
 42130 ;;		On exit  : 0/0
 42131 ;;		Unchanged: 0/0
 42132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42137 ;;Total ram usage:        1 bytes
 42138 ;; Hardware stack levels used: 1
 42139 ;; Hardware stack levels required when called: 9
 42140 ;; This function calls:
 42141 ;;		_printf
 42142 ;; This function is called by:
 42143 ;;		_mount_volume
 42144 ;;		_validate
 42145 ;; This function uses a non-reentrant model
 42146 ;;
 42147                           
 42148                           	psect	text113
 42149   01FC84                     __ptext113:
 42150                           	callstack 0
 42151   01FC84                     _disk_status:
 42152                           	callstack 109
 42153                           
 42154                           ; BSR set to: 5
 42155                           ;incstack = 0
 42156                           ;disk_status@pdrv stored from wreg
 42157   01FC84  0105               	movlb	5	; () banked
 42158   01FC86  6FBD               	movwf	disk_status@pdrv& (0+255),b
 42159   01FC88                     
 42160                           ;../drivers/diskio.c: 98: DSTATUS disk_status(BYTE pdrv);../drivers/diskio.c: 99: {;../d
      +                          rivers/diskio.c: 100:     if (pdrv != 0) {
 42161   01FC88  0105               	movlb	5	; () banked
 42162   01FC8A  51BD               	movf	disk_status@pdrv& (0+255),w,b
 42163   01FC8C  B4D8               	btfsc	status,2,c
 42164   01FC8E  EF4B  F0FE         	goto	u29261
 42165   01FC92  EF4D  F0FE         	goto	u29260
 42166   01FC96                     u29261:
 42167   01FC96  EF50  F0FE         	goto	l21649
 42168   01FC9A                     u29260:
 42169   01FC9A                     l21645:
 42170                           
 42171                           ;../drivers/diskio.c: 102:         return 0x02;
 42172   01FC9A  0E02               	movlw	2
 42173   01FC9C  EF62  F0FE         	goto	l2457
 42174   01FCA0                     l21649:
 42175                           
 42176                           ; BSR set to: 5
 42177                           ;../drivers/diskio.c: 104:     if (start_lba == 0xffffffff) {
 42178   01FCA0  0107               	movlb	7	; () banked
 42179   01FCA2  29EE               	incf	_start_lba& (0+255),w,b
 42180   01FCA4  E10A               	bnz	u29271
 42181   01FCA6  29EF               	incf	(_start_lba+1)& (0+255),w,b
 42182   01FCA8  E108               	bnz	u29271
 42183   01FCAA  29F0               	incf	(_start_lba+2)& (0+255),w,b
 42184   01FCAC  E106               	bnz	u29271
 42185   01FCAE  29F1               	incf	(_start_lba+3)& (0+255),w,b
 42186   01FCB0  A4D8               	btfss	status,2,c
 42187   01FCB2  EF5D  F0FE         	goto	u29271
 42188   01FCB6  EF5F  F0FE         	goto	u29270
 42189   01FCBA                     u29271:
 42190   01FCBA  EF61  F0FE         	goto	l21657
 42191   01FCBE                     u29270:
 42192   01FCBE  EF4D  F0FE         	goto	l21645
 42193   01FCC2                     l21657:
 42194                           
 42195                           ; BSR set to: 7
 42196                           ;../drivers/diskio.c: 108:     return 0;
 42197   01FCC2  0E00               	movlw	0
 42198   01FCC4                     l2457:
 42199   01FCC4  0012               	return		;funcret
 42200   01FCC6                     __end_of_disk_status:
 42201                           	callstack 0
 42202                           
 42203 ;; *************** function _get_fat *****************
 42204 ;; Defined at:
 42205 ;;		line 1162 in file "../fatfs/ff.c"
 42206 ;; Parameters:    Size  Location     Type
 42207 ;;  obj             2   36[BANK6 ] PTR struct .
 42208 ;;		 -> pb$fp(2), f_rename@djn(40), f_rename@djo(40), f_mkdir@sobj(14), 
 42209 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_getfree@obj(14), 
 42210 ;;		 -> f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), 
 42211 ;;		 -> in_fl(546), scan_files1@dir(40), scan_files@dir(40), rom_fl(546), 
 42212 ;;  clst            4   38[BANK6 ] unsigned long 
 42213 ;; Auto vars:     Size  Location     Type
 42214 ;;  val             4   54[BANK6 ] unsigned long 
 42215 ;;  fs              2   60[BANK6 ] PTR struct .
 42216 ;;		 -> fs(564), NULL(0), 
 42217 ;;  bc              2   58[BANK6 ] unsigned int 
 42218 ;;  wc              2   52[BANK6 ] unsigned int 
 42219 ;; Return value:  Size  Location     Type
 42220 ;;                  4   36[BANK6 ] unsigned long 
 42221 ;; Registers used:
 42222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42223 ;; Tracked objects:
 42224 ;;		On entry : 0/0
 42225 ;;		On exit  : 0/0
 42226 ;;		Unchanged: 0/0
 42227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42228 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42229 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42230 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42231 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42232 ;;Total ram usage:       26 bytes
 42233 ;; Hardware stack levels used: 1
 42234 ;; Hardware stack levels required when called: 14
 42235 ;; This function calls:
 42236 ;;		_ld_dword
 42237 ;;		_ld_word
 42238 ;;		_move_window
 42239 ;; This function is called by:
 42240 ;;		_remove_chain
 42241 ;;		_create_chain
 42242 ;;		_dir_sdi
 42243 ;;		_dir_next
 42244 ;;		_f_open
 42245 ;;		_f_read
 42246 ;;		_f_lseek
 42247 ;;		_f_getfree
 42248 ;;		_f_truncate
 42249 ;; This function uses a non-reentrant model
 42250 ;;
 42251                           
 42252                           	psect	text114
 42253   0169EE                     __ptext114:
 42254                           	callstack 0
 42255   0169EE                     _get_fat:
 42256                           	callstack 105
 42257   0169EE                     
 42258                           ;../fatfs/ff.c: 1163:  FFOBJID* obj,;../fatfs/ff.c: 1164:  DWORD clst;../fatfs/ff.c: 116
      +                          6: {;../fatfs/ff.c: 1167:  UINT wc, bc;;../fatfs/ff.c: 1168:  DWORD val;;../fatfs/ff.c: 
      +                          1169:  FATFS *fs = obj->fs;
 42259   0169EE  C624  F4D9         	movff	get_fat@obj,fsr2l
 42260   0169F2  C625  F4DA         	movff	get_fat@obj+1,fsr2h
 42261   0169F6  C4DE F63C          	movff	postinc2,get_fat@fs
 42262   0169FA  C4DD F63D          	movff	postdec2,get_fat@fs+1
 42263   0169FE                     
 42264                           ;../fatfs/ff.c: 1172:  if (clst < 2 || clst >= fs->n_fatent) {
 42265   0169FE  0106               	movlb	6	; () banked
 42266   016A00  5129               	movf	(get_fat@clst+3)& (0+255),w,b
 42267   016A02  1128               	iorwf	(get_fat@clst+2)& (0+255),w,b
 42268   016A04  1127               	iorwf	(get_fat@clst+1)& (0+255),w,b
 42269   016A06  E109               	bnz	u28040
 42270   016A08  0E02               	movlw	2
 42271   016A0A  5D26               	subwf	get_fat@clst& (0+255),w,b
 42272   016A0C  A0D8               	btfss	status,0,c
 42273   016A0E  EF0B  F0B5         	goto	u28041
 42274   016A12  EF0D  F0B5         	goto	u28040
 42275   016A16                     u28041:
 42276   016A16  EF22  F0B5         	goto	l21061
 42277   016A1A                     u28040:
 42278   016A1A                     
 42279                           ; BSR set to: 6
 42280   016A1A  EE20 F018          	lfsr	2,24
 42281   016A1E  513C               	movf	get_fat@fs& (0+255),w,b
 42282   016A20  26D9               	addwf	fsr2l,f,c
 42283   016A22  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42284   016A24  22DA               	addwfc	fsr2h,f,c
 42285   016A26  50DE               	movf	postinc2,w,c
 42286   016A28  5D26               	subwf	get_fat@clst& (0+255),w,b
 42287   016A2A  50DE               	movf	postinc2,w,c
 42288   016A2C  5927               	subwfb	(get_fat@clst+1)& (0+255),w,b
 42289   016A2E  50DE               	movf	postinc2,w,c
 42290   016A30  5928               	subwfb	(get_fat@clst+2)& (0+255),w,b
 42291   016A32  50DE               	movf	postinc2,w,c
 42292   016A34  5929               	subwfb	(get_fat@clst+3)& (0+255),w,b
 42293   016A36  A0D8               	btfss	status,0,c
 42294   016A38  EF20  F0B5         	goto	u28051
 42295   016A3C  EF22  F0B5         	goto	u28050
 42296   016A40                     u28051:
 42297   016A40  EF2C  F0B5         	goto	l1474
 42298   016A44                     u28050:
 42299   016A44                     l21061:
 42300                           
 42301                           ; BSR set to: 6
 42302                           ;../fatfs/ff.c: 1173:   val = 1;
 42303   016A44  0E01               	movlw	1
 42304   016A46  6F36               	movwf	get_fat@val& (0+255),b
 42305   016A48  0E00               	movlw	0
 42306   016A4A  6F37               	movwf	(get_fat@val+1)& (0+255),b
 42307   016A4C  0E00               	movlw	0
 42308   016A4E  6F38               	movwf	(get_fat@val+2)& (0+255),b
 42309   016A50  0E00               	movlw	0
 42310   016A52  6F39               	movwf	(get_fat@val+3)& (0+255),b
 42311                           
 42312                           ;../fatfs/ff.c: 1175:  } else {
 42313   016A54  EFE4  F0B6         	goto	l1477
 42314   016A58                     l1474:
 42315                           
 42316                           ; BSR set to: 6
 42317                           ;../fatfs/ff.c: 1176:   val = 0xFFFFFFFF;
 42318   016A58  6936               	setf	get_fat@val& (0+255),b
 42319   016A5A  6937               	setf	(get_fat@val+1)& (0+255),b
 42320   016A5C  6938               	setf	(get_fat@val+2)& (0+255),b
 42321   016A5E  6939               	setf	(get_fat@val+3)& (0+255),b
 42322                           
 42323                           ;../fatfs/ff.c: 1178:   switch (fs->fs_type) {
 42324   016A60  EFD1  F0B6         	goto	l21101
 42325   016A64                     l1479:
 42326                           
 42327                           ; BSR set to: 6
 42328                           ;../fatfs/ff.c: 1180:    bc = (UINT)clst; bc += bc / 2;
 42329   016A64  C626  F63A         	movff	get_fat@clst,get_fat@bc
 42330   016A68  C627  F63B         	movff	get_fat@clst+1,get_fat@bc+1
 42331   016A6C                     
 42332                           ; BSR set to: 6
 42333   016A6C  90D8               	bcf	status,0,c
 42334   016A6E  313B               	rrcf	(get_fat@bc+1)& (0+255),w,b
 42335   016A70  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42336   016A72  313A               	rrcf	get_fat@bc& (0+255),w,b
 42337   016A74  6F2A               	movwf	??_get_fat& (0+255),b
 42338   016A76  512A               	movf	??_get_fat& (0+255),w,b
 42339   016A78  273A               	addwf	get_fat@bc& (0+255),f,b
 42340   016A7A  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42341   016A7C  233B               	addwfc	(get_fat@bc+1)& (0+255),f,b
 42342   016A7E                     
 42343                           ; BSR set to: 6
 42344                           ;../fatfs/ff.c: 1181:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 42345   016A7E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42346   016A82  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42347   016A86  EE20 F024          	lfsr	2,36
 42348   016A8A  513C               	movf	get_fat@fs& (0+255),w,b
 42349   016A8C  26D9               	addwf	fsr2l,f,c
 42350   016A8E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42351   016A90  22DA               	addwfc	fsr2h,f,c
 42352   016A92  C4DE F62A          	movff	postinc2,??_get_fat
 42353   016A96  C4DE F62B          	movff	postinc2,??_get_fat+1
 42354   016A9A  C4DE F62C          	movff	postinc2,??_get_fat+2
 42355   016A9E  C4DE F62D          	movff	postinc2,??_get_fat+3
 42356   016AA2  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 42357   016AA6  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 42358   016AAA  0E09               	movlw	9
 42359   016AAC  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42360   016AAE                     u28065:
 42361   016AAE  90D8               	bcf	status,0,c
 42362   016AB0  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42363   016AB2  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42364   016AB4  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 42365   016AB6  EF57  F0B5         	goto	u28065
 42366   016ABA  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42367   016ABC  252A               	addwf	??_get_fat& (0+255),w,b
 42368   016ABE  6F1C               	movwf	move_window@sect& (0+255),b
 42369   016AC0  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42370   016AC2  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 42371   016AC4  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42372   016AC6  0E00               	movlw	0
 42373   016AC8  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 42374   016ACA  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42375   016ACC  0E00               	movlw	0
 42376   016ACE  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42377   016AD0  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42378   016AD2  ECAB  F0EF         	call	_move_window	;wreg free
 42379   016AD6  0900               	iorlw	0
 42380   016AD8  B4D8               	btfsc	status,2,c
 42381   016ADA  EF71  F0B5         	goto	u28071
 42382   016ADE  EF73  F0B5         	goto	u28070
 42383   016AE2                     u28071:
 42384   016AE2  EF75  F0B5         	goto	l21069
 42385   016AE6                     u28070:
 42386   016AE6  EFE4  F0B6         	goto	l1477
 42387   016AEA                     l21069:
 42388                           
 42389                           ;../fatfs/ff.c: 1182:    wc = fs->win[bc++ % ((UINT)512)];
 42390   016AEA  0EFF               	movlw	255
 42391   016AEC  0106               	movlb	6	; () banked
 42392   016AEE  153A               	andwf	get_fat@bc& (0+255),w,b
 42393   016AF0  6F2A               	movwf	??_get_fat& (0+255),b
 42394   016AF2  0E01               	movlw	1
 42395   016AF4  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 42396   016AF6  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42397   016AF8  512A               	movf	??_get_fat& (0+255),w,b
 42398   016AFA  253C               	addwf	get_fat@fs& (0+255),w,b
 42399   016AFC  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42400   016AFE  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42401   016B00  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42402   016B02  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42403   016B04  0E34               	movlw	52
 42404   016B06  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 42405   016B08  6ED9               	movwf	fsr2l,c
 42406   016B0A  0E00               	movlw	0
 42407   016B0C  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42408   016B0E  6EDA               	movwf	fsr2h,c
 42409   016B10  50DF               	movf	indf2,w,c
 42410   016B12  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42411   016B14  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42412   016B16  6F34               	movwf	get_fat@wc& (0+255),b
 42413   016B18  6B35               	clrf	(get_fat@wc+1)& (0+255),b
 42414   016B1A                     
 42415                           ; BSR set to: 6
 42416   016B1A  4B3A               	infsnz	get_fat@bc& (0+255),f,b
 42417   016B1C  2B3B               	incf	(get_fat@bc+1)& (0+255),f,b
 42418   016B1E                     
 42419                           ; BSR set to: 6
 42420                           ;../fatfs/ff.c: 1183:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 42421   016B1E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42422   016B22  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42423   016B26  EE20 F024          	lfsr	2,36
 42424   016B2A  513C               	movf	get_fat@fs& (0+255),w,b
 42425   016B2C  26D9               	addwf	fsr2l,f,c
 42426   016B2E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42427   016B30  22DA               	addwfc	fsr2h,f,c
 42428   016B32  C4DE F62A          	movff	postinc2,??_get_fat
 42429   016B36  C4DE F62B          	movff	postinc2,??_get_fat+1
 42430   016B3A  C4DE F62C          	movff	postinc2,??_get_fat+2
 42431   016B3E  C4DE F62D          	movff	postinc2,??_get_fat+3
 42432   016B42  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 42433   016B46  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 42434   016B4A  0E09               	movlw	9
 42435   016B4C  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42436   016B4E                     u28085:
 42437   016B4E  90D8               	bcf	status,0,c
 42438   016B50  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42439   016B52  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42440   016B54  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 42441   016B56  EFA7  F0B5         	goto	u28085
 42442   016B5A  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42443   016B5C  252A               	addwf	??_get_fat& (0+255),w,b
 42444   016B5E  6F1C               	movwf	move_window@sect& (0+255),b
 42445   016B60  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42446   016B62  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 42447   016B64  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42448   016B66  0E00               	movlw	0
 42449   016B68  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 42450   016B6A  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42451   016B6C  0E00               	movlw	0
 42452   016B6E  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42453   016B70  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42454   016B72  ECAB  F0EF         	call	_move_window	;wreg free
 42455   016B76  0900               	iorlw	0
 42456   016B78  B4D8               	btfsc	status,2,c
 42457   016B7A  EFC1  F0B5         	goto	u28091
 42458   016B7E  EFC3  F0B5         	goto	u28090
 42459   016B82                     u28091:
 42460   016B82  EFC5  F0B5         	goto	l21077
 42461   016B86                     u28090:
 42462   016B86  EFE4  F0B6         	goto	l1477
 42463   016B8A                     l21077:
 42464                           
 42465                           ;../fatfs/ff.c: 1184:    wc |= fs->win[bc % ((UINT)512)] << 8;
 42466   016B8A  0EFF               	movlw	255
 42467   016B8C  0106               	movlb	6	; () banked
 42468   016B8E  153A               	andwf	get_fat@bc& (0+255),w,b
 42469   016B90  6F2A               	movwf	??_get_fat& (0+255),b
 42470   016B92  0E01               	movlw	1
 42471   016B94  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 42472   016B96  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42473   016B98  512A               	movf	??_get_fat& (0+255),w,b
 42474   016B9A  253C               	addwf	get_fat@fs& (0+255),w,b
 42475   016B9C  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42476   016B9E  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42477   016BA0  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42478   016BA2  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42479   016BA4  0E34               	movlw	52
 42480   016BA6  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 42481   016BA8  6ED9               	movwf	fsr2l,c
 42482   016BAA  0E00               	movlw	0
 42483   016BAC  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42484   016BAE  6EDA               	movwf	fsr2h,c
 42485   016BB0  50DF               	movf	indf2,w,c
 42486   016BB2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42487   016BB4  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42488   016BB6  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42489   016BB8  6B2F               	clrf	(??_get_fat+5)& (0+255),b
 42490   016BBA  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42491   016BBC  1334               	iorwf	get_fat@wc& (0+255),f,b
 42492   016BBE  5130               	movf	(??_get_fat+6)& (0+255),w,b
 42493   016BC0  1335               	iorwf	(get_fat@wc+1)& (0+255),f,b
 42494   016BC2                     
 42495                           ; BSR set to: 6
 42496                           ;../fatfs/ff.c: 1185:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 42497   016BC2  B126               	btfsc	get_fat@clst& (0+255),0,b
 42498   016BC4  EFE6  F0B5         	goto	u28101
 42499   016BC8  EFE8  F0B5         	goto	u28100
 42500   016BCC                     u28101:
 42501   016BCC  EFF0  F0B5         	goto	l21083
 42502   016BD0                     u28100:
 42503   016BD0                     
 42504                           ; BSR set to: 6
 42505   016BD0  0EFF               	movlw	255
 42506   016BD2  1534               	andwf	get_fat@wc& (0+255),w,b
 42507   016BD4  6F32               	movwf	_get_fat$2154& (0+255),b
 42508   016BD6  0E0F               	movlw	15
 42509   016BD8  1535               	andwf	(get_fat@wc+1)& (0+255),w,b
 42510   016BDA  6F33               	movwf	(_get_fat$2154+1)& (0+255),b
 42511   016BDC  EF00  F0B6         	goto	l21085
 42512   016BE0                     l21083:
 42513                           
 42514                           ; BSR set to: 6
 42515   016BE0  C634  F62A         	movff	get_fat@wc,??_get_fat
 42516   016BE4  C635  F62B         	movff	get_fat@wc+1,??_get_fat+1
 42517   016BE8  0E04               	movlw	4
 42518   016BEA  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42519   016BEC                     u28115:
 42520   016BEC  90D8               	bcf	status,0,c
 42521   016BEE  332B               	rrcf	(??_get_fat+1)& (0+255),f,b
 42522   016BF0  332A               	rrcf	??_get_fat& (0+255),f,b
 42523   016BF2  2F2C               	decfsz	(??_get_fat+2)& (0+255),f,b
 42524   016BF4  EFF6  F0B5         	goto	u28115
 42525   016BF8  C62A  F632         	movff	??_get_fat,_get_fat$2154
 42526   016BFC  C62B  F633         	movff	??_get_fat+1,_get_fat$2154+1
 42527   016C00                     l21085:
 42528                           
 42529                           ; BSR set to: 6
 42530   016C00  C632  F636         	movff	_get_fat$2154,get_fat@val
 42531   016C04  C633  F637         	movff	_get_fat$2154+1,get_fat@val+1
 42532   016C08  6B38               	clrf	(get_fat@val+2)& (0+255),b
 42533   016C0A  6B39               	clrf	(get_fat@val+3)& (0+255),b
 42534                           
 42535                           ;../fatfs/ff.c: 1186:    break;
 42536   016C0C  EFE4  F0B6         	goto	l1477
 42537   016C10                     l21087:
 42538                           
 42539                           ; BSR set to: 6
 42540                           ;../fatfs/ff.c: 1189:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) !
      +                          = FR_OK) break;
 42541   016C10  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42542   016C14  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42543   016C18  EE20 F024          	lfsr	2,36
 42544   016C1C  513C               	movf	get_fat@fs& (0+255),w,b
 42545   016C1E  26D9               	addwf	fsr2l,f,c
 42546   016C20  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42547   016C22  22DA               	addwfc	fsr2h,f,c
 42548   016C24  C4DE F62A          	movff	postinc2,??_get_fat
 42549   016C28  C4DE F62B          	movff	postinc2,??_get_fat+1
 42550   016C2C  C4DE F62C          	movff	postinc2,??_get_fat+2
 42551   016C30  C4DE F62D          	movff	postinc2,??_get_fat+3
 42552   016C34  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 42553   016C38  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 42554   016C3C  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 42555   016C40  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 42556   016C44  C62F  F62E         	movff	??_get_fat+5,??_get_fat+4
 42557   016C48  C630  F62F         	movff	??_get_fat+6,??_get_fat+5
 42558   016C4C  C631  F630         	movff	??_get_fat+7,??_get_fat+6
 42559   016C50  6B31               	clrf	(??_get_fat+7)& (0+255),b
 42560   016C52  512A               	movf	??_get_fat& (0+255),w,b
 42561   016C54  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42562   016C56  6F1C               	movwf	move_window@sect& (0+255),b
 42563   016C58  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42564   016C5A  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42565   016C5C  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42566   016C5E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42567   016C60  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 42568   016C62  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42569   016C64  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42570   016C66  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 42571   016C68  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42572   016C6A  ECAB  F0EF         	call	_move_window	;wreg free
 42573   016C6E  0900               	iorlw	0
 42574   016C70  B4D8               	btfsc	status,2,c
 42575   016C72  EF3D  F0B6         	goto	u28121
 42576   016C76  EF3F  F0B6         	goto	u28120
 42577   016C7A                     u28121:
 42578   016C7A  EF41  F0B6         	goto	l21091
 42579   016C7E                     u28120:
 42580   016C7E  EFE4  F0B6         	goto	l1477
 42581   016C82                     l21091:
 42582                           
 42583                           ;../fatfs/ff.c: 1190:    val = ld_word(fs->win + clst * 2 % ((UINT)512));
 42584   016C82  C626  F62A         	movff	get_fat@clst,??_get_fat
 42585   016C86  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 42586   016C8A  90D8               	bcf	status,0,c
 42587   016C8C  0106               	movlb	6	; () banked
 42588   016C8E  372A               	rlcf	??_get_fat& (0+255),f,b
 42589   016C90  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42590   016C92  0EFF               	movlw	255
 42591   016C94  152A               	andwf	??_get_fat& (0+255),w,b
 42592   016C96  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42593   016C98  0E01               	movlw	1
 42594   016C9A  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 42595   016C9C  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42596   016C9E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42597   016CA0  253C               	addwf	get_fat@fs& (0+255),w,b
 42598   016CA2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42599   016CA4  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42600   016CA6  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42601   016CA8  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 42602   016CAA  0E34               	movlw	52
 42603   016CAC  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42604   016CAE  6E04               	movwf	ld_word@ptr^(0+1280),c
 42605   016CB0  0E00               	movlw	0
 42606   016CB2  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42607   016CB4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 42608   016CB6  EC4C  F0FF         	call	_ld_word	;wreg free
 42609   016CBA  C504  F636         	movff	?_ld_word,get_fat@val
 42610   016CBE  C505  F637         	movff	?_ld_word+1,get_fat@val+1
 42611   016CC2  0106               	movlb	6	; () banked
 42612   016CC4  6B38               	clrf	(get_fat@val+2)& (0+255),b
 42613   016CC6  6B39               	clrf	(get_fat@val+3)& (0+255),b
 42614                           
 42615                           ;../fatfs/ff.c: 1191:    break;
 42616   016CC8  EFE4  F0B6         	goto	l1477
 42617   016CCC                     l21093:
 42618                           
 42619                           ; BSR set to: 6
 42620                           ;../fatfs/ff.c: 1194:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) !
      +                          = FR_OK) break;
 42621   016CCC  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42622   016CD0  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42623   016CD4  EE20 F024          	lfsr	2,36
 42624   016CD8  513C               	movf	get_fat@fs& (0+255),w,b
 42625   016CDA  26D9               	addwf	fsr2l,f,c
 42626   016CDC  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42627   016CDE  22DA               	addwfc	fsr2h,f,c
 42628   016CE0  C4DE F62A          	movff	postinc2,??_get_fat
 42629   016CE4  C4DE F62B          	movff	postinc2,??_get_fat+1
 42630   016CE8  C4DE F62C          	movff	postinc2,??_get_fat+2
 42631   016CEC  C4DE F62D          	movff	postinc2,??_get_fat+3
 42632   016CF0  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 42633   016CF4  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 42634   016CF8  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 42635   016CFC  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 42636   016D00  0E08               	movlw	8
 42637   016D02  EF88  F0B6         	goto	u28130
 42638   016D06                     u28135:
 42639   016D06  90D8               	bcf	status,0,c
 42640   016D08  3331               	rrcf	(??_get_fat+7)& (0+255),f,b
 42641   016D0A  3330               	rrcf	(??_get_fat+6)& (0+255),f,b
 42642   016D0C  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42643   016D0E  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42644   016D10                     u28130:
 42645   016D10  2EE8               	decfsz	wreg,f,c
 42646   016D12  EF83  F0B6         	goto	u28135
 42647   016D16  512A               	movf	??_get_fat& (0+255),w,b
 42648   016D18  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42649   016D1A  6F1C               	movwf	move_window@sect& (0+255),b
 42650   016D1C  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42651   016D1E  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42652   016D20  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42653   016D22  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42654   016D24  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 42655   016D26  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42656   016D28  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42657   016D2A  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 42658   016D2C  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42659   016D2E  ECAB  F0EF         	call	_move_window	;wreg free
 42660   016D32  0900               	iorlw	0
 42661   016D34  B4D8               	btfsc	status,2,c
 42662   016D36  EF9F  F0B6         	goto	u28141
 42663   016D3A  EFA1  F0B6         	goto	u28140
 42664   016D3E                     u28141:
 42665   016D3E  EFA3  F0B6         	goto	l21097
 42666   016D42                     u28140:
 42667   016D42  EFE4  F0B6         	goto	l1477
 42668   016D46                     l21097:
 42669                           
 42670                           ;../fatfs/ff.c: 1195:    val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
 42671   016D46  C626  F62A         	movff	get_fat@clst,??_get_fat
 42672   016D4A  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 42673   016D4E  0106               	movlb	6	; () banked
 42674   016D50  90D8               	bcf	status,0,c
 42675   016D52  372A               	rlcf	??_get_fat& (0+255),f,b
 42676   016D54  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42677   016D56  90D8               	bcf	status,0,c
 42678   016D58  372A               	rlcf	??_get_fat& (0+255),f,b
 42679   016D5A  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42680   016D5C  0EFF               	movlw	255
 42681   016D5E  152A               	andwf	??_get_fat& (0+255),w,b
 42682   016D60  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42683   016D62  0E01               	movlw	1
 42684   016D64  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 42685   016D66  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42686   016D68  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42687   016D6A  253C               	addwf	get_fat@fs& (0+255),w,b
 42688   016D6C  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42689   016D6E  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42690   016D70  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42691   016D72  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 42692   016D74  0E34               	movlw	52
 42693   016D76  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42694   016D78  6E04               	movwf	ld_dword@ptr^(0+1280),c
 42695   016D7A  0E00               	movlw	0
 42696   016D7C  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42697   016D7E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 42698   016D80  ECC7  F0F2         	call	_ld_dword	;wreg free
 42699   016D84  0EFF               	movlw	255
 42700   016D86  1404               	andwf	?_ld_dword^(0+1280),w,c
 42701   016D88  0106               	movlb	6	; () banked
 42702   016D8A  6F36               	movwf	get_fat@val& (0+255),b
 42703   016D8C  0EFF               	movlw	255
 42704   016D8E  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 42705   016D90  6F37               	movwf	(get_fat@val+1)& (0+255),b
 42706   016D92  0EFF               	movlw	255
 42707   016D94  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 42708   016D96  6F38               	movwf	(get_fat@val+2)& (0+255),b
 42709   016D98  0E0F               	movlw	15
 42710   016D9A  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 42711   016D9C  6F39               	movwf	(get_fat@val+3)& (0+255),b
 42712                           
 42713                           ;../fatfs/ff.c: 1196:    break;
 42714   016D9E  EFE4  F0B6         	goto	l1477
 42715   016DA2                     l21101:
 42716                           
 42717                           ; BSR set to: 6
 42718   016DA2  C63C  F4D9         	movff	get_fat@fs,fsr2l
 42719   016DA6  C63D  F4DA         	movff	get_fat@fs+1,fsr2h
 42720   016DAA  50DF               	movf	indf2,w,c
 42721                           
 42722                           ; Switch size 1, requested type "simple"
 42723                           ; Number of cases is 3, Range of values is 1 to 3
 42724                           ; switch strategies available:
 42725                           ; Name         Instructions Cycles
 42726                           ; simple_byte           10     6 (average)
 42727                           ;	Chosen strategy is simple_byte
 42728   016DAC  0A01               	xorlw	1	; case 1
 42729   016DAE  B4D8               	btfsc	status,2,c
 42730   016DB0  EF32  F0B5         	goto	l1479
 42731   016DB4  0A03               	xorlw	3	; case 2
 42732   016DB6  B4D8               	btfsc	status,2,c
 42733   016DB8  EF08  F0B6         	goto	l21087
 42734   016DBC  0A01               	xorlw	1	; case 3
 42735   016DBE  B4D8               	btfsc	status,2,c
 42736   016DC0  EF66  F0B6         	goto	l21093
 42737   016DC4  EF22  F0B5         	goto	l21061
 42738   016DC8                     l1477:
 42739                           
 42740                           ;../fatfs/ff.c: 1229:  return val;
 42741   016DC8  C636  F624         	movff	get_fat@val,?_get_fat
 42742   016DCC  C637  F625         	movff	get_fat@val+1,?_get_fat+1
 42743   016DD0  C638  F626         	movff	get_fat@val+2,?_get_fat+2
 42744   016DD4  C639  F627         	movff	get_fat@val+3,?_get_fat+3
 42745   016DD8  0012               	return		;funcret
 42746   016DDA                     __end_of_get_fat:
 42747                           	callstack 0
 42748                           
 42749 ;; *************** function _move_window *****************
 42750 ;; Defined at:
 42751 ;;		line 1078 in file "../fatfs/ff.c"
 42752 ;; Parameters:    Size  Location     Type
 42753 ;;  fs              2   26[BANK6 ] PTR struct .
 42754 ;;		 -> fs(564), NULL(0), 
 42755 ;;  sect            4   28[BANK6 ] unsigned long 
 42756 ;; Auto vars:     Size  Location     Type
 42757 ;;  res             1  158[BANK5 ] enum E597
 42758 ;; Return value:  Size  Location     Type
 42759 ;;                  1    wreg      enum E597
 42760 ;; Registers used:
 42761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42762 ;; Tracked objects:
 42763 ;;		On entry : 0/0
 42764 ;;		On exit  : 0/0
 42765 ;;		Unchanged: 0/0
 42766 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42767 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42769 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42770 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42771 ;;Total ram usage:       11 bytes
 42772 ;; Hardware stack levels used: 1
 42773 ;; Hardware stack levels required when called: 13
 42774 ;; This function calls:
 42775 ;;		_disk_read
 42776 ;;		_sync_window
 42777 ;; This function is called by:
 42778 ;;		_get_fat
 42779 ;;		_put_fat
 42780 ;;		_dir_alloc
 42781 ;;		_dir_read
 42782 ;;		_dir_find
 42783 ;;		_dir_register
 42784 ;;		_check_fs
 42785 ;;		_mount_volume
 42786 ;;		_f_open
 42787 ;;		_f_sync
 42788 ;;		_f_getcwd
 42789 ;;		_dir_remove
 42790 ;;		_f_getfree
 42791 ;;		_f_rename
 42792 ;; This function uses a non-reentrant model
 42793 ;;
 42794                           
 42795                           	psect	text115
 42796   01DF56                     __ptext115:
 42797                           	callstack 0
 42798   01DF56                     _move_window:
 42799                           	callstack 105
 42800   01DF56                     
 42801                           ;../fatfs/ff.c: 1079:  FATFS* fs,;../fatfs/ff.c: 1080:  LBA_t sect;../fatfs/ff.c: 1082: 
      +                          {;../fatfs/ff.c: 1083:  FRESULT res = FR_OK;
 42802   01DF56  0105               	movlb	5	; () banked
 42803   01DF58  6BFE               	clrf	move_window@res& (0+255),b
 42804   01DF5A                     
 42805                           ; BSR set to: 5
 42806                           ;../fatfs/ff.c: 1086:  if (sect != fs->winsect) {
 42807   01DF5A  0106               	movlb	6	; () banked
 42808   01DF5C  EE20 F030          	lfsr	2,48
 42809   01DF60  511A               	movf	move_window@fs& (0+255),w,b
 42810   01DF62  26D9               	addwf	fsr2l,f,c
 42811   01DF64  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42812   01DF66  22DA               	addwfc	fsr2h,f,c
 42813   01DF68  511C               	movf	move_window@sect& (0+255),w,b
 42814   01DF6A  18DE               	xorwf	postinc2,w,c
 42815   01DF6C  E10F               	bnz	u27970
 42816   01DF6E  511D               	movf	(move_window@sect+1)& (0+255),w,b
 42817   01DF70  18DE               	xorwf	postinc2,w,c
 42818   01DF72  E10C               	bnz	u27970
 42819   01DF74  511E               	movf	(move_window@sect+2)& (0+255),w,b
 42820   01DF76  18DE               	xorwf	postinc2,w,c
 42821   01DF78  E109               	bnz	u27970
 42822   01DF7A  511F               	movf	(move_window@sect+3)& (0+255),w,b
 42823   01DF7C  18DE               	xorwf	postinc2,w,c
 42824   01DF7E  B4D8               	btfsc	status,2,c
 42825   01DF80  EFC4  F0EF         	goto	u27971
 42826   01DF84  EFC6  F0EF         	goto	u27970
 42827   01DF88                     u27971:
 42828   01DF88  EF11  F0F0         	goto	l21021
 42829   01DF8C                     u27970:
 42830   01DF8C                     
 42831                           ; BSR set to: 6
 42832                           ;../fatfs/ff.c: 1088:   res = sync_window(fs);
 42833   01DF8C  C61A  F608         	movff	move_window@fs,sync_window@fs
 42834   01DF90  C61B  F609         	movff	move_window@fs+1,sync_window@fs+1
 42835   01DF94  EC26  F0DB         	call	_sync_window	;wreg free
 42836   01DF98  0105               	movlb	5	; () banked
 42837   01DF9A  6FFE               	movwf	move_window@res& (0+255),b
 42838   01DF9C                     
 42839                           ; BSR set to: 5
 42840                           ;../fatfs/ff.c: 1090:   if (res == FR_OK) {
 42841   01DF9C  51FE               	movf	move_window@res& (0+255),w,b
 42842   01DF9E  A4D8               	btfss	status,2,c
 42843   01DFA0  EFD4  F0EF         	goto	u27981
 42844   01DFA4  EFD6  F0EF         	goto	u27980
 42845   01DFA8                     u27981:
 42846   01DFA8  EF11  F0F0         	goto	l21021
 42847   01DFAC                     u27980:
 42848   01DFAC                     
 42849                           ; BSR set to: 5
 42850                           ;../fatfs/ff.c: 1091:    if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 42851   01DFAC  0E34               	movlw	52
 42852   01DFAE  0106               	movlb	6	; () banked
 42853   01DFB0  251A               	addwf	move_window@fs& (0+255),w,b
 42854   01DFB2  6F00               	movwf	disk_read@buff& (0+255),b
 42855   01DFB4  0E00               	movlw	0
 42856   01DFB6  211B               	addwfc	(move_window@fs+1)& (0+255),w,b
 42857   01DFB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 42858   01DFBA  C61C  F602         	movff	move_window@sect,disk_read@sector
 42859   01DFBE  C61D  F603         	movff	move_window@sect+1,disk_read@sector+1
 42860   01DFC2  C61E  F604         	movff	move_window@sect+2,disk_read@sector+2
 42861   01DFC6  C61F  F605         	movff	move_window@sect+3,disk_read@sector+3
 42862   01DFCA  0E00               	movlw	0
 42863   01DFCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 42864   01DFCE  0E01               	movlw	1
 42865   01DFD0  6F06               	movwf	disk_read@count& (0+255),b
 42866   01DFD2  EE20 F001          	lfsr	2,1
 42867   01DFD6  511A               	movf	move_window@fs& (0+255),w,b
 42868   01DFD8  26D9               	addwf	fsr2l,f,c
 42869   01DFDA  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42870   01DFDC  22DA               	addwfc	fsr2h,f,c
 42871   01DFDE  50DF               	movf	indf2,w,c
 42872   01DFE0  ECD5  F0F3         	call	_disk_read
 42873   01DFE4  0900               	iorlw	0
 42874   01DFE6  B4D8               	btfsc	status,2,c
 42875   01DFE8  EFF8  F0EF         	goto	u27991
 42876   01DFEC  EFFA  F0EF         	goto	u27990
 42877   01DFF0                     u27991:
 42878   01DFF0  EF02  F0F0         	goto	l21019
 42879   01DFF4                     u27990:
 42880   01DFF4                     
 42881                           ;../fatfs/ff.c: 1092:     sect = (LBA_t)0 - 1;
 42882   01DFF4  0106               	movlb	6	; () banked
 42883   01DFF6  691C               	setf	move_window@sect& (0+255),b
 42884   01DFF8  691D               	setf	(move_window@sect+1)& (0+255),b
 42885   01DFFA  691E               	setf	(move_window@sect+2)& (0+255),b
 42886   01DFFC  691F               	setf	(move_window@sect+3)& (0+255),b
 42887   01DFFE                     
 42888                           ; BSR set to: 6
 42889                           ;../fatfs/ff.c: 1093:     res = FR_DISK_ERR;
 42890   01DFFE  0E01               	movlw	1
 42891   01E000  0105               	movlb	5	; () banked
 42892   01E002  6FFE               	movwf	move_window@res& (0+255),b
 42893   01E004                     l21019:
 42894                           
 42895                           ;../fatfs/ff.c: 1095:    fs->winsect = sect;
 42896   01E004  0106               	movlb	6	; () banked
 42897   01E006  EE20 F030          	lfsr	2,48
 42898   01E00A  511A               	movf	move_window@fs& (0+255),w,b
 42899   01E00C  26D9               	addwf	fsr2l,f,c
 42900   01E00E  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42901   01E010  22DA               	addwfc	fsr2h,f,c
 42902   01E012  C61C  F4DE         	movff	move_window@sect,postinc2
 42903   01E016  C61D  F4DE         	movff	move_window@sect+1,postinc2
 42904   01E01A  C61E  F4DE         	movff	move_window@sect+2,postinc2
 42905   01E01E  C61F  F4DE         	movff	move_window@sect+3,postinc2
 42906   01E022                     l21021:
 42907                           
 42908                           ;../fatfs/ff.c: 1098:  return res;
 42909   01E022  0105               	movlb	5	; () banked
 42910   01E024  51FE               	movf	move_window@res& (0+255),w,b
 42911   01E026                     
 42912                           ; BSR set to: 5
 42913   01E026  0012               	return		;funcret
 42914   01E028                     __end_of_move_window:
 42915                           	callstack 0
 42916                           
 42917 ;; *************** function _sync_window *****************
 42918 ;; Defined at:
 42919 ;;		line 1056 in file "../fatfs/ff.c"
 42920 ;; Parameters:    Size  Location     Type
 42921 ;;  fs              2    8[BANK6 ] PTR struct .
 42922 ;;		 -> fs(564), NULL(0), 
 42923 ;; Auto vars:     Size  Location     Type
 42924 ;;  res             1  156[BANK5 ] enum E597
 42925 ;; Return value:  Size  Location     Type
 42926 ;;                  1    wreg      enum E597
 42927 ;; Registers used:
 42928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42929 ;; Tracked objects:
 42930 ;;		On entry : 0/0
 42931 ;;		On exit  : 0/0
 42932 ;;		Unchanged: 0/0
 42933 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42934 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42936 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42937 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42938 ;;Total ram usage:       19 bytes
 42939 ;; Hardware stack levels used: 1
 42940 ;; Hardware stack levels required when called: 12
 42941 ;; This function calls:
 42942 ;;		_disk_write
 42943 ;; This function is called by:
 42944 ;;		_move_window
 42945 ;;		_sync_fs
 42946 ;;		_dir_clear
 42947 ;; This function uses a non-reentrant model
 42948 ;;
 42949                           
 42950                           	psect	text116
 42951   01B64C                     __ptext116:
 42952                           	callstack 0
 42953   01B64C                     _sync_window:
 42954                           	callstack 105
 42955   01B64C                     
 42956                           ;../fatfs/ff.c: 1057:  FATFS* fs;../fatfs/ff.c: 1059: {;../fatfs/ff.c: 1060:  FRESULT re
      +                          s = FR_OK;
 42957   01B64C  0105               	movlb	5	; () banked
 42958   01B64E  6BFC               	clrf	sync_window@res& (0+255),b
 42959   01B650                     
 42960                           ; BSR set to: 5
 42961                           ;../fatfs/ff.c: 1063:  if (fs->wflag) {
 42962   01B650  0106               	movlb	6	; () banked
 42963   01B652  EE20 F004          	lfsr	2,4
 42964   01B656  5108               	movf	sync_window@fs& (0+255),w,b
 42965   01B658  26D9               	addwf	fsr2l,f,c
 42966   01B65A  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 42967   01B65C  22DA               	addwfc	fsr2h,f,c
 42968   01B65E  50DF               	movf	indf2,w,c
 42969   01B660  B4D8               	btfsc	status,2,c
 42970   01B662  EF35  F0DB         	goto	u27911
 42971   01B666  EF37  F0DB         	goto	u27910
 42972   01B66A                     u27911:
 42973   01B66A  EFF4  F0DB         	goto	l1450
 42974   01B66E                     u27910:
 42975   01B66E                     
 42976                           ; BSR set to: 6
 42977                           ;../fatfs/ff.c: 1064:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
 42978   01B66E  0E34               	movlw	52
 42979   01B670  2508               	addwf	sync_window@fs& (0+255),w,b
 42980   01B672  6F00               	movwf	disk_write@buff& (0+255),b
 42981   01B674  0E00               	movlw	0
 42982   01B676  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 42983   01B678  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 42984   01B67A  EE20 F030          	lfsr	2,48
 42985   01B67E  5108               	movf	sync_window@fs& (0+255),w,b
 42986   01B680  26D9               	addwf	fsr2l,f,c
 42987   01B682  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 42988   01B684  22DA               	addwfc	fsr2h,f,c
 42989   01B686  C4DE F602          	movff	postinc2,disk_write@sector
 42990   01B68A  C4DE F603          	movff	postinc2,disk_write@sector+1
 42991   01B68E  C4DE F604          	movff	postinc2,disk_write@sector+2
 42992   01B692  C4DE F605          	movff	postinc2,disk_write@sector+3
 42993   01B696  0E00               	movlw	0
 42994   01B698  6F07               	movwf	(disk_write@count+1)& (0+255),b
 42995   01B69A  0E01               	movlw	1
 42996   01B69C  6F06               	movwf	disk_write@count& (0+255),b
 42997   01B69E  EE20 F001          	lfsr	2,1
 42998   01B6A2  5108               	movf	sync_window@fs& (0+255),w,b
 42999   01B6A4  26D9               	addwf	fsr2l,f,c
 43000   01B6A6  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43001   01B6A8  22DA               	addwfc	fsr2h,f,c
 43002   01B6AA  50DF               	movf	indf2,w,c
 43003   01B6AC  EC7E  F0F3         	call	_disk_write
 43004   01B6B0  0900               	iorlw	0
 43005   01B6B2  A4D8               	btfss	status,2,c
 43006   01B6B4  EF5E  F0DB         	goto	u27921
 43007   01B6B8  EF60  F0DB         	goto	u27920
 43008   01B6BC                     u27921:
 43009   01B6BC  EFF1  F0DB         	goto	l20933
 43010   01B6C0                     u27920:
 43011   01B6C0                     
 43012                           ;../fatfs/ff.c: 1065:    fs->wflag = 0;
 43013   01B6C0  0106               	movlb	6	; () banked
 43014   01B6C2  EE20 F004          	lfsr	2,4
 43015   01B6C6  5108               	movf	sync_window@fs& (0+255),w,b
 43016   01B6C8  26D9               	addwf	fsr2l,f,c
 43017   01B6CA  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43018   01B6CC  22DA               	addwfc	fsr2h,f,c
 43019   01B6CE  6ADF               	clrf	indf2,c
 43020   01B6D0                     
 43021                           ; BSR set to: 6
 43022                           ;../fatfs/ff.c: 1066:    if (fs->winsect - fs->fatbase < fs->fsize) {
 43023   01B6D0  EE20 F01C          	lfsr	2,28
 43024   01B6D4  5108               	movf	sync_window@fs& (0+255),w,b
 43025   01B6D6  26D9               	addwf	fsr2l,f,c
 43026   01B6D8  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43027   01B6DA  22DA               	addwfc	fsr2h,f,c
 43028   01B6DC  EE10 F024          	lfsr	1,36
 43029   01B6E0  5108               	movf	sync_window@fs& (0+255),w,b
 43030   01B6E2  26E1               	addwf	fsr1l,f,c
 43031   01B6E4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43032   01B6E6  22E2               	addwfc	fsr1h,f,c
 43033   01B6E8  C4E6 F60E          	movff	postinc1,??_sync_window+4
 43034   01B6EC  C4E6 F60F          	movff	postinc1,??_sync_window+5
 43035   01B6F0  C4E6 F610          	movff	postinc1,??_sync_window+6
 43036   01B6F4  C4E6 F611          	movff	postinc1,??_sync_window+7
 43037   01B6F8  EE10 F030          	lfsr	1,48
 43038   01B6FC  5108               	movf	sync_window@fs& (0+255),w,b
 43039   01B6FE  26E1               	addwf	fsr1l,f,c
 43040   01B700  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43041   01B702  22E2               	addwfc	fsr1h,f,c
 43042   01B704  C4E6 F612          	movff	postinc1,??_sync_window+8
 43043   01B708  C4E6 F613          	movff	postinc1,??_sync_window+9
 43044   01B70C  C4E6 F614          	movff	postinc1,??_sync_window+10
 43045   01B710  C4E6 F615          	movff	postinc1,??_sync_window+11
 43046   01B714  510E               	movf	(??_sync_window+4)& (0+255),w,b
 43047   01B716  5D12               	subwf	(??_sync_window+8)& (0+255),w,b
 43048   01B718  6F16               	movwf	(??_sync_window+12)& (0+255),b
 43049   01B71A  510F               	movf	(??_sync_window+5)& (0+255),w,b
 43050   01B71C  5913               	subwfb	(??_sync_window+9)& (0+255),w,b
 43051   01B71E  6F17               	movwf	(??_sync_window+13)& (0+255),b
 43052   01B720  5110               	movf	(??_sync_window+6)& (0+255),w,b
 43053   01B722  5914               	subwfb	(??_sync_window+10)& (0+255),w,b
 43054   01B724  6F18               	movwf	(??_sync_window+14)& (0+255),b
 43055   01B726  5111               	movf	(??_sync_window+7)& (0+255),w,b
 43056   01B728  5915               	subwfb	(??_sync_window+11)& (0+255),w,b
 43057   01B72A  6F19               	movwf	(??_sync_window+15)& (0+255),b
 43058   01B72C  50DE               	movf	postinc2,w,c
 43059   01B72E  5D16               	subwf	(??_sync_window+12)& (0+255),w,b
 43060   01B730  50DE               	movf	postinc2,w,c
 43061   01B732  5917               	subwfb	(??_sync_window+13)& (0+255),w,b
 43062   01B734  50DE               	movf	postinc2,w,c
 43063   01B736  5918               	subwfb	(??_sync_window+14)& (0+255),w,b
 43064   01B738  50DE               	movf	postinc2,w,c
 43065   01B73A  5919               	subwfb	(??_sync_window+15)& (0+255),w,b
 43066   01B73C  B0D8               	btfsc	status,0,c
 43067   01B73E  EFA3  F0DB         	goto	u27931
 43068   01B742  EFA5  F0DB         	goto	u27930
 43069   01B746                     u27931:
 43070   01B746  EFF4  F0DB         	goto	l1450
 43071   01B74A                     u27930:
 43072   01B74A                     
 43073                           ; BSR set to: 6
 43074                           ;../fatfs/ff.c: 1067:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect
      +                           + fs->fsize, 1);
 43075   01B74A  EE20 F003          	lfsr	2,3
 43076   01B74E  5108               	movf	sync_window@fs& (0+255),w,b
 43077   01B750  26D9               	addwf	fsr2l,f,c
 43078   01B752  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43079   01B754  22DA               	addwfc	fsr2h,f,c
 43080   01B756  0E02               	movlw	2
 43081   01B758  18DE               	xorwf	postinc2,w,c
 43082   01B75A  A4D8               	btfss	status,2,c
 43083   01B75C  EFB2  F0DB         	goto	u27941
 43084   01B760  EFB4  F0DB         	goto	u27940
 43085   01B764                     u27941:
 43086   01B764  EFF4  F0DB         	goto	l1450
 43087   01B768                     u27940:
 43088   01B768                     
 43089                           ; BSR set to: 6
 43090   01B768  0E34               	movlw	52
 43091   01B76A  2508               	addwf	sync_window@fs& (0+255),w,b
 43092   01B76C  6F00               	movwf	disk_write@buff& (0+255),b
 43093   01B76E  0E00               	movlw	0
 43094   01B770  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 43095   01B772  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 43096   01B774  EE20 F01C          	lfsr	2,28
 43097   01B778  5108               	movf	sync_window@fs& (0+255),w,b
 43098   01B77A  26D9               	addwf	fsr2l,f,c
 43099   01B77C  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43100   01B77E  22DA               	addwfc	fsr2h,f,c
 43101   01B780  C4DE F60A          	movff	postinc2,??_sync_window
 43102   01B784  C4DE F60B          	movff	postinc2,??_sync_window+1
 43103   01B788  C4DE F60C          	movff	postinc2,??_sync_window+2
 43104   01B78C  C4DE F60D          	movff	postinc2,??_sync_window+3
 43105   01B790  EE20 F030          	lfsr	2,48
 43106   01B794  5108               	movf	sync_window@fs& (0+255),w,b
 43107   01B796  26D9               	addwf	fsr2l,f,c
 43108   01B798  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43109   01B79A  22DA               	addwfc	fsr2h,f,c
 43110   01B79C  C4DE F60E          	movff	postinc2,??_sync_window+4
 43111   01B7A0  C4DE F60F          	movff	postinc2,??_sync_window+5
 43112   01B7A4  C4DE F610          	movff	postinc2,??_sync_window+6
 43113   01B7A8  C4DE F611          	movff	postinc2,??_sync_window+7
 43114   01B7AC  510A               	movf	??_sync_window& (0+255),w,b
 43115   01B7AE  250E               	addwf	(??_sync_window+4)& (0+255),w,b
 43116   01B7B0  6F02               	movwf	disk_write@sector& (0+255),b
 43117   01B7B2  510B               	movf	(??_sync_window+1)& (0+255),w,b
 43118   01B7B4  210F               	addwfc	(??_sync_window+5)& (0+255),w,b
 43119   01B7B6  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 43120   01B7B8  510C               	movf	(??_sync_window+2)& (0+255),w,b
 43121   01B7BA  2110               	addwfc	(??_sync_window+6)& (0+255),w,b
 43122   01B7BC  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 43123   01B7BE  510D               	movf	(??_sync_window+3)& (0+255),w,b
 43124   01B7C0  2111               	addwfc	(??_sync_window+7)& (0+255),w,b
 43125   01B7C2  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 43126   01B7C4  0E00               	movlw	0
 43127   01B7C6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 43128   01B7C8  0E01               	movlw	1
 43129   01B7CA  6F06               	movwf	disk_write@count& (0+255),b
 43130   01B7CC  EE20 F001          	lfsr	2,1
 43131   01B7D0  5108               	movf	sync_window@fs& (0+255),w,b
 43132   01B7D2  26D9               	addwf	fsr2l,f,c
 43133   01B7D4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43134   01B7D6  22DA               	addwfc	fsr2h,f,c
 43135   01B7D8  50DF               	movf	indf2,w,c
 43136   01B7DA  EC7E  F0F3         	call	_disk_write
 43137   01B7DE  EFF4  F0DB         	goto	l1450
 43138   01B7E2                     l20933:
 43139                           
 43140                           ;../fatfs/ff.c: 1070:    res = FR_DISK_ERR;
 43141   01B7E2  0E01               	movlw	1
 43142   01B7E4  0105               	movlb	5	; () banked
 43143   01B7E6  6FFC               	movwf	sync_window@res& (0+255),b
 43144   01B7E8                     l1450:
 43145                           
 43146                           ;../fatfs/ff.c: 1073:  return res;
 43147   01B7E8  0105               	movlb	5	; () banked
 43148   01B7EA  51FC               	movf	sync_window@res& (0+255),w,b
 43149   01B7EC                     
 43150                           ; BSR set to: 5
 43151   01B7EC  0012               	return		;funcret
 43152   01B7EE                     __end_of_sync_window:
 43153                           	callstack 0
 43154                           
 43155 ;; *************** function _disk_write *****************
 43156 ;; Defined at:
 43157 ;;		line 130 in file "../drivers/diskio.c"
 43158 ;; Parameters:    Size  Location     Type
 43159 ;;  pdrv            1    wreg     unsigned char 
 43160 ;;  buff            2    0[BANK6 ] PTR const unsigned char 
 43161 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 43162 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 43163 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43164 ;;  sector          4    2[BANK6 ] unsigned long 
 43165 ;;  count           2    6[BANK6 ] unsigned int 
 43166 ;; Auto vars:     Size  Location     Type
 43167 ;;  pdrv            1  153[BANK5 ] unsigned char 
 43168 ;;  i               2  154[BANK5 ] int 
 43169 ;; Return value:  Size  Location     Type
 43170 ;;                  1    wreg      enum E737
 43171 ;; Registers used:
 43172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43173 ;; Tracked objects:
 43174 ;;		On entry : 0/0
 43175 ;;		On exit  : 0/0
 43176 ;;		Unchanged: 0/0
 43177 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43178 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43179 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43181 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43182 ;;Total ram usage:       11 bytes
 43183 ;; Hardware stack levels used: 1
 43184 ;; Hardware stack levels required when called: 11
 43185 ;; This function calls:
 43186 ;;		_SDCard_write512
 43187 ;;		_printf
 43188 ;;		_util_addrdump
 43189 ;; This function is called by:
 43190 ;;		_sync_window
 43191 ;;		_sync_fs
 43192 ;;		_dir_clear
 43193 ;;		_f_read
 43194 ;;		_f_write
 43195 ;;		_f_sync
 43196 ;;		_f_lseek
 43197 ;;		_f_truncate
 43198 ;; This function uses a non-reentrant model
 43199 ;;
 43200                           
 43201                           	psect	text117
 43202   01E6FC                     __ptext117:
 43203                           	callstack 0
 43204   01E6FC                     _disk_write:
 43205                           	callstack 105
 43206   01E6FC                     
 43207                           ;../drivers/diskio.c: 134:     for (int i = 0; i < count; i++) {
 43208   01E6FC  0E00               	movlw	0
 43209   01E6FE  0105               	movlb	5	; () banked
 43210   01E700  6FFB               	movwf	(disk_write@i+1)& (0+255),b
 43211   01E702  0E00               	movlw	0
 43212   01E704  6FFA               	movwf	disk_write@i& (0+255),b
 43213   01E706  EFC4  F0F3         	goto	l20913
 43214   01E70A                     l20895:
 43215                           
 43216                           ; BSR set to: 5
 43217                           ;../drivers/diskio.c: 135:         if (SDCard_write512(start_lba + sector, 0, buff, 512)
      +                           != 0) {
 43218   01E70A  0106               	movlb	6	; () banked
 43219   01E70C  5102               	movf	disk_write@sector& (0+255),w,b
 43220   01E70E  0107               	movlb	7	; () banked
 43221   01E710  25EE               	addwf	_start_lba& (0+255),w,b
 43222   01E712  0105               	movlb	5	; () banked
 43223   01E714  6FDE               	movwf	SDCard_write512@addr& (0+255),b
 43224   01E716  0106               	movlb	6	; () banked
 43225   01E718  5103               	movf	(disk_write@sector+1)& (0+255),w,b
 43226   01E71A  0107               	movlb	7	; () banked
 43227   01E71C  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 43228   01E71E  0105               	movlb	5	; () banked
 43229   01E720  6FDF               	movwf	(SDCard_write512@addr+1)& (0+255),b
 43230   01E722  0106               	movlb	6	; () banked
 43231   01E724  5104               	movf	(disk_write@sector+2)& (0+255),w,b
 43232   01E726  0107               	movlb	7	; () banked
 43233   01E728  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 43234   01E72A  0105               	movlb	5	; () banked
 43235   01E72C  6FE0               	movwf	(SDCard_write512@addr+2)& (0+255),b
 43236   01E72E  0106               	movlb	6	; () banked
 43237   01E730  5105               	movf	(disk_write@sector+3)& (0+255),w,b
 43238   01E732  0107               	movlb	7	; () banked
 43239   01E734  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 43240   01E736  0105               	movlb	5	; () banked
 43241   01E738  6FE1               	movwf	(SDCard_write512@addr+3)& (0+255),b
 43242   01E73A  0E00               	movlw	0
 43243   01E73C  6FE3               	movwf	(SDCard_write512@offs+1)& (0+255),b
 43244   01E73E  0E00               	movlw	0
 43245   01E740  6FE2               	movwf	SDCard_write512@offs& (0+255),b
 43246   01E742  C600  F5E4         	movff	disk_write@buff,SDCard_write512@buf
 43247   01E746  C601  F5E5         	movff	disk_write@buff+1,SDCard_write512@buf+1
 43248   01E74A  0E02               	movlw	2
 43249   01E74C  6FE7               	movwf	(SDCard_write512@count+1)& (0+255),b
 43250   01E74E  0E00               	movlw	0
 43251   01E750  6FE6               	movwf	SDCard_write512@count& (0+255),b
 43252   01E752  EC73  F0C1         	call	_SDCard_write512	;wreg free
 43253   01E756  0105               	movlb	5	; () banked
 43254   01E758  51DE               	movf	?_SDCard_write512& (0+255),w,b
 43255   01E75A  11DF               	iorwf	(?_SDCard_write512+1)& (0+255),w,b
 43256   01E75C  B4D8               	btfsc	status,2,c
 43257   01E75E  EFB3  F0F3         	goto	u27891
 43258   01E762  EFB5  F0F3         	goto	u27890
 43259   01E766                     u27891:
 43260   01E766  EFB8  F0F3         	goto	l20907
 43261   01E76A                     u27890:
 43262   01E76A                     
 43263                           ; BSR set to: 5
 43264                           ;../drivers/diskio.c: 137:             return RES_ERROR;
 43265   01E76A  0E01               	movlw	1
 43266   01E76C  EFD4  F0F3         	goto	l2487
 43267   01E770                     l20907:
 43268                           
 43269                           ; BSR set to: 5
 43270                           ;../drivers/diskio.c: 142:         sector++;
 43271   01E770  0E01               	movlw	1
 43272   01E772  0106               	movlb	6	; () banked
 43273   01E774  2702               	addwf	disk_write@sector& (0+255),f,b
 43274   01E776  0E00               	movlw	0
 43275   01E778  2303               	addwfc	(disk_write@sector+1)& (0+255),f,b
 43276   01E77A  2304               	addwfc	(disk_write@sector+2)& (0+255),f,b
 43277   01E77C  2305               	addwfc	(disk_write@sector+3)& (0+255),f,b
 43278   01E77E                     
 43279                           ; BSR set to: 6
 43280                           ;../drivers/diskio.c: 143:         buff += 512;
 43281   01E77E  0E02               	movlw	2
 43282   01E780  2701               	addwf	(disk_write@buff+1)& (0+255),f,b
 43283   01E782                     
 43284                           ; BSR set to: 6
 43285                           ;../drivers/diskio.c: 144:     }
 43286   01E782  0105               	movlb	5	; () banked
 43287   01E784  4BFA               	infsnz	disk_write@i& (0+255),f,b
 43288   01E786  2BFB               	incf	(disk_write@i+1)& (0+255),f,b
 43289   01E788                     l20913:
 43290                           
 43291                           ; BSR set to: 5
 43292   01E788  0106               	movlb	6	; () banked
 43293   01E78A  5106               	movf	disk_write@count& (0+255),w,b
 43294   01E78C  0105               	movlb	5	; () banked
 43295   01E78E  5DFA               	subwf	disk_write@i& (0+255),w,b
 43296   01E790  0106               	movlb	6	; () banked
 43297   01E792  5107               	movf	(disk_write@count+1)& (0+255),w,b
 43298   01E794  0105               	movlb	5	; () banked
 43299   01E796  59FB               	subwfb	(disk_write@i+1)& (0+255),w,b
 43300   01E798  A0D8               	btfss	status,0,c
 43301   01E79A  EFD1  F0F3         	goto	u27901
 43302   01E79E  EFD3  F0F3         	goto	u27900
 43303   01E7A2                     u27901:
 43304   01E7A2  EF85  F0F3         	goto	l20895
 43305   01E7A6                     u27900:
 43306   01E7A6                     
 43307                           ; BSR set to: 5
 43308                           ;../drivers/diskio.c: 146:     return RES_OK;
 43309   01E7A6  0E00               	movlw	0
 43310   01E7A8                     l2487:
 43311                           
 43312                           ; BSR set to: 5
 43313   01E7A8  0012               	return		;funcret
 43314   01E7AA                     __end_of_disk_write:
 43315                           	callstack 0
 43316                           
 43317 ;; *************** function _SDCard_write512 *****************
 43318 ;; Defined at:
 43319 ;;		line 237 in file "../src/boards/../../drivers/SDCard.c"
 43320 ;; Parameters:    Size  Location     Type
 43321 ;;  addr            4  126[BANK5 ] unsigned long 
 43322 ;;  offs            2  130[BANK5 ] unsigned int 
 43323 ;;  buf             2  132[BANK5 ] PTR const void 
 43324 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 43325 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 43326 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43327 ;;  count           2  134[BANK5 ] unsigned int 
 43328 ;; Auto vars:     Size  Location     Type
 43329 ;;  i               2  142[BANK5 ] unsigned int 
 43330 ;;  i               2  140[BANK5 ] int 
 43331 ;;  spi             2  150[BANK5 ] PTR struct SPI
 43332 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 43333 ;;  crc             2  148[BANK5 ] unsigned short 
 43334 ;;  result          2  146[BANK5 ] int 
 43335 ;;  retry           2  144[BANK5 ] int 
 43336 ;;  response        1  152[BANK5 ] unsigned char 
 43337 ;; Return value:  Size  Location     Type
 43338 ;;                  2  126[BANK5 ] int 
 43339 ;; Registers used:
 43340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43341 ;; Tracked objects:
 43342 ;;		On entry : 0/0
 43343 ;;		On exit  : 0/0
 43344 ;;		Unchanged: 0/0
 43345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43346 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43347 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43349 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43350 ;;Total ram usage:       27 bytes
 43351 ;; Hardware stack levels used: 1
 43352 ;; Hardware stack levels required when called: 10
 43353 ;; This function calls:
 43354 ;;		_SDCard_end_transaction
 43355 ;;		_SPI_SD_dummy_clocks
 43356 ;;		_SPI_SD_send
 43357 ;;		___SDCard_command_r1
 43358 ;;		___SDCard_crc16
 43359 ;;		___SDCard_wait_response
 43360 ;;		_printf
 43361 ;;		_util_addrdump
 43362 ;; This function is called by:
 43363 ;;		_disk_write
 43364 ;; This function uses a non-reentrant model
 43365 ;;
 43366                           
 43367                           	psect	text118
 43368   0182E6                     __ptext118:
 43369                           	callstack 0
 43370   0182E6                     _SDCard_write512:
 43371                           	callstack 105
 43372   0182E6                     
 43373                           ;../src/boards/../../drivers/SDCard.c: 237: int SDCard_write512(uint32_t addr, unsigned 
      +                          int offs, const void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 238
      +                          : {;../src/boards/../../drivers/SDCard.c: 239:     struct SPI *spi = ctx_.spi;
 43374   0182E6  C7A8  F5F6         	movff	_ctx_,SDCard_write512@spi
 43375   0182EA  C7A9  F5F7         	movff	_ctx_+1,SDCard_write512@spi+1
 43376   0182EE                     
 43377                           ;../src/boards/../../drivers/SDCard.c: 240:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 241:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 242:     uint
      +                          16_t crc;;../src/boards/../../drivers/SDCard.c: 243:     int retry = 5;
 43378   0182EE  0E00               	movlw	0
 43379   0182F0  0105               	movlb	5	; () banked
 43380   0182F2  6FF1               	movwf	(SDCard_write512@retry+1)& (0+255),b
 43381   0182F4  0E05               	movlw	5
 43382   0182F6  6FF0               	movwf	SDCard_write512@retry& (0+255),b
 43383   0182F8                     
 43384                           ; BSR set to: 5
 43385                           ;../src/boards/../../drivers/SDCard.c: 250:     crc = 0;
 43386   0182F8  0E00               	movlw	0
 43387   0182FA  6FF5               	movwf	(SDCard_write512@crc+1)& (0+255),b
 43388   0182FC  0E00               	movlw	0
 43389   0182FE  6FF4               	movwf	SDCard_write512@crc& (0+255),b
 43390   018300                     
 43391                           ; BSR set to: 5
 43392                           ;../src/boards/../../drivers/SDCard.c: 251:     response = 0xff;
 43393   018300  69F8               	setf	SDCard_write512@response& (0+255),b
 43394   018302                     
 43395                           ; BSR set to: 5
 43396                           ;../src/boards/../../drivers/SDCard.c: 252:     for (int i = 0; i < offs; i++) {
 43397   018302  0E00               	movlw	0
 43398   018304  6FED               	movwf	(SDCard_write512@i+1)& (0+255),b
 43399   018306  0E00               	movlw	0
 43400   018308  6FEC               	movwf	SDCard_write512@i& (0+255),b
 43401   01830A  EF9C  F0C1         	goto	l20729
 43402   01830E                     l20725:
 43403                           
 43404                           ; BSR set to: 5
 43405                           ;../src/boards/../../drivers/SDCard.c: 253:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 43406   01830E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43407   018312  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43408   018316  0EF8               	movlw	low SDCard_write512@response
 43409   018318  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 43410   01831A  0E05               	movlw	high SDCard_write512@response
 43411   01831C  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 43412   01831E  0E00               	movlw	0
 43413   018320  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 43414   018322  0E01               	movlw	1
 43415   018324  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 43416   018326  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43417   01832A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43418   01832E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43419   018332                     
 43420                           ;../src/boards/../../drivers/SDCard.c: 254:     }
 43421   018332  0105               	movlb	5	; () banked
 43422   018334  4BEC               	infsnz	SDCard_write512@i& (0+255),f,b
 43423   018336  2BED               	incf	(SDCard_write512@i+1)& (0+255),f,b
 43424   018338                     l20729:
 43425                           
 43426                           ; BSR set to: 5
 43427   018338  51E2               	movf	SDCard_write512@offs& (0+255),w,b
 43428   01833A  5DEC               	subwf	SDCard_write512@i& (0+255),w,b
 43429   01833C  51E3               	movf	(SDCard_write512@offs+1)& (0+255),w,b
 43430   01833E  59ED               	subwfb	(SDCard_write512@i+1)& (0+255),w,b
 43431   018340  A0D8               	btfss	status,0,c
 43432   018342  EFA5  F0C1         	goto	u27681
 43433   018346  EFA7  F0C1         	goto	u27680
 43434   01834A                     u27681:
 43435   01834A  EF87  F0C1         	goto	l20725
 43436   01834E                     u27680:
 43437   01834E                     
 43438                           ; BSR set to: 5
 43439                           ;../src/boards/../../drivers/SDCard.c: 255:     crc = __SDCard_crc16(crc, buf, count);
 43440   01834E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43441   018352  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43442   018356  C5E4  F506         	movff	SDCard_write512@buf,___SDCard_crc16@buf
 43443   01835A  C5E5  F507         	movff	SDCard_write512@buf+1,___SDCard_crc16@buf+1
 43444   01835E  C5E6  F508         	movff	SDCard_write512@count,___SDCard_crc16@count
 43445   018362  C5E7  F509         	movff	SDCard_write512@count+1,___SDCard_crc16@count+1
 43446   018366  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43447   01836A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43448   01836E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43449   018372                     
 43450                           ;../src/boards/../../drivers/SDCard.c: 256:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 43451   018372  0E00               	movlw	0
 43452   018374  0105               	movlb	5	; () banked
 43453   018376  6FEF               	movwf	(SDCard_write512@i_691+1)& (0+255),b
 43454   018378  0E00               	movlw	0
 43455   01837A  6FEE               	movwf	SDCard_write512@i_691& (0+255),b
 43456   01837C  EFD5  F0C1         	goto	l20739
 43457   018380                     l20735:
 43458                           
 43459                           ; BSR set to: 5
 43460                           ;../src/boards/../../drivers/SDCard.c: 257:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 43461   018380  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43462   018384  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43463   018388  0EF8               	movlw	low SDCard_write512@response
 43464   01838A  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 43465   01838C  0E05               	movlw	high SDCard_write512@response
 43466   01838E  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 43467   018390  0E00               	movlw	0
 43468   018392  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 43469   018394  0E01               	movlw	1
 43470   018396  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 43471   018398  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43472   01839C  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43473   0183A0  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43474   0183A4                     
 43475                           ;../src/boards/../../drivers/SDCard.c: 258:     }
 43476   0183A4  0105               	movlb	5	; () banked
 43477   0183A6  4BEE               	infsnz	SDCard_write512@i_691& (0+255),f,b
 43478   0183A8  2BEF               	incf	(SDCard_write512@i_691+1)& (0+255),f,b
 43479   0183AA                     l20739:
 43480                           
 43481                           ; BSR set to: 5
 43482   0183AA  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 43483   0183AE  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 43484   0183B2  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 43485   0183B4  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 43486   0183B6  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 43487   0183B8  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 43488   0183BA  51E6               	movf	SDCard_write512@count& (0+255),w,b
 43489   0183BC  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 43490   0183BE  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 43491   0183C0  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 43492   0183C2  0E00               	movlw	0
 43493   0183C4  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 43494   0183C6  6FEA               	movwf	(??_SDCard_write512+2)& (0+255),b
 43495   0183C8  0E02               	movlw	2
 43496   0183CA  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 43497   0183CC  6FEB               	movwf	(??_SDCard_write512+3)& (0+255),b
 43498   0183CE  51EA               	movf	(??_SDCard_write512+2)& (0+255),w,b
 43499   0183D0  5DEE               	subwf	SDCard_write512@i_691& (0+255),w,b
 43500   0183D2  51EB               	movf	(??_SDCard_write512+3)& (0+255),w,b
 43501   0183D4  59EF               	subwfb	(SDCard_write512@i_691+1)& (0+255),w,b
 43502   0183D6  A0D8               	btfss	status,0,c
 43503   0183D8  EFF0  F0C1         	goto	u27691
 43504   0183DC  EFF2  F0C1         	goto	u27690
 43505   0183E0                     u27691:
 43506   0183E0  EFC0  F0C1         	goto	l20735
 43507   0183E4                     u27690:
 43508   0183E4                     l20741:
 43509                           
 43510                           ;../src/boards/../../drivers/SDCard.c: 261:     result = __SDCard_command_r1(24, addr, &
      +                          response);
 43511   0183E4  C5DE  F51B         	movff	SDCard_write512@addr,___SDCard_command_r1@argument
 43512   0183E8  C5DF  F51C         	movff	SDCard_write512@addr+1,___SDCard_command_r1@argument+1
 43513   0183EC  C5E0  F51D         	movff	SDCard_write512@addr+2,___SDCard_command_r1@argument+2
 43514   0183F0  C5E1  F51E         	movff	SDCard_write512@addr+3,___SDCard_command_r1@argument+3
 43515   0183F4  0EF8               	movlw	low SDCard_write512@response
 43516   0183F6  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 43517   0183F8  0E05               	movlw	high SDCard_write512@response
 43518   0183FA  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 43519   0183FC  0E18               	movlw	24
 43520   0183FE  EC23  F0F3         	call	___SDCard_command_r1
 43521   018402  C51B  F5F2         	movff	?___SDCard_command_r1,SDCard_write512@result
 43522   018406  C51C  F5F3         	movff	?___SDCard_command_r1+1,SDCard_write512@result+1
 43523   01840A                     
 43524                           ;../src/boards/../../drivers/SDCard.c: 262:     if (result != 0) {
 43525   01840A  0105               	movlb	5	; () banked
 43526   01840C  51F2               	movf	SDCard_write512@result& (0+255),w,b
 43527   01840E  11F3               	iorwf	(SDCard_write512@result+1)& (0+255),w,b
 43528   018410  B4D8               	btfsc	status,2,c
 43529   018412  EF0D  F0C2         	goto	u27701
 43530   018416  EF0F  F0C2         	goto	u27700
 43531   01841A                     u27701:
 43532   01841A  EF11  F0C2         	goto	l20747
 43533   01841E                     u27700:
 43534   01841E  EFE4  F0C2         	goto	l20801
 43535   018422                     l20747:
 43536                           
 43537                           ; BSR set to: 5
 43538                           ;../src/boards/../../drivers/SDCard.c: 265:     if (response != 0) {
 43539   018422  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43540   018424  B4D8               	btfsc	status,2,c
 43541   018426  EF17  F0C2         	goto	u27711
 43542   01842A  EF19  F0C2         	goto	u27710
 43543   01842E                     u27711:
 43544   01842E  EF1F  F0C2         	goto	l20751
 43545   018432                     u27710:
 43546   018432                     l20749:
 43547                           
 43548                           ; BSR set to: 5
 43549                           ;../src/boards/../../drivers/SDCard.c: 266:         result = 3;
 43550   018432  0E00               	movlw	0
 43551   018434  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43552   018436  0E03               	movlw	3
 43553   018438  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43554                           
 43555                           ;../src/boards/../../drivers/SDCard.c: 267:         goto done;
 43556   01843A  EFE4  F0C2         	goto	l20801
 43557   01843E                     l20751:
 43558                           
 43559                           ; BSR set to: 5
 43560                           ;../src/boards/../../drivers/SDCard.c: 270:     response = 0xfe;
 43561   01843E  0EFE               	movlw	254
 43562   018440  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43563   018442                     
 43564                           ; BSR set to: 5
 43565                           ;../src/boards/../../drivers/SDCard.c: 271:     SPI_SD_send(spi, &response, 1);
 43566   018442  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43567   018446  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43568   01844A  0EF8               	movlw	low SDCard_write512@response
 43569   01844C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43570   01844E  0E05               	movlw	high SDCard_write512@response
 43571   018450  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43572   018452  0E00               	movlw	0
 43573   018454  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43574   018456  0E01               	movlw	1
 43575   018458  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43576   01845A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43577   01845E                     
 43578                           ;../src/boards/../../drivers/SDCard.c: 272:     SPI_SD_dummy_clocks(spi, offs);
 43579   01845E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 43580   018462  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 43581   018466  C5E2  F510         	movff	SDCard_write512@offs,SPI_SD_dummy_clocks@clocks
 43582   01846A  C5E3  F511         	movff	SDCard_write512@offs+1,SPI_SD_dummy_clocks@clocks+1
 43583   01846E  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 43584   018472                     
 43585                           ;../src/boards/../../drivers/SDCard.c: 273:     SPI_SD_send(spi, buf, count);
 43586   018472  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43587   018476  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43588   01847A  C5E4  F506         	movff	SDCard_write512@buf,SPI_SD_send@buf
 43589   01847E  C5E5  F507         	movff	SDCard_write512@buf+1,SPI_SD_send@buf+1
 43590   018482  C5E6  F508         	movff	SDCard_write512@count,SPI_SD_send@count
 43591   018486  C5E7  F509         	movff	SDCard_write512@count+1,SPI_SD_send@count+1
 43592   01848A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43593   01848E                     
 43594                           ;../src/boards/../../drivers/SDCard.c: 274:     SPI_SD_dummy_clocks(spi, 512 - offs - co
      +                          unt);
 43595   01848E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 43596   018492  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 43597   018496  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 43598   01849A  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 43599   01849E  0105               	movlb	5	; () banked
 43600   0184A0  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 43601   0184A2  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 43602   0184A4  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 43603   0184A6  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 43604   0184A8  51E6               	movf	SDCard_write512@count& (0+255),w,b
 43605   0184AA  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 43606   0184AC  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 43607   0184AE  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 43608   0184B0  0E00               	movlw	0
 43609   0184B2  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 43610   0184B4  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 43611   0184B6  0E02               	movlw	2
 43612   0184B8  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 43613   0184BA  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 43614   0184BC  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 43615                           
 43616                           ;../src/boards/../../drivers/SDCard.c: 275:     response = (crc >> 8) & 0xff;
 43617   0184C0  0105               	movlb	5	; () banked
 43618   0184C2  51F5               	movf	(SDCard_write512@crc+1)& (0+255),w,b
 43619   0184C4  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43620   0184C6                     
 43621                           ; BSR set to: 5
 43622                           ;../src/boards/../../drivers/SDCard.c: 276:     SPI_SD_send(spi, &response, 1);
 43623   0184C6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43624   0184CA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43625   0184CE  0EF8               	movlw	low SDCard_write512@response
 43626   0184D0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43627   0184D2  0E05               	movlw	high SDCard_write512@response
 43628   0184D4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43629   0184D6  0E00               	movlw	0
 43630   0184D8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43631   0184DA  0E01               	movlw	1
 43632   0184DC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43633   0184DE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43634   0184E2                     
 43635                           ;../src/boards/../../drivers/SDCard.c: 277:     response = crc & 0xff;
 43636   0184E2  C5F4  F5F8         	movff	SDCard_write512@crc,SDCard_write512@response
 43637   0184E6                     
 43638                           ;../src/boards/../../drivers/SDCard.c: 278:     SPI_SD_send(spi, &response, 1);
 43639   0184E6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43640   0184EA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43641   0184EE  0EF8               	movlw	low SDCard_write512@response
 43642   0184F0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43643   0184F2  0E05               	movlw	high SDCard_write512@response
 43644   0184F4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43645   0184F6  0E00               	movlw	0
 43646   0184F8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43647   0184FA  0E01               	movlw	1
 43648   0184FC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43649   0184FE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43650   018502                     
 43651                           ;../src/boards/../../drivers/SDCard.c: 280:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 43652   018502  0E0B               	movlw	11
 43653   018504  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43654   018506  0EB8               	movlw	184
 43655   018508  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43656   01850A  0EFF               	movlw	255
 43657   01850C  ECDC  F0FD         	call	___SDCard_wait_response
 43658   018510  0105               	movlb	5	; () banked
 43659   018512  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43660   018514                     
 43661                           ; BSR set to: 5
 43662                           ;../src/boards/../../drivers/SDCard.c: 281:     if (response == 0xff) {
 43663   018514  29F8               	incf	SDCard_write512@response& (0+255),w,b
 43664   018516  A4D8               	btfss	status,2,c
 43665   018518  EF90  F0C2         	goto	u27721
 43666   01851C  EF92  F0C2         	goto	u27720
 43667   018520                     u27721:
 43668   018520  EF98  F0C2         	goto	l20775
 43669   018524                     u27720:
 43670   018524                     l20773:
 43671                           
 43672                           ; BSR set to: 5
 43673                           ;../src/boards/../../drivers/SDCard.c: 283:         result = 1;
 43674   018524  0E00               	movlw	0
 43675   018526  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43676   018528  0E01               	movlw	1
 43677   01852A  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43678                           
 43679                           ;../src/boards/../../drivers/SDCard.c: 284:         goto done;
 43680   01852C  EFE4  F0C2         	goto	l20801
 43681   018530                     l20775:
 43682                           
 43683                           ; BSR set to: 5
 43684                           ;../src/boards/../../drivers/SDCard.c: 286:     if ((response & 0x1f) != 0x05) {
 43685   018530  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43686   018532  0B1F               	andlw	31
 43687   018534  0A05               	xorlw	5
 43688   018536  B4D8               	btfsc	status,2,c
 43689   018538  EFA0  F0C2         	goto	u27731
 43690   01853C  EFA2  F0C2         	goto	u27730
 43691   018540                     u27731:
 43692   018540  EFCD  F0C2         	goto	l20791
 43693   018544                     u27730:
 43694   018544                     
 43695                           ; BSR set to: 5
 43696                           ;../src/boards/../../drivers/SDCard.c: 288:         if ((response & 0x1f) == 0x0b) {
 43697   018544  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43698   018546  0B1F               	andlw	31
 43699   018548  0A0B               	xorlw	11
 43700   01854A  A4D8               	btfss	status,2,c
 43701   01854C  EFAA  F0C2         	goto	u27741
 43702   018550  EFAC  F0C2         	goto	u27740
 43703   018554                     u27741:
 43704   018554  EF19  F0C2         	goto	l20749
 43705   018558                     u27740:
 43706   018558                     
 43707                           ; BSR set to: 5
 43708                           ;../src/boards/../../drivers/SDCard.c: 290:             if (--retry < 1) {
 43709   018558  07F0               	decf	SDCard_write512@retry& (0+255),f,b
 43710   01855A  A0D8               	btfss	status,0,c
 43711   01855C  07F1               	decf	(SDCard_write512@retry+1)& (0+255),f,b
 43712   01855E  BFF1               	btfsc	(SDCard_write512@retry+1)& (0+255),7,b
 43713   018560  EFBC  F0C2         	goto	u27750
 43714   018564  51F1               	movf	(SDCard_write512@retry+1)& (0+255),w,b
 43715   018566  E106               	bnz	u27751
 43716   018568  05F0               	decf	SDCard_write512@retry& (0+255),w,b
 43717   01856A  B0D8               	btfsc	status,0,c
 43718   01856C  EFBA  F0C2         	goto	u27751
 43719   018570  EFBC  F0C2         	goto	u27750
 43720   018574                     u27751:
 43721   018574  EFC2  F0C2         	goto	l20787
 43722   018578                     u27750:
 43723   018578                     
 43724                           ; BSR set to: 5
 43725                           ;../src/boards/../../drivers/SDCard.c: 291:                 result = 4;
 43726   018578  0E00               	movlw	0
 43727   01857A  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43728   01857C  0E04               	movlw	4
 43729   01857E  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43730                           
 43731                           ;../src/boards/../../drivers/SDCard.c: 292:                 goto done;
 43732   018580  EFE4  F0C2         	goto	l20801
 43733   018584                     l20787:
 43734                           
 43735                           ; BSR set to: 5
 43736                           ;../src/boards/../../drivers/SDCard.c: 294:             __SDCard_wait_response(0xff, 300
      +                          00);
 43737   018584  0E75               	movlw	117
 43738   018586  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43739   018588  0E30               	movlw	48
 43740   01858A  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43741   01858C  0EFF               	movlw	255
 43742   01858E  ECDC  F0FD         	call	___SDCard_wait_response
 43743                           
 43744                           ;../src/boards/../../drivers/SDCard.c: 295:             SDCard_end_transaction();
 43745   018592  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 43746                           
 43747                           ;../src/boards/../../drivers/SDCard.c: 296:             goto retry;
 43748   018596  EFF2  F0C1         	goto	l20741
 43749   01859A                     l20791:
 43750                           
 43751                           ; BSR set to: 5
 43752                           ;../src/boards/../../drivers/SDCard.c: 302:     response = __SDCard_wait_response(0x00, 
      +                          30000);
 43753   01859A  0E75               	movlw	117
 43754   01859C  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43755   01859E  0E30               	movlw	48
 43756   0185A0  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43757   0185A2  0E00               	movlw	0
 43758   0185A4  ECDC  F0FD         	call	___SDCard_wait_response
 43759   0185A8  0105               	movlb	5	; () banked
 43760   0185AA  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43761   0185AC                     
 43762                           ; BSR set to: 5
 43763                           ;../src/boards/../../drivers/SDCard.c: 303:     if (response == 0x00) {
 43764   0185AC  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43765   0185AE  A4D8               	btfss	status,2,c
 43766   0185B0  EFDC  F0C2         	goto	u27761
 43767   0185B4  EFDE  F0C2         	goto	u27760
 43768   0185B8                     u27761:
 43769   0185B8  EFE0  F0C2         	goto	l20799
 43770   0185BC                     u27760:
 43771   0185BC  EF92  F0C2         	goto	l20773
 43772   0185C0                     l20799:
 43773                           
 43774                           ; BSR set to: 5
 43775                           ;../src/boards/../../drivers/SDCard.c: 309:     result = 0;
 43776   0185C0  0E00               	movlw	0
 43777   0185C2  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43778   0185C4  0E00               	movlw	0
 43779   0185C6  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43780   0185C8                     l20801:
 43781                           
 43782                           ; BSR set to: 5
 43783                           ;../src/boards/../../drivers/SDCard.c: 312:     SDCard_end_transaction();
 43784   0185C8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 43785   0185CC                     
 43786                           ;../src/boards/../../drivers/SDCard.c: 313:     return result;
 43787   0185CC  C5F2  F5DE         	movff	SDCard_write512@result,?_SDCard_write512
 43788   0185D0  C5F3  F5DF         	movff	SDCard_write512@result+1,?_SDCard_write512+1
 43789   0185D4  0012               	return		;funcret
 43790   0185D6                     __end_of_SDCard_write512:
 43791                           	callstack 0
 43792                           
 43793 ;; *************** function _disk_read *****************
 43794 ;; Defined at:
 43795 ;;		line 111 in file "../drivers/diskio.c"
 43796 ;; Parameters:    Size  Location     Type
 43797 ;;  pdrv            1    wreg     unsigned char 
 43798 ;;  buff            2    0[BANK6 ] PTR unsigned char 
 43799 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 43800 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43801 ;;		 -> tmp_buf(512), 
 43802 ;;  sector          4    2[BANK6 ] unsigned long 
 43803 ;;  count           2    6[BANK6 ] unsigned int 
 43804 ;; Auto vars:     Size  Location     Type
 43805 ;;  pdrv            1  155[BANK5 ] unsigned char 
 43806 ;;  i               2  156[BANK5 ] int 
 43807 ;; Return value:  Size  Location     Type
 43808 ;;                  1    wreg      enum E737
 43809 ;; Registers used:
 43810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43811 ;; Tracked objects:
 43812 ;;		On entry : 0/0
 43813 ;;		On exit  : 0/0
 43814 ;;		Unchanged: 0/0
 43815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43816 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43819 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43820 ;;Total ram usage:       11 bytes
 43821 ;; Hardware stack levels used: 1
 43822 ;; Hardware stack levels required when called: 11
 43823 ;; This function calls:
 43824 ;;		_SDCard_read512
 43825 ;;		_printf
 43826 ;;		_util_addrdump
 43827 ;; This function is called by:
 43828 ;;		_move_window
 43829 ;;		_f_open
 43830 ;;		_f_read
 43831 ;;		_f_write
 43832 ;;		_f_lseek
 43833 ;; This function uses a non-reentrant model
 43834 ;;
 43835                           
 43836                           	psect	text119
 43837   01E7AA                     __ptext119:
 43838                           	callstack 0
 43839   01E7AA                     _disk_read:
 43840                           	callstack 106
 43841   01E7AA                     
 43842                           ;../drivers/diskio.c: 115:     for (int i = 0; i < count; i++) {
 43843   01E7AA  0E00               	movlw	0
 43844   01E7AC  0105               	movlb	5	; () banked
 43845   01E7AE  6FFD               	movwf	(disk_read@i+1)& (0+255),b
 43846   01E7B0  0E00               	movlw	0
 43847   01E7B2  6FFC               	movwf	disk_read@i& (0+255),b
 43848   01E7B4  EF1B  F0F4         	goto	l20959
 43849   01E7B8                     l20941:
 43850                           
 43851                           ; BSR set to: 5
 43852                           ;../drivers/diskio.c: 116:         if (SDCard_read512(start_lba + sector, 0, buff, 512) 
      +                          != 0) {
 43853   01E7B8  0106               	movlb	6	; () banked
 43854   01E7BA  5102               	movf	disk_read@sector& (0+255),w,b
 43855   01E7BC  0107               	movlb	7	; () banked
 43856   01E7BE  25EE               	addwf	_start_lba& (0+255),w,b
 43857   01E7C0  0105               	movlb	5	; () banked
 43858   01E7C2  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 43859   01E7C4  0106               	movlb	6	; () banked
 43860   01E7C6  5103               	movf	(disk_read@sector+1)& (0+255),w,b
 43861   01E7C8  0107               	movlb	7	; () banked
 43862   01E7CA  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 43863   01E7CC  0105               	movlb	5	; () banked
 43864   01E7CE  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 43865   01E7D0  0106               	movlb	6	; () banked
 43866   01E7D2  5104               	movf	(disk_read@sector+2)& (0+255),w,b
 43867   01E7D4  0107               	movlb	7	; () banked
 43868   01E7D6  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 43869   01E7D8  0105               	movlb	5	; () banked
 43870   01E7DA  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 43871   01E7DC  0106               	movlb	6	; () banked
 43872   01E7DE  5105               	movf	(disk_read@sector+3)& (0+255),w,b
 43873   01E7E0  0107               	movlb	7	; () banked
 43874   01E7E2  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 43875   01E7E4  0105               	movlb	5	; () banked
 43876   01E7E6  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 43877   01E7E8  0E00               	movlw	0
 43878   01E7EA  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 43879   01E7EC  0E00               	movlw	0
 43880   01E7EE  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 43881   01E7F0  C600  F5E4         	movff	disk_read@buff,SDCard_read512@buf
 43882   01E7F4  C601  F5E5         	movff	disk_read@buff+1,SDCard_read512@buf+1
 43883   01E7F8  0E02               	movlw	2
 43884   01E7FA  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 43885   01E7FC  0E00               	movlw	0
 43886   01E7FE  6FE6               	movwf	SDCard_read512@count& (0+255),b
 43887   01E800  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 43888   01E804  0105               	movlb	5	; () banked
 43889   01E806  51DE               	movf	?_SDCard_read512& (0+255),w,b
 43890   01E808  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 43891   01E80A  B4D8               	btfsc	status,2,c
 43892   01E80C  EF0A  F0F4         	goto	u27951
 43893   01E810  EF0C  F0F4         	goto	u27950
 43894   01E814                     u27951:
 43895   01E814  EF0F  F0F4         	goto	l20953
 43896   01E818                     u27950:
 43897   01E818                     
 43898                           ; BSR set to: 5
 43899                           ;../drivers/diskio.c: 118:             return RES_ERROR;
 43900   01E818  0E01               	movlw	1
 43901   01E81A  EF2B  F0F4         	goto	l2473
 43902   01E81E                     l20953:
 43903                           
 43904                           ; BSR set to: 5
 43905                           ;../drivers/diskio.c: 123:         sector++;
 43906   01E81E  0E01               	movlw	1
 43907   01E820  0106               	movlb	6	; () banked
 43908   01E822  2702               	addwf	disk_read@sector& (0+255),f,b
 43909   01E824  0E00               	movlw	0
 43910   01E826  2303               	addwfc	(disk_read@sector+1)& (0+255),f,b
 43911   01E828  2304               	addwfc	(disk_read@sector+2)& (0+255),f,b
 43912   01E82A  2305               	addwfc	(disk_read@sector+3)& (0+255),f,b
 43913   01E82C                     
 43914                           ; BSR set to: 6
 43915                           ;../drivers/diskio.c: 124:         buff += 512;
 43916   01E82C  0E02               	movlw	2
 43917   01E82E  2701               	addwf	(disk_read@buff+1)& (0+255),f,b
 43918   01E830                     
 43919                           ; BSR set to: 6
 43920                           ;../drivers/diskio.c: 125:     }
 43921   01E830  0105               	movlb	5	; () banked
 43922   01E832  4BFC               	infsnz	disk_read@i& (0+255),f,b
 43923   01E834  2BFD               	incf	(disk_read@i+1)& (0+255),f,b
 43924   01E836                     l20959:
 43925                           
 43926                           ; BSR set to: 5
 43927   01E836  0106               	movlb	6	; () banked
 43928   01E838  5106               	movf	disk_read@count& (0+255),w,b
 43929   01E83A  0105               	movlb	5	; () banked
 43930   01E83C  5DFC               	subwf	disk_read@i& (0+255),w,b
 43931   01E83E  0106               	movlb	6	; () banked
 43932   01E840  5107               	movf	(disk_read@count+1)& (0+255),w,b
 43933   01E842  0105               	movlb	5	; () banked
 43934   01E844  59FD               	subwfb	(disk_read@i+1)& (0+255),w,b
 43935   01E846  A0D8               	btfss	status,0,c
 43936   01E848  EF28  F0F4         	goto	u27961
 43937   01E84C  EF2A  F0F4         	goto	u27960
 43938   01E850                     u27961:
 43939   01E850  EFDC  F0F3         	goto	l20941
 43940   01E854                     u27960:
 43941   01E854                     
 43942                           ; BSR set to: 5
 43943                           ;../drivers/diskio.c: 127:     return RES_OK;
 43944   01E854  0E00               	movlw	0
 43945   01E856                     l2473:
 43946                           
 43947                           ; BSR set to: 5
 43948   01E856  0012               	return		;funcret
 43949   01E858                     __end_of_disk_read:
 43950                           	callstack 0
 43951                           
 43952 ;; *************** function _SDCard_read512 *****************
 43953 ;; Defined at:
 43954 ;;		line 169 in file "../src/boards/../../drivers/SDCard.c"
 43955 ;; Parameters:    Size  Location     Type
 43956 ;;  addr            4  126[BANK5 ] unsigned long 
 43957 ;;  offs            2  130[BANK5 ] unsigned int 
 43958 ;;  buf             2  132[BANK5 ] PTR void 
 43959 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 43960 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 43961 ;;		 -> NULL(0), tmp_buf(512), 
 43962 ;;  count           2  134[BANK5 ] unsigned int 
 43963 ;; Auto vars:     Size  Location     Type
 43964 ;;  i               2  142[BANK5 ] unsigned int 
 43965 ;;  i               2  140[BANK5 ] int 
 43966 ;;  crc             2  152[BANK5 ] unsigned short 
 43967 ;;  spi             2  150[BANK5 ] PTR struct SPI
 43968 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 43969 ;;  result          2  148[BANK5 ] int 
 43970 ;;  resp_crc        2  146[BANK5 ] unsigned short 
 43971 ;;  retry           2  144[BANK5 ] int 
 43972 ;;  response        1  154[BANK5 ] unsigned char 
 43973 ;; Return value:  Size  Location     Type
 43974 ;;                  2  126[BANK5 ] int 
 43975 ;; Registers used:
 43976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43977 ;; Tracked objects:
 43978 ;;		On entry : 0/0
 43979 ;;		On exit  : 0/0
 43980 ;;		Unchanged: 0/0
 43981 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43982 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43983 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43985 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43986 ;;Total ram usage:       29 bytes
 43987 ;; Hardware stack levels used: 1
 43988 ;; Hardware stack levels required when called: 10
 43989 ;; This function calls:
 43990 ;;		_SDCard_end_transaction
 43991 ;;		_SPI_SD_receive
 43992 ;;		_SPI_SD_receive_byte
 43993 ;;		___SDCard_command_r1
 43994 ;;		___SDCard_crc16
 43995 ;;		___SDCard_wait_response
 43996 ;;		_printf
 43997 ;;		_util_addrdump
 43998 ;; This function is called by:
 43999 ;;		_disk_initialize
 44000 ;;		_disk_read
 44001 ;; This function uses a non-reentrant model
 44002 ;;
 44003                           
 44004                           	psect	text120
 44005   018E56                     __ptext120:
 44006                           	callstack 0
 44007   018E56                     _SDCard_read512:
 44008                           	callstack 106
 44009   018E56                     
 44010                           ;../src/boards/../../drivers/SDCard.c: 169: int SDCard_read512(uint32_t addr, unsigned i
      +                          nt offs, void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 170: {;../
      +                          src/boards/../../drivers/SDCard.c: 171:     struct SPI *spi = ctx_.spi;
 44011   018E56  C7A8  F5F6         	movff	_ctx_,SDCard_read512@spi
 44012   018E5A  C7A9  F5F7         	movff	_ctx_+1,SDCard_read512@spi+1
 44013   018E5E                     
 44014                           ;../src/boards/../../drivers/SDCard.c: 172:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 173:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 174:     uint
      +                          16_t crc, resp_crc;;../src/boards/../../drivers/SDCard.c: 175:     int retry = 5;
 44015   018E5E  0E00               	movlw	0
 44016   018E60  0105               	movlb	5	; () banked
 44017   018E62  6FF1               	movwf	(SDCard_read512@retry+1)& (0+255),b
 44018   018E64  0E05               	movlw	5
 44019   018E66  6FF0               	movwf	SDCard_read512@retry& (0+255),b
 44020   018E68                     l20813:
 44021                           
 44022                           ;../src/boards/../../drivers/SDCard.c: 180:     result = __SDCard_command_r1(17, addr, &
      +                          response);
 44023   018E68  C5DE  F51B         	movff	SDCard_read512@addr,___SDCard_command_r1@argument
 44024   018E6C  C5DF  F51C         	movff	SDCard_read512@addr+1,___SDCard_command_r1@argument+1
 44025   018E70  C5E0  F51D         	movff	SDCard_read512@addr+2,___SDCard_command_r1@argument+2
 44026   018E74  C5E1  F51E         	movff	SDCard_read512@addr+3,___SDCard_command_r1@argument+3
 44027   018E78  0EFA               	movlw	low SDCard_read512@response
 44028   018E7A  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 44029   018E7C  0E05               	movlw	high SDCard_read512@response
 44030   018E7E  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 44031   018E80  0E11               	movlw	17
 44032   018E82  EC23  F0F3         	call	___SDCard_command_r1
 44033   018E86  C51B  F5F4         	movff	?___SDCard_command_r1,SDCard_read512@result
 44034   018E8A  C51C  F5F5         	movff	?___SDCard_command_r1+1,SDCard_read512@result+1
 44035   018E8E                     
 44036                           ;../src/boards/../../drivers/SDCard.c: 181:     if (result != 0) {
 44037   018E8E  0105               	movlb	5	; () banked
 44038   018E90  51F4               	movf	SDCard_read512@result& (0+255),w,b
 44039   018E92  11F5               	iorwf	(SDCard_read512@result+1)& (0+255),w,b
 44040   018E94  B4D8               	btfsc	status,2,c
 44041   018E96  EF4F  F0C7         	goto	u27771
 44042   018E9A  EF51  F0C7         	goto	u27770
 44043   018E9E                     u27771:
 44044   018E9E  EF53  F0C7         	goto	l20819
 44045   018EA2                     u27770:
 44046   018EA2  EF75  F0C8         	goto	l20885
 44047   018EA6                     l20819:
 44048                           
 44049                           ; BSR set to: 5
 44050                           ;../src/boards/../../drivers/SDCard.c: 184:     if (response != 0) {
 44051   018EA6  51FA               	movf	SDCard_read512@response& (0+255),w,b
 44052   018EA8  B4D8               	btfsc	status,2,c
 44053   018EAA  EF59  F0C7         	goto	u27781
 44054   018EAE  EF5B  F0C7         	goto	u27780
 44055   018EB2                     u27781:
 44056   018EB2  EF61  F0C7         	goto	l20823
 44057   018EB6                     u27780:
 44058   018EB6                     l20821:
 44059                           
 44060                           ; BSR set to: 5
 44061                           ;../src/boards/../../drivers/SDCard.c: 185:         result = 3;
 44062   018EB6  0E00               	movlw	0
 44063   018EB8  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44064   018EBA  0E03               	movlw	3
 44065   018EBC  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44066                           
 44067                           ;../src/boards/../../drivers/SDCard.c: 186:         goto done;
 44068   018EBE  EF75  F0C8         	goto	l20885
 44069   018EC2                     l20823:
 44070                           
 44071                           ; BSR set to: 5
 44072                           ;../src/boards/../../drivers/SDCard.c: 189:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 44073   018EC2  0E0B               	movlw	11
 44074   018EC4  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 44075   018EC6  0EB8               	movlw	184
 44076   018EC8  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 44077   018ECA  0EFF               	movlw	255
 44078   018ECC  ECDC  F0FD         	call	___SDCard_wait_response
 44079   018ED0  0105               	movlb	5	; () banked
 44080   018ED2  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44081   018ED4                     
 44082                           ; BSR set to: 5
 44083                           ;../src/boards/../../drivers/SDCard.c: 190:     if (response == 0xff) {
 44084   018ED4  29FA               	incf	SDCard_read512@response& (0+255),w,b
 44085   018ED6  A4D8               	btfss	status,2,c
 44086   018ED8  EF70  F0C7         	goto	u27791
 44087   018EDC  EF72  F0C7         	goto	u27790
 44088   018EE0                     u27791:
 44089   018EE0  EF78  F0C7         	goto	l20829
 44090   018EE4                     u27790:
 44091   018EE4                     
 44092                           ; BSR set to: 5
 44093                           ;../src/boards/../../drivers/SDCard.c: 191:         result = 1;
 44094   018EE4  0E00               	movlw	0
 44095   018EE6  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44096   018EE8  0E01               	movlw	1
 44097   018EEA  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44098                           
 44099                           ;../src/boards/../../drivers/SDCard.c: 192:         goto done;
 44100   018EEC  EF75  F0C8         	goto	l20885
 44101   018EF0                     l20829:
 44102                           
 44103                           ; BSR set to: 5
 44104                           ;../src/boards/../../drivers/SDCard.c: 194:     if (response != 0xfe) {
 44105   018EF0  0EFE               	movlw	254
 44106   018EF2  19FA               	xorwf	SDCard_read512@response& (0+255),w,b
 44107   018EF4  B4D8               	btfsc	status,2,c
 44108   018EF6  EF7F  F0C7         	goto	u27801
 44109   018EFA  EF81  F0C7         	goto	u27800
 44110   018EFE                     u27801:
 44111   018EFE  EF83  F0C7         	goto	l20833
 44112   018F02                     u27800:
 44113   018F02  EF5B  F0C7         	goto	l20821
 44114   018F06                     l20833:
 44115                           
 44116                           ; BSR set to: 5
 44117                           ;../src/boards/../../drivers/SDCard.c: 199:     crc = 0;
 44118   018F06  0E00               	movlw	0
 44119   018F08  6FF9               	movwf	(SDCard_read512@crc+1)& (0+255),b
 44120   018F0A  0E00               	movlw	0
 44121   018F0C  6FF8               	movwf	SDCard_read512@crc& (0+255),b
 44122                           
 44123                           ;../src/boards/../../drivers/SDCard.c: 200:     for (int i = 0; i < offs; i++) {
 44124   018F0E  0E00               	movlw	0
 44125   018F10  6FED               	movwf	(SDCard_read512@i+1)& (0+255),b
 44126   018F12  0E00               	movlw	0
 44127   018F14  6FEC               	movwf	SDCard_read512@i& (0+255),b
 44128   018F16  EFB2  F0C7         	goto	l20843
 44129   018F1A                     l20835:
 44130                           
 44131                           ; BSR set to: 5
 44132                           ;../src/boards/../../drivers/SDCard.c: 201:         response = SPI_SD_receive_byte(spi);
 44133   018F1A  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44134   018F1E  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44135   018F22  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44136   018F26  0105               	movlb	5	; () banked
 44137   018F28  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44138   018F2A                     
 44139                           ; BSR set to: 5
 44140                           ;../src/boards/../../drivers/SDCard.c: 202:         if (ctx_.calc_read_crc)
 44141   018F2A  0107               	movlb	7	; () banked
 44142   018F2C  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44143   018F2E  EF9B  F0C7         	goto	u27811
 44144   018F32  EF9D  F0C7         	goto	u27810
 44145   018F36                     u27811:
 44146   018F36  EFAF  F0C7         	goto	l20841
 44147   018F3A                     u27810:
 44148   018F3A                     
 44149                           ; BSR set to: 7
 44150                           ;../src/boards/../../drivers/SDCard.c: 203:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 44151   018F3A  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44152   018F3E  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44153   018F42  0EFA               	movlw	low SDCard_read512@response
 44154   018F44  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 44155   018F46  0E05               	movlw	high SDCard_read512@response
 44156   018F48  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 44157   018F4A  0E00               	movlw	0
 44158   018F4C  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 44159   018F4E  0E01               	movlw	1
 44160   018F50  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 44161   018F52  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44162   018F56  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44163   018F5A  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44164   018F5E                     l20841:
 44165                           
 44166                           ;../src/boards/../../drivers/SDCard.c: 204:     }
 44167   018F5E  0105               	movlb	5	; () banked
 44168   018F60  4BEC               	infsnz	SDCard_read512@i& (0+255),f,b
 44169   018F62  2BED               	incf	(SDCard_read512@i+1)& (0+255),f,b
 44170   018F64                     l20843:
 44171                           
 44172                           ; BSR set to: 5
 44173   018F64  51E2               	movf	SDCard_read512@offs& (0+255),w,b
 44174   018F66  5DEC               	subwf	SDCard_read512@i& (0+255),w,b
 44175   018F68  51E3               	movf	(SDCard_read512@offs+1)& (0+255),w,b
 44176   018F6A  59ED               	subwfb	(SDCard_read512@i+1)& (0+255),w,b
 44177   018F6C  A0D8               	btfss	status,0,c
 44178   018F6E  EFBB  F0C7         	goto	u27821
 44179   018F72  EFBD  F0C7         	goto	u27820
 44180   018F76                     u27821:
 44181   018F76  EF8D  F0C7         	goto	l20835
 44182   018F7A                     u27820:
 44183   018F7A                     
 44184                           ; BSR set to: 5
 44185                           ;../src/boards/../../drivers/SDCard.c: 205:     SPI_SD_receive(spi, buf, count);
 44186   018F7A  C5F6  F504         	movff	SDCard_read512@spi,SPI_SD_receive@ctx_
 44187   018F7E  C5F7  F505         	movff	SDCard_read512@spi+1,SPI_SD_receive@ctx_+1
 44188   018F82  C5E4  F506         	movff	SDCard_read512@buf,SPI_SD_receive@buf
 44189   018F86  C5E5  F507         	movff	SDCard_read512@buf+1,SPI_SD_receive@buf+1
 44190   018F8A  C5E6  F508         	movff	SDCard_read512@count,SPI_SD_receive@count
 44191   018F8E  C5E7  F509         	movff	SDCard_read512@count+1,SPI_SD_receive@count+1
 44192   018F92  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 44193   018F96                     
 44194                           ;../src/boards/../../drivers/SDCard.c: 206:     if (ctx_.calc_read_crc)
 44195   018F96  0107               	movlb	7	; () banked
 44196   018F98  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44197   018F9A  EFD1  F0C7         	goto	u27831
 44198   018F9E  EFD3  F0C7         	goto	u27830
 44199   018FA2                     u27831:
 44200   018FA2  EFE5  F0C7         	goto	l20851
 44201   018FA6                     u27830:
 44202   018FA6                     
 44203                           ; BSR set to: 7
 44204                           ;../src/boards/../../drivers/SDCard.c: 207:         crc = __SDCard_crc16(crc, buf, count
      +                          );
 44205   018FA6  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44206   018FAA  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44207   018FAE  C5E4  F506         	movff	SDCard_read512@buf,___SDCard_crc16@buf
 44208   018FB2  C5E5  F507         	movff	SDCard_read512@buf+1,___SDCard_crc16@buf+1
 44209   018FB6  C5E6  F508         	movff	SDCard_read512@count,___SDCard_crc16@count
 44210   018FBA  C5E7  F509         	movff	SDCard_read512@count+1,___SDCard_crc16@count+1
 44211   018FBE  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44212   018FC2  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44213   018FC6  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44214   018FCA                     l20851:
 44215                           
 44216                           ;../src/boards/../../drivers/SDCard.c: 208:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 44217   018FCA  0E00               	movlw	0
 44218   018FCC  0105               	movlb	5	; () banked
 44219   018FCE  6FEF               	movwf	(SDCard_read512@i_674+1)& (0+255),b
 44220   018FD0  0E00               	movlw	0
 44221   018FD2  6FEE               	movwf	SDCard_read512@i_674& (0+255),b
 44222   018FD4  EF11  F0C8         	goto	l20861
 44223   018FD8                     l20853:
 44224                           
 44225                           ; BSR set to: 5
 44226                           ;../src/boards/../../drivers/SDCard.c: 209:         response = SPI_SD_receive_byte(spi);
 44227   018FD8  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44228   018FDC  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44229   018FE0  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44230   018FE4  0105               	movlb	5	; () banked
 44231   018FE6  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44232   018FE8                     
 44233                           ; BSR set to: 5
 44234                           ;../src/boards/../../drivers/SDCard.c: 210:         if (ctx_.calc_read_crc)
 44235   018FE8  0107               	movlb	7	; () banked
 44236   018FEA  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44237   018FEC  EFFA  F0C7         	goto	u27841
 44238   018FF0  EFFC  F0C7         	goto	u27840
 44239   018FF4                     u27841:
 44240   018FF4  EF0E  F0C8         	goto	l20859
 44241   018FF8                     u27840:
 44242   018FF8                     
 44243                           ; BSR set to: 7
 44244                           ;../src/boards/../../drivers/SDCard.c: 211:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 44245   018FF8  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44246   018FFC  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44247   019000  0EFA               	movlw	low SDCard_read512@response
 44248   019002  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 44249   019004  0E05               	movlw	high SDCard_read512@response
 44250   019006  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 44251   019008  0E00               	movlw	0
 44252   01900A  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 44253   01900C  0E01               	movlw	1
 44254   01900E  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 44255   019010  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44256   019014  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44257   019018  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44258   01901C                     l20859:
 44259                           
 44260                           ;../src/boards/../../drivers/SDCard.c: 212:     }
 44261   01901C  0105               	movlb	5	; () banked
 44262   01901E  4BEE               	infsnz	SDCard_read512@i_674& (0+255),f,b
 44263   019020  2BEF               	incf	(SDCard_read512@i_674+1)& (0+255),f,b
 44264   019022                     l20861:
 44265                           
 44266                           ; BSR set to: 5
 44267   019022  C5E2  F5E8         	movff	SDCard_read512@offs,??_SDCard_read512
 44268   019026  C5E3  F5E9         	movff	SDCard_read512@offs+1,??_SDCard_read512+1
 44269   01902A  1FE8               	comf	??_SDCard_read512& (0+255),f,b
 44270   01902C  1FE9               	comf	(??_SDCard_read512+1)& (0+255),f,b
 44271   01902E  4BE8               	infsnz	??_SDCard_read512& (0+255),f,b
 44272   019030  2BE9               	incf	(??_SDCard_read512+1)& (0+255),f,b
 44273   019032  51E6               	movf	SDCard_read512@count& (0+255),w,b
 44274   019034  5FE8               	subwf	??_SDCard_read512& (0+255),f,b
 44275   019036  51E7               	movf	(SDCard_read512@count+1)& (0+255),w,b
 44276   019038  5BE9               	subwfb	(??_SDCard_read512+1)& (0+255),f,b
 44277   01903A  0E00               	movlw	0
 44278   01903C  25E8               	addwf	??_SDCard_read512& (0+255),w,b
 44279   01903E  6FEA               	movwf	(??_SDCard_read512+2)& (0+255),b
 44280   019040  0E02               	movlw	2
 44281   019042  21E9               	addwfc	(??_SDCard_read512+1)& (0+255),w,b
 44282   019044  6FEB               	movwf	(??_SDCard_read512+3)& (0+255),b
 44283   019046  51EA               	movf	(??_SDCard_read512+2)& (0+255),w,b
 44284   019048  5DEE               	subwf	SDCard_read512@i_674& (0+255),w,b
 44285   01904A  51EB               	movf	(??_SDCard_read512+3)& (0+255),w,b
 44286   01904C  59EF               	subwfb	(SDCard_read512@i_674+1)& (0+255),w,b
 44287   01904E  A0D8               	btfss	status,0,c
 44288   019050  EF2C  F0C8         	goto	u27851
 44289   019054  EF2E  F0C8         	goto	u27850
 44290   019058                     u27851:
 44291   019058  EFEC  F0C7         	goto	l20853
 44292   01905C                     u27850:
 44293   01905C                     
 44294                           ; BSR set to: 5
 44295                           ;../src/boards/../../drivers/SDCard.c: 217:     resp_crc = (uint16_t)SPI_SD_receive_byte
      +                          (spi) << 8;
 44296   01905C  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44297   019060  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44298   019064  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44299   019068  0105               	movlb	5	; () banked
 44300   01906A  6FF3               	movwf	(SDCard_read512@resp_crc+1)& (0+255),b
 44301   01906C  6BF2               	clrf	SDCard_read512@resp_crc& (0+255),b
 44302   01906E                     
 44303                           ; BSR set to: 5
 44304                           ;../src/boards/../../drivers/SDCard.c: 218:     resp_crc |= SPI_SD_receive_byte(spi);
 44305   01906E  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44306   019072  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44307   019076  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44308   01907A  0105               	movlb	5	; () banked
 44309   01907C  6FE8               	movwf	??_SDCard_read512& (0+255),b
 44310   01907E  51E8               	movf	??_SDCard_read512& (0+255),w,b
 44311   019080  13F2               	iorwf	SDCard_read512@resp_crc& (0+255),f,b
 44312   019082                     
 44313                           ; BSR set to: 5
 44314                           ;../src/boards/../../drivers/SDCard.c: 219:     if (ctx_.calc_read_crc && resp_crc != cr
      +                          c) {
 44315   019082  0107               	movlb	7	; () banked
 44316   019084  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44317   019086  EF47  F0C8         	goto	u27861
 44318   01908A  EF49  F0C8         	goto	u27860
 44319   01908E                     u27861:
 44320   01908E  EF70  F0C8         	goto	l20883
 44321   019092                     u27860:
 44322   019092                     
 44323                           ; BSR set to: 7
 44324   019092  0105               	movlb	5	; () banked
 44325   019094  51F8               	movf	SDCard_read512@crc& (0+255),w,b
 44326   019096  19F2               	xorwf	SDCard_read512@resp_crc& (0+255),w,b
 44327   019098  E109               	bnz	u27870
 44328   01909A  51F9               	movf	(SDCard_read512@crc+1)& (0+255),w,b
 44329   01909C  19F3               	xorwf	(SDCard_read512@resp_crc+1)& (0+255),w,b
 44330   01909E  B4D8               	btfsc	status,2,c
 44331   0190A0  EF54  F0C8         	goto	u27871
 44332   0190A4  EF56  F0C8         	goto	u27870
 44333   0190A8                     u27871:
 44334   0190A8  EF70  F0C8         	goto	l20883
 44335   0190AC                     u27870:
 44336   0190AC                     
 44337                           ; BSR set to: 5
 44338                           ;../src/boards/../../drivers/SDCard.c: 222:         if (--retry < 1) {
 44339   0190AC  07F0               	decf	SDCard_read512@retry& (0+255),f,b
 44340   0190AE  A0D8               	btfss	status,0,c
 44341   0190B0  07F1               	decf	(SDCard_read512@retry+1)& (0+255),f,b
 44342   0190B2  BFF1               	btfsc	(SDCard_read512@retry+1)& (0+255),7,b
 44343   0190B4  EF66  F0C8         	goto	u27880
 44344   0190B8  51F1               	movf	(SDCard_read512@retry+1)& (0+255),w,b
 44345   0190BA  E106               	bnz	u27881
 44346   0190BC  05F0               	decf	SDCard_read512@retry& (0+255),w,b
 44347   0190BE  B0D8               	btfsc	status,0,c
 44348   0190C0  EF64  F0C8         	goto	u27881
 44349   0190C4  EF66  F0C8         	goto	u27880
 44350   0190C8                     u27881:
 44351   0190C8  EF6C  F0C8         	goto	l20881
 44352   0190CC                     u27880:
 44353   0190CC                     
 44354                           ; BSR set to: 5
 44355                           ;../src/boards/../../drivers/SDCard.c: 223:             result = 4;
 44356   0190CC  0E00               	movlw	0
 44357   0190CE  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44358   0190D0  0E04               	movlw	4
 44359   0190D2  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44360                           
 44361                           ;../src/boards/../../drivers/SDCard.c: 224:             goto done;
 44362   0190D4  EF75  F0C8         	goto	l20885
 44363   0190D8                     l20881:
 44364                           
 44365                           ; BSR set to: 5
 44366                           ;../src/boards/../../drivers/SDCard.c: 226:         SDCard_end_transaction();
 44367   0190D8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 44368                           
 44369                           ;../src/boards/../../drivers/SDCard.c: 227:         goto retry;
 44370   0190DC  EF34  F0C7         	goto	l20813
 44371   0190E0                     l20883:
 44372                           
 44373                           ;../src/boards/../../drivers/SDCard.c: 230:     result = 0;
 44374   0190E0  0E00               	movlw	0
 44375   0190E2  0105               	movlb	5	; () banked
 44376   0190E4  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44377   0190E6  0E00               	movlw	0
 44378   0190E8  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44379   0190EA                     l20885:
 44380                           
 44381                           ; BSR set to: 5
 44382                           ;../src/boards/../../drivers/SDCard.c: 233:     SDCard_end_transaction();
 44383   0190EA  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 44384   0190EE                     
 44385                           ;../src/boards/../../drivers/SDCard.c: 234:     return result;
 44386   0190EE  C5F4  F5DE         	movff	SDCard_read512@result,?_SDCard_read512
 44387   0190F2  C5F5  F5DF         	movff	SDCard_read512@result+1,?_SDCard_read512+1
 44388   0190F6  0012               	return		;funcret
 44389   0190F8                     __end_of_SDCard_read512:
 44390                           	callstack 0
 44391                           
 44392 ;; *************** function _util_addrdump *****************
 44393 ;; Defined at:
 44394 ;;		line 57 in file "../drivers/utils.c"
 44395 ;; Parameters:    Size  Location     Type
 44396 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 44397 ;;		 -> STR_189(6), STR_186(6), STR_132(5), STR_43(5), 
 44398 ;;		 -> STR_42(5), STR_29(5), STR_26(5), 
 44399 ;;  addr_offs       4   95[BANK5 ] unsigned long 
 44400 ;;  addr            2   99[BANK5 ] PTR const void 
 44401 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 44402 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 44403 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 44404 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 44405 ;;		 -> tmp_buf(512), 
 44406 ;;  size            2  101[BANK5 ] unsigned int 
 44407 ;; Auto vars:     Size  Location     Type
 44408 ;;  i               2  124[BANK5 ] unsigned int 
 44409 ;;  chars          17  105[BANK5 ] unsigned char [17]
 44410 ;;  buf             2  122[BANK5 ] PTR const unsigned char 
 44411 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 44412 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 44413 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 44414 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 44415 ;;		 -> tmp_buf(512), 
 44416 ;; Return value:  Size  Location     Type
 44417 ;;                  1    wreg      void 
 44418 ;; Registers used:
 44419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44420 ;; Tracked objects:
 44421 ;;		On entry : 0/0
 44422 ;;		On exit  : 0/0
 44423 ;;		Unchanged: 0/0
 44424 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44425 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44426 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44428 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44429 ;;Total ram usage:       33 bytes
 44430 ;; Hardware stack levels used: 1
 44431 ;; Hardware stack levels required when called: 9
 44432 ;; This function calls:
 44433 ;;		_printf
 44434 ;; This function is called by:
 44435 ;;		_SDCard_read512
 44436 ;;		_SDCard_write512
 44437 ;;		_mem_init
 44438 ;;		_mem_dump
 44439 ;;		_disk_read
 44440 ;;		_disk_write
 44441 ;; This function uses a non-reentrant model
 44442 ;;
 44443                           
 44444                           	psect	text121
 44445   01C294                     __ptext121:
 44446                           	callstack 0
 44447   01C294                     _util_addrdump:
 44448                           	callstack 106
 44449   01C294                     
 44450                           ;../drivers/utils.c: 57: void util_addrdump(const char *header, uint32_t addr_offs, cons
      +                          t void *addr, unsigned int size);../drivers/utils.c: 58: {;../drivers/utils.c: 59:     c
      +                          har chars[17];;../drivers/utils.c: 60:     const uint8_t *buf = addr;
 44451   01C294  C5C3  F5DA         	movff	util_addrdump@addr,util_addrdump@buf
 44452   01C298  C5C4  F5DB         	movff	util_addrdump@addr+1,util_addrdump@buf+1
 44453                           
 44454                           ;../drivers/utils.c: 61:     size = ((size + 15) & ~0xfU);
 44455   01C29C  0E0F               	movlw	15
 44456   01C29E  0105               	movlb	5	; () banked
 44457   01C2A0  25C5               	addwf	util_addrdump@size& (0+255),w,b
 44458   01C2A2  6FC7               	movwf	??_util_addrdump& (0+255),b
 44459   01C2A4  0E00               	movlw	0
 44460   01C2A6  21C6               	addwfc	(util_addrdump@size+1)& (0+255),w,b
 44461   01C2A8  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44462   01C2AA  0EF0               	movlw	240
 44463   01C2AC  15C7               	andwf	??_util_addrdump& (0+255),w,b
 44464   01C2AE  6FC5               	movwf	util_addrdump@size& (0+255),b
 44465   01C2B0  0EFF               	movlw	255
 44466   01C2B2  15C8               	andwf	(??_util_addrdump+1)& (0+255),w,b
 44467   01C2B4  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 44468   01C2B6                     
 44469                           ; BSR set to: 5
 44470                           ;../drivers/utils.c: 62:     for (unsigned int i = 0; i < size; i++) {
 44471   01C2B6  0E00               	movlw	0
 44472   01C2B8  6FDD               	movwf	(util_addrdump@i+1)& (0+255),b
 44473   01C2BA  0E00               	movlw	0
 44474   01C2BC  6FDC               	movwf	util_addrdump@i& (0+255),b
 44475   01C2BE  EFF7  F0E1         	goto	l20707
 44476   01C2C2                     l20687:
 44477                           
 44478                           ; BSR set to: 5
 44479                           ;../drivers/utils.c: 63:         if ((i % 16) == 0)
 44480   01C2C2  0E0F               	movlw	15
 44481   01C2C4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44482   01C2C6  6FC7               	movwf	??_util_addrdump& (0+255),b
 44483   01C2C8  0E00               	movlw	0
 44484   01C2CA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44485   01C2CC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44486   01C2CE  51C7               	movf	??_util_addrdump& (0+255),w,b
 44487   01C2D0  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 44488   01C2D2  A4D8               	btfss	status,2,c
 44489   01C2D4  EF6E  F0E1         	goto	u27631
 44490   01C2D8  EF70  F0E1         	goto	u27630
 44491   01C2DC                     u27631:
 44492   01C2DC  EF86  F0E1         	goto	l2520
 44493   01C2E0                     u27630:
 44494   01C2E0                     
 44495                           ; BSR set to: 5
 44496                           ;../drivers/utils.c: 64:             printf("%s%06lx:", header, addr_offs + i);
 44497   01C2E0  0E0C               	movlw	low STR_195
 44498   01C2E2  6FAD               	movwf	printf@fmt& (0+255),b
 44499   01C2E4  0EFF               	movlw	high STR_195
 44500   01C2E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44501   01C2E8  C5BD  F5AF         	movff	util_addrdump@header,?_printf+2
 44502   01C2EC  C5BE  F5B0         	movff	util_addrdump@header+1,?_printf+3
 44503   01C2F0  51DC               	movf	util_addrdump@i& (0+255),w,b
 44504   01C2F2  25BF               	addwf	util_addrdump@addr_offs& (0+255),w,b
 44505   01C2F4  6FB1               	movwf	(?_printf+4)& (0+255),b
 44506   01C2F6  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44507   01C2F8  21C0               	addwfc	(util_addrdump@addr_offs+1)& (0+255),w,b
 44508   01C2FA  6FB2               	movwf	(?_printf+5)& (0+255),b
 44509   01C2FC  0E00               	movlw	0
 44510   01C2FE  21C1               	addwfc	(util_addrdump@addr_offs+2)& (0+255),w,b
 44511   01C300  6FB3               	movwf	(?_printf+6)& (0+255),b
 44512   01C302  0E00               	movlw	0
 44513   01C304  21C2               	addwfc	(util_addrdump@addr_offs+3)& (0+255),w,b
 44514   01C306  6FB4               	movwf	(?_printf+7)& (0+255),b
 44515   01C308  ECDA  F0FF         	call	_printf	;wreg free
 44516   01C30C                     l2520:
 44517                           
 44518                           ;../drivers/utils.c: 65:         printf(" %02x", buf[i]);
 44519   01C30C  0E85               	movlw	low STR_193
 44520   01C30E  0105               	movlb	5	; () banked
 44521   01C310  6FAD               	movwf	printf@fmt& (0+255),b
 44522   01C312  0EFF               	movlw	high STR_193
 44523   01C314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44524   01C316  51DC               	movf	util_addrdump@i& (0+255),w,b
 44525   01C318  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44526   01C31A  6ED9               	movwf	fsr2l,c
 44527   01C31C  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44528   01C31E  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44529   01C320  6EDA               	movwf	fsr2h,c
 44530   01C322  50DF               	movf	indf2,w,c
 44531   01C324  6FC7               	movwf	??_util_addrdump& (0+255),b
 44532   01C326  51C7               	movf	??_util_addrdump& (0+255),w,b
 44533   01C328  6FAF               	movwf	(?_printf+2)& (0+255),b
 44534   01C32A  6BB0               	clrf	(?_printf+3)& (0+255),b
 44535   01C32C  ECDA  F0FF         	call	_printf	;wreg free
 44536   01C330                     
 44537                           ;../drivers/utils.c: 66:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 44538   01C330  0105               	movlb	5	; () banked
 44539   01C332  51DC               	movf	util_addrdump@i& (0+255),w,b
 44540   01C334  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44541   01C336  6ED9               	movwf	fsr2l,c
 44542   01C338  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44543   01C33A  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44544   01C33C  6EDA               	movwf	fsr2h,c
 44545   01C33E  0E1F               	movlw	31
 44546   01C340  64DF               	cpfsgt	indf2,c
 44547   01C342  EFA5  F0E1         	goto	u27641
 44548   01C346  EFA7  F0E1         	goto	u27640
 44549   01C34A                     u27641:
 44550   01C34A  EFCB  F0E1         	goto	l20697
 44551   01C34E                     u27640:
 44552   01C34E                     
 44553                           ; BSR set to: 5
 44554   01C34E  51DC               	movf	util_addrdump@i& (0+255),w,b
 44555   01C350  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44556   01C352  6ED9               	movwf	fsr2l,c
 44557   01C354  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44558   01C356  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44559   01C358  6EDA               	movwf	fsr2h,c
 44560   01C35A  0E7F               	movlw	127
 44561   01C35C  60DF               	cpfslt	indf2,c
 44562   01C35E  EFB3  F0E1         	goto	u27651
 44563   01C362  EFB5  F0E1         	goto	u27650
 44564   01C366                     u27651:
 44565   01C366  EFCB  F0E1         	goto	l20697
 44566   01C36A                     u27650:
 44567   01C36A                     
 44568                           ; BSR set to: 5
 44569                           ;../drivers/utils.c: 67:             chars[i % 16] = buf[i];
 44570   01C36A  51DC               	movf	util_addrdump@i& (0+255),w,b
 44571   01C36C  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44572   01C36E  6ED9               	movwf	fsr2l,c
 44573   01C370  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44574   01C372  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44575   01C374  6EDA               	movwf	fsr2h,c
 44576   01C376  0E0F               	movlw	15
 44577   01C378  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44578   01C37A  6FC7               	movwf	??_util_addrdump& (0+255),b
 44579   01C37C  0E00               	movlw	0
 44580   01C37E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44581   01C380  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44582   01C382  0EC9               	movlw	low util_addrdump@chars
 44583   01C384  25C7               	addwf	??_util_addrdump& (0+255),w,b
 44584   01C386  6EE1               	movwf	fsr1l,c
 44585   01C388  0E05               	movlw	high util_addrdump@chars
 44586   01C38A  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 44587   01C38C  6EE2               	movwf	fsr1h,c
 44588   01C38E  C4DF F4E7          	movff	indf2,indf1
 44589                           
 44590                           ;../drivers/utils.c: 68:         } else {
 44591   01C392  EFD9  F0E1         	goto	l20699
 44592   01C396                     l20697:
 44593                           
 44594                           ; BSR set to: 5
 44595                           ;../drivers/utils.c: 69:             chars[i % 16] = '.';
 44596   01C396  0E0F               	movlw	15
 44597   01C398  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44598   01C39A  6FC7               	movwf	??_util_addrdump& (0+255),b
 44599   01C39C  0E00               	movlw	0
 44600   01C39E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44601   01C3A0  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44602   01C3A2  0EC9               	movlw	low util_addrdump@chars
 44603   01C3A4  25C7               	addwf	??_util_addrdump& (0+255),w,b
 44604   01C3A6  6ED9               	movwf	fsr2l,c
 44605   01C3A8  0E05               	movlw	high util_addrdump@chars
 44606   01C3AA  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 44607   01C3AC  6EDA               	movwf	fsr2h,c
 44608   01C3AE  0E2E               	movlw	46
 44609   01C3B0  6EDF               	movwf	indf2,c
 44610   01C3B2                     l20699:
 44611                           
 44612                           ; BSR set to: 5
 44613                           ;../drivers/utils.c: 71:         if ((i % 16) == 15) {
 44614   01C3B2  0E0F               	movlw	15
 44615   01C3B4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44616   01C3B6  6FC7               	movwf	??_util_addrdump& (0+255),b
 44617   01C3B8  0E00               	movlw	0
 44618   01C3BA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44619   01C3BC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44620   01C3BE  0E0F               	movlw	15
 44621   01C3C0  19C7               	xorwf	??_util_addrdump& (0+255),w,b
 44622   01C3C2  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 44623   01C3C4  A4D8               	btfss	status,2,c
 44624   01C3C6  EFE7  F0E1         	goto	u27661
 44625   01C3CA  EFE9  F0E1         	goto	u27660
 44626   01C3CE                     u27661:
 44627   01C3CE  EFF4  F0E1         	goto	l20705
 44628   01C3D2                     u27660:
 44629   01C3D2                     
 44630                           ; BSR set to: 5
 44631                           ;../drivers/utils.c: 72:             chars[16] = '\0';
 44632   01C3D2  6BD9               	clrf	(util_addrdump@chars+16)& (0+255),b
 44633   01C3D4                     
 44634                           ; BSR set to: 5
 44635                           ;../drivers/utils.c: 73:             printf(" %s\n\r", chars);
 44636   01C3D4  0E58               	movlw	low (STR_73+8)
 44637   01C3D6  6FAD               	movwf	printf@fmt& (0+255),b
 44638   01C3D8  0EFE               	movlw	high (STR_73+8)
 44639   01C3DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44640   01C3DC  0EC9               	movlw	low util_addrdump@chars
 44641   01C3DE  6FAF               	movwf	(?_printf+2)& (0+255),b
 44642   01C3E0  0E05               	movlw	high util_addrdump@chars
 44643   01C3E2  6FB0               	movwf	(?_printf+3)& (0+255),b
 44644   01C3E4  ECDA  F0FF         	call	_printf	;wreg free
 44645   01C3E8                     l20705:
 44646                           
 44647                           ;../drivers/utils.c: 75:     }
 44648   01C3E8  0105               	movlb	5	; () banked
 44649   01C3EA  4BDC               	infsnz	util_addrdump@i& (0+255),f,b
 44650   01C3EC  2BDD               	incf	(util_addrdump@i+1)& (0+255),f,b
 44651   01C3EE                     l20707:
 44652                           
 44653                           ; BSR set to: 5
 44654   01C3EE  51C5               	movf	util_addrdump@size& (0+255),w,b
 44655   01C3F0  5DDC               	subwf	util_addrdump@i& (0+255),w,b
 44656   01C3F2  51C6               	movf	(util_addrdump@size+1)& (0+255),w,b
 44657   01C3F4  59DD               	subwfb	(util_addrdump@i+1)& (0+255),w,b
 44658   01C3F6  A0D8               	btfss	status,0,c
 44659   01C3F8  EF00  F0E2         	goto	u27671
 44660   01C3FC  EF02  F0E2         	goto	u27670
 44661   01C400                     u27671:
 44662   01C400  EF61  F0E1         	goto	l20687
 44663   01C404                     u27670:
 44664   01C404                     
 44665                           ; BSR set to: 5
 44666   01C404  0012               	return		;funcret
 44667   01C406                     __end_of_util_addrdump:
 44668                           	callstack 0
 44669                           
 44670 ;; *************** function _printf *****************
 44671 ;; Defined at:
 44672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 44673 ;; Parameters:    Size  Location     Type
 44674 ;;  fmt             2   77[BANK5 ] PTR const unsigned char 
 44675 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44676 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44677 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44678 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44679 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44680 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44681 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44682 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44683 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44684 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44685 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44686 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44687 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44688 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44689 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44690 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44691 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44692 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44693 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_106(20), 
 44694 ;;		 -> STR_105(20), STR_104(3), STR_103(8), STR_102(8), 
 44695 ;;		 -> STR_101(3), STR_100(12), STR_99(10), STR_98(9), 
 44696 ;;		 -> STR_97(20), STR_96(20), STR_95(15), STR_94(12), 
 44697 ;;		 -> STR_93(10), STR_92(9), STR_91(3), STR_90(19), 
 44698 ;;		 -> STR_89(14), STR_88(23), STR_87(25), STR_86(12), 
 44699 ;;		 -> STR_85(27), STR_83(19), STR_82(39), STR_80(25), 
 44700 ;;		 -> STR_79(24), STR_78(19), STR_77(36), STR_76(40), 
 44701 ;;		 -> STR_75(26), STR_74(5), STR_73(14), STR_72(14), 
 44702 ;;		 -> STR_71(23), STR_70(23), STR_69(22), STR_45(35), 
 44703 ;;		 -> STR_44(23), STR_41(26), STR_40(25), STR_38(31), 
 44704 ;;		 -> STR_37(21), STR_36(32), STR_34(22), STR_33(47), 
 44705 ;;		 -> STR_32(42), STR_31(35), STR_30(50), STR_28(50), 
 44706 ;;		 -> STR_27(55), STR_25(50), STR_24(36), STR_23(34), 
 44707 ;;		 -> STR_22(18), STR_21(41), STR_20(38), STR_19(43), 
 44708 ;;		 -> STR_18(36), STR_17(46), STR_16(35), STR_15(27), 
 44709 ;;		 -> STR_14(25), STR_13(45), STR_12(19), STR_11(25), 
 44710 ;;		 -> STR_10(28), STR_8(45), STR_6(38), STR_5(14), 
 44711 ;;		 -> STR_4(21), STR_3(3), STR_2(26), STR_1(3), 
 44712 ;; Auto vars:     Size  Location     Type
 44713 ;;  ap              2   91[BANK5 ] PTR void [1]
 44714 ;;		 -> ?_printf(2), ?_sprintf(2), 
 44715 ;;  ret             2    0        int 
 44716 ;; Return value:  Size  Location     Type
 44717 ;;                  2   77[BANK5 ] int 
 44718 ;; Registers used:
 44719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44720 ;; Tracked objects:
 44721 ;;		On entry : 0/0
 44722 ;;		On exit  : 0/0
 44723 ;;		Unchanged: 0/0
 44724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44725 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44726 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44728 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44729 ;;Total ram usage:       16 bytes
 44730 ;; Hardware stack levels used: 1
 44731 ;; Hardware stack levels required when called: 8
 44732 ;; This function calls:
 44733 ;;		_vfprintf
 44734 ;; This function is called by:
 44735 ;;		_wait_for_programmer
 44736 ;;		_reset_cpu
 44737 ;;		_setup_sd
 44738 ;;		_SPI_SD_configure
 44739 ;;		_SDCard_init
 44740 ;;		_SDCard_read512
 44741 ;;		_SDCard_write512
 44742 ;;		_seek_disk
 44743 ;;		_write_sector
 44744 ;;		_read_sector
 44745 ;;		_mem_init
 44746 ;;		_main
 44747 ;;		_setup_monitor
 44748 ;;		_load_program
 44749 ;;		_disk_init
 44750 ;;		_load_config
 44751 ;;		_get_line
 44752 ;;		_scan_files
 44753 ;;		_scan_files1
 44754 ;;		_prt_reload
 44755 ;;		_boot_file
 44756 ;;		_print_reg
 44757 ;;		_print_com
 44758 ;;		_mon_prog
 44759 ;;		_see_file
 44760 ;;		_flash_apl
 44761 ;;		_in_file
 44762 ;;		_str_inf
 44763 ;;		_disk_initialize
 44764 ;;		_disk_status
 44765 ;;		_disk_read
 44766 ;;		_disk_write
 44767 ;;		_disk_ioctl
 44768 ;;		_util_hexdump
 44769 ;;		_util_addrdump
 44770 ;;		_util_hexdump_sum
 44771 ;; This function uses a non-reentrant model
 44772 ;;
 44773                           
 44774                           	psect	text122
 44775   01FFB4                     __ptext122:
 44776                           	callstack 0
 44777   01FFB4                     _printf:
 44778                           	callstack 111
 44779   01FFB4  0EAF               	movlw	low (?_printf+2)
 44780   01FFB6  0105               	movlb	5	; () banked
 44781   01FFB8  6FBB               	movwf	printf@ap& (0+255),b
 44782   01FFBA  0E05               	movlw	high (?_printf+2)
 44783   01FFBC  6FBC               	movwf	(printf@ap+1)& (0+255),b
 44784   01FFBE                     
 44785                           ; BSR set to: 5
 44786   01FFBE  0E00               	movlw	0
 44787   01FFC0  6FA5               	movwf	vfprintf@fp& (0+255),b
 44788   01FFC2  0E00               	movlw	0
 44789   01FFC4  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 44790   01FFC6  C5AD  F5A7         	movff	printf@fmt,vfprintf@fmt
 44791   01FFCA  C5AE  F5A8         	movff	printf@fmt+1,vfprintf@fmt+1
 44792   01FFCE  0EBB               	movlw	low printf@ap
 44793   01FFD0  6FA9               	movwf	vfprintf@ap& (0+255),b
 44794   01FFD2  0E05               	movlw	high printf@ap
 44795   01FFD4  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 44796   01FFD6  EC07  F0FC         	call	_vfprintf	;wreg free
 44797   01FFDA  0012               	return		;funcret
 44798   01FFDC                     __end_of_printf:
 44799                           	callstack 0
 44800                           
 44801 ;; *************** function _vfprintf *****************
 44802 ;; Defined at:
 44803 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 44804 ;; Parameters:    Size  Location     Type
 44805 ;;  fp              2   69[BANK5 ] PTR struct _IO_FILE
 44806 ;;		 -> sprintf@f(11), NULL(0), 
 44807 ;;  fmt             2   71[BANK5 ] PTR const unsigned char 
 44808 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44809 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44810 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44811 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44812 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44813 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44814 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44815 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44816 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44817 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44818 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44819 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44820 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44821 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44822 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44823 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44824 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44825 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44826 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 44827 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 44828 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 44829 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 44830 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 44831 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 44832 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 44833 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 44834 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 44835 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 44836 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 44837 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 44838 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 44839 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 44840 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 44841 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 44842 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 44843 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 44844 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 44845 ;;		 -> STR_2(26), STR_1(3), 
 44846 ;;  ap              2   73[BANK5 ] PTR PTR void 
 44847 ;;		 -> printf@ap(2), sprintf@ap(2), 
 44848 ;; Auto vars:     Size  Location     Type
 44849 ;;  cfmt            2   75[BANK5 ] PTR unsigned char 
 44850 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44851 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44852 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44853 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44854 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44855 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44856 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44857 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44858 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44859 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44860 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44861 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44862 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44863 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44864 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44865 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44866 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44867 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44868 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 44869 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 44870 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 44871 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 44872 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 44873 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 44874 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 44875 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 44876 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 44877 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 44878 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 44879 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 44880 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 44881 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 44882 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 44883 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 44884 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 44885 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 44886 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 44887 ;;		 -> STR_2(26), STR_1(3), 
 44888 ;; Return value:  Size  Location     Type
 44889 ;;                  2   69[BANK5 ] int 
 44890 ;; Registers used:
 44891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44892 ;; Tracked objects:
 44893 ;;		On entry : 0/0
 44894 ;;		On exit  : 0/0
 44895 ;;		Unchanged: 0/0
 44896 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44900 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44901 ;;Total ram usage:        8 bytes
 44902 ;; Hardware stack levels used: 1
 44903 ;; Hardware stack levels required when called: 7
 44904 ;; This function calls:
 44905 ;;		_vfpfcnvrt
 44906 ;; This function is called by:
 44907 ;;		_sprintf
 44908 ;;		_printf
 44909 ;; This function uses a non-reentrant model
 44910 ;;
 44911                           
 44912                           	psect	text123
 44913   01F80E                     __ptext123:
 44914                           	callstack 0
 44915   01F80E                     _vfprintf:
 44916                           	callstack 111
 44917   01F80E                     
 44918                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 44919   01F80E  C5A7  F5AB         	movff	vfprintf@fmt,vfprintf@cfmt
 44920   01F812  C5A8  F5AC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 44921                           
 44922                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 44923   01F816  EF1C  F0FC         	goto	l20555
 44924   01F81A                     l20553:
 44925                           
 44926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 44927   01F81A  C5A5  F593         	movff	vfprintf@fp,vfpfcnvrt@fp
 44928   01F81E  C5A6  F594         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 44929   01F822  0EAB               	movlw	low vfprintf@cfmt
 44930   01F824  0105               	movlb	5	; () banked
 44931   01F826  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
 44932   01F828  0E05               	movlw	high vfprintf@cfmt
 44933   01F82A  6F96               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 44934   01F82C  C5A9  F597         	movff	vfprintf@ap,vfpfcnvrt@ap
 44935   01F830  C5AA  F598         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 44936   01F834  EC25  F09A         	call	_vfpfcnvrt	;wreg free
 44937   01F838                     l20555:
 44938                           
 44939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 44940   01F838  C5AB  F4F6         	movff	vfprintf@cfmt,tblptrl
 44941   01F83C  C5AC  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 44942   01F840                     	if	0	;tblptru may be non-zero
 44943   01F840                     	endif
 44944   01F840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 44945   01F840  0E00               	movlw	low (__mediumconst shr (0+16))
 44946   01F842  6EF8               	movwf	tblptru,c
 44947   01F844                     	endif
 44948   01F844  0008               	tblrd		*
 44949   01F846  50F5               	movf	tablat,w,c
 44950   01F848  0900               	iorlw	0
 44951   01F84A  A4D8               	btfss	status,2,c
 44952   01F84C  EF2A  F0FC         	goto	u27511
 44953   01F850  EF2C  F0FC         	goto	u27510
 44954   01F854                     u27511:
 44955   01F854  EF0D  F0FC         	goto	l20553
 44956   01F858                     u27510:
 44957   01F858                     
 44958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 44959   01F858  0E00               	movlw	0
 44960   01F85A  0105               	movlb	5	; () banked
 44961   01F85C  6FA6               	movwf	(?_vfprintf+1)& (0+255),b
 44962   01F85E  0E00               	movlw	0
 44963   01F860  6FA5               	movwf	?_vfprintf& (0+255),b
 44964   01F862                     
 44965                           ; BSR set to: 5
 44966   01F862  0012               	return		;funcret
 44967   01F864                     __end_of_vfprintf:
 44968                           	callstack 0
 44969                           
 44970 ;; *************** function _vfpfcnvrt *****************
 44971 ;; Defined at:
 44972 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 44973 ;; Parameters:    Size  Location     Type
 44974 ;;  fp              2   51[BANK5 ] PTR struct _IO_FILE
 44975 ;;		 -> sprintf@f(11), NULL(0), 
 44976 ;;  fmt             2   53[BANK5 ] PTR PTR unsigned char 
 44977 ;;		 -> vfprintf@cfmt(2), 
 44978 ;;  ap              2   55[BANK5 ] PTR PTR void 
 44979 ;;		 -> printf@ap(2), sprintf@ap(2), 
 44980 ;; Auto vars:     Size  Location     Type
 44981 ;;  convarg         4   62[BANK5 ] struct .
 44982 ;;  cp              2   67[BANK5 ] PTR unsigned char 
 44983 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44984 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44985 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44986 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44987 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44988 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44989 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44990 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44991 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44992 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44993 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44994 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44995 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44996 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44997 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44998 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44999 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 45000 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 45001 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 45002 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 45003 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 45004 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 45005 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 45006 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 45007 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 45008 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 45009 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 45010 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 45011 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 45012 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 45013 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 45014 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 45015 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 45016 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 45017 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 45018 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 45019 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 45020 ;;		 -> STR_2(26), STR_1(3), 
 45021 ;;  c               1   66[BANK5 ] unsigned char 
 45022 ;;  done            1   61[BANK5 ] _Bool 
 45023 ;; Return value:  Size  Location     Type
 45024 ;;                  1    wreg      void 
 45025 ;; Registers used:
 45026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45027 ;; Tracked objects:
 45028 ;;		On entry : 0/0
 45029 ;;		On exit  : 0/0
 45030 ;;		Unchanged: 0/0
 45031 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 45032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45033 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45035 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45036 ;;Total ram usage:       18 bytes
 45037 ;; Hardware stack levels used: 1
 45038 ;; Hardware stack levels required when called: 6
 45039 ;; This function calls:
 45040 ;;		_dtoa
 45041 ;;		_efgtoa
 45042 ;;		_fputc
 45043 ;;		_read_prec_or_width
 45044 ;;		_stoa
 45045 ;;		_xtoa
 45046 ;; This function is called by:
 45047 ;;		_vfprintf
 45048 ;; This function uses a non-reentrant model
 45049 ;;
 45050                           
 45051                           	psect	text124
 45052   01344A                     __ptext124:
 45053                           	callstack 0
 45054   01344A                     _vfpfcnvrt:
 45055                           	callstack 111
 45056   01344A                     
 45057                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 45058   01344A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45059   01344E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45060   013452  C4DE F4F6          	movff	postinc2,tblptrl
 45061   013456  C4DD F4F7          	movff	postdec2,tblptrh
 45062   01345A                     	if	0	;tblptru may be non-zero
 45063   01345A                     	endif
 45064   01345A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45065   01345A  0E00               	movlw	low (__mediumconst shr (0+16))
 45066   01345C  6EF8               	movwf	tblptru,c
 45067   01345E                     	endif
 45068   01345E  0008               	tblrd		*
 45069   013460  50F5               	movf	tablat,w,c
 45070   013462  0A25               	xorlw	37
 45071   013464  A4D8               	btfss	status,2,c
 45072   013466  EF37  F09A         	goto	u27291
 45073   01346A  EF39  F09A         	goto	u27290
 45074   01346E                     u27291:
 45075   01346E  EF65  F09D         	goto	l20489
 45076   013472                     u27290:
 45077   013472                     
 45078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 45079   013472  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45080   013476  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45081   01347A  2ADE               	incf	postinc2,f,c
 45082   01347C  0E00               	movlw	0
 45083   01347E  22DD               	addwfc	postdec2,f,c
 45084   013480                     
 45085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 45086   013480  0E00               	movlw	0
 45087   013482  0107               	movlb	7	; () banked
 45088   013484  6FB2               	movwf	(_width+1)& (0+255),b
 45089   013486  0E00               	movlw	0
 45090   013488  6FB1               	movwf	_width& (0+255),b
 45091   01348A  C7B1  F55C         	movff	_width,_flags
 45092   01348E                     
 45093                           ; BSR set to: 7
 45094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 45095   01348E  685A               	setf	_prec^(0+1280),c
 45096   013490  685B               	setf	(_prec+1)^(0+1280),c
 45097   013492                     
 45098                           ; BSR set to: 7
 45099                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 45100   013492  0105               	movlb	5	; () banked
 45101   013494  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 45102                           
 45103                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 45104   013496  EF6D  F09A         	goto	l20365
 45105   01349A                     l20355:
 45106                           
 45107                           ; BSR set to: 5
 45108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 45109   01349A  825C               	bsf	_flags^(0+1280),1,c
 45110   01349C                     
 45111                           ; BSR set to: 5
 45112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 45113   01349C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45114   0134A0  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45115   0134A4  2ADE               	incf	postinc2,f,c
 45116   0134A6  0E00               	movlw	0
 45117   0134A8  22DD               	addwfc	postdec2,f,c
 45118                           
 45119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 45120   0134AA  EF6D  F09A         	goto	l20365
 45121   0134AE                     l20359:
 45122                           
 45123                           ; BSR set to: 5
 45124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 45125   0134AE  0E01               	movlw	1
 45126   0134B0  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 45127                           
 45128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 45129   0134B2  EF6D  F09A         	goto	l20365
 45130   0134B6                     l20363:
 45131                           
 45132                           ; BSR set to: 5
 45133   0134B6  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45134   0134BA  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45135   0134BE  C4DE F4F6          	movff	postinc2,tblptrl
 45136   0134C2  C4DD F4F7          	movff	postdec2,tblptrh
 45137   0134C6                     	if	0	;tblptru may be non-zero
 45138   0134C6                     	endif
 45139   0134C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45140   0134C6  0E00               	movlw	low (__mediumconst shr (0+16))
 45141   0134C8  6EF8               	movwf	tblptru,c
 45142   0134CA                     	endif
 45143   0134CA  0008               	tblrd		*
 45144   0134CC  50F5               	movf	tablat,w,c
 45145                           
 45146                           ; Switch size 1, requested type "simple"
 45147                           ; Number of cases is 1, Range of values is 48 to 48
 45148                           ; switch strategies available:
 45149                           ; Name         Instructions Cycles
 45150                           ; simple_byte            4     3 (average)
 45151                           ;	Chosen strategy is simple_byte
 45152   0134CE  0A30               	xorlw	48	; case 48
 45153   0134D0  B4D8               	btfsc	status,2,c
 45154   0134D2  EF4D  F09A         	goto	l20355
 45155   0134D6  EF57  F09A         	goto	l20359
 45156   0134DA                     l20365:
 45157                           
 45158                           ; BSR set to: 5
 45159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 45160   0134DA  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 45161   0134DC  B4D8               	btfsc	status,2,c
 45162   0134DE  EF73  F09A         	goto	u27301
 45163   0134E2  EF75  F09A         	goto	u27300
 45164   0134E6                     u27301:
 45165   0134E6  EF5B  F09A         	goto	l20363
 45166   0134EA                     u27300:
 45167   0134EA                     
 45168                           ; BSR set to: 5
 45169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 45170   0134EA  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 45171   0134EE  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 45172   0134F2  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 45173   0134F6  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 45174   0134FA  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 45175   0134FE  C504  F7B1         	movff	?_read_prec_or_width,_width
 45176   013502  C505  F7B2         	movff	?_read_prec_or_width+1,_width+1
 45177   013506                     
 45178                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 45179   013506  0107               	movlb	7	; () banked
 45180   013508  BFB2               	btfsc	(_width+1)& (0+255),7,b
 45181   01350A  EF8B  F09A         	goto	u27310
 45182   01350E  EF89  F09A         	goto	u27311
 45183   013512                     u27311:
 45184   013512  EF90  F09A         	goto	l20373
 45185   013516                     u27310:
 45186   013516                     
 45187                           ; BSR set to: 7
 45188                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 45189   013516  805C               	bsf	_flags^(0+1280),0,c
 45190                           
 45191                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 45192   013518  6DB1               	negf	_width& (0+255),b
 45193   01351A  1FB2               	comf	(_width+1)& (0+255),f,b
 45194   01351C  B0D8               	btfsc	status,0,c
 45195   01351E  2BB2               	incf	(_width+1)& (0+255),f,b
 45196   013520                     l20373:
 45197                           
 45198                           ; BSR set to: 7
 45199                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 45200   013520  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45201   013524  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45202   013528  C4DE F4F6          	movff	postinc2,tblptrl
 45203   01352C  C4DD F4F7          	movff	postdec2,tblptrh
 45204   013530                     	if	0	;tblptru may be non-zero
 45205   013530                     	endif
 45206   013530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45207   013530  0E00               	movlw	low (__mediumconst shr (0+16))
 45208   013532  6EF8               	movwf	tblptru,c
 45209   013534                     	endif
 45210   013534  0008               	tblrd		*
 45211   013536  50F5               	movf	tablat,w,c
 45212   013538  0A2E               	xorlw	46
 45213   01353A  A4D8               	btfss	status,2,c
 45214   01353C  EFA2  F09A         	goto	u27321
 45215   013540  EFA4  F09A         	goto	u27320
 45216   013544                     u27321:
 45217   013544  EFB9  F09A         	goto	l20379
 45218   013548                     u27320:
 45219   013548                     
 45220                           ; BSR set to: 7
 45221                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 45222   013548  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45223   01354C  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45224   013550  2ADE               	incf	postinc2,f,c
 45225   013552  0E00               	movlw	0
 45226   013554  22DD               	addwfc	postdec2,f,c
 45227   013556                     
 45228                           ; BSR set to: 7
 45229                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 45230   013556  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 45231   01355A  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 45232   01355E  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 45233   013562  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 45234   013566  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 45235   01356A  C504  F55A         	movff	?_read_prec_or_width,_prec
 45236   01356E  C505  F55B         	movff	?_read_prec_or_width+1,_prec+1
 45237   013572                     l20379:
 45238                           
 45239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 45240   013572  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45241   013576  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45242   01357A  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 45243   01357E  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 45244   013582                     
 45245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 45246   013582  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45247   013586  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45248   01358A                     	if	0	;tblptru may be non-zero
 45249   01358A                     	endif
 45250   01358A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45251   01358A  0E00               	movlw	low (__mediumconst shr (0+16))
 45252   01358C  6EF8               	movwf	tblptru,c
 45253   01358E                     	endif
 45254   01358E  0008               	tblrd		*
 45255   013590  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 45256                           
 45257                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 45258   013594  EFD7  F09A         	goto	l20389
 45259   013598                     l20383:
 45260                           
 45261                           ; BSR set to: 5
 45262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 45263   013598  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 45264   01359A  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 45265                           
 45266                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1316:     break;
 45267   01359C  EFEF  F09A         	goto	l20391
 45268   0135A0                     l3501:
 45269   0135A0                     l20385:
 45270                           
 45271                           ; BSR set to: 5
 45272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 45273   0135A0  0E69               	movlw	105
 45274   0135A2  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 45275                           
 45276                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
 45277   0135A4  EFEF  F09A         	goto	l20391
 45278   0135A8                     l3503:
 45279                           
 45280                           ; BSR set to: 5
 45281                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 45282   0135A8  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 45283                           
 45284                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
 45285   0135AA  EFEF  F09A         	goto	l20391
 45286   0135AE                     l20389:
 45287   0135AE  0105               	movlb	5	; () banked
 45288   0135B0  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45289                           
 45290                           ; Switch size 1, requested type "simple"
 45291                           ; Number of cases is 5, Range of values is 88 to 120
 45292                           ; switch strategies available:
 45293                           ; Name         Instructions Cycles
 45294                           ; simple_byte           16     9 (average)
 45295                           ;	Chosen strategy is simple_byte
 45296   0135B2  0A58               	xorlw	88	; case 88
 45297   0135B4  B4D8               	btfsc	status,2,c
 45298   0135B6  EFD0  F09A         	goto	l20385
 45299   0135BA  0A3C               	xorlw	60	; case 100
 45300   0135BC  B4D8               	btfsc	status,2,c
 45301   0135BE  EFD0  F09A         	goto	l20385
 45302   0135C2  0A0D               	xorlw	13	; case 105
 45303   0135C4  B4D8               	btfsc	status,2,c
 45304   0135C6  EFD0  F09A         	goto	l3501
 45305   0135CA  0A05               	xorlw	5	; case 108
 45306   0135CC  B4D8               	btfsc	status,2,c
 45307   0135CE  EFCC  F09A         	goto	l20383
 45308   0135D2  0A14               	xorlw	20	; case 120
 45309   0135D4  B4D8               	btfsc	status,2,c
 45310   0135D6  EFD0  F09A         	goto	l20385
 45311   0135DA  EFD4  F09A         	goto	l3503
 45312   0135DE                     l20391:
 45313                           
 45314                           ; BSR set to: 5
 45315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 45316   0135DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45317   0135E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45318   0135E6                     	if	0	;tblptru may be non-zero
 45319   0135E6                     	endif
 45320   0135E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45321   0135E6  0E00               	movlw	low (__mediumconst shr (0+16))
 45322   0135E8  6EF8               	movwf	tblptru,c
 45323   0135EA                     	endif
 45324   0135EA  0008               	tblrd		*
 45325   0135EC  50F5               	movf	tablat,w,c
 45326   0135EE  0A64               	xorlw	100
 45327   0135F0  B4D8               	btfsc	status,2,c
 45328   0135F2  EFFD  F09A         	goto	u27331
 45329   0135F6  EFFF  F09A         	goto	u27330
 45330   0135FA                     u27331:
 45331   0135FA  EF46  F09B         	goto	l20401
 45332   0135FE                     u27330:
 45333   0135FE                     
 45334                           ; BSR set to: 5
 45335   0135FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45336   013602  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45337   013606                     	if	0	;tblptru may be non-zero
 45338   013606                     	endif
 45339   013606                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45340   013606  0E00               	movlw	low (__mediumconst shr (0+16))
 45341   013608  6EF8               	movwf	tblptru,c
 45342   01360A                     	endif
 45343   01360A  0008               	tblrd		*
 45344   01360C  50F5               	movf	tablat,w,c
 45345   01360E  0A69               	xorlw	105
 45346   013610  A4D8               	btfss	status,2,c
 45347   013612  EF0D  F09B         	goto	u27341
 45348   013616  EF0F  F09B         	goto	u27340
 45349   01361A                     u27341:
 45350   01361A  EF6F  F09B         	goto	l20409
 45351   01361E                     u27340:
 45352   01361E  EF46  F09B         	goto	l20401
 45353   013622                     l20395:
 45354                           
 45355                           ; BSR set to: 5
 45356                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 45357   013622  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45358   013626  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45359   01362A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45360   01362E  0E02               	movlw	2
 45361   013630  26DE               	addwf	postinc2,f,c
 45362   013632  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45363   013636  0E00               	movlw	0
 45364   013638  22DD               	addwfc	postdec2,f,c
 45365   01363A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45366   01363E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45367   013642  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45368   013646  C4DD F59F          	movff	postdec2,vfpfcnvrt@convarg+1
 45369   01364A  0E00               	movlw	0
 45370   01364C  BF9F               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 45371   01364E  0EFF               	movlw	-1
 45372   013650  6FA0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 45373   013652  6FA1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 45374                           
 45375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
 45376   013654  EF51  F09B         	goto	l20403
 45377   013658                     l20397:
 45378                           
 45379                           ; BSR set to: 5
 45380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 45381   013658  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45382   01365C  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45383   013660  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45384   013664  0E04               	movlw	4
 45385   013666  26DE               	addwf	postinc2,f,c
 45386   013668  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45387   01366C  0E00               	movlw	0
 45388   01366E  22DD               	addwfc	postdec2,f,c
 45389   013670  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45390   013674  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45391   013678  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45392   01367C  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45393   013680  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45394   013684  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45395                           
 45396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1380:      break;
 45397   013688  EF51  F09B         	goto	l20403
 45398   01368C                     l20401:
 45399                           
 45400                           ; BSR set to: 5
 45401   01368C  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45402                           
 45403                           ; Switch size 1, requested type "simple"
 45404                           ; Number of cases is 2, Range of values is 105 to 108
 45405                           ; switch strategies available:
 45406                           ; Name         Instructions Cycles
 45407                           ; simple_byte            7     4 (average)
 45408                           ;	Chosen strategy is simple_byte
 45409   01368E  0A69               	xorlw	105	; case 105
 45410   013690  B4D8               	btfsc	status,2,c
 45411   013692  EF11  F09B         	goto	l20395
 45412   013696  0A05               	xorlw	5	; case 108
 45413   013698  B4D8               	btfsc	status,2,c
 45414   01369A  EF2C  F09B         	goto	l20397
 45415   01369E  EF51  F09B         	goto	l20403
 45416   0136A2                     l20403:
 45417                           
 45418                           ; BSR set to: 5
 45419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 45420   0136A2  0E01               	movlw	1
 45421   0136A4  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45422   0136A6  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45423   0136A8  0E00               	movlw	0
 45424   0136AA  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45425   0136AC  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45426   0136AE  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45427   0136B2  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45428   0136B6  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45429   0136BA  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45430   0136BE                     
 45431                           ; BSR set to: 5
 45432                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 45433   0136BE  C593  F51E         	movff	vfpfcnvrt@fp,dtoa@fp
 45434   0136C2  C594  F51F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 45435   0136C6  C59E  F520         	movff	vfpfcnvrt@convarg,dtoa@d
 45436   0136CA  C59F  F521         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 45437   0136CE  C5A0  F522         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 45438   0136D2  C5A1  F523         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 45439   0136D6  EC81  F0D3         	call	_dtoa	;wreg free
 45440   0136DA  EF7B  F09D         	goto	l3511
 45441   0136DE                     l20409:
 45442                           
 45443                           ; BSR set to: 5
 45444   0136DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45445   0136E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45446   0136E6                     	if	0	;tblptru may be non-zero
 45447   0136E6                     	endif
 45448   0136E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45449   0136E6  0E00               	movlw	low (__mediumconst shr (0+16))
 45450   0136E8  6EF8               	movwf	tblptru,c
 45451   0136EA                     	endif
 45452   0136EA  0008               	tblrd		*
 45453   0136EC  50F5               	movf	tablat,w,c
 45454   0136EE  0A78               	xorlw	120
 45455   0136F0  B4D8               	btfsc	status,2,c
 45456   0136F2  EF7D  F09B         	goto	u27351
 45457   0136F6  EF7F  F09B         	goto	u27350
 45458   0136FA                     u27351:
 45459   0136FA  EFC7  F09B         	goto	l20419
 45460   0136FE                     u27350:
 45461   0136FE                     
 45462                           ; BSR set to: 5
 45463   0136FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45464   013702  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45465   013706                     	if	0	;tblptru may be non-zero
 45466   013706                     	endif
 45467   013706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45468   013706  0E00               	movlw	low (__mediumconst shr (0+16))
 45469   013708  6EF8               	movwf	tblptru,c
 45470   01370A                     	endif
 45471   01370A  0008               	tblrd		*
 45472   01370C  50F5               	movf	tablat,w,c
 45473   01370E  0A58               	xorlw	88
 45474   013710  A4D8               	btfss	status,2,c
 45475   013712  EF8D  F09B         	goto	u27361
 45476   013716  EF8F  F09B         	goto	u27360
 45477   01371A                     u27361:
 45478   01371A  EF0D  F09C         	goto	l3512
 45479   01371E                     u27360:
 45480   01371E  EFC7  F09B         	goto	l20419
 45481   013722                     l20413:
 45482                           
 45483                           ; BSR set to: 5
 45484                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 45485   013722  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45486   013726  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45487   01372A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45488   01372E  0E02               	movlw	2
 45489   013730  26DE               	addwf	postinc2,f,c
 45490   013732  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45491   013736  0E00               	movlw	0
 45492   013738  22DD               	addwfc	postdec2,f,c
 45493   01373A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45494   01373E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45495   013742  C4DE F59B          	movff	postinc2,??_vfpfcnvrt+2
 45496   013746  C4DD F59C          	movff	postdec2,??_vfpfcnvrt+3
 45497   01374A  C59B  F59E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
 45498   01374E  C59C  F59F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
 45499   013752  6BA0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 45500   013754  6BA1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 45501                           
 45502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
 45503   013756  EFD2  F09B         	goto	l20421
 45504   01375A                     l20415:
 45505                           
 45506                           ; BSR set to: 5
 45507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 45508   01375A  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45509   01375E  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45510   013762  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45511   013766  0E04               	movlw	4
 45512   013768  26DE               	addwf	postinc2,f,c
 45513   01376A  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45514   01376E  0E00               	movlw	0
 45515   013770  22DD               	addwfc	postdec2,f,c
 45516   013772  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45517   013776  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45518   01377A  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45519   01377E  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45520   013782  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45521   013786  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45522                           
 45523                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1471:      break;
 45524   01378A  EFD2  F09B         	goto	l20421
 45525   01378E                     l20419:
 45526                           
 45527                           ; BSR set to: 5
 45528   01378E  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45529                           
 45530                           ; Switch size 1, requested type "simple"
 45531                           ; Number of cases is 2, Range of values is 105 to 108
 45532                           ; switch strategies available:
 45533                           ; Name         Instructions Cycles
 45534                           ; simple_byte            7     4 (average)
 45535                           ;	Chosen strategy is simple_byte
 45536   013790  0A69               	xorlw	105	; case 105
 45537   013792  B4D8               	btfsc	status,2,c
 45538   013794  EF91  F09B         	goto	l20413
 45539   013798  0A05               	xorlw	5	; case 108
 45540   01379A  B4D8               	btfsc	status,2,c
 45541   01379C  EFAD  F09B         	goto	l20415
 45542   0137A0  EFD2  F09B         	goto	l20421
 45543   0137A4                     l20421:
 45544                           
 45545                           ; BSR set to: 5
 45546                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 45547   0137A4  0E01               	movlw	1
 45548   0137A6  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45549   0137A8  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45550   0137AA  0E00               	movlw	0
 45551   0137AC  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45552   0137AE  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45553   0137B0  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45554   0137B4  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45555   0137B8  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45556   0137BC  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45557                           
 45558                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 45559   0137C0  EFFB  F09B         	goto	l20429
 45560   0137C4                     l20423:
 45561                           
 45562                           ; BSR set to: 5
 45563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 45564   0137C4  C593  F51E         	movff	vfpfcnvrt@fp,xtoa@fp
 45565   0137C8  C594  F51F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 45566   0137CC  C59E  F520         	movff	vfpfcnvrt@convarg,xtoa@d
 45567   0137D0  C59F  F521         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 45568   0137D4  C5A0  F522         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 45569   0137D8  C5A1  F523         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 45570   0137DC  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45571   0137E0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45572   0137E4                     	if	0	;tblptru may be non-zero
 45573   0137E4                     	endif
 45574   0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45575   0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 45576   0137E6  6EF8               	movwf	tblptru,c
 45577   0137E8                     	endif
 45578   0137E8  0008               	tblrd		*
 45579   0137EA  C4F5 F524          	movff	tablat,xtoa@x
 45580   0137EE  EC8F  F0DD         	call	_xtoa	;wreg free
 45581   0137F2  EF7B  F09D         	goto	l3511
 45582   0137F6                     l20429:
 45583                           
 45584                           ; BSR set to: 5
 45585   0137F6  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45586   0137FA  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45587   0137FE                     	if	0	;tblptru may be non-zero
 45588   0137FE                     	endif
 45589   0137FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45590   0137FE  0E00               	movlw	low (__mediumconst shr (0+16))
 45591   013800  6EF8               	movwf	tblptru,c
 45592   013802                     	endif
 45593   013802  0008               	tblrd		*
 45594   013804  50F5               	movf	tablat,w,c
 45595                           
 45596                           ; Switch size 1, requested type "simple"
 45597                           ; Number of cases is 2, Range of values is 88 to 120
 45598                           ; switch strategies available:
 45599                           ; Name         Instructions Cycles
 45600                           ; simple_byte            7     4 (average)
 45601                           ;	Chosen strategy is simple_byte
 45602   013806  0A58               	xorlw	88	; case 88
 45603   013808  B4D8               	btfsc	status,2,c
 45604   01380A  EFE2  F09B         	goto	l20423
 45605   01380E  0A20               	xorlw	32	; case 120
 45606   013810  B4D8               	btfsc	status,2,c
 45607   013812  EFE2  F09B         	goto	l20423
 45608   013816  EF0D  F09C         	goto	l3512
 45609   01381A                     l3512:
 45610                           
 45611                           ; BSR set to: 5
 45612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 45613   01381A  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 45614   01381C                     
 45615                           ; BSR set to: 5
 45616                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 45617   01381C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45618   013820  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45619   013824  C4DE F4F6          	movff	postinc2,tblptrl
 45620   013828  C4DD F4F7          	movff	postdec2,tblptrh
 45621   01382C                     	if	0	;tblptru may be non-zero
 45622   01382C                     	endif
 45623   01382C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45624   01382C  0E00               	movlw	low (__mediumconst shr (0+16))
 45625   01382E  6EF8               	movwf	tblptru,c
 45626   013830                     	endif
 45627   013830  0008               	tblrd		*
 45628   013832  50F5               	movf	tablat,w,c
 45629   013834  0A73               	xorlw	115
 45630   013836  A4D8               	btfss	status,2,c
 45631   013838  EF20  F09C         	goto	u27371
 45632   01383C  EF22  F09C         	goto	u27370
 45633   013840                     u27371:
 45634   013840  EF2D  F09C         	goto	l20437
 45635   013844                     u27370:
 45636   013844                     
 45637                           ; BSR set to: 5
 45638                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 45639   013844  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45640   013848  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45641   01384C  2ADE               	incf	postinc2,f,c
 45642   01384E  0E00               	movlw	0
 45643   013850  22DD               	addwfc	postdec2,f,c
 45644   013852                     l20435:
 45645                           
 45646                           ; BSR set to: 5
 45647                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 45648   013852  0E01               	movlw	1
 45649   013854  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 45650                           
 45651                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 45652   013856  EF83  F09C         	goto	l20447
 45653   01385A                     l20437:
 45654                           
 45655                           ; BSR set to: 5
 45656   01385A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45657   01385E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45658   013862  C4DE F4F6          	movff	postinc2,tblptrl
 45659   013866  C4DD F4F7          	movff	postdec2,tblptrh
 45660   01386A                     	if	0	;tblptru may be non-zero
 45661   01386A                     	endif
 45662   01386A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45663   01386A  0E00               	movlw	low (__mediumconst shr (0+16))
 45664   01386C  6EF8               	movwf	tblptru,c
 45665   01386E                     	endif
 45666   01386E  0008               	tblrd		*
 45667   013870  50F5               	movf	tablat,w,c
 45668   013872  0A6C               	xorlw	108
 45669   013874  A4D8               	btfss	status,2,c
 45670   013876  EF3F  F09C         	goto	u27381
 45671   01387A  EF41  F09C         	goto	u27380
 45672   01387E                     u27381:
 45673   01387E  EF83  F09C         	goto	l20447
 45674   013882                     u27380:
 45675   013882                     
 45676                           ; BSR set to: 5
 45677   013882  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45678   013886  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45679   01388A  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 45680   01388E  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 45681   013892  0E01               	movlw	1
 45682   013894  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 45683   013896  0E00               	movlw	0
 45684   013898  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 45685   01389A  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 45686   01389E  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 45687   0138A2                     	if	0	;tblptru may be non-zero
 45688   0138A2                     	endif
 45689   0138A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45690   0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 45691   0138A4  6EF8               	movwf	tblptru,c
 45692   0138A6                     	endif
 45693   0138A6  0008               	tblrd		*
 45694   0138A8  50F5               	movf	tablat,w,c
 45695   0138AA  0A6C               	xorlw	108
 45696   0138AC  A4D8               	btfss	status,2,c
 45697   0138AE  EF5B  F09C         	goto	u27391
 45698   0138B2  EF5D  F09C         	goto	u27390
 45699   0138B6                     u27391:
 45700   0138B6  EF83  F09C         	goto	l20447
 45701   0138BA                     u27390:
 45702   0138BA                     
 45703                           ; BSR set to: 5
 45704   0138BA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45705   0138BE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45706   0138C2  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 45707   0138C6  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 45708   0138CA  0E02               	movlw	2
 45709   0138CC  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 45710   0138CE  0E00               	movlw	0
 45711   0138D0  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 45712   0138D2  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 45713   0138D6  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 45714   0138DA                     	if	0	;tblptru may be non-zero
 45715   0138DA                     	endif
 45716   0138DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45717   0138DA  0E00               	movlw	low (__mediumconst shr (0+16))
 45718   0138DC  6EF8               	movwf	tblptru,c
 45719   0138DE                     	endif
 45720   0138DE  0008               	tblrd		*
 45721   0138E0  50F5               	movf	tablat,w,c
 45722   0138E2  0A73               	xorlw	115
 45723   0138E4  A4D8               	btfss	status,2,c
 45724   0138E6  EF77  F09C         	goto	u27401
 45725   0138EA  EF79  F09C         	goto	u27400
 45726   0138EE                     u27401:
 45727   0138EE  EF83  F09C         	goto	l20447
 45728   0138F2                     u27400:
 45729   0138F2                     
 45730                           ; BSR set to: 5
 45731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 45732   0138F2  0E03               	movlw	3
 45733   0138F4  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45734   0138F8  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45735   0138FC  26DE               	addwf	postinc2,f,c
 45736   0138FE  0E00               	movlw	0
 45737   013900  22DD               	addwfc	postdec2,f,c
 45738   013902  EF29  F09C         	goto	l20435
 45739   013906                     l20447:
 45740                           
 45741                           ; BSR set to: 5
 45742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 45743   013906  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 45744   013908  B4D8               	btfsc	status,2,c
 45745   01390A  EF89  F09C         	goto	u27411
 45746   01390E  EF8B  F09C         	goto	u27410
 45747   013912                     u27411:
 45748   013912  EFA7  F09C         	goto	l20453
 45749   013916                     u27410:
 45750   013916                     
 45751                           ; BSR set to: 5
 45752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 45753   013916  C593  F50E         	movff	vfpfcnvrt@fp,stoa@fp
 45754   01391A  C594  F50F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 45755   01391E  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45756   013922  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45757   013926  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45758   01392A  0E02               	movlw	2
 45759   01392C  26DE               	addwf	postinc2,f,c
 45760   01392E  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45761   013932  0E00               	movlw	0
 45762   013934  22DD               	addwfc	postdec2,f,c
 45763   013936  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45764   01393A  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45765   01393E  C4DE F510          	movff	postinc2,stoa@s
 45766   013942  C4DD F511          	movff	postdec2,stoa@s+1
 45767   013946  ECF7  F0DB         	call	_stoa	;wreg free
 45768   01394A  EF7B  F09D         	goto	l3511
 45769   01394E                     l20453:
 45770                           
 45771                           ; BSR set to: 5
 45772                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 45773   01394E  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45774   013952  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45775   013956  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 45776   01395A  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 45777   01395E                     
 45778                           ; BSR set to: 5
 45779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 45780   01395E  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45781   013962  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45782   013966                     	if	0	;tblptru may be non-zero
 45783   013966                     	endif
 45784   013966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45785   013966  0E00               	movlw	low (__mediumconst shr (0+16))
 45786   013968  6EF8               	movwf	tblptru,c
 45787   01396A                     	endif
 45788   01396A  0008               	tblrd		*
 45789   01396C  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 45790                           
 45791                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 45792   013970  EFC5  F09C         	goto	l20463
 45793   013974                     l20457:
 45794                           
 45795                           ; BSR set to: 5
 45796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 45797   013974  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 45798   013976  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 45799                           
 45800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
 45801   013978  EFD4  F09C         	goto	l20465
 45802   01397C                     l20459:
 45803                           
 45804                           ; BSR set to: 5
 45805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 45806   01397C  0E6C               	movlw	108
 45807   01397E  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 45808                           
 45809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
 45810   013980  EFD4  F09C         	goto	l20465
 45811   013984                     l3532:
 45812                           
 45813                           ; BSR set to: 5
 45814                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 45815   013984  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 45816                           
 45817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
 45818   013986  EFD4  F09C         	goto	l20465
 45819   01398A                     l20463:
 45820                           
 45821                           ; BSR set to: 5
 45822   01398A  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45823                           
 45824                           ; Switch size 1, requested type "simple"
 45825                           ; Number of cases is 3, Range of values is 76 to 108
 45826                           ; switch strategies available:
 45827                           ; Name         Instructions Cycles
 45828                           ; simple_byte           10     6 (average)
 45829                           ;	Chosen strategy is simple_byte
 45830   01398C  0A4C               	xorlw	76	; case 76
 45831   01398E  B4D8               	btfsc	status,2,c
 45832   013990  EFBA  F09C         	goto	l20457
 45833   013994  0A2A               	xorlw	42	; case 102
 45834   013996  B4D8               	btfsc	status,2,c
 45835   013998  EFBE  F09C         	goto	l20459
 45836   01399C  0A0A               	xorlw	10	; case 108
 45837   01399E  B4D8               	btfsc	status,2,c
 45838   0139A0  EFBA  F09C         	goto	l20457
 45839   0139A4  EFC2  F09C         	goto	l3532
 45840   0139A8                     l20465:
 45841                           
 45842                           ; BSR set to: 5
 45843   0139A8  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45844   0139AC  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45845   0139B0                     	if	0	;tblptru may be non-zero
 45846   0139B0                     	endif
 45847   0139B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45848   0139B0  0E00               	movlw	low (__mediumconst shr (0+16))
 45849   0139B2  6EF8               	movwf	tblptru,c
 45850   0139B4                     	endif
 45851   0139B4  0008               	tblrd		*
 45852   0139B6  50F5               	movf	tablat,w,c
 45853   0139B8  0A66               	xorlw	102
 45854   0139BA  A4D8               	btfss	status,2,c
 45855   0139BC  EFE2  F09C         	goto	u27421
 45856   0139C0  EFE4  F09C         	goto	u27420
 45857   0139C4                     u27421:
 45858   0139C4  EF5C  F09D         	goto	l20485
 45859   0139C8                     u27420:
 45860   0139C8  EF1A  F09D         	goto	l20473
 45861   0139CC                     l20467:
 45862                           
 45863                           ; BSR set to: 5
 45864                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 45865   0139CC  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45866   0139D0  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45867   0139D4  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45868   0139D8  0E04               	movlw	4
 45869   0139DA  26DE               	addwf	postinc2,f,c
 45870   0139DC  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45871   0139E0  0E00               	movlw	0
 45872   0139E2  22DD               	addwfc	postdec2,f,c
 45873   0139E4  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45874   0139E8  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45875   0139EC  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45876   0139F0  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45877   0139F4  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45878   0139F8  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45879                           
 45880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
 45881   0139FC  EF25  F09D         	goto	l20475
 45882   013A00                     l20469:
 45883                           
 45884                           ; BSR set to: 5
 45885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 45886   013A00  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45887   013A04  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45888   013A08  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45889   013A0C  0E04               	movlw	4
 45890   013A0E  26DE               	addwf	postinc2,f,c
 45891   013A10  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45892   013A14  0E00               	movlw	0
 45893   013A16  22DD               	addwfc	postdec2,f,c
 45894   013A18  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45895   013A1C  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45896   013A20  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45897   013A24  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45898   013A28  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45899   013A2C  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45900                           
 45901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
 45902   013A30  EF25  F09D         	goto	l20475
 45903   013A34                     l20473:
 45904                           
 45905                           ; BSR set to: 5
 45906   013A34  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45907                           
 45908                           ; Switch size 1, requested type "simple"
 45909                           ; Number of cases is 2, Range of values is 76 to 108
 45910                           ; switch strategies available:
 45911                           ; Name         Instructions Cycles
 45912                           ; simple_byte            7     4 (average)
 45913                           ;	Chosen strategy is simple_byte
 45914   013A36  0A4C               	xorlw	76	; case 76
 45915   013A38  B4D8               	btfsc	status,2,c
 45916   013A3A  EF00  F09D         	goto	l20469
 45917   013A3E  0A20               	xorlw	32	; case 108
 45918   013A40  B4D8               	btfsc	status,2,c
 45919   013A42  EFE6  F09C         	goto	l20467
 45920   013A46  EF25  F09D         	goto	l20475
 45921   013A4A                     l20475:
 45922                           
 45923                           ; BSR set to: 5
 45924                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 45925   013A4A  0E01               	movlw	1
 45926   013A4C  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45927   013A4E  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45928   013A50  0E00               	movlw	0
 45929   013A52  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45930   013A54  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45931   013A56  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45932   013A5A  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45933   013A5E  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45934   013A62  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45935                           
 45936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 45937   013A66  EF4E  F09D         	goto	l20483
 45938   013A6A                     l20477:
 45939                           
 45940                           ; BSR set to: 5
 45941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 45942   013A6A  C593  F560         	movff	vfpfcnvrt@fp,efgtoa@fp
 45943   013A6E  C594  F561         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 45944   013A72  C59E  F562         	movff	vfpfcnvrt@convarg,efgtoa@f
 45945   013A76  C59F  F563         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 45946   013A7A  C5A0  F564         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 45947   013A7E  C5A1  F565         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 45948   013A82  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45949   013A86  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45950   013A8A                     	if	0	;tblptru may be non-zero
 45951   013A8A                     	endif
 45952   013A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45953   013A8A  0E00               	movlw	low (__mediumconst shr (0+16))
 45954   013A8C  6EF8               	movwf	tblptru,c
 45955   013A8E                     	endif
 45956   013A8E  0008               	tblrd		*
 45957   013A90  C4F5 F566          	movff	tablat,efgtoa@c
 45958   013A94  EC6C  F085         	call	_efgtoa	;wreg free
 45959   013A98  EF7B  F09D         	goto	l3511
 45960   013A9C                     l20483:
 45961                           
 45962                           ; BSR set to: 5
 45963   013A9C  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45964   013AA0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45965   013AA4                     	if	0	;tblptru may be non-zero
 45966   013AA4                     	endif
 45967   013AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45968   013AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 45969   013AA6  6EF8               	movwf	tblptru,c
 45970   013AA8                     	endif
 45971   013AA8  0008               	tblrd		*
 45972   013AAA  50F5               	movf	tablat,w,c
 45973                           
 45974                           ; Switch size 1, requested type "simple"
 45975                           ; Number of cases is 1, Range of values is 102 to 102
 45976                           ; switch strategies available:
 45977                           ; Name         Instructions Cycles
 45978                           ; simple_byte            4     3 (average)
 45979                           ;	Chosen strategy is simple_byte
 45980   013AAC  0A66               	xorlw	102	; case 102
 45981   013AAE  B4D8               	btfsc	status,2,c
 45982   013AB0  EF35  F09D         	goto	l20477
 45983   013AB4  EF5C  F09D         	goto	l20485
 45984   013AB8                     l20485:
 45985                           
 45986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 45987   013AB8  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45988   013ABC  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45989   013AC0  2ADE               	incf	postinc2,f,c
 45990   013AC2  0E00               	movlw	0
 45991   013AC4  22DD               	addwfc	postdec2,f,c
 45992   013AC6  EF7B  F09D         	goto	l3511
 45993   013ACA                     l20489:
 45994                           
 45995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 45996   013ACA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45997   013ACE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45998   013AD2  C4DE F4F6          	movff	postinc2,tblptrl
 45999   013AD6  C4DD F4F7          	movff	postdec2,tblptrh
 46000   013ADA                     	if	0	;tblptru may be non-zero
 46001   013ADA                     	endif
 46002   013ADA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46003   013ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 46004   013ADC  6EF8               	movwf	tblptru,c
 46005   013ADE                     	endif
 46006   013ADE  0008               	tblrd		*
 46007   013AE0  50F5               	movf	tablat,w,c
 46008   013AE2  6E05               	movwf	fputc@c^(0+1280),c
 46009   013AE4  6A06               	clrf	(fputc@c+1)^(0+1280),c
 46010   013AE6  C593  F507         	movff	vfpfcnvrt@fp,fputc@fp
 46011   013AEA  C594  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 46012   013AEE  EC45  F0F1         	call	_fputc	;wreg free
 46013   013AF2  EF5C  F09D         	goto	l20485
 46014   013AF6                     l3511:
 46015   013AF6  0012               	return		;funcret
 46016   013AF8                     __end_of_vfpfcnvrt:
 46017                           	callstack 0
 46018                           
 46019 ;; *************** function _xtoa *****************
 46020 ;; Defined at:
 46021 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46022 ;; Parameters:    Size  Location     Type
 46023 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 46024 ;;		 -> sprintf@f(11), NULL(0), 
 46025 ;;  d               4   31[COMRAM] unsigned long 
 46026 ;;  x               1   35[COMRAM] unsigned char 
 46027 ;; Auto vars:     Size  Location     Type
 46028 ;;  i               2   48[COMRAM] int 
 46029 ;;  w               2   45[COMRAM] int 
 46030 ;;  p               2   43[COMRAM] int 
 46031 ;;  c               1   47[COMRAM] unsigned char 
 46032 ;;  a               1   40[COMRAM] unsigned char 
 46033 ;; Return value:  Size  Location     Type
 46034 ;;                  1    wreg      void 
 46035 ;; Registers used:
 46036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 46037 ;; Tracked objects:
 46038 ;;		On entry : 0/0
 46039 ;;		On exit  : 0/0
 46040 ;;		Unchanged: 0/0
 46041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46042 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46043 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46045 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46046 ;;Total ram usage:       21 bytes
 46047 ;; Hardware stack levels used: 1
 46048 ;; Hardware stack levels required when called: 5
 46049 ;; This function calls:
 46050 ;;		_pad
 46051 ;; This function is called by:
 46052 ;;		_vfpfcnvrt
 46053 ;; This function uses a non-reentrant model
 46054 ;;
 46055                           
 46056                           	psect	text125
 46057   01BB1E                     __ptext125:
 46058                           	callstack 0
 46059   01BB1E                     _xtoa:
 46060                           	callstack 111
 46061   01BB1E                     
 46062                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.50\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 46063   01BB1E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46064   01BB20  EF94  F0DD         	goto	u26941
 46065   01BB24  EF96  F0DD         	goto	u26940
 46066   01BB28                     u26941:
 46067   01BB28  EF97  F0DD         	goto	l20163
 46068   01BB2C                     u26940:
 46069   01BB2C                     
 46070                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 46071   01BB2C  925C               	bcf	_flags^(0+1280),1,c
 46072   01BB2E                     l20163:
 46073                           
 46074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 46075   01BB2E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46076   01BB30  EF9E  F0DD         	goto	u26950
 46077   01BB34  EF9C  F0DD         	goto	u26951
 46078   01BB38                     u26951:
 46079   01BB38  EFA4  F0DD         	goto	l3459
 46080   01BB3C                     u26950:
 46081   01BB3C  0E00               	movlw	0
 46082   01BB3E  6E2D               	movwf	(xtoa@p+1)^(0+1280),c
 46083   01BB40  0E01               	movlw	1
 46084   01BB42  6E2C               	movwf	xtoa@p^(0+1280),c
 46085   01BB44  EFA8  F0DD         	goto	l3461
 46086   01BB48                     l3459:
 46087   01BB48  C55A  F52C         	movff	_prec,xtoa@p
 46088   01BB4C  C55B  F52D         	movff	_prec+1,xtoa@p+1
 46089   01BB50                     l3461:
 46090                           
 46091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 46092   01BB50  C7B1  F52E         	movff	_width,xtoa@w
 46093   01BB54  C7B2  F52F         	movff	_width+1,xtoa@w+1
 46094   01BB58                     
 46095                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 46096   01BB58  0E78               	movlw	120
 46097   01BB5A  1824               	xorwf	xtoa@x^(0+1280),w,c
 46098   01BB5C  B4D8               	btfsc	status,2,c
 46099   01BB5E  EFB3  F0DD         	goto	u26961
 46100   01BB62  EFB5  F0DD         	goto	u26960
 46101   01BB66                     u26961:
 46102   01BB66  EFBB  F0DD         	goto	l20171
 46103   01BB6A                     u26960:
 46104   01BB6A  0E00               	movlw	0
 46105   01BB6C  6E2B               	movwf	(_xtoa$4774+1)^(0+1280),c
 46106   01BB6E  0E41               	movlw	65
 46107   01BB70  6E2A               	movwf	_xtoa$4774^(0+1280),c
 46108   01BB72  EFBF  F0DD         	goto	l20173
 46109   01BB76                     l20171:
 46110   01BB76  0E00               	movlw	0
 46111   01BB78  6E2B               	movwf	(_xtoa$4774+1)^(0+1280),c
 46112   01BB7A  0E61               	movlw	97
 46113   01BB7C  6E2A               	movwf	_xtoa$4774^(0+1280),c
 46114   01BB7E                     l20173:
 46115   01BB7E  C52A  F529         	movff	_xtoa$4774,xtoa@a
 46116                           
 46117                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 46118   01BB82  0E00               	movlw	0
 46119   01BB84  6E32               	movwf	(xtoa@i+1)^(0+1280),c
 46120   01BB86  0E4F               	movlw	79
 46121   01BB88  6E31               	movwf	xtoa@i^(0+1280),c
 46122   01BB8A                     
 46123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 46124   01BB8A  0108               	movlb	8	; () banked
 46125   01BB8C  6B77               	clrf	(_dbuf+79)& (0+255),b
 46126                           
 46127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 46128   01BB8E  EF07  F0DE         	goto	l20195
 46129   01BB92                     l20177:
 46130                           
 46131                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 46132   01BB92  0631               	decf	xtoa@i^(0+1280),f,c
 46133   01BB94  A0D8               	btfss	status,0,c
 46134   01BB96  0632               	decf	(xtoa@i+1)^(0+1280),f,c
 46135   01BB98                     
 46136                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 46137   01BB98  5020               	movf	xtoa@d^(0+1280),w,c
 46138   01BB9A  0B0F               	andlw	15
 46139   01BB9C  6E30               	movwf	xtoa@c^(0+1280),c
 46140   01BB9E                     
 46141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 46142   01BB9E  0E0A               	movlw	10
 46143   01BBA0  6030               	cpfslt	xtoa@c^(0+1280),c
 46144   01BBA2  EFD5  F0DD         	goto	u26971
 46145   01BBA6  EFD7  F0DD         	goto	u26970
 46146   01BBAA                     u26971:
 46147   01BBAA  EFDB  F0DD         	goto	l20185
 46148   01BBAE                     u26970:
 46149   01BBAE                     
 46150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 46151   01BBAE  0E30               	movlw	48
 46152   01BBB0  2630               	addwf	xtoa@c^(0+1280),f,c
 46153                           
 46154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 46155   01BBB2  EFDE  F0DD         	goto	l20187
 46156   01BBB6                     l20185:
 46157                           
 46158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 46159   01BBB6  5029               	movf	xtoa@a^(0+1280),w,c
 46160   01BBB8  0FF6               	addlw	246
 46161   01BBBA  2630               	addwf	xtoa@c^(0+1280),f,c
 46162   01BBBC                     l20187:
 46163                           
 46164                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 46165   01BBBC  0E28               	movlw	low _dbuf
 46166   01BBBE  2431               	addwf	xtoa@i^(0+1280),w,c
 46167   01BBC0  6ED9               	movwf	fsr2l,c
 46168   01BBC2  0E08               	movlw	high _dbuf
 46169   01BBC4  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 46170   01BBC6  6EDA               	movwf	fsr2h,c
 46171   01BBC8  C530  F4DF         	movff	xtoa@c,indf2
 46172   01BBCC                     
 46173                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 46174   01BBCC  062C               	decf	xtoa@p^(0+1280),f,c
 46175   01BBCE  A0D8               	btfss	status,0,c
 46176   01BBD0  062D               	decf	(xtoa@p+1)^(0+1280),f,c
 46177   01BBD2                     
 46178                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 46179   01BBD2  062E               	decf	xtoa@w^(0+1280),f,c
 46180   01BBD4  A0D8               	btfss	status,0,c
 46181   01BBD6  062F               	decf	(xtoa@w+1)^(0+1280),f,c
 46182   01BBD8                     
 46183                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 46184   01BBD8  C520  F525         	movff	xtoa@d,??_xtoa
 46185   01BBDC  C521  F526         	movff	xtoa@d+1,??_xtoa+1
 46186   01BBE0  C522  F527         	movff	xtoa@d+2,??_xtoa+2
 46187   01BBE4  C523  F528         	movff	xtoa@d+3,??_xtoa+3
 46188   01BBE8  0E05               	movlw	5
 46189   01BBEA  EFFC  F0DD         	goto	u26980
 46190   01BBEE                     u26985:
 46191   01BBEE  90D8               	bcf	status,0,c
 46192   01BBF0  3228               	rrcf	(??_xtoa+3)^(0+1280),f,c
 46193   01BBF2  3227               	rrcf	(??_xtoa+2)^(0+1280),f,c
 46194   01BBF4  3226               	rrcf	(??_xtoa+1)^(0+1280),f,c
 46195   01BBF6  3225               	rrcf	??_xtoa^(0+1280),f,c
 46196   01BBF8                     u26980:
 46197   01BBF8  2EE8               	decfsz	wreg,f,c
 46198   01BBFA  EFF7  F0DD         	goto	u26985
 46199   01BBFE  C525  F520         	movff	??_xtoa,xtoa@d
 46200   01BC02  C526  F521         	movff	??_xtoa+1,xtoa@d+1
 46201   01BC06  C527  F522         	movff	??_xtoa+2,xtoa@d+2
 46202   01BC0A  C528  F523         	movff	??_xtoa+3,xtoa@d+3
 46203   01BC0E                     l20195:
 46204                           
 46205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 46206   01BC0E  BE32               	btfsc	(xtoa@i+1)^(0+1280),7,c
 46207   01BC10  EF13  F0DE         	goto	u26991
 46208   01BC14  5032               	movf	(xtoa@i+1)^(0+1280),w,c
 46209   01BC16  E109               	bnz	u26990
 46210   01BC18  0E02               	movlw	2
 46211   01BC1A  5C31               	subwf	xtoa@i^(0+1280),w,c
 46212   01BC1C  A0D8               	btfss	status,0,c
 46213   01BC1E  EF13  F0DE         	goto	u26991
 46214   01BC22  EF15  F0DE         	goto	u26990
 46215   01BC26                     u26991:
 46216   01BC26  EF41  F0DE         	goto	l20205
 46217   01BC2A                     u26990:
 46218   01BC2A  5020               	movf	xtoa@d^(0+1280),w,c
 46219   01BC2C  1021               	iorwf	(xtoa@d+1)^(0+1280),w,c
 46220   01BC2E  1022               	iorwf	(xtoa@d+2)^(0+1280),w,c
 46221   01BC30  1023               	iorwf	(xtoa@d+3)^(0+1280),w,c
 46222   01BC32  A4D8               	btfss	status,2,c
 46223   01BC34  EF1E  F0DE         	goto	u27001
 46224   01BC38  EF20  F0DE         	goto	u27000
 46225   01BC3C                     u27001:
 46226   01BC3C  EFC9  F0DD         	goto	l20177
 46227   01BC40                     u27000:
 46228   01BC40  BE2D               	btfsc	(xtoa@p+1)^(0+1280),7,c
 46229   01BC42  EF2D  F0DE         	goto	u27010
 46230   01BC46  502D               	movf	(xtoa@p+1)^(0+1280),w,c
 46231   01BC48  E106               	bnz	u27011
 46232   01BC4A  042C               	decf	xtoa@p^(0+1280),w,c
 46233   01BC4C  B0D8               	btfsc	status,0,c
 46234   01BC4E  EF2B  F0DE         	goto	u27011
 46235   01BC52  EF2D  F0DE         	goto	u27010
 46236   01BC56                     u27011:
 46237   01BC56  EFC9  F0DD         	goto	l20177
 46238   01BC5A                     u27010:
 46239   01BC5A  BE2F               	btfsc	(xtoa@w+1)^(0+1280),7,c
 46240   01BC5C  EF38  F0DE         	goto	u27021
 46241   01BC60  502F               	movf	(xtoa@w+1)^(0+1280),w,c
 46242   01BC62  E108               	bnz	u27020
 46243   01BC64  042E               	decf	xtoa@w^(0+1280),w,c
 46244   01BC66  A0D8               	btfss	status,0,c
 46245   01BC68  EF38  F0DE         	goto	u27021
 46246   01BC6C  EF3A  F0DE         	goto	u27020
 46247   01BC70                     u27021:
 46248   01BC70  EF41  F0DE         	goto	l20205
 46249   01BC74                     u27020:
 46250   01BC74  B25C               	btfsc	_flags^(0+1280),1,c
 46251   01BC76  EF3F  F0DE         	goto	u27031
 46252   01BC7A  EF41  F0DE         	goto	u27030
 46253   01BC7E                     u27031:
 46254   01BC7E  EFC9  F0DD         	goto	l20177
 46255   01BC82                     u27030:
 46256   01BC82                     l20205:
 46257                           
 46258                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 46259   01BC82  C51E  F515         	movff	xtoa@fp,pad@fp
 46260   01BC86  C51F  F516         	movff	xtoa@fp+1,pad@fp+1
 46261   01BC8A  0E28               	movlw	low _dbuf
 46262   01BC8C  2431               	addwf	xtoa@i^(0+1280),w,c
 46263   01BC8E  6E17               	movwf	pad@buf^(0+1280),c
 46264   01BC90  0E08               	movlw	high _dbuf
 46265   01BC92  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 46266   01BC94  6E18               	movwf	(pad@buf+1)^(0+1280),c
 46267   01BC96  C52E  F519         	movff	xtoa@w,pad@p
 46268   01BC9A  C52F  F51A         	movff	xtoa@w+1,pad@p+1
 46269   01BC9E  EC1F  F0F6         	call	_pad	;wreg free
 46270   01BCA2  0012               	return		;funcret
 46271   01BCA4                     __end_of_xtoa:
 46272                           	callstack 0
 46273                           
 46274 ;; *************** function _stoa *****************
 46275 ;; Defined at:
 46276 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46277 ;; Parameters:    Size  Location     Type
 46278 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 46279 ;;		 -> sprintf@f(11), NULL(0), 
 46280 ;;  s               2   15[COMRAM] PTR unsigned char 
 46281 ;;		 -> rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), in_fl$sect(4), 
 46282 ;;		 -> rom_fl$dir_sect(4), in_fl$dir_sect(4), dir$sect(4), sdj$sect(4), 
 46283 ;;		 -> djo$sect(4), djn$sect(4), tmp_buf$REGDP(2), tmp_buf$REGDB(1), 
 46284 ;;		 -> tmp_buf$REGPB(1), tmp_buf$REGPSR(1), tmp_buf$REGPC(2), tmp_buf$REGSP(2), 
 46285 ;;		 -> tmp_buf$REGY(2), tmp_buf$REGX(2), tmp_buf$REGA(2), tmp_buf$picif_p(4), 
 46286 ;;		 -> tmp_buf$op2(1), tmp_buf$op1(1), tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), 
 46287 ;;		 -> tmp_buf$cstart_addr(2), tmp_buf$load_p(4), tmp_buf$mezID(8), fs$win(512), 
 46288 ;;		 -> fs$winsect(4), fs$fatbase(4), fs$volbase(4), fs$csize(2), 
 46289 ;;		 -> fs$pdrv(1), pb$idx(2), ?_printf(2), ?_sprintf(2), 
 46290 ;;		 -> STR_199(1), util_addrdump@chars(17), util_hexdump@chars(17), STR_189(6), 
 46291 ;;		 -> STR_186(6), STR_178(1), disk_initialize@buf(128), f_printf@pb(70), 
 46292 ;;		 -> f_puts@pb(70), f_putc@pb(70), pb$fp(2), dj$sect(4), 
 46293 ;;		 -> STR_167(15), in_fl$obj$fs$objsize(4), in_fl(546), STR_132(5), 
 46294 ;;		 -> fin_name(13), fno$fname(13), scan_files@fno(22), rom_fl$obj$fs$objsize(4), 
 46295 ;;		 -> rom_fl(546), line_buf(81), binv(42), STR_53(8), 
 46296 ;;		 -> STR_52(8), STR_51(11), STR_50(11), STR_49(11), 
 46297 ;;		 -> STR_48(11), STR_47(43), STR_43(5), STR_42(5), 
 46298 ;;		 -> STR_39(6), STR_35(6), STR_29(5), STR_26(5), 
 46299 ;;		 -> NULL(0), STR_9(17), STR_7(17), clk_fs(4), 
 46300 ;;		 -> tmp_buf(512), 
 46301 ;; Auto vars:     Size  Location     Type
 46302 ;;  l               2   25[COMRAM] int 
 46303 ;;  cp              2   23[COMRAM] PTR unsigned char 
 46304 ;;		 -> rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), in_fl$sect(4), 
 46305 ;;		 -> rom_fl$dir_sect(4), in_fl$dir_sect(4), dir$sect(4), sdj$sect(4), 
 46306 ;;		 -> djo$sect(4), djn$sect(4), tmp_buf$REGDP(2), tmp_buf$REGDB(1), 
 46307 ;;		 -> tmp_buf$REGPB(1), tmp_buf$REGPSR(1), tmp_buf$REGPC(2), tmp_buf$REGSP(2), 
 46308 ;;		 -> tmp_buf$REGY(2), tmp_buf$REGX(2), tmp_buf$REGA(2), tmp_buf$picif_p(4), 
 46309 ;;		 -> tmp_buf$op2(1), tmp_buf$op1(1), tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), 
 46310 ;;		 -> tmp_buf$cstart_addr(2), tmp_buf$load_p(4), tmp_buf$mezID(8), fs$win(512), 
 46311 ;;		 -> fs$winsect(4), fs$fatbase(4), fs$volbase(4), fs$csize(2), 
 46312 ;;		 -> fs$pdrv(1), pb$idx(2), ?_printf(2), STR_206(7), 
 46313 ;;		 -> ?_sprintf(2), STR_199(1), util_addrdump@chars(17), util_hexdump@chars(17), 
 46314 ;;		 -> STR_189(6), STR_186(6), STR_178(1), disk_initialize@buf(128), 
 46315 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), pb$fp(2), 
 46316 ;;		 -> dj$sect(4), STR_167(15), in_fl$obj$fs$objsize(4), in_fl(546), 
 46317 ;;		 -> STR_132(5), fin_name(13), fno$fname(13), scan_files@fno(22), 
 46318 ;;		 -> rom_fl$obj$fs$objsize(4), rom_fl(546), line_buf(81), binv(42), 
 46319 ;;		 -> STR_53(8), STR_52(8), STR_51(11), STR_50(11), 
 46320 ;;		 -> STR_49(11), STR_48(11), STR_47(43), STR_43(5), 
 46321 ;;		 -> STR_42(5), STR_39(6), STR_35(6), STR_29(5), 
 46322 ;;		 -> STR_26(5), NULL(0), STR_9(17), STR_7(17), 
 46323 ;;		 -> clk_fs(4), tmp_buf(512), 
 46324 ;;  w               2   21[COMRAM] int 
 46325 ;;  p               2   19[COMRAM] int 
 46326 ;; Return value:  Size  Location     Type
 46327 ;;                  1    wreg      void 
 46328 ;; Registers used:
 46329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46330 ;; Tracked objects:
 46331 ;;		On entry : 0/0
 46332 ;;		On exit  : 0/0
 46333 ;;		Unchanged: 0/0
 46334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46336 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46338 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46339 ;;Total ram usage:       14 bytes
 46340 ;; Hardware stack levels used: 1
 46341 ;; Hardware stack levels required when called: 3
 46342 ;; This function calls:
 46343 ;;		_fputc
 46344 ;; This function is called by:
 46345 ;;		_vfpfcnvrt
 46346 ;; This function uses a non-reentrant model
 46347 ;;
 46348                           
 46349                           	psect	text126
 46350   01B7EE                     __ptext126:
 46351                           	callstack 0
 46352   01B7EE                     _stoa:
 46353                           	callstack 113
 46354   01B7EE                     
 46355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 46356   01B7EE  C510  F518         	movff	stoa@s,stoa@cp
 46357   01B7F2  C511  F519         	movff	stoa@s+1,stoa@cp+1
 46358                           
 46359                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 46360   01B7F6  5018               	movf	stoa@cp^(0+1280),w,c
 46361   01B7F8  1019               	iorwf	(stoa@cp+1)^(0+1280),w,c
 46362   01B7FA  A4D8               	btfss	status,2,c
 46363   01B7FC  EF02  F0DC         	goto	u26831
 46364   01B800  EF04  F0DC         	goto	u26830
 46365   01B804                     u26831:
 46366   01B804  EF08  F0DC         	goto	l20125
 46367   01B808                     u26830:
 46368   01B808                     
 46369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 46370   01B808  0E70               	movlw	low STR_206
 46371   01B80A  6E18               	movwf	stoa@cp^(0+1280),c
 46372   01B80C  0EFF               	movlw	high STR_206
 46373   01B80E  6E19               	movwf	(stoa@cp+1)^(0+1280),c
 46374   01B810                     l20125:
 46375                           
 46376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 46377   01B810  0E00               	movlw	0
 46378   01B812  6E1B               	movwf	(stoa@l+1)^(0+1280),c
 46379   01B814  0E00               	movlw	0
 46380   01B816  6E1A               	movwf	stoa@l^(0+1280),c
 46381   01B818  EF10  F0DC         	goto	l20129
 46382   01B81C                     l20127:
 46383   01B81C  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46384   01B81E  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46385   01B820                     l20129:
 46386   01B820  501A               	movf	stoa@l^(0+1280),w,c
 46387   01B822  2418               	addwf	stoa@cp^(0+1280),w,c
 46388   01B824  6E12               	movwf	??_stoa^(0+1280),c
 46389   01B826  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46390   01B828  2019               	addwfc	(stoa@cp+1)^(0+1280),w,c
 46391   01B82A  6E13               	movwf	(??_stoa+1)^(0+1280),c
 46392   01B82C  C512  F4F6         	movff	??_stoa,tblptrl
 46393   01B830  C513  F4F7         	movff	??_stoa+1,tblptrh
 46394   01B834  0E00               	movlw	low (__mediumconst shr (0+16))
 46395   01B836  6EF8               	movwf	tblptru,c
 46396   01B838  0E25               	movlw	(high __ramtop+-1)
 46397   01B83A  64F7               	cpfsgt	tblptrh,c
 46398   01B83C  D003               	bra	u26847
 46399   01B83E  0008               	tblrd		*
 46400   01B840  50F5               	movf	tablat,w,c
 46401   01B842  D005               	bra	u26840
 46402   01B844                     u26847:
 46403   01B844  C4F6 F4E9          	movff	tblptrl,fsr0l
 46404   01B848  C4F7 F4EA          	movff	tblptrh,fsr0h
 46405   01B84C  50EF               	movf	indf0,w,c
 46406   01B84E                     u26840:
 46407   01B84E  0900               	iorlw	0
 46408   01B850  A4D8               	btfss	status,2,c
 46409   01B852  EF2D  F0DC         	goto	u26851
 46410   01B856  EF2F  F0DC         	goto	u26850
 46411   01B85A                     u26851:
 46412   01B85A  EF0E  F0DC         	goto	l20127
 46413   01B85E                     u26850:
 46414   01B85E                     
 46415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 46416   01B85E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46417   01B860  EF34  F0DC         	goto	u26861
 46418   01B864  EF36  F0DC         	goto	u26860
 46419   01B868                     u26861:
 46420   01B868  EF49  F0DC         	goto	l3442
 46421   01B86C                     u26860:
 46422   01B86C  501A               	movf	stoa@l^(0+1280),w,c
 46423   01B86E  5C5A               	subwf	_prec^(0+1280),w,c
 46424   01B870  505B               	movf	(_prec+1)^(0+1280),w,c
 46425   01B872  0A80               	xorlw	128
 46426   01B874  6E12               	movwf	??_stoa^(0+1280),c
 46427   01B876  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46428   01B878  0A80               	xorlw	128
 46429   01B87A  5812               	subwfb	??_stoa^(0+1280),w,c
 46430   01B87C  B0D8               	btfsc	status,0,c
 46431   01B87E  EF43  F0DC         	goto	u26871
 46432   01B882  EF45  F0DC         	goto	u26870
 46433   01B886                     u26871:
 46434   01B886  EF49  F0DC         	goto	l3442
 46435   01B88A                     u26870:
 46436   01B88A                     
 46437                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 46438   01B88A  C55A  F51A         	movff	_prec,stoa@l
 46439   01B88E  C55B  F51B         	movff	_prec+1,stoa@l+1
 46440   01B892                     l3442:
 46441                           
 46442                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 46443   01B892  C51A  F514         	movff	stoa@l,stoa@p
 46444   01B896  C51B  F515         	movff	stoa@l+1,stoa@p+1
 46445                           
 46446                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 46447   01B89A  C7B1  F516         	movff	_width,stoa@w
 46448   01B89E  C7B2  F517         	movff	_width+1,stoa@w+1
 46449                           
 46450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 46451   01B8A2  B05C               	btfsc	_flags^(0+1280),0,c
 46452   01B8A4  EF56  F0DC         	goto	u26881
 46453   01B8A8  EF58  F0DC         	goto	u26880
 46454   01B8AC                     u26881:
 46455   01B8AC  EF94  F0DC         	goto	l20149
 46456   01B8B0                     u26880:
 46457   01B8B0  EF66  F0DC         	goto	l20143
 46458   01B8B4                     l20139:
 46459                           
 46460                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 46461   01B8B4  0E00               	movlw	0
 46462   01B8B6  6E06               	movwf	(fputc@c+1)^(0+1280),c
 46463   01B8B8  0E20               	movlw	32
 46464   01B8BA  6E05               	movwf	fputc@c^(0+1280),c
 46465   01B8BC  C50E  F507         	movff	stoa@fp,fputc@fp
 46466   01B8C0  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46467   01B8C4  EC45  F0F1         	call	_fputc	;wreg free
 46468   01B8C8                     
 46469                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 46470   01B8C8  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46471   01B8CA  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46472   01B8CC                     l20143:
 46473                           
 46474                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 46475   01B8CC  5016               	movf	stoa@w^(0+1280),w,c
 46476   01B8CE  5C1A               	subwf	stoa@l^(0+1280),w,c
 46477   01B8D0  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46478   01B8D2  0A80               	xorlw	128
 46479   01B8D4  6E12               	movwf	??_stoa^(0+1280),c
 46480   01B8D6  5017               	movf	(stoa@w+1)^(0+1280),w,c
 46481   01B8D8  0A80               	xorlw	128
 46482   01B8DA  5812               	subwfb	??_stoa^(0+1280),w,c
 46483   01B8DC  A0D8               	btfss	status,0,c
 46484   01B8DE  EF73  F0DC         	goto	u26891
 46485   01B8E2  EF75  F0DC         	goto	u26890
 46486   01B8E6                     u26891:
 46487   01B8E6  EF5A  F0DC         	goto	l20139
 46488   01B8EA                     u26890:
 46489   01B8EA  EF94  F0DC         	goto	l20149
 46490   01B8EE                     l20145:
 46491                           
 46492                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 46493   01B8EE  C518  F4F6         	movff	stoa@cp,tblptrl
 46494   01B8F2  C519  F4F7         	movff	stoa@cp+1,tblptrh
 46495   01B8F6  0E00               	movlw	low (__mediumconst shr (0+16))
 46496   01B8F8  6EF8               	movwf	tblptru,c
 46497   01B8FA  0E25               	movlw	(high __ramtop+-1)
 46498   01B8FC  64F7               	cpfsgt	tblptrh,c
 46499   01B8FE  D003               	bra	u26907
 46500   01B900  0008               	tblrd		*
 46501   01B902  50F5               	movf	tablat,w,c
 46502   01B904  D005               	bra	u26900
 46503   01B906                     u26907:
 46504   01B906  C4F6 F4E9          	movff	tblptrl,fsr0l
 46505   01B90A  C4F7 F4EA          	movff	tblptrh,fsr0h
 46506   01B90E  50EF               	movf	indf0,w,c
 46507   01B910                     u26900:
 46508   01B910  6E12               	movwf	??_stoa^(0+1280),c
 46509   01B912  5012               	movf	??_stoa^(0+1280),w,c
 46510   01B914  6E05               	movwf	fputc@c^(0+1280),c
 46511   01B916  6A06               	clrf	(fputc@c+1)^(0+1280),c
 46512   01B918  C50E  F507         	movff	stoa@fp,fputc@fp
 46513   01B91C  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46514   01B920  EC45  F0F1         	call	_fputc	;wreg free
 46515   01B924                     
 46516                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 46517   01B924  4A18               	infsnz	stoa@cp^(0+1280),f,c
 46518   01B926  2A19               	incf	(stoa@cp+1)^(0+1280),f,c
 46519   01B928                     l20149:
 46520                           
 46521                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 46522   01B928  0614               	decf	stoa@p^(0+1280),f,c
 46523   01B92A  A0D8               	btfss	status,0,c
 46524   01B92C  0615               	decf	(stoa@p+1)^(0+1280),f,c
 46525   01B92E  2814               	incf	stoa@p^(0+1280),w,c
 46526   01B930  E106               	bnz	u26911
 46527   01B932  2815               	incf	(stoa@p+1)^(0+1280),w,c
 46528   01B934  A4D8               	btfss	status,2,c
 46529   01B936  EF9F  F0DC         	goto	u26911
 46530   01B93A  EFA1  F0DC         	goto	u26910
 46531   01B93E                     u26911:
 46532   01B93E  EF77  F0DC         	goto	l20145
 46533   01B942                     u26910:
 46534   01B942                     
 46535                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 46536   01B942  A05C               	btfss	_flags^(0+1280),0,c
 46537   01B944  EFA6  F0DC         	goto	u26921
 46538   01B948  EFA8  F0DC         	goto	u26920
 46539   01B94C                     u26921:
 46540   01B94C  EFC5  F0DC         	goto	l3454
 46541   01B950                     u26920:
 46542   01B950  EFB6  F0DC         	goto	l20157
 46543   01B954                     l20153:
 46544                           
 46545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 46546   01B954  0E00               	movlw	0
 46547   01B956  6E06               	movwf	(fputc@c+1)^(0+1280),c
 46548   01B958  0E20               	movlw	32
 46549   01B95A  6E05               	movwf	fputc@c^(0+1280),c
 46550   01B95C  C50E  F507         	movff	stoa@fp,fputc@fp
 46551   01B960  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46552   01B964  EC45  F0F1         	call	_fputc	;wreg free
 46553   01B968                     
 46554                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 46555   01B968  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46556   01B96A  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46557   01B96C                     l20157:
 46558                           
 46559                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 46560   01B96C  5016               	movf	stoa@w^(0+1280),w,c
 46561   01B96E  5C1A               	subwf	stoa@l^(0+1280),w,c
 46562   01B970  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46563   01B972  0A80               	xorlw	128
 46564   01B974  6E12               	movwf	??_stoa^(0+1280),c
 46565   01B976  5017               	movf	(stoa@w+1)^(0+1280),w,c
 46566   01B978  0A80               	xorlw	128
 46567   01B97A  5812               	subwfb	??_stoa^(0+1280),w,c
 46568   01B97C  A0D8               	btfss	status,0,c
 46569   01B97E  EFC3  F0DC         	goto	u26931
 46570   01B982  EFC5  F0DC         	goto	u26930
 46571   01B986                     u26931:
 46572   01B986  EFAA  F0DC         	goto	l20153
 46573   01B98A                     u26930:
 46574   01B98A                     l3454:
 46575   01B98A  0012               	return		;funcret
 46576   01B98C                     __end_of_stoa:
 46577                           	callstack 0
 46578                           
 46579 ;; *************** function _read_prec_or_width *****************
 46580 ;; Defined at:
 46581 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46582 ;; Parameters:    Size  Location     Type
 46583 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 46584 ;;		 -> vfprintf@cfmt(2), 
 46585 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 46586 ;;		 -> printf@ap(2), sprintf@ap(2), 
 46587 ;; Auto vars:     Size  Location     Type
 46588 ;;  c               1    9[COMRAM] unsigned char 
 46589 ;;  n               2   10[COMRAM] int 
 46590 ;; Return value:  Size  Location     Type
 46591 ;;                  2    3[COMRAM] int 
 46592 ;; Registers used:
 46593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46594 ;; Tracked objects:
 46595 ;;		On entry : 0/0
 46596 ;;		On exit  : 0/0
 46597 ;;		Unchanged: 0/0
 46598 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46600 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46602 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46603 ;;Total ram usage:        9 bytes
 46604 ;; Hardware stack levels used: 1
 46605 ;; Hardware stack levels required when called: 1
 46606 ;; This function calls:
 46607 ;;		Nothing
 46608 ;; This function is called by:
 46609 ;;		_vfpfcnvrt
 46610 ;; This function uses a non-reentrant model
 46611 ;;
 46612                           
 46613                           	psect	text127
 46614   01E028                     __ptext127:
 46615                           	callstack 0
 46616   01E028                     _read_prec_or_width:
 46617                           	callstack 115
 46618   01E028                     
 46619                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 46620   01E028  0E00               	movlw	0
 46621   01E02A  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 46622   01E02C  0E00               	movlw	0
 46623   01E02E  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 46624   01E030                     
 46625                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 46626   01E030  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46627   01E034  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46628   01E038  C4DE F4F6          	movff	postinc2,tblptrl
 46629   01E03C  C4DD F4F7          	movff	postdec2,tblptrh
 46630   01E040                     	if	0	;tblptru may be non-zero
 46631   01E040                     	endif
 46632   01E040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46633   01E040  0E00               	movlw	low (__mediumconst shr (0+16))
 46634   01E042  6EF8               	movwf	tblptru,c
 46635   01E044                     	endif
 46636   01E044  0008               	tblrd		*
 46637   01E046  50F5               	movf	tablat,w,c
 46638   01E048  0A2A               	xorlw	42
 46639   01E04A  A4D8               	btfss	status,2,c
 46640   01E04C  EF2A  F0F0         	goto	u27041
 46641   01E050  EF2C  F0F0         	goto	u27040
 46642   01E054                     u27041:
 46643   01E054  EF5F  F0F0         	goto	l20219
 46644   01E058                     u27040:
 46645   01E058                     
 46646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 46647   01E058  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46648   01E05C  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46649   01E060  2ADE               	incf	postinc2,f,c
 46650   01E062  0E00               	movlw	0
 46651   01E064  22DD               	addwfc	postdec2,f,c
 46652                           
 46653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 46654   01E066  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 46655   01E06A  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 46656   01E06E  C4DF F508          	movff	indf2,??_read_prec_or_width
 46657   01E072  0E02               	movlw	2
 46658   01E074  26DE               	addwf	postinc2,f,c
 46659   01E076  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 46660   01E07A  0E00               	movlw	0
 46661   01E07C  22DD               	addwfc	postdec2,f,c
 46662   01E07E  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 46663   01E082  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 46664   01E086  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 46665   01E08A  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 46666                           
 46667                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 46668   01E08E  EF75  F0F0         	goto	l3479
 46669   01E092                     l20215:
 46670                           
 46671                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 46672   01E092  0E0A               	movlw	10
 46673   01E094  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 46674   01E096  C4F3 F508          	movff	prodl,??_read_prec_or_width
 46675   01E09A  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 46676   01E09E  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 46677   01E0A0  50F3               	movf	prodl,w,c
 46678   01E0A2  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 46679   01E0A4  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 46680   01E0A6  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 46681   01E0A8  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 46682   01E0AA  0E00               	movlw	0
 46683   01E0AC  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 46684   01E0AE  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 46685   01E0B0                     
 46686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 46687   01E0B0  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46688   01E0B4  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46689   01E0B8  2ADE               	incf	postinc2,f,c
 46690   01E0BA  0E00               	movlw	0
 46691   01E0BC  22DD               	addwfc	postdec2,f,c
 46692   01E0BE                     l20219:
 46693                           
 46694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 46695   01E0BE  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46696   01E0C2  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46697   01E0C6  C4DE F4F6          	movff	postinc2,tblptrl
 46698   01E0CA  C4DD F4F7          	movff	postdec2,tblptrh
 46699   01E0CE                     	if	0	;tblptru may be non-zero
 46700   01E0CE                     	endif
 46701   01E0CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46702   01E0CE  0E00               	movlw	low (__mediumconst shr (0+16))
 46703   01E0D0  6EF8               	movwf	tblptru,c
 46704   01E0D2                     	endif
 46705   01E0D2  0008               	tblrd		*
 46706   01E0D4  50F5               	movf	tablat,w,c
 46707   01E0D6  0FD0               	addlw	208
 46708   01E0D8  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 46709   01E0DA  0E09               	movlw	9
 46710   01E0DC  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 46711   01E0DE  EF73  F0F0         	goto	u27051
 46712   01E0E2  EF75  F0F0         	goto	u27050
 46713   01E0E6                     u27051:
 46714   01E0E6  EF49  F0F0         	goto	l20215
 46715   01E0EA                     u27050:
 46716   01E0EA                     l3479:
 46717                           
 46718                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 46719   01E0EA  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 46720   01E0EE  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 46721   01E0F2  0012               	return		;funcret
 46722   01E0F4                     __end_of_read_prec_or_width:
 46723                           	callstack 0
 46724                           
 46725 ;; *************** function _efgtoa *****************
 46726 ;; Defined at:
 46727 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46728 ;; Parameters:    Size  Location     Type
 46729 ;;  fp              2    0[BANK5 ] PTR struct _IO_FILE
 46730 ;;		 -> sprintf@f(11), NULL(0), 
 46731 ;;  f               4    2[BANK5 ] PTR struct _IO_FILE
 46732 ;;  c               1    6[BANK5 ] unsigned char 
 46733 ;; Auto vars:     Size  Location     Type
 46734 ;;  u               4   47[BANK5 ] struct flui
 46735 ;;  g               4   41[BANK5 ] struct flui
 46736 ;;  l               4   34[BANK5 ] struct flui
 46737 ;;  h               4   30[BANK5 ] struct flui
 46738 ;;  ou              4   24[BANK5 ] struct flui
 46739 ;;  n               2   45[BANK5 ] int 
 46740 ;;  i               2   38[BANK5 ] int 
 46741 ;;  w               2   28[BANK5 ] int 
 46742 ;;  e               2   22[BANK5 ] int 
 46743 ;;  m               2   20[BANK5 ] int 
 46744 ;;  d               2   18[BANK5 ] int 
 46745 ;;  t               2   11[BANK5 ] int 
 46746 ;;  p               2    9[BANK5 ] int 
 46747 ;;  ne              2    7[BANK5 ] int 
 46748 ;;  sign            1   40[BANK5 ] unsigned char 
 46749 ;;  nmode           1   17[BANK5 ] unsigned char 
 46750 ;;  mode            1   16[BANK5 ] unsigned char 
 46751 ;;  pp              1   15[BANK5 ] unsigned char 
 46752 ;;  esign           1    0        unsigned char 
 46753 ;; Return value:  Size  Location     Type
 46754 ;;                  1    wreg      void 
 46755 ;; Registers used:
 46756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46757 ;; Tracked objects:
 46758 ;;		On entry : 0/0
 46759 ;;		On exit  : 0/0
 46760 ;;		Unchanged: 0/0
 46761 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46762 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46763 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46765 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46766 ;;Total ram usage:       53 bytes
 46767 ;; Hardware stack levels used: 1
 46768 ;; Hardware stack levels required when called: 5
 46769 ;; This function calls:
 46770 ;;		___fladd
 46771 ;;		___fldiv
 46772 ;;		___fleq
 46773 ;;		___flge
 46774 ;;		___flmul
 46775 ;;		___flneg
 46776 ;;		___flsub
 46777 ;;		___fltol
 46778 ;;		___fpclassifyf
 46779 ;;		_floorf
 46780 ;;		_labs
 46781 ;;		_memcpy
 46782 ;;		_pad
 46783 ;;		_strcpy
 46784 ;; This function is called by:
 46785 ;;		_vfpfcnvrt
 46786 ;; This function uses a non-reentrant model
 46787 ;;
 46788                           
 46789                           	psect	text128
 46790   010AD8                     __ptext128:
 46791                           	callstack 0
 46792   010AD8                     _efgtoa:
 46793                           	callstack 111
 46794   010AD8                     
 46795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 46796   010AD8  0105               	movlb	5	; () banked
 46797   010ADA  6B88               	clrf	efgtoa@sign& (0+255),b
 46798                           
 46799                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 46800   010ADC  C562  F589         	movff	efgtoa@f,efgtoa@g
 46801   010AE0  C563  F58A         	movff	efgtoa@f+1,efgtoa@g+1
 46802   010AE4  C564  F58B         	movff	efgtoa@f+2,efgtoa@g+2
 46803   010AE8  C565  F58C         	movff	efgtoa@f+3,efgtoa@g+3
 46804   010AEC                     
 46805                           ; BSR set to: 5
 46806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 46807   010AEC  BF8C               	btfsc	(efgtoa@g+3)& (0+255),7,b
 46808   010AEE  EF7D  F085         	goto	u26480
 46809   010AF2  EF7B  F085         	goto	u26481
 46810   010AF6                     u26481:
 46811   010AF6  EF91  F085         	goto	l19897
 46812   010AFA                     u26480:
 46813   010AFA                     
 46814                           ; BSR set to: 5
 46815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 46816   010AFA  0E01               	movlw	1
 46817   010AFC  6F88               	movwf	efgtoa@sign& (0+255),b
 46818   010AFE                     
 46819                           ; BSR set to: 5
 46820                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 46821   010AFE  C589  F504         	movff	efgtoa@g,___flneg@f1
 46822   010B02  C58A  F505         	movff	efgtoa@g+1,___flneg@f1+1
 46823   010B06  C58B  F506         	movff	efgtoa@g+2,___flneg@f1+2
 46824   010B0A  C58C  F507         	movff	efgtoa@g+3,___flneg@f1+3
 46825   010B0E  EC30  F0FF         	call	___flneg	;wreg free
 46826   010B12  C504  F589         	movff	?___flneg,efgtoa@g
 46827   010B16  C505  F58A         	movff	?___flneg+1,efgtoa@g+1
 46828   010B1A  C506  F58B         	movff	?___flneg+2,efgtoa@g+2
 46829   010B1E  C507  F58C         	movff	?___flneg+3,efgtoa@g+3
 46830   010B22                     l19897:
 46831                           
 46832                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 46833   010B22  0E00               	movlw	0
 46834   010B24  0105               	movlb	5	; () banked
 46835   010B26  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 46836   010B28  0E00               	movlw	0
 46837   010B2A  6F8D               	movwf	efgtoa@n& (0+255),b
 46838   010B2C                     
 46839                           ; BSR set to: 5
 46840                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 46841   010B2C  C7B1  F57C         	movff	_width,efgtoa@w
 46842   010B30  C7B2  F57D         	movff	_width+1,efgtoa@w+1
 46843   010B34                     
 46844                           ; BSR set to: 5
 46845                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
 46846   010B34  5188               	movf	efgtoa@sign& (0+255),w,b
 46847   010B36  B4D8               	btfsc	status,2,c
 46848   010B38  EFA0  F085         	goto	u26491
 46849   010B3C  EFA2  F085         	goto	u26490
 46850   010B40                     u26491:
 46851   010B40  EFB6  F085         	goto	l19911
 46852   010B44                     u26490:
 46853   010B44                     
 46854                           ; BSR set to: 5
 46855                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 46856   010B44  5188               	movf	efgtoa@sign& (0+255),w,b
 46857   010B46  A4D8               	btfss	status,2,c
 46858   010B48  EFA8  F085         	goto	u26501
 46859   010B4C  EFAA  F085         	goto	u26500
 46860   010B50                     u26501:
 46861   010B50  EFB0  F085         	goto	l19907
 46862   010B54                     u26500:
 46863   010B54                     
 46864                           ; BSR set to: 5
 46865   010B54  0E00               	movlw	0
 46866   010B56  6F6E               	movwf	(_efgtoa$4752+1)& (0+255),b
 46867   010B58  0E2B               	movlw	43
 46868   010B5A  6F6D               	movwf	_efgtoa$4752& (0+255),b
 46869   010B5C  EFB4  F085         	goto	l19909
 46870   010B60                     l19907:
 46871                           
 46872                           ; BSR set to: 5
 46873   010B60  0E00               	movlw	0
 46874   010B62  6F6E               	movwf	(_efgtoa$4752+1)& (0+255),b
 46875   010B64  0E2D               	movlw	45
 46876   010B66  6F6D               	movwf	_efgtoa$4752& (0+255),b
 46877   010B68                     l19909:
 46878                           
 46879                           ; BSR set to: 5
 46880   010B68  C56D  F588         	movff	_efgtoa$4752,efgtoa@sign
 46881   010B6C                     l19911:
 46882                           
 46883                           ; BSR set to: 5
 46884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 46885   010B6C  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 46886   010B70  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 46887   010B74  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 46888   010B78  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 46889   010B7C  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 46890   010B80  0404               	decf	?___fpclassifyf^(0+1280),w,c
 46891   010B82  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 46892   010B84  A4D8               	btfss	status,2,c
 46893   010B86  EFC7  F085         	goto	u26511
 46894   010B8A  EFC9  F085         	goto	u26510
 46895   010B8E                     u26511:
 46896   010B8E  EFFC  F085         	goto	l19929
 46897   010B92                     u26510:
 46898   010B92                     
 46899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 46900   010B92  0105               	movlb	5	; () banked
 46901   010B94  5188               	movf	efgtoa@sign& (0+255),w,b
 46902   010B96  B4D8               	btfsc	status,2,c
 46903   010B98  EFD0  F085         	goto	u26521
 46904   010B9C  EFD2  F085         	goto	u26520
 46905   010BA0                     u26521:
 46906   010BA0  EFDB  F085         	goto	l19921
 46907   010BA4                     u26520:
 46908   010BA4                     
 46909                           ; BSR set to: 5
 46910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 46911   010BA4  C588  F828         	movff	efgtoa@sign,_dbuf
 46912   010BA8                     
 46913                           ; BSR set to: 5
 46914                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
 46915   010BA8  077C               	decf	efgtoa@w& (0+255),f,b
 46916   010BAA  A0D8               	btfss	status,0,c
 46917   010BAC  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 46918   010BAE                     
 46919                           ; BSR set to: 5
 46920                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 46921   010BAE  0E00               	movlw	0
 46922   010BB0  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 46923   010BB2  0E01               	movlw	1
 46924   010BB4  6F8D               	movwf	efgtoa@n& (0+255),b
 46925   010BB6                     l19921:
 46926                           
 46927                           ; BSR set to: 5
 46928                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 46929   010BB6  0E28               	movlw	low _dbuf
 46930   010BB8  258D               	addwf	efgtoa@n& (0+255),w,b
 46931   010BBA  6E04               	movwf	strcpy@dest^(0+1280),c
 46932   010BBC  0E08               	movlw	high _dbuf
 46933   010BBE  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 46934   010BC0  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 46935   010BC2  0ED5               	movlw	low STR_200
 46936   010BC4  6E06               	movwf	strcpy@src^(0+1280),c
 46937   010BC6  0EFF               	movlw	high STR_200
 46938   010BC8  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 46939   010BCA  ECBE  F0FE         	call	_strcpy	;wreg free
 46940   010BCE                     l19923:
 46941                           
 46942                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 46943   010BCE  0105               	movlb	5	; () banked
 46944   010BD0  0EFD               	movlw	253
 46945   010BD2  277C               	addwf	efgtoa@w& (0+255),f,b
 46946   010BD4  0EFF               	movlw	255
 46947   010BD6  237D               	addwfc	(efgtoa@w+1)& (0+255),f,b
 46948   010BD8                     
 46949                           ; BSR set to: 5
 46950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 46951   010BD8  C560  F515         	movff	efgtoa@fp,pad@fp
 46952   010BDC  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 46953   010BE0  0E28               	movlw	low _dbuf
 46954   010BE2  6E17               	movwf	pad@buf^(0+1280),c
 46955   010BE4  0E08               	movlw	high _dbuf
 46956   010BE6  6E18               	movwf	(pad@buf+1)^(0+1280),c
 46957   010BE8  C57C  F519         	movff	efgtoa@w,pad@p
 46958   010BEC  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 46959   010BF0  EC1F  F0F6         	call	_pad	;wreg free
 46960   010BF4  EF9B  F08A         	goto	l3387
 46961   010BF8                     l19929:
 46962                           
 46963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 46964   010BF8  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 46965   010BFC  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 46966   010C00  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 46967   010C04  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 46968   010C08  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 46969   010C0C  5004               	movf	?___fpclassifyf^(0+1280),w,c
 46970   010C0E  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 46971   010C10  A4D8               	btfss	status,2,c
 46972   010C12  EF0D  F086         	goto	u26531
 46973   010C16  EF0F  F086         	goto	u26530
 46974   010C1A                     u26531:
 46975   010C1A  EF2F  F086         	goto	l19947
 46976   010C1E                     u26530:
 46977   010C1E                     
 46978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 46979   010C1E  0105               	movlb	5	; () banked
 46980   010C20  5188               	movf	efgtoa@sign& (0+255),w,b
 46981   010C22  B4D8               	btfsc	status,2,c
 46982   010C24  EF16  F086         	goto	u26541
 46983   010C28  EF18  F086         	goto	u26540
 46984   010C2C                     u26541:
 46985   010C2C  EF21  F086         	goto	l19939
 46986   010C30                     u26540:
 46987   010C30                     
 46988                           ; BSR set to: 5
 46989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 46990   010C30  C588  F828         	movff	efgtoa@sign,_dbuf
 46991   010C34                     
 46992                           ; BSR set to: 5
 46993                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
 46994   010C34  077C               	decf	efgtoa@w& (0+255),f,b
 46995   010C36  A0D8               	btfss	status,0,c
 46996   010C38  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 46997   010C3A                     
 46998                           ; BSR set to: 5
 46999                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 47000   010C3A  0E00               	movlw	0
 47001   010C3C  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 47002   010C3E  0E01               	movlw	1
 47003   010C40  6F8D               	movwf	efgtoa@n& (0+255),b
 47004   010C42                     l19939:
 47005                           
 47006                           ; BSR set to: 5
 47007                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 47008   010C42  0E28               	movlw	low _dbuf
 47009   010C44  258D               	addwf	efgtoa@n& (0+255),w,b
 47010   010C46  6E04               	movwf	strcpy@dest^(0+1280),c
 47011   010C48  0E08               	movlw	high _dbuf
 47012   010C4A  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47013   010C4C  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 47014   010C4E  0ED9               	movlw	low STR_203
 47015   010C50  6E06               	movwf	strcpy@src^(0+1280),c
 47016   010C52  0EFF               	movlw	high STR_203
 47017   010C54  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 47018   010C56  ECBE  F0FE         	call	_strcpy	;wreg free
 47019   010C5A  EFE7  F085         	goto	l19923
 47020   010C5E                     l19947:
 47021                           
 47022                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 47023   010C5E  0E00               	movlw	0
 47024   010C60  0105               	movlb	5	; () banked
 47025   010C62  6F8F               	movwf	efgtoa@u& (0+255),b
 47026   010C64  0E00               	movlw	0
 47027   010C66  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 47028   010C68  0E80               	movlw	128
 47029   010C6A  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 47030   010C6C  0E3F               	movlw	63
 47031   010C6E  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 47032                           
 47033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 47034   010C70  0E00               	movlw	0
 47035   010C72  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 47036   010C74  0E00               	movlw	0
 47037   010C76  6F76               	movwf	efgtoa@e& (0+255),b
 47038   010C78                     
 47039                           ; BSR set to: 5
 47040                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 47041   010C78  C589  F504         	movff	efgtoa@g,___fleq@ff1
 47042   010C7C  C58A  F505         	movff	efgtoa@g+1,___fleq@ff1+1
 47043   010C80  C58B  F506         	movff	efgtoa@g+2,___fleq@ff1+2
 47044   010C84  C58C  F507         	movff	efgtoa@g+3,___fleq@ff1+3
 47045   010C88  0E00               	movlw	0
 47046   010C8A  6E08               	movwf	___fleq@ff2^(0+1280),c
 47047   010C8C  0E00               	movlw	0
 47048   010C8E  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 47049   010C90  0E00               	movlw	0
 47050   010C92  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 47051   010C94  0E00               	movlw	0
 47052   010C96  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 47053   010C98  EC81  F0F4         	call	___fleq	;wreg free
 47054   010C9C  B0D8               	btfsc	status,0,c
 47055   010C9E  EF53  F086         	goto	u26551
 47056   010CA2  EF55  F086         	goto	u26550
 47057   010CA6                     u26551:
 47058   010CA6  EF34  F087         	goto	l3390
 47059   010CAA                     u26550:
 47060   010CAA  EF62  F086         	goto	l19955
 47061   010CAE                     l3392:
 47062                           
 47063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 47064   010CAE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 47065   010CB2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 47066   010CB6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 47067   010CBA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 47068   010CBE                     
 47069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 47070   010CBE  0105               	movlb	5	; () banked
 47071   010CC0  4B76               	infsnz	efgtoa@e& (0+255),f,b
 47072   010CC2  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 47073   010CC4                     l19955:
 47074                           
 47075                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 47076   010CC4  C58F  F512         	movff	efgtoa@u,___flmul@b
 47077   010CC8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47078   010CCC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47079   010CD0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47080   010CD4  0E00               	movlw	0
 47081   010CD6  6E16               	movwf	___flmul@a^(0+1280),c
 47082   010CD8  0E00               	movlw	0
 47083   010CDA  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47084   010CDC  0E20               	movlw	32
 47085   010CDE  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47086   010CE0  0E41               	movlw	65
 47087   010CE2  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47088   010CE4  ECE4  F0B2         	call	___flmul	;wreg free
 47089   010CE8  C512  F578         	movff	?___flmul,efgtoa@ou
 47090   010CEC  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 47091   010CF0  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 47092   010CF4  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 47093   010CF8  0105               	movlb	5	; () banked
 47094   010CFA  5178               	movf	efgtoa@ou& (0+255),w,b
 47095   010CFC  5D89               	subwf	efgtoa@g& (0+255),w,b
 47096   010CFE  6E04               	movwf	labs@a^(0+1280),c
 47097   010D00  5179               	movf	(efgtoa@ou+1)& (0+255),w,b
 47098   010D02  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47099   010D04  6E05               	movwf	(labs@a+1)^(0+1280),c
 47100   010D06  517A               	movf	(efgtoa@ou+2)& (0+255),w,b
 47101   010D08  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47102   010D0A  6E06               	movwf	(labs@a+2)^(0+1280),c
 47103   010D0C  517B               	movf	(efgtoa@ou+3)& (0+255),w,b
 47104   010D0E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47105   010D10  6E07               	movwf	(labs@a+3)^(0+1280),c
 47106   010D12  EC32  F0FC         	call	_labs	;wreg free
 47107   010D16  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47108   010D18  EF99  F086         	goto	u26561
 47109   010D1C  5007               	movf	(?_labs+3)^(0+1280),w,c
 47110   010D1E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47111   010D20  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47112   010D22  E109               	bnz	u26560
 47113   010D24  0E02               	movlw	2
 47114   010D26  5C04               	subwf	?_labs^(0+1280),w,c
 47115   010D28  A0D8               	btfss	status,0,c
 47116   010D2A  EF99  F086         	goto	u26561
 47117   010D2E  EF9B  F086         	goto	u26560
 47118   010D32                     u26561:
 47119   010D32  EF57  F086         	goto	l3392
 47120   010D36                     u26560:
 47121   010D36  C578  F52B         	movff	efgtoa@ou,___flge@ff1
 47122   010D3A  C579  F52C         	movff	efgtoa@ou+1,___flge@ff1+1
 47123   010D3E  C57A  F52D         	movff	efgtoa@ou+2,___flge@ff1+2
 47124   010D42  C57B  F52E         	movff	efgtoa@ou+3,___flge@ff1+3
 47125   010D46  C589  F52F         	movff	efgtoa@g,___flge@ff2
 47126   010D4A  C58A  F530         	movff	efgtoa@g+1,___flge@ff2+1
 47127   010D4E  C58B  F531         	movff	efgtoa@g+2,___flge@ff2+2
 47128   010D52  C58C  F532         	movff	efgtoa@g+3,___flge@ff2+3
 47129   010D56  EC21  F0E9         	call	___flge	;wreg free
 47130   010D5A  A0D8               	btfss	status,0,c
 47131   010D5C  EFB2  F086         	goto	u26571
 47132   010D60  EFB4  F086         	goto	u26570
 47133   010D64                     u26571:
 47134   010D64  EF57  F086         	goto	l3392
 47135   010D68                     u26570:
 47136   010D68                     
 47137                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 47138   010D68  0105               	movlb	5	; () banked
 47139   010D6A  518F               	movf	efgtoa@u& (0+255),w,b
 47140   010D6C  5D89               	subwf	efgtoa@g& (0+255),w,b
 47141   010D6E  6E04               	movwf	labs@a^(0+1280),c
 47142   010D70  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 47143   010D72  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47144   010D74  6E05               	movwf	(labs@a+1)^(0+1280),c
 47145   010D76  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 47146   010D78  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47147   010D7A  6E06               	movwf	(labs@a+2)^(0+1280),c
 47148   010D7C  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 47149   010D7E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47150   010D80  6E07               	movwf	(labs@a+3)^(0+1280),c
 47151   010D82  EC32  F0FC         	call	_labs	;wreg free
 47152   010D86  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47153   010D88  EFD3  F086         	goto	u26580
 47154   010D8C  5007               	movf	(?_labs+3)^(0+1280),w,c
 47155   010D8E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47156   010D90  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47157   010D92  E107               	bnz	u26581
 47158   010D94  0E02               	movlw	2
 47159   010D96  5C04               	subwf	?_labs^(0+1280),w,c
 47160   010D98  B0D8               	btfsc	status,0,c
 47161   010D9A  EFD1  F086         	goto	u26581
 47162   010D9E  EFD3  F086         	goto	u26580
 47163   010DA2                     u26581:
 47164   010DA2  EF1B  F087         	goto	l19973
 47165   010DA6                     u26580:
 47166   010DA6                     l19963:
 47167                           
 47168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 47169   010DA6  C58F  F589         	movff	efgtoa@u,efgtoa@g
 47170   010DAA  C590  F58A         	movff	efgtoa@u+1,efgtoa@g+1
 47171   010DAE  C591  F58B         	movff	efgtoa@u+2,efgtoa@g+2
 47172   010DB2  C592  F58C         	movff	efgtoa@u+3,efgtoa@g+3
 47173                           
 47174                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 47175   010DB6  EF34  F087         	goto	l3390
 47176   010DBA                     l19965:
 47177                           
 47178                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 47179   010DBA  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47180   010DBE  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47181   010DC2  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47182   010DC6  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47183   010DCA  0E00               	movlw	0
 47184   010DCC  6E2F               	movwf	___fldiv@a^(0+1280),c
 47185   010DCE  0E00               	movlw	0
 47186   010DD0  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47187   010DD2  0E20               	movlw	32
 47188   010DD4  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47189   010DD6  0E41               	movlw	65
 47190   010DD8  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47191   010DDA  ECAA  F0BA         	call	___fldiv	;wreg free
 47192   010DDE  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47193   010DE2  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47194   010DE6  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47195   010DEA  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47196   010DEE                     
 47197                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 47198   010DEE  0105               	movlb	5	; () banked
 47199   010DF0  0776               	decf	efgtoa@e& (0+255),f,b
 47200   010DF2  A0D8               	btfss	status,0,c
 47201   010DF4  0777               	decf	(efgtoa@e+1)& (0+255),f,b
 47202   010DF6                     
 47203                           ; BSR set to: 5
 47204                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 47205   010DF6  518F               	movf	efgtoa@u& (0+255),w,b
 47206   010DF8  5D89               	subwf	efgtoa@g& (0+255),w,b
 47207   010DFA  6E04               	movwf	labs@a^(0+1280),c
 47208   010DFC  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 47209   010DFE  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47210   010E00  6E05               	movwf	(labs@a+1)^(0+1280),c
 47211   010E02  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 47212   010E04  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47213   010E06  6E06               	movwf	(labs@a+2)^(0+1280),c
 47214   010E08  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 47215   010E0A  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47216   010E0C  6E07               	movwf	(labs@a+3)^(0+1280),c
 47217   010E0E  EC32  F0FC         	call	_labs	;wreg free
 47218   010E12  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47219   010E14  EF19  F087         	goto	u26590
 47220   010E18  5007               	movf	(?_labs+3)^(0+1280),w,c
 47221   010E1A  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47222   010E1C  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47223   010E1E  E107               	bnz	u26591
 47224   010E20  0E02               	movlw	2
 47225   010E22  5C04               	subwf	?_labs^(0+1280),w,c
 47226   010E24  B0D8               	btfsc	status,0,c
 47227   010E26  EF17  F087         	goto	u26591
 47228   010E2A  EF19  F087         	goto	u26590
 47229   010E2E                     u26591:
 47230   010E2E  EF1B  F087         	goto	l19973
 47231   010E32                     u26590:
 47232   010E32  EFD3  F086         	goto	l19963
 47233   010E36                     l19973:
 47234                           
 47235                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 47236   010E36  C589  F52B         	movff	efgtoa@g,___flge@ff1
 47237   010E3A  C58A  F52C         	movff	efgtoa@g+1,___flge@ff1+1
 47238   010E3E  C58B  F52D         	movff	efgtoa@g+2,___flge@ff1+2
 47239   010E42  C58C  F52E         	movff	efgtoa@g+3,___flge@ff1+3
 47240   010E46  C58F  F52F         	movff	efgtoa@u,___flge@ff2
 47241   010E4A  C590  F530         	movff	efgtoa@u+1,___flge@ff2+1
 47242   010E4E  C591  F531         	movff	efgtoa@u+2,___flge@ff2+2
 47243   010E52  C592  F532         	movff	efgtoa@u+3,___flge@ff2+3
 47244   010E56  EC21  F0E9         	call	___flge	;wreg free
 47245   010E5A  A0D8               	btfss	status,0,c
 47246   010E5C  EF32  F087         	goto	u26601
 47247   010E60  EF34  F087         	goto	u26600
 47248   010E64                     u26601:
 47249   010E64  EFDD  F086         	goto	l19965
 47250   010E68                     u26600:
 47251   010E68                     l3390:
 47252                           
 47253                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 47254   010E68  C566  F570         	movff	efgtoa@c,efgtoa@mode
 47255                           
 47256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 47257   010E6C  C570  F571         	movff	efgtoa@mode,efgtoa@nmode
 47258   010E70                     
 47259                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 47260   010E70  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 47261   010E72  EF3D  F087         	goto	u26611
 47262   010E76  EF3F  F087         	goto	u26610
 47263   010E7A                     u26611:
 47264   010E7A  EF45  F087         	goto	l19979
 47265   010E7E                     u26610:
 47266   010E7E  C55A  F569         	movff	_prec,efgtoa@p
 47267   010E82  C55B  F56A         	movff	_prec+1,efgtoa@p+1
 47268   010E86  EF4A  F087         	goto	l19981
 47269   010E8A                     l19979:
 47270   010E8A  0E00               	movlw	0
 47271   010E8C  0105               	movlb	5	; () banked
 47272   010E8E  6F6A               	movwf	(efgtoa@p+1)& (0+255),b
 47273   010E90  0E06               	movlw	6
 47274   010E92  6F69               	movwf	efgtoa@p& (0+255),b
 47275   010E94                     l19981:
 47276                           
 47277                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 47278   010E94  C569  F574         	movff	efgtoa@p,efgtoa@m
 47279   010E98  C56A  F575         	movff	efgtoa@p+1,efgtoa@m+1
 47280   010E9C                     
 47281                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 47282   010E9C  0105               	movlb	5	; () banked
 47283   010E9E  4B74               	infsnz	efgtoa@m& (0+255),f,b
 47284   010EA0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 47285   010EA2                     
 47286                           ; BSR set to: 5
 47287                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 47288   010EA2  0E66               	movlw	102
 47289   010EA4  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 47290   010EA6  A4D8               	btfss	status,2,c
 47291   010EA8  EF58  F087         	goto	u26621
 47292   010EAC  EF5A  F087         	goto	u26620
 47293   010EB0                     u26621:
 47294   010EB0  EF7A  F087         	goto	l19995
 47295   010EB4                     u26620:
 47296   010EB4                     
 47297                           ; BSR set to: 5
 47298                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 47299   010EB4  BF77               	btfsc	(efgtoa@e+1)& (0+255),7,b
 47300   010EB6  EF61  F087         	goto	u26630
 47301   010EBA  EF5F  F087         	goto	u26631
 47302   010EBE                     u26631:
 47303   010EBE  EF6D  F087         	goto	l19991
 47304   010EC2                     u26630:
 47305   010EC2                     
 47306                           ; BSR set to: 5
 47307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 47308   010EC2  0E00               	movlw	0
 47309   010EC4  6F8F               	movwf	efgtoa@u& (0+255),b
 47310   010EC6  0E00               	movlw	0
 47311   010EC8  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 47312   010ECA  0E80               	movlw	128
 47313   010ECC  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 47314   010ECE  0E3F               	movlw	63
 47315   010ED0  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 47316                           
 47317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 47318   010ED2  0E00               	movlw	0
 47319   010ED4  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 47320   010ED6  0E00               	movlw	0
 47321   010ED8  6F76               	movwf	efgtoa@e& (0+255),b
 47322   010EDA                     l19991:
 47323                           
 47324                           ; BSR set to: 5
 47325                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 47326   010EDA  0E67               	movlw	103
 47327   010EDC  1970               	xorwf	efgtoa@mode& (0+255),w,b
 47328   010EDE  B4D8               	btfsc	status,2,c
 47329   010EE0  EF74  F087         	goto	u26641
 47330   010EE4  EF76  F087         	goto	u26640
 47331   010EE8                     u26641:
 47332   010EE8  EF7A  F087         	goto	l19995
 47333   010EEC                     u26640:
 47334   010EEC                     
 47335                           ; BSR set to: 5
 47336                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 47337   010EEC  5176               	movf	efgtoa@e& (0+255),w,b
 47338   010EEE  2774               	addwf	efgtoa@m& (0+255),f,b
 47339   010EF0  5177               	movf	(efgtoa@e+1)& (0+255),w,b
 47340   010EF2  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
 47341   010EF4                     l19995:
 47342                           
 47343                           ; BSR set to: 5
 47344                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 47345   010EF4  0E00               	movlw	0
 47346   010EF6  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47347   010EF8  0E00               	movlw	0
 47348   010EFA  6F86               	movwf	efgtoa@i& (0+255),b
 47349   010EFC                     
 47350                           ; BSR set to: 5
 47351                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 47352   010EFC  C589  F57E         	movff	efgtoa@g,efgtoa@h
 47353   010F00  C58A  F57F         	movff	efgtoa@g+1,efgtoa@h+1
 47354   010F04  C58B  F580         	movff	efgtoa@g+2,efgtoa@h+2
 47355   010F08  C58C  F581         	movff	efgtoa@g+3,efgtoa@h+3
 47356   010F0C                     
 47357                           ; BSR set to: 5
 47358                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 47359   010F0C  C58F  F578         	movff	efgtoa@u,efgtoa@ou
 47360   010F10  C590  F579         	movff	efgtoa@u+1,efgtoa@ou+1
 47361   010F14  C591  F57A         	movff	efgtoa@u+2,efgtoa@ou+2
 47362   010F18  C592  F57B         	movff	efgtoa@u+3,efgtoa@ou+3
 47363                           
 47364                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 47365   010F1C  EF0B  F088         	goto	l20009
 47366   010F20                     l20001:
 47367                           
 47368                           ; BSR set to: 5
 47369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 47370   010F20  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 47371   010F24  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 47372   010F28  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 47373   010F2C  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 47374   010F30  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 47375   010F34  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 47376   010F38  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 47377   010F3C  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 47378   010F40  ECAA  F0BA         	call	___fldiv	;wreg free
 47379   010F44  C52B  F544         	movff	?___fldiv,floorf@x
 47380   010F48  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 47381   010F4C  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 47382   010F50  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 47383   010F54  EC82  F0D0         	call	_floorf	;wreg free
 47384   010F58  C544  F582         	movff	?_floorf,efgtoa@l
 47385   010F5C  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 47386   010F60  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 47387   010F64  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 47388                           
 47389                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 47390   010F68  C582  F504         	movff	efgtoa@l,___fltol@f1
 47391   010F6C  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47392   010F70  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47393   010F74  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47394   010F78  EC1C  F0E8         	call	___fltol	;wreg free
 47395   010F7C  C504  F572         	movff	?___fltol,efgtoa@d
 47396   010F80  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 47397   010F84                     
 47398                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 47399   010F84  C57E  F52B         	movff	efgtoa@h,___flsub@b
 47400   010F88  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 47401   010F8C  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 47402   010F90  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 47403   010F94  C582  F516         	movff	efgtoa@l,___flmul@a
 47404   010F98  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 47405   010F9C  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 47406   010FA0  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 47407   010FA4  C58F  F512         	movff	efgtoa@u,___flmul@b
 47408   010FA8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47409   010FAC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47410   010FB0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47411   010FB4  ECE4  F0B2         	call	___flmul	;wreg free
 47412   010FB8  C512  F52F         	movff	?___flmul,___flsub@a
 47413   010FBC  C513  F530         	movff	?___flmul+1,___flsub@a+1
 47414   010FC0  C514  F531         	movff	?___flmul+2,___flsub@a+2
 47415   010FC4  C515  F532         	movff	?___flmul+3,___flsub@a+3
 47416   010FC8  ECB9  F0FD         	call	___flsub	;wreg free
 47417   010FCC  C52B  F57E         	movff	?___flsub,efgtoa@h
 47418   010FD0  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 47419   010FD4  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 47420   010FD8  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 47421   010FDC                     
 47422                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 47423   010FDC  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47424   010FE0  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47425   010FE4  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47426   010FE8  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47427   010FEC  0E00               	movlw	0
 47428   010FEE  6E2F               	movwf	___fldiv@a^(0+1280),c
 47429   010FF0  0E00               	movlw	0
 47430   010FF2  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47431   010FF4  0E20               	movlw	32
 47432   010FF6  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47433   010FF8  0E41               	movlw	65
 47434   010FFA  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47435   010FFC  ECAA  F0BA         	call	___fldiv	;wreg free
 47436   011000  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47437   011004  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47438   011008  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47439   01100C  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47440   011010                     
 47441                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 47442   011010  0105               	movlb	5	; () banked
 47443   011012  4B86               	infsnz	efgtoa@i& (0+255),f,b
 47444   011014  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 47445   011016                     l20009:
 47446                           
 47447                           ; BSR set to: 5
 47448                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 47449   011016  5174               	movf	efgtoa@m& (0+255),w,b
 47450   011018  5D86               	subwf	efgtoa@i& (0+255),w,b
 47451   01101A  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47452   01101C  0A80               	xorlw	128
 47453   01101E  6E58               	movwf	??_efgtoa^(0+1280),c
 47454   011020  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 47455   011022  0A80               	xorlw	128
 47456   011024  5858               	subwfb	??_efgtoa^(0+1280),w,c
 47457   011026  A0D8               	btfss	status,0,c
 47458   011028  EF18  F088         	goto	u26651
 47459   01102C  EF1A  F088         	goto	u26650
 47460   011030                     u26651:
 47461   011030  EF90  F087         	goto	l20001
 47462   011034                     u26650:
 47463   011034                     
 47464                           ; BSR set to: 5
 47465                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 47466   011034  C58F  F512         	movff	efgtoa@u,___flmul@b
 47467   011038  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47468   01103C  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47469   011040  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47470   011044  0E00               	movlw	0
 47471   011046  6E16               	movwf	___flmul@a^(0+1280),c
 47472   011048  0E00               	movlw	0
 47473   01104A  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47474   01104C  0EA0               	movlw	160
 47475   01104E  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47476   011050  0E40               	movlw	64
 47477   011052  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47478   011054  ECE4  F0B2         	call	___flmul	;wreg free
 47479   011058  C512  F582         	movff	?___flmul,efgtoa@l
 47480   01105C  C513  F583         	movff	?___flmul+1,efgtoa@l+1
 47481   011060  C514  F584         	movff	?___flmul+2,efgtoa@l+2
 47482   011064  C515  F585         	movff	?___flmul+3,efgtoa@l+3
 47483   011068                     
 47484                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 47485   011068  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 47486   01106C  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 47487   011070  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 47488   011074  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 47489   011078  C582  F52F         	movff	efgtoa@l,___flge@ff2
 47490   01107C  C583  F530         	movff	efgtoa@l+1,___flge@ff2+1
 47491   011080  C584  F531         	movff	efgtoa@l+2,___flge@ff2+2
 47492   011084  C585  F532         	movff	efgtoa@l+3,___flge@ff2+3
 47493   011088  EC21  F0E9         	call	___flge	;wreg free
 47494   01108C  B0D8               	btfsc	status,0,c
 47495   01108E  EF4B  F088         	goto	u26661
 47496   011092  EF4D  F088         	goto	u26660
 47497   011096                     u26661:
 47498   011096  EF58  F088         	goto	l20017
 47499   01109A                     u26660:
 47500   01109A                     
 47501                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 47502   01109A  0E00               	movlw	0
 47503   01109C  0105               	movlb	5	; () banked
 47504   01109E  6F82               	movwf	efgtoa@l& (0+255),b
 47505   0110A0  0E00               	movlw	0
 47506   0110A2  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 47507   0110A4  0E00               	movlw	0
 47508   0110A6  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 47509   0110A8  0E00               	movlw	0
 47510   0110AA  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 47511                           
 47512                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 47513   0110AC  EF81  F088         	goto	l20023
 47514   0110B0                     l20017:
 47515                           
 47516                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 47517   0110B0  C57E  F504         	movff	efgtoa@h,___fleq@ff1
 47518   0110B4  C57F  F505         	movff	efgtoa@h+1,___fleq@ff1+1
 47519   0110B8  C580  F506         	movff	efgtoa@h+2,___fleq@ff1+2
 47520   0110BC  C581  F507         	movff	efgtoa@h+3,___fleq@ff1+3
 47521   0110C0  C582  F508         	movff	efgtoa@l,___fleq@ff2
 47522   0110C4  C583  F509         	movff	efgtoa@l+1,___fleq@ff2+1
 47523   0110C8  C584  F50A         	movff	efgtoa@l+2,___fleq@ff2+2
 47524   0110CC  C585  F50B         	movff	efgtoa@l+3,___fleq@ff2+3
 47525   0110D0  EC81  F0F4         	call	___fleq	;wreg free
 47526   0110D4  A0D8               	btfss	status,0,c
 47527   0110D6  EF6F  F088         	goto	u26671
 47528   0110DA  EF71  F088         	goto	u26670
 47529   0110DE                     u26671:
 47530   0110DE  EF81  F088         	goto	l20023
 47531   0110E2                     u26670:
 47532   0110E2  0105               	movlb	5	; () banked
 47533   0110E4  B172               	btfsc	efgtoa@d& (0+255),0,b
 47534   0110E6  EF77  F088         	goto	u26681
 47535   0110EA  EF79  F088         	goto	u26680
 47536   0110EE                     u26681:
 47537   0110EE  EF81  F088         	goto	l20023
 47538   0110F2                     u26680:
 47539   0110F2                     
 47540                           ; BSR set to: 5
 47541                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 47542   0110F2  0E00               	movlw	0
 47543   0110F4  6F82               	movwf	efgtoa@l& (0+255),b
 47544   0110F6  0E00               	movlw	0
 47545   0110F8  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 47546   0110FA  0E00               	movlw	0
 47547   0110FC  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 47548   0110FE  0E00               	movlw	0
 47549   011100  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 47550   011102                     l20023:
 47551                           
 47552                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 47553   011102  C589  F504         	movff	efgtoa@g,___fladd@b
 47554   011106  C58A  F505         	movff	efgtoa@g+1,___fladd@b+1
 47555   01110A  C58B  F506         	movff	efgtoa@g+2,___fladd@b+2
 47556   01110E  C58C  F507         	movff	efgtoa@g+3,___fladd@b+3
 47557   011112  C582  F508         	movff	efgtoa@l,___fladd@a
 47558   011116  C583  F509         	movff	efgtoa@l+1,___fladd@a+1
 47559   01111A  C584  F50A         	movff	efgtoa@l+2,___fladd@a+2
 47560   01111E  C585  F50B         	movff	efgtoa@l+3,___fladd@a+3
 47561   011122  EC38  F0A5         	call	___fladd	;wreg free
 47562   011126  C504  F57E         	movff	?___fladd,efgtoa@h
 47563   01112A  C505  F57F         	movff	?___fladd+1,efgtoa@h+1
 47564   01112E  C506  F580         	movff	?___fladd+2,efgtoa@h+2
 47565   011132  C507  F581         	movff	?___fladd+3,efgtoa@h+3
 47566   011136                     
 47567                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 47568   011136  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 47569   01113A  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 47570   01113E  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 47571   011142  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 47572   011146  0E00               	movlw	0
 47573   011148  6E16               	movwf	___flmul@a^(0+1280),c
 47574   01114A  0E00               	movlw	0
 47575   01114C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47576   01114E  0E20               	movlw	32
 47577   011150  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47578   011152  0E41               	movlw	65
 47579   011154  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47580   011156  C578  F512         	movff	efgtoa@ou,___flmul@b
 47581   01115A  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 47582   01115E  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 47583   011162  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 47584   011166  ECE4  F0B2         	call	___flmul	;wreg free
 47585   01116A  C512  F52F         	movff	?___flmul,___flge@ff2
 47586   01116E  C513  F530         	movff	?___flmul+1,___flge@ff2+1
 47587   011172  C514  F531         	movff	?___flmul+2,___flge@ff2+2
 47588   011176  C515  F532         	movff	?___flmul+3,___flge@ff2+3
 47589   01117A  EC21  F0E9         	call	___flge	;wreg free
 47590   01117E  A0D8               	btfss	status,0,c
 47591   011180  EFC4  F088         	goto	u26691
 47592   011184  EFC6  F088         	goto	u26690
 47593   011188                     u26691:
 47594   011188  EFEF  F088         	goto	l20035
 47595   01118C                     u26690:
 47596   01118C                     
 47597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 47598   01118C  0105               	movlb	5	; () banked
 47599   01118E  4B76               	infsnz	efgtoa@e& (0+255),f,b
 47600   011190  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 47601   011192                     
 47602                           ; BSR set to: 5
 47603                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 47604   011192  C578  F512         	movff	efgtoa@ou,___flmul@b
 47605   011196  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 47606   01119A  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 47607   01119E  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 47608   0111A2  0E00               	movlw	0
 47609   0111A4  6E16               	movwf	___flmul@a^(0+1280),c
 47610   0111A6  0E00               	movlw	0
 47611   0111A8  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47612   0111AA  0E20               	movlw	32
 47613   0111AC  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47614   0111AE  0E41               	movlw	65
 47615   0111B0  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47616   0111B2  ECE4  F0B2         	call	___flmul	;wreg free
 47617   0111B6  C512  F578         	movff	?___flmul,efgtoa@ou
 47618   0111BA  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 47619   0111BE  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 47620   0111C2  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 47621   0111C6                     
 47622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 47623   0111C6  0E66               	movlw	102
 47624   0111C8  0105               	movlb	5	; () banked
 47625   0111CA  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 47626   0111CC  A4D8               	btfss	status,2,c
 47627   0111CE  EFEB  F088         	goto	u26701
 47628   0111D2  EFED  F088         	goto	u26700
 47629   0111D6                     u26701:
 47630   0111D6  EFEF  F088         	goto	l20035
 47631   0111DA                     u26700:
 47632   0111DA                     
 47633                           ; BSR set to: 5
 47634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 47635   0111DA  4B74               	infsnz	efgtoa@m& (0+255),f,b
 47636   0111DC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 47637   0111DE                     l20035:
 47638                           
 47639                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 47640   0111DE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 47641   0111E2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 47642   0111E6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 47643   0111EA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 47644   0111EE                     
 47645                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 47646   0111EE  C576  F567         	movff	efgtoa@e,efgtoa@ne
 47647   0111F2  C577  F568         	movff	efgtoa@e+1,efgtoa@ne+1
 47648   0111F6                     
 47649                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 47650   0111F6  0105               	movlb	5	; () banked
 47651   0111F8  6B6F               	clrf	efgtoa@pp& (0+255),b
 47652   0111FA                     
 47653                           ; BSR set to: 5
 47654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 47655   0111FA  0E00               	movlw	0
 47656   0111FC  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
 47657   0111FE  0E00               	movlw	0
 47658   011200  6F6B               	movwf	efgtoa@t& (0+255),b
 47659   011202                     
 47660                           ; BSR set to: 5
 47661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 47662   011202  0E00               	movlw	0
 47663   011204  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47664   011206  0E00               	movlw	0
 47665   011208  6F86               	movwf	efgtoa@i& (0+255),b
 47666                           
 47667                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 47668   01120A  EFEC  F089         	goto	l20085
 47669   01120E                     l20045:
 47670                           
 47671                           ; BSR set to: 5
 47672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 47673   01120E  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 47674   011212  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 47675   011216  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 47676   01121A  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 47677   01121E  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 47678   011222  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 47679   011226  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 47680   01122A  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 47681   01122E  ECAA  F0BA         	call	___fldiv	;wreg free
 47682   011232  C52B  F544         	movff	?___fldiv,floorf@x
 47683   011236  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 47684   01123A  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 47685   01123E  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 47686   011242  EC82  F0D0         	call	_floorf	;wreg free
 47687   011246  C544  F582         	movff	?_floorf,efgtoa@l
 47688   01124A  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 47689   01124E  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 47690   011252  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 47691                           
 47692                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 47693   011256  C582  F504         	movff	efgtoa@l,___fltol@f1
 47694   01125A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47695   01125E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47696   011262  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47697   011266  EC1C  F0E8         	call	___fltol	;wreg free
 47698   01126A  BE05               	btfsc	(?___fltol+1)^(0+1280),7,c
 47699   01126C  EF43  F089         	goto	u26710
 47700   011270  5005               	movf	(?___fltol+1)^(0+1280),w,c
 47701   011272  E107               	bnz	u26711
 47702   011274  0E0A               	movlw	10
 47703   011276  5C04               	subwf	?___fltol^(0+1280),w,c
 47704   011278  B0D8               	btfsc	status,0,c
 47705   01127A  EF41  F089         	goto	u26711
 47706   01127E  EF43  F089         	goto	u26710
 47707   011282                     u26711:
 47708   011282  EF53  F089         	goto	l20049
 47709   011286                     u26710:
 47710   011286  C582  F504         	movff	efgtoa@l,___fltol@f1
 47711   01128A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47712   01128E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47713   011292  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47714   011296  EC1C  F0E8         	call	___fltol	;wreg free
 47715   01129A  C504  F572         	movff	?___fltol,efgtoa@d
 47716   01129E  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 47717   0112A2  EF58  F089         	goto	l3420
 47718   0112A6                     l20049:
 47719   0112A6  0E00               	movlw	0
 47720   0112A8  0105               	movlb	5	; () banked
 47721   0112AA  6F73               	movwf	(efgtoa@d+1)& (0+255),b
 47722   0112AC  0E09               	movlw	9
 47723   0112AE  6F72               	movwf	efgtoa@d& (0+255),b
 47724   0112B0                     l3420:
 47725                           
 47726                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 47727   0112B0  0105               	movlb	5	; () banked
 47728   0112B2  516F               	movf	efgtoa@pp& (0+255),w,b
 47729   0112B4  A4D8               	btfss	status,2,c
 47730   0112B6  EF5F  F089         	goto	u26721
 47731   0112BA  EF61  F089         	goto	u26720
 47732   0112BE                     u26721:
 47733   0112BE  EF89  F089         	goto	l20069
 47734   0112C2                     u26720:
 47735   0112C2                     
 47736                           ; BSR set to: 5
 47737   0112C2  BF68               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 47738   0112C4  EF68  F089         	goto	u26730
 47739   0112C8  EF66  F089         	goto	u26731
 47740   0112CC                     u26731:
 47741   0112CC  EF89  F089         	goto	l20069
 47742   0112D0                     u26730:
 47743   0112D0                     
 47744                           ; BSR set to: 5
 47745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 47746   0112D0  0E28               	movlw	low _dbuf
 47747   0112D2  258D               	addwf	efgtoa@n& (0+255),w,b
 47748   0112D4  6ED9               	movwf	fsr2l,c
 47749   0112D6  0E08               	movlw	high _dbuf
 47750   0112D8  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47751   0112DA  6EDA               	movwf	fsr2h,c
 47752   0112DC  0E2E               	movlw	46
 47753   0112DE  6EDF               	movwf	indf2,c
 47754   0112E0                     
 47755                           ; BSR set to: 5
 47756   0112E0  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47757   0112E2  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47758   0112E4                     
 47759                           ; BSR set to: 5
 47760                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 47761   0112E4  077C               	decf	efgtoa@w& (0+255),f,b
 47762   0112E6  A0D8               	btfss	status,0,c
 47763   0112E8  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47764   0112EA                     
 47765                           ; BSR set to: 5
 47766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 47767   0112EA  0E01               	movlw	1
 47768   0112EC  6F6F               	movwf	efgtoa@pp& (0+255),b
 47769   0112EE  EF89  F089         	goto	l20069
 47770   0112F2                     l20061:
 47771                           
 47772                           ; BSR set to: 5
 47773                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 47774   0112F2  0E28               	movlw	low _dbuf
 47775   0112F4  258D               	addwf	efgtoa@n& (0+255),w,b
 47776   0112F6  6ED9               	movwf	fsr2l,c
 47777   0112F8  0E08               	movlw	high _dbuf
 47778   0112FA  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47779   0112FC  6EDA               	movwf	fsr2h,c
 47780   0112FE  0E30               	movlw	48
 47781   011300  6EDF               	movwf	indf2,c
 47782   011302                     
 47783                           ; BSR set to: 5
 47784   011302  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47785   011304  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47786   011306                     
 47787                           ; BSR set to: 5
 47788                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 47789   011306  077C               	decf	efgtoa@w& (0+255),f,b
 47790   011308  A0D8               	btfss	status,0,c
 47791   01130A  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47792   01130C                     
 47793                           ; BSR set to: 5
 47794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 47795   01130C  076B               	decf	efgtoa@t& (0+255),f,b
 47796   01130E  A0D8               	btfss	status,0,c
 47797   011310  076C               	decf	(efgtoa@t+1)& (0+255),f,b
 47798   011312                     l20069:
 47799                           
 47800                           ; BSR set to: 5
 47801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 47802   011312  516B               	movf	efgtoa@t& (0+255),w,b
 47803   011314  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
 47804   011316  A4D8               	btfss	status,2,c
 47805   011318  EF90  F089         	goto	u26741
 47806   01131C  EF92  F089         	goto	u26740
 47807   011320                     u26741:
 47808   011320  EF79  F089         	goto	l20061
 47809   011324                     u26740:
 47810   011324                     
 47811                           ; BSR set to: 5
 47812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 47813   011324  0E28               	movlw	low _dbuf
 47814   011326  258D               	addwf	efgtoa@n& (0+255),w,b
 47815   011328  6ED9               	movwf	fsr2l,c
 47816   01132A  0E08               	movlw	high _dbuf
 47817   01132C  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47818   01132E  6EDA               	movwf	fsr2h,c
 47819   011330  5172               	movf	efgtoa@d& (0+255),w,b
 47820   011332  0F30               	addlw	48
 47821   011334  6EDF               	movwf	indf2,c
 47822   011336                     
 47823                           ; BSR set to: 5
 47824   011336  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47825   011338  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47826   01133A                     
 47827                           ; BSR set to: 5
 47828                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 47829   01133A  077C               	decf	efgtoa@w& (0+255),f,b
 47830   01133C  A0D8               	btfss	status,0,c
 47831   01133E  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47832   011340                     
 47833                           ; BSR set to: 5
 47834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 47835   011340  C57E  F52B         	movff	efgtoa@h,___flsub@b
 47836   011344  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 47837   011348  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 47838   01134C  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 47839   011350  C582  F516         	movff	efgtoa@l,___flmul@a
 47840   011354  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 47841   011358  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 47842   01135C  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 47843   011360  C58F  F512         	movff	efgtoa@u,___flmul@b
 47844   011364  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47845   011368  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47846   01136C  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47847   011370  ECE4  F0B2         	call	___flmul	;wreg free
 47848   011374  C512  F52F         	movff	?___flmul,___flsub@a
 47849   011378  C513  F530         	movff	?___flmul+1,___flsub@a+1
 47850   01137C  C514  F531         	movff	?___flmul+2,___flsub@a+2
 47851   011380  C515  F532         	movff	?___flmul+3,___flsub@a+3
 47852   011384  ECB9  F0FD         	call	___flsub	;wreg free
 47853   011388  C52B  F57E         	movff	?___flsub,efgtoa@h
 47854   01138C  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 47855   011390  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 47856   011394  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 47857   011398                     
 47858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 47859   011398  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47860   01139C  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47861   0113A0  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47862   0113A4  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47863   0113A8  0E00               	movlw	0
 47864   0113AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 47865   0113AC  0E00               	movlw	0
 47866   0113AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47867   0113B0  0E20               	movlw	32
 47868   0113B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47869   0113B4  0E41               	movlw	65
 47870   0113B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47871   0113B8  ECAA  F0BA         	call	___fldiv	;wreg free
 47872   0113BC  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47873   0113C0  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47874   0113C4  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47875   0113C8  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47876   0113CC                     
 47877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 47878   0113CC  0105               	movlb	5	; () banked
 47879   0113CE  0767               	decf	efgtoa@ne& (0+255),f,b
 47880   0113D0  A0D8               	btfss	status,0,c
 47881   0113D2  0768               	decf	(efgtoa@ne+1)& (0+255),f,b
 47882   0113D4                     
 47883                           ; BSR set to: 5
 47884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 47885   0113D4  4B86               	infsnz	efgtoa@i& (0+255),f,b
 47886   0113D6  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 47887   0113D8                     l20085:
 47888                           
 47889                           ; BSR set to: 5
 47890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 47891   0113D8  5174               	movf	efgtoa@m& (0+255),w,b
 47892   0113DA  5D86               	subwf	efgtoa@i& (0+255),w,b
 47893   0113DC  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47894   0113DE  0A80               	xorlw	128
 47895   0113E0  6E58               	movwf	??_efgtoa^(0+1280),c
 47896   0113E2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 47897   0113E4  0A80               	xorlw	128
 47898   0113E6  5858               	subwfb	??_efgtoa^(0+1280),w,c
 47899   0113E8  B0D8               	btfsc	status,0,c
 47900   0113EA  EFF9  F089         	goto	u26751
 47901   0113EE  EFFB  F089         	goto	u26750
 47902   0113F2                     u26751:
 47903   0113F2  EF09  F08A         	goto	l20089
 47904   0113F6                     u26750:
 47905   0113F6                     
 47906                           ; BSR set to: 5
 47907   0113F6  BF8E               	btfsc	(efgtoa@n+1)& (0+255),7,b
 47908   0113F8  EF07  F08A         	goto	u26761
 47909   0113FC  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47910   0113FE  E109               	bnz	u26760
 47911   011400  0E4B               	movlw	75
 47912   011402  5D8D               	subwf	efgtoa@n& (0+255),w,b
 47913   011404  A0D8               	btfss	status,0,c
 47914   011406  EF07  F08A         	goto	u26761
 47915   01140A  EF09  F08A         	goto	u26760
 47916   01140E                     u26761:
 47917   01140E  EF07  F089         	goto	l20045
 47918   011412                     u26760:
 47919   011412                     l20089:
 47920                           
 47921                           ; BSR set to: 5
 47922                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 47923   011412  0E00               	movlw	0
 47924   011414  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47925   011416  0E4F               	movlw	79
 47926   011418  6F86               	movwf	efgtoa@i& (0+255),b
 47927   01141A                     
 47928                           ; BSR set to: 5
 47929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 47930   01141A  0E28               	movlw	low _dbuf
 47931   01141C  2586               	addwf	efgtoa@i& (0+255),w,b
 47932   01141E  6ED9               	movwf	fsr2l,c
 47933   011420  0E08               	movlw	high _dbuf
 47934   011422  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 47935   011424  6EDA               	movwf	fsr2h,c
 47936   011426  6ADF               	clrf	indf2,c
 47937   011428                     
 47938                           ; BSR set to: 5
 47939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 47940   011428  0E28               	movlw	low _dbuf
 47941   01142A  6E58               	movwf	??_efgtoa^(0+1280),c
 47942   01142C  0E08               	movlw	high _dbuf
 47943   01142E  6E59               	movwf	(??_efgtoa+1)^(0+1280),c
 47944   011430  518D               	movf	efgtoa@n& (0+255),w,b
 47945   011432  5E58               	subwf	??_efgtoa^(0+1280),f,c
 47946   011434  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47947   011436  5A59               	subwfb	(??_efgtoa+1)^(0+1280),f,c
 47948   011438  5186               	movf	efgtoa@i& (0+255),w,b
 47949   01143A  2458               	addwf	??_efgtoa^(0+1280),w,c
 47950   01143C  6E04               	movwf	memcpy@d1^(0+1280),c
 47951   01143E  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47952   011440  2059               	addwfc	(??_efgtoa+1)^(0+1280),w,c
 47953   011442  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 47954   011444  0E28               	movlw	low _dbuf
 47955   011446  6E06               	movwf	memcpy@s1^(0+1280),c
 47956   011448  0E08               	movlw	high _dbuf
 47957   01144A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 47958   01144C  C58D  F508         	movff	efgtoa@n,memcpy@n
 47959   011450  C58E  F509         	movff	efgtoa@n+1,memcpy@n+1
 47960   011454  EC00  F0FD         	call	_memcpy	;wreg free
 47961   011458                     
 47962                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 47963   011458  0105               	movlb	5	; () banked
 47964   01145A  518D               	movf	efgtoa@n& (0+255),w,b
 47965   01145C  5D86               	subwf	efgtoa@i& (0+255),w,b
 47966   01145E  6F8D               	movwf	efgtoa@n& (0+255),b
 47967   011460  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47968   011462  5987               	subwfb	(efgtoa@i+1)& (0+255),w,b
 47969   011464  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 47970   011466                     
 47971                           ; BSR set to: 5
 47972                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 47973   011466  5188               	movf	efgtoa@sign& (0+255),w,b
 47974   011468  A4D8               	btfss	status,2,c
 47975   01146A  EF39  F08A         	goto	u26771
 47976   01146E  EF3C  F08A         	goto	u26770
 47977   011472                     u26771:
 47978   011472  0E01               	movlw	1
 47979   011474  EF3D  F08A         	goto	u26780
 47980   011478                     u26770:
 47981   011478  0E00               	movlw	0
 47982   01147A                     u26780:
 47983   01147A  6F86               	movwf	efgtoa@i& (0+255),b
 47984   01147C  6B87               	clrf	(efgtoa@i+1)& (0+255),b
 47985   01147E                     
 47986                           ; BSR set to: 5
 47987                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 47988   01147E  A25C               	btfss	_flags^(0+1280),1,c
 47989   011480  EF44  F08A         	goto	u26791
 47990   011484  EF46  F08A         	goto	u26790
 47991   011488                     u26791:
 47992   011488  EF74  F08A         	goto	l20111
 47993   01148C                     u26790:
 47994   01148C  EF56  F08A         	goto	l20107
 47995   011490                     l20103:
 47996                           
 47997                           ; BSR set to: 5
 47998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 47999   011490  078D               	decf	efgtoa@n& (0+255),f,b
 48000   011492  A0D8               	btfss	status,0,c
 48001   011494  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 48002   011496  0E28               	movlw	low _dbuf
 48003   011498  258D               	addwf	efgtoa@n& (0+255),w,b
 48004   01149A  6ED9               	movwf	fsr2l,c
 48005   01149C  0E08               	movlw	high _dbuf
 48006   01149E  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48007   0114A0  6EDA               	movwf	fsr2h,c
 48008   0114A2  0E30               	movlw	48
 48009   0114A4  6EDF               	movwf	indf2,c
 48010   0114A6                     
 48011                           ; BSR set to: 5
 48012                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 856:    w--;
 48013   0114A6  077C               	decf	efgtoa@w& (0+255),f,b
 48014   0114A8  A0D8               	btfss	status,0,c
 48015   0114AA  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 48016   0114AC                     l20107:
 48017                           
 48018                           ; BSR set to: 5
 48019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 48020   0114AC  517C               	movf	efgtoa@w& (0+255),w,b
 48021   0114AE  5D86               	subwf	efgtoa@i& (0+255),w,b
 48022   0114B0  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48023   0114B2  0A80               	xorlw	128
 48024   0114B4  6E58               	movwf	??_efgtoa^(0+1280),c
 48025   0114B6  517D               	movf	(efgtoa@w+1)& (0+255),w,b
 48026   0114B8  0A80               	xorlw	128
 48027   0114BA  5858               	subwfb	??_efgtoa^(0+1280),w,c
 48028   0114BC  B0D8               	btfsc	status,0,c
 48029   0114BE  EF63  F08A         	goto	u26801
 48030   0114C2  EF65  F08A         	goto	u26800
 48031   0114C6                     u26801:
 48032   0114C6  EF74  F08A         	goto	l20111
 48033   0114CA                     u26800:
 48034   0114CA                     
 48035                           ; BSR set to: 5
 48036   0114CA  518D               	movf	efgtoa@n& (0+255),w,b
 48037   0114CC  5D86               	subwf	efgtoa@i& (0+255),w,b
 48038   0114CE  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48039   0114D0  0A80               	xorlw	128
 48040   0114D2  6E58               	movwf	??_efgtoa^(0+1280),c
 48041   0114D4  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 48042   0114D6  0A80               	xorlw	128
 48043   0114D8  5858               	subwfb	??_efgtoa^(0+1280),w,c
 48044   0114DA  A0D8               	btfss	status,0,c
 48045   0114DC  EF72  F08A         	goto	u26811
 48046   0114E0  EF74  F08A         	goto	u26810
 48047   0114E4                     u26811:
 48048   0114E4  EF48  F08A         	goto	l20103
 48049   0114E8                     u26810:
 48050   0114E8                     l20111:
 48051                           
 48052                           ; BSR set to: 5
 48053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 48054   0114E8  5188               	movf	efgtoa@sign& (0+255),w,b
 48055   0114EA  B4D8               	btfsc	status,2,c
 48056   0114EC  EF7A  F08A         	goto	u26821
 48057   0114F0  EF7C  F08A         	goto	u26820
 48058   0114F4                     u26821:
 48059   0114F4  EF87  F08A         	goto	l20115
 48060   0114F8                     u26820:
 48061   0114F8                     
 48062                           ; BSR set to: 5
 48063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 48064   0114F8  078D               	decf	efgtoa@n& (0+255),f,b
 48065   0114FA  A0D8               	btfss	status,0,c
 48066   0114FC  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 48067   0114FE  0E28               	movlw	low _dbuf
 48068   011500  258D               	addwf	efgtoa@n& (0+255),w,b
 48069   011502  6ED9               	movwf	fsr2l,c
 48070   011504  0E08               	movlw	high _dbuf
 48071   011506  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48072   011508  6EDA               	movwf	fsr2h,c
 48073   01150A  C588  F4DF         	movff	efgtoa@sign,indf2
 48074   01150E                     l20115:
 48075                           
 48076                           ; BSR set to: 5
 48077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 48078   01150E  5186               	movf	efgtoa@i& (0+255),w,b
 48079   011510  5F7C               	subwf	efgtoa@w& (0+255),f,b
 48080   011512  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48081   011514  5B7D               	subwfb	(efgtoa@w+1)& (0+255),f,b
 48082   011516                     
 48083                           ; BSR set to: 5
 48084                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 48085   011516  C560  F515         	movff	efgtoa@fp,pad@fp
 48086   01151A  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 48087   01151E  0E28               	movlw	low _dbuf
 48088   011520  258D               	addwf	efgtoa@n& (0+255),w,b
 48089   011522  6E17               	movwf	pad@buf^(0+1280),c
 48090   011524  0E08               	movlw	high _dbuf
 48091   011526  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48092   011528  6E18               	movwf	(pad@buf+1)^(0+1280),c
 48093   01152A  C57C  F519         	movff	efgtoa@w,pad@p
 48094   01152E  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 48095   011532  EC1F  F0F6         	call	_pad	;wreg free
 48096   011536                     l3387:
 48097   011536  0012               	return		;funcret
 48098   011538                     __end_of_efgtoa:
 48099                           	callstack 0
 48100                           
 48101 ;; *************** function _strcpy *****************
 48102 ;; Defined at:
 48103 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
 48104 ;; Parameters:    Size  Location     Type
 48105 ;;  dest            2    3[COMRAM] PTR unsigned char 
 48106 ;;		 -> dbuf(80), 
 48107 ;;  src             2    5[COMRAM] PTR const unsigned char 
 48108 ;;		 -> STR_203(4), STR_200(4), 
 48109 ;; Auto vars:     Size  Location     Type
 48110 ;;  d               2    7[COMRAM] PTR unsigned char 
 48111 ;;		 -> dbuf(80), 
 48112 ;; Return value:  Size  Location     Type
 48113 ;;                  2    3[COMRAM] PTR unsigned char 
 48114 ;; Registers used:
 48115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 48116 ;; Tracked objects:
 48117 ;;		On entry : 0/0
 48118 ;;		On exit  : 0/0
 48119 ;;		Unchanged: 0/0
 48120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48124 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48125 ;;Total ram usage:        6 bytes
 48126 ;; Hardware stack levels used: 1
 48127 ;; Hardware stack levels required when called: 1
 48128 ;; This function calls:
 48129 ;;		Nothing
 48130 ;; This function is called by:
 48131 ;;		_efgtoa
 48132 ;; This function uses a non-reentrant model
 48133 ;;
 48134                           
 48135                           	psect	text129
 48136   01FD7C                     __ptext129:
 48137                           	callstack 0
 48138   01FD7C                     _strcpy:
 48139                           	callstack 114
 48140   01FD7C  C504  F508         	movff	strcpy@dest,strcpy@d
 48141   01FD80  C505  F509         	movff	strcpy@dest+1,strcpy@d+1
 48142   01FD84                     l19799:
 48143   01FD84  C506  F4F6         	movff	strcpy@src,tblptrl
 48144   01FD88  C507  F4F7         	movff	strcpy@src+1,tblptrh
 48145   01FD8C  4A06               	infsnz	strcpy@src^(0+1280),f,c
 48146   01FD8E  2A07               	incf	(strcpy@src+1)^(0+1280),f,c
 48147   01FD90                     	if	0	;tblptru may be non-zero
 48148   01FD90                     	endif
 48149   01FD90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48150   01FD90  0E00               	movlw	low (__mediumconst shr (0+16))
 48151   01FD92  6EF8               	movwf	tblptru,c
 48152   01FD94                     	endif
 48153   01FD94  C508  F4D9         	movff	strcpy@d,fsr2l
 48154   01FD98  C509  F4DA         	movff	strcpy@d+1,fsr2h
 48155   01FD9C  4A08               	infsnz	strcpy@d^(0+1280),f,c
 48156   01FD9E  2A09               	incf	(strcpy@d+1)^(0+1280),f,c
 48157   01FDA0  0008               	tblrd		*
 48158   01FDA2  C4F5 F4DF          	movff	tablat,indf2
 48159   01FDA6  50DF               	movf	indf2,w,c
 48160   01FDA8  A4D8               	btfss	status,2,c
 48161   01FDAA  EFD9  F0FE         	goto	u26241
 48162   01FDAE  EFDB  F0FE         	goto	u26240
 48163   01FDB2                     u26241:
 48164   01FDB2  EFC2  F0FE         	goto	l19799
 48165   01FDB6                     u26240:
 48166   01FDB6  0012               	return		;funcret
 48167   01FDB8                     __end_of_strcpy:
 48168                           	callstack 0
 48169                           
 48170 ;; *************** function _memcpy *****************
 48171 ;; Defined at:
 48172 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
 48173 ;; Parameters:    Size  Location     Type
 48174 ;;  d1              2    3[COMRAM] PTR void 
 48175 ;;		 -> fs$win(512), dbuf(80), pb$fp(2), f_gets@s(4), 
 48176 ;;		 -> f_rename@djn(40), f_rename@buf(32), cin_file(512), fs(564), 
 48177 ;;		 -> disk_buf(128), NULL(0), tmp_buf(512), 
 48178 ;;  s1              2    5[COMRAM] PTR const void 
 48179 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), fs$win(512), 
 48180 ;;		 -> pb$buf(64), dbuf(80), f_printf@pb(70), f_puts@pb(70), 
 48181 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 48182 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), in_fl(546), 
 48183 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 48184 ;;  n               2    7[COMRAM] unsigned int 
 48185 ;; Auto vars:     Size  Location     Type
 48186 ;;  s               2   12[COMRAM] PTR const unsigned char 
 48187 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), fs$win(512), 
 48188 ;;		 -> pb$buf(64), dbuf(80), f_printf@pb(70), f_puts@pb(70), 
 48189 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 48190 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), in_fl(546), 
 48191 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 48192 ;;  d               2   10[COMRAM] PTR unsigned char 
 48193 ;;		 -> fs$win(512), dbuf(80), pb$fp(2), f_gets@s(4), 
 48194 ;;		 -> f_rename@djn(40), f_rename@buf(32), cin_file(512), fs(564), 
 48195 ;;		 -> disk_buf(128), NULL(0), tmp_buf(512), 
 48196 ;;  tmp             1    9[COMRAM] unsigned char 
 48197 ;; Return value:  Size  Location     Type
 48198 ;;                  2    3[COMRAM] PTR void 
 48199 ;; Registers used:
 48200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48201 ;; Tracked objects:
 48202 ;;		On entry : 0/0
 48203 ;;		On exit  : 0/0
 48204 ;;		Unchanged: 0/0
 48205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48207 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48209 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48210 ;;Total ram usage:       11 bytes
 48211 ;; Hardware stack levels used: 1
 48212 ;; Hardware stack levels required when called: 1
 48213 ;; This function calls:
 48214 ;;		Nothing
 48215 ;; This function is called by:
 48216 ;;		_dir_register
 48217 ;;		_f_read
 48218 ;;		_f_write
 48219 ;;		_efgtoa
 48220 ;;		_f_mkdir
 48221 ;;		_f_rename
 48222 ;; This function uses a non-reentrant model
 48223 ;;
 48224                           
 48225                           	psect	text130
 48226   01FA00                     __ptext130:
 48227                           	callstack 0
 48228   01FA00                     _memcpy:
 48229                           	callstack 114
 48230   01FA00  C506  F50D         	movff	memcpy@s1,memcpy@s
 48231   01FA04  C507  F50E         	movff	memcpy@s1+1,memcpy@s+1
 48232   01FA08  C504  F50B         	movff	memcpy@d1,memcpy@d
 48233   01FA0C  C505  F50C         	movff	memcpy@d1+1,memcpy@d+1
 48234   01FA10  EF1A  F0FD         	goto	l19313
 48235   01FA14                     l19305:
 48236   01FA14  C50D  F4D9         	movff	memcpy@s,fsr2l
 48237   01FA18  C50E  F4DA         	movff	memcpy@s+1,fsr2h
 48238   01FA1C  50DF               	movf	indf2,w,c
 48239   01FA1E  6E0A               	movwf	memcpy@tmp^(0+1280),c
 48240   01FA20  4A0D               	infsnz	memcpy@s^(0+1280),f,c
 48241   01FA22  2A0E               	incf	(memcpy@s+1)^(0+1280),f,c
 48242   01FA24  C50B  F4D9         	movff	memcpy@d,fsr2l
 48243   01FA28  C50C  F4DA         	movff	memcpy@d+1,fsr2h
 48244   01FA2C  C50A  F4DF         	movff	memcpy@tmp,indf2
 48245   01FA30  4A0B               	infsnz	memcpy@d^(0+1280),f,c
 48246   01FA32  2A0C               	incf	(memcpy@d+1)^(0+1280),f,c
 48247   01FA34                     l19313:
 48248   01FA34  0608               	decf	memcpy@n^(0+1280),f,c
 48249   01FA36  A0D8               	btfss	status,0,c
 48250   01FA38  0609               	decf	(memcpy@n+1)^(0+1280),f,c
 48251   01FA3A  2808               	incf	memcpy@n^(0+1280),w,c
 48252   01FA3C  E106               	bnz	u25411
 48253   01FA3E  2809               	incf	(memcpy@n+1)^(0+1280),w,c
 48254   01FA40  A4D8               	btfss	status,2,c
 48255   01FA42  EF25  F0FD         	goto	u25411
 48256   01FA46  EF27  F0FD         	goto	u25410
 48257   01FA4A                     u25411:
 48258   01FA4A  EF0A  F0FD         	goto	l19305
 48259   01FA4E                     u25410:
 48260   01FA4E  0012               	return		;funcret
 48261   01FA50                     __end_of_memcpy:
 48262                           	callstack 0
 48263                           
 48264 ;; *************** function _labs *****************
 48265 ;; Defined at:
 48266 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
 48267 ;; Parameters:    Size  Location     Type
 48268 ;;  a               4    3[COMRAM] long 
 48269 ;; Auto vars:     Size  Location     Type
 48270 ;;		None
 48271 ;; Return value:  Size  Location     Type
 48272 ;;                  4    3[COMRAM] long 
 48273 ;; Registers used:
 48274 ;;		wreg, status,2, status,0
 48275 ;; Tracked objects:
 48276 ;;		On entry : 0/0
 48277 ;;		On exit  : 0/0
 48278 ;;		Unchanged: 0/0
 48279 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48282 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48283 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48284 ;;Total ram usage:        8 bytes
 48285 ;; Hardware stack levels used: 1
 48286 ;; Hardware stack levels required when called: 1
 48287 ;; This function calls:
 48288 ;;		Nothing
 48289 ;; This function is called by:
 48290 ;;		_efgtoa
 48291 ;; This function uses a non-reentrant model
 48292 ;;
 48293                           
 48294                           	psect	text131
 48295   01F864                     __ptext131:
 48296                           	callstack 0
 48297   01F864                     _labs:
 48298                           	callstack 114
 48299   01F864  BE07               	btfsc	(labs@a+3)^(0+1280),7,c
 48300   01F866  EF37  F0FC         	goto	u26251
 48301   01F86A  EF39  F0FC         	goto	u26250
 48302   01F86E                     u26251:
 48303   01F86E  EF43  F0FC         	goto	l19805
 48304   01F872                     u26250:
 48305   01F872  C504  F504         	movff	labs@a,?_labs
 48306   01F876  C505  F505         	movff	labs@a+1,?_labs+1
 48307   01F87A  C506  F506         	movff	labs@a+2,?_labs+2
 48308   01F87E  C507  F507         	movff	labs@a+3,?_labs+3
 48309   01F882  EF5C  F0FC         	goto	l3575
 48310   01F886                     l19805:
 48311   01F886  C504  F508         	movff	labs@a,??_labs
 48312   01F88A  C505  F509         	movff	labs@a+1,??_labs+1
 48313   01F88E  C506  F50A         	movff	labs@a+2,??_labs+2
 48314   01F892  C507  F50B         	movff	labs@a+3,??_labs+3
 48315   01F896  1E08               	comf	??_labs^(0+1280),f,c
 48316   01F898  1E09               	comf	(??_labs+1)^(0+1280),f,c
 48317   01F89A  1E0A               	comf	(??_labs+2)^(0+1280),f,c
 48318   01F89C  1E0B               	comf	(??_labs+3)^(0+1280),f,c
 48319   01F89E  2A08               	incf	??_labs^(0+1280),f,c
 48320   01F8A0  0E00               	movlw	0
 48321   01F8A2  2209               	addwfc	(??_labs+1)^(0+1280),f,c
 48322   01F8A4  220A               	addwfc	(??_labs+2)^(0+1280),f,c
 48323   01F8A6  220B               	addwfc	(??_labs+3)^(0+1280),f,c
 48324   01F8A8  C508  F504         	movff	??_labs,?_labs
 48325   01F8AC  C509  F505         	movff	??_labs+1,?_labs+1
 48326   01F8B0  C50A  F506         	movff	??_labs+2,?_labs+2
 48327   01F8B4  C50B  F507         	movff	??_labs+3,?_labs+3
 48328   01F8B8                     l3575:
 48329   01F8B8  0012               	return		;funcret
 48330   01F8BA                     __end_of_labs:
 48331                           	callstack 0
 48332                           
 48333 ;; *************** function _floorf *****************
 48334 ;; Defined at:
 48335 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
 48336 ;; Parameters:    Size  Location     Type
 48337 ;;  x               4   67[COMRAM] float 
 48338 ;; Auto vars:     Size  Location     Type
 48339 ;;  u               4   83[COMRAM] struct .
 48340 ;;  m               4   77[COMRAM] unsigned long 
 48341 ;;  e               2   81[COMRAM] int 
 48342 ;; Return value:  Size  Location     Type
 48343 ;;                  4   67[COMRAM] float 
 48344 ;; Registers used:
 48345 ;;		wreg, status,2, status,0
 48346 ;; Tracked objects:
 48347 ;;		On entry : 0/0
 48348 ;;		On exit  : 0/0
 48349 ;;		Unchanged: 0/0
 48350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48352 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48353 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48354 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48355 ;;Total ram usage:       20 bytes
 48356 ;; Hardware stack levels used: 1
 48357 ;; Hardware stack levels required when called: 1
 48358 ;; This function calls:
 48359 ;;		Nothing
 48360 ;; This function is called by:
 48361 ;;		_efgtoa
 48362 ;; This function uses a non-reentrant model
 48363 ;;
 48364                           
 48365                           	psect	text132
 48366   01A104                     __ptext132:
 48367                           	callstack 0
 48368   01A104                     _floorf:
 48369                           	callstack 114
 48370   01A104  C81C  F554         	movff	floorf@F521,floorf@u
 48371   01A108  C81D  F555         	movff	floorf@F521+1,floorf@u+1
 48372   01A10C  C81E  F556         	movff	floorf@F521+2,floorf@u+2
 48373   01A110  C81F  F557         	movff	floorf@F521+3,floorf@u+3
 48374   01A114  C544  F554         	movff	floorf@x,floorf@u
 48375   01A118  C545  F555         	movff	floorf@x+1,floorf@u+1
 48376   01A11C  C546  F556         	movff	floorf@x+2,floorf@u+2
 48377   01A120  C547  F557         	movff	floorf@x+3,floorf@u+3
 48378   01A124  0E81               	movlw	129
 48379   01A126  6E48               	movwf	??_floorf^(0+1280),c
 48380   01A128  0EFF               	movlw	255
 48381   01A12A  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48382   01A12C  C554  F54A         	movff	floorf@u,??_floorf+2
 48383   01A130  C555  F54B         	movff	floorf@u+1,??_floorf+3
 48384   01A134  C556  F54C         	movff	floorf@u+2,??_floorf+4
 48385   01A138  C557  F54D         	movff	floorf@u+3,??_floorf+5
 48386   01A13C  0E18               	movlw	24
 48387   01A13E  EFA6  F0D0         	goto	u26260
 48388   01A142                     u26265:
 48389   01A142  90D8               	bcf	status,0,c
 48390   01A144  324D               	rrcf	(??_floorf+5)^(0+1280),f,c
 48391   01A146  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 48392   01A148  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48393   01A14A  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48394   01A14C                     u26260:
 48395   01A14C  2EE8               	decfsz	wreg,f,c
 48396   01A14E  EFA1  F0D0         	goto	u26265
 48397   01A152  504A               	movf	(??_floorf+2)^(0+1280),w,c
 48398   01A154  2448               	addwf	??_floorf^(0+1280),w,c
 48399   01A156  6E52               	movwf	floorf@e^(0+1280),c
 48400   01A158  0E00               	movlw	0
 48401   01A15A  2049               	addwfc	(??_floorf+1)^(0+1280),w,c
 48402   01A15C  6E53               	movwf	(floorf@e+1)^(0+1280),c
 48403   01A15E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 48404   01A160  EFBB  F0D0         	goto	u26271
 48405   01A164  5053               	movf	(floorf@e+1)^(0+1280),w,c
 48406   01A166  E109               	bnz	u26270
 48407   01A168  0E17               	movlw	23
 48408   01A16A  5C52               	subwf	floorf@e^(0+1280),w,c
 48409   01A16C  A0D8               	btfss	status,0,c
 48410   01A16E  EFBB  F0D0         	goto	u26271
 48411   01A172  EFBD  F0D0         	goto	u26270
 48412   01A176                     u26271:
 48413   01A176  EFC7  F0D0         	goto	l19815
 48414   01A17A                     u26270:
 48415   01A17A                     l19813:
 48416   01A17A  C544  F544         	movff	floorf@x,?_floorf
 48417   01A17E  C545  F545         	movff	floorf@x+1,?_floorf+1
 48418   01A182  C546  F546         	movff	floorf@x+2,?_floorf+2
 48419   01A186  C547  F547         	movff	floorf@x+3,?_floorf+3
 48420   01A18A  EF8A  F0D1         	goto	l3561
 48421   01A18E                     l19815:
 48422   01A18E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 48423   01A190  EFCC  F0D0         	goto	u26281
 48424   01A194  EFCE  F0D0         	goto	u26280
 48425   01A198                     u26281:
 48426   01A198  EF3E  F0D1         	goto	l19825
 48427   01A19C                     u26280:
 48428   01A19C  C552  F548         	movff	floorf@e,??_floorf
 48429   01A1A0  0EFF               	movlw	255
 48430   01A1A2  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48431   01A1A4  0EFF               	movlw	255
 48432   01A1A6  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48433   01A1A8  0E7F               	movlw	127
 48434   01A1AA  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48435   01A1AC  0E00               	movlw	0
 48436   01A1AE  6E4C               	movwf	(??_floorf+4)^(0+1280),c
 48437   01A1B0                     u26295:
 48438   01A1B0  6648               	tstfsz	??_floorf^(0+1280),c
 48439   01A1B2  EFDD  F0D0         	goto	u26296
 48440   01A1B6  EFE5  F0D0         	goto	u26297
 48441   01A1BA                     u26296:
 48442   01A1BA  344C               	rlcf	(??_floorf+4)^(0+1280),w,c
 48443   01A1BC  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 48444   01A1BE  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48445   01A1C0  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48446   01A1C2  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48447   01A1C4  2E48               	decfsz	??_floorf^(0+1280),f,c
 48448   01A1C6  EFD8  F0D0         	goto	u26295
 48449   01A1CA                     u26297:
 48450   01A1CA  C549  F54E         	movff	??_floorf+1,floorf@m
 48451   01A1CE  C54A  F54F         	movff	??_floorf+2,floorf@m+1
 48452   01A1D2  C54B  F550         	movff	??_floorf+3,floorf@m+2
 48453   01A1D6  C54C  F551         	movff	??_floorf+4,floorf@m+3
 48454   01A1DA  504E               	movf	floorf@m^(0+1280),w,c
 48455   01A1DC  1454               	andwf	floorf@u^(0+1280),w,c
 48456   01A1DE  6E48               	movwf	??_floorf^(0+1280),c
 48457   01A1E0  504F               	movf	(floorf@m+1)^(0+1280),w,c
 48458   01A1E2  1455               	andwf	(floorf@u+1)^(0+1280),w,c
 48459   01A1E4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48460   01A1E6  5050               	movf	(floorf@m+2)^(0+1280),w,c
 48461   01A1E8  1456               	andwf	(floorf@u+2)^(0+1280),w,c
 48462   01A1EA  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48463   01A1EC  5051               	movf	(floorf@m+3)^(0+1280),w,c
 48464   01A1EE  1457               	andwf	(floorf@u+3)^(0+1280),w,c
 48465   01A1F0  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48466   01A1F2  5048               	movf	??_floorf^(0+1280),w,c
 48467   01A1F4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48468   01A1F6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48469   01A1F8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48470   01A1FA  A4D8               	btfss	status,2,c
 48471   01A1FC  EF02  F0D1         	goto	u26301
 48472   01A200  EF04  F0D1         	goto	u26300
 48473   01A204                     u26301:
 48474   01A204  EF06  F0D1         	goto	l19821
 48475   01A208                     u26300:
 48476   01A208  EFBD  F0D0         	goto	l19813
 48477   01A20C                     l19821:
 48478   01A20C  C554  F548         	movff	floorf@u,??_floorf
 48479   01A210  C555  F549         	movff	floorf@u+1,??_floorf+1
 48480   01A214  C556  F54A         	movff	floorf@u+2,??_floorf+2
 48481   01A218  C557  F54B         	movff	floorf@u+3,??_floorf+3
 48482   01A21C  0E20               	movlw	32
 48483   01A21E  EF16  F0D1         	goto	u26310
 48484   01A222                     u26315:
 48485   01A222  90D8               	bcf	status,0,c
 48486   01A224  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48487   01A226  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48488   01A228  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48489   01A22A  3248               	rrcf	??_floorf^(0+1280),f,c
 48490   01A22C                     u26310:
 48491   01A22C  2EE8               	decfsz	wreg,f,c
 48492   01A22E  EF11  F0D1         	goto	u26315
 48493   01A232  5048               	movf	??_floorf^(0+1280),w,c
 48494   01A234  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48495   01A236  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48496   01A238  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48497   01A23A  B4D8               	btfsc	status,2,c
 48498   01A23C  EF22  F0D1         	goto	u26321
 48499   01A240  EF24  F0D1         	goto	u26320
 48500   01A244                     u26321:
 48501   01A244  EF2C  F0D1         	goto	l3564
 48502   01A248                     u26320:
 48503   01A248  504E               	movf	floorf@m^(0+1280),w,c
 48504   01A24A  2654               	addwf	floorf@u^(0+1280),f,c
 48505   01A24C  504F               	movf	(floorf@m+1)^(0+1280),w,c
 48506   01A24E  2255               	addwfc	(floorf@u+1)^(0+1280),f,c
 48507   01A250  5050               	movf	(floorf@m+2)^(0+1280),w,c
 48508   01A252  2256               	addwfc	(floorf@u+2)^(0+1280),f,c
 48509   01A254  5051               	movf	(floorf@m+3)^(0+1280),w,c
 48510   01A256  2257               	addwfc	(floorf@u+3)^(0+1280),f,c
 48511   01A258                     l3564:
 48512   01A258  1C4E               	comf	floorf@m^(0+1280),w,c
 48513   01A25A  6E48               	movwf	??_floorf^(0+1280),c
 48514   01A25C  1C4F               	comf	(floorf@m+1)^(0+1280),w,c
 48515   01A25E  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48516   01A260  1C50               	comf	(floorf@m+2)^(0+1280),w,c
 48517   01A262  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48518   01A264  1C51               	comf	(floorf@m+3)^(0+1280),w,c
 48519   01A266  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48520   01A268  5048               	movf	??_floorf^(0+1280),w,c
 48521   01A26A  1654               	andwf	floorf@u^(0+1280),f,c
 48522   01A26C  5049               	movf	(??_floorf+1)^(0+1280),w,c
 48523   01A26E  1655               	andwf	(floorf@u+1)^(0+1280),f,c
 48524   01A270  504A               	movf	(??_floorf+2)^(0+1280),w,c
 48525   01A272  1656               	andwf	(floorf@u+2)^(0+1280),f,c
 48526   01A274  504B               	movf	(??_floorf+3)^(0+1280),w,c
 48527   01A276  1657               	andwf	(floorf@u+3)^(0+1280),f,c
 48528   01A278  EF82  F0D1         	goto	l19833
 48529   01A27C                     l19825:
 48530   01A27C  C554  F548         	movff	floorf@u,??_floorf
 48531   01A280  C555  F549         	movff	floorf@u+1,??_floorf+1
 48532   01A284  C556  F54A         	movff	floorf@u+2,??_floorf+2
 48533   01A288  C557  F54B         	movff	floorf@u+3,??_floorf+3
 48534   01A28C  0E20               	movlw	32
 48535   01A28E  EF4E  F0D1         	goto	u26330
 48536   01A292                     u26335:
 48537   01A292  90D8               	bcf	status,0,c
 48538   01A294  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48539   01A296  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48540   01A298  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48541   01A29A  3248               	rrcf	??_floorf^(0+1280),f,c
 48542   01A29C                     u26330:
 48543   01A29C  2EE8               	decfsz	wreg,f,c
 48544   01A29E  EF49  F0D1         	goto	u26335
 48545   01A2A2  5048               	movf	??_floorf^(0+1280),w,c
 48546   01A2A4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48547   01A2A6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48548   01A2A8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48549   01A2AA  A4D8               	btfss	status,2,c
 48550   01A2AC  EF5A  F0D1         	goto	u26341
 48551   01A2B0  EF5C  F0D1         	goto	u26340
 48552   01A2B4                     u26341:
 48553   01A2B4  EF66  F0D1         	goto	l19829
 48554   01A2B8                     u26340:
 48555   01A2B8  0E00               	movlw	0
 48556   01A2BA  6E54               	movwf	floorf@u^(0+1280),c
 48557   01A2BC  0E00               	movlw	0
 48558   01A2BE  6E55               	movwf	(floorf@u+1)^(0+1280),c
 48559   01A2C0  0E00               	movlw	0
 48560   01A2C2  6E56               	movwf	(floorf@u+2)^(0+1280),c
 48561   01A2C4  0E00               	movlw	0
 48562   01A2C6  6E57               	movwf	(floorf@u+3)^(0+1280),c
 48563   01A2C8  EF82  F0D1         	goto	l19833
 48564   01A2CC                     l19829:
 48565   01A2CC  90D8               	bcf	status,0,c
 48566   01A2CE  3454               	rlcf	floorf@u^(0+1280),w,c
 48567   01A2D0  6E48               	movwf	??_floorf^(0+1280),c
 48568   01A2D2  3455               	rlcf	(floorf@u+1)^(0+1280),w,c
 48569   01A2D4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48570   01A2D6  3456               	rlcf	(floorf@u+2)^(0+1280),w,c
 48571   01A2D8  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48572   01A2DA  3457               	rlcf	(floorf@u+3)^(0+1280),w,c
 48573   01A2DC  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48574   01A2DE  5048               	movf	??_floorf^(0+1280),w,c
 48575   01A2E0  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48576   01A2E2  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48577   01A2E4  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48578   01A2E6  B4D8               	btfsc	status,2,c
 48579   01A2E8  EF78  F0D1         	goto	u26351
 48580   01A2EC  EF7A  F0D1         	goto	u26350
 48581   01A2F0                     u26351:
 48582   01A2F0  EF82  F0D1         	goto	l19833
 48583   01A2F4                     u26350:
 48584   01A2F4  0E00               	movlw	0
 48585   01A2F6  6E54               	movwf	floorf@u^(0+1280),c
 48586   01A2F8  0E00               	movlw	0
 48587   01A2FA  6E55               	movwf	(floorf@u+1)^(0+1280),c
 48588   01A2FC  0E80               	movlw	128
 48589   01A2FE  6E56               	movwf	(floorf@u+2)^(0+1280),c
 48590   01A300  0EBF               	movlw	191
 48591   01A302  6E57               	movwf	(floorf@u+3)^(0+1280),c
 48592   01A304                     l19833:
 48593   01A304  C554  F544         	movff	floorf@u,?_floorf
 48594   01A308  C555  F545         	movff	floorf@u+1,?_floorf+1
 48595   01A30C  C556  F546         	movff	floorf@u+2,?_floorf+2
 48596   01A310  C557  F547         	movff	floorf@u+3,?_floorf+3
 48597   01A314                     l3561:
 48598   01A314  0012               	return		;funcret
 48599   01A316                     __end_of_floorf:
 48600                           	callstack 0
 48601                           
 48602 ;; *************** function ___fpclassifyf *****************
 48603 ;; Defined at:
 48604 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
 48605 ;; Parameters:    Size  Location     Type
 48606 ;;  x               4    3[COMRAM] float 
 48607 ;; Auto vars:     Size  Location     Type
 48608 ;;  u               4   13[COMRAM] struct .
 48609 ;;  e               2   11[COMRAM] int 
 48610 ;; Return value:  Size  Location     Type
 48611 ;;                  2    3[COMRAM] int 
 48612 ;; Registers used:
 48613 ;;		wreg, status,2, status,0
 48614 ;; Tracked objects:
 48615 ;;		On entry : 0/0
 48616 ;;		On exit  : 0/0
 48617 ;;		Unchanged: 0/0
 48618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48620 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48622 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48623 ;;Total ram usage:       14 bytes
 48624 ;; Hardware stack levels used: 1
 48625 ;; Hardware stack levels required when called: 1
 48626 ;; This function calls:
 48627 ;;		Nothing
 48628 ;; This function is called by:
 48629 ;;		_efgtoa
 48630 ;;		_ftoa
 48631 ;; This function uses a non-reentrant model
 48632 ;;
 48633                           
 48634                           	psect	text133
 48635   01D544                     __ptext133:
 48636                           	callstack 0
 48637   01D544                     ___fpclassifyf:
 48638                           	callstack 114
 48639   01D544  C820  F50E         	movff	___fpclassifyf@F465,___fpclassifyf@u
 48640   01D548  C821  F50F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 48641   01D54C  C822  F510         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 48642   01D550  C823  F511         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 48643   01D554  C504  F50E         	movff	___fpclassifyf@x,___fpclassifyf@u
 48644   01D558  C505  F50F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 48645   01D55C  C506  F510         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 48646   01D560  C507  F511         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 48647   01D564  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 48648   01D568  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 48649   01D56C  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 48650   01D570  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 48651   01D574  0E18               	movlw	24
 48652   01D576  EFC2  F0EA         	goto	u25420
 48653   01D57A                     u25425:
 48654   01D57A  90D8               	bcf	status,0,c
 48655   01D57C  320B               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 48656   01D57E  320A               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 48657   01D580  3209               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 48658   01D582  3208               	rrcf	??___fpclassifyf^(0+1280),f,c
 48659   01D584                     u25420:
 48660   01D584  2EE8               	decfsz	wreg,f,c
 48661   01D586  EFBD  F0EA         	goto	u25425
 48662   01D58A  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48663   01D58C  6E0C               	movwf	___fpclassifyf@e^(0+1280),c
 48664   01D58E  6A0D               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 48665   01D590  500C               	movf	___fpclassifyf@e^(0+1280),w,c
 48666   01D592  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 48667   01D594  A4D8               	btfss	status,2,c
 48668   01D596  EFCF  F0EA         	goto	u25431
 48669   01D59A  EFD1  F0EA         	goto	u25430
 48670   01D59E                     u25431:
 48671   01D59E  EFF1  F0EA         	goto	l19327
 48672   01D5A2                     u25430:
 48673   01D5A2  90D8               	bcf	status,0,c
 48674   01D5A4  340E               	rlcf	___fpclassifyf@u^(0+1280),w,c
 48675   01D5A6  6E08               	movwf	??___fpclassifyf^(0+1280),c
 48676   01D5A8  340F               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 48677   01D5AA  6E09               	movwf	(??___fpclassifyf+1)^(0+1280),c
 48678   01D5AC  3410               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 48679   01D5AE  6E0A               	movwf	(??___fpclassifyf+2)^(0+1280),c
 48680   01D5B0  3411               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 48681   01D5B2  6E0B               	movwf	(??___fpclassifyf+3)^(0+1280),c
 48682   01D5B4  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48683   01D5B6  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 48684   01D5B8  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 48685   01D5BA  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 48686   01D5BC  A4D8               	btfss	status,2,c
 48687   01D5BE  EFE3  F0EA         	goto	u25441
 48688   01D5C2  EFE5  F0EA         	goto	u25440
 48689   01D5C6                     u25441:
 48690   01D5C6  EFEB  F0EA         	goto	l19323
 48691   01D5CA                     u25440:
 48692   01D5CA  0E00               	movlw	0
 48693   01D5CC  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48694   01D5CE  0E02               	movlw	2
 48695   01D5D0  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48696   01D5D2  EF20  F0EB         	goto	l3226
 48697   01D5D6                     l19323:
 48698   01D5D6  0E00               	movlw	0
 48699   01D5D8  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48700   01D5DA  0E03               	movlw	3
 48701   01D5DC  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48702   01D5DE  EF20  F0EB         	goto	l3226
 48703   01D5E2                     l19327:
 48704   01D5E2  280C               	incf	___fpclassifyf@e^(0+1280),w,c
 48705   01D5E4  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 48706   01D5E6  A4D8               	btfss	status,2,c
 48707   01D5E8  EFF8  F0EA         	goto	u25451
 48708   01D5EC  EFFA  F0EA         	goto	u25450
 48709   01D5F0                     u25451:
 48710   01D5F0  EF1C  F0EB         	goto	l19333
 48711   01D5F4                     u25450:
 48712   01D5F4  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 48713   01D5F8  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 48714   01D5FC  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 48715   01D600  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 48716   01D604  0E09               	movlw	9
 48717   01D606                     u25465:
 48718   01D606  90D8               	bcf	status,0,c
 48719   01D608  3608               	rlcf	??___fpclassifyf^(0+1280),f,c
 48720   01D60A  3609               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 48721   01D60C  360A               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 48722   01D60E  360B               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 48723   01D610  2EE8               	decfsz	wreg,f,c
 48724   01D612  EF03  F0EB         	goto	u25465
 48725   01D616  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48726   01D618  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 48727   01D61A  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 48728   01D61C  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 48729   01D61E  B4D8               	btfsc	status,2,c
 48730   01D620  EF14  F0EB         	goto	u25471
 48731   01D624  EF17  F0EB         	goto	u25470
 48732   01D628                     u25471:
 48733   01D628  0E01               	movlw	1
 48734   01D62A  EF18  F0EB         	goto	u25480
 48735   01D62E                     u25470:
 48736   01D62E  0E00               	movlw	0
 48737   01D630                     u25480:
 48738   01D630  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48739   01D632  6A05               	clrf	(?___fpclassifyf+1)^(0+1280),c
 48740   01D634  EF20  F0EB         	goto	l3226
 48741   01D638                     l19333:
 48742   01D638  0E00               	movlw	0
 48743   01D63A  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48744   01D63C  0E04               	movlw	4
 48745   01D63E  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48746   01D640                     l3226:
 48747   01D640  0012               	return		;funcret
 48748   01D642                     __end_of___fpclassifyf:
 48749                           	callstack 0
 48750                           
 48751 ;; *************** function ___fltol *****************
 48752 ;; Defined at:
 48753 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 48754 ;; Parameters:    Size  Location     Type
 48755 ;;  f1              4    3[COMRAM] int 
 48756 ;; Auto vars:     Size  Location     Type
 48757 ;;  exp1            1   12[COMRAM] unsigned char 
 48758 ;;  sign1           1   11[COMRAM] unsigned char 
 48759 ;; Return value:  Size  Location     Type
 48760 ;;                  4    3[COMRAM] long 
 48761 ;; Registers used:
 48762 ;;		wreg, status,2, status,0
 48763 ;; Tracked objects:
 48764 ;;		On entry : 0/0
 48765 ;;		On exit  : 0/0
 48766 ;;		Unchanged: 0/0
 48767 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48771 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48772 ;;Total ram usage:       10 bytes
 48773 ;; Hardware stack levels used: 1
 48774 ;; Hardware stack levels required when called: 1
 48775 ;; This function calls:
 48776 ;;		Nothing
 48777 ;; This function is called by:
 48778 ;;		_efgtoa
 48779 ;;		_ftoa
 48780 ;; This function uses a non-reentrant model
 48781 ;;
 48782                           
 48783                           	psect	text134
 48784   01D038                     __ptext134:
 48785                           	callstack 0
 48786   01D038                     ___fltol:
 48787                           	callstack 114
 48788   01D038  3406               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 48789   01D03A  3407               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 48790   01D03C  6E0D               	movwf	___fltol@exp1^(0+1280),c
 48791   01D03E  500D               	movf	___fltol@exp1^(0+1280),w,c
 48792   01D040  A4D8               	btfss	status,2,c
 48793   01D042  EF25  F0E8         	goto	u26121
 48794   01D046  EF27  F0E8         	goto	u26120
 48795   01D04A                     u26121:
 48796   01D04A  EF31  F0E8         	goto	l19739
 48797   01D04E                     u26120:
 48798   01D04E                     l19735:
 48799   01D04E  0E00               	movlw	0
 48800   01D050  6E04               	movwf	?___fltol^(0+1280),c
 48801   01D052  0E00               	movlw	0
 48802   01D054  6E05               	movwf	(?___fltol+1)^(0+1280),c
 48803   01D056  0E00               	movlw	0
 48804   01D058  6E06               	movwf	(?___fltol+2)^(0+1280),c
 48805   01D05A  0E00               	movlw	0
 48806   01D05C  6E07               	movwf	(?___fltol+3)^(0+1280),c
 48807   01D05E  EF9E  F0E8         	goto	l2842
 48808   01D062                     l19739:
 48809   01D062  C504  F508         	movff	___fltol@f1,??___fltol
 48810   01D066  C505  F509         	movff	___fltol@f1+1,??___fltol+1
 48811   01D06A  C506  F50A         	movff	___fltol@f1+2,??___fltol+2
 48812   01D06E  C507  F50B         	movff	___fltol@f1+3,??___fltol+3
 48813   01D072  0E20               	movlw	32
 48814   01D074  EF41  F0E8         	goto	u26130
 48815   01D078                     u26135:
 48816   01D078  90D8               	bcf	status,0,c
 48817   01D07A  320B               	rrcf	(??___fltol+3)^(0+1280),f,c
 48818   01D07C  320A               	rrcf	(??___fltol+2)^(0+1280),f,c
 48819   01D07E  3209               	rrcf	(??___fltol+1)^(0+1280),f,c
 48820   01D080  3208               	rrcf	??___fltol^(0+1280),f,c
 48821   01D082                     u26130:
 48822   01D082  2EE8               	decfsz	wreg,f,c
 48823   01D084  EF3C  F0E8         	goto	u26135
 48824   01D088  5008               	movf	??___fltol^(0+1280),w,c
 48825   01D08A  6E0C               	movwf	___fltol@sign1^(0+1280),c
 48826   01D08C  8E06               	bsf	(___fltol@f1+2)^(0+1280),7,c
 48827   01D08E  0EFF               	movlw	255
 48828   01D090  1604               	andwf	___fltol@f1^(0+1280),f,c
 48829   01D092  0EFF               	movlw	255
 48830   01D094  1605               	andwf	(___fltol@f1+1)^(0+1280),f,c
 48831   01D096  0EFF               	movlw	255
 48832   01D098  1606               	andwf	(___fltol@f1+2)^(0+1280),f,c
 48833   01D09A  0E00               	movlw	0
 48834   01D09C  1607               	andwf	(___fltol@f1+3)^(0+1280),f,c
 48835   01D09E  0E96               	movlw	150
 48836   01D0A0  5E0D               	subwf	___fltol@exp1^(0+1280),f,c
 48837   01D0A2  BE0D               	btfsc	___fltol@exp1^(0+1280),7,c
 48838   01D0A4  EF58  F0E8         	goto	u26140
 48839   01D0A8  EF56  F0E8         	goto	u26141
 48840   01D0AC                     u26141:
 48841   01D0AC  EF6E  F0E8         	goto	l19759
 48842   01D0B0                     u26140:
 48843   01D0B0  500D               	movf	___fltol@exp1^(0+1280),w,c
 48844   01D0B2  0A80               	xorlw	128
 48845   01D0B4  0F97               	addlw	151
 48846   01D0B6  B0D8               	btfsc	status,0,c
 48847   01D0B8  EF60  F0E8         	goto	u26151
 48848   01D0BC  EF62  F0E8         	goto	u26150
 48849   01D0C0                     u26151:
 48850   01D0C0  EF64  F0E8         	goto	l19755
 48851   01D0C4                     u26150:
 48852   01D0C4  EF27  F0E8         	goto	l19735
 48853   01D0C8                     l19755:
 48854   01D0C8  90D8               	bcf	status,0,c
 48855   01D0CA  3207               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 48856   01D0CC  3206               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 48857   01D0CE  3205               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 48858   01D0D0  3204               	rrcf	___fltol@f1^(0+1280),f,c
 48859   01D0D2  3E0D               	incfsz	___fltol@exp1^(0+1280),f,c
 48860   01D0D4  EF64  F0E8         	goto	l19755
 48861   01D0D8  EF86  F0E8         	goto	l19769
 48862   01D0DC                     l19759:
 48863   01D0DC  0E1F               	movlw	31
 48864   01D0DE  640D               	cpfsgt	___fltol@exp1^(0+1280),c
 48865   01D0E0  EF74  F0E8         	goto	u26161
 48866   01D0E4  EF76  F0E8         	goto	u26160
 48867   01D0E8                     u26161:
 48868   01D0E8  EF7E  F0E8         	goto	l19767
 48869   01D0EC                     u26160:
 48870   01D0EC  EF27  F0E8         	goto	l19735
 48871   01D0F0                     l19765:
 48872   01D0F0  90D8               	bcf	status,0,c
 48873   01D0F2  3604               	rlcf	___fltol@f1^(0+1280),f,c
 48874   01D0F4  3605               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 48875   01D0F6  3606               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 48876   01D0F8  3607               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 48877   01D0FA  060D               	decf	___fltol@exp1^(0+1280),f,c
 48878   01D0FC                     l19767:
 48879   01D0FC  500D               	movf	___fltol@exp1^(0+1280),w,c
 48880   01D0FE  A4D8               	btfss	status,2,c
 48881   01D100  EF84  F0E8         	goto	u26171
 48882   01D104  EF86  F0E8         	goto	u26170
 48883   01D108                     u26171:
 48884   01D108  EF78  F0E8         	goto	l19765
 48885   01D10C                     u26170:
 48886   01D10C                     l19769:
 48887   01D10C  500C               	movf	___fltol@sign1^(0+1280),w,c
 48888   01D10E  B4D8               	btfsc	status,2,c
 48889   01D110  EF8C  F0E8         	goto	u26181
 48890   01D114  EF8E  F0E8         	goto	u26180
 48891   01D118                     u26181:
 48892   01D118  EF96  F0E8         	goto	l19773
 48893   01D11C                     u26180:
 48894   01D11C  1E07               	comf	(___fltol@f1+3)^(0+1280),f,c
 48895   01D11E  1E06               	comf	(___fltol@f1+2)^(0+1280),f,c
 48896   01D120  1E05               	comf	(___fltol@f1+1)^(0+1280),f,c
 48897   01D122  6C04               	negf	___fltol@f1^(0+1280),c
 48898   01D124  0E00               	movlw	0
 48899   01D126  2205               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 48900   01D128  2206               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 48901   01D12A  2207               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 48902   01D12C                     l19773:
 48903   01D12C  C504  F504         	movff	___fltol@f1,?___fltol
 48904   01D130  C505  F505         	movff	___fltol@f1+1,?___fltol+1
 48905   01D134  C506  F506         	movff	___fltol@f1+2,?___fltol+2
 48906   01D138  C507  F507         	movff	___fltol@f1+3,?___fltol+3
 48907   01D13C                     l2842:
 48908   01D13C  0012               	return		;funcret
 48909   01D13E                     __end_of___fltol:
 48910                           	callstack 0
 48911                           
 48912 ;; *************** function ___flsub *****************
 48913 ;; Defined at:
 48914 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 48915 ;; Parameters:    Size  Location     Type
 48916 ;;  b               4   42[COMRAM] long 
 48917 ;;  a               4   46[COMRAM] long 
 48918 ;; Auto vars:     Size  Location     Type
 48919 ;;		None
 48920 ;; Return value:  Size  Location     Type
 48921 ;;                  4   42[COMRAM] long 
 48922 ;; Registers used:
 48923 ;;		wreg, status,2, status,0, cstack
 48924 ;; Tracked objects:
 48925 ;;		On entry : 0/0
 48926 ;;		On exit  : 0/0
 48927 ;;		Unchanged: 0/0
 48928 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48929 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48932 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48933 ;;Total ram usage:        8 bytes
 48934 ;; Hardware stack levels used: 1
 48935 ;; Hardware stack levels required when called: 2
 48936 ;; This function calls:
 48937 ;;		___fladd
 48938 ;; This function is called by:
 48939 ;;		_efgtoa
 48940 ;;		_ftoa
 48941 ;; This function uses a non-reentrant model
 48942 ;;
 48943                           
 48944                           	psect	text135
 48945   01FB72                     __ptext135:
 48946                           	callstack 0
 48947   01FB72                     ___flsub:
 48948                           	callstack 113
 48949   01FB72  0E00               	movlw	0
 48950   01FB74  1A2F               	xorwf	___flsub@a^(0+1280),f,c
 48951   01FB76  0E00               	movlw	0
 48952   01FB78  1A30               	xorwf	(___flsub@a+1)^(0+1280),f,c
 48953   01FB7A  0E00               	movlw	0
 48954   01FB7C  1A31               	xorwf	(___flsub@a+2)^(0+1280),f,c
 48955   01FB7E  0E80               	movlw	128
 48956   01FB80  1A32               	xorwf	(___flsub@a+3)^(0+1280),f,c
 48957   01FB82  C52B  F504         	movff	___flsub@b,___fladd@b
 48958   01FB86  C52C  F505         	movff	___flsub@b+1,___fladd@b+1
 48959   01FB8A  C52D  F506         	movff	___flsub@b+2,___fladd@b+2
 48960   01FB8E  C52E  F507         	movff	___flsub@b+3,___fladd@b+3
 48961   01FB92  C52F  F508         	movff	___flsub@a,___fladd@a
 48962   01FB96  C530  F509         	movff	___flsub@a+1,___fladd@a+1
 48963   01FB9A  C531  F50A         	movff	___flsub@a+2,___fladd@a+2
 48964   01FB9E  C532  F50B         	movff	___flsub@a+3,___fladd@a+3
 48965   01FBA2  EC38  F0A5         	call	___fladd	;wreg free
 48966   01FBA6  C504  F52B         	movff	?___fladd,?___flsub
 48967   01FBAA  C505  F52C         	movff	?___fladd+1,?___flsub+1
 48968   01FBAE  C506  F52D         	movff	?___fladd+2,?___flsub+2
 48969   01FBB2  C507  F52E         	movff	?___fladd+3,?___flsub+3
 48970   01FBB6  0012               	return		;funcret
 48971   01FBB8                     __end_of___flsub:
 48972                           	callstack 0
 48973                           
 48974 ;; *************** function ___fladd *****************
 48975 ;; Defined at:
 48976 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 48977 ;; Parameters:    Size  Location     Type
 48978 ;;  b               4    3[COMRAM] long 
 48979 ;;  a               4    7[COMRAM] long 
 48980 ;; Auto vars:     Size  Location     Type
 48981 ;;  grs             1   18[COMRAM] unsigned char 
 48982 ;;  bexp            1   17[COMRAM] unsigned char 
 48983 ;;  aexp            1   16[COMRAM] unsigned char 
 48984 ;;  signs           1   15[COMRAM] unsigned char 
 48985 ;; Return value:  Size  Location     Type
 48986 ;;                  4    3[COMRAM] unsigned char 
 48987 ;; Registers used:
 48988 ;;		wreg, status,2, status,0
 48989 ;; Tracked objects:
 48990 ;;		On entry : 0/0
 48991 ;;		On exit  : 0/0
 48992 ;;		Unchanged: 0/0
 48993 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48995 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48997 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48998 ;;Total ram usage:       16 bytes
 48999 ;; Hardware stack levels used: 1
 49000 ;; Hardware stack levels required when called: 1
 49001 ;; This function calls:
 49002 ;;		Nothing
 49003 ;; This function is called by:
 49004 ;;		___flsub
 49005 ;;		_efgtoa
 49006 ;;		_ftoa
 49007 ;; This function uses a non-reentrant model
 49008 ;;
 49009                           
 49010                           	psect	text136
 49011   014A70                     __ptext136:
 49012                           	callstack 0
 49013   014A70                     ___fladd:
 49014                           	callstack 113
 49015   014A70  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49016   014A72  0B80               	andlw	128
 49017   014A74  6E10               	movwf	___fladd@signs^(0+1280),c
 49018   014A76  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49019   014A78  2407               	addwf	(___fladd@b+3)^(0+1280),w,c
 49020   014A7A  6E12               	movwf	___fladd@bexp^(0+1280),c
 49021   014A7C  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 49022   014A7E  EF43  F0A5         	goto	u25011
 49023   014A82  EF45  F0A5         	goto	u25010
 49024   014A86                     u25011:
 49025   014A86  EF46  F0A5         	goto	l19107
 49026   014A8A                     u25010:
 49027   014A8A  8012               	bsf	___fladd@bexp^(0+1280),0,c
 49028   014A8C                     l19107:
 49029   014A8C  5012               	movf	___fladd@bexp^(0+1280),w,c
 49030   014A8E  B4D8               	btfsc	status,2,c
 49031   014A90  EF4C  F0A5         	goto	u25021
 49032   014A94  EF4E  F0A5         	goto	u25020
 49033   014A98                     u25021:
 49034   014A98  EF62  F0A5         	goto	l19117
 49035   014A9C                     u25020:
 49036   014A9C  2812               	incf	___fladd@bexp^(0+1280),w,c
 49037   014A9E  A4D8               	btfss	status,2,c
 49038   014AA0  EF54  F0A5         	goto	u25031
 49039   014AA4  EF56  F0A5         	goto	u25030
 49040   014AA8                     u25031:
 49041   014AA8  EF5E  F0A5         	goto	l19113
 49042   014AAC                     u25030:
 49043   014AAC  0E00               	movlw	0
 49044   014AAE  6E04               	movwf	___fladd@b^(0+1280),c
 49045   014AB0  0E00               	movlw	0
 49046   014AB2  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49047   014AB4  0E00               	movlw	0
 49048   014AB6  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49049   014AB8  0E00               	movlw	0
 49050   014ABA  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49051   014ABC                     l19113:
 49052   014ABC  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 49053   014ABE  6A07               	clrf	(___fladd@b+3)^(0+1280),c
 49054   014AC0  EF6A  F0A5         	goto	l19119
 49055   014AC4                     l19117:
 49056   014AC4  0E00               	movlw	0
 49057   014AC6  6E04               	movwf	___fladd@b^(0+1280),c
 49058   014AC8  0E00               	movlw	0
 49059   014ACA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49060   014ACC  0E00               	movlw	0
 49061   014ACE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49062   014AD0  0E00               	movlw	0
 49063   014AD2  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49064   014AD4                     l19119:
 49065   014AD4  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49066   014AD6  0B80               	andlw	128
 49067   014AD8  6E11               	movwf	___fladd@aexp^(0+1280),c
 49068   014ADA  5010               	movf	___fladd@signs^(0+1280),w,c
 49069   014ADC  1811               	xorwf	___fladd@aexp^(0+1280),w,c
 49070   014ADE  B4D8               	btfsc	status,2,c
 49071   014AE0  EF74  F0A5         	goto	u25041
 49072   014AE4  EF76  F0A5         	goto	u25040
 49073   014AE8                     u25041:
 49074   014AE8  EF77  F0A5         	goto	l19125
 49075   014AEC                     u25040:
 49076   014AEC  8C10               	bsf	___fladd@signs^(0+1280),6,c
 49077   014AEE                     l19125:
 49078   014AEE  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49079   014AF0  240B               	addwf	(___fladd@a+3)^(0+1280),w,c
 49080   014AF2  6E11               	movwf	___fladd@aexp^(0+1280),c
 49081   014AF4  AE0A               	btfss	(___fladd@a+2)^(0+1280),7,c
 49082   014AF6  EF7F  F0A5         	goto	u25051
 49083   014AFA  EF81  F0A5         	goto	u25050
 49084   014AFE                     u25051:
 49085   014AFE  EF82  F0A5         	goto	l19131
 49086   014B02                     u25050:
 49087   014B02  8011               	bsf	___fladd@aexp^(0+1280),0,c
 49088   014B04                     l19131:
 49089   014B04  5011               	movf	___fladd@aexp^(0+1280),w,c
 49090   014B06  B4D8               	btfsc	status,2,c
 49091   014B08  EF88  F0A5         	goto	u25061
 49092   014B0C  EF8A  F0A5         	goto	u25060
 49093   014B10                     u25061:
 49094   014B10  EF9E  F0A5         	goto	l19141
 49095   014B14                     u25060:
 49096   014B14  2811               	incf	___fladd@aexp^(0+1280),w,c
 49097   014B16  A4D8               	btfss	status,2,c
 49098   014B18  EF90  F0A5         	goto	u25071
 49099   014B1C  EF92  F0A5         	goto	u25070
 49100   014B20                     u25071:
 49101   014B20  EF9A  F0A5         	goto	l19137
 49102   014B24                     u25070:
 49103   014B24  0E00               	movlw	0
 49104   014B26  6E08               	movwf	___fladd@a^(0+1280),c
 49105   014B28  0E00               	movlw	0
 49106   014B2A  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 49107   014B2C  0E00               	movlw	0
 49108   014B2E  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 49109   014B30  0E00               	movlw	0
 49110   014B32  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 49111   014B34                     l19137:
 49112   014B34  8E0A               	bsf	(___fladd@a+2)^(0+1280),7,c
 49113   014B36  6A0B               	clrf	(___fladd@a+3)^(0+1280),c
 49114   014B38  EFA6  F0A5         	goto	l19143
 49115   014B3C                     l19141:
 49116   014B3C  0E00               	movlw	0
 49117   014B3E  6E08               	movwf	___fladd@a^(0+1280),c
 49118   014B40  0E00               	movlw	0
 49119   014B42  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 49120   014B44  0E00               	movlw	0
 49121   014B46  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 49122   014B48  0E00               	movlw	0
 49123   014B4A  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 49124   014B4C                     l19143:
 49125   014B4C  5012               	movf	___fladd@bexp^(0+1280),w,c
 49126   014B4E  5C11               	subwf	___fladd@aexp^(0+1280),w,c
 49127   014B50  B0D8               	btfsc	status,0,c
 49128   014B52  EFAD  F0A5         	goto	u25081
 49129   014B56  EFAF  F0A5         	goto	u25080
 49130   014B5A                     u25081:
 49131   014B5A  EFD6  F0A5         	goto	l19179
 49132   014B5E                     u25080:
 49133   014B5E  AC10               	btfss	___fladd@signs^(0+1280),6,c
 49134   014B60  EFB4  F0A5         	goto	u25091
 49135   014B64  EFB6  F0A5         	goto	u25090
 49136   014B68                     u25091:
 49137   014B68  EFB8  F0A5         	goto	l19149
 49138   014B6C                     u25090:
 49139   014B6C  0E80               	movlw	128
 49140   014B6E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 49141   014B70                     l19149:
 49142   014B70  C512  F513         	movff	___fladd@bexp,___fladd@grs
 49143   014B74  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 49144   014B78  C513  F511         	movff	___fladd@grs,___fladd@aexp
 49145   014B7C  C504  F513         	movff	___fladd@b,___fladd@grs
 49146   014B80  C508  F504         	movff	___fladd@a,___fladd@b
 49147   014B84  C513  F508         	movff	___fladd@grs,___fladd@a
 49148   014B88  C505  F513         	movff	___fladd@b+1,___fladd@grs
 49149   014B8C  C509  F505         	movff	___fladd@a+1,___fladd@b+1
 49150   014B90  C513  F509         	movff	___fladd@grs,___fladd@a+1
 49151   014B94  C506  F513         	movff	___fladd@b+2,___fladd@grs
 49152   014B98  C50A  F506         	movff	___fladd@a+2,___fladd@b+2
 49153   014B9C  C513  F50A         	movff	___fladd@grs,___fladd@a+2
 49154   014BA0  C507  F513         	movff	___fladd@b+3,___fladd@grs
 49155   014BA4  C50B  F507         	movff	___fladd@a+3,___fladd@b+3
 49156   014BA8  C513  F50B         	movff	___fladd@grs,___fladd@a+3
 49157   014BAC                     l19179:
 49158   014BAC  6A13               	clrf	___fladd@grs^(0+1280),c
 49159   014BAE  5012               	movf	___fladd@bexp^(0+1280),w,c
 49160   014BB0  C511  F50C         	movff	___fladd@aexp,??___fladd
 49161   014BB4  6A0D               	clrf	(??___fladd+1)^(0+1280),c
 49162   014BB6  5E0C               	subwf	??___fladd^(0+1280),f,c
 49163   014BB8  0E00               	movlw	0
 49164   014BBA  5A0D               	subwfb	(??___fladd+1)^(0+1280),f,c
 49165   014BBC  BE0D               	btfsc	(??___fladd+1)^(0+1280),7,c
 49166   014BBE  EFEA  F0A5         	goto	u25101
 49167   014BC2  500D               	movf	(??___fladd+1)^(0+1280),w,c
 49168   014BC4  E109               	bnz	u25100
 49169   014BC6  0E1A               	movlw	26
 49170   014BC8  5C0C               	subwf	??___fladd^(0+1280),w,c
 49171   014BCA  A0D8               	btfss	status,0,c
 49172   014BCC  EFEA  F0A5         	goto	u25101
 49173   014BD0  EFEC  F0A5         	goto	u25100
 49174   014BD4                     u25101:
 49175   014BD4  EF23  F0A6         	goto	l3074
 49176   014BD8                     u25100:
 49177   014BD8  5004               	movf	___fladd@b^(0+1280),w,c
 49178   014BDA  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 49179   014BDC  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 49180   014BDE  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 49181   014BE0  A4D8               	btfss	status,2,c
 49182   014BE2  EFF5  F0A5         	goto	u25111
 49183   014BE6  EFF8  F0A5         	goto	u25110
 49184   014BEA                     u25111:
 49185   014BEA  0E01               	movlw	1
 49186   014BEC  EFF9  F0A5         	goto	u25120
 49187   014BF0                     u25110:
 49188   014BF0  0E00               	movlw	0
 49189   014BF2                     u25120:
 49190   014BF2  6E13               	movwf	___fladd@grs^(0+1280),c
 49191   014BF4  0E00               	movlw	0
 49192   014BF6  6E04               	movwf	___fladd@b^(0+1280),c
 49193   014BF8  0E00               	movlw	0
 49194   014BFA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49195   014BFC  0E00               	movlw	0
 49196   014BFE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49197   014C00  0E00               	movlw	0
 49198   014C02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49199   014C04  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 49200   014C08  EF2C  F0A6         	goto	l3073
 49201   014C0C                     l3075:
 49202   014C0C  A013               	btfss	___fladd@grs^(0+1280),0,c
 49203   014C0E  EF0B  F0A6         	goto	u25131
 49204   014C12  EF0D  F0A6         	goto	u25130
 49205   014C16                     u25131:
 49206   014C16  EF13  F0A6         	goto	l19189
 49207   014C1A                     u25130:
 49208   014C1A  90D8               	bcf	status,0,c
 49209   014C1C  3013               	rrcf	___fladd@grs^(0+1280),w,c
 49210   014C1E  0901               	iorlw	1
 49211   014C20  6E13               	movwf	___fladd@grs^(0+1280),c
 49212   014C22  EF15  F0A6         	goto	l19191
 49213   014C26                     l19189:
 49214   014C26  90D8               	bcf	status,0,c
 49215   014C28  3213               	rrcf	___fladd@grs^(0+1280),f,c
 49216   014C2A                     l19191:
 49217   014C2A  A004               	btfss	___fladd@b^(0+1280),0,c
 49218   014C2C  EF1A  F0A6         	goto	u25141
 49219   014C30  EF1C  F0A6         	goto	u25140
 49220   014C34                     u25141:
 49221   014C34  EF1D  F0A6         	goto	l19195
 49222   014C38                     u25140:
 49223   014C38  8E13               	bsf	___fladd@grs^(0+1280),7,c
 49224   014C3A                     l19195:
 49225   014C3A  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 49226   014C3C  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 49227   014C3E  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 49228   014C40  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 49229   014C42  3204               	rrcf	___fladd@b^(0+1280),f,c
 49230   014C44  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49231   014C46                     l3074:
 49232   014C46  5011               	movf	___fladd@aexp^(0+1280),w,c
 49233   014C48  5C12               	subwf	___fladd@bexp^(0+1280),w,c
 49234   014C4A  A0D8               	btfss	status,0,c
 49235   014C4C  EF2A  F0A6         	goto	u25151
 49236   014C50  EF2C  F0A6         	goto	u25150
 49237   014C54                     u25151:
 49238   014C54  EF06  F0A6         	goto	l3075
 49239   014C58                     u25150:
 49240   014C58                     l3073:
 49241   014C58  BC10               	btfsc	___fladd@signs^(0+1280),6,c
 49242   014C5A  EF31  F0A6         	goto	u25161
 49243   014C5E  EF33  F0A6         	goto	u25160
 49244   014C62                     u25161:
 49245   014C62  EF73  F0A6         	goto	l19223
 49246   014C66                     u25160:
 49247   014C66  5012               	movf	___fladd@bexp^(0+1280),w,c
 49248   014C68  A4D8               	btfss	status,2,c
 49249   014C6A  EF39  F0A6         	goto	u25171
 49250   014C6E  EF3B  F0A6         	goto	u25170
 49251   014C72                     u25171:
 49252   014C72  EF45  F0A6         	goto	l19205
 49253   014C76                     u25170:
 49254   014C76  0E00               	movlw	0
 49255   014C78  6E04               	movwf	?___fladd^(0+1280),c
 49256   014C7A  0E00               	movlw	0
 49257   014C7C  6E05               	movwf	(?___fladd+1)^(0+1280),c
 49258   014C7E  0E00               	movlw	0
 49259   014C80  6E06               	movwf	(?___fladd+2)^(0+1280),c
 49260   014C82  0E00               	movlw	0
 49261   014C84  6E07               	movwf	(?___fladd+3)^(0+1280),c
 49262   014C86  EF92  F0A7         	goto	l3082
 49263   014C8A                     l19205:
 49264   014C8A  5008               	movf	___fladd@a^(0+1280),w,c
 49265   014C8C  2604               	addwf	___fladd@b^(0+1280),f,c
 49266   014C8E  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49267   014C90  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49268   014C92  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49269   014C94  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49270   014C96  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49271   014C98  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49272   014C9A  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 49273   014C9C  EF52  F0A6         	goto	u25181
 49274   014CA0  EF54  F0A6         	goto	u25180
 49275   014CA4                     u25181:
 49276   014CA4  EF00  F0A7         	goto	l3087
 49277   014CA8                     u25180:
 49278   014CA8  A013               	btfss	___fladd@grs^(0+1280),0,c
 49279   014CAA  EF59  F0A6         	goto	u25191
 49280   014CAE  EF5B  F0A6         	goto	u25190
 49281   014CB2                     u25191:
 49282   014CB2  EF61  F0A6         	goto	l19213
 49283   014CB6                     u25190:
 49284   014CB6  90D8               	bcf	status,0,c
 49285   014CB8  3013               	rrcf	___fladd@grs^(0+1280),w,c
 49286   014CBA  0901               	iorlw	1
 49287   014CBC  6E13               	movwf	___fladd@grs^(0+1280),c
 49288   014CBE  EF63  F0A6         	goto	l19215
 49289   014CC2                     l19213:
 49290   014CC2  90D8               	bcf	status,0,c
 49291   014CC4  3213               	rrcf	___fladd@grs^(0+1280),f,c
 49292   014CC6                     l19215:
 49293   014CC6  A004               	btfss	___fladd@b^(0+1280),0,c
 49294   014CC8  EF68  F0A6         	goto	u25201
 49295   014CCC  EF6A  F0A6         	goto	u25200
 49296   014CD0                     u25201:
 49297   014CD0  EF6B  F0A6         	goto	l19219
 49298   014CD4                     u25200:
 49299   014CD4  8E13               	bsf	___fladd@grs^(0+1280),7,c
 49300   014CD6                     l19219:
 49301   014CD6  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 49302   014CD8  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 49303   014CDA  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 49304   014CDC  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 49305   014CDE  3204               	rrcf	___fladd@b^(0+1280),f,c
 49306   014CE0  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49307   014CE2  EF00  F0A7         	goto	l3087
 49308   014CE6                     l19223:
 49309   014CE6  5008               	movf	___fladd@a^(0+1280),w,c
 49310   014CE8  5C04               	subwf	___fladd@b^(0+1280),w,c
 49311   014CEA  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49312   014CEC  5805               	subwfb	(___fladd@b+1)^(0+1280),w,c
 49313   014CEE  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49314   014CF0  5806               	subwfb	(___fladd@b+2)^(0+1280),w,c
 49315   014CF2  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49316   014CF4  0A80               	xorlw	128
 49317   014CF6  6E0C               	movwf	??___fladd^(0+1280),c
 49318   014CF8  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49319   014CFA  0A80               	xorlw	128
 49320   014CFC  580C               	subwfb	??___fladd^(0+1280),w,c
 49321   014CFE  B0D8               	btfsc	status,0,c
 49322   014D00  EF84  F0A6         	goto	u25211
 49323   014D04  EF86  F0A6         	goto	u25210
 49324   014D08                     u25211:
 49325   014D08  EFB1  F0A6         	goto	l19233
 49326   014D0C                     u25210:
 49327   014D0C  5004               	movf	___fladd@b^(0+1280),w,c
 49328   014D0E  5C08               	subwf	___fladd@a^(0+1280),w,c
 49329   014D10  6E0C               	movwf	??___fladd^(0+1280),c
 49330   014D12  5005               	movf	(___fladd@b+1)^(0+1280),w,c
 49331   014D14  5809               	subwfb	(___fladd@a+1)^(0+1280),w,c
 49332   014D16  6E0D               	movwf	(??___fladd+1)^(0+1280),c
 49333   014D18  5006               	movf	(___fladd@b+2)^(0+1280),w,c
 49334   014D1A  580A               	subwfb	(___fladd@a+2)^(0+1280),w,c
 49335   014D1C  6E0E               	movwf	(??___fladd+2)^(0+1280),c
 49336   014D1E  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49337   014D20  580B               	subwfb	(___fladd@a+3)^(0+1280),w,c
 49338   014D22  6E0F               	movwf	(??___fladd+3)^(0+1280),c
 49339   014D24  0EFF               	movlw	255
 49340   014D26  240C               	addwf	??___fladd^(0+1280),w,c
 49341   014D28  6E04               	movwf	___fladd@b^(0+1280),c
 49342   014D2A  0EFF               	movlw	255
 49343   014D2C  200D               	addwfc	(??___fladd+1)^(0+1280),w,c
 49344   014D2E  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49345   014D30  0EFF               	movlw	255
 49346   014D32  200E               	addwfc	(??___fladd+2)^(0+1280),w,c
 49347   014D34  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49348   014D36  0EFF               	movlw	255
 49349   014D38  200F               	addwfc	(??___fladd+3)^(0+1280),w,c
 49350   014D3A  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49351   014D3C  0E80               	movlw	128
 49352   014D3E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 49353   014D40  6C13               	negf	___fladd@grs^(0+1280),c
 49354   014D42  5013               	movf	___fladd@grs^(0+1280),w,c
 49355   014D44  A4D8               	btfss	status,2,c
 49356   014D46  EFA7  F0A6         	goto	u25221
 49357   014D4A  EFA9  F0A6         	goto	u25220
 49358   014D4E                     u25221:
 49359   014D4E  EFB9  F0A6         	goto	l3090
 49360   014D52                     u25220:
 49361   014D52  0E01               	movlw	1
 49362   014D54  2604               	addwf	___fladd@b^(0+1280),f,c
 49363   014D56  0E00               	movlw	0
 49364   014D58  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49365   014D5A  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49366   014D5C  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49367   014D5E  EFB9  F0A6         	goto	l3090
 49368   014D62                     l19233:
 49369   014D62  5008               	movf	___fladd@a^(0+1280),w,c
 49370   014D64  5E04               	subwf	___fladd@b^(0+1280),f,c
 49371   014D66  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49372   014D68  5A05               	subwfb	(___fladd@b+1)^(0+1280),f,c
 49373   014D6A  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49374   014D6C  5A06               	subwfb	(___fladd@b+2)^(0+1280),f,c
 49375   014D6E  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49376   014D70  5A07               	subwfb	(___fladd@b+3)^(0+1280),f,c
 49377   014D72                     l3090:
 49378   014D72  5004               	movf	___fladd@b^(0+1280),w,c
 49379   014D74  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 49380   014D76  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 49381   014D78  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 49382   014D7A  A4D8               	btfss	status,2,c
 49383   014D7C  EFC2  F0A6         	goto	u25231
 49384   014D80  EFC4  F0A6         	goto	u25230
 49385   014D84                     u25231:
 49386   014D84  EFF9  F0A6         	goto	l19257
 49387   014D88                     u25230:
 49388   014D88  5013               	movf	___fladd@grs^(0+1280),w,c
 49389   014D8A  A4D8               	btfss	status,2,c
 49390   014D8C  EFCA  F0A6         	goto	u25241
 49391   014D90  EFCC  F0A6         	goto	u25240
 49392   014D94                     u25241:
 49393   014D94  EFF9  F0A6         	goto	l19257
 49394   014D98                     u25240:
 49395   014D98  0E00               	movlw	0
 49396   014D9A  6E04               	movwf	?___fladd^(0+1280),c
 49397   014D9C  0E00               	movlw	0
 49398   014D9E  6E05               	movwf	(?___fladd+1)^(0+1280),c
 49399   014DA0  0E00               	movlw	0
 49400   014DA2  6E06               	movwf	(?___fladd+2)^(0+1280),c
 49401   014DA4  0E00               	movlw	0
 49402   014DA6  6E07               	movwf	(?___fladd+3)^(0+1280),c
 49403   014DA8  EF92  F0A7         	goto	l3082
 49404   014DAC                     l19241:
 49405   014DAC  90D8               	bcf	status,0,c
 49406   014DAE  3604               	rlcf	___fladd@b^(0+1280),f,c
 49407   014DB0  3605               	rlcf	(___fladd@b+1)^(0+1280),f,c
 49408   014DB2  3606               	rlcf	(___fladd@b+2)^(0+1280),f,c
 49409   014DB4  3607               	rlcf	(___fladd@b+3)^(0+1280),f,c
 49410   014DB6  AE13               	btfss	___fladd@grs^(0+1280),7,c
 49411   014DB8  EFE0  F0A6         	goto	u25251
 49412   014DBC  EFE2  F0A6         	goto	u25250
 49413   014DC0                     u25251:
 49414   014DC0  EFE3  F0A6         	goto	l19247
 49415   014DC4                     u25250:
 49416   014DC4  8004               	bsf	___fladd@b^(0+1280),0,c
 49417   014DC6                     l19247:
 49418   014DC6  A013               	btfss	___fladd@grs^(0+1280),0,c
 49419   014DC8  EFE8  F0A6         	goto	u25261
 49420   014DCC  EFEA  F0A6         	goto	u25260
 49421   014DD0                     u25261:
 49422   014DD0  EFEE  F0A6         	goto	l19251
 49423   014DD4                     u25260:
 49424   014DD4  80D8               	bsf	status,0,c
 49425   014DD6  3613               	rlcf	___fladd@grs^(0+1280),f,c
 49426   014DD8  EFF0  F0A6         	goto	l19253
 49427   014DDC                     l19251:
 49428   014DDC  90D8               	bcf	status,0,c
 49429   014DDE  3613               	rlcf	___fladd@grs^(0+1280),f,c
 49430   014DE0                     l19253:
 49431   014DE0  5012               	movf	___fladd@bexp^(0+1280),w,c
 49432   014DE2  B4D8               	btfsc	status,2,c
 49433   014DE4  EFF6  F0A6         	goto	u25271
 49434   014DE8  EFF8  F0A6         	goto	u25270
 49435   014DEC                     u25271:
 49436   014DEC  EFF9  F0A6         	goto	l19257
 49437   014DF0                     u25270:
 49438   014DF0  0612               	decf	___fladd@bexp^(0+1280),f,c
 49439   014DF2                     l19257:
 49440   014DF2  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 49441   014DF4  EFFE  F0A6         	goto	u25281
 49442   014DF8  EF00  F0A7         	goto	u25280
 49443   014DFC                     u25281:
 49444   014DFC  EFD6  F0A6         	goto	l19241
 49445   014E00                     u25280:
 49446   014E00                     l3087:
 49447   014E00  6A11               	clrf	___fladd@aexp^(0+1280),c
 49448   014E02  AE13               	btfss	___fladd@grs^(0+1280),7,c
 49449   014E04  EF06  F0A7         	goto	u25291
 49450   014E08  EF08  F0A7         	goto	u25290
 49451   014E0C                     u25291:
 49452   014E0C  EF20  F0A7         	goto	l3099
 49453   014E10                     u25290:
 49454   014E10  C513  F50C         	movff	___fladd@grs,??___fladd
 49455   014E14  0E7F               	movlw	127
 49456   014E16  160C               	andwf	??___fladd^(0+1280),f,c
 49457   014E18  B4D8               	btfsc	status,2,c
 49458   014E1A  EF11  F0A7         	goto	u25301
 49459   014E1E  EF13  F0A7         	goto	u25300
 49460   014E22                     u25301:
 49461   014E22  EF17  F0A7         	goto	l3100
 49462   014E26                     u25300:
 49463   014E26                     l19261:
 49464   014E26  0E01               	movlw	1
 49465   014E28  6E11               	movwf	___fladd@aexp^(0+1280),c
 49466   014E2A  EF20  F0A7         	goto	l3099
 49467   014E2E                     l3100:
 49468   014E2E  A004               	btfss	___fladd@b^(0+1280),0,c
 49469   014E30  EF1C  F0A7         	goto	u25311
 49470   014E34  EF1E  F0A7         	goto	u25310
 49471   014E38                     u25311:
 49472   014E38  EF20  F0A7         	goto	l3099
 49473   014E3C                     u25310:
 49474   014E3C  EF13  F0A7         	goto	l19261
 49475   014E40                     l3099:
 49476   014E40  5011               	movf	___fladd@aexp^(0+1280),w,c
 49477   014E42  B4D8               	btfsc	status,2,c
 49478   014E44  EF26  F0A7         	goto	u25321
 49479   014E48  EF28  F0A7         	goto	u25320
 49480   014E4C                     u25321:
 49481   014E4C  EF53  F0A7         	goto	l19273
 49482   014E50                     u25320:
 49483   014E50  0E01               	movlw	1
 49484   014E52  2604               	addwf	___fladd@b^(0+1280),f,c
 49485   014E54  0E00               	movlw	0
 49486   014E56  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49487   014E58  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49488   014E5A  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49489   014E5C  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 49490   014E5E  EF33  F0A7         	goto	u25331
 49491   014E62  EF35  F0A7         	goto	u25330
 49492   014E66                     u25331:
 49493   014E66  EF53  F0A7         	goto	l19273
 49494   014E6A                     u25330:
 49495   014E6A  C504  F50C         	movff	___fladd@b,??___fladd
 49496   014E6E  C505  F50D         	movff	___fladd@b+1,??___fladd+1
 49497   014E72  C506  F50E         	movff	___fladd@b+2,??___fladd+2
 49498   014E76  C507  F50F         	movff	___fladd@b+3,??___fladd+3
 49499   014E7A  340F               	rlcf	(??___fladd+3)^(0+1280),w,c
 49500   014E7C  320F               	rrcf	(??___fladd+3)^(0+1280),f,c
 49501   014E7E  320E               	rrcf	(??___fladd+2)^(0+1280),f,c
 49502   014E80  320D               	rrcf	(??___fladd+1)^(0+1280),f,c
 49503   014E82  320C               	rrcf	??___fladd^(0+1280),f,c
 49504   014E84  C50C  F504         	movff	??___fladd,___fladd@b
 49505   014E88  C50D  F505         	movff	??___fladd+1,___fladd@b+1
 49506   014E8C  C50E  F506         	movff	??___fladd+2,___fladd@b+2
 49507   014E90  C50F  F507         	movff	??___fladd+3,___fladd@b+3
 49508   014E94  2812               	incf	___fladd@bexp^(0+1280),w,c
 49509   014E96  B4D8               	btfsc	status,2,c
 49510   014E98  EF50  F0A7         	goto	u25341
 49511   014E9C  EF52  F0A7         	goto	u25340
 49512   014EA0                     u25341:
 49513   014EA0  EF53  F0A7         	goto	l19273
 49514   014EA4                     u25340:
 49515   014EA4  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49516   014EA6                     l19273:
 49517   014EA6  2812               	incf	___fladd@bexp^(0+1280),w,c
 49518   014EA8  B4D8               	btfsc	status,2,c
 49519   014EAA  EF59  F0A7         	goto	u25351
 49520   014EAE  EF5B  F0A7         	goto	u25350
 49521   014EB2                     u25351:
 49522   014EB2  EF63  F0A7         	goto	l19277
 49523   014EB6                     u25350:
 49524   014EB6  5012               	movf	___fladd@bexp^(0+1280),w,c
 49525   014EB8  A4D8               	btfss	status,2,c
 49526   014EBA  EF61  F0A7         	goto	u25361
 49527   014EBE  EF63  F0A7         	goto	u25360
 49528   014EC2                     u25361:
 49529   014EC2  EF74  F0A7         	goto	l3106
 49530   014EC6                     u25360:
 49531   014EC6                     l19277:
 49532   014EC6  0E00               	movlw	0
 49533   014EC8  6E04               	movwf	___fladd@b^(0+1280),c
 49534   014ECA  0E00               	movlw	0
 49535   014ECC  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49536   014ECE  0E00               	movlw	0
 49537   014ED0  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49538   014ED2  0E00               	movlw	0
 49539   014ED4  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49540   014ED6  5012               	movf	___fladd@bexp^(0+1280),w,c
 49541   014ED8  A4D8               	btfss	status,2,c
 49542   014EDA  EF71  F0A7         	goto	u25371
 49543   014EDE  EF73  F0A7         	goto	u25370
 49544   014EE2                     u25371:
 49545   014EE2  EF74  F0A7         	goto	l3106
 49546   014EE6                     u25370:
 49547   014EE6  6A10               	clrf	___fladd@signs^(0+1280),c
 49548   014EE8                     l3106:
 49549   014EE8  A012               	btfss	___fladd@bexp^(0+1280),0,c
 49550   014EEA  EF79  F0A7         	goto	u25381
 49551   014EEE  EF7B  F0A7         	goto	u25380
 49552   014EF2                     u25381:
 49553   014EF2  EF7E  F0A7         	goto	l19283
 49554   014EF6                     u25380:
 49555   014EF6  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 49556   014EF8  EF7F  F0A7         	goto	l19285
 49557   014EFC                     l19283:
 49558   014EFC  9E06               	bcf	(___fladd@b+2)^(0+1280),7,c
 49559   014EFE                     l19285:
 49560   014EFE  90D8               	bcf	status,0,c
 49561   014F00  3012               	rrcf	___fladd@bexp^(0+1280),w,c
 49562   014F02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49563   014F04  AE10               	btfss	___fladd@signs^(0+1280),7,c
 49564   014F06  EF87  F0A7         	goto	u25391
 49565   014F0A  EF89  F0A7         	goto	u25390
 49566   014F0E                     u25391:
 49567   014F0E  EF8A  F0A7         	goto	l19291
 49568   014F12                     u25390:
 49569   014F12  8E07               	bsf	(___fladd@b+3)^(0+1280),7,c
 49570   014F14                     l19291:
 49571   014F14  C504  F504         	movff	___fladd@b,?___fladd
 49572   014F18  C505  F505         	movff	___fladd@b+1,?___fladd+1
 49573   014F1C  C506  F506         	movff	___fladd@b+2,?___fladd+2
 49574   014F20  C507  F507         	movff	___fladd@b+3,?___fladd+3
 49575   014F24                     l3082:
 49576   014F24  0012               	return		;funcret
 49577   014F26                     __end_of___fladd:
 49578                           	callstack 0
 49579                           
 49580 ;; *************** function ___flneg *****************
 49581 ;; Defined at:
 49582 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
 49583 ;; Parameters:    Size  Location     Type
 49584 ;;  f1              4    3[COMRAM] unsigned char 
 49585 ;; Auto vars:     Size  Location     Type
 49586 ;;		None
 49587 ;; Return value:  Size  Location     Type
 49588 ;;                  4    3[COMRAM] unsigned char 
 49589 ;; Registers used:
 49590 ;;		wreg, status,2, status,0
 49591 ;; Tracked objects:
 49592 ;;		On entry : 0/0
 49593 ;;		On exit  : 0/0
 49594 ;;		Unchanged: 0/0
 49595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 49596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49600 ;;Total ram usage:        4 bytes
 49601 ;; Hardware stack levels used: 1
 49602 ;; Hardware stack levels required when called: 1
 49603 ;; This function calls:
 49604 ;;		Nothing
 49605 ;; This function is called by:
 49606 ;;		_efgtoa
 49607 ;; This function uses a non-reentrant model
 49608 ;;
 49609                           
 49610                           	psect	text137
 49611   01FE60                     __ptext137:
 49612                           	callstack 0
 49613   01FE60                     ___flneg:
 49614                           	callstack 114
 49615   01FE60  5004               	movf	___flneg@f1^(0+1280),w,c
 49616   01FE62  1005               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 49617   01FE64  1006               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 49618   01FE66  1007               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 49619   01FE68  B4D8               	btfsc	status,2,c
 49620   01FE6A  EF39  F0FF         	goto	u26111
 49621   01FE6E  EF3B  F0FF         	goto	u26110
 49622   01FE72                     u26111:
 49623   01FE72  EF43  F0FF         	goto	l19729
 49624   01FE76                     u26110:
 49625   01FE76  0E00               	movlw	0
 49626   01FE78  1A04               	xorwf	___flneg@f1^(0+1280),f,c
 49627   01FE7A  0E00               	movlw	0
 49628   01FE7C  1A05               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 49629   01FE7E  0E00               	movlw	0
 49630   01FE80  1A06               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 49631   01FE82  0E80               	movlw	128
 49632   01FE84  1A07               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 49633   01FE86                     l19729:
 49634   01FE86  C504  F504         	movff	___flneg@f1,?___flneg
 49635   01FE8A  C505  F505         	movff	___flneg@f1+1,?___flneg+1
 49636   01FE8E  C506  F506         	movff	___flneg@f1+2,?___flneg+2
 49637   01FE92  C507  F507         	movff	___flneg@f1+3,?___flneg+3
 49638   01FE96  0012               	return		;funcret
 49639   01FE98                     __end_of___flneg:
 49640                           	callstack 0
 49641                           
 49642 ;; *************** function ___flmul *****************
 49643 ;; Defined at:
 49644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 49645 ;; Parameters:    Size  Location     Type
 49646 ;;  b               4   17[COMRAM] unsigned char 
 49647 ;;  a               4   21[COMRAM] unsigned char 
 49648 ;; Auto vars:     Size  Location     Type
 49649 ;;  prod            4   36[COMRAM] struct .
 49650 ;;  grs             4   31[COMRAM] unsigned long 
 49651 ;;  temp            2   40[COMRAM] struct .
 49652 ;;  bexp            1   35[COMRAM] unsigned char 
 49653 ;;  aexp            1   30[COMRAM] unsigned char 
 49654 ;;  sign            1   29[COMRAM] unsigned char 
 49655 ;; Return value:  Size  Location     Type
 49656 ;;                  4   17[COMRAM] unsigned char 
 49657 ;; Registers used:
 49658 ;;		wreg, status,2, status,0, prodl, prodh
 49659 ;; Tracked objects:
 49660 ;;		On entry : 0/0
 49661 ;;		On exit  : 0/0
 49662 ;;		Unchanged: 0/0
 49663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 49664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49665 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49667 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49668 ;;Total ram usage:       25 bytes
 49669 ;; Hardware stack levels used: 1
 49670 ;; Hardware stack levels required when called: 1
 49671 ;; This function calls:
 49672 ;;		Nothing
 49673 ;; This function is called by:
 49674 ;;		_main
 49675 ;;		_efgtoa
 49676 ;;		_ilog10
 49677 ;;		_i10x
 49678 ;;		_ftoa
 49679 ;; This function uses a non-reentrant model
 49680 ;;
 49681                           
 49682                           	psect	text138
 49683   0165C8                     __ptext138:
 49684                           	callstack 0
 49685   0165C8                     ___flmul:
 49686                           	callstack 114
 49687   0165C8  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 49688   0165CA  0B80               	andlw	128
 49689   0165CC  6E1E               	movwf	___flmul@sign^(0+1280),c
 49690   0165CE  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 49691   0165D0  2415               	addwf	(___flmul@b+3)^(0+1280),w,c
 49692   0165D2  6E24               	movwf	___flmul@bexp^(0+1280),c
 49693   0165D4  AE14               	btfss	(___flmul@b+2)^(0+1280),7,c
 49694   0165D6  EFEF  F0B2         	goto	u25841
 49695   0165DA  EFF1  F0B2         	goto	u25840
 49696   0165DE                     u25841:
 49697   0165DE  EFF2  F0B2         	goto	l19559
 49698   0165E2                     u25840:
 49699   0165E2  8024               	bsf	___flmul@bexp^(0+1280),0,c
 49700   0165E4                     l19559:
 49701   0165E4  5024               	movf	___flmul@bexp^(0+1280),w,c
 49702   0165E6  B4D8               	btfsc	status,2,c
 49703   0165E8  EFF8  F0B2         	goto	u25851
 49704   0165EC  EFFA  F0B2         	goto	u25850
 49705   0165F0                     u25851:
 49706   0165F0  EF0D  F0B3         	goto	l19567
 49707   0165F4                     u25850:
 49708   0165F4  2824               	incf	___flmul@bexp^(0+1280),w,c
 49709   0165F6  A4D8               	btfss	status,2,c
 49710   0165F8  EF00  F0B3         	goto	u25861
 49711   0165FC  EF02  F0B3         	goto	u25860
 49712   016600                     u25861:
 49713   016600  EF0A  F0B3         	goto	l19565
 49714   016604                     u25860:
 49715   016604  0E00               	movlw	0
 49716   016606  6E12               	movwf	___flmul@b^(0+1280),c
 49717   016608  0E00               	movlw	0
 49718   01660A  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 49719   01660C  0E00               	movlw	0
 49720   01660E  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 49721   016610  0E00               	movlw	0
 49722   016612  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 49723   016614                     l19565:
 49724   016614  8E14               	bsf	(___flmul@b+2)^(0+1280),7,c
 49725   016616  EF15  F0B3         	goto	l19569
 49726   01661A                     l19567:
 49727   01661A  0E00               	movlw	0
 49728   01661C  6E12               	movwf	___flmul@b^(0+1280),c
 49729   01661E  0E00               	movlw	0
 49730   016620  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 49731   016622  0E00               	movlw	0
 49732   016624  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 49733   016626  0E00               	movlw	0
 49734   016628  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 49735   01662A                     l19569:
 49736   01662A  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 49737   01662C  0B80               	andlw	128
 49738   01662E  1A1E               	xorwf	___flmul@sign^(0+1280),f,c
 49739   016630  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 49740   016632  2419               	addwf	(___flmul@a+3)^(0+1280),w,c
 49741   016634  6E1F               	movwf	___flmul@aexp^(0+1280),c
 49742   016636  AE18               	btfss	(___flmul@a+2)^(0+1280),7,c
 49743   016638  EF20  F0B3         	goto	u25871
 49744   01663C  EF22  F0B3         	goto	u25870
 49745   016640                     u25871:
 49746   016640  EF23  F0B3         	goto	l19577
 49747   016644                     u25870:
 49748   016644  801F               	bsf	___flmul@aexp^(0+1280),0,c
 49749   016646                     l19577:
 49750   016646  501F               	movf	___flmul@aexp^(0+1280),w,c
 49751   016648  B4D8               	btfsc	status,2,c
 49752   01664A  EF29  F0B3         	goto	u25881
 49753   01664E  EF2B  F0B3         	goto	u25880
 49754   016652                     u25881:
 49755   016652  EF3E  F0B3         	goto	l19585
 49756   016656                     u25880:
 49757   016656  281F               	incf	___flmul@aexp^(0+1280),w,c
 49758   016658  A4D8               	btfss	status,2,c
 49759   01665A  EF31  F0B3         	goto	u25891
 49760   01665E  EF33  F0B3         	goto	u25890
 49761   016662                     u25891:
 49762   016662  EF3B  F0B3         	goto	l19583
 49763   016666                     u25890:
 49764   016666  0E00               	movlw	0
 49765   016668  6E16               	movwf	___flmul@a^(0+1280),c
 49766   01666A  0E00               	movlw	0
 49767   01666C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49768   01666E  0E00               	movlw	0
 49769   016670  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49770   016672  0E00               	movlw	0
 49771   016674  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49772   016676                     l19583:
 49773   016676  8E18               	bsf	(___flmul@a+2)^(0+1280),7,c
 49774   016678  EF46  F0B3         	goto	l3159
 49775   01667C                     l19585:
 49776   01667C  0E00               	movlw	0
 49777   01667E  6E16               	movwf	___flmul@a^(0+1280),c
 49778   016680  0E00               	movlw	0
 49779   016682  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49780   016684  0E00               	movlw	0
 49781   016686  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49782   016688  0E00               	movlw	0
 49783   01668A  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49784   01668C                     l3159:
 49785   01668C  501F               	movf	___flmul@aexp^(0+1280),w,c
 49786   01668E  B4D8               	btfsc	status,2,c
 49787   016690  EF4C  F0B3         	goto	u25901
 49788   016694  EF4E  F0B3         	goto	u25900
 49789   016698                     u25901:
 49790   016698  EF56  F0B3         	goto	l19589
 49791   01669C                     u25900:
 49792   01669C  5024               	movf	___flmul@bexp^(0+1280),w,c
 49793   01669E  A4D8               	btfss	status,2,c
 49794   0166A0  EF54  F0B3         	goto	u25911
 49795   0166A4  EF56  F0B3         	goto	u25910
 49796   0166A8                     u25911:
 49797   0166A8  EF60  F0B3         	goto	l19593
 49798   0166AC                     u25910:
 49799   0166AC                     l19589:
 49800   0166AC  0E00               	movlw	0
 49801   0166AE  6E12               	movwf	?___flmul^(0+1280),c
 49802   0166B0  0E00               	movlw	0
 49803   0166B2  6E13               	movwf	(?___flmul+1)^(0+1280),c
 49804   0166B4  0E00               	movlw	0
 49805   0166B6  6E14               	movwf	(?___flmul+2)^(0+1280),c
 49806   0166B8  0E00               	movlw	0
 49807   0166BA  6E15               	movwf	(?___flmul+3)^(0+1280),c
 49808   0166BC  EFF6  F0B4         	goto	l3163
 49809   0166C0                     l19593:
 49810   0166C0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49811   0166C2  0212               	mulwf	___flmul@b^(0+1280),c
 49812   0166C4  C4F3 F529          	movff	prodl,___flmul@temp
 49813   0166C8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49814   0166CC  5029               	movf	___flmul@temp^(0+1280),w,c
 49815   0166CE  6E20               	movwf	___flmul@grs^(0+1280),c
 49816   0166D0  6A21               	clrf	(___flmul@grs+1)^(0+1280),c
 49817   0166D2  6A22               	clrf	(___flmul@grs+2)^(0+1280),c
 49818   0166D4  6A23               	clrf	(___flmul@grs+3)^(0+1280),c
 49819   0166D6  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49820   0166D8  6E25               	movwf	___flmul@prod^(0+1280),c
 49821   0166DA  6A26               	clrf	(___flmul@prod+1)^(0+1280),c
 49822   0166DC  6A27               	clrf	(___flmul@prod+2)^(0+1280),c
 49823   0166DE  6A28               	clrf	(___flmul@prod+3)^(0+1280),c
 49824   0166E0  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49825   0166E2  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49826   0166E4  C4F3 F529          	movff	prodl,___flmul@temp
 49827   0166E8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49828   0166EC  5029               	movf	___flmul@temp^(0+1280),w,c
 49829   0166EE  2620               	addwf	___flmul@grs^(0+1280),f,c
 49830   0166F0  0E00               	movlw	0
 49831   0166F2  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49832   0166F4  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49833   0166F6  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49834   0166F8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49835   0166FA  2625               	addwf	___flmul@prod^(0+1280),f,c
 49836   0166FC  0E00               	movlw	0
 49837   0166FE  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49838   016700  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49839   016702  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49840   016704  5016               	movf	___flmul@a^(0+1280),w,c
 49841   016706  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49842   016708  C4F3 F529          	movff	prodl,___flmul@temp
 49843   01670C  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49844   016710  5029               	movf	___flmul@temp^(0+1280),w,c
 49845   016712  2620               	addwf	___flmul@grs^(0+1280),f,c
 49846   016714  0E00               	movlw	0
 49847   016716  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49848   016718  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49849   01671A  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49850   01671C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49851   01671E  2625               	addwf	___flmul@prod^(0+1280),f,c
 49852   016720  0E00               	movlw	0
 49853   016722  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49854   016724  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49855   016726  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49856   016728  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49857   01672C  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49858   016730  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49859   016734  6A20               	clrf	___flmul@grs^(0+1280),c
 49860   016736  5016               	movf	___flmul@a^(0+1280),w,c
 49861   016738  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49862   01673A  C4F3 F529          	movff	prodl,___flmul@temp
 49863   01673E  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49864   016742  5029               	movf	___flmul@temp^(0+1280),w,c
 49865   016744  2620               	addwf	___flmul@grs^(0+1280),f,c
 49866   016746  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49867   016748  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49868   01674A  0E00               	movlw	0
 49869   01674C  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49870   01674E  0E00               	movlw	0
 49871   016750  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49872   016752  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49873   016754  0212               	mulwf	___flmul@b^(0+1280),c
 49874   016756  C4F3 F529          	movff	prodl,___flmul@temp
 49875   01675A  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49876   01675E  5029               	movf	___flmul@temp^(0+1280),w,c
 49877   016760  2620               	addwf	___flmul@grs^(0+1280),f,c
 49878   016762  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49879   016764  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49880   016766  0E00               	movlw	0
 49881   016768  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49882   01676A  0E00               	movlw	0
 49883   01676C  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49884   01676E  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49885   016772  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49886   016776  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49887   01677A  6A20               	clrf	___flmul@grs^(0+1280),c
 49888   01677C  5016               	movf	___flmul@a^(0+1280),w,c
 49889   01677E  0212               	mulwf	___flmul@b^(0+1280),c
 49890   016780  C4F3 F529          	movff	prodl,___flmul@temp
 49891   016784  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49892   016788  5029               	movf	___flmul@temp^(0+1280),w,c
 49893   01678A  2620               	addwf	___flmul@grs^(0+1280),f,c
 49894   01678C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49895   01678E  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49896   016790  0E00               	movlw	0
 49897   016792  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49898   016794  0E00               	movlw	0
 49899   016796  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49900   016798  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49901   01679A  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49902   01679C  C4F3 F529          	movff	prodl,___flmul@temp
 49903   0167A0  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49904   0167A4  5029               	movf	___flmul@temp^(0+1280),w,c
 49905   0167A6  2625               	addwf	___flmul@prod^(0+1280),f,c
 49906   0167A8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49907   0167AA  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49908   0167AC  0E00               	movlw	0
 49909   0167AE  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49910   0167B0  0E00               	movlw	0
 49911   0167B2  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49912   0167B4  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49913   0167B6  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49914   0167B8  C4F3 F529          	movff	prodl,___flmul@temp
 49915   0167BC  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49916   0167C0  5029               	movf	___flmul@temp^(0+1280),w,c
 49917   0167C2  2625               	addwf	___flmul@prod^(0+1280),f,c
 49918   0167C4  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49919   0167C6  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49920   0167C8  0E00               	movlw	0
 49921   0167CA  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49922   0167CC  0E00               	movlw	0
 49923   0167CE  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49924   0167D0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49925   0167D2  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49926   0167D4  C4F3 F529          	movff	prodl,___flmul@temp
 49927   0167D8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49928   0167DC  5029               	movf	___flmul@temp^(0+1280),w,c
 49929   0167DE  6E1A               	movwf	??___flmul^(0+1280),c
 49930   0167E0  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49931   0167E2  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 49932   0167E4  6A1C               	clrf	(??___flmul+2)^(0+1280),c
 49933   0167E6  6A1D               	clrf	(??___flmul+3)^(0+1280),c
 49934   0167E8  C51C  F51D         	movff	??___flmul+2,??___flmul+3
 49935   0167EC  C51B  F51C         	movff	??___flmul+1,??___flmul+2
 49936   0167F0  C51A  F51B         	movff	??___flmul,??___flmul+1
 49937   0167F4  6A1A               	clrf	??___flmul^(0+1280),c
 49938   0167F6  501A               	movf	??___flmul^(0+1280),w,c
 49939   0167F8  2625               	addwf	___flmul@prod^(0+1280),f,c
 49940   0167FA  501B               	movf	(??___flmul+1)^(0+1280),w,c
 49941   0167FC  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49942   0167FE  501C               	movf	(??___flmul+2)^(0+1280),w,c
 49943   016800  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49944   016802  501D               	movf	(??___flmul+3)^(0+1280),w,c
 49945   016804  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49946   016806  C520  F51A         	movff	___flmul@grs,??___flmul
 49947   01680A  C521  F51B         	movff	___flmul@grs+1,??___flmul+1
 49948   01680E  C522  F51C         	movff	___flmul@grs+2,??___flmul+2
 49949   016812  C523  F51D         	movff	___flmul@grs+3,??___flmul+3
 49950   016816  0E19               	movlw	25
 49951   016818  EF13  F0B4         	goto	u25920
 49952   01681C                     u25925:
 49953   01681C  90D8               	bcf	status,0,c
 49954   01681E  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 49955   016820  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 49956   016822  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 49957   016824  321A               	rrcf	??___flmul^(0+1280),f,c
 49958   016826                     u25920:
 49959   016826  2EE8               	decfsz	wreg,f,c
 49960   016828  EF0E  F0B4         	goto	u25925
 49961   01682C  501A               	movf	??___flmul^(0+1280),w,c
 49962   01682E  2625               	addwf	___flmul@prod^(0+1280),f,c
 49963   016830  501B               	movf	(??___flmul+1)^(0+1280),w,c
 49964   016832  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49965   016834  501C               	movf	(??___flmul+2)^(0+1280),w,c
 49966   016836  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49967   016838  501D               	movf	(??___flmul+3)^(0+1280),w,c
 49968   01683A  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49969   01683C  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49970   016840  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49971   016844  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49972   016848  6A20               	clrf	___flmul@grs^(0+1280),c
 49973   01684A  501F               	movf	___flmul@aexp^(0+1280),w,c
 49974   01684C  C524  F51A         	movff	___flmul@bexp,??___flmul
 49975   016850  6A1B               	clrf	(??___flmul+1)^(0+1280),c
 49976   016852  261A               	addwf	??___flmul^(0+1280),f,c
 49977   016854  0E00               	movlw	0
 49978   016856  221B               	addwfc	(??___flmul+1)^(0+1280),f,c
 49979   016858  0E82               	movlw	130
 49980   01685A  241A               	addwf	??___flmul^(0+1280),w,c
 49981   01685C  6E29               	movwf	___flmul@temp^(0+1280),c
 49982   01685E  0EFF               	movlw	255
 49983   016860  201B               	addwfc	(??___flmul+1)^(0+1280),w,c
 49984   016862  6E2A               	movwf	(___flmul@temp+1)^(0+1280),c
 49985   016864  EF49  F0B4         	goto	l19641
 49986   016868                     l19635:
 49987   016868  90D8               	bcf	status,0,c
 49988   01686A  3625               	rlcf	___flmul@prod^(0+1280),f,c
 49989   01686C  3626               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 49990   01686E  3627               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 49991   016870  3628               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 49992   016872  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 49993   016874  EF3E  F0B4         	goto	u25931
 49994   016878  EF40  F0B4         	goto	u25930
 49995   01687C                     u25931:
 49996   01687C  EF41  F0B4         	goto	l3166
 49997   016880                     u25930:
 49998   016880  8025               	bsf	___flmul@prod^(0+1280),0,c
 49999   016882                     l3166:
 50000   016882  90D8               	bcf	status,0,c
 50001   016884  3620               	rlcf	___flmul@grs^(0+1280),f,c
 50002   016886  3621               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 50003   016888  3622               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 50004   01688A  3623               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 50005   01688C  0629               	decf	___flmul@temp^(0+1280),f,c
 50006   01688E  A0D8               	btfss	status,0,c
 50007   016890  062A               	decf	(___flmul@temp+1)^(0+1280),f,c
 50008   016892                     l19641:
 50009   016892  AE27               	btfss	(___flmul@prod+2)^(0+1280),7,c
 50010   016894  EF4E  F0B4         	goto	u25941
 50011   016898  EF50  F0B4         	goto	u25940
 50012   01689C                     u25941:
 50013   01689C  EF34  F0B4         	goto	l19635
 50014   0168A0                     u25940:
 50015   0168A0  6A1F               	clrf	___flmul@aexp^(0+1280),c
 50016   0168A2  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 50017   0168A4  EF56  F0B4         	goto	u25951
 50018   0168A8  EF58  F0B4         	goto	u25950
 50019   0168AC                     u25951:
 50020   0168AC  EF7C  F0B4         	goto	l3168
 50021   0168B0                     u25950:
 50022   0168B0  0EFF               	movlw	255
 50023   0168B2  1420               	andwf	___flmul@grs^(0+1280),w,c
 50024   0168B4  6E1A               	movwf	??___flmul^(0+1280),c
 50025   0168B6  0EFF               	movlw	255
 50026   0168B8  1421               	andwf	(___flmul@grs+1)^(0+1280),w,c
 50027   0168BA  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 50028   0168BC  0EFF               	movlw	255
 50029   0168BE  1422               	andwf	(___flmul@grs+2)^(0+1280),w,c
 50030   0168C0  6E1C               	movwf	(??___flmul+2)^(0+1280),c
 50031   0168C2  0E7F               	movlw	127
 50032   0168C4  1423               	andwf	(___flmul@grs+3)^(0+1280),w,c
 50033   0168C6  6E1D               	movwf	(??___flmul+3)^(0+1280),c
 50034   0168C8  501A               	movf	??___flmul^(0+1280),w,c
 50035   0168CA  101B               	iorwf	(??___flmul+1)^(0+1280),w,c
 50036   0168CC  101C               	iorwf	(??___flmul+2)^(0+1280),w,c
 50037   0168CE  101D               	iorwf	(??___flmul+3)^(0+1280),w,c
 50038   0168D0  B4D8               	btfsc	status,2,c
 50039   0168D2  EF6D  F0B4         	goto	u25961
 50040   0168D6  EF6F  F0B4         	goto	u25960
 50041   0168DA                     u25961:
 50042   0168DA  EF73  F0B4         	goto	l3169
 50043   0168DE                     u25960:
 50044   0168DE                     l19645:
 50045   0168DE  0E01               	movlw	1
 50046   0168E0  6E1F               	movwf	___flmul@aexp^(0+1280),c
 50047   0168E2  EF7C  F0B4         	goto	l3168
 50048   0168E6                     l3169:
 50049   0168E6  A025               	btfss	___flmul@prod^(0+1280),0,c
 50050   0168E8  EF78  F0B4         	goto	u25971
 50051   0168EC  EF7A  F0B4         	goto	u25970
 50052   0168F0                     u25971:
 50053   0168F0  EF7C  F0B4         	goto	l3168
 50054   0168F4                     u25970:
 50055   0168F4  EF6F  F0B4         	goto	l19645
 50056   0168F8                     l3168:
 50057   0168F8  501F               	movf	___flmul@aexp^(0+1280),w,c
 50058   0168FA  B4D8               	btfsc	status,2,c
 50059   0168FC  EF82  F0B4         	goto	u25981
 50060   016900  EF84  F0B4         	goto	u25980
 50061   016904                     u25981:
 50062   016904  EFA8  F0B4         	goto	l19657
 50063   016908                     u25980:
 50064   016908  0E01               	movlw	1
 50065   01690A  2625               	addwf	___flmul@prod^(0+1280),f,c
 50066   01690C  0E00               	movlw	0
 50067   01690E  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 50068   016910  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 50069   016912  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 50070   016914  A028               	btfss	(___flmul@prod+3)^(0+1280),0,c
 50071   016916  EF8F  F0B4         	goto	u25991
 50072   01691A  EF91  F0B4         	goto	u25990
 50073   01691E                     u25991:
 50074   01691E  EFA8  F0B4         	goto	l19657
 50075   016922                     u25990:
 50076   016922  C525  F51A         	movff	___flmul@prod,??___flmul
 50077   016926  C526  F51B         	movff	___flmul@prod+1,??___flmul+1
 50078   01692A  C527  F51C         	movff	___flmul@prod+2,??___flmul+2
 50079   01692E  C528  F51D         	movff	___flmul@prod+3,??___flmul+3
 50080   016932  341D               	rlcf	(??___flmul+3)^(0+1280),w,c
 50081   016934  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 50082   016936  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 50083   016938  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 50084   01693A  321A               	rrcf	??___flmul^(0+1280),f,c
 50085   01693C  C51A  F525         	movff	??___flmul,___flmul@prod
 50086   016940  C51B  F526         	movff	??___flmul+1,___flmul@prod+1
 50087   016944  C51C  F527         	movff	??___flmul+2,___flmul@prod+2
 50088   016948  C51D  F528         	movff	??___flmul+3,___flmul@prod+3
 50089   01694C  4A29               	infsnz	___flmul@temp^(0+1280),f,c
 50090   01694E  2A2A               	incf	(___flmul@temp+1)^(0+1280),f,c
 50091   016950                     l19657:
 50092   016950  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 50093   016952  EFB3  F0B4         	goto	u26001
 50094   016956  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 50095   016958  E108               	bnz	u26000
 50096   01695A  2829               	incf	___flmul@temp^(0+1280),w,c
 50097   01695C  A0D8               	btfss	status,0,c
 50098   01695E  EFB3  F0B4         	goto	u26001
 50099   016962  EFB5  F0B4         	goto	u26000
 50100   016966                     u26001:
 50101   016966  EFBF  F0B4         	goto	l19661
 50102   01696A                     u26000:
 50103   01696A  0E00               	movlw	0
 50104   01696C  6E25               	movwf	___flmul@prod^(0+1280),c
 50105   01696E  0E00               	movlw	0
 50106   016970  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 50107   016972  0E80               	movlw	128
 50108   016974  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 50109   016976  0E7F               	movlw	127
 50110   016978  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50111   01697A  EFEC  F0B4         	goto	l19675
 50112   01697E                     l19661:
 50113   01697E  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 50114   016980  EFCC  F0B4         	goto	u26010
 50115   016984  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 50116   016986  E106               	bnz	u26011
 50117   016988  0429               	decf	___flmul@temp^(0+1280),w,c
 50118   01698A  B0D8               	btfsc	status,0,c
 50119   01698C  EFCA  F0B4         	goto	u26011
 50120   016990  EFCC  F0B4         	goto	u26010
 50121   016994                     u26011:
 50122   016994  EFD7  F0B4         	goto	l3176
 50123   016998                     u26010:
 50124   016998  0E00               	movlw	0
 50125   01699A  6E25               	movwf	___flmul@prod^(0+1280),c
 50126   01699C  0E00               	movlw	0
 50127   01699E  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 50128   0169A0  0E00               	movlw	0
 50129   0169A2  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 50130   0169A4  0E00               	movlw	0
 50131   0169A6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50132   0169A8  6A1E               	clrf	___flmul@sign^(0+1280),c
 50133   0169AA  EFEC  F0B4         	goto	l19675
 50134   0169AE                     l3176:
 50135   0169AE  C529  F524         	movff	___flmul@temp,___flmul@bexp
 50136   0169B2  0EFF               	movlw	255
 50137   0169B4  1625               	andwf	___flmul@prod^(0+1280),f,c
 50138   0169B6  0EFF               	movlw	255
 50139   0169B8  1626               	andwf	(___flmul@prod+1)^(0+1280),f,c
 50140   0169BA  0E7F               	movlw	127
 50141   0169BC  1627               	andwf	(___flmul@prod+2)^(0+1280),f,c
 50142   0169BE  0E00               	movlw	0
 50143   0169C0  1628               	andwf	(___flmul@prod+3)^(0+1280),f,c
 50144   0169C2  A024               	btfss	___flmul@bexp^(0+1280),0,c
 50145   0169C4  EFE6  F0B4         	goto	u26021
 50146   0169C8  EFE8  F0B4         	goto	u26020
 50147   0169CC                     u26021:
 50148   0169CC  EFE9  F0B4         	goto	l19673
 50149   0169D0                     u26020:
 50150   0169D0  8E27               	bsf	(___flmul@prod+2)^(0+1280),7,c
 50151   0169D2                     l19673:
 50152   0169D2  90D8               	bcf	status,0,c
 50153   0169D4  3024               	rrcf	___flmul@bexp^(0+1280),w,c
 50154   0169D6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50155   0169D8                     l19675:
 50156   0169D8  501E               	movf	___flmul@sign^(0+1280),w,c
 50157   0169DA  1228               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 50158   0169DC  C525  F512         	movff	___flmul@prod,?___flmul
 50159   0169E0  C526  F513         	movff	___flmul@prod+1,?___flmul+1
 50160   0169E4  C527  F514         	movff	___flmul@prod+2,?___flmul+2
 50161   0169E8  C528  F515         	movff	___flmul@prod+3,?___flmul+3
 50162   0169EC                     l3163:
 50163   0169EC  0012               	return		;funcret
 50164   0169EE                     __end_of___flmul:
 50165                           	callstack 0
 50166                           
 50167 ;; *************** function ___flge *****************
 50168 ;; Defined at:
 50169 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
 50170 ;; Parameters:    Size  Location     Type
 50171 ;;  ff1             4   42[COMRAM] unsigned char 
 50172 ;;  ff2             4   46[COMRAM] unsigned char 
 50173 ;; Auto vars:     Size  Location     Type
 50174 ;;		None
 50175 ;; Return value:  Size  Location     Type
 50176 ;;		None               void
 50177 ;; Registers used:
 50178 ;;		wreg, status,2, status,0
 50179 ;; Tracked objects:
 50180 ;;		On entry : 0/0
 50181 ;;		On exit  : 0/0
 50182 ;;		Unchanged: 0/0
 50183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50184 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50186 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50187 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50188 ;;Total ram usage:       12 bytes
 50189 ;; Hardware stack levels used: 1
 50190 ;; Hardware stack levels required when called: 1
 50191 ;; This function calls:
 50192 ;;		Nothing
 50193 ;; This function is called by:
 50194 ;;		_efgtoa
 50195 ;;		_ilog10
 50196 ;; This function uses a non-reentrant model
 50197 ;;
 50198                           
 50199                           	psect	text139
 50200   01D242                     __ptext139:
 50201                           	callstack 0
 50202   01D242                     ___flge:
 50203                           	callstack 114
 50204   01D242  0E00               	movlw	0
 50205   01D244  142B               	andwf	___flge@ff1^(0+1280),w,c
 50206   01D246  6E33               	movwf	??___flge^(0+1280),c
 50207   01D248  0E00               	movlw	0
 50208   01D24A  142C               	andwf	(___flge@ff1+1)^(0+1280),w,c
 50209   01D24C  6E34               	movwf	(??___flge+1)^(0+1280),c
 50210   01D24E  0E80               	movlw	128
 50211   01D250  142D               	andwf	(___flge@ff1+2)^(0+1280),w,c
 50212   01D252  6E35               	movwf	(??___flge+2)^(0+1280),c
 50213   01D254  0E7F               	movlw	127
 50214   01D256  142E               	andwf	(___flge@ff1+3)^(0+1280),w,c
 50215   01D258  6E36               	movwf	(??___flge+3)^(0+1280),c
 50216   01D25A  5033               	movf	??___flge^(0+1280),w,c
 50217   01D25C  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 50218   01D25E  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 50219   01D260  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 50220   01D262  A4D8               	btfss	status,2,c
 50221   01D264  EF36  F0E9         	goto	u26061
 50222   01D268  EF38  F0E9         	goto	u26060
 50223   01D26C                     u26061:
 50224   01D26C  EF40  F0E9         	goto	l19707
 50225   01D270                     u26060:
 50226   01D270  0E00               	movlw	0
 50227   01D272  6E2B               	movwf	___flge@ff1^(0+1280),c
 50228   01D274  0E00               	movlw	0
 50229   01D276  6E2C               	movwf	(___flge@ff1+1)^(0+1280),c
 50230   01D278  0E00               	movlw	0
 50231   01D27A  6E2D               	movwf	(___flge@ff1+2)^(0+1280),c
 50232   01D27C  0E00               	movlw	0
 50233   01D27E  6E2E               	movwf	(___flge@ff1+3)^(0+1280),c
 50234   01D280                     l19707:
 50235   01D280  0E00               	movlw	0
 50236   01D282  142F               	andwf	___flge@ff2^(0+1280),w,c
 50237   01D284  6E33               	movwf	??___flge^(0+1280),c
 50238   01D286  0E00               	movlw	0
 50239   01D288  1430               	andwf	(___flge@ff2+1)^(0+1280),w,c
 50240   01D28A  6E34               	movwf	(??___flge+1)^(0+1280),c
 50241   01D28C  0E80               	movlw	128
 50242   01D28E  1431               	andwf	(___flge@ff2+2)^(0+1280),w,c
 50243   01D290  6E35               	movwf	(??___flge+2)^(0+1280),c
 50244   01D292  0E7F               	movlw	127
 50245   01D294  1432               	andwf	(___flge@ff2+3)^(0+1280),w,c
 50246   01D296  6E36               	movwf	(??___flge+3)^(0+1280),c
 50247   01D298  5033               	movf	??___flge^(0+1280),w,c
 50248   01D29A  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 50249   01D29C  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 50250   01D29E  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 50251   01D2A0  A4D8               	btfss	status,2,c
 50252   01D2A2  EF55  F0E9         	goto	u26071
 50253   01D2A6  EF57  F0E9         	goto	u26070
 50254   01D2AA                     u26071:
 50255   01D2AA  EF5F  F0E9         	goto	l19711
 50256   01D2AE                     u26070:
 50257   01D2AE  0E00               	movlw	0
 50258   01D2B0  6E2F               	movwf	___flge@ff2^(0+1280),c
 50259   01D2B2  0E00               	movlw	0
 50260   01D2B4  6E30               	movwf	(___flge@ff2+1)^(0+1280),c
 50261   01D2B6  0E00               	movlw	0
 50262   01D2B8  6E31               	movwf	(___flge@ff2+2)^(0+1280),c
 50263   01D2BA  0E00               	movlw	0
 50264   01D2BC  6E32               	movwf	(___flge@ff2+3)^(0+1280),c
 50265   01D2BE                     l19711:
 50266   01D2BE  AE2E               	btfss	(___flge@ff1+3)^(0+1280),7,c
 50267   01D2C0  EF64  F0E9         	goto	u26081
 50268   01D2C4  EF66  F0E9         	goto	u26080
 50269   01D2C8                     u26081:
 50270   01D2C8  EF6F  F0E9         	goto	l19715
 50271   01D2CC                     u26080:
 50272   01D2CC  6C2B               	negf	___flge@ff1^(0+1280),c
 50273   01D2CE  1E2C               	comf	(___flge@ff1+1)^(0+1280),f,c
 50274   01D2D0  B0D8               	btfsc	status,0,c
 50275   01D2D2  2A2C               	incf	(___flge@ff1+1)^(0+1280),f,c
 50276   01D2D4  1E2D               	comf	(___flge@ff1+2)^(0+1280),f,c
 50277   01D2D6  B0D8               	btfsc	status,0,c
 50278   01D2D8  2A2D               	incf	(___flge@ff1+2)^(0+1280),f,c
 50279   01D2DA  0E80               	movlw	128
 50280   01D2DC  562E               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 50281   01D2DE                     l19715:
 50282   01D2DE  AE32               	btfss	(___flge@ff2+3)^(0+1280),7,c
 50283   01D2E0  EF74  F0E9         	goto	u26091
 50284   01D2E4  EF76  F0E9         	goto	u26090
 50285   01D2E8                     u26091:
 50286   01D2E8  EF7F  F0E9         	goto	l2810
 50287   01D2EC                     u26090:
 50288   01D2EC  6C2F               	negf	___flge@ff2^(0+1280),c
 50289   01D2EE  1E30               	comf	(___flge@ff2+1)^(0+1280),f,c
 50290   01D2F0  B0D8               	btfsc	status,0,c
 50291   01D2F2  2A30               	incf	(___flge@ff2+1)^(0+1280),f,c
 50292   01D2F4  1E31               	comf	(___flge@ff2+2)^(0+1280),f,c
 50293   01D2F6  B0D8               	btfsc	status,0,c
 50294   01D2F8  2A31               	incf	(___flge@ff2+2)^(0+1280),f,c
 50295   01D2FA  0E80               	movlw	128
 50296   01D2FC  5632               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 50297   01D2FE                     l2810:
 50298   01D2FE  0E00               	movlw	0
 50299   01D300  1A2B               	xorwf	___flge@ff1^(0+1280),f,c
 50300   01D302  0E00               	movlw	0
 50301   01D304  1A2C               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 50302   01D306  0E00               	movlw	0
 50303   01D308  1A2D               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 50304   01D30A  0E80               	movlw	128
 50305   01D30C  1A2E               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 50306   01D30E  0E00               	movlw	0
 50307   01D310  1A2F               	xorwf	___flge@ff2^(0+1280),f,c
 50308   01D312  0E00               	movlw	0
 50309   01D314  1A30               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 50310   01D316  0E00               	movlw	0
 50311   01D318  1A31               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 50312   01D31A  0E80               	movlw	128
 50313   01D31C  1A32               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 50314   01D31E  502F               	movf	___flge@ff2^(0+1280),w,c
 50315   01D320  5C2B               	subwf	___flge@ff1^(0+1280),w,c
 50316   01D322  5030               	movf	(___flge@ff2+1)^(0+1280),w,c
 50317   01D324  582C               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 50318   01D326  5031               	movf	(___flge@ff2+2)^(0+1280),w,c
 50319   01D328  582D               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 50320   01D32A  5032               	movf	(___flge@ff2+3)^(0+1280),w,c
 50321   01D32C  582E               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 50322   01D32E  B0D8               	btfsc	status,0,c
 50323   01D330  EF9C  F0E9         	goto	u26101
 50324   01D334  EF9E  F0E9         	goto	u26100
 50325   01D338                     u26101:
 50326   01D338  EFA1  F0E9         	goto	l19721
 50327   01D33C                     u26100:
 50328   01D33C  90D8               	bcf	status,0,c
 50329   01D33E  EFA2  F0E9         	goto	l2815
 50330   01D342                     l19721:
 50331   01D342  80D8               	bsf	status,0,c
 50332   01D344                     l2815:
 50333   01D344  0012               	return		;funcret
 50334   01D346                     __end_of___flge:
 50335                           	callstack 0
 50336                           
 50337 ;; *************** function ___fleq *****************
 50338 ;; Defined at:
 50339 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
 50340 ;; Parameters:    Size  Location     Type
 50341 ;;  ff1             4    3[COMRAM] unsigned char 
 50342 ;;  ff2             4    7[COMRAM] unsigned char 
 50343 ;; Auto vars:     Size  Location     Type
 50344 ;;		None
 50345 ;; Return value:  Size  Location     Type
 50346 ;;		None               void
 50347 ;; Registers used:
 50348 ;;		wreg, status,2, status,0
 50349 ;; Tracked objects:
 50350 ;;		On entry : 0/0
 50351 ;;		On exit  : 0/0
 50352 ;;		Unchanged: 0/0
 50353 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50357 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50358 ;;Total ram usage:       12 bytes
 50359 ;; Hardware stack levels used: 1
 50360 ;; Hardware stack levels required when called: 1
 50361 ;; This function calls:
 50362 ;;		Nothing
 50363 ;; This function is called by:
 50364 ;;		_efgtoa
 50365 ;;		_ftoa
 50366 ;; This function uses a non-reentrant model
 50367 ;;
 50368                           
 50369                           	psect	text140
 50370   01E902                     __ptext140:
 50371                           	callstack 0
 50372   01E902                     ___fleq:
 50373                           	callstack 114
 50374   01E902  0E00               	movlw	0
 50375   01E904  1404               	andwf	___fleq@ff1^(0+1280),w,c
 50376   01E906  6E0C               	movwf	??___fleq^(0+1280),c
 50377   01E908  0E00               	movlw	0
 50378   01E90A  1405               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 50379   01E90C  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 50380   01E90E  0E80               	movlw	128
 50381   01E910  1406               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 50382   01E912  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 50383   01E914  0E7F               	movlw	127
 50384   01E916  1407               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 50385   01E918  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 50386   01E91A  500C               	movf	??___fleq^(0+1280),w,c
 50387   01E91C  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 50388   01E91E  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 50389   01E920  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 50390   01E922  A4D8               	btfss	status,2,c
 50391   01E924  EF96  F0F4         	goto	u26031
 50392   01E928  EF98  F0F4         	goto	u26030
 50393   01E92C                     u26031:
 50394   01E92C  EFA0  F0F4         	goto	l19691
 50395   01E930                     u26030:
 50396   01E930  0E00               	movlw	0
 50397   01E932  6E04               	movwf	___fleq@ff1^(0+1280),c
 50398   01E934  0E00               	movlw	0
 50399   01E936  6E05               	movwf	(___fleq@ff1+1)^(0+1280),c
 50400   01E938  0E00               	movlw	0
 50401   01E93A  6E06               	movwf	(___fleq@ff1+2)^(0+1280),c
 50402   01E93C  0E00               	movlw	0
 50403   01E93E  6E07               	movwf	(___fleq@ff1+3)^(0+1280),c
 50404   01E940                     l19691:
 50405   01E940  0E00               	movlw	0
 50406   01E942  1408               	andwf	___fleq@ff2^(0+1280),w,c
 50407   01E944  6E0C               	movwf	??___fleq^(0+1280),c
 50408   01E946  0E00               	movlw	0
 50409   01E948  1409               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 50410   01E94A  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 50411   01E94C  0E80               	movlw	128
 50412   01E94E  140A               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 50413   01E950  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 50414   01E952  0E7F               	movlw	127
 50415   01E954  140B               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 50416   01E956  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 50417   01E958  500C               	movf	??___fleq^(0+1280),w,c
 50418   01E95A  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 50419   01E95C  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 50420   01E95E  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 50421   01E960  A4D8               	btfss	status,2,c
 50422   01E962  EFB5  F0F4         	goto	u26041
 50423   01E966  EFB7  F0F4         	goto	u26040
 50424   01E96A                     u26041:
 50425   01E96A  EFBF  F0F4         	goto	l19695
 50426   01E96E                     u26040:
 50427   01E96E  0E00               	movlw	0
 50428   01E970  6E08               	movwf	___fleq@ff2^(0+1280),c
 50429   01E972  0E00               	movlw	0
 50430   01E974  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 50431   01E976  0E00               	movlw	0
 50432   01E978  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 50433   01E97A  0E00               	movlw	0
 50434   01E97C  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 50435   01E97E                     l19695:
 50436   01E97E  5008               	movf	___fleq@ff2^(0+1280),w,c
 50437   01E980  1804               	xorwf	___fleq@ff1^(0+1280),w,c
 50438   01E982  E10F               	bnz	u26050
 50439   01E984  5009               	movf	(___fleq@ff2+1)^(0+1280),w,c
 50440   01E986  1805               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 50441   01E988  E10C               	bnz	u26050
 50442   01E98A  500A               	movf	(___fleq@ff2+2)^(0+1280),w,c
 50443   01E98C  1806               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 50444   01E98E  E109               	bnz	u26050
 50445   01E990  500B               	movf	(___fleq@ff2+3)^(0+1280),w,c
 50446   01E992  1807               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 50447   01E994  B4D8               	btfsc	status,2,c
 50448   01E996  EFCF  F0F4         	goto	u26051
 50449   01E99A  EFD1  F0F4         	goto	u26050
 50450   01E99E                     u26051:
 50451   01E99E  EFD4  F0F4         	goto	l19699
 50452   01E9A2                     u26050:
 50453   01E9A2  90D8               	bcf	status,0,c
 50454   01E9A4  EFD5  F0F4         	goto	l2804
 50455   01E9A8                     l19699:
 50456   01E9A8  80D8               	bsf	status,0,c
 50457   01E9AA                     l2804:
 50458   01E9AA  0012               	return		;funcret
 50459   01E9AC                     __end_of___fleq:
 50460                           	callstack 0
 50461                           
 50462 ;; *************** function ___fldiv *****************
 50463 ;; Defined at:
 50464 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 50465 ;; Parameters:    Size  Location     Type
 50466 ;;  b               4   42[COMRAM] unsigned char 
 50467 ;;  a               4   46[COMRAM] unsigned char 
 50468 ;; Auto vars:     Size  Location     Type
 50469 ;;  grs             4   61[COMRAM] unsigned long 
 50470 ;;  rem             4   54[COMRAM] unsigned long 
 50471 ;;  new_exp         2   59[COMRAM] short 
 50472 ;;  aexp            1   66[COMRAM] unsigned char 
 50473 ;;  bexp            1   65[COMRAM] unsigned char 
 50474 ;;  sign            1   58[COMRAM] unsigned char 
 50475 ;; Return value:  Size  Location     Type
 50476 ;;                  4   42[COMRAM] unsigned char 
 50477 ;; Registers used:
 50478 ;;		wreg, status,2, status,0
 50479 ;; Tracked objects:
 50480 ;;		On entry : 0/0
 50481 ;;		On exit  : 0/0
 50482 ;;		Unchanged: 0/0
 50483 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50484 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50485 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50487 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50488 ;;Total ram usage:       25 bytes
 50489 ;; Hardware stack levels used: 1
 50490 ;; Hardware stack levels required when called: 1
 50491 ;; This function calls:
 50492 ;;		Nothing
 50493 ;; This function is called by:
 50494 ;;		_main
 50495 ;;		_efgtoa
 50496 ;;		_ilog10
 50497 ;;		_i10x
 50498 ;;		_ftoa
 50499 ;; This function uses a non-reentrant model
 50500 ;;
 50501                           
 50502                           	psect	text141
 50503   017554                     __ptext141:
 50504                           	callstack 0
 50505   017554                     ___fldiv:
 50506                           	callstack 114
 50507   017554  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 50508   017556  0B80               	andlw	128
 50509   017558  6E3B               	movwf	___fldiv@sign^(0+1280),c
 50510   01755A  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 50511   01755C  242E               	addwf	(___fldiv@b+3)^(0+1280),w,c
 50512   01755E  6E42               	movwf	___fldiv@bexp^(0+1280),c
 50513   017560  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 50514   017562  EFB5  F0BA         	goto	u25611
 50515   017566  EFB7  F0BA         	goto	u25610
 50516   01756A                     u25611:
 50517   01756A  EFB8  F0BA         	goto	l19423
 50518   01756E                     u25610:
 50519   01756E  8042               	bsf	___fldiv@bexp^(0+1280),0,c
 50520   017570                     l19423:
 50521   017570  5042               	movf	___fldiv@bexp^(0+1280),w,c
 50522   017572  B4D8               	btfsc	status,2,c
 50523   017574  EFBE  F0BA         	goto	u25621
 50524   017578  EFC0  F0BA         	goto	u25620
 50525   01757C                     u25621:
 50526   01757C  EFD4  F0BA         	goto	l19433
 50527   017580                     u25620:
 50528   017580  2842               	incf	___fldiv@bexp^(0+1280),w,c
 50529   017582  A4D8               	btfss	status,2,c
 50530   017584  EFC6  F0BA         	goto	u25631
 50531   017588  EFC8  F0BA         	goto	u25630
 50532   01758C                     u25631:
 50533   01758C  EFD0  F0BA         	goto	l19429
 50534   017590                     u25630:
 50535   017590  0E00               	movlw	0
 50536   017592  6E2B               	movwf	___fldiv@b^(0+1280),c
 50537   017594  0E00               	movlw	0
 50538   017596  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50539   017598  0E00               	movlw	0
 50540   01759A  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50541   01759C  0E00               	movlw	0
 50542   01759E  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50543   0175A0                     l19429:
 50544   0175A0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 50545   0175A2  6A2E               	clrf	(___fldiv@b+3)^(0+1280),c
 50546   0175A4  EFDC  F0BA         	goto	l19435
 50547   0175A8                     l19433:
 50548   0175A8  0E00               	movlw	0
 50549   0175AA  6E2B               	movwf	___fldiv@b^(0+1280),c
 50550   0175AC  0E00               	movlw	0
 50551   0175AE  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50552   0175B0  0E00               	movlw	0
 50553   0175B2  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50554   0175B4  0E00               	movlw	0
 50555   0175B6  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50556   0175B8                     l19435:
 50557   0175B8  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50558   0175BA  0B80               	andlw	128
 50559   0175BC  1A3B               	xorwf	___fldiv@sign^(0+1280),f,c
 50560   0175BE  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50561   0175C0  2432               	addwf	(___fldiv@a+3)^(0+1280),w,c
 50562   0175C2  6E43               	movwf	___fldiv@aexp^(0+1280),c
 50563   0175C4  AE31               	btfss	(___fldiv@a+2)^(0+1280),7,c
 50564   0175C6  EFE7  F0BA         	goto	u25641
 50565   0175CA  EFE9  F0BA         	goto	u25640
 50566   0175CE                     u25641:
 50567   0175CE  EFEA  F0BA         	goto	l19443
 50568   0175D2                     u25640:
 50569   0175D2  8043               	bsf	___fldiv@aexp^(0+1280),0,c
 50570   0175D4                     l19443:
 50571   0175D4  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50572   0175D6  B4D8               	btfsc	status,2,c
 50573   0175D8  EFF0  F0BA         	goto	u25651
 50574   0175DC  EFF2  F0BA         	goto	u25650
 50575   0175E0                     u25651:
 50576   0175E0  EF06  F0BB         	goto	l19453
 50577   0175E4                     u25650:
 50578   0175E4  2843               	incf	___fldiv@aexp^(0+1280),w,c
 50579   0175E6  A4D8               	btfss	status,2,c
 50580   0175E8  EFF8  F0BA         	goto	u25661
 50581   0175EC  EFFA  F0BA         	goto	u25660
 50582   0175F0                     u25661:
 50583   0175F0  EF02  F0BB         	goto	l19449
 50584   0175F4                     u25660:
 50585   0175F4  0E00               	movlw	0
 50586   0175F6  6E2F               	movwf	___fldiv@a^(0+1280),c
 50587   0175F8  0E00               	movlw	0
 50588   0175FA  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 50589   0175FC  0E00               	movlw	0
 50590   0175FE  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 50591   017600  0E00               	movlw	0
 50592   017602  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 50593   017604                     l19449:
 50594   017604  8E31               	bsf	(___fldiv@a+2)^(0+1280),7,c
 50595   017606  6A32               	clrf	(___fldiv@a+3)^(0+1280),c
 50596   017608  EF0E  F0BB         	goto	l19455
 50597   01760C                     l19453:
 50598   01760C  0E00               	movlw	0
 50599   01760E  6E2F               	movwf	___fldiv@a^(0+1280),c
 50600   017610  0E00               	movlw	0
 50601   017612  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 50602   017614  0E00               	movlw	0
 50603   017616  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 50604   017618  0E00               	movlw	0
 50605   01761A  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 50606   01761C                     l19455:
 50607   01761C  502F               	movf	___fldiv@a^(0+1280),w,c
 50608   01761E  1030               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 50609   017620  1031               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 50610   017622  1032               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 50611   017624  A4D8               	btfss	status,2,c
 50612   017626  EF17  F0BB         	goto	u25671
 50613   01762A  EF19  F0BB         	goto	u25670
 50614   01762E                     u25671:
 50615   01762E  EF31  F0BB         	goto	l19467
 50616   017632                     u25670:
 50617   017632  0E00               	movlw	0
 50618   017634  6E2B               	movwf	___fldiv@b^(0+1280),c
 50619   017636  0E00               	movlw	0
 50620   017638  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50621   01763A  0E00               	movlw	0
 50622   01763C  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50623   01763E  0E00               	movlw	0
 50624   017640  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50625   017642  0E80               	movlw	128
 50626   017644  122D               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 50627   017646  0E7F               	movlw	127
 50628   017648  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 50629   01764A                     l19461:
 50630   01764A  503B               	movf	___fldiv@sign^(0+1280),w,c
 50631   01764C  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 50632   01764E  C52B  F52B         	movff	___fldiv@b,?___fldiv
 50633   017652  C52C  F52C         	movff	___fldiv@b+1,?___fldiv+1
 50634   017656  C52D  F52D         	movff	___fldiv@b+2,?___fldiv+2
 50635   01765A  C52E  F52E         	movff	___fldiv@b+3,?___fldiv+3
 50636   01765E  EF71  F0BC         	goto	l3127
 50637   017662                     l19467:
 50638   017662  5042               	movf	___fldiv@bexp^(0+1280),w,c
 50639   017664  A4D8               	btfss	status,2,c
 50640   017666  EF37  F0BB         	goto	u25681
 50641   01766A  EF39  F0BB         	goto	u25680
 50642   01766E                     u25681:
 50643   01766E  EF43  F0BB         	goto	l19475
 50644   017672                     u25680:
 50645   017672  0E00               	movlw	0
 50646   017674  6E2B               	movwf	?___fldiv^(0+1280),c
 50647   017676  0E00               	movlw	0
 50648   017678  6E2C               	movwf	(?___fldiv+1)^(0+1280),c
 50649   01767A  0E00               	movlw	0
 50650   01767C  6E2D               	movwf	(?___fldiv+2)^(0+1280),c
 50651   01767E  0E00               	movlw	0
 50652   017680  6E2E               	movwf	(?___fldiv+3)^(0+1280),c
 50653   017682  EF71  F0BC         	goto	l3127
 50654   017686                     l19475:
 50655   017686  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50656   017688  C542  F533         	movff	___fldiv@bexp,??___fldiv
 50657   01768C  6A34               	clrf	(??___fldiv+1)^(0+1280),c
 50658   01768E  5E33               	subwf	??___fldiv^(0+1280),f,c
 50659   017690  0E00               	movlw	0
 50660   017692  5A34               	subwfb	(??___fldiv+1)^(0+1280),f,c
 50661   017694  0E7F               	movlw	127
 50662   017696  2433               	addwf	??___fldiv^(0+1280),w,c
 50663   017698  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 50664   01769A  0E00               	movlw	0
 50665   01769C  2034               	addwfc	(??___fldiv+1)^(0+1280),w,c
 50666   01769E  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50667   0176A0  C52B  F537         	movff	___fldiv@b,___fldiv@rem
 50668   0176A4  C52C  F538         	movff	___fldiv@b+1,___fldiv@rem+1
 50669   0176A8  C52D  F539         	movff	___fldiv@b+2,___fldiv@rem+2
 50670   0176AC  C52E  F53A         	movff	___fldiv@b+3,___fldiv@rem+3
 50671   0176B0  0E00               	movlw	0
 50672   0176B2  6E2B               	movwf	___fldiv@b^(0+1280),c
 50673   0176B4  0E00               	movlw	0
 50674   0176B6  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50675   0176B8  0E00               	movlw	0
 50676   0176BA  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50677   0176BC  0E00               	movlw	0
 50678   0176BE  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50679   0176C0  0E00               	movlw	0
 50680   0176C2  6E3E               	movwf	___fldiv@grs^(0+1280),c
 50681   0176C4  0E00               	movlw	0
 50682   0176C6  6E3F               	movwf	(___fldiv@grs+1)^(0+1280),c
 50683   0176C8  0E00               	movlw	0
 50684   0176CA  6E40               	movwf	(___fldiv@grs+2)^(0+1280),c
 50685   0176CC  0E00               	movlw	0
 50686   0176CE  6E41               	movwf	(___fldiv@grs+3)^(0+1280),c
 50687   0176D0  6A43               	clrf	___fldiv@aexp^(0+1280),c
 50688   0176D2  EFA3  F0BB         	goto	l3129
 50689   0176D6                     l19485:
 50690   0176D6  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50691   0176D8  B4D8               	btfsc	status,2,c
 50692   0176DA  EF71  F0BB         	goto	u25691
 50693   0176DE  EF73  F0BB         	goto	u25690
 50694   0176E2                     u25691:
 50695   0176E2  EF8A  F0BB         	goto	l19493
 50696   0176E6                     u25690:
 50697   0176E6  90D8               	bcf	status,0,c
 50698   0176E8  3637               	rlcf	___fldiv@rem^(0+1280),f,c
 50699   0176EA  3638               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 50700   0176EC  3639               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 50701   0176EE  363A               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 50702   0176F0  90D8               	bcf	status,0,c
 50703   0176F2  362B               	rlcf	___fldiv@b^(0+1280),f,c
 50704   0176F4  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 50705   0176F6  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 50706   0176F8  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 50707   0176FA  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50708   0176FC  EF82  F0BB         	goto	u25701
 50709   017700  EF84  F0BB         	goto	u25700
 50710   017704                     u25701:
 50711   017704  EF85  F0BB         	goto	l3132
 50712   017708                     u25700:
 50713   017708  802B               	bsf	___fldiv@b^(0+1280),0,c
 50714   01770A                     l3132:
 50715   01770A  90D8               	bcf	status,0,c
 50716   01770C  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 50717   01770E  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 50718   017710  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 50719   017712  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 50720   017714                     l19493:
 50721   017714  502F               	movf	___fldiv@a^(0+1280),w,c
 50722   017716  5C37               	subwf	___fldiv@rem^(0+1280),w,c
 50723   017718  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 50724   01771A  5838               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 50725   01771C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 50726   01771E  5839               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 50727   017720  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50728   017722  583A               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 50729   017724  A0D8               	btfss	status,0,c
 50730   017726  EF97  F0BB         	goto	u25711
 50731   01772A  EF99  F0BB         	goto	u25710
 50732   01772E                     u25711:
 50733   01772E  EFA2  F0BB         	goto	l19499
 50734   017732                     u25710:
 50735   017732  8C41               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 50736   017734  502F               	movf	___fldiv@a^(0+1280),w,c
 50737   017736  5E37               	subwf	___fldiv@rem^(0+1280),f,c
 50738   017738  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 50739   01773A  5A38               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 50740   01773C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 50741   01773E  5A39               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 50742   017740  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50743   017742  5A3A               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 50744   017744                     l19499:
 50745   017744  2A43               	incf	___fldiv@aexp^(0+1280),f,c
 50746   017746                     l3129:
 50747   017746  0E19               	movlw	25
 50748   017748  6443               	cpfsgt	___fldiv@aexp^(0+1280),c
 50749   01774A  EFA9  F0BB         	goto	u25721
 50750   01774E  EFAB  F0BB         	goto	u25720
 50751   017752                     u25721:
 50752   017752  EF6B  F0BB         	goto	l19485
 50753   017756                     u25720:
 50754   017756  5037               	movf	___fldiv@rem^(0+1280),w,c
 50755   017758  1038               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 50756   01775A  1039               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 50757   01775C  103A               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 50758   01775E  B4D8               	btfsc	status,2,c
 50759   017760  EFB4  F0BB         	goto	u25731
 50760   017764  EFB6  F0BB         	goto	u25730
 50761   017768                     u25731:
 50762   017768  EFCE  F0BB         	goto	l19511
 50763   01776C                     u25730:
 50764   01776C  803E               	bsf	___fldiv@grs^(0+1280),0,c
 50765   01776E  EFCE  F0BB         	goto	l19511
 50766   017772                     l19505:
 50767   017772  90D8               	bcf	status,0,c
 50768   017774  362B               	rlcf	___fldiv@b^(0+1280),f,c
 50769   017776  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 50770   017778  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 50771   01777A  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 50772   01777C  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50773   01777E  EFC3  F0BB         	goto	u25741
 50774   017782  EFC5  F0BB         	goto	u25740
 50775   017786                     u25741:
 50776   017786  EFC6  F0BB         	goto	l3138
 50777   01778A                     u25740:
 50778   01778A  802B               	bsf	___fldiv@b^(0+1280),0,c
 50779   01778C                     l3138:
 50780   01778C  90D8               	bcf	status,0,c
 50781   01778E  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 50782   017790  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 50783   017792  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 50784   017794  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 50785   017796  063C               	decf	___fldiv@new_exp^(0+1280),f,c
 50786   017798  A0D8               	btfss	status,0,c
 50787   01779A  063D               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 50788   01779C                     l19511:
 50789   01779C  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 50790   01779E  EFD3  F0BB         	goto	u25751
 50791   0177A2  EFD5  F0BB         	goto	u25750
 50792   0177A6                     u25751:
 50793   0177A6  EFB9  F0BB         	goto	l19505
 50794   0177AA                     u25750:
 50795   0177AA  6A43               	clrf	___fldiv@aexp^(0+1280),c
 50796   0177AC  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50797   0177AE  EFDB  F0BB         	goto	u25761
 50798   0177B2  EFDD  F0BB         	goto	u25760
 50799   0177B6                     u25761:
 50800   0177B6  EF01  F0BC         	goto	l3140
 50801   0177BA                     u25760:
 50802   0177BA  0EFF               	movlw	255
 50803   0177BC  143E               	andwf	___fldiv@grs^(0+1280),w,c
 50804   0177BE  6E33               	movwf	??___fldiv^(0+1280),c
 50805   0177C0  0EFF               	movlw	255
 50806   0177C2  143F               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 50807   0177C4  6E34               	movwf	(??___fldiv+1)^(0+1280),c
 50808   0177C6  0EFF               	movlw	255
 50809   0177C8  1440               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 50810   0177CA  6E35               	movwf	(??___fldiv+2)^(0+1280),c
 50811   0177CC  0E7F               	movlw	127
 50812   0177CE  1441               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 50813   0177D0  6E36               	movwf	(??___fldiv+3)^(0+1280),c
 50814   0177D2  5033               	movf	??___fldiv^(0+1280),w,c
 50815   0177D4  1034               	iorwf	(??___fldiv+1)^(0+1280),w,c
 50816   0177D6  1035               	iorwf	(??___fldiv+2)^(0+1280),w,c
 50817   0177D8  1036               	iorwf	(??___fldiv+3)^(0+1280),w,c
 50818   0177DA  B4D8               	btfsc	status,2,c
 50819   0177DC  EFF2  F0BB         	goto	u25771
 50820   0177E0  EFF4  F0BB         	goto	u25770
 50821   0177E4                     u25771:
 50822   0177E4  EFF8  F0BB         	goto	l3141
 50823   0177E8                     u25770:
 50824   0177E8                     l19515:
 50825   0177E8  0E01               	movlw	1
 50826   0177EA  6E43               	movwf	___fldiv@aexp^(0+1280),c
 50827   0177EC  EF01  F0BC         	goto	l3140
 50828   0177F0                     l3141:
 50829   0177F0  A02B               	btfss	___fldiv@b^(0+1280),0,c
 50830   0177F2  EFFD  F0BB         	goto	u25781
 50831   0177F6  EFFF  F0BB         	goto	u25780
 50832   0177FA                     u25781:
 50833   0177FA  EF01  F0BC         	goto	l3140
 50834   0177FE                     u25780:
 50835   0177FE  EFF4  F0BB         	goto	l19515
 50836   017802                     l3140:
 50837   017802  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50838   017804  B4D8               	btfsc	status,2,c
 50839   017806  EF07  F0BC         	goto	u25791
 50840   01780A  EF09  F0BC         	goto	u25790
 50841   01780E                     u25791:
 50842   01780E  EF2D  F0BC         	goto	l19527
 50843   017812                     u25790:
 50844   017812  0E01               	movlw	1
 50845   017814  262B               	addwf	___fldiv@b^(0+1280),f,c
 50846   017816  0E00               	movlw	0
 50847   017818  222C               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 50848   01781A  222D               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 50849   01781C  222E               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 50850   01781E  A02E               	btfss	(___fldiv@b+3)^(0+1280),0,c
 50851   017820  EF14  F0BC         	goto	u25801
 50852   017824  EF16  F0BC         	goto	u25800
 50853   017828                     u25801:
 50854   017828  EF2D  F0BC         	goto	l19527
 50855   01782C                     u25800:
 50856   01782C  C52B  F533         	movff	___fldiv@b,??___fldiv
 50857   017830  C52C  F534         	movff	___fldiv@b+1,??___fldiv+1
 50858   017834  C52D  F535         	movff	___fldiv@b+2,??___fldiv+2
 50859   017838  C52E  F536         	movff	___fldiv@b+3,??___fldiv+3
 50860   01783C  3436               	rlcf	(??___fldiv+3)^(0+1280),w,c
 50861   01783E  3236               	rrcf	(??___fldiv+3)^(0+1280),f,c
 50862   017840  3235               	rrcf	(??___fldiv+2)^(0+1280),f,c
 50863   017842  3234               	rrcf	(??___fldiv+1)^(0+1280),f,c
 50864   017844  3233               	rrcf	??___fldiv^(0+1280),f,c
 50865   017846  C533  F52B         	movff	??___fldiv,___fldiv@b
 50866   01784A  C534  F52C         	movff	??___fldiv+1,___fldiv@b+1
 50867   01784E  C535  F52D         	movff	??___fldiv+2,___fldiv@b+2
 50868   017852  C536  F52E         	movff	??___fldiv+3,___fldiv@b+3
 50869   017856  4A3C               	infsnz	___fldiv@new_exp^(0+1280),f,c
 50870   017858  2A3D               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 50871   01785A                     l19527:
 50872   01785A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 50873   01785C  EF38  F0BC         	goto	u25811
 50874   017860  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 50875   017862  E108               	bnz	u25810
 50876   017864  283C               	incf	___fldiv@new_exp^(0+1280),w,c
 50877   017866  A0D8               	btfss	status,0,c
 50878   017868  EF38  F0BC         	goto	u25811
 50879   01786C  EF3A  F0BC         	goto	u25810
 50880   017870                     u25811:
 50881   017870  EF45  F0BC         	goto	l19531
 50882   017874                     u25810:
 50883   017874  0E00               	movlw	0
 50884   017876  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50885   017878  683C               	setf	___fldiv@new_exp^(0+1280),c
 50886   01787A  0E00               	movlw	0
 50887   01787C  6E2B               	movwf	___fldiv@b^(0+1280),c
 50888   01787E  0E00               	movlw	0
 50889   017880  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50890   017882  0E00               	movlw	0
 50891   017884  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50892   017886  0E00               	movlw	0
 50893   017888  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50894   01788A                     l19531:
 50895   01788A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 50896   01788C  EF52  F0BC         	goto	u25820
 50897   017890  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 50898   017892  E106               	bnz	u25821
 50899   017894  043C               	decf	___fldiv@new_exp^(0+1280),w,c
 50900   017896  B0D8               	btfsc	status,0,c
 50901   017898  EF50  F0BC         	goto	u25821
 50902   01789C  EF52  F0BC         	goto	u25820
 50903   0178A0                     u25821:
 50904   0178A0  EF5F  F0BC         	goto	l19537
 50905   0178A4                     u25820:
 50906   0178A4  0E00               	movlw	0
 50907   0178A6  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50908   0178A8  0E00               	movlw	0
 50909   0178AA  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 50910   0178AC  0E00               	movlw	0
 50911   0178AE  6E2B               	movwf	___fldiv@b^(0+1280),c
 50912   0178B0  0E00               	movlw	0
 50913   0178B2  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50914   0178B4  0E00               	movlw	0
 50915   0178B6  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50916   0178B8  0E00               	movlw	0
 50917   0178BA  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50918   0178BC  6A3B               	clrf	___fldiv@sign^(0+1280),c
 50919   0178BE                     l19537:
 50920   0178BE  C53C  F542         	movff	___fldiv@new_exp,___fldiv@bexp
 50921   0178C2  A042               	btfss	___fldiv@bexp^(0+1280),0,c
 50922   0178C4  EF66  F0BC         	goto	u25831
 50923   0178C8  EF68  F0BC         	goto	u25830
 50924   0178CC                     u25831:
 50925   0178CC  EF6B  F0BC         	goto	l19543
 50926   0178D0                     u25830:
 50927   0178D0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 50928   0178D2  EF6C  F0BC         	goto	l19545
 50929   0178D6                     l19543:
 50930   0178D6  9E2D               	bcf	(___fldiv@b+2)^(0+1280),7,c
 50931   0178D8                     l19545:
 50932   0178D8  90D8               	bcf	status,0,c
 50933   0178DA  3042               	rrcf	___fldiv@bexp^(0+1280),w,c
 50934   0178DC  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50935   0178DE  EF25  F0BB         	goto	l19461
 50936   0178E2                     l3127:
 50937   0178E2  0012               	return		;funcret
 50938   0178E4                     __end_of___fldiv:
 50939                           	callstack 0
 50940                           
 50941 ;; *************** function _dtoa *****************
 50942 ;; Defined at:
 50943 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 50944 ;; Parameters:    Size  Location     Type
 50945 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 50946 ;;		 -> sprintf@f(11), NULL(0), 
 50947 ;;  d               4   31[COMRAM] long 
 50948 ;; Auto vars:     Size  Location     Type
 50949 ;;  i               2   42[COMRAM] int 
 50950 ;;  w               2   39[COMRAM] int 
 50951 ;;  p               2   37[COMRAM] int 
 50952 ;;  s               1   41[COMRAM] unsigned char 
 50953 ;; Return value:  Size  Location     Type
 50954 ;;                  1    wreg      void 
 50955 ;; Registers used:
 50956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 50957 ;; Tracked objects:
 50958 ;;		On entry : 0/0
 50959 ;;		On exit  : 0/0
 50960 ;;		Unchanged: 0/0
 50961 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50963 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50965 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50966 ;;Total ram usage:       15 bytes
 50967 ;; Hardware stack levels used: 1
 50968 ;; Hardware stack levels required when called: 5
 50969 ;; This function calls:
 50970 ;;		___aldiv
 50971 ;;		___almod
 50972 ;;		_abs
 50973 ;;		_pad
 50974 ;; This function is called by:
 50975 ;;		_vfpfcnvrt
 50976 ;; This function uses a non-reentrant model
 50977 ;;
 50978                           
 50979                           	psect	text142
 50980   01A702                     __ptext142:
 50981                           	callstack 0
 50982   01A702                     _dtoa:
 50983                           	callstack 111
 50984   01A702                     
 50985                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 50986   01A702  BE23               	btfsc	(dtoa@d+3)^(0+1280),7,c
 50987   01A704  EF86  F0D3         	goto	u26361
 50988   01A708  EF89  F0D3         	goto	u26360
 50989   01A70C                     u26361:
 50990   01A70C  0E01               	movlw	1
 50991   01A70E  EF8A  F0D3         	goto	u26370
 50992   01A712                     u26360:
 50993   01A712  0E00               	movlw	0
 50994   01A714                     u26370:
 50995   01A714  6E2A               	movwf	dtoa@s^(0+1280),c
 50996                           
 50997                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 50998   01A716  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 50999   01A718  EF90  F0D3         	goto	u26381
 51000   01A71C  EF92  F0D3         	goto	u26380
 51001   01A720                     u26381:
 51002   01A720  EF93  F0D3         	goto	l19841
 51003   01A724                     u26380:
 51004   01A724                     
 51005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 51006   01A724  925C               	bcf	_flags^(0+1280),1,c
 51007   01A726                     l19841:
 51008                           
 51009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 51010   01A726  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 51011   01A728  EF9A  F0D3         	goto	u26390
 51012   01A72C  EF98  F0D3         	goto	u26391
 51013   01A730                     u26391:
 51014   01A730  EFA0  F0D3         	goto	l3360
 51015   01A734                     u26390:
 51016   01A734  0E00               	movlw	0
 51017   01A736  6E27               	movwf	(dtoa@p+1)^(0+1280),c
 51018   01A738  0E01               	movlw	1
 51019   01A73A  6E26               	movwf	dtoa@p^(0+1280),c
 51020   01A73C  EFA4  F0D3         	goto	l3362
 51021   01A740                     l3360:
 51022   01A740  C55A  F526         	movff	_prec,dtoa@p
 51023   01A744  C55B  F527         	movff	_prec+1,dtoa@p+1
 51024   01A748                     l3362:
 51025                           
 51026                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 51027   01A748  C7B1  F528         	movff	_width,dtoa@w
 51028   01A74C  C7B2  F529         	movff	_width+1,dtoa@w+1
 51029   01A750                     
 51030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 51031   01A750  502A               	movf	dtoa@s^(0+1280),w,c
 51032   01A752  B4D8               	btfsc	status,2,c
 51033   01A754  EFAE  F0D3         	goto	u26401
 51034   01A758  EFB0  F0D3         	goto	u26400
 51035   01A75C                     u26401:
 51036   01A75C  EFC7  F0D3         	goto	l3363
 51037   01A760                     u26400:
 51038   01A760                     
 51039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 51040   01A760  0628               	decf	dtoa@w^(0+1280),f,c
 51041   01A762  A0D8               	btfss	status,0,c
 51042   01A764  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 51043   01A766                     
 51044                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 51045   01A766  502A               	movf	dtoa@s^(0+1280),w,c
 51046   01A768  A4D8               	btfss	status,2,c
 51047   01A76A  EFB9  F0D3         	goto	u26411
 51048   01A76E  EFBB  F0D3         	goto	u26410
 51049   01A772                     u26411:
 51050   01A772  EFC1  F0D3         	goto	l19853
 51051   01A776                     u26410:
 51052   01A776  0E00               	movlw	0
 51053   01A778  6E25               	movwf	(_dtoa$4721+1)^(0+1280),c
 51054   01A77A  0E2B               	movlw	43
 51055   01A77C  6E24               	movwf	_dtoa$4721^(0+1280),c
 51056   01A77E  EFC5  F0D3         	goto	l19855
 51057   01A782                     l19853:
 51058   01A782  0E00               	movlw	0
 51059   01A784  6E25               	movwf	(_dtoa$4721+1)^(0+1280),c
 51060   01A786  0E2D               	movlw	45
 51061   01A788  6E24               	movwf	_dtoa$4721^(0+1280),c
 51062   01A78A                     l19855:
 51063   01A78A  C524  F52A         	movff	_dtoa$4721,dtoa@s
 51064   01A78E                     l3363:
 51065                           
 51066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 51067   01A78E  0E00               	movlw	0
 51068   01A790  6E2C               	movwf	(dtoa@i+1)^(0+1280),c
 51069   01A792  0E4F               	movlw	79
 51070   01A794  6E2B               	movwf	dtoa@i^(0+1280),c
 51071   01A796                     
 51072                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 51073   01A796  0108               	movlb	8	; () banked
 51074   01A798  6B77               	clrf	(_dbuf+79)& (0+255),b
 51075                           
 51076                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 51077   01A79A  EF13  F0D4         	goto	l19869
 51078   01A79E                     l19859:
 51079                           
 51080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 51081   01A79E  062B               	decf	dtoa@i^(0+1280),f,c
 51082   01A7A0  A0D8               	btfss	status,0,c
 51083   01A7A2  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 51084   01A7A4                     
 51085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 51086   01A7A4  0E28               	movlw	low _dbuf
 51087   01A7A6  242B               	addwf	dtoa@i^(0+1280),w,c
 51088   01A7A8  6ED9               	movwf	fsr2l,c
 51089   01A7AA  0E08               	movlw	high _dbuf
 51090   01A7AC  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51091   01A7AE  6EDA               	movwf	fsr2h,c
 51092   01A7B0  C520  F504         	movff	dtoa@d,___almod@dividend
 51093   01A7B4  C521  F505         	movff	dtoa@d+1,___almod@dividend+1
 51094   01A7B8  C522  F506         	movff	dtoa@d+2,___almod@dividend+2
 51095   01A7BC  C523  F507         	movff	dtoa@d+3,___almod@dividend+3
 51096   01A7C0  0E0A               	movlw	10
 51097   01A7C2  6E08               	movwf	___almod@divisor^(0+1280),c
 51098   01A7C4  0E00               	movlw	0
 51099   01A7C6  6E09               	movwf	(___almod@divisor+1)^(0+1280),c
 51100   01A7C8  0E00               	movlw	0
 51101   01A7CA  6E0A               	movwf	(___almod@divisor+2)^(0+1280),c
 51102   01A7CC  0E00               	movlw	0
 51103   01A7CE  6E0B               	movwf	(___almod@divisor+3)^(0+1280),c
 51104   01A7D0  EC06  F0ED         	call	___almod	;wreg free
 51105   01A7D4  C504  F50E         	movff	?___almod,abs@a
 51106   01A7D8  C505  F50F         	movff	?___almod+1,abs@a+1
 51107   01A7DC  EC68  F0FF         	call	_abs	;wreg free
 51108   01A7E0  500E               	movf	?_abs^(0+1280),w,c
 51109   01A7E2  0F30               	addlw	48
 51110   01A7E4  6EDF               	movwf	indf2,c
 51111   01A7E6                     
 51112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
 51113   01A7E6  0626               	decf	dtoa@p^(0+1280),f,c
 51114   01A7E8  A0D8               	btfss	status,0,c
 51115   01A7EA  0627               	decf	(dtoa@p+1)^(0+1280),f,c
 51116   01A7EC                     
 51117                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 51118   01A7EC  0628               	decf	dtoa@w^(0+1280),f,c
 51119   01A7EE  A0D8               	btfss	status,0,c
 51120   01A7F0  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 51121   01A7F2                     
 51122                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 51123   01A7F2  C520  F504         	movff	dtoa@d,___aldiv@dividend
 51124   01A7F6  C521  F505         	movff	dtoa@d+1,___aldiv@dividend+1
 51125   01A7FA  C522  F506         	movff	dtoa@d+2,___aldiv@dividend+2
 51126   01A7FE  C523  F507         	movff	dtoa@d+3,___aldiv@dividend+3
 51127   01A802  0E0A               	movlw	10
 51128   01A804  6E08               	movwf	___aldiv@divisor^(0+1280),c
 51129   01A806  0E00               	movlw	0
 51130   01A808  6E09               	movwf	(___aldiv@divisor+1)^(0+1280),c
 51131   01A80A  0E00               	movlw	0
 51132   01A80C  6E0A               	movwf	(___aldiv@divisor+2)^(0+1280),c
 51133   01A80E  0E00               	movlw	0
 51134   01A810  6E0B               	movwf	(___aldiv@divisor+3)^(0+1280),c
 51135   01A812  EC97  F0E7         	call	___aldiv	;wreg free
 51136   01A816  C504  F520         	movff	?___aldiv,dtoa@d
 51137   01A81A  C505  F521         	movff	?___aldiv+1,dtoa@d+1
 51138   01A81E  C506  F522         	movff	?___aldiv+2,dtoa@d+2
 51139   01A822  C507  F523         	movff	?___aldiv+3,dtoa@d+3
 51140   01A826                     l19869:
 51141                           
 51142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 51143   01A826  BE2C               	btfsc	(dtoa@i+1)^(0+1280),7,c
 51144   01A828  EF1E  F0D4         	goto	u26421
 51145   01A82C  502C               	movf	(dtoa@i+1)^(0+1280),w,c
 51146   01A82E  E108               	bnz	u26420
 51147   01A830  042B               	decf	dtoa@i^(0+1280),w,c
 51148   01A832  A0D8               	btfss	status,0,c
 51149   01A834  EF1E  F0D4         	goto	u26421
 51150   01A838  EF20  F0D4         	goto	u26420
 51151   01A83C                     u26421:
 51152   01A83C  EF4C  F0D4         	goto	l19879
 51153   01A840                     u26420:
 51154   01A840  5020               	movf	dtoa@d^(0+1280),w,c
 51155   01A842  1021               	iorwf	(dtoa@d+1)^(0+1280),w,c
 51156   01A844  1022               	iorwf	(dtoa@d+2)^(0+1280),w,c
 51157   01A846  1023               	iorwf	(dtoa@d+3)^(0+1280),w,c
 51158   01A848  A4D8               	btfss	status,2,c
 51159   01A84A  EF29  F0D4         	goto	u26431
 51160   01A84E  EF2B  F0D4         	goto	u26430
 51161   01A852                     u26431:
 51162   01A852  EFCF  F0D3         	goto	l19859
 51163   01A856                     u26430:
 51164   01A856  BE27               	btfsc	(dtoa@p+1)^(0+1280),7,c
 51165   01A858  EF38  F0D4         	goto	u26440
 51166   01A85C  5027               	movf	(dtoa@p+1)^(0+1280),w,c
 51167   01A85E  E106               	bnz	u26441
 51168   01A860  0426               	decf	dtoa@p^(0+1280),w,c
 51169   01A862  B0D8               	btfsc	status,0,c
 51170   01A864  EF36  F0D4         	goto	u26441
 51171   01A868  EF38  F0D4         	goto	u26440
 51172   01A86C                     u26441:
 51173   01A86C  EFCF  F0D3         	goto	l19859
 51174   01A870                     u26440:
 51175   01A870  BE29               	btfsc	(dtoa@w+1)^(0+1280),7,c
 51176   01A872  EF43  F0D4         	goto	u26451
 51177   01A876  5029               	movf	(dtoa@w+1)^(0+1280),w,c
 51178   01A878  E108               	bnz	u26450
 51179   01A87A  0428               	decf	dtoa@w^(0+1280),w,c
 51180   01A87C  A0D8               	btfss	status,0,c
 51181   01A87E  EF43  F0D4         	goto	u26451
 51182   01A882  EF45  F0D4         	goto	u26450
 51183   01A886                     u26451:
 51184   01A886  EF4C  F0D4         	goto	l19879
 51185   01A88A                     u26450:
 51186   01A88A  B25C               	btfsc	_flags^(0+1280),1,c
 51187   01A88C  EF4A  F0D4         	goto	u26461
 51188   01A890  EF4C  F0D4         	goto	u26460
 51189   01A894                     u26461:
 51190   01A894  EFCF  F0D3         	goto	l19859
 51191   01A898                     u26460:
 51192   01A898                     l19879:
 51193                           
 51194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 51195   01A898  502A               	movf	dtoa@s^(0+1280),w,c
 51196   01A89A  B4D8               	btfsc	status,2,c
 51197   01A89C  EF52  F0D4         	goto	u26471
 51198   01A8A0  EF54  F0D4         	goto	u26470
 51199   01A8A4                     u26471:
 51200   01A8A4  EF5F  F0D4         	goto	l19885
 51201   01A8A8                     u26470:
 51202   01A8A8                     
 51203                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 51204   01A8A8  062B               	decf	dtoa@i^(0+1280),f,c
 51205   01A8AA  A0D8               	btfss	status,0,c
 51206   01A8AC  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 51207   01A8AE                     
 51208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 51209   01A8AE  0E28               	movlw	low _dbuf
 51210   01A8B0  242B               	addwf	dtoa@i^(0+1280),w,c
 51211   01A8B2  6ED9               	movwf	fsr2l,c
 51212   01A8B4  0E08               	movlw	high _dbuf
 51213   01A8B6  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51214   01A8B8  6EDA               	movwf	fsr2h,c
 51215   01A8BA  C52A  F4DF         	movff	dtoa@s,indf2
 51216   01A8BE                     l19885:
 51217                           
 51218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 51219   01A8BE  C51E  F515         	movff	dtoa@fp,pad@fp
 51220   01A8C2  C51F  F516         	movff	dtoa@fp+1,pad@fp+1
 51221   01A8C6  0E28               	movlw	low _dbuf
 51222   01A8C8  242B               	addwf	dtoa@i^(0+1280),w,c
 51223   01A8CA  6E17               	movwf	pad@buf^(0+1280),c
 51224   01A8CC  0E08               	movlw	high _dbuf
 51225   01A8CE  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51226   01A8D0  6E18               	movwf	(pad@buf+1)^(0+1280),c
 51227   01A8D2  C528  F519         	movff	dtoa@w,pad@p
 51228   01A8D6  C529  F51A         	movff	dtoa@w+1,pad@p+1
 51229   01A8DA  EC1F  F0F6         	call	_pad	;wreg free
 51230   01A8DE  0012               	return		;funcret
 51231   01A8E0                     __end_of_dtoa:
 51232                           	callstack 0
 51233                           
 51234 ;; *************** function _pad *****************
 51235 ;; Defined at:
 51236 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 51237 ;; Parameters:    Size  Location     Type
 51238 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 51239 ;;		 -> sprintf@f(11), NULL(0), 
 51240 ;;  buf             2   22[COMRAM] PTR unsigned char 
 51241 ;;		 -> dbuf(80), 
 51242 ;;  p               2   24[COMRAM] int 
 51243 ;; Auto vars:     Size  Location     Type
 51244 ;;  i               2   27[COMRAM] int 
 51245 ;; Return value:  Size  Location     Type
 51246 ;;                  1    wreg      void 
 51247 ;; Registers used:
 51248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51249 ;; Tracked objects:
 51250 ;;		On entry : 0/0
 51251 ;;		On exit  : 0/0
 51252 ;;		Unchanged: 0/0
 51253 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51254 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51257 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51258 ;;Total ram usage:        9 bytes
 51259 ;; Hardware stack levels used: 1
 51260 ;; Hardware stack levels required when called: 4
 51261 ;; This function calls:
 51262 ;;		_fputc
 51263 ;;		_fputs
 51264 ;; This function is called by:
 51265 ;;		_dtoa
 51266 ;;		_efgtoa
 51267 ;;		_xtoa
 51268 ;; This function uses a non-reentrant model
 51269 ;;
 51270                           
 51271                           	psect	text143
 51272   01EC3E                     __ptext143:
 51273                           	callstack 0
 51274   01EC3E                     _pad:
 51275                           	callstack 111
 51276   01EC3E                     
 51277                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 51278   01EC3E  A05C               	btfss	_flags^(0+1280),0,c
 51279   01EC40  EF24  F0F6         	goto	u26191
 51280   01EC44  EF26  F0F6         	goto	u26190
 51281   01EC48                     u26191:
 51282   01EC48  EF30  F0F6         	goto	l19781
 51283   01EC4C                     u26190:
 51284   01EC4C                     
 51285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 51286   01EC4C  C517  F50E         	movff	pad@buf,fputs@s
 51287   01EC50  C518  F50F         	movff	pad@buf+1,fputs@s+1
 51288   01EC54  C515  F510         	movff	pad@fp,fputs@fp
 51289   01EC58  C516  F511         	movff	pad@fp+1,fputs@fp+1
 51290   01EC5C  ECFF  F0FD         	call	_fputs	;wreg free
 51291   01EC60                     l19781:
 51292                           
 51293                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 51294   01EC60  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
 51295   01EC62  EF37  F0F6         	goto	u26200
 51296   01EC66  EF35  F0F6         	goto	u26201
 51297   01EC6A                     u26201:
 51298   01EC6A  EF3B  F0F6         	goto	l3350
 51299   01EC6E                     u26200:
 51300   01EC6E                     
 51301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 51302   01EC6E  0E00               	movlw	0
 51303   01EC70  6E1A               	movwf	(pad@p+1)^(0+1280),c
 51304   01EC72  0E00               	movlw	0
 51305   01EC74  6E19               	movwf	pad@p^(0+1280),c
 51306   01EC76                     l3350:
 51307                           
 51308                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 51309   01EC76  0E00               	movlw	0
 51310   01EC78  6E1D               	movwf	(pad@i+1)^(0+1280),c
 51311   01EC7A  0E00               	movlw	0
 51312   01EC7C  6E1C               	movwf	pad@i^(0+1280),c
 51313                           
 51314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 51315   01EC7E  EF4D  F0F6         	goto	l19789
 51316   01EC82                     l19785:
 51317                           
 51318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 51319   01EC82  0E00               	movlw	0
 51320   01EC84  6E06               	movwf	(fputc@c+1)^(0+1280),c
 51321   01EC86  0E20               	movlw	32
 51322   01EC88  6E05               	movwf	fputc@c^(0+1280),c
 51323   01EC8A  C515  F507         	movff	pad@fp,fputc@fp
 51324   01EC8E  C516  F508         	movff	pad@fp+1,fputc@fp+1
 51325   01EC92  EC45  F0F1         	call	_fputc	;wreg free
 51326   01EC96                     
 51327                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 51328   01EC96  4A1C               	infsnz	pad@i^(0+1280),f,c
 51329   01EC98  2A1D               	incf	(pad@i+1)^(0+1280),f,c
 51330   01EC9A                     l19789:
 51331                           
 51332                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 51333   01EC9A  5019               	movf	pad@p^(0+1280),w,c
 51334   01EC9C  5C1C               	subwf	pad@i^(0+1280),w,c
 51335   01EC9E  501D               	movf	(pad@i+1)^(0+1280),w,c
 51336   01ECA0  0A80               	xorlw	128
 51337   01ECA2  6E1B               	movwf	??_pad^(0+1280),c
 51338   01ECA4  501A               	movf	(pad@p+1)^(0+1280),w,c
 51339   01ECA6  0A80               	xorlw	128
 51340   01ECA8  581B               	subwfb	??_pad^(0+1280),w,c
 51341   01ECAA  A0D8               	btfss	status,0,c
 51342   01ECAC  EF5A  F0F6         	goto	u26211
 51343   01ECB0  EF5C  F0F6         	goto	u26210
 51344   01ECB4                     u26211:
 51345   01ECB4  EF41  F0F6         	goto	l19785
 51346   01ECB8                     u26210:
 51347   01ECB8                     
 51348                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 51349   01ECB8  B05C               	btfsc	_flags^(0+1280),0,c
 51350   01ECBA  EF61  F0F6         	goto	u26221
 51351   01ECBE  EF63  F0F6         	goto	u26220
 51352   01ECC2                     u26221:
 51353   01ECC2  EF6D  F0F6         	goto	l3355
 51354   01ECC6                     u26220:
 51355   01ECC6                     
 51356                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 51357   01ECC6  C517  F50E         	movff	pad@buf,fputs@s
 51358   01ECCA  C518  F50F         	movff	pad@buf+1,fputs@s+1
 51359   01ECCE  C515  F510         	movff	pad@fp,fputs@fp
 51360   01ECD2  C516  F511         	movff	pad@fp+1,fputs@fp+1
 51361   01ECD6  ECFF  F0FD         	call	_fputs	;wreg free
 51362   01ECDA                     l3355:
 51363   01ECDA  0012               	return		;funcret
 51364   01ECDC                     __end_of_pad:
 51365                           	callstack 0
 51366                           
 51367 ;; *************** function _fputs *****************
 51368 ;; Defined at:
 51369 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 51370 ;; Parameters:    Size  Location     Type
 51371 ;;  s               2   13[COMRAM] PTR const unsigned char 
 51372 ;;		 -> dbuf(80), 
 51373 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 51374 ;;		 -> sprintf@f(11), NULL(0), 
 51375 ;; Auto vars:     Size  Location     Type
 51376 ;;  i               2   18[COMRAM] int 
 51377 ;;  c               1   17[COMRAM] unsigned char 
 51378 ;; Return value:  Size  Location     Type
 51379 ;;                  2   13[COMRAM] int 
 51380 ;; Registers used:
 51381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51382 ;; Tracked objects:
 51383 ;;		On entry : 0/0
 51384 ;;		On exit  : 0/0
 51385 ;;		Unchanged: 0/0
 51386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51388 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51390 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51391 ;;Total ram usage:        7 bytes
 51392 ;; Hardware stack levels used: 1
 51393 ;; Hardware stack levels required when called: 3
 51394 ;; This function calls:
 51395 ;;		_fputc
 51396 ;; This function is called by:
 51397 ;;		_pad
 51398 ;; This function uses a non-reentrant model
 51399 ;;
 51400                           
 51401                           	psect	text144
 51402   01FBFE                     __ptext144:
 51403                           	callstack 0
 51404   01FBFE                     _fputs:
 51405                           	callstack 111
 51406   01FBFE  0E00               	movlw	0
 51407   01FC00  6E14               	movwf	(fputs@i+1)^(0+1280),c
 51408   01FC02  0E00               	movlw	0
 51409   01FC04  6E13               	movwf	fputs@i^(0+1280),c
 51410   01FC06  EF10  F0FE         	goto	l19301
 51411   01FC0A                     l19297:
 51412   01FC0A  C512  F505         	movff	fputs@c,fputc@c
 51413   01FC0E  6A06               	clrf	(fputc@c+1)^(0+1280),c
 51414   01FC10  C510  F507         	movff	fputs@fp,fputc@fp
 51415   01FC14  C511  F508         	movff	fputs@fp+1,fputc@fp+1
 51416   01FC18  EC45  F0F1         	call	_fputc	;wreg free
 51417   01FC1C  4A13               	infsnz	fputs@i^(0+1280),f,c
 51418   01FC1E  2A14               	incf	(fputs@i+1)^(0+1280),f,c
 51419   01FC20                     l19301:
 51420   01FC20  5013               	movf	fputs@i^(0+1280),w,c
 51421   01FC22  240E               	addwf	fputs@s^(0+1280),w,c
 51422   01FC24  6ED9               	movwf	fsr2l,c
 51423   01FC26  5014               	movf	(fputs@i+1)^(0+1280),w,c
 51424   01FC28  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
 51425   01FC2A  6EDA               	movwf	fsr2h,c
 51426   01FC2C  50DF               	movf	indf2,w,c
 51427   01FC2E  6E12               	movwf	fputs@c^(0+1280),c
 51428   01FC30  5012               	movf	fputs@c^(0+1280),w,c
 51429   01FC32  A4D8               	btfss	status,2,c
 51430   01FC34  EF1E  F0FE         	goto	u25401
 51431   01FC38  EF20  F0FE         	goto	u25400
 51432   01FC3C                     u25401:
 51433   01FC3C  EF05  F0FE         	goto	l19297
 51434   01FC40                     u25400:
 51435   01FC40  0012               	return		;funcret
 51436   01FC42                     __end_of_fputs:
 51437                           	callstack 0
 51438                           
 51439 ;; *************** function _fputc *****************
 51440 ;; Defined at:
 51441 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 51442 ;; Parameters:    Size  Location     Type
 51443 ;;  c               2    4[COMRAM] int 
 51444 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 51445 ;;		 -> sprintf@f(11), NULL(0), 
 51446 ;; Auto vars:     Size  Location     Type
 51447 ;;		None
 51448 ;; Return value:  Size  Location     Type
 51449 ;;                  2    4[COMRAM] int 
 51450 ;; Registers used:
 51451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51452 ;; Tracked objects:
 51453 ;;		On entry : 0/0
 51454 ;;		On exit  : 0/0
 51455 ;;		Unchanged: 0/0
 51456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51459 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51460 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51461 ;;Total ram usage:        9 bytes
 51462 ;; Hardware stack levels used: 1
 51463 ;; Hardware stack levels required when called: 2
 51464 ;; This function calls:
 51465 ;;		_putch
 51466 ;; This function is called by:
 51467 ;;		_pad
 51468 ;;		_stoa
 51469 ;;		_vfpfcnvrt
 51470 ;;		_fputs
 51471 ;; This function uses a non-reentrant model
 51472 ;;
 51473                           
 51474                           	psect	text145
 51475   01E28A                     __ptext145:
 51476                           	callstack 0
 51477   01E28A                     _fputc:
 51478                           	callstack 111
 51479   01E28A  5007               	movf	fputc@fp^(0+1280),w,c
 51480   01E28C  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 51481   01E28E  B4D8               	btfsc	status,2,c
 51482   01E290  EF4C  F0F1         	goto	u24971
 51483   01E294  EF4E  F0F1         	goto	u24970
 51484   01E298                     u24971:
 51485   01E298  EF57  F0F1         	goto	l19091
 51486   01E29C                     u24970:
 51487   01E29C  5007               	movf	fputc@fp^(0+1280),w,c
 51488   01E29E  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 51489   01E2A0  A4D8               	btfss	status,2,c
 51490   01E2A2  EF55  F0F1         	goto	u24981
 51491   01E2A6  EF57  F0F1         	goto	u24980
 51492   01E2AA                     u24981:
 51493   01E2AA  EF5C  F0F1         	goto	l19093
 51494   01E2AE                     u24980:
 51495   01E2AE                     l19091:
 51496   01E2AE  5005               	movf	fputc@c^(0+1280),w,c
 51497   01E2B0  EC03  F001         	call	_putch
 51498   01E2B4  EFA9  F0F1         	goto	l3587
 51499   01E2B8                     l19093:
 51500   01E2B8  EE20 F009          	lfsr	2,9
 51501   01E2BC  5007               	movf	fputc@fp^(0+1280),w,c
 51502   01E2BE  26D9               	addwf	fsr2l,f,c
 51503   01E2C0  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51504   01E2C2  22DA               	addwfc	fsr2h,f,c
 51505   01E2C4  50DE               	movf	postinc2,w,c
 51506   01E2C6  10DE               	iorwf	postinc2,w,c
 51507   01E2C8  B4D8               	btfsc	status,2,c
 51508   01E2CA  EF69  F0F1         	goto	u24991
 51509   01E2CE  EF6B  F0F1         	goto	u24990
 51510   01E2D2                     u24991:
 51511   01E2D2  EF86  F0F1         	goto	l19097
 51512   01E2D6                     u24990:
 51513   01E2D6  EE20 F009          	lfsr	2,9
 51514   01E2DA  5007               	movf	fputc@fp^(0+1280),w,c
 51515   01E2DC  26D9               	addwf	fsr2l,f,c
 51516   01E2DE  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51517   01E2E0  22DA               	addwfc	fsr2h,f,c
 51518   01E2E2  EE10 F002          	lfsr	1,2
 51519   01E2E6  5007               	movf	fputc@fp^(0+1280),w,c
 51520   01E2E8  26E1               	addwf	fsr1l,f,c
 51521   01E2EA  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51522   01E2EC  22E2               	addwfc	fsr1h,f,c
 51523   01E2EE  50DE               	movf	postinc2,w,c
 51524   01E2F0  5CE6               	subwf	postinc1,w,c
 51525   01E2F2  50E6               	movf	postinc1,w,c
 51526   01E2F4  0A80               	xorlw	128
 51527   01E2F6  6E0D               	movwf	(??_fputc+4)^(0+1280),c
 51528   01E2F8  50DE               	movf	postinc2,w,c
 51529   01E2FA  0A80               	xorlw	128
 51530   01E2FC  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
 51531   01E2FE  B0D8               	btfsc	status,0,c
 51532   01E300  EF84  F0F1         	goto	u25001
 51533   01E304  EF86  F0F1         	goto	u25000
 51534   01E308                     u25001:
 51535   01E308  EFA9  F0F1         	goto	l3587
 51536   01E30C                     u25000:
 51537   01E30C                     l19097:
 51538   01E30C  EE20 F002          	lfsr	2,2
 51539   01E310  5007               	movf	fputc@fp^(0+1280),w,c
 51540   01E312  26D9               	addwf	fsr2l,f,c
 51541   01E314  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51542   01E316  22DA               	addwfc	fsr2h,f,c
 51543   01E318  C4DE F509          	movff	postinc2,??_fputc
 51544   01E31C  C4DD F50A          	movff	postdec2,??_fputc+1
 51545   01E320  C507  F4D9         	movff	fputc@fp,fsr2l
 51546   01E324  C508  F4DA         	movff	fputc@fp+1,fsr2h
 51547   01E328  C4DE F50B          	movff	postinc2,??_fputc+2
 51548   01E32C  C4DD F50C          	movff	postdec2,??_fputc+3
 51549   01E330  5009               	movf	??_fputc^(0+1280),w,c
 51550   01E332  240B               	addwf	(??_fputc+2)^(0+1280),w,c
 51551   01E334  6ED9               	movwf	fsr2l,c
 51552   01E336  500A               	movf	(??_fputc+1)^(0+1280),w,c
 51553   01E338  200C               	addwfc	(??_fputc+3)^(0+1280),w,c
 51554   01E33A  6EDA               	movwf	fsr2h,c
 51555   01E33C  C505  F4DF         	movff	fputc@c,indf2
 51556   01E340  EE20 F002          	lfsr	2,2
 51557   01E344  5007               	movf	fputc@fp^(0+1280),w,c
 51558   01E346  26D9               	addwf	fsr2l,f,c
 51559   01E348  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51560   01E34A  22DA               	addwfc	fsr2h,f,c
 51561   01E34C  2ADE               	incf	postinc2,f,c
 51562   01E34E  0E00               	movlw	0
 51563   01E350  22DD               	addwfc	postdec2,f,c
 51564   01E352                     l3587:
 51565   01E352  0012               	return		;funcret
 51566   01E354                     __end_of_fputc:
 51567                           	callstack 0
 51568                           
 51569 ;; *************** function _putch *****************
 51570 ;; Defined at:
 51571 ;;		line 132 in file "../src/boards/w65_cmn.c"
 51572 ;; Parameters:    Size  Location     Type
 51573 ;;  c               1    wreg     unsigned char 
 51574 ;; Auto vars:     Size  Location     Type
 51575 ;;  c               1    3[COMRAM] unsigned char 
 51576 ;; Return value:  Size  Location     Type
 51577 ;;                  1    wreg      void 
 51578 ;; Registers used:
 51579 ;;		wreg
 51580 ;; Tracked objects:
 51581 ;;		On entry : 0/0
 51582 ;;		On exit  : 0/0
 51583 ;;		Unchanged: 0/0
 51584 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51589 ;;Total ram usage:        1 bytes
 51590 ;; Hardware stack levels used: 1
 51591 ;; Hardware stack levels required when called: 1
 51592 ;; This function calls:
 51593 ;;		Nothing
 51594 ;; This function is called by:
 51595 ;;		_unimon_console
 51596 ;;		_bus_master_operation
 51597 ;;		_get_line
 51598 ;;		_fputc
 51599 ;; This function uses a non-reentrant model
 51600 ;;
 51601                           
 51602                           	psect	text146
 51603   000206                     __ptext146:
 51604                           	callstack 0
 51605   000206                     _putch:
 51606                           	callstack 111
 51607                           
 51608                           ;incstack = 0
 51609                           ;putch@c stored from wreg
 51610   000206  6E04               	movwf	putch@c^(0+1280),c
 51611   000208                     l311:
 51612   000208  A2B7               	btfss	1207,1,c	;volatile
 51613   00020A  EF09  F001         	goto	u24961
 51614   00020E  EF0B  F001         	goto	u24960
 51615   000212                     u24961:
 51616   000212  EF04  F001         	goto	l311
 51617   000216                     u24960:
 51618   000216                     
 51619                           ;../src/boards/w65_cmn.c: 134:     U3TXB = c;
 51620   000216  C504  F2C9         	movff	putch@c,713	;volatile
 51621   00021A  0012               	return		;funcret
 51622   00021C                     __end_of_putch:
 51623                           	callstack 0
 51624                           
 51625 ;; *************** function _abs *****************
 51626 ;; Defined at:
 51627 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 51628 ;; Parameters:    Size  Location     Type
 51629 ;;  a               2   13[COMRAM] int 
 51630 ;; Auto vars:     Size  Location     Type
 51631 ;;		None
 51632 ;; Return value:  Size  Location     Type
 51633 ;;                  2   13[COMRAM] int 
 51634 ;; Registers used:
 51635 ;;		wreg, status,2, status,0
 51636 ;; Tracked objects:
 51637 ;;		On entry : 0/0
 51638 ;;		On exit  : 0/0
 51639 ;;		Unchanged: 0/0
 51640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51645 ;;Total ram usage:        4 bytes
 51646 ;; Hardware stack levels used: 1
 51647 ;; Hardware stack levels required when called: 1
 51648 ;; This function calls:
 51649 ;;		Nothing
 51650 ;; This function is called by:
 51651 ;;		_dtoa
 51652 ;; This function uses a non-reentrant model
 51653 ;;
 51654                           
 51655                           	psect	text147
 51656   01FED0                     __ptext147:
 51657                           	callstack 0
 51658   01FED0                     _abs:
 51659                           	callstack 114
 51660   01FED0  BE0F               	btfsc	(abs@a+1)^(0+1280),7,c
 51661   01FED2  EF6D  F0FF         	goto	u26231
 51662   01FED6  EF6F  F0FF         	goto	u26230
 51663   01FEDA                     u26231:
 51664   01FEDA  EF75  F0FF         	goto	l3552
 51665   01FEDE                     u26230:
 51666   01FEDE  C50E  F50E         	movff	abs@a,?_abs
 51667   01FEE2  C50F  F50F         	movff	abs@a+1,?_abs+1
 51668   01FEE6  EF81  F0FF         	goto	l3555
 51669   01FEEA                     l3552:
 51670   01FEEA  C50E  F510         	movff	abs@a,??_abs
 51671   01FEEE  C50F  F511         	movff	abs@a+1,??_abs+1
 51672   01FEF2  1E10               	comf	??_abs^(0+1280),f,c
 51673   01FEF4  1E11               	comf	(??_abs+1)^(0+1280),f,c
 51674   01FEF6  4A10               	infsnz	??_abs^(0+1280),f,c
 51675   01FEF8  2A11               	incf	(??_abs+1)^(0+1280),f,c
 51676   01FEFA  C510  F50E         	movff	??_abs,?_abs
 51677   01FEFE  C511  F50F         	movff	??_abs+1,?_abs+1
 51678   01FF02                     l3555:
 51679   01FF02  0012               	return		;funcret
 51680   01FF04                     __end_of_abs:
 51681                           	callstack 0
 51682                           
 51683 ;; *************** function ___almod *****************
 51684 ;; Defined at:
 51685 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
 51686 ;; Parameters:    Size  Location     Type
 51687 ;;  dividend        4    3[COMRAM] long 
 51688 ;;  divisor         4    7[COMRAM] long 
 51689 ;; Auto vars:     Size  Location     Type
 51690 ;;  sign            1   12[COMRAM] unsigned char 
 51691 ;;  counter         1   11[COMRAM] unsigned char 
 51692 ;; Return value:  Size  Location     Type
 51693 ;;                  4    3[COMRAM] long 
 51694 ;; Registers used:
 51695 ;;		wreg, status,2, status,0
 51696 ;; Tracked objects:
 51697 ;;		On entry : 0/0
 51698 ;;		On exit  : 0/0
 51699 ;;		Unchanged: 0/0
 51700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51704 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51705 ;;Total ram usage:       10 bytes
 51706 ;; Hardware stack levels used: 1
 51707 ;; Hardware stack levels required when called: 1
 51708 ;; This function calls:
 51709 ;;		Nothing
 51710 ;; This function is called by:
 51711 ;;		_dtoa
 51712 ;; This function uses a non-reentrant model
 51713 ;;
 51714                           
 51715                           	psect	text148
 51716   01DA0C                     __ptext148:
 51717                           	callstack 0
 51718   01DA0C                     ___almod:
 51719                           	callstack 114
 51720   01DA0C  6A0D               	clrf	___almod@sign^(0+1280),c
 51721   01DA0E  BE07               	btfsc	(___almod@dividend+3)^(0+1280),7,c
 51722   01DA10  EF0E  F0ED         	goto	u25550
 51723   01DA14  EF0C  F0ED         	goto	u25551
 51724   01DA18                     u25551:
 51725   01DA18  EF18  F0ED         	goto	l19389
 51726   01DA1C                     u25550:
 51727   01DA1C  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 51728   01DA1E  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 51729   01DA20  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 51730   01DA22  6C04               	negf	___almod@dividend^(0+1280),c
 51731   01DA24  0E00               	movlw	0
 51732   01DA26  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 51733   01DA28  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 51734   01DA2A  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 51735   01DA2C  0E01               	movlw	1
 51736   01DA2E  6E0D               	movwf	___almod@sign^(0+1280),c
 51737   01DA30                     l19389:
 51738   01DA30  BE0B               	btfsc	(___almod@divisor+3)^(0+1280),7,c
 51739   01DA32  EF1F  F0ED         	goto	u25560
 51740   01DA36  EF1D  F0ED         	goto	u25561
 51741   01DA3A                     u25561:
 51742   01DA3A  EF27  F0ED         	goto	l19393
 51743   01DA3E                     u25560:
 51744   01DA3E  1E0B               	comf	(___almod@divisor+3)^(0+1280),f,c
 51745   01DA40  1E0A               	comf	(___almod@divisor+2)^(0+1280),f,c
 51746   01DA42  1E09               	comf	(___almod@divisor+1)^(0+1280),f,c
 51747   01DA44  6C08               	negf	___almod@divisor^(0+1280),c
 51748   01DA46  0E00               	movlw	0
 51749   01DA48  2209               	addwfc	(___almod@divisor+1)^(0+1280),f,c
 51750   01DA4A  220A               	addwfc	(___almod@divisor+2)^(0+1280),f,c
 51751   01DA4C  220B               	addwfc	(___almod@divisor+3)^(0+1280),f,c
 51752   01DA4E                     l19393:
 51753   01DA4E  5008               	movf	___almod@divisor^(0+1280),w,c
 51754   01DA50  1009               	iorwf	(___almod@divisor+1)^(0+1280),w,c
 51755   01DA52  100A               	iorwf	(___almod@divisor+2)^(0+1280),w,c
 51756   01DA54  100B               	iorwf	(___almod@divisor+3)^(0+1280),w,c
 51757   01DA56  B4D8               	btfsc	status,2,c
 51758   01DA58  EF30  F0ED         	goto	u25571
 51759   01DA5C  EF32  F0ED         	goto	u25570
 51760   01DA60                     u25571:
 51761   01DA60  EF62  F0ED         	goto	l19409
 51762   01DA64                     u25570:
 51763   01DA64  0E01               	movlw	1
 51764   01DA66  6E0C               	movwf	___almod@counter^(0+1280),c
 51765   01DA68  EF3C  F0ED         	goto	l19399
 51766   01DA6C                     l19397:
 51767   01DA6C  90D8               	bcf	status,0,c
 51768   01DA6E  3608               	rlcf	___almod@divisor^(0+1280),f,c
 51769   01DA70  3609               	rlcf	(___almod@divisor+1)^(0+1280),f,c
 51770   01DA72  360A               	rlcf	(___almod@divisor+2)^(0+1280),f,c
 51771   01DA74  360B               	rlcf	(___almod@divisor+3)^(0+1280),f,c
 51772   01DA76  2A0C               	incf	___almod@counter^(0+1280),f,c
 51773   01DA78                     l19399:
 51774   01DA78  AE0B               	btfss	(___almod@divisor+3)^(0+1280),7,c
 51775   01DA7A  EF41  F0ED         	goto	u25581
 51776   01DA7E  EF43  F0ED         	goto	u25580
 51777   01DA82                     u25581:
 51778   01DA82  EF36  F0ED         	goto	l19397
 51779   01DA86                     u25580:
 51780   01DA86                     l19401:
 51781   01DA86  5008               	movf	___almod@divisor^(0+1280),w,c
 51782   01DA88  5C04               	subwf	___almod@dividend^(0+1280),w,c
 51783   01DA8A  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 51784   01DA8C  5805               	subwfb	(___almod@dividend+1)^(0+1280),w,c
 51785   01DA8E  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 51786   01DA90  5806               	subwfb	(___almod@dividend+2)^(0+1280),w,c
 51787   01DA92  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 51788   01DA94  5807               	subwfb	(___almod@dividend+3)^(0+1280),w,c
 51789   01DA96  A0D8               	btfss	status,0,c
 51790   01DA98  EF50  F0ED         	goto	u25591
 51791   01DA9C  EF52  F0ED         	goto	u25590
 51792   01DAA0                     u25591:
 51793   01DAA0  EF5A  F0ED         	goto	l19405
 51794   01DAA4                     u25590:
 51795   01DAA4  5008               	movf	___almod@divisor^(0+1280),w,c
 51796   01DAA6  5E04               	subwf	___almod@dividend^(0+1280),f,c
 51797   01DAA8  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 51798   01DAAA  5A05               	subwfb	(___almod@dividend+1)^(0+1280),f,c
 51799   01DAAC  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 51800   01DAAE  5A06               	subwfb	(___almod@dividend+2)^(0+1280),f,c
 51801   01DAB0  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 51802   01DAB2  5A07               	subwfb	(___almod@dividend+3)^(0+1280),f,c
 51803   01DAB4                     l19405:
 51804   01DAB4  90D8               	bcf	status,0,c
 51805   01DAB6  320B               	rrcf	(___almod@divisor+3)^(0+1280),f,c
 51806   01DAB8  320A               	rrcf	(___almod@divisor+2)^(0+1280),f,c
 51807   01DABA  3209               	rrcf	(___almod@divisor+1)^(0+1280),f,c
 51808   01DABC  3208               	rrcf	___almod@divisor^(0+1280),f,c
 51809   01DABE  2E0C               	decfsz	___almod@counter^(0+1280),f,c
 51810   01DAC0  EF43  F0ED         	goto	l19401
 51811   01DAC4                     l19409:
 51812   01DAC4  500D               	movf	___almod@sign^(0+1280),w,c
 51813   01DAC6  B4D8               	btfsc	status,2,c
 51814   01DAC8  EF68  F0ED         	goto	u25601
 51815   01DACC  EF6A  F0ED         	goto	u25600
 51816   01DAD0                     u25601:
 51817   01DAD0  EF72  F0ED         	goto	l19413
 51818   01DAD4                     u25600:
 51819   01DAD4  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 51820   01DAD6  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 51821   01DAD8  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 51822   01DADA  6C04               	negf	___almod@dividend^(0+1280),c
 51823   01DADC  0E00               	movlw	0
 51824   01DADE  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 51825   01DAE0  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 51826   01DAE2  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 51827   01DAE4                     l19413:
 51828   01DAE4  C504  F504         	movff	___almod@dividend,?___almod
 51829   01DAE8  C505  F505         	movff	___almod@dividend+1,?___almod+1
 51830   01DAEC  C506  F506         	movff	___almod@dividend+2,?___almod+2
 51831   01DAF0  C507  F507         	movff	___almod@dividend+3,?___almod+3
 51832   01DAF4  0012               	return		;funcret
 51833   01DAF6                     __end_of___almod:
 51834                           	callstack 0
 51835                           
 51836 ;; *************** function ___aldiv *****************
 51837 ;; Defined at:
 51838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
 51839 ;; Parameters:    Size  Location     Type
 51840 ;;  dividend        4    3[COMRAM] long 
 51841 ;;  divisor         4    7[COMRAM] long 
 51842 ;; Auto vars:     Size  Location     Type
 51843 ;;  quotient        4   13[COMRAM] long 
 51844 ;;  sign            1   12[COMRAM] unsigned char 
 51845 ;;  counter         1   11[COMRAM] unsigned char 
 51846 ;; Return value:  Size  Location     Type
 51847 ;;                  4    3[COMRAM] long 
 51848 ;; Registers used:
 51849 ;;		wreg, status,2, status,0
 51850 ;; Tracked objects:
 51851 ;;		On entry : 0/0
 51852 ;;		On exit  : 0/0
 51853 ;;		Unchanged: 0/0
 51854 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51856 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51858 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51859 ;;Total ram usage:       14 bytes
 51860 ;; Hardware stack levels used: 1
 51861 ;; Hardware stack levels required when called: 1
 51862 ;; This function calls:
 51863 ;;		Nothing
 51864 ;; This function is called by:
 51865 ;;		_dtoa
 51866 ;; This function uses a non-reentrant model
 51867 ;;
 51868                           
 51869                           	psect	text149
 51870   01CF2E                     __ptext149:
 51871                           	callstack 0
 51872   01CF2E                     ___aldiv:
 51873                           	callstack 114
 51874   01CF2E  6A0D               	clrf	___aldiv@sign^(0+1280),c
 51875   01CF30  BE0B               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
 51876   01CF32  EF9F  F0E7         	goto	u25490
 51877   01CF36  EF9D  F0E7         	goto	u25491
 51878   01CF3A                     u25491:
 51879   01CF3A  EFA9  F0E7         	goto	l19345
 51880   01CF3E                     u25490:
 51881   01CF3E  1E0B               	comf	(___aldiv@divisor+3)^(0+1280),f,c
 51882   01CF40  1E0A               	comf	(___aldiv@divisor+2)^(0+1280),f,c
 51883   01CF42  1E09               	comf	(___aldiv@divisor+1)^(0+1280),f,c
 51884   01CF44  6C08               	negf	___aldiv@divisor^(0+1280),c
 51885   01CF46  0E00               	movlw	0
 51886   01CF48  2209               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
 51887   01CF4A  220A               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
 51888   01CF4C  220B               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
 51889   01CF4E  0E01               	movlw	1
 51890   01CF50  6E0D               	movwf	___aldiv@sign^(0+1280),c
 51891   01CF52                     l19345:
 51892   01CF52  BE07               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
 51893   01CF54  EFB0  F0E7         	goto	u25500
 51894   01CF58  EFAE  F0E7         	goto	u25501
 51895   01CF5C                     u25501:
 51896   01CF5C  EFBA  F0E7         	goto	l19351
 51897   01CF60                     u25500:
 51898   01CF60  1E07               	comf	(___aldiv@dividend+3)^(0+1280),f,c
 51899   01CF62  1E06               	comf	(___aldiv@dividend+2)^(0+1280),f,c
 51900   01CF64  1E05               	comf	(___aldiv@dividend+1)^(0+1280),f,c
 51901   01CF66  6C04               	negf	___aldiv@dividend^(0+1280),c
 51902   01CF68  0E00               	movlw	0
 51903   01CF6A  2205               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
 51904   01CF6C  2206               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
 51905   01CF6E  2207               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
 51906   01CF70  0E01               	movlw	1
 51907   01CF72  1A0D               	xorwf	___aldiv@sign^(0+1280),f,c
 51908   01CF74                     l19351:
 51909   01CF74  0E00               	movlw	0
 51910   01CF76  6E0E               	movwf	___aldiv@quotient^(0+1280),c
 51911   01CF78  0E00               	movlw	0
 51912   01CF7A  6E0F               	movwf	(___aldiv@quotient+1)^(0+1280),c
 51913   01CF7C  0E00               	movlw	0
 51914   01CF7E  6E10               	movwf	(___aldiv@quotient+2)^(0+1280),c
 51915   01CF80  0E00               	movlw	0
 51916   01CF82  6E11               	movwf	(___aldiv@quotient+3)^(0+1280),c
 51917   01CF84  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51918   01CF86  1009               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
 51919   01CF88  100A               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
 51920   01CF8A  100B               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
 51921   01CF8C  B4D8               	btfsc	status,2,c
 51922   01CF8E  EFCB  F0E7         	goto	u25511
 51923   01CF92  EFCD  F0E7         	goto	u25510
 51924   01CF96                     u25511:
 51925   01CF96  EF03  F0E8         	goto	l19373
 51926   01CF9A                     u25510:
 51927   01CF9A  0E01               	movlw	1
 51928   01CF9C  6E0C               	movwf	___aldiv@counter^(0+1280),c
 51929   01CF9E  EFD7  F0E7         	goto	l19359
 51930   01CFA2                     l19357:
 51931   01CFA2  90D8               	bcf	status,0,c
 51932   01CFA4  3608               	rlcf	___aldiv@divisor^(0+1280),f,c
 51933   01CFA6  3609               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
 51934   01CFA8  360A               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
 51935   01CFAA  360B               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
 51936   01CFAC  2A0C               	incf	___aldiv@counter^(0+1280),f,c
 51937   01CFAE                     l19359:
 51938   01CFAE  AE0B               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 51939   01CFB0  EFDC  F0E7         	goto	u25521
 51940   01CFB4  EFDE  F0E7         	goto	u25520
 51941   01CFB8                     u25521:
 51942   01CFB8  EFD1  F0E7         	goto	l19357
 51943   01CFBC                     u25520:
 51944   01CFBC                     l19361:
 51945   01CFBC  90D8               	bcf	status,0,c
 51946   01CFBE  360E               	rlcf	___aldiv@quotient^(0+1280),f,c
 51947   01CFC0  360F               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
 51948   01CFC2  3610               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
 51949   01CFC4  3611               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
 51950   01CFC6  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51951   01CFC8  5C04               	subwf	___aldiv@dividend^(0+1280),w,c
 51952   01CFCA  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 51953   01CFCC  5805               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
 51954   01CFCE  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 51955   01CFD0  5806               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
 51956   01CFD2  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 51957   01CFD4  5807               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
 51958   01CFD6  A0D8               	btfss	status,0,c
 51959   01CFD8  EFF0  F0E7         	goto	u25531
 51960   01CFDC  EFF2  F0E7         	goto	u25530
 51961   01CFE0                     u25531:
 51962   01CFE0  EFFB  F0E7         	goto	l19369
 51963   01CFE4                     u25530:
 51964   01CFE4  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51965   01CFE6  5E04               	subwf	___aldiv@dividend^(0+1280),f,c
 51966   01CFE8  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 51967   01CFEA  5A05               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
 51968   01CFEC  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 51969   01CFEE  5A06               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
 51970   01CFF0  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 51971   01CFF2  5A07               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
 51972   01CFF4  800E               	bsf	___aldiv@quotient^(0+1280),0,c
 51973   01CFF6                     l19369:
 51974   01CFF6  90D8               	bcf	status,0,c
 51975   01CFF8  320B               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
 51976   01CFFA  320A               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
 51977   01CFFC  3209               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
 51978   01CFFE  3208               	rrcf	___aldiv@divisor^(0+1280),f,c
 51979   01D000  2E0C               	decfsz	___aldiv@counter^(0+1280),f,c
 51980   01D002  EFDE  F0E7         	goto	l19361
 51981   01D006                     l19373:
 51982   01D006  500D               	movf	___aldiv@sign^(0+1280),w,c
 51983   01D008  B4D8               	btfsc	status,2,c
 51984   01D00A  EF09  F0E8         	goto	u25541
 51985   01D00E  EF0B  F0E8         	goto	u25540
 51986   01D012                     u25541:
 51987   01D012  EF13  F0E8         	goto	l19377
 51988   01D016                     u25540:
 51989   01D016  1E11               	comf	(___aldiv@quotient+3)^(0+1280),f,c
 51990   01D018  1E10               	comf	(___aldiv@quotient+2)^(0+1280),f,c
 51991   01D01A  1E0F               	comf	(___aldiv@quotient+1)^(0+1280),f,c
 51992   01D01C  6C0E               	negf	___aldiv@quotient^(0+1280),c
 51993   01D01E  0E00               	movlw	0
 51994   01D020  220F               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
 51995   01D022  2210               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
 51996   01D024  2211               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
 51997   01D026                     l19377:
 51998   01D026  C50E  F504         	movff	___aldiv@quotient,?___aldiv
 51999   01D02A  C50F  F505         	movff	___aldiv@quotient+1,?___aldiv+1
 52000   01D02E  C510  F506         	movff	___aldiv@quotient+2,?___aldiv+2
 52001   01D032  C511  F507         	movff	___aldiv@quotient+3,?___aldiv+3
 52002   01D036  0012               	return		;funcret
 52003   01D038                     __end_of___aldiv:
 52004                           	callstack 0
 52005                           
 52006 ;; *************** function ___SDCard_crc16 *****************
 52007 ;; Defined at:
 52008 ;;		line 352 in file "../src/boards/../../drivers/SDCard.c"
 52009 ;; Parameters:    Size  Location     Type
 52010 ;;  crc             2    3[COMRAM] unsigned short 
 52011 ;;  buf             2    5[COMRAM] PTR const void 
 52012 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52013 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52014 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52015 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52016 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52017 ;;  count           2    7[COMRAM] unsigned int 
 52018 ;; Auto vars:     Size  Location     Type
 52019 ;;  p               2   14[COMRAM] PTR unsigned char 
 52020 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52021 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52022 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52023 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52024 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52025 ;;  endp            2   12[COMRAM] PTR unsigned char 
 52026 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52027 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52028 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52029 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52030 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52031 ;; Return value:  Size  Location     Type
 52032 ;;                  2    3[COMRAM] unsigned short 
 52033 ;; Registers used:
 52034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52035 ;; Tracked objects:
 52036 ;;		On entry : 0/0
 52037 ;;		On exit  : 0/0
 52038 ;;		Unchanged: 0/0
 52039 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52041 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52042 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52043 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52044 ;;Total ram usage:       13 bytes
 52045 ;; Hardware stack levels used: 1
 52046 ;; Hardware stack levels required when called: 1
 52047 ;; This function calls:
 52048 ;;		Nothing
 52049 ;; This function is called by:
 52050 ;;		_SDCard_read512
 52051 ;;		_SDCard_write512
 52052 ;; This function uses a non-reentrant model
 52053 ;;
 52054                           
 52055                           	psect	text150
 52056   01E354                     __ptext150:
 52057                           	callstack 0
 52058   01E354                     ___SDCard_crc16:
 52059                           	callstack 113
 52060   01E354                     
 52061                           ;../src/boards/../../drivers/SDCard.c: 352: uint16_t __SDCard_crc16(uint16_t crc, const 
      +                          void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 353: {;../src/board
      +                          s/../../drivers/SDCard.c: 354:     uint8_t *p = (uint8_t*)buf;
 52062   01E354  C506  F50F         	movff	___SDCard_crc16@buf,___SDCard_crc16@p
 52063   01E358  C507  F510         	movff	___SDCard_crc16@buf+1,___SDCard_crc16@p+1
 52064                           
 52065                           ;../src/boards/../../drivers/SDCard.c: 355:     uint8_t *endp = p + count;
 52066   01E35C  5008               	movf	___SDCard_crc16@count^(0+1280),w,c
 52067   01E35E  240F               	addwf	___SDCard_crc16@p^(0+1280),w,c
 52068   01E360  6E0D               	movwf	___SDCard_crc16@endp^(0+1280),c
 52069   01E362  5009               	movf	(___SDCard_crc16@count+1)^(0+1280),w,c
 52070   01E364  2010               	addwfc	(___SDCard_crc16@p+1)^(0+1280),w,c
 52071   01E366  6E0E               	movwf	(___SDCard_crc16@endp+1)^(0+1280),c
 52072                           
 52073                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 52074   01E368  EFFC  F0F1         	goto	l20681
 52075   01E36C                     l20669:
 52076                           
 52077                           ;../src/boards/../../drivers/SDCard.c: 358:         crc = (crc >> 8)|(crc << 8);
 52078   01E36C  5004               	movf	___SDCard_crc16@crc^(0+1280),w,c
 52079   01E36E  C505  F50A         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16
 52080   01E372  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 52081   01E374  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52082   01E376  6E04               	movwf	___SDCard_crc16@crc^(0+1280),c
 52083   01E378  C50B  F505         	movff	??___SDCard_crc16+1,___SDCard_crc16@crc+1
 52084   01E37C                     
 52085                           ;../src/boards/../../drivers/SDCard.c: 359:         crc ^= *p++;
 52086   01E37C  C50F  F4D9         	movff	___SDCard_crc16@p,fsr2l
 52087   01E380  C510  F4DA         	movff	___SDCard_crc16@p+1,fsr2h
 52088   01E384  50DF               	movf	indf2,w,c
 52089   01E386  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 52090   01E388  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52091   01E38A  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52092   01E38C  4A0F               	infsnz	___SDCard_crc16@p^(0+1280),f,c
 52093   01E38E  2A10               	incf	(___SDCard_crc16@p+1)^(0+1280),f,c
 52094   01E390                     
 52095                           ;../src/boards/../../drivers/SDCard.c: 360:         crc ^= ((crc & 0xff) >> 4);
 52096   01E390  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 52097   01E394  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 52098   01E398  0E04               	movlw	4
 52099   01E39A  6E0C               	movwf	(??___SDCard_crc16+2)^(0+1280),c
 52100   01E39C                     u27595:
 52101   01E39C  90D8               	bcf	status,0,c
 52102   01E39E  320B               	rrcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52103   01E3A0  320A               	rrcf	??___SDCard_crc16^(0+1280),f,c
 52104   01E3A2  2E0C               	decfsz	(??___SDCard_crc16+2)^(0+1280),f,c
 52105   01E3A4  EFCE  F0F1         	goto	u27595
 52106   01E3A8  0E0F               	movlw	15
 52107   01E3AA  160A               	andwf	??___SDCard_crc16^(0+1280),f,c
 52108   01E3AC  0E00               	movlw	0
 52109   01E3AE  160B               	andwf	(??___SDCard_crc16+1)^(0+1280),f,c
 52110   01E3B0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52111   01E3B2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52112   01E3B4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52113   01E3B6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52114   01E3B8                     
 52115                           ;../src/boards/../../drivers/SDCard.c: 361:         crc ^= (crc << 12);
 52116   01E3B8  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 52117   01E3BC  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 52118   01E3C0  0E0C               	movlw	12
 52119   01E3C2                     u27605:
 52120   01E3C2  90D8               	bcf	status,0,c
 52121   01E3C4  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 52122   01E3C6  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52123   01E3C8  2EE8               	decfsz	wreg,f,c
 52124   01E3CA  EFE1  F0F1         	goto	u27605
 52125   01E3CE  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52126   01E3D0  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52127   01E3D2  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52128   01E3D4  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52129   01E3D6                     
 52130                           ;../src/boards/../../drivers/SDCard.c: 362:         crc ^= ((crc & 0xff) << 5);
 52131   01E3D6  0EFF               	movlw	255
 52132   01E3D8  1404               	andwf	___SDCard_crc16@crc^(0+1280),w,c
 52133   01E3DA  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 52134   01E3DC  0E00               	movlw	0
 52135   01E3DE  1405               	andwf	(___SDCard_crc16@crc+1)^(0+1280),w,c
 52136   01E3E0  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 52137   01E3E2  0E05               	movlw	5
 52138   01E3E4                     u27615:
 52139   01E3E4  90D8               	bcf	status,0,c
 52140   01E3E6  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 52141   01E3E8  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52142   01E3EA  2EE8               	decfsz	wreg,f,c
 52143   01E3EC  EFF2  F0F1         	goto	u27615
 52144   01E3F0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52145   01E3F2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52146   01E3F4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52147   01E3F6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52148   01E3F8                     l20681:
 52149                           
 52150                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 52151   01E3F8  500D               	movf	___SDCard_crc16@endp^(0+1280),w,c
 52152   01E3FA  5C0F               	subwf	___SDCard_crc16@p^(0+1280),w,c
 52153   01E3FC  500E               	movf	(___SDCard_crc16@endp+1)^(0+1280),w,c
 52154   01E3FE  5810               	subwfb	(___SDCard_crc16@p+1)^(0+1280),w,c
 52155   01E400  A0D8               	btfss	status,0,c
 52156   01E402  EF05  F0F2         	goto	u27621
 52157   01E406  EF07  F0F2         	goto	u27620
 52158   01E40A                     u27621:
 52159   01E40A  EFB6  F0F1         	goto	l20669
 52160   01E40E                     u27620:
 52161   01E40E                     
 52162                           ;../src/boards/../../drivers/SDCard.c: 365:     return crc;
 52163   01E40E  C504  F504         	movff	___SDCard_crc16@crc,?___SDCard_crc16
 52164   01E412  C505  F505         	movff	___SDCard_crc16@crc+1,?___SDCard_crc16+1
 52165   01E416  0012               	return		;funcret
 52166   01E418                     __end_of___SDCard_crc16:
 52167                           	callstack 0
 52168                           
 52169 ;; *************** function ___SDCard_command_r1 *****************
 52170 ;; Defined at:
 52171 ;;		line 143 in file "../src/boards/../../drivers/SDCard.c"
 52172 ;; Parameters:    Size  Location     Type
 52173 ;;  command         1    wreg     unsigned char 
 52174 ;;  argument        4   26[COMRAM] unsigned long 
 52175 ;;  r1              2   30[COMRAM] PTR unsigned char 
 52176 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), SDCard_init@buf(5), 
 52177 ;; Auto vars:     Size  Location     Type
 52178 ;;  command         1   32[COMRAM] unsigned char 
 52179 ;;  buf             6   33[COMRAM] unsigned char [6]
 52180 ;;  spi             2   40[COMRAM] PTR struct SPI
 52181 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52182 ;;  response        1   39[COMRAM] unsigned char 
 52183 ;; Return value:  Size  Location     Type
 52184 ;;                  2   26[COMRAM] int 
 52185 ;; Registers used:
 52186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52187 ;; Tracked objects:
 52188 ;;		On entry : 0/0
 52189 ;;		On exit  : 0/0
 52190 ;;		Unchanged: 0/0
 52191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52192 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52193 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52195 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52196 ;;Total ram usage:       16 bytes
 52197 ;; Hardware stack levels used: 1
 52198 ;; Hardware stack levels required when called: 4
 52199 ;; This function calls:
 52200 ;;		_SDCard_crc
 52201 ;;		_SPI_SD_begin_transaction
 52202 ;;		_SPI_SD_dummy_clocks
 52203 ;;		_SPI_SD_send
 52204 ;;		___SDCard_wait_response
 52205 ;; This function is called by:
 52206 ;;		_SDCard_read512
 52207 ;;		_SDCard_write512
 52208 ;;		_SDCard_command
 52209 ;; This function uses a non-reentrant model
 52210 ;;
 52211                           
 52212                           	psect	text151
 52213   01E646                     __ptext151:
 52214                           	callstack 0
 52215   01E646                     ___SDCard_command_r1:
 52216                           	callstack 110
 52217                           
 52218                           ;incstack = 0
 52219                           ;___SDCard_command_r1@command stored from wreg
 52220   01E646  6E21               	movwf	___SDCard_command_r1@command^(0+1280),c
 52221   01E648                     
 52222                           ;../src/boards/../../drivers/SDCard.c: 143: static int __SDCard_command_r1(uint8_t comma
      +                          nd, uint32_t argument, uint8_t *r1);../src/boards/../../drivers/SDCard.c: 144: {;../src/
      +                          boards/../../drivers/SDCard.c: 145:     struct SPI *spi = ctx_.spi;
 52223   01E648  C7A8  F529         	movff	_ctx_,___SDCard_command_r1@spi
 52224   01E64C  C7A9  F52A         	movff	_ctx_+1,___SDCard_command_r1@spi+1
 52225   01E650                     
 52226                           ;../src/boards/../../drivers/SDCard.c: 146:     uint8_t buf[6];;../src/boards/../../driv
      +                          ers/SDCard.c: 147:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 149:     
      +                          buf[0] = command | 0x40;
 52227   01E650  5021               	movf	___SDCard_command_r1@command^(0+1280),w,c
 52228   01E652  0940               	iorlw	64
 52229   01E654  6E22               	movwf	___SDCard_command_r1@buf^(0+1280),c
 52230   01E656                     
 52231                           ;../src/boards/../../drivers/SDCard.c: 150:     buf[1] = (argument >> 24) & 0xff;
 52232   01E656  C51E  F523         	movff	___SDCard_command_r1@argument+3,___SDCard_command_r1@buf+1
 52233   01E65A                     
 52234                           ;../src/boards/../../drivers/SDCard.c: 151:     buf[2] = (argument >> 16) & 0xff;
 52235   01E65A  C51D  F524         	movff	___SDCard_command_r1@argument+2,___SDCard_command_r1@buf+2
 52236   01E65E                     
 52237                           ;../src/boards/../../drivers/SDCard.c: 152:     buf[3] = (argument >> 8) & 0xff;
 52238   01E65E  C51C  F525         	movff	___SDCard_command_r1@argument+1,___SDCard_command_r1@buf+3
 52239   01E662                     
 52240                           ;../src/boards/../../drivers/SDCard.c: 153:     buf[4] = (argument >> 0) & 0xff;
 52241   01E662  C51B  F526         	movff	___SDCard_command_r1@argument,___SDCard_command_r1@buf+4
 52242   01E666                     
 52243                           ;../src/boards/../../drivers/SDCard.c: 154:     buf[5] = SDCard_crc(buf, 5) | 0x01;
 52244   01E666  0E22               	movlw	low ___SDCard_command_r1@buf
 52245   01E668  6E04               	movwf	SDCard_crc@buf^(0+1280),c
 52246   01E66A  0E05               	movlw	high ___SDCard_command_r1@buf
 52247   01E66C  6E05               	movwf	(SDCard_crc@buf+1)^(0+1280),c
 52248   01E66E  0E00               	movlw	0
 52249   01E670  6E07               	movwf	(SDCard_crc@count+1)^(0+1280),c
 52250   01E672  0E05               	movlw	5
 52251   01E674  6E06               	movwf	SDCard_crc@count^(0+1280),c
 52252   01E676  ECF9  F0F8         	call	_SDCard_crc	;wreg free
 52253   01E67A  0901               	iorlw	1
 52254   01E67C  6E27               	movwf	(___SDCard_command_r1@buf+5)^(0+1280),c
 52255   01E67E                     
 52256                           ;../src/boards/../../drivers/SDCard.c: 156:     SPI_SD_begin_transaction(spi);
 52257   01E67E  C529  F508         	movff	___SDCard_command_r1@spi,SPI_SD_begin_transaction@ctx_
 52258   01E682  C52A  F509         	movff	___SDCard_command_r1@spi+1,SPI_SD_begin_transaction@ctx_+1
 52259   01E686  EC94  F000         	call	_SPI_SD_begin_transaction	;wreg free
 52260   01E68A                     
 52261                           ;../src/boards/../../drivers/SDCard.c: 157:     SPI_SD_dummy_clocks(spi, 1);
 52262   01E68A  C529  F50E         	movff	___SDCard_command_r1@spi,SPI_SD_dummy_clocks@ctx_
 52263   01E68E  C52A  F50F         	movff	___SDCard_command_r1@spi+1,SPI_SD_dummy_clocks@ctx_+1
 52264   01E692  0E00               	movlw	0
 52265   01E694  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 52266   01E696  0E01               	movlw	1
 52267   01E698  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 52268   01E69A  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 52269   01E69E                     
 52270                           ;../src/boards/../../drivers/SDCard.c: 158:     SPI_SD_send(spi, buf, 6);
 52271   01E69E  C529  F504         	movff	___SDCard_command_r1@spi,SPI_SD_send@ctx_
 52272   01E6A2  C52A  F505         	movff	___SDCard_command_r1@spi+1,SPI_SD_send@ctx_+1
 52273   01E6A6  0E22               	movlw	low ___SDCard_command_r1@buf
 52274   01E6A8  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 52275   01E6AA  0E05               	movlw	high ___SDCard_command_r1@buf
 52276   01E6AC  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 52277   01E6AE  0E00               	movlw	0
 52278   01E6B0  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 52279   01E6B2  0E06               	movlw	6
 52280   01E6B4  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 52281   01E6B6  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 52282   01E6BA                     
 52283                           ;../src/boards/../../drivers/SDCard.c: 160:     response = __SDCard_wait_response(0xff, 
      +                          ctx_.timeout);
 52284   01E6BA  C7AA  F515         	movff	_ctx_+2,___SDCard_wait_response@attempts
 52285   01E6BE  C7AB  F516         	movff	_ctx_+3,___SDCard_wait_response@attempts+1
 52286   01E6C2  0EFF               	movlw	255
 52287   01E6C4  ECDC  F0FD         	call	___SDCard_wait_response
 52288   01E6C8  6E28               	movwf	___SDCard_command_r1@response^(0+1280),c
 52289   01E6CA                     
 52290                           ;../src/boards/../../drivers/SDCard.c: 161:     *r1 = response;
 52291   01E6CA  C51F  F4D9         	movff	___SDCard_command_r1@r1,fsr2l
 52292   01E6CE  C520  F4DA         	movff	___SDCard_command_r1@r1+1,fsr2h
 52293   01E6D2  C528  F4DF         	movff	___SDCard_command_r1@response,indf2
 52294   01E6D6                     
 52295                           ;../src/boards/../../drivers/SDCard.c: 162:     if (response == 0xff) {
 52296   01E6D6  2828               	incf	___SDCard_command_r1@response^(0+1280),w,c
 52297   01E6D8  A4D8               	btfss	status,2,c
 52298   01E6DA  EF71  F0F3         	goto	u27581
 52299   01E6DE  EF73  F0F3         	goto	u27580
 52300   01E6E2                     u27581:
 52301   01E6E2  EF79  F0F3         	goto	l20663
 52302   01E6E6                     u27580:
 52303   01E6E6                     
 52304                           ;../src/boards/../../drivers/SDCard.c: 163:         return 1;
 52305   01E6E6  0E00               	movlw	0
 52306   01E6E8  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 52307   01E6EA  0E01               	movlw	1
 52308   01E6EC  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 52309   01E6EE  EF7D  F0F3         	goto	l658
 52310   01E6F2                     l20663:
 52311                           
 52312                           ;../src/boards/../../drivers/SDCard.c: 166:     return 0;
 52313   01E6F2  0E00               	movlw	0
 52314   01E6F4  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 52315   01E6F6  0E00               	movlw	0
 52316   01E6F8  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 52317   01E6FA                     l658:
 52318   01E6FA  0012               	return		;funcret
 52319   01E6FC                     __end_of___SDCard_command_r1:
 52320                           	callstack 0
 52321                           
 52322 ;; *************** function ___SDCard_wait_response *****************
 52323 ;; Defined at:
 52324 ;;		line 133 in file "../src/boards/../../drivers/SDCard.c"
 52325 ;; Parameters:    Size  Location     Type
 52326 ;;  no_response     1    wreg     unsigned char 
 52327 ;;  attempts        2   20[COMRAM] unsigned int 
 52328 ;; Auto vars:     Size  Location     Type
 52329 ;;  no_response     1   22[COMRAM] unsigned char 
 52330 ;;  spi             2   23[COMRAM] PTR struct SPI
 52331 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52332 ;;  response        1   25[COMRAM] unsigned char 
 52333 ;; Return value:  Size  Location     Type
 52334 ;;                  1    wreg      unsigned char 
 52335 ;; Registers used:
 52336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52337 ;; Tracked objects:
 52338 ;;		On entry : 0/0
 52339 ;;		On exit  : 0/0
 52340 ;;		Unchanged: 0/0
 52341 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52343 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52346 ;;Total ram usage:        6 bytes
 52347 ;; Hardware stack levels used: 1
 52348 ;; Hardware stack levels required when called: 3
 52349 ;; This function calls:
 52350 ;;		_SPI_SD_receive_byte
 52351 ;; This function is called by:
 52352 ;;		___SDCard_command_r1
 52353 ;;		_SDCard_read512
 52354 ;;		_SDCard_write512
 52355 ;; This function uses a non-reentrant model
 52356 ;;
 52357                           
 52358                           	psect	text152
 52359   01FBB8                     __ptext152:
 52360                           	callstack 0
 52361   01FBB8                     ___SDCard_wait_response:
 52362                           	callstack 111
 52363                           
 52364                           ;incstack = 0
 52365                           ;___SDCard_wait_response@no_response stored from wreg
 52366   01FBB8  6E17               	movwf	___SDCard_wait_response@no_response^(0+1280),c
 52367   01FBBA                     
 52368                           ;../src/boards/../../drivers/SDCard.c: 133: static uint8_t __SDCard_wait_response(uint8_
      +                          t no_response, unsigned int attempts);../src/boards/../../drivers/SDCard.c: 134: {;../sr
      +                          c/boards/../../drivers/SDCard.c: 135:     struct SPI *spi = ctx_.spi;
 52369   01FBBA  C7A8  F518         	movff	_ctx_,___SDCard_wait_response@spi
 52370   01FBBE  C7A9  F519         	movff	_ctx_+1,___SDCard_wait_response@spi+1
 52371   01FBC2                     l20591:
 52372                           
 52373                           ;../src/boards/../../drivers/SDCard.c: 138:         response = SPI_SD_receive_byte(spi);
 52374   01FBC2  C518  F512         	movff	___SDCard_wait_response@spi,SPI_SD_receive_byte@ctx_
 52375   01FBC6  C519  F513         	movff	___SDCard_wait_response@spi+1,SPI_SD_receive_byte@ctx_+1
 52376   01FBCA  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 52377   01FBCE  6E1A               	movwf	___SDCard_wait_response@response^(0+1280),c
 52378   01FBD0                     
 52379                           ;../src/boards/../../drivers/SDCard.c: 139:     } while ((response == no_response) && 0 
      +                          < --attempts);
 52380   01FBD0  5017               	movf	___SDCard_wait_response@no_response^(0+1280),w,c
 52381   01FBD2  181A               	xorwf	___SDCard_wait_response@response^(0+1280),w,c
 52382   01FBD4  A4D8               	btfss	status,2,c
 52383   01FBD6  EFEF  F0FD         	goto	u27531
 52384   01FBDA  EFF1  F0FD         	goto	u27530
 52385   01FBDE                     u27531:
 52386   01FBDE  EFFD  F0FD         	goto	l20597
 52387   01FBE2                     u27530:
 52388   01FBE2  0615               	decf	___SDCard_wait_response@attempts^(0+1280),f,c
 52389   01FBE4  A0D8               	btfss	status,0,c
 52390   01FBE6  0616               	decf	(___SDCard_wait_response@attempts+1)^(0+1280),f,c
 52391   01FBE8  5015               	movf	___SDCard_wait_response@attempts^(0+1280),w,c
 52392   01FBEA  1016               	iorwf	(___SDCard_wait_response@attempts+1)^(0+1280),w,c
 52393   01FBEC  A4D8               	btfss	status,2,c
 52394   01FBEE  EFFB  F0FD         	goto	u27541
 52395   01FBF2  EFFD  F0FD         	goto	u27540
 52396   01FBF6                     u27541:
 52397   01FBF6  EFE1  F0FD         	goto	l20591
 52398   01FBFA                     u27540:
 52399   01FBFA                     l20597:
 52400                           
 52401                           ;../src/boards/../../drivers/SDCard.c: 140:     return response;
 52402   01FBFA  501A               	movf	___SDCard_wait_response@response^(0+1280),w,c
 52403   01FBFC  0012               	return		;funcret
 52404   01FBFE                     __end_of___SDCard_wait_response:
 52405                           	callstack 0
 52406                           
 52407 ;; *************** function _SPI_SD_receive_byte *****************
 52408 ;; Defined at:
 52409 ;;		line 269 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52410 ;; Parameters:    Size  Location     Type
 52411 ;;  ctx_            2   17[COMRAM] PTR struct SPI
 52412 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52413 ;; Auto vars:     Size  Location     Type
 52414 ;;  dummy           1   19[COMRAM] unsigned char 
 52415 ;; Return value:  Size  Location     Type
 52416 ;;                  1    wreg      unsigned char 
 52417 ;; Registers used:
 52418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52419 ;; Tracked objects:
 52420 ;;		On entry : 0/0
 52421 ;;		On exit  : 0/0
 52422 ;;		Unchanged: 0/0
 52423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52428 ;;Total ram usage:        3 bytes
 52429 ;; Hardware stack levels used: 1
 52430 ;; Hardware stack levels required when called: 2
 52431 ;; This function calls:
 52432 ;;		_SPI_SD_receive
 52433 ;; This function is called by:
 52434 ;;		___SDCard_wait_response
 52435 ;;		_SDCard_read512
 52436 ;; This function uses a non-reentrant model
 52437 ;;
 52438                           
 52439                           	psect	text153
 52440   000106                     __ptext153:
 52441                           	callstack 0
 52442   000106                     _SPI_SD_receive_byte:
 52443                           	callstack 111
 52444   000106                     
 52445                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 269: uint8_t SPI_SD_receive_byte(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 270: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 271:     uint8_t dummy = 0xff;
 52446   000106  6814               	setf	SPI_SD_receive_byte@dummy^(0+1280),c
 52447   000108                     
 52448                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 272:     SPI_SD_receive(ctx_, &dummy, 1)
      +                          ;
 52449   000108  C512  F504         	movff	SPI_SD_receive_byte@ctx_,SPI_SD_receive@ctx_
 52450   00010C  C513  F505         	movff	SPI_SD_receive_byte@ctx_+1,SPI_SD_receive@ctx_+1
 52451   000110  0E14               	movlw	low SPI_SD_receive_byte@dummy
 52452   000112  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 52453   000114  0E05               	movlw	high SPI_SD_receive_byte@dummy
 52454   000116  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 52455   000118  0E00               	movlw	0
 52456   00011A  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 52457   00011C  0E01               	movlw	1
 52458   00011E  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 52459   000120  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 52460   000124                     
 52461                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 273:     return dummy;
 52462   000124  5014               	movf	SPI_SD_receive_byte@dummy^(0+1280),w,c
 52463   000126  0012               	return		;funcret
 52464   000128                     __end_of_SPI_SD_receive_byte:
 52465                           	callstack 0
 52466                           
 52467 ;; *************** function _SPI_SD_receive *****************
 52468 ;; Defined at:
 52469 ;;		line 185 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52470 ;; Parameters:    Size  Location     Type
 52471 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 52472 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52473 ;;  buf             2    5[COMRAM] PTR void 
 52474 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 52475 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 52476 ;;		 -> SDCard_init@buf(5), NULL(0), SPI_SD_receive_byte@dummy(1), tmp_buf(512), 
 52477 ;;  count           2    7[COMRAM] unsigned int 
 52478 ;; Auto vars:     Size  Location     Type
 52479 ;;  i               1   14[COMRAM] unsigned char 
 52480 ;;  i               2   12[COMRAM] int 
 52481 ;;  repeat          1   11[COMRAM] unsigned char 
 52482 ;;  p               2   15[COMRAM] PTR unsigned char 
 52483 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 52484 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 52485 ;;		 -> SDCard_init@buf(5), NULL(0), SPI_SD_receive_byte@dummy(1), tmp_buf(512), 
 52486 ;; Return value:  Size  Location     Type
 52487 ;;                  1    wreg      void 
 52488 ;; Registers used:
 52489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52490 ;; Tracked objects:
 52491 ;;		On entry : 0/0
 52492 ;;		On exit  : 0/0
 52493 ;;		Unchanged: 0/0
 52494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52496 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52498 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52499 ;;Total ram usage:       14 bytes
 52500 ;; Hardware stack levels used: 1
 52501 ;; Hardware stack levels required when called: 1
 52502 ;; This function calls:
 52503 ;;		Nothing
 52504 ;; This function is called by:
 52505 ;;		_SPI_SD_receive_byte
 52506 ;;		_SDCard_read512
 52507 ;;		_SDCard_command
 52508 ;; This function uses a non-reentrant model
 52509 ;;
 52510                           
 52511                           	psect	text154
 52512   017FBE                     __ptext154:
 52513                           	callstack 0
 52514   017FBE                     _SPI_SD_receive:
 52515                           	callstack 111
 52516   017FBE                     
 52517                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 185: void SPI_SD_receive(struct SPI *ctx
      +                          _, void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 186: {;
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 187:     uint8_t *p = (uint8_t*)buf;
 52518   017FBE  C506  F510         	movff	SPI_SD_receive@buf,SPI_SD_receive@p
 52519   017FC2  C507  F511         	movff	SPI_SD_receive@buf+1,SPI_SD_receive@p+1
 52520                           
 52521                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 189:     if (count == 0)
 52522   017FC6  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 52523   017FC8  1009               	iorwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52524   017FCA  A4D8               	btfss	status,2,c
 52525   017FCC  EFEA  F0BF         	goto	u27061
 52526   017FD0  EFEC  F0BF         	goto	u27060
 52527   017FD4                     u27061:
 52528   017FD4  EFEE  F0BF         	goto	l20225
 52529   017FD8                     u27060:
 52530   017FD8  EF72  F0C1         	goto	l504
 52531   017FDC                     l20225:
 52532                           
 52533                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 192:     SPI1TCNTH = (count >> 8);
 52534   017FDC  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52535   017FDE  0100               	movlb	0	; () banked
 52536   017FE0  6F83               	movwf	131,b	;volatile
 52537   017FE2                     
 52538                           ; BSR set to: 0
 52539                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 193:     SPI1TCNTL = (count & 0xff);
 52540   017FE2  C508  F082         	movff	SPI_SD_receive@count,130	;volatile
 52541   017FE6                     
 52542                           ; BSR set to: 0
 52543                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 195:     if ((count & 0x07) || 255 < cou
      +                          nt / 8) {
 52544   017FE6  0E07               	movlw	7
 52545   017FE8  1408               	andwf	SPI_SD_receive@count^(0+1280),w,c
 52546   017FEA  6E0A               	movwf	??_SPI_SD_receive^(0+1280),c
 52547   017FEC  0E00               	movlw	0
 52548   017FEE  1409               	andwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52549   017FF0  6E0B               	movwf	(??_SPI_SD_receive+1)^(0+1280),c
 52550   017FF2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 52551   017FF4  100B               	iorwf	(??_SPI_SD_receive+1)^(0+1280),w,c
 52552   017FF6  A4D8               	btfss	status,2,c
 52553   017FF8  EF00  F0C0         	goto	u27071
 52554   017FFC  EF02  F0C0         	goto	u27070
 52555   018000                     u27071:
 52556   018000  EF17  F0C0         	goto	l507
 52557   018004                     u27070:
 52558   018004                     
 52559                           ; BSR set to: 0
 52560   018004  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 52561   018008  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 52562   01800C  90D8               	bcf	status,0,c
 52563   01800E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52564   018010  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52565   018012  90D8               	bcf	status,0,c
 52566   018014  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52567   018016  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52568   018018  90D8               	bcf	status,0,c
 52569   01801A  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52570   01801C  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52571   01801E  040B               	decf	(??_SPI_SD_receive+1)^(0+1280),w,c
 52572   018020  A0D8               	btfss	status,0,c
 52573   018022  EF15  F0C0         	goto	u27081
 52574   018026  EF17  F0C0         	goto	u27080
 52575   01802A                     u27081:
 52576   01802A  EF4D  F0C0         	goto	l505
 52577   01802E                     u27080:
 52578   01802E                     l507:
 52579                           
 52580                           ; BSR set to: 0
 52581                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 196:         SPI1TXB = 0xff;
 52582   01802E  6981               	setf	129,b	;volatile
 52583   018030                     
 52584                           ; BSR set to: 0
 52585                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 197:         for (int i = 1; i < count; 
      +                          i++) {
 52586   018030  0E00               	movlw	0
 52587   018032  6E0E               	movwf	(SPI_SD_receive@i+1)^(0+1280),c
 52588   018034  0E01               	movlw	1
 52589   018036  6E0D               	movwf	SPI_SD_receive@i^(0+1280),c
 52590   018038  EF31  F0C0         	goto	l20241
 52591   01803C                     l509:
 52592                           
 52593                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 198:             SPI1TXB = 0xff;
 52594   01803C  0100               	movlb	0	; () banked
 52595   01803E  6981               	setf	129,b	;volatile
 52596   018040                     l510:
 52597   018040  A0B1               	btfss	1201,0,c	;volatile
 52598   018042  EF25  F0C0         	goto	u27091
 52599   018046  EF27  F0C0         	goto	u27090
 52600   01804A                     u27091:
 52601   01804A  EF20  F0C0         	goto	l510
 52602   01804E                     u27090:
 52603   01804E                     
 52604                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 200:             *p++ = SPI1RXB;
 52605   01804E  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52606   018052  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52607   018056  C080 F4DF          	movff	128,indf2	;volatile
 52608   01805A  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52609   01805C  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52610   01805E                     
 52611                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 201:         }
 52612   01805E  4A0D               	infsnz	SPI_SD_receive@i^(0+1280),f,c
 52613   018060  2A0E               	incf	(SPI_SD_receive@i+1)^(0+1280),f,c
 52614   018062                     l20241:
 52615   018062  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 52616   018064  5C0D               	subwf	SPI_SD_receive@i^(0+1280),w,c
 52617   018066  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52618   018068  580E               	subwfb	(SPI_SD_receive@i+1)^(0+1280),w,c
 52619   01806A  A0D8               	btfss	status,0,c
 52620   01806C  EF3A  F0C0         	goto	u27101
 52621   018070  EF3C  F0C0         	goto	u27100
 52622   018074                     u27101:
 52623   018074  EF1E  F0C0         	goto	l509
 52624   018078                     u27100:
 52625   018078                     l514:
 52626   018078  A0B1               	btfss	1201,0,c	;volatile
 52627   01807A  EF41  F0C0         	goto	u27111
 52628   01807E  EF43  F0C0         	goto	u27110
 52629   018082                     u27111:
 52630   018082  EF3C  F0C0         	goto	l514
 52631   018086                     u27110:
 52632   018086                     l20243:
 52633                           
 52634                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 203:         *p++ = SPI1RXB;
 52635   018086  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52636   01808A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52637   01808E  C080 F4DF          	movff	128,indf2	;volatile
 52638   018092  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52639   018094  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52640                           
 52641                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 204:     } else {
 52642   018096  EF72  F0C1         	goto	l504
 52643   01809A                     l505:
 52644                           
 52645                           ; BSR set to: 0
 52646                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 205:         SPI1TXB = 0xff;
 52647   01809A  6981               	setf	129,b	;volatile
 52648                           
 52649                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 206:         SPI1TXB = 0xff;
 52650   01809C  6981               	setf	129,b	;volatile
 52651   01809E                     l518:
 52652   01809E  A0B1               	btfss	1201,0,c	;volatile
 52653   0180A0  EF54  F0C0         	goto	u27121
 52654   0180A4  EF56  F0C0         	goto	u27120
 52655   0180A8                     u27121:
 52656   0180A8  EF4F  F0C0         	goto	l518
 52657   0180AC                     u27120:
 52658   0180AC                     
 52659                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 208:         *p++ = SPI1RXB;
 52660   0180AC  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52661   0180B0  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52662   0180B4  C080 F4DF          	movff	128,indf2	;volatile
 52663   0180B8  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52664   0180BA  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52665   0180BC                     
 52666                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 209:         SPI1TXB = 0xff;
 52667   0180BC  0100               	movlb	0	; () banked
 52668   0180BE  6981               	setf	129,b	;volatile
 52669   0180C0                     l521:
 52670   0180C0  A0B1               	btfss	1201,0,c	;volatile
 52671   0180C2  EF65  F0C0         	goto	u27131
 52672   0180C6  EF67  F0C0         	goto	u27130
 52673   0180CA                     u27131:
 52674   0180CA  EF60  F0C0         	goto	l521
 52675   0180CE                     u27130:
 52676   0180CE                     
 52677                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 211:         *p++ = SPI1RXB;
 52678   0180CE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52679   0180D2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52680   0180D6  C080 F4DF          	movff	128,indf2	;volatile
 52681   0180DA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52682   0180DC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52683   0180DE                     
 52684                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 212:         SPI1TXB = 0xff;
 52685   0180DE  0100               	movlb	0	; () banked
 52686   0180E0  6981               	setf	129,b	;volatile
 52687   0180E2                     l524:
 52688   0180E2  A0B1               	btfss	1201,0,c	;volatile
 52689   0180E4  EF76  F0C0         	goto	u27141
 52690   0180E8  EF78  F0C0         	goto	u27140
 52691   0180EC                     u27141:
 52692   0180EC  EF71  F0C0         	goto	l524
 52693   0180F0                     u27140:
 52694   0180F0                     
 52695                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 214:         *p++ = SPI1RXB;
 52696   0180F0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52697   0180F4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52698   0180F8  C080 F4DF          	movff	128,indf2	;volatile
 52699   0180FC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52700   0180FE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52701   018100                     
 52702                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 215:         SPI1TXB = 0xff;
 52703   018100  0100               	movlb	0	; () banked
 52704   018102  6981               	setf	129,b	;volatile
 52705   018104                     l527:
 52706   018104  A0B1               	btfss	1201,0,c	;volatile
 52707   018106  EF87  F0C0         	goto	u27151
 52708   01810A  EF89  F0C0         	goto	u27150
 52709   01810E                     u27151:
 52710   01810E  EF82  F0C0         	goto	l527
 52711   018112                     u27150:
 52712   018112                     
 52713                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 217:         *p++ = SPI1RXB;
 52714   018112  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52715   018116  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52716   01811A  C080 F4DF          	movff	128,indf2	;volatile
 52717   01811E  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52718   018120  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52719   018122                     
 52720                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 218:         SPI1TXB = 0xff;
 52721   018122  0100               	movlb	0	; () banked
 52722   018124  6981               	setf	129,b	;volatile
 52723   018126                     l530:
 52724   018126  A0B1               	btfss	1201,0,c	;volatile
 52725   018128  EF98  F0C0         	goto	u27161
 52726   01812C  EF9A  F0C0         	goto	u27160
 52727   018130                     u27161:
 52728   018130  EF93  F0C0         	goto	l530
 52729   018134                     u27160:
 52730   018134                     
 52731                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 220:         *p++ = SPI1RXB;
 52732   018134  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52733   018138  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52734   01813C  C080 F4DF          	movff	128,indf2	;volatile
 52735   018140  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52736   018142  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52737   018144                     
 52738                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 221:         SPI1TXB = 0xff;
 52739   018144  0100               	movlb	0	; () banked
 52740   018146  6981               	setf	129,b	;volatile
 52741   018148                     l533:
 52742   018148  A0B1               	btfss	1201,0,c	;volatile
 52743   01814A  EFA9  F0C0         	goto	u27171
 52744   01814E  EFAB  F0C0         	goto	u27170
 52745   018152                     u27171:
 52746   018152  EFA4  F0C0         	goto	l533
 52747   018156                     u27170:
 52748   018156                     
 52749                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 223:         *p++ = SPI1RXB;
 52750   018156  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52751   01815A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52752   01815E  C080 F4DF          	movff	128,indf2	;volatile
 52753   018162  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52754   018164  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52755   018166                     
 52756                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 224:         SPI1TXB = 0xff;
 52757   018166  0100               	movlb	0	; () banked
 52758   018168  6981               	setf	129,b	;volatile
 52759   01816A                     l536:
 52760   01816A  A0B1               	btfss	1201,0,c	;volatile
 52761   01816C  EFBA  F0C0         	goto	u27181
 52762   018170  EFBC  F0C0         	goto	u27180
 52763   018174                     u27181:
 52764   018174  EFB5  F0C0         	goto	l536
 52765   018178                     u27180:
 52766   018178                     
 52767                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 226:         *p++ = SPI1RXB;
 52768   018178  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52769   01817C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52770   018180  C080 F4DF          	movff	128,indf2	;volatile
 52771   018184  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52772   018186  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52773   018188                     
 52774                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 227:         uint8_t repeat = (uint8_t)(
      +                          count / 8);
 52775   018188  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 52776   01818C  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 52777   018190  90D8               	bcf	status,0,c
 52778   018192  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52779   018194  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52780   018196  90D8               	bcf	status,0,c
 52781   018198  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52782   01819A  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52783   01819C  90D8               	bcf	status,0,c
 52784   01819E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52785   0181A0  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52786   0181A2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 52787   0181A4  6E0C               	movwf	SPI_SD_receive@repeat^(0+1280),c
 52788   0181A6                     
 52789                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 228:         for (uint8_t i = 1; i < rep
      +                          eat; i++) {
 52790   0181A6  0E01               	movlw	1
 52791   0181A8  6E0F               	movwf	SPI_SD_receive@i_590^(0+1280),c
 52792   0181AA  EF60  F0C1         	goto	l20339
 52793   0181AE                     l540:
 52794                           
 52795                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 229:             SPI1TXB = 0xff;
 52796   0181AE  0100               	movlb	0	; () banked
 52797   0181B0  6981               	setf	129,b	;volatile
 52798   0181B2                     l541:
 52799   0181B2  A0B1               	btfss	1201,0,c	;volatile
 52800   0181B4  EFDE  F0C0         	goto	u27191
 52801   0181B8  EFE0  F0C0         	goto	u27190
 52802   0181BC                     u27191:
 52803   0181BC  EFD9  F0C0         	goto	l541
 52804   0181C0                     u27190:
 52805   0181C0                     
 52806                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 231:             *p++ = SPI1RXB;
 52807   0181C0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52808   0181C4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52809   0181C8  C080 F4DF          	movff	128,indf2	;volatile
 52810   0181CC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52811   0181CE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52812   0181D0                     
 52813                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 232:             SPI1TXB = 0xff;
 52814   0181D0  0100               	movlb	0	; () banked
 52815   0181D2  6981               	setf	129,b	;volatile
 52816   0181D4                     l544:
 52817   0181D4  A0B1               	btfss	1201,0,c	;volatile
 52818   0181D6  EFEF  F0C0         	goto	u27201
 52819   0181DA  EFF1  F0C0         	goto	u27200
 52820   0181DE                     u27201:
 52821   0181DE  EFEA  F0C0         	goto	l544
 52822   0181E2                     u27200:
 52823   0181E2                     
 52824                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 234:             *p++ = SPI1RXB;
 52825   0181E2  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52826   0181E6  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52827   0181EA  C080 F4DF          	movff	128,indf2	;volatile
 52828   0181EE  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52829   0181F0  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52830   0181F2                     
 52831                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 235:             SPI1TXB = 0xff;
 52832   0181F2  0100               	movlb	0	; () banked
 52833   0181F4  6981               	setf	129,b	;volatile
 52834   0181F6                     l547:
 52835   0181F6  A0B1               	btfss	1201,0,c	;volatile
 52836   0181F8  EF00  F0C1         	goto	u27211
 52837   0181FC  EF02  F0C1         	goto	u27210
 52838   018200                     u27211:
 52839   018200  EFFB  F0C0         	goto	l547
 52840   018204                     u27210:
 52841   018204                     
 52842                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 237:             *p++ = SPI1RXB;
 52843   018204  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52844   018208  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52845   01820C  C080 F4DF          	movff	128,indf2	;volatile
 52846   018210  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52847   018212  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52848   018214                     
 52849                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 238:             SPI1TXB = 0xff;
 52850   018214  0100               	movlb	0	; () banked
 52851   018216  6981               	setf	129,b	;volatile
 52852   018218                     l550:
 52853   018218  A0B1               	btfss	1201,0,c	;volatile
 52854   01821A  EF11  F0C1         	goto	u27221
 52855   01821E  EF13  F0C1         	goto	u27220
 52856   018222                     u27221:
 52857   018222  EF0C  F0C1         	goto	l550
 52858   018226                     u27220:
 52859   018226                     
 52860                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 240:             *p++ = SPI1RXB;
 52861   018226  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52862   01822A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52863   01822E  C080 F4DF          	movff	128,indf2	;volatile
 52864   018232  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52865   018234  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52866   018236                     
 52867                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 241:             SPI1TXB = 0xff;
 52868   018236  0100               	movlb	0	; () banked
 52869   018238  6981               	setf	129,b	;volatile
 52870   01823A                     l553:
 52871   01823A  A0B1               	btfss	1201,0,c	;volatile
 52872   01823C  EF22  F0C1         	goto	u27231
 52873   018240  EF24  F0C1         	goto	u27230
 52874   018244                     u27231:
 52875   018244  EF1D  F0C1         	goto	l553
 52876   018248                     u27230:
 52877   018248                     
 52878                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 243:             *p++ = SPI1RXB;
 52879   018248  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52880   01824C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52881   018250  C080 F4DF          	movff	128,indf2	;volatile
 52882   018254  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52883   018256  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52884   018258                     
 52885                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 244:             SPI1TXB = 0xff;
 52886   018258  0100               	movlb	0	; () banked
 52887   01825A  6981               	setf	129,b	;volatile
 52888   01825C                     l556:
 52889   01825C  A0B1               	btfss	1201,0,c	;volatile
 52890   01825E  EF33  F0C1         	goto	u27241
 52891   018262  EF35  F0C1         	goto	u27240
 52892   018266                     u27241:
 52893   018266  EF2E  F0C1         	goto	l556
 52894   01826A                     u27240:
 52895   01826A                     
 52896                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 246:             *p++ = SPI1RXB;
 52897   01826A  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52898   01826E  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52899   018272  C080 F4DF          	movff	128,indf2	;volatile
 52900   018276  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52901   018278  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52902   01827A                     
 52903                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 247:             SPI1TXB = 0xff;
 52904   01827A  0100               	movlb	0	; () banked
 52905   01827C  6981               	setf	129,b	;volatile
 52906   01827E                     l559:
 52907   01827E  A0B1               	btfss	1201,0,c	;volatile
 52908   018280  EF44  F0C1         	goto	u27251
 52909   018284  EF46  F0C1         	goto	u27250
 52910   018288                     u27251:
 52911   018288  EF3F  F0C1         	goto	l559
 52912   01828C                     u27250:
 52913   01828C                     
 52914                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 249:             *p++ = SPI1RXB;
 52915   01828C  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52916   018290  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52917   018294  C080 F4DF          	movff	128,indf2	;volatile
 52918   018298  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52919   01829A  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52920   01829C                     
 52921                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 250:             SPI1TXB = 0xff;
 52922   01829C  0100               	movlb	0	; () banked
 52923   01829E  6981               	setf	129,b	;volatile
 52924   0182A0                     l562:
 52925   0182A0  A0B1               	btfss	1201,0,c	;volatile
 52926   0182A2  EF55  F0C1         	goto	u27261
 52927   0182A6  EF57  F0C1         	goto	u27260
 52928   0182AA                     u27261:
 52929   0182AA  EF50  F0C1         	goto	l562
 52930   0182AE                     u27260:
 52931   0182AE                     
 52932                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 252:             *p++ = SPI1RXB;
 52933   0182AE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52934   0182B2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52935   0182B6  C080 F4DF          	movff	128,indf2	;volatile
 52936   0182BA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52937   0182BC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52938   0182BE                     
 52939                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 253:         }
 52940   0182BE  2A0F               	incf	SPI_SD_receive@i_590^(0+1280),f,c
 52941   0182C0                     l20339:
 52942   0182C0  500C               	movf	SPI_SD_receive@repeat^(0+1280),w,c
 52943   0182C2  5C0F               	subwf	SPI_SD_receive@i_590^(0+1280),w,c
 52944   0182C4  A0D8               	btfss	status,0,c
 52945   0182C6  EF67  F0C1         	goto	u27271
 52946   0182CA  EF69  F0C1         	goto	u27270
 52947   0182CE                     u27271:
 52948   0182CE  EFD7  F0C0         	goto	l540
 52949   0182D2                     u27270:
 52950   0182D2                     l566:
 52951   0182D2  A0B1               	btfss	1201,0,c	;volatile
 52952   0182D4  EF6E  F0C1         	goto	u27281
 52953   0182D8  EF70  F0C1         	goto	u27280
 52954   0182DC                     u27281:
 52955   0182DC  EF69  F0C1         	goto	l566
 52956   0182E0                     u27280:
 52957   0182E0  EF43  F0C0         	goto	l20243
 52958   0182E4                     l504:
 52959   0182E4  0012               	return		;funcret
 52960   0182E6                     __end_of_SPI_SD_receive:
 52961                           	callstack 0
 52962                           
 52963 ;; *************** function _SPI_SD_begin_transaction *****************
 52964 ;; Defined at:
 52965 ;;		line 134 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52966 ;; Parameters:    Size  Location     Type
 52967 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 52968 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52969 ;; Auto vars:     Size  Location     Type
 52970 ;;		None
 52971 ;; Return value:  Size  Location     Type
 52972 ;;                  1    wreg      void 
 52973 ;; Registers used:
 52974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52975 ;; Tracked objects:
 52976 ;;		On entry : 0/0
 52977 ;;		On exit  : 0/0
 52978 ;;		Unchanged: 0/0
 52979 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52984 ;;Total ram usage:        2 bytes
 52985 ;; Hardware stack levels used: 1
 52986 ;; Hardware stack levels required when called: 2
 52987 ;; This function calls:
 52988 ;;		_SPI_SD_select
 52989 ;;		_acquire_bus
 52990 ;; This function is called by:
 52991 ;;		_SDCard_init
 52992 ;;		___SDCard_command_r1
 52993 ;; This function uses a non-reentrant model
 52994 ;;
 52995                           
 52996                           	psect	text155
 52997   000128                     __ptext155:
 52998                           	callstack 0
 52999   000128                     _SPI_SD_begin_transaction:
 53000                           	callstack 111
 53001   000128                     
 53002                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 134: void SPI_SD_begin_transaction(struc
      +                          t SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 135: {;../src/boards/../../d
      +                          rivers/pic18f57q43_spi.c: 136:     acquire_bus(ctx_);
 53003   000128  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,acquire_bus@ctx_
 53004   00012C  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,acquire_bus@ctx_+1
 53005   000130  EC5D  F0FC         	call	_acquire_bus	;wreg free
 53006   000134                     
 53007                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 137:     SPI_SD_select(ctx_, 1);
 53008   000134  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,SPI_SD_select@ctx_
 53009   000138  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,SPI_SD_select@ctx_+1
 53010   00013C  0E00               	movlw	0
 53011   00013E  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 53012   000140  0E01               	movlw	1
 53013   000142  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 53014   000144  ECF7  F000         	call	_SPI_SD_select	;wreg free
 53015   000148  0012               	return		;funcret
 53016   00014A                     __end_of_SPI_SD_begin_transaction:
 53017                           	callstack 0
 53018                           
 53019 ;; *************** function _SDCard_crc *****************
 53020 ;; Defined at:
 53021 ;;		line 334 in file "../src/boards/../../drivers/SDCard.c"
 53022 ;; Parameters:    Size  Location     Type
 53023 ;;  buf             2    3[COMRAM] PTR const void 
 53024 ;;		 -> __SDCard_command_r1@buf(6), 
 53025 ;;  count           2    5[COMRAM] unsigned int 
 53026 ;; Auto vars:     Size  Location     Type
 53027 ;;  i               2    9[COMRAM] int 
 53028 ;;  p               2   12[COMRAM] PTR unsigned char 
 53029 ;;		 -> __SDCard_command_r1@buf(6), 
 53030 ;;  endp            2    7[COMRAM] PTR unsigned char 
 53031 ;;		 -> __SDCard_command_r1@buf(6), 
 53032 ;;  crc             1   11[COMRAM] unsigned char 
 53033 ;; Return value:  Size  Location     Type
 53034 ;;                  1    wreg      unsigned char 
 53035 ;; Registers used:
 53036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53037 ;; Tracked objects:
 53038 ;;		On entry : 0/0
 53039 ;;		On exit  : 0/0
 53040 ;;		Unchanged: 0/0
 53041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53043 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53045 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53046 ;;Total ram usage:       11 bytes
 53047 ;; Hardware stack levels used: 1
 53048 ;; Hardware stack levels required when called: 1
 53049 ;; This function calls:
 53050 ;;		Nothing
 53051 ;; This function is called by:
 53052 ;;		___SDCard_command_r1
 53053 ;; This function uses a non-reentrant model
 53054 ;;
 53055                           
 53056                           	psect	text156
 53057   01F1F2                     __ptext156:
 53058                           	callstack 0
 53059   01F1F2                     _SDCard_crc:
 53060                           	callstack 112
 53061   01F1F2                     
 53062                           ;../src/boards/../../drivers/SDCard.c: 334: uint8_t SDCard_crc(const void *buf, unsigned
      +                           int count);../src/boards/../../drivers/SDCard.c: 335: {;../src/boards/../../drivers/SDC
      +                          ard.c: 336:     uint8_t crc = 0;
 53063   01F1F2  6A0C               	clrf	SDCard_crc@crc^(0+1280),c
 53064   01F1F4                     
 53065                           ;../src/boards/../../drivers/SDCard.c: 337:     uint8_t *p = (uint8_t*)buf;
 53066   01F1F4  C504  F50D         	movff	SDCard_crc@buf,SDCard_crc@p
 53067   01F1F8  C505  F50E         	movff	SDCard_crc@buf+1,SDCard_crc@p+1
 53068                           
 53069                           ;../src/boards/../../drivers/SDCard.c: 338:     uint8_t *endp = p + count;
 53070   01F1FC  5006               	movf	SDCard_crc@count^(0+1280),w,c
 53071   01F1FE  240D               	addwf	SDCard_crc@p^(0+1280),w,c
 53072   01F200  6E08               	movwf	SDCard_crc@endp^(0+1280),c
 53073   01F202  5007               	movf	(SDCard_crc@count+1)^(0+1280),w,c
 53074   01F204  200E               	addwfc	(SDCard_crc@p+1)^(0+1280),w,c
 53075   01F206  6E09               	movwf	(SDCard_crc@endp+1)^(0+1280),c
 53076                           
 53077                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 53078   01F208  EF2D  F0F9         	goto	l20621
 53079   01F20C                     l20605:
 53080                           
 53081                           ;../src/boards/../../drivers/SDCard.c: 341:         crc ^= *p++;
 53082   01F20C  C50D  F4D9         	movff	SDCard_crc@p,fsr2l
 53083   01F210  C50E  F4DA         	movff	SDCard_crc@p+1,fsr2h
 53084   01F214  50DF               	movf	indf2,w,c
 53085   01F216  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 53086   01F218  4A0D               	infsnz	SDCard_crc@p^(0+1280),f,c
 53087   01F21A  2A0E               	incf	(SDCard_crc@p+1)^(0+1280),f,c
 53088   01F21C                     
 53089                           ;../src/boards/../../drivers/SDCard.c: 342:         for (int i = 0; i < 8; i++) {
 53090   01F21C  0E00               	movlw	0
 53091   01F21E  6E0B               	movwf	(SDCard_crc@i+1)^(0+1280),c
 53092   01F220  0E00               	movlw	0
 53093   01F222  6E0A               	movwf	SDCard_crc@i^(0+1280),c
 53094   01F224                     l728:
 53095                           
 53096                           ;../src/boards/../../drivers/SDCard.c: 343:             if (crc & 0x80)
 53097   01F224  AE0C               	btfss	SDCard_crc@crc^(0+1280),7,c
 53098   01F226  EF17  F0F9         	goto	u27551
 53099   01F22A  EF19  F0F9         	goto	u27550
 53100   01F22E                     u27551:
 53101   01F22E  EF1B  F0F9         	goto	l730
 53102   01F232                     u27550:
 53103   01F232                     
 53104                           ;../src/boards/../../drivers/SDCard.c: 344:                 crc ^= 0x89;
 53105   01F232  0E89               	movlw	137
 53106   01F234  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 53107   01F236                     l730:
 53108                           
 53109                           ;../src/boards/../../drivers/SDCard.c: 345:             crc <<= 1;
 53110   01F236  90D8               	bcf	status,0,c
 53111   01F238  360C               	rlcf	SDCard_crc@crc^(0+1280),f,c
 53112   01F23A                     
 53113                           ;../src/boards/../../drivers/SDCard.c: 346:         }
 53114   01F23A  4A0A               	infsnz	SDCard_crc@i^(0+1280),f,c
 53115   01F23C  2A0B               	incf	(SDCard_crc@i+1)^(0+1280),f,c
 53116   01F23E  BE0B               	btfsc	(SDCard_crc@i+1)^(0+1280),7,c
 53117   01F240  EF2B  F0F9         	goto	u27561
 53118   01F244  500B               	movf	(SDCard_crc@i+1)^(0+1280),w,c
 53119   01F246  E109               	bnz	u27560
 53120   01F248  0E08               	movlw	8
 53121   01F24A  5C0A               	subwf	SDCard_crc@i^(0+1280),w,c
 53122   01F24C  A0D8               	btfss	status,0,c
 53123   01F24E  EF2B  F0F9         	goto	u27561
 53124   01F252  EF2D  F0F9         	goto	u27560
 53125   01F256                     u27561:
 53126   01F256  EF12  F0F9         	goto	l728
 53127   01F25A                     u27560:
 53128   01F25A                     l20621:
 53129                           
 53130                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 53131   01F25A  5008               	movf	SDCard_crc@endp^(0+1280),w,c
 53132   01F25C  5C0D               	subwf	SDCard_crc@p^(0+1280),w,c
 53133   01F25E  5009               	movf	(SDCard_crc@endp+1)^(0+1280),w,c
 53134   01F260  580E               	subwfb	(SDCard_crc@p+1)^(0+1280),w,c
 53135   01F262  A0D8               	btfss	status,0,c
 53136   01F264  EF36  F0F9         	goto	u27571
 53137   01F268  EF38  F0F9         	goto	u27570
 53138   01F26C                     u27571:
 53139   01F26C  EF06  F0F9         	goto	l20605
 53140   01F270                     u27570:
 53141   01F270                     
 53142                           ;../src/boards/../../drivers/SDCard.c: 349:     return crc;
 53143   01F270  500C               	movf	SDCard_crc@crc^(0+1280),w,c
 53144   01F272  0012               	return		;funcret
 53145   01F274                     __end_of_SDCard_crc:
 53146                           	callstack 0
 53147                           
 53148 ;; *************** function _SDCard_end_transaction *****************
 53149 ;; Defined at:
 53150 ;;		line 46 in file "../src/boards/../../drivers/SDCard.c"
 53151 ;; Parameters:    Size  Location     Type
 53152 ;;		None
 53153 ;; Auto vars:     Size  Location     Type
 53154 ;;  spi             2   20[COMRAM] PTR struct SPI
 53155 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53156 ;; Return value:  Size  Location     Type
 53157 ;;                  1    wreg      void 
 53158 ;; Registers used:
 53159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53160 ;; Tracked objects:
 53161 ;;		On entry : 0/0
 53162 ;;		On exit  : 0/0
 53163 ;;		Unchanged: 0/0
 53164 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53169 ;;Total ram usage:        2 bytes
 53170 ;; Hardware stack levels used: 1
 53171 ;; Hardware stack levels required when called: 3
 53172 ;; This function calls:
 53173 ;;		_SPI_SD_dummy_clocks
 53174 ;;		_SPI_SD_end_transaction
 53175 ;; This function is called by:
 53176 ;;		_SDCard_init
 53177 ;;		_SDCard_read512
 53178 ;;		_SDCard_write512
 53179 ;;		_SDCard_command
 53180 ;; This function uses a non-reentrant model
 53181 ;;
 53182                           
 53183                           	psect	text157
 53184   01FF62                     __ptext157:
 53185                           	callstack 0
 53186   01FF62                     _SDCard_end_transaction:
 53187                           	callstack 111
 53188   01FF62                     
 53189                           ;../src/boards/../../drivers/SDCard.c: 48:     struct SPI *spi = ctx_.spi;
 53190   01FF62  C7A8  F515         	movff	_ctx_,SDCard_end_transaction@spi
 53191   01FF66  C7A9  F516         	movff	_ctx_+1,SDCard_end_transaction@spi+1
 53192   01FF6A                     
 53193                           ;../src/boards/../../drivers/SDCard.c: 49:     SPI_SD_end_transaction(spi);
 53194   01FF6A  C515  F508         	movff	SDCard_end_transaction@spi,SPI_SD_end_transaction@ctx_
 53195   01FF6E  C516  F509         	movff	SDCard_end_transaction@spi+1,SPI_SD_end_transaction@ctx_+1
 53196   01FF72  ECA5  F000         	call	_SPI_SD_end_transaction	;wreg free
 53197   01FF76                     
 53198                           ;../src/boards/../../drivers/SDCard.c: 50:     SPI_SD_dummy_clocks(spi, 1);
 53199   01FF76  C515  F50E         	movff	SDCard_end_transaction@spi,SPI_SD_dummy_clocks@ctx_
 53200   01FF7A  C516  F50F         	movff	SDCard_end_transaction@spi+1,SPI_SD_dummy_clocks@ctx_+1
 53201   01FF7E  0E00               	movlw	0
 53202   01FF80  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 53203   01FF82  0E01               	movlw	1
 53204   01FF84  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 53205   01FF86  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 53206   01FF8A  0012               	return		;funcret
 53207   01FF8C                     __end_of_SDCard_end_transaction:
 53208                           	callstack 0
 53209                           
 53210 ;; *************** function _SPI_SD_end_transaction *****************
 53211 ;; Defined at:
 53212 ;;		line 140 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53213 ;; Parameters:    Size  Location     Type
 53214 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 53215 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53216 ;; Auto vars:     Size  Location     Type
 53217 ;;		None
 53218 ;; Return value:  Size  Location     Type
 53219 ;;                  1    wreg      void 
 53220 ;; Registers used:
 53221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53222 ;; Tracked objects:
 53223 ;;		On entry : 0/0
 53224 ;;		On exit  : 0/0
 53225 ;;		Unchanged: 0/0
 53226 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53231 ;;Total ram usage:        2 bytes
 53232 ;; Hardware stack levels used: 1
 53233 ;; Hardware stack levels required when called: 2
 53234 ;; This function calls:
 53235 ;;		_SPI_SD_select
 53236 ;;		_release_bus
 53237 ;; This function is called by:
 53238 ;;		_SDCard_end_transaction
 53239 ;; This function uses a non-reentrant model
 53240 ;;
 53241                           
 53242                           	psect	text158
 53243   00014A                     __ptext158:
 53244                           	callstack 0
 53245   00014A                     _SPI_SD_end_transaction:
 53246                           	callstack 111
 53247   00014A                     
 53248                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 140: void SPI_SD_end_transaction(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 141: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 142:     SPI_SD_select(ctx_, 0);
 53249   00014A  C508  F504         	movff	SPI_SD_end_transaction@ctx_,SPI_SD_select@ctx_
 53250   00014E  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,SPI_SD_select@ctx_+1
 53251   000152  0E00               	movlw	0
 53252   000154  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 53253   000156  0E00               	movlw	0
 53254   000158  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 53255   00015A  ECF7  F000         	call	_SPI_SD_select	;wreg free
 53256   00015E                     
 53257                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 143:     release_bus(ctx_);
 53258   00015E  C508  F504         	movff	SPI_SD_end_transaction@ctx_,release_bus@ctx_
 53259   000162  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,release_bus@ctx_+1
 53260   000166  EC63  F0FE         	call	_release_bus	;wreg free
 53261   00016A  0012               	return		;funcret
 53262   00016C                     __end_of_SPI_SD_end_transaction:
 53263                           	callstack 0
 53264                           
 53265 ;; *************** function _SPI_SD_select *****************
 53266 ;; Defined at:
 53267 ;;		line 276 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53268 ;; Parameters:    Size  Location     Type
 53269 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53270 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53271 ;;  select          2    5[COMRAM] int 
 53272 ;; Auto vars:     Size  Location     Type
 53273 ;;		None
 53274 ;; Return value:  Size  Location     Type
 53275 ;;                  1    wreg      void 
 53276 ;; Registers used:
 53277 ;;		wreg, status,2, status,0
 53278 ;; Tracked objects:
 53279 ;;		On entry : 0/0
 53280 ;;		On exit  : 0/0
 53281 ;;		Unchanged: 0/0
 53282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53286 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53287 ;;Total ram usage:        4 bytes
 53288 ;; Hardware stack levels used: 1
 53289 ;; Hardware stack levels required when called: 1
 53290 ;; This function calls:
 53291 ;;		Nothing
 53292 ;; This function is called by:
 53293 ;;		_SPI_SD_begin_transaction
 53294 ;;		_SPI_SD_end_transaction
 53295 ;; This function uses a non-reentrant model
 53296 ;;
 53297                           
 53298                           	psect	text159
 53299   0001EE                     __ptext159:
 53300                           	callstack 0
 53301   0001EE                     _SPI_SD_select:
 53302                           	callstack 111
 53303   0001EE                     
 53304                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 276: void SPI_SD_select(struct SPI *ctx_
      +                          , int select);../src/boards/../../drivers/pic18f57q43_spi.c: 277: {;../src/boards/../../
      +                          drivers/pic18f57q43_spi.c: 278:     LATE2 = select ? 0 : 1;
 53305   0001EE  5006               	movf	SPI_SD_select@select^(0+1280),w,c
 53306   0001F0  1007               	iorwf	(SPI_SD_select@select+1)^(0+1280),w,c
 53307   0001F2  B4D8               	btfsc	status,2,c
 53308   0001F4  EFFE  F000         	goto	u27451
 53309   0001F8  EF01  F001         	goto	u27450
 53310   0001FC                     u27451:
 53311   0001FC  84C2               	bsf	1218,2,c	;volatile
 53312   0001FE  EF02  F001         	goto	u27465
 53313   000202                     u27450:
 53314   000202  94C2               	bcf	1218,2,c	;volatile
 53315   000204                     u27465:
 53316   000204  0012               	return		;funcret
 53317   000206                     __end_of_SPI_SD_select:
 53318                           	callstack 0
 53319                           
 53320 ;; *************** function _SPI_SD_dummy_clocks *****************
 53321 ;; Defined at:
 53322 ;;		line 259 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53323 ;; Parameters:    Size  Location     Type
 53324 ;;  ctx_            2   13[COMRAM] PTR struct SPI
 53325 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53326 ;;  clocks          2   15[COMRAM] unsigned int 
 53327 ;; Auto vars:     Size  Location     Type
 53328 ;;  i               2   17[COMRAM] int 
 53329 ;;  dummy           1   19[COMRAM] unsigned char 
 53330 ;; Return value:  Size  Location     Type
 53331 ;;                  1    wreg      void 
 53332 ;; Registers used:
 53333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53334 ;; Tracked objects:
 53335 ;;		On entry : 0/0
 53336 ;;		On exit  : 0/0
 53337 ;;		Unchanged: 0/0
 53338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53340 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53342 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53343 ;;Total ram usage:        7 bytes
 53344 ;; Hardware stack levels used: 1
 53345 ;; Hardware stack levels required when called: 2
 53346 ;; This function calls:
 53347 ;;		_SPI_SD_send
 53348 ;;		_acquire_bus
 53349 ;;		_release_bus
 53350 ;; This function is called by:
 53351 ;;		_SDCard_end_transaction
 53352 ;;		_SDCard_init
 53353 ;;		___SDCard_command_r1
 53354 ;;		_SDCard_write512
 53355 ;; This function uses a non-reentrant model
 53356 ;;
 53357                           
 53358                           	psect	text160
 53359   01F758                     __ptext160:
 53360                           	callstack 0
 53361   01F758                     _SPI_SD_dummy_clocks:
 53362                           	callstack 111
 53363   01F758                     
 53364                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 259: void SPI_SD_dummy_clocks(struct SPI
      +                           *ctx_, unsigned int clocks);../src/boards/../../drivers/pic18f57q43_spi.c: 260: {;../sr
      +                          c/boards/../../drivers/pic18f57q43_spi.c: 261:     uint8_t dummy = 0xff;
 53365   01F758  6814               	setf	SPI_SD_dummy_clocks@dummy^(0+1280),c
 53366   01F75A                     
 53367                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 262:     acquire_bus(ctx_);
 53368   01F75A  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,acquire_bus@ctx_
 53369   01F75E  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,acquire_bus@ctx_+1
 53370   01F762  EC5D  F0FC         	call	_acquire_bus	;wreg free
 53371   01F766                     
 53372                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 263:     for (int i = 0; i < clocks; i++
      +                          ) {
 53373   01F766  0E00               	movlw	0
 53374   01F768  6E13               	movwf	(SPI_SD_dummy_clocks@i+1)^(0+1280),c
 53375   01F76A  0E00               	movlw	0
 53376   01F76C  6E12               	movwf	SPI_SD_dummy_clocks@i^(0+1280),c
 53377   01F76E  EFC9  F0FB         	goto	l20585
 53378   01F772                     l20581:
 53379                           
 53380                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 264:         SPI_SD_send(ctx_, &dummy, 1
      +                          );
 53381   01F772  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,SPI_SD_send@ctx_
 53382   01F776  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,SPI_SD_send@ctx_+1
 53383   01F77A  0E14               	movlw	low SPI_SD_dummy_clocks@dummy
 53384   01F77C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 53385   01F77E  0E05               	movlw	high SPI_SD_dummy_clocks@dummy
 53386   01F780  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 53387   01F782  0E00               	movlw	0
 53388   01F784  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 53389   01F786  0E01               	movlw	1
 53390   01F788  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 53391   01F78A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 53392   01F78E                     
 53393                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 265:     }
 53394   01F78E  4A12               	infsnz	SPI_SD_dummy_clocks@i^(0+1280),f,c
 53395   01F790  2A13               	incf	(SPI_SD_dummy_clocks@i+1)^(0+1280),f,c
 53396   01F792                     l20585:
 53397   01F792  5010               	movf	SPI_SD_dummy_clocks@clocks^(0+1280),w,c
 53398   01F794  5C12               	subwf	SPI_SD_dummy_clocks@i^(0+1280),w,c
 53399   01F796  5011               	movf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),w,c
 53400   01F798  5813               	subwfb	(SPI_SD_dummy_clocks@i+1)^(0+1280),w,c
 53401   01F79A  A0D8               	btfss	status,0,c
 53402   01F79C  EFD2  F0FB         	goto	u27521
 53403   01F7A0  EFD4  F0FB         	goto	u27520
 53404   01F7A4                     u27521:
 53405   01F7A4  EFB9  F0FB         	goto	l20581
 53406   01F7A8                     u27520:
 53407   01F7A8                     
 53408                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 266:     release_bus(ctx_);
 53409   01F7A8  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,release_bus@ctx_
 53410   01F7AC  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,release_bus@ctx_+1
 53411   01F7B0  EC63  F0FE         	call	_release_bus	;wreg free
 53412   01F7B4  0012               	return		;funcret
 53413   01F7B6                     __end_of_SPI_SD_dummy_clocks:
 53414                           	callstack 0
 53415                           
 53416 ;; *************** function _release_bus *****************
 53417 ;; Defined at:
 53418 ;;		line 55 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53419 ;; Parameters:    Size  Location     Type
 53420 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53421 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53422 ;; Auto vars:     Size  Location     Type
 53423 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 53424 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53425 ;; Return value:  Size  Location     Type
 53426 ;;                  1    wreg      void 
 53427 ;; Registers used:
 53428 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53429 ;; Tracked objects:
 53430 ;;		On entry : 0/0
 53431 ;;		On exit  : 0/0
 53432 ;;		Unchanged: 0/0
 53433 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53438 ;;Total ram usage:        4 bytes
 53439 ;; Hardware stack levels used: 1
 53440 ;; Hardware stack levels required when called: 1
 53441 ;; This function calls:
 53442 ;;		Nothing
 53443 ;; This function is called by:
 53444 ;;		_SPI_SD_end_transaction
 53445 ;;		_SPI_SD_dummy_clocks
 53446 ;; This function uses a non-reentrant model
 53447 ;;
 53448                           
 53449                           	psect	text161
 53450   01FCC6                     __ptext161:
 53451                           	callstack 0
 53452   01FCC6                     _release_bus:
 53453                           	callstack 111
 53454   01FCC6                     
 53455                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 55: static void release_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 56: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 57:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 53456   01FCC6  C504  F506         	movff	release_bus@ctx_,release_bus@ctx
 53457   01FCCA  C505  F507         	movff	release_bus@ctx_+1,release_bus@ctx+1
 53458   01FCCE                     
 53459                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 58:     if (--ctx->bus_acquired <= 0) {
 53460   01FCCE  EE20 F002          	lfsr	2,2
 53461   01FCD2  5006               	movf	release_bus@ctx^(0+1280),w,c
 53462   01FCD4  26D9               	addwf	fsr2l,f,c
 53463   01FCD6  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 53464   01FCD8  22DA               	addwfc	fsr2h,f,c
 53465   01FCDA  06DF               	decf	indf2,f,c
 53466   01FCDC  50DF               	movf	indf2,w,c
 53467   01FCDE  A4D8               	btfss	status,2,c
 53468   01FCE0  EF74  F0FE         	goto	u27441
 53469   01FCE4  EF76  F0FE         	goto	u27440
 53470   01FCE8                     u27441:
 53471   01FCE8  EF81  F0FE         	goto	l458
 53472   01FCEC                     u27440:
 53473   01FCEC                     
 53474                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 59:         RB1PPS = 0x00;
 53475   01FCEC  0102               	movlb	2	; () banked
 53476   01FCEE  6B0A               	clrf	10,b	;volatile
 53477                           
 53478                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 60:         RB0PPS = 0x00;
 53479   01FCF0  6B09               	clrf	9,b	;volatile
 53480   01FCF2                     
 53481                           ; BSR set to: 2
 53482                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 61:         TRISB = ctx->tris;
 53483   01FCF2  EE20 F003          	lfsr	2,3
 53484   01FCF6  5006               	movf	release_bus@ctx^(0+1280),w,c
 53485   01FCF8  26D9               	addwf	fsr2l,f,c
 53486   01FCFA  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 53487   01FCFC  22DA               	addwfc	fsr2h,f,c
 53488   01FCFE  50DF               	movf	indf2,w,c
 53489   01FD00  6EC7               	movwf	199,c	;volatile
 53490   01FD02                     l458:
 53491   01FD02  0012               	return		;funcret
 53492   01FD04                     __end_of_release_bus:
 53493                           	callstack 0
 53494                           
 53495 ;; *************** function _acquire_bus *****************
 53496 ;; Defined at:
 53497 ;;		line 39 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53498 ;; Parameters:    Size  Location     Type
 53499 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53500 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53501 ;; Auto vars:     Size  Location     Type
 53502 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 53503 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53504 ;; Return value:  Size  Location     Type
 53505 ;;                  1    wreg      void 
 53506 ;; Registers used:
 53507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53508 ;; Tracked objects:
 53509 ;;		On entry : 0/0
 53510 ;;		On exit  : 0/0
 53511 ;;		Unchanged: 0/0
 53512 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53517 ;;Total ram usage:        4 bytes
 53518 ;; Hardware stack levels used: 1
 53519 ;; Hardware stack levels required when called: 1
 53520 ;; This function calls:
 53521 ;;		Nothing
 53522 ;; This function is called by:
 53523 ;;		_SPI_SD_begin_transaction
 53524 ;;		_SPI_SD_dummy_clocks
 53525 ;; This function uses a non-reentrant model
 53526 ;;
 53527                           
 53528                           	psect	text162
 53529   01F8BA                     __ptext162:
 53530                           	callstack 0
 53531   01F8BA                     _acquire_bus:
 53532                           	callstack 111
 53533   01F8BA                     
 53534                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 39: static void acquire_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 40: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 41:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 53535   01F8BA  C504  F506         	movff	acquire_bus@ctx_,acquire_bus@ctx
 53536   01F8BE  C505  F507         	movff	acquire_bus@ctx_+1,acquire_bus@ctx+1
 53537   01F8C2                     
 53538                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 42:     if (ctx->bus_acquired == 0) {
 53539   01F8C2  EE20 F002          	lfsr	2,2
 53540   01F8C6  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53541   01F8C8  26D9               	addwf	fsr2l,f,c
 53542   01F8CA  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53543   01F8CC  22DA               	addwfc	fsr2h,f,c
 53544   01F8CE  50DF               	movf	indf2,w,c
 53545   01F8D0  A4D8               	btfss	status,2,c
 53546   01F8D2  EF6D  F0FC         	goto	u27431
 53547   01F8D6  EF6F  F0FC         	goto	u27430
 53548   01F8DA                     u27431:
 53549   01F8DA  EF7F  F0FC         	goto	l20509
 53550   01F8DE                     u27430:
 53551   01F8DE                     
 53552                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 43:         RB1PPS = 0x31;
 53553   01F8DE  0E31               	movlw	49
 53554   01F8E0  0102               	movlb	2	; () banked
 53555   01F8E2  6F0A               	movwf	10,b	;volatile
 53556                           
 53557                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 45:         RB0PPS = 0x32;
 53558   01F8E4  0E32               	movlw	50
 53559   01F8E6  6F09               	movwf	9,b	;volatile
 53560   01F8E8                     
 53561                           ; BSR set to: 2
 53562                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 47:         ctx->tris = TRISB;
 53563   01F8E8  EE20 F003          	lfsr	2,3
 53564   01F8EC  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53565   01F8EE  26D9               	addwf	fsr2l,f,c
 53566   01F8F0  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53567   01F8F2  22DA               	addwfc	fsr2h,f,c
 53568   01F8F4  C4C7 F4DF          	movff	1223,indf2	;volatile
 53569   01F8F8                     
 53570                           ; BSR set to: 2
 53571                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 48:         TRISB0 = 0;
 53572   01F8F8  90C7               	bcf	1223,0,c	;volatile
 53573   01F8FA                     
 53574                           ; BSR set to: 2
 53575                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 49:         TRISB1 = 0;
 53576   01F8FA  92C7               	bcf	1223,1,c	;volatile
 53577   01F8FC                     
 53578                           ; BSR set to: 2
 53579                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 50:         TRISB2 = 1;
 53580   01F8FC  84C7               	bsf	1223,2,c	;volatile
 53581   01F8FE                     l20509:
 53582                           
 53583                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 52:     ctx->bus_acquired++;
 53584   01F8FE  EE20 F002          	lfsr	2,2
 53585   01F902  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53586   01F904  26D9               	addwf	fsr2l,f,c
 53587   01F906  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53588   01F908  22DA               	addwfc	fsr2h,f,c
 53589   01F90A  2ADF               	incf	indf2,f,c
 53590   01F90C  0012               	return		;funcret
 53591   01F90E                     __end_of_acquire_bus:
 53592                           	callstack 0
 53593                           
 53594 ;; *************** function _SPI_SD_send *****************
 53595 ;; Defined at:
 53596 ;;		line 164 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53597 ;; Parameters:    Size  Location     Type
 53598 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53599 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53600 ;;  buf             2    5[COMRAM] PTR const void 
 53601 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 53602 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 53603 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 53604 ;;		 -> __SDCard_command_r1@buf(6), NULL(0), SPI_SD_dummy_clocks@dummy(1), 
 53605 ;;  count           2    7[COMRAM] unsigned int 
 53606 ;; Auto vars:     Size  Location     Type
 53607 ;;  i               2    9[COMRAM] int 
 53608 ;;  p               2   11[COMRAM] PTR unsigned char 
 53609 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 53610 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 53611 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 53612 ;;		 -> __SDCard_command_r1@buf(6), NULL(0), SPI_SD_dummy_clocks@dummy(1), 
 53613 ;;  dummy           1    0        unsigned char 
 53614 ;; Return value:  Size  Location     Type
 53615 ;;                  1    wreg      void 
 53616 ;; Registers used:
 53617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53618 ;; Tracked objects:
 53619 ;;		On entry : 0/0
 53620 ;;		On exit  : 0/0
 53621 ;;		Unchanged: 0/0
 53622 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53623 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53624 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53626 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53627 ;;Total ram usage:       10 bytes
 53628 ;; Hardware stack levels used: 1
 53629 ;; Hardware stack levels required when called: 1
 53630 ;; This function calls:
 53631 ;;		Nothing
 53632 ;; This function is called by:
 53633 ;;		_SPI_SD_dummy_clocks
 53634 ;;		___SDCard_command_r1
 53635 ;;		_SDCard_write512
 53636 ;; This function uses a non-reentrant model
 53637 ;;
 53638                           
 53639                           	psect	text163
 53640   01EEAC                     __ptext163:
 53641                           	callstack 0
 53642   01EEAC                     _SPI_SD_send:
 53643                           	callstack 112
 53644   01EEAC                     
 53645                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 164: void SPI_SD_send(struct SPI *ctx_, 
      +                          const void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 165:
      +                           {;../src/boards/../../drivers/pic18f57q43_spi.c: 166:     uint8_t *p = (uint8_t*)buf;
 53646   01EEAC  C506  F50C         	movff	SPI_SD_send@buf,SPI_SD_send@p
 53647   01EEB0  C507  F50D         	movff	SPI_SD_send@buf+1,SPI_SD_send@p+1
 53648                           
 53649                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 167:     uint8_t dummy;;../src/boards/..
      +                          /../drivers/pic18f57q43_spi.c: 169:     if (count == 0)
 53650   01EEB4  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 53651   01EEB6  1009               	iorwf	(SPI_SD_send@count+1)^(0+1280),w,c
 53652   01EEB8  A4D8               	btfss	status,2,c
 53653   01EEBA  EF61  F0F7         	goto	u27471
 53654   01EEBE  EF63  F0F7         	goto	u27470
 53655   01EEC2                     u27471:
 53656   01EEC2  EF65  F0F7         	goto	l20525
 53657   01EEC6                     u27470:
 53658   01EEC6  EF9F  F0F7         	goto	l491
 53659   01EECA                     l20525:
 53660                           
 53661                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 172:     SPI1TCNTH = (count >> 8);
 53662   01EECA  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 53663   01EECC  0100               	movlb	0	; () banked
 53664   01EECE  6F83               	movwf	131,b	;volatile
 53665   01EED0                     
 53666                           ; BSR set to: 0
 53667                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 173:     SPI1TCNTL = (count & 0xff);
 53668   01EED0  C508  F082         	movff	SPI_SD_send@count,130	;volatile
 53669   01EED4                     
 53670                           ; BSR set to: 0
 53671                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 175:     SPI1TXB = *p++;
 53672   01EED4  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 53673   01EED8  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 53674   01EEDC  50DF               	movf	indf2,w,c
 53675   01EEDE  6F81               	movwf	129,b	;volatile
 53676   01EEE0                     
 53677                           ; BSR set to: 0
 53678   01EEE0  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 53679   01EEE2  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 53680   01EEE4                     
 53681                           ; BSR set to: 0
 53682                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 176:     for (int i = 1; i < count; i++)
      +                           {
 53683   01EEE4  0E00               	movlw	0
 53684   01EEE6  6E0B               	movwf	(SPI_SD_send@i+1)^(0+1280),c
 53685   01EEE8  0E01               	movlw	1
 53686   01EEEA  6E0A               	movwf	SPI_SD_send@i^(0+1280),c
 53687   01EEEC  EF8B  F0F7         	goto	l20541
 53688   01EEF0                     l20535:
 53689                           
 53690                           ; BSR set to: 0
 53691                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 177:         SPI1TXB = *p++;
 53692   01EEF0  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 53693   01EEF4  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 53694   01EEF8  50DF               	movf	indf2,w,c
 53695   01EEFA  6F81               	movwf	129,b	;volatile
 53696   01EEFC                     
 53697                           ; BSR set to: 0
 53698   01EEFC  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 53699   01EEFE  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 53700   01EF00                     l494:
 53701   01EF00  A0B1               	btfss	1201,0,c	;volatile
 53702   01EF02  EF85  F0F7         	goto	u27481
 53703   01EF06  EF87  F0F7         	goto	u27480
 53704   01EF0A                     u27481:
 53705   01EF0A  EF80  F0F7         	goto	l494
 53706   01EF0E                     u27480:
 53707   01EF0E  0100               	movlb	0	; () banked
 53708   01EF10  5180               	movf	128,w,b	;volatile
 53709   01EF12                     
 53710                           ; BSR set to: 0
 53711                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 180:     }
 53712   01EF12  4A0A               	infsnz	SPI_SD_send@i^(0+1280),f,c
 53713   01EF14  2A0B               	incf	(SPI_SD_send@i+1)^(0+1280),f,c
 53714   01EF16                     l20541:
 53715                           
 53716                           ; BSR set to: 0
 53717   01EF16  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 53718   01EF18  5C0A               	subwf	SPI_SD_send@i^(0+1280),w,c
 53719   01EF1A  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 53720   01EF1C  580B               	subwfb	(SPI_SD_send@i+1)^(0+1280),w,c
 53721   01EF1E  A0D8               	btfss	status,0,c
 53722   01EF20  EF94  F0F7         	goto	u27491
 53723   01EF24  EF96  F0F7         	goto	u27490
 53724   01EF28                     u27491:
 53725   01EF28  EF78  F0F7         	goto	l20535
 53726   01EF2C                     u27490:
 53727   01EF2C                     l498:
 53728   01EF2C  A0B1               	btfss	1201,0,c	;volatile
 53729   01EF2E  EF9B  F0F7         	goto	u27501
 53730   01EF32  EF9D  F0F7         	goto	u27500
 53731   01EF36                     u27501:
 53732   01EF36  EF96  F0F7         	goto	l498
 53733   01EF3A                     u27500:
 53734   01EF3A  0100               	movlb	0	; () banked
 53735   01EF3C  5180               	movf	128,w,b	;volatile
 53736   01EF3E                     l491:
 53737   01EF3E  0012               	return		;funcret
 53738   01EF40                     __end_of_SPI_SD_send:
 53739                           	callstack 0
 53740                           
 53741 ;; *************** function _ld_word *****************
 53742 ;; Defined at:
 53743 ;;		line 619 in file "../fatfs/ff.c"
 53744 ;; Parameters:    Size  Location     Type
 53745 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 53746 ;;		 -> fs$win(512), fs(564), NULL(0), 
 53747 ;; Auto vars:     Size  Location     Type
 53748 ;;  rv              2    8[COMRAM] unsigned short 
 53749 ;; Return value:  Size  Location     Type
 53750 ;;                  2    3[COMRAM] unsigned short 
 53751 ;; Registers used:
 53752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53753 ;; Tracked objects:
 53754 ;;		On entry : 0/0
 53755 ;;		On exit  : 0/0
 53756 ;;		Unchanged: 0/0
 53757 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53762 ;;Total ram usage:        7 bytes
 53763 ;; Hardware stack levels used: 1
 53764 ;; Hardware stack levels required when called: 1
 53765 ;; This function calls:
 53766 ;;		Nothing
 53767 ;; This function is called by:
 53768 ;;		_get_fat
 53769 ;;		_ld_clust
 53770 ;;		_get_fileinfo
 53771 ;;		_check_fs
 53772 ;;		_mount_volume
 53773 ;;		_f_getfree
 53774 ;; This function uses a non-reentrant model
 53775 ;;
 53776                           
 53777                           	psect	text164
 53778   01FE98                     __ptext164:
 53779                           	callstack 0
 53780   01FE98                     _ld_word:
 53781                           	callstack 117
 53782   01FE98                     
 53783                           ;../fatfs/ff.c: 619: static WORD ld_word (const BYTE* ptr);../fatfs/ff.c: 620: {;../fatf
      +                          s/ff.c: 621:  WORD rv;;../fatfs/ff.c: 623:  rv = ptr[1];
 53784   01FE98  EE20 F001          	lfsr	2,1
 53785   01FE9C  5004               	movf	ld_word@ptr^(0+1280),w,c
 53786   01FE9E  26D9               	addwf	fsr2l,f,c
 53787   01FEA0  5005               	movf	(ld_word@ptr+1)^(0+1280),w,c
 53788   01FEA2  22DA               	addwfc	fsr2h,f,c
 53789   01FEA4  50DF               	movf	indf2,w,c
 53790   01FEA6  6E06               	movwf	??_ld_word^(0+1280),c
 53791   01FEA8  5006               	movf	??_ld_word^(0+1280),w,c
 53792   01FEAA  6E09               	movwf	ld_word@rv^(0+1280),c
 53793   01FEAC  6A0A               	clrf	(ld_word@rv+1)^(0+1280),c
 53794                           
 53795                           ;../fatfs/ff.c: 624:  rv = rv << 8 | ptr[0];
 53796   01FEAE  C504  F4D9         	movff	ld_word@ptr,fsr2l
 53797   01FEB2  C505  F4DA         	movff	ld_word@ptr+1,fsr2h
 53798   01FEB6  50DF               	movf	indf2,w,c
 53799   01FEB8  6E06               	movwf	??_ld_word^(0+1280),c
 53800   01FEBA  5009               	movf	ld_word@rv^(0+1280),w,c
 53801   01FEBC  6E07               	movwf	(??_ld_word+1)^(0+1280),c
 53802   01FEBE  5006               	movf	??_ld_word^(0+1280),w,c
 53803   01FEC0  6E09               	movwf	ld_word@rv^(0+1280),c
 53804   01FEC2  C507  F50A         	movff	??_ld_word+1,ld_word@rv+1
 53805   01FEC6                     
 53806                           ;../fatfs/ff.c: 625:  return rv;
 53807   01FEC6  C509  F504         	movff	ld_word@rv,?_ld_word
 53808   01FECA  C50A  F505         	movff	ld_word@rv+1,?_ld_word+1
 53809   01FECE  0012               	return		;funcret
 53810   01FED0                     __end_of_ld_word:
 53811                           	callstack 0
 53812                           
 53813 ;; *************** function _ld_dword *****************
 53814 ;; Defined at:
 53815 ;;		line 628 in file "../fatfs/ff.c"
 53816 ;; Parameters:    Size  Location     Type
 53817 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 53818 ;;		 -> fs$win(512), fs(564), NULL(0), 
 53819 ;; Auto vars:     Size  Location     Type
 53820 ;;  rv              4   12[COMRAM] unsigned long 
 53821 ;; Return value:  Size  Location     Type
 53822 ;;                  4    3[COMRAM] unsigned long 
 53823 ;; Registers used:
 53824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53825 ;; Tracked objects:
 53826 ;;		On entry : 0/0
 53827 ;;		On exit  : 0/0
 53828 ;;		Unchanged: 0/0
 53829 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53832 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53833 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53834 ;;Total ram usage:       13 bytes
 53835 ;; Hardware stack levels used: 1
 53836 ;; Hardware stack levels required when called: 1
 53837 ;; This function calls:
 53838 ;;		Nothing
 53839 ;; This function is called by:
 53840 ;;		_get_fat
 53841 ;;		_put_fat
 53842 ;;		_get_fileinfo
 53843 ;;		_check_fs
 53844 ;;		_find_volume
 53845 ;;		_mount_volume
 53846 ;;		_f_open
 53847 ;;		_f_getfree
 53848 ;; This function uses a non-reentrant model
 53849 ;;
 53850                           
 53851                           	psect	text165
 53852   01E58E                     __ptext165:
 53853                           	callstack 0
 53854   01E58E                     _ld_dword:
 53855                           	callstack 117
 53856   01E58E                     
 53857                           ;../fatfs/ff.c: 628: static DWORD ld_dword (const BYTE* ptr);../fatfs/ff.c: 629: {;../fa
      +                          tfs/ff.c: 630:  DWORD rv;;../fatfs/ff.c: 632:  rv = ptr[3];
 53858   01E58E  EE20 F003          	lfsr	2,3
 53859   01E592  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53860   01E594  26D9               	addwf	fsr2l,f,c
 53861   01E596  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53862   01E598  22DA               	addwfc	fsr2h,f,c
 53863   01E59A  50DF               	movf	indf2,w,c
 53864   01E59C  6E08               	movwf	??_ld_dword^(0+1280),c
 53865   01E59E  5008               	movf	??_ld_dword^(0+1280),w,c
 53866   01E5A0  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53867   01E5A2  6A0E               	clrf	(ld_dword@rv+1)^(0+1280),c
 53868   01E5A4  6A0F               	clrf	(ld_dword@rv+2)^(0+1280),c
 53869   01E5A6  6A10               	clrf	(ld_dword@rv+3)^(0+1280),c
 53870                           
 53871                           ;../fatfs/ff.c: 633:  rv = rv << 8 | ptr[2];
 53872   01E5A8  EE20 F002          	lfsr	2,2
 53873   01E5AC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53874   01E5AE  26D9               	addwf	fsr2l,f,c
 53875   01E5B0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53876   01E5B2  22DA               	addwfc	fsr2h,f,c
 53877   01E5B4  50DF               	movf	indf2,w,c
 53878   01E5B6  6E08               	movwf	??_ld_dword^(0+1280),c
 53879   01E5B8  5008               	movf	??_ld_dword^(0+1280),w,c
 53880   01E5BA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53881   01E5BE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53882   01E5C2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53883   01E5C6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53884   01E5C8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53885   01E5CA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53886   01E5CC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53887   01E5CE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53888   01E5D0  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53889   01E5D2  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53890   01E5D4  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53891   01E5D6  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53892                           
 53893                           ;../fatfs/ff.c: 634:  rv = rv << 8 | ptr[1];
 53894   01E5D8  EE20 F001          	lfsr	2,1
 53895   01E5DC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53896   01E5DE  26D9               	addwf	fsr2l,f,c
 53897   01E5E0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53898   01E5E2  22DA               	addwfc	fsr2h,f,c
 53899   01E5E4  50DF               	movf	indf2,w,c
 53900   01E5E6  6E08               	movwf	??_ld_dword^(0+1280),c
 53901   01E5E8  5008               	movf	??_ld_dword^(0+1280),w,c
 53902   01E5EA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53903   01E5EE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53904   01E5F2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53905   01E5F6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53906   01E5F8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53907   01E5FA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53908   01E5FC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53909   01E5FE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53910   01E600  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53911   01E602  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53912   01E604  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53913   01E606  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53914                           
 53915                           ;../fatfs/ff.c: 635:  rv = rv << 8 | ptr[0];
 53916   01E608  C504  F4D9         	movff	ld_dword@ptr,fsr2l
 53917   01E60C  C505  F4DA         	movff	ld_dword@ptr+1,fsr2h
 53918   01E610  50DF               	movf	indf2,w,c
 53919   01E612  6E08               	movwf	??_ld_dword^(0+1280),c
 53920   01E614  5008               	movf	??_ld_dword^(0+1280),w,c
 53921   01E616  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53922   01E61A  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53923   01E61E  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53924   01E622  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53925   01E624  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53926   01E626  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53927   01E628  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53928   01E62A  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53929   01E62C  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53930   01E62E  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53931   01E630  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53932   01E632  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53933   01E634                     
 53934                           ;../fatfs/ff.c: 636:  return rv;
 53935   01E634  C50D  F504         	movff	ld_dword@rv,?_ld_dword
 53936   01E638  C50E  F505         	movff	ld_dword@rv+1,?_ld_dword+1
 53937   01E63C  C50F  F506         	movff	ld_dword@rv+2,?_ld_dword+2
 53938   01E640  C510  F507         	movff	ld_dword@rv+3,?_ld_dword+3
 53939   01E644  0012               	return		;funcret
 53940   01E646                     __end_of_ld_dword:
 53941                           	callstack 0
 53942                           
 53943 ;; *************** function _clst2sect *****************
 53944 ;; Defined at:
 53945 ;;		line 1145 in file "../fatfs/ff.c"
 53946 ;; Parameters:    Size  Location     Type
 53947 ;;  fs              2   15[COMRAM] PTR struct .
 53948 ;;		 -> fs(564), NULL(0), 
 53949 ;;  clst            4   17[COMRAM] unsigned long 
 53950 ;; Auto vars:     Size  Location     Type
 53951 ;;		None
 53952 ;; Return value:  Size  Location     Type
 53953 ;;                  4   15[COMRAM] unsigned long 
 53954 ;; Registers used:
 53955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53956 ;; Tracked objects:
 53957 ;;		On entry : 0/0
 53958 ;;		On exit  : 0/0
 53959 ;;		Unchanged: 0/0
 53960 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53961 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53963 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53964 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53965 ;;Total ram usage:       12 bytes
 53966 ;; Hardware stack levels used: 1
 53967 ;; Hardware stack levels required when called: 2
 53968 ;; This function calls:
 53969 ;;		___lmul
 53970 ;; This function is called by:
 53971 ;;		_dir_clear
 53972 ;;		_dir_sdi
 53973 ;;		_dir_next
 53974 ;;		_f_open
 53975 ;;		_f_read
 53976 ;;		_f_write
 53977 ;;		_f_lseek
 53978 ;;		_f_rename
 53979 ;; This function uses a non-reentrant model
 53980 ;;
 53981                           
 53982                           	psect	text166
 53983   01E0F4                     __ptext166:
 53984                           	callstack 0
 53985   01E0F4                     _clst2sect:
 53986                           	callstack 117
 53987   01E0F4                     
 53988                           ;../fatfs/ff.c: 1146:  FATFS* fs,;../fatfs/ff.c: 1147:  DWORD clst;../fatfs/ff.c: 1149: 
      +                          {;../fatfs/ff.c: 1150:  clst -= 2;
 53989   01E0F4  0E02               	movlw	2
 53990   01E0F6  5E12               	subwf	clst2sect@clst^(0+1280),f,c
 53991   01E0F8  0E00               	movlw	0
 53992   01E0FA  5A13               	subwfb	(clst2sect@clst+1)^(0+1280),f,c
 53993   01E0FC  5A14               	subwfb	(clst2sect@clst+2)^(0+1280),f,c
 53994   01E0FE  5A15               	subwfb	(clst2sect@clst+3)^(0+1280),f,c
 53995   01E100                     
 53996                           ;../fatfs/ff.c: 1151:  if (clst >= fs->n_fatent - 2) return 0;
 53997   01E100  EE20 F018          	lfsr	2,24
 53998   01E104  5010               	movf	clst2sect@fs^(0+1280),w,c
 53999   01E106  26D9               	addwf	fsr2l,f,c
 54000   01E108  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54001   01E10A  22DA               	addwfc	fsr2h,f,c
 54002   01E10C  0EFE               	movlw	254
 54003   01E10E  24DE               	addwf	postinc2,w,c
 54004   01E110  6E16               	movwf	??_clst2sect^(0+1280),c
 54005   01E112  0EFF               	movlw	255
 54006   01E114  20DE               	addwfc	postinc2,w,c
 54007   01E116  6E17               	movwf	(??_clst2sect+1)^(0+1280),c
 54008   01E118  0EFF               	movlw	255
 54009   01E11A  20DE               	addwfc	postinc2,w,c
 54010   01E11C  6E18               	movwf	(??_clst2sect+2)^(0+1280),c
 54011   01E11E  0EFF               	movlw	255
 54012   01E120  20DE               	addwfc	postinc2,w,c
 54013   01E122  6E19               	movwf	(??_clst2sect+3)^(0+1280),c
 54014   01E124  5016               	movf	??_clst2sect^(0+1280),w,c
 54015   01E126  5C12               	subwf	clst2sect@clst^(0+1280),w,c
 54016   01E128  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 54017   01E12A  5813               	subwfb	(clst2sect@clst+1)^(0+1280),w,c
 54018   01E12C  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 54019   01E12E  5814               	subwfb	(clst2sect@clst+2)^(0+1280),w,c
 54020   01E130  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 54021   01E132  5815               	subwfb	(clst2sect@clst+3)^(0+1280),w,c
 54022   01E134  A0D8               	btfss	status,0,c
 54023   01E136  EF9F  F0F0         	goto	u28031
 54024   01E13A  EFA1  F0F0         	goto	u28030
 54025   01E13E                     u28031:
 54026   01E13E  EFAB  F0F0         	goto	l21051
 54027   01E142                     u28030:
 54028   01E142  0E00               	movlw	0
 54029   01E144  6E10               	movwf	?_clst2sect^(0+1280),c
 54030   01E146  0E00               	movlw	0
 54031   01E148  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 54032   01E14A  0E00               	movlw	0
 54033   01E14C  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 54034   01E14E  0E00               	movlw	0
 54035   01E150  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 54036   01E152  EFDF  F0F0         	goto	l1471
 54037   01E156                     l21051:
 54038                           
 54039                           ;../fatfs/ff.c: 1152:  return fs->database + (LBA_t)fs->csize * clst;
 54040   01E156  EE20 F02C          	lfsr	2,44
 54041   01E15A  5010               	movf	clst2sect@fs^(0+1280),w,c
 54042   01E15C  26D9               	addwf	fsr2l,f,c
 54043   01E15E  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54044   01E160  22DA               	addwfc	fsr2h,f,c
 54045   01E162  C4DE F516          	movff	postinc2,??_clst2sect
 54046   01E166  C4DE F517          	movff	postinc2,??_clst2sect+1
 54047   01E16A  C4DE F518          	movff	postinc2,??_clst2sect+2
 54048   01E16E  C4DE F519          	movff	postinc2,??_clst2sect+3
 54049   01E172  EE20 F00A          	lfsr	2,10
 54050   01E176  5010               	movf	clst2sect@fs^(0+1280),w,c
 54051   01E178  26D9               	addwf	fsr2l,f,c
 54052   01E17A  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54053   01E17C  22DA               	addwfc	fsr2h,f,c
 54054   01E17E  C4DE F51A          	movff	postinc2,??_clst2sect+4
 54055   01E182  C4DD F51B          	movff	postdec2,??_clst2sect+5
 54056   01E186  C51A  F504         	movff	??_clst2sect+4,___lmul@multiplier
 54057   01E18A  C51B  F505         	movff	??_clst2sect+5,___lmul@multiplier+1
 54058   01E18E  6A06               	clrf	(___lmul@multiplier+2)^(0+1280),c
 54059   01E190  6A07               	clrf	(___lmul@multiplier+3)^(0+1280),c
 54060   01E192  C512  F508         	movff	clst2sect@clst,___lmul@multiplicand
 54061   01E196  C513  F509         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 54062   01E19A  C514  F50A         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 54063   01E19E  C515  F50B         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 54064   01E1A2  EC13  F0FB         	call	___lmul	;wreg free
 54065   01E1A6  5016               	movf	??_clst2sect^(0+1280),w,c
 54066   01E1A8  2404               	addwf	?___lmul^(0+1280),w,c
 54067   01E1AA  6E10               	movwf	?_clst2sect^(0+1280),c
 54068   01E1AC  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 54069   01E1AE  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 54070   01E1B0  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 54071   01E1B2  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 54072   01E1B4  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 54073   01E1B6  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 54074   01E1B8  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 54075   01E1BA  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 54076   01E1BC  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 54077   01E1BE                     l1471:
 54078   01E1BE  0012               	return		;funcret
 54079   01E1C0                     __end_of_clst2sect:
 54080                           	callstack 0
 54081                           
 54082 ;; *************** function ___lmul *****************
 54083 ;; Defined at:
 54084 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
 54085 ;; Parameters:    Size  Location     Type
 54086 ;;  multiplier      4    3[COMRAM] unsigned long 
 54087 ;;  multiplicand    4    7[COMRAM] unsigned long 
 54088 ;; Auto vars:     Size  Location     Type
 54089 ;;  product         4   11[COMRAM] unsigned long 
 54090 ;; Return value:  Size  Location     Type
 54091 ;;                  4    3[COMRAM] unsigned long 
 54092 ;; Registers used:
 54093 ;;		wreg, status,2, status,0
 54094 ;; Tracked objects:
 54095 ;;		On entry : 0/0
 54096 ;;		On exit  : 0/0
 54097 ;;		Unchanged: 0/0
 54098 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54102 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54103 ;;Total ram usage:       12 bytes
 54104 ;; Hardware stack levels used: 1
 54105 ;; Hardware stack levels required when called: 1
 54106 ;; This function calls:
 54107 ;;		Nothing
 54108 ;; This function is called by:
 54109 ;;		_clst2sect
 54110 ;;		_mount_volume
 54111 ;;		___strtoxl
 54112 ;; This function uses a non-reentrant model
 54113 ;;
 54114                           
 54115                           	psect	text167
 54116   01F626                     __ptext167:
 54117                           	callstack 0
 54118   01F626                     ___lmul:
 54119                           	callstack 117
 54120   01F626  0E00               	movlw	0
 54121   01F628  6E0C               	movwf	___lmul@product^(0+1280),c
 54122   01F62A  0E00               	movlw	0
 54123   01F62C  6E0D               	movwf	(___lmul@product+1)^(0+1280),c
 54124   01F62E  0E00               	movlw	0
 54125   01F630  6E0E               	movwf	(___lmul@product+2)^(0+1280),c
 54126   01F632  0E00               	movlw	0
 54127   01F634  6E0F               	movwf	(___lmul@product+3)^(0+1280),c
 54128   01F636                     l21027:
 54129   01F636  A004               	btfss	___lmul@multiplier^(0+1280),0,c
 54130   01F638  EF20  F0FB         	goto	u28001
 54131   01F63C  EF22  F0FB         	goto	u28000
 54132   01F640                     u28001:
 54133   01F640  EF2A  F0FB         	goto	l21031
 54134   01F644                     u28000:
 54135   01F644  5008               	movf	___lmul@multiplicand^(0+1280),w,c
 54136   01F646  260C               	addwf	___lmul@product^(0+1280),f,c
 54137   01F648  5009               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 54138   01F64A  220D               	addwfc	(___lmul@product+1)^(0+1280),f,c
 54139   01F64C  500A               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 54140   01F64E  220E               	addwfc	(___lmul@product+2)^(0+1280),f,c
 54141   01F650  500B               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 54142   01F652  220F               	addwfc	(___lmul@product+3)^(0+1280),f,c
 54143   01F654                     l21031:
 54144   01F654  90D8               	bcf	status,0,c
 54145   01F656  3608               	rlcf	___lmul@multiplicand^(0+1280),f,c
 54146   01F658  3609               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 54147   01F65A  360A               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 54148   01F65C  360B               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 54149   01F65E  90D8               	bcf	status,0,c
 54150   01F660  3207               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 54151   01F662  3206               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 54152   01F664  3205               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 54153   01F666  3204               	rrcf	___lmul@multiplier^(0+1280),f,c
 54154   01F668  5004               	movf	___lmul@multiplier^(0+1280),w,c
 54155   01F66A  1005               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 54156   01F66C  1006               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 54157   01F66E  1007               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 54158   01F670  A4D8               	btfss	status,2,c
 54159   01F672  EF3D  F0FB         	goto	u28011
 54160   01F676  EF3F  F0FB         	goto	u28010
 54161   01F67A                     u28011:
 54162   01F67A  EF1B  F0FB         	goto	l21027
 54163   01F67E                     u28010:
 54164   01F67E  C50C  F504         	movff	___lmul@product,?___lmul
 54165   01F682  C50D  F505         	movff	___lmul@product+1,?___lmul+1
 54166   01F686  C50E  F506         	movff	___lmul@product+2,?___lmul+2
 54167   01F68A  C50F  F507         	movff	___lmul@product+3,?___lmul+3
 54168   01F68E  0012               	return		;funcret
 54169   01F690                     __end_of___lmul:
 54170                           	callstack 0
 54171                           
 54172 ;; *************** function _dsk_err *****************
 54173 ;; Defined at:
 54174 ;;		line 138 in file "../src/io_dos.c"
 54175 ;; Parameters:    Size  Location     Type
 54176 ;;		None
 54177 ;; Auto vars:     Size  Location     Type
 54178 ;;		None
 54179 ;; Return value:  Size  Location     Type
 54180 ;;                  1    wreg      void 
 54181 ;; Registers used:
 54182 ;;		wreg, status,2
 54183 ;; Tracked objects:
 54184 ;;		On entry : 0/0
 54185 ;;		On exit  : 0/0
 54186 ;;		Unchanged: 0/0
 54187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54192 ;;Total ram usage:        0 bytes
 54193 ;; Hardware stack levels used: 1
 54194 ;; Hardware stack levels required when called: 1
 54195 ;; This function calls:
 54196 ;;		Nothing
 54197 ;; This function is called by:
 54198 ;;		_bus_master_operation
 54199 ;; This function uses a non-reentrant model
 54200 ;;
 54201                           
 54202                           	psect	text168
 54203   00026E                     __ptext168:
 54204                           	callstack 0
 54205   00026E                     _dsk_err:
 54206                           	callstack 121
 54207   00026E                     
 54208                           ;../src/io_dos.c: 139:  req_tbl.UNI_CHR = 1;
 54209   00026E  0E01               	movlw	1
 54210   000270  0107               	movlb	7	; () banked
 54211   000272  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 54212   000274                     
 54213                           ; BSR set to: 7
 54214   000274  0012               	return		;funcret
 54215   000276                     __end_of_dsk_err:
 54216                           	callstack 0
 54217                           
 54218 ;; *************** function _bus_hold_req *****************
 54219 ;; Defined at:
 54220 ;;		line 285 in file "../src/boards/w65_bd.c"
 54221 ;; Parameters:    Size  Location     Type
 54222 ;;		None
 54223 ;; Auto vars:     Size  Location     Type
 54224 ;;		None
 54225 ;; Return value:  Size  Location     Type
 54226 ;;                  1    wreg      void 
 54227 ;; Registers used:
 54228 ;;		None
 54229 ;; Tracked objects:
 54230 ;;		On entry : 0/0
 54231 ;;		On exit  : 0/0
 54232 ;;		Unchanged: 0/0
 54233 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54238 ;;Total ram usage:        0 bytes
 54239 ;; Hardware stack levels used: 1
 54240 ;; Hardware stack levels required when called: 1
 54241 ;; This function calls:
 54242 ;;		Nothing
 54243 ;; This function is called by:
 54244 ;;		_reset_cpu
 54245 ;;		_board_event_loop
 54246 ;;		_board_event_loop1
 54247 ;; This function uses a non-reentrant model
 54248 ;;
 54249                           
 54250                           	psect	text169
 54251   000258                     __ptext169:
 54252                           	callstack 0
 54253   000258                     _bus_hold_req:
 54254                           	callstack 122
 54255   000258                     
 54256                           ;../src/boards/w65_bd.c: 287:  TRISC = 0x00;
 54257   000258  6AC8               	clrf	200,c	;volatile
 54258                           
 54259                           ;../src/boards/w65_bd.c: 288:  TRISD = 0x00;
 54260   00025A  6AC9               	clrf	201,c	;volatile
 54261                           
 54262                           ;../src/boards/w65_bd.c: 290:  LATA4 = 1;
 54263   00025C  88BE               	bsf	1214,4,c	;volatile
 54264                           
 54265                           ;../src/boards/w65_bd.c: 291:  TRISA4 = 0;
 54266   00025E  98C6               	bcf	1222,4,c	;volatile
 54267                           
 54268                           ;../src/boards/w65_bd.c: 292:  TRISA1 = 0;
 54269   000260  92C6               	bcf	1222,1,c	;volatile
 54270   000262  0012               	return		;funcret
 54271   000264                     __end_of_bus_hold_req:
 54272                           	callstack 0
 54273                           
 54274 ;; *************** function ___xxtofl *****************
 54275 ;; Defined at:
 54276 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 54277 ;; Parameters:    Size  Location     Type
 54278 ;;  sign            1    wreg     unsigned char 
 54279 ;;  val             4    3[COMRAM] long 
 54280 ;; Auto vars:     Size  Location     Type
 54281 ;;  sign            1   11[COMRAM] unsigned char 
 54282 ;;  arg             4   13[COMRAM] unsigned long 
 54283 ;;  exp             1   12[COMRAM] unsigned char 
 54284 ;; Return value:  Size  Location     Type
 54285 ;;                  4    3[COMRAM] unsigned char 
 54286 ;; Registers used:
 54287 ;;		wreg, status,2, status,0
 54288 ;; Tracked objects:
 54289 ;;		On entry : 0/0
 54290 ;;		On exit  : 0/0
 54291 ;;		Unchanged: 0/0
 54292 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54294 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54295 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54296 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54297 ;;Total ram usage:       14 bytes
 54298 ;; Hardware stack levels used: 1
 54299 ;; Hardware stack levels required when called: 1
 54300 ;; This function calls:
 54301 ;;		Nothing
 54302 ;; This function is called by:
 54303 ;;		_main
 54304 ;;		_ftoa
 54305 ;; This function uses a non-reentrant model
 54306 ;;
 54307                           
 54308                           	psect	text170
 54309   01AAA6                     __ptext170:
 54310                           	callstack 0
 54311   01AAA6                     ___xxtofl:
 54312                           	callstack 125
 54313                           
 54314                           ;incstack = 0
 54315                           ;___xxtofl@sign stored from wreg
 54316   01AAA6  6E0C               	movwf	___xxtofl@sign^(0+1280),c
 54317   01AAA8  500C               	movf	___xxtofl@sign^(0+1280),w,c
 54318   01AAAA  B4D8               	btfsc	status,2,c
 54319   01AAAC  EF5A  F0D5         	goto	u23291
 54320   01AAB0  EF5C  F0D5         	goto	u23290
 54321   01AAB4                     u23291:
 54322   01AAB4  EF7E  F0D5         	goto	l3200
 54323   01AAB8                     u23290:
 54324   01AAB8  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 54325   01AABA  EF63  F0D5         	goto	u23300
 54326   01AABE  EF61  F0D5         	goto	u23301
 54327   01AAC2                     u23301:
 54328   01AAC2  EF7E  F0D5         	goto	l3200
 54329   01AAC6                     u23300:
 54330   01AAC6  C504  F508         	movff	___xxtofl@val,??___xxtofl
 54331   01AACA  C505  F509         	movff	___xxtofl@val+1,??___xxtofl+1
 54332   01AACE  C506  F50A         	movff	___xxtofl@val+2,??___xxtofl+2
 54333   01AAD2  C507  F50B         	movff	___xxtofl@val+3,??___xxtofl+3
 54334   01AAD6  1E08               	comf	??___xxtofl^(0+1280),f,c
 54335   01AAD8  1E09               	comf	(??___xxtofl+1)^(0+1280),f,c
 54336   01AADA  1E0A               	comf	(??___xxtofl+2)^(0+1280),f,c
 54337   01AADC  1E0B               	comf	(??___xxtofl+3)^(0+1280),f,c
 54338   01AADE  2A08               	incf	??___xxtofl^(0+1280),f,c
 54339   01AAE0  0E00               	movlw	0
 54340   01AAE2  2209               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 54341   01AAE4  220A               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 54342   01AAE6  220B               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 54343   01AAE8  C508  F50E         	movff	??___xxtofl,___xxtofl@arg
 54344   01AAEC  C509  F50F         	movff	??___xxtofl+1,___xxtofl@arg+1
 54345   01AAF0  C50A  F510         	movff	??___xxtofl+2,___xxtofl@arg+2
 54346   01AAF4  C50B  F511         	movff	??___xxtofl+3,___xxtofl@arg+3
 54347   01AAF8  EF86  F0D5         	goto	l18109
 54348   01AAFC                     l3200:
 54349   01AAFC  C504  F50E         	movff	___xxtofl@val,___xxtofl@arg
 54350   01AB00  C505  F50F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 54351   01AB04  C506  F510         	movff	___xxtofl@val+2,___xxtofl@arg+2
 54352   01AB08  C507  F511         	movff	___xxtofl@val+3,___xxtofl@arg+3
 54353   01AB0C                     l18109:
 54354   01AB0C  5004               	movf	___xxtofl@val^(0+1280),w,c
 54355   01AB0E  1005               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 54356   01AB10  1006               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 54357   01AB12  1007               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 54358   01AB14  A4D8               	btfss	status,2,c
 54359   01AB16  EF8F  F0D5         	goto	u23311
 54360   01AB1A  EF91  F0D5         	goto	u23310
 54361   01AB1E                     u23311:
 54362   01AB1E  EF9B  F0D5         	goto	l18115
 54363   01AB22                     u23310:
 54364   01AB22  0E00               	movlw	0
 54365   01AB24  6E04               	movwf	?___xxtofl^(0+1280),c
 54366   01AB26  0E00               	movlw	0
 54367   01AB28  6E05               	movwf	(?___xxtofl+1)^(0+1280),c
 54368   01AB2A  0E00               	movlw	0
 54369   01AB2C  6E06               	movwf	(?___xxtofl+2)^(0+1280),c
 54370   01AB2E  0E00               	movlw	0
 54371   01AB30  6E07               	movwf	(?___xxtofl+3)^(0+1280),c
 54372   01AB32  EF2C  F0D6         	goto	l3203
 54373   01AB36                     l18115:
 54374   01AB36  0E96               	movlw	150
 54375   01AB38  6E0D               	movwf	___xxtofl@exp^(0+1280),c
 54376   01AB3A  EFA5  F0D5         	goto	l18119
 54377   01AB3E                     l18117:
 54378   01AB3E  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 54379   01AB40  90D8               	bcf	status,0,c
 54380   01AB42  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 54381   01AB44  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 54382   01AB46  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 54383   01AB48  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 54384   01AB4A                     l18119:
 54385   01AB4A  0E00               	movlw	0
 54386   01AB4C  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 54387   01AB4E  6E08               	movwf	??___xxtofl^(0+1280),c
 54388   01AB50  0E00               	movlw	0
 54389   01AB52  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 54390   01AB54  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 54391   01AB56  0E00               	movlw	0
 54392   01AB58  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 54393   01AB5A  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 54394   01AB5C  0EFE               	movlw	254
 54395   01AB5E  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 54396   01AB60  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 54397   01AB62  5008               	movf	??___xxtofl^(0+1280),w,c
 54398   01AB64  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 54399   01AB66  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 54400   01AB68  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 54401   01AB6A  A4D8               	btfss	status,2,c
 54402   01AB6C  EFBA  F0D5         	goto	u23321
 54403   01AB70  EFBC  F0D5         	goto	u23320
 54404   01AB74                     u23321:
 54405   01AB74  EF9F  F0D5         	goto	l18117
 54406   01AB78                     u23320:
 54407   01AB78  EFCA  F0D5         	goto	l3207
 54408   01AB7C                     l18121:
 54409   01AB7C  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 54410   01AB7E  0E01               	movlw	1
 54411   01AB80  260E               	addwf	___xxtofl@arg^(0+1280),f,c
 54412   01AB82  0E00               	movlw	0
 54413   01AB84  220F               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 54414   01AB86  2210               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 54415   01AB88  2211               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 54416   01AB8A  90D8               	bcf	status,0,c
 54417   01AB8C  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 54418   01AB8E  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 54419   01AB90  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 54420   01AB92  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 54421   01AB94                     l3207:
 54422   01AB94  0E00               	movlw	0
 54423   01AB96  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 54424   01AB98  6E08               	movwf	??___xxtofl^(0+1280),c
 54425   01AB9A  0E00               	movlw	0
 54426   01AB9C  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 54427   01AB9E  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 54428   01ABA0  0E00               	movlw	0
 54429   01ABA2  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 54430   01ABA4  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 54431   01ABA6  0EFF               	movlw	255
 54432   01ABA8  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 54433   01ABAA  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 54434   01ABAC  5008               	movf	??___xxtofl^(0+1280),w,c
 54435   01ABAE  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 54436   01ABB0  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 54437   01ABB2  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 54438   01ABB4  A4D8               	btfss	status,2,c
 54439   01ABB6  EFDF  F0D5         	goto	u23331
 54440   01ABBA  EFE1  F0D5         	goto	u23330
 54441   01ABBE                     u23331:
 54442   01ABBE  EFBE  F0D5         	goto	l18121
 54443   01ABC2                     u23330:
 54444   01ABC2  EFE9  F0D5         	goto	l18129
 54445   01ABC6                     l18127:
 54446   01ABC6  060D               	decf	___xxtofl@exp^(0+1280),f,c
 54447   01ABC8  90D8               	bcf	status,0,c
 54448   01ABCA  360E               	rlcf	___xxtofl@arg^(0+1280),f,c
 54449   01ABCC  360F               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 54450   01ABCE  3610               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 54451   01ABD0  3611               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 54452   01ABD2                     l18129:
 54453   01ABD2  BE10               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 54454   01ABD4  EFEE  F0D5         	goto	u23341
 54455   01ABD8  EFF0  F0D5         	goto	u23340
 54456   01ABDC                     u23341:
 54457   01ABDC  EFF8  F0D5         	goto	l3214
 54458   01ABE0                     u23340:
 54459   01ABE0  0E02               	movlw	2
 54460   01ABE2  600D               	cpfslt	___xxtofl@exp^(0+1280),c
 54461   01ABE4  EFF6  F0D5         	goto	u23351
 54462   01ABE8  EFF8  F0D5         	goto	u23350
 54463   01ABEC                     u23351:
 54464   01ABEC  EFE3  F0D5         	goto	l18127
 54465   01ABF0                     u23350:
 54466   01ABF0                     l3214:
 54467   01ABF0  B00D               	btfsc	___xxtofl@exp^(0+1280),0,c
 54468   01ABF2  EFFD  F0D5         	goto	u23361
 54469   01ABF6  EFFF  F0D5         	goto	u23360
 54470   01ABFA                     u23361:
 54471   01ABFA  EF00  F0D6         	goto	l18135
 54472   01ABFE                     u23360:
 54473   01ABFE  9E10               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 54474   01AC00                     l18135:
 54475   01AC00  90D8               	bcf	status,0,c
 54476   01AC02  320D               	rrcf	___xxtofl@exp^(0+1280),f,c
 54477   01AC04  C50D  F508         	movff	___xxtofl@exp,??___xxtofl
 54478   01AC08  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 54479   01AC0A  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 54480   01AC0C  6A0B               	clrf	(??___xxtofl+3)^(0+1280),c
 54481   01AC0E  C508  F50B         	movff	??___xxtofl,??___xxtofl+3
 54482   01AC12  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 54483   01AC14  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 54484   01AC16  6A08               	clrf	??___xxtofl^(0+1280),c
 54485   01AC18  5008               	movf	??___xxtofl^(0+1280),w,c
 54486   01AC1A  120E               	iorwf	___xxtofl@arg^(0+1280),f,c
 54487   01AC1C  5009               	movf	(??___xxtofl+1)^(0+1280),w,c
 54488   01AC1E  120F               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 54489   01AC20  500A               	movf	(??___xxtofl+2)^(0+1280),w,c
 54490   01AC22  1210               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 54491   01AC24  500B               	movf	(??___xxtofl+3)^(0+1280),w,c
 54492   01AC26  1211               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 54493   01AC28  500C               	movf	___xxtofl@sign^(0+1280),w,c
 54494   01AC2A  B4D8               	btfsc	status,2,c
 54495   01AC2C  EF1A  F0D6         	goto	u23371
 54496   01AC30  EF1C  F0D6         	goto	u23370
 54497   01AC34                     u23371:
 54498   01AC34  EF24  F0D6         	goto	l18145
 54499   01AC38                     u23370:
 54500   01AC38  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 54501   01AC3A  EF23  F0D6         	goto	u23380
 54502   01AC3E  EF21  F0D6         	goto	u23381
 54503   01AC42                     u23381:
 54504   01AC42  EF24  F0D6         	goto	l18145
 54505   01AC46                     u23380:
 54506   01AC46  8E11               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 54507   01AC48                     l18145:
 54508   01AC48  C50E  F504         	movff	___xxtofl@arg,?___xxtofl
 54509   01AC4C  C50F  F505         	movff	___xxtofl@arg+1,?___xxtofl+1
 54510   01AC50  C510  F506         	movff	___xxtofl@arg+2,?___xxtofl+2
 54511   01AC54  C511  F507         	movff	___xxtofl@arg+3,?___xxtofl+3
 54512   01AC58                     l3203:
 54513   01AC58  0012               	return		;funcret
 54514   01AC5A                     __end_of___xxtofl:
 54515                           	callstack 0
 54516                           
 54517 ;; *************** function _Default_ISR *****************
 54518 ;; Defined at:
 54519 ;;		line 81 in file "../src/boards/w65_cmn.c"
 54520 ;; Parameters:    Size  Location     Type
 54521 ;;		None
 54522 ;; Auto vars:     Size  Location     Type
 54523 ;;		None
 54524 ;; Return value:  Size  Location     Type
 54525 ;;                  1    wreg      void 
 54526 ;; Registers used:
 54527 ;;		None
 54528 ;; Tracked objects:
 54529 ;;		On entry : 0/0
 54530 ;;		On exit  : 0/0
 54531 ;;		Unchanged: 0/0
 54532 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54537 ;;Total ram usage:        0 bytes
 54538 ;; Hardware stack levels used: 1
 54539 ;; This function calls:
 54540 ;;		Nothing
 54541 ;; This function is called by:
 54542 ;;		Interrupt level 2
 54543 ;; This function uses a non-reentrant model
 54544 ;;
 54545                           
 54546                           	psect	text171
 54547   000288                     __ptext171:
 54548                           	callstack 0
 54549   000288                     _Default_ISR:
 54550                           	callstack 101
 54551   000288  0011               	retfie		f
 54552   00028A                     __end_of_Default_ISR:
 54553                           	callstack 0
 54554                           
 54555 ;; *************** function _TIMER0_ISR *****************
 54556 ;; Defined at:
 54557 ;;		line 86 in file "../src/boards/w65_cmn.c"
 54558 ;; Parameters:    Size  Location     Type
 54559 ;;		None
 54560 ;; Auto vars:     Size  Location     Type
 54561 ;;		None
 54562 ;; Return value:  Size  Location     Type
 54563 ;;                  1    wreg      void 
 54564 ;; Registers used:
 54565 ;;		status,2, status,0
 54566 ;; Tracked objects:
 54567 ;;		On entry : 0/0
 54568 ;;		On exit  : 0/0
 54569 ;;		Unchanged: 0/0
 54570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54575 ;;Total ram usage:        0 bytes
 54576 ;; Hardware stack levels used: 1
 54577 ;; This function calls:
 54578 ;;		Nothing
 54579 ;; This function is called by:
 54580 ;;		Interrupt level 2
 54581 ;; This function uses a non-reentrant model
 54582 ;;
 54583                           
 54584                           	psect	text172
 54585   000278                     __ptext172:
 54586                           	callstack 0
 54587   000278                     _TIMER0_ISR:
 54588                           	callstack 101
 54589   000278                     
 54590                           ;../src/boards/w65_cmn.c: 94:  irq_flg++;
 54591   000278  0107               	movlb	7	; () banked
 54592   00027A  2BCB               	incf	_irq_flg& (0+255),f,b
 54593   00027C                     
 54594                           ; BSR set to: 7
 54595                           ;../src/boards/w65_cmn.c: 96:  TMR0IF =0;
 54596   00027C  9EB1               	bcf	1201,7,c	;volatile
 54597   00027E                     
 54598                           ; BSR set to: 7
 54599   00027E  0011               	retfie		f
 54600   000280                     __end_of_TIMER0_ISR:
 54601                           	callstack 0
 54602                           
 54603 ;; *************** function _URT3Rx_ISR *****************
 54604 ;; Defined at:
 54605 ;;		line 103 in file "../src/boards/w65_cmn.c"
 54606 ;; Parameters:    Size  Location     Type
 54607 ;;		None
 54608 ;; Auto vars:     Size  Location     Type
 54609 ;;  rx_data         1    2[COMRAM] unsigned char 
 54610 ;; Return value:  Size  Location     Type
 54611 ;;                  1    wreg      void 
 54612 ;; Registers used:
 54613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54614 ;; Tracked objects:
 54615 ;;		On entry : 0/0
 54616 ;;		On exit  : 0/0
 54617 ;;		Unchanged: 0/0
 54618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54623 ;;Total ram usage:        3 bytes
 54624 ;; Hardware stack levels used: 1
 54625 ;; This function calls:
 54626 ;;		Nothing
 54627 ;; This function is called by:
 54628 ;;		Interrupt level 2
 54629 ;; This function uses a non-reentrant model
 54630 ;;
 54631                           
 54632                           	psect	text173
 54633   01F4D8                     __ptext173:
 54634                           	callstack 0
 54635   01F4D8                     _URT3Rx_ISR:
 54636                           	callstack 101
 54637   01F4D8                     
 54638                           ;../src/boards/w65_cmn.c: 105:  unsigned char rx_data;;../src/boards/w65_cmn.c: 107:  rx
      +                          _data = U3RXB;
 54639   01F4D8  C2C7 F503          	movff	711,URT3Rx_ISR@rx_data	;volatile
 54640   01F4DC                     
 54641                           ;../src/boards/w65_cmn.c: 109:  if ( rx_data == 0x11 && fh.nmi_sw ) {
 54642   01F4DC  0E11               	movlw	17
 54643   01F4DE  1803               	xorwf	URT3Rx_ISR@rx_data^(0+1280),w,c
 54644   01F4E0  A4D8               	btfss	status,2,c
 54645   01F4E2  EF75  F0FA         	goto	i2u2339_41
 54646   01F4E6  EF77  F0FA         	goto	i2u2339_40
 54647   01F4EA                     i2u2339_41:
 54648   01F4EA  EF85  F0FA         	goto	i2l18161
 54649   01F4EE                     i2u2339_40:
 54650   01F4EE  0108               	movlb	8	; () banked
 54651   01F4F0  51C0               	movf	(_fh+30)& (0+255),w,b
 54652   01F4F2  B4D8               	btfsc	status,2,c
 54653   01F4F4  EF7E  F0FA         	goto	i2u2340_41
 54654   01F4F8  EF80  F0FA         	goto	i2u2340_40
 54655   01F4FC                     i2u2340_41:
 54656   01F4FC  EF85  F0FA         	goto	i2l18161
 54657   01F500                     i2u2340_40:
 54658   01F500                     
 54659                           ; BSR set to: 8
 54660                           ;../src/boards/w65_cmn.c: 110:   nmi_sig = 1;
 54661   01F500  0E01               	movlw	1
 54662   01F502  0107               	movlb	7	; () banked
 54663   01F504  6FCD               	movwf	_nmi_sig& (0+255),b
 54664                           
 54665                           ;../src/boards/w65_cmn.c: 111:  }
 54666   01F506  EFA5  F0FA         	goto	i2l305
 54667   01F50A                     i2l18161:
 54668   01F50A  0107               	movlb	7	; () banked
 54669   01F50C  51C2               	movf	(_rx_cnt+1)& (0+255),w,b
 54670   01F50E  E107               	bnz	i2u2341_41
 54671   01F510  0E80               	movlw	128
 54672   01F512  5DC1               	subwf	_rx_cnt& (0+255),w,b
 54673   01F514  B0D8               	btfsc	status,0,c
 54674   01F516  EF8F  F0FA         	goto	i2u2341_41
 54675   01F51A  EF91  F0FA         	goto	i2u2341_40
 54676   01F51E                     i2u2341_41:
 54677   01F51E  EFA5  F0FA         	goto	i2l305
 54678   01F522                     i2u2341_40:
 54679   01F522                     
 54680                           ; BSR set to: 7
 54681                           ;../src/boards/w65_cmn.c: 113:   rx_buf[rx_wp] = rx_data;
 54682   01F522  0E00               	movlw	low _rx_buf
 54683   01F524  25C5               	addwf	_rx_wp& (0+255),w,b
 54684   01F526  6ED9               	movwf	fsr2l,c
 54685   01F528  0E0B               	movlw	high _rx_buf
 54686   01F52A  21C6               	addwfc	(_rx_wp+1)& (0+255),w,b
 54687   01F52C  6EDA               	movwf	fsr2h,c
 54688   01F52E  C503  F4DF         	movff	URT3Rx_ISR@rx_data,indf2
 54689   01F532                     
 54690                           ; BSR set to: 7
 54691                           ;../src/boards/w65_cmn.c: 114:   rx_wp = (rx_wp + 1) & (128 - 1);
 54692   01F532  0E01               	movlw	1
 54693   01F534  25C5               	addwf	_rx_wp& (0+255),w,b
 54694   01F536  6E01               	movwf	??_URT3Rx_ISR^(0+1280),c
 54695   01F538  0E00               	movlw	0
 54696   01F53A  21C6               	addwfc	(_rx_wp+1)& (0+255),w,b
 54697   01F53C  6E02               	movwf	(??_URT3Rx_ISR+1)^(0+1280),c
 54698   01F53E  0E7F               	movlw	127
 54699   01F540  1401               	andwf	??_URT3Rx_ISR^(0+1280),w,c
 54700   01F542  6FC5               	movwf	_rx_wp& (0+255),b
 54701   01F544  6BC6               	clrf	(_rx_wp+1)& (0+255),b
 54702   01F546                     
 54703                           ; BSR set to: 7
 54704                           ;../src/boards/w65_cmn.c: 115:   rx_cnt++;
 54705   01F546  4BC1               	infsnz	_rx_cnt& (0+255),f,b
 54706   01F548  2BC2               	incf	(_rx_cnt+1)& (0+255),f,b
 54707   01F54A                     i2l305:
 54708                           
 54709                           ; BSR set to: 7
 54710   01F54A  0011               	retfie		f
 54711   01F54C                     __end_of_URT3Rx_ISR:
 54712                           	callstack 0
 54713                           
 54714                           ;
 54715                           ; H/W Interrupt Vector Table @ 0x8
 54716                           ;
 54717                           
 54718                           	psect	ivt0x8
 54719   000008                     __pivt0x8:
 54720                           	callstack 0
 54721   000008                     ivt0x8_base:
 54722                           	callstack 0
 54723                           
 54724                           ; Vector 0 : SWINT
 54725   000008  00A2               	dw	_Default_ISR shr (0+2)
 54726                           
 54727                           ; Vector 1 : HLVD
 54728   00000A  00A2               	dw	_Default_ISR shr (0+2)
 54729                           
 54730                           ; Vector 2 : OSF
 54731   00000C  00A2               	dw	_Default_ISR shr (0+2)
 54732                           
 54733                           ; Vector 3 : CSW
 54734   00000E  00A2               	dw	_Default_ISR shr (0+2)
 54735                           
 54736                           ; Vector 4 : Undefined
 54737   000010  0040               	dw	ivt0x8_undefint shr (0+2)
 54738                           
 54739                           ; Vector 5 : CLC1
 54740   000012  00A2               	dw	_Default_ISR shr (0+2)
 54741                           
 54742                           ; Vector 6 : Undefined
 54743   000014  0040               	dw	ivt0x8_undefint shr (0+2)
 54744                           
 54745                           ; Vector 7 : IOC
 54746   000016  00A2               	dw	_Default_ISR shr (0+2)
 54747                           
 54748                           ; Vector 8 : INT0
 54749   000018  00A2               	dw	_Default_ISR shr (0+2)
 54750                           
 54751                           ; Vector 9 : ZCD
 54752   00001A  00A2               	dw	_Default_ISR shr (0+2)
 54753                           
 54754                           ; Vector 10 : AD
 54755   00001C  00A2               	dw	_Default_ISR shr (0+2)
 54756                           
 54757                           ; Vector 11 : ACT
 54758   00001E  00A2               	dw	_Default_ISR shr (0+2)
 54759                           
 54760                           ; Vector 12 : CMP1
 54761   000020  00A2               	dw	_Default_ISR shr (0+2)
 54762                           
 54763                           ; Vector 13 : SMT1
 54764   000022  00A2               	dw	_Default_ISR shr (0+2)
 54765                           
 54766                           ; Vector 14 : SMT1PRA
 54767   000024  00A2               	dw	_Default_ISR shr (0+2)
 54768                           
 54769                           ; Vector 15 : SMT1PRW
 54770   000026  00A2               	dw	_Default_ISR shr (0+2)
 54771                           
 54772                           ; Vector 16 : ADT
 54773   000028  00A2               	dw	_Default_ISR shr (0+2)
 54774                           
 54775                           ; Vector 17 : Undefined
 54776   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
 54777                           
 54778                           ; Vector 18 : Undefined
 54779   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
 54780                           
 54781                           ; Vector 19 : Undefined
 54782   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
 54783                           
 54784                           ; Vector 20 : DMA1SCNT
 54785   000030  00A2               	dw	_Default_ISR shr (0+2)
 54786                           
 54787                           ; Vector 21 : DMA1DCNT
 54788   000032  00A2               	dw	_Default_ISR shr (0+2)
 54789                           
 54790                           ; Vector 22 : DMA1OR
 54791   000034  00A2               	dw	_Default_ISR shr (0+2)
 54792                           
 54793                           ; Vector 23 : DMA1A
 54794   000036  00A2               	dw	_Default_ISR shr (0+2)
 54795                           
 54796                           ; Vector 24 : SPI1RX
 54797   000038  00A2               	dw	_Default_ISR shr (0+2)
 54798                           
 54799                           ; Vector 25 : SPI1TX
 54800   00003A  00A2               	dw	_Default_ISR shr (0+2)
 54801                           
 54802                           ; Vector 26 : SPI1
 54803   00003C  00A2               	dw	_Default_ISR shr (0+2)
 54804                           
 54805                           ; Vector 27 : TMR2
 54806   00003E  00A2               	dw	_Default_ISR shr (0+2)
 54807                           
 54808                           ; Vector 28 : TMR1
 54809   000040  00A2               	dw	_Default_ISR shr (0+2)
 54810                           
 54811                           ; Vector 29 : TMR1G
 54812   000042  00A2               	dw	_Default_ISR shr (0+2)
 54813                           
 54814                           ; Vector 30 : CCP1
 54815   000044  00A2               	dw	_Default_ISR shr (0+2)
 54816                           
 54817                           ; Vector 31 : TMR0
 54818   000046  009E               	dw	_TIMER0_ISR shr (0+2)
 54819                           
 54820                           ; Vector 32 : U1RX
 54821   000048  00A2               	dw	_Default_ISR shr (0+2)
 54822                           
 54823                           ; Vector 33 : U1TX
 54824   00004A  00A2               	dw	_Default_ISR shr (0+2)
 54825                           
 54826                           ; Vector 34 : U1E
 54827   00004C  00A2               	dw	_Default_ISR shr (0+2)
 54828                           
 54829                           ; Vector 35 : U1
 54830   00004E  00A2               	dw	_Default_ISR shr (0+2)
 54831                           
 54832                           ; Vector 36 : Undefined
 54833   000050  0040               	dw	ivt0x8_undefint shr (0+2)
 54834                           
 54835                           ; Vector 37 : Undefined
 54836   000052  0040               	dw	ivt0x8_undefint shr (0+2)
 54837                           
 54838                           ; Vector 38 : PWM1PR
 54839   000054  00A2               	dw	_Default_ISR shr (0+2)
 54840                           
 54841                           ; Vector 39 : PWM1
 54842   000056  00A2               	dw	_Default_ISR shr (0+2)
 54843                           
 54844                           ; Vector 40 : SPI2RX
 54845   000058  00A2               	dw	_Default_ISR shr (0+2)
 54846                           
 54847                           ; Vector 41 : SPI2TX
 54848   00005A  00A2               	dw	_Default_ISR shr (0+2)
 54849                           
 54850                           ; Vector 42 : SPI2
 54851   00005C  00A2               	dw	_Default_ISR shr (0+2)
 54852                           
 54853                           ; Vector 43 : Undefined
 54854   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
 54855                           
 54856                           ; Vector 44 : TMR3
 54857   000060  00A2               	dw	_Default_ISR shr (0+2)
 54858                           
 54859                           ; Vector 45 : TMR3G
 54860   000062  00A2               	dw	_Default_ISR shr (0+2)
 54861                           
 54862                           ; Vector 46 : PWM2PR
 54863   000064  00A2               	dw	_Default_ISR shr (0+2)
 54864                           
 54865                           ; Vector 47 : PWM2
 54866   000066  00A2               	dw	_Default_ISR shr (0+2)
 54867                           
 54868                           ; Vector 48 : INT1
 54869   000068  00A2               	dw	_Default_ISR shr (0+2)
 54870                           
 54871                           ; Vector 49 : CLC2
 54872   00006A  00A2               	dw	_Default_ISR shr (0+2)
 54873                           
 54874                           ; Vector 50 : CWG1
 54875   00006C  00A2               	dw	_Default_ISR shr (0+2)
 54876                           
 54877                           ; Vector 51 : NCO1
 54878   00006E  00A2               	dw	_Default_ISR shr (0+2)
 54879                           
 54880                           ; Vector 52 : DMA2SCNT
 54881   000070  00A2               	dw	_Default_ISR shr (0+2)
 54882                           
 54883                           ; Vector 53 : DMA2DCNT
 54884   000072  00A2               	dw	_Default_ISR shr (0+2)
 54885                           
 54886                           ; Vector 54 : DMA2OR
 54887   000074  00A2               	dw	_Default_ISR shr (0+2)
 54888                           
 54889                           ; Vector 55 : DMA2A
 54890   000076  00A2               	dw	_Default_ISR shr (0+2)
 54891                           
 54892                           ; Vector 56 : I2C1RX
 54893   000078  00A2               	dw	_Default_ISR shr (0+2)
 54894                           
 54895                           ; Vector 57 : I2C1TX
 54896   00007A  00A2               	dw	_Default_ISR shr (0+2)
 54897                           
 54898                           ; Vector 58 : I2C1
 54899   00007C  00A2               	dw	_Default_ISR shr (0+2)
 54900                           
 54901                           ; Vector 59 : I2C1E
 54902   00007E  00A2               	dw	_Default_ISR shr (0+2)
 54903                           
 54904                           ; Vector 60 : Undefined
 54905   000080  0040               	dw	ivt0x8_undefint shr (0+2)
 54906                           
 54907                           ; Vector 61 : CLC3
 54908   000082  00A2               	dw	_Default_ISR shr (0+2)
 54909                           
 54910                           ; Vector 62 : PWM3PR
 54911   000084  00A2               	dw	_Default_ISR shr (0+2)
 54912                           
 54913                           ; Vector 63 : PWM3
 54914   000086  00A2               	dw	_Default_ISR shr (0+2)
 54915                           
 54916                           ; Vector 64 : U2RX
 54917   000088  00A2               	dw	_Default_ISR shr (0+2)
 54918                           
 54919                           ; Vector 65 : U2TX
 54920   00008A  00A2               	dw	_Default_ISR shr (0+2)
 54921                           
 54922                           ; Vector 66 : U2E
 54923   00008C  00A2               	dw	_Default_ISR shr (0+2)
 54924                           
 54925                           ; Vector 67 : U2
 54926   00008E  00A2               	dw	_Default_ISR shr (0+2)
 54927                           
 54928                           ; Vector 68 : TMR5
 54929   000090  00A2               	dw	_Default_ISR shr (0+2)
 54930                           
 54931                           ; Vector 69 : TMR5G
 54932   000092  00A2               	dw	_Default_ISR shr (0+2)
 54933                           
 54934                           ; Vector 70 : CCP2
 54935   000094  00A2               	dw	_Default_ISR shr (0+2)
 54936                           
 54937                           ; Vector 71 : SCAN
 54938   000096  00A2               	dw	_Default_ISR shr (0+2)
 54939                           
 54940                           ; Vector 72 : U3RX
 54941   000098  7D36               	dw	_URT3Rx_ISR shr (0+2)
 54942                           
 54943                           ; Vector 73 : U3TX
 54944   00009A  00A2               	dw	_Default_ISR shr (0+2)
 54945                           
 54946                           ; Vector 74 : U3E
 54947   00009C  00A2               	dw	_Default_ISR shr (0+2)
 54948                           
 54949                           ; Vector 75 : U3
 54950   00009E  00A2               	dw	_Default_ISR shr (0+2)
 54951                           
 54952                           ; Vector 76 : Undefined
 54953   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
 54954                           
 54955                           ; Vector 77 : CLC4
 54956   0000A2  00A2               	dw	_Default_ISR shr (0+2)
 54957                           
 54958                           ; Vector 78 : Undefined
 54959   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
 54960                           
 54961                           ; Vector 79 : Undefined
 54962   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
 54963                           
 54964                           ; Vector 80 : INT2
 54965   0000A8  00A2               	dw	_Default_ISR shr (0+2)
 54966                           
 54967                           ; Vector 81 : CLC5
 54968   0000AA  00A2               	dw	_Default_ISR shr (0+2)
 54969                           
 54970                           ; Vector 82 : CWG2
 54971   0000AC  00A2               	dw	_Default_ISR shr (0+2)
 54972                           
 54973                           ; Vector 83 : NCO2
 54974   0000AE  00A2               	dw	_Default_ISR shr (0+2)
 54975                           
 54976                           ; Vector 84 : DMA3SCNT
 54977   0000B0  00A2               	dw	_Default_ISR shr (0+2)
 54978                           
 54979                           ; Vector 85 : DMA3DCNT
 54980   0000B2  00A2               	dw	_Default_ISR shr (0+2)
 54981                           
 54982                           ; Vector 86 : DMA3OR
 54983   0000B4  00A2               	dw	_Default_ISR shr (0+2)
 54984                           
 54985                           ; Vector 87 : DMA3A
 54986   0000B6  00A2               	dw	_Default_ISR shr (0+2)
 54987                           
 54988                           ; Vector 88 : CCP3
 54989   0000B8  00A2               	dw	_Default_ISR shr (0+2)
 54990                           
 54991                           ; Vector 89 : CLC6
 54992   0000BA  00A2               	dw	_Default_ISR shr (0+2)
 54993                           
 54994                           ; Vector 90 : CWG3
 54995   0000BC  00A2               	dw	_Default_ISR shr (0+2)
 54996                           
 54997                           ; Vector 91 : TMR4
 54998   0000BE  00A2               	dw	_Default_ISR shr (0+2)
 54999                           
 55000                           ; Vector 92 : DMA4SCNT
 55001   0000C0  00A2               	dw	_Default_ISR shr (0+2)
 55002                           
 55003                           ; Vector 93 : DMA4DCNT
 55004   0000C2  00A2               	dw	_Default_ISR shr (0+2)
 55005                           
 55006                           ; Vector 94 : DMA4OR
 55007   0000C4  00A2               	dw	_Default_ISR shr (0+2)
 55008                           
 55009                           ; Vector 95 : DMA4A
 55010   0000C6  00A2               	dw	_Default_ISR shr (0+2)
 55011                           
 55012                           ; Vector 96 : U4RX
 55013   0000C8  00A2               	dw	_Default_ISR shr (0+2)
 55014                           
 55015                           ; Vector 97 : U4TX
 55016   0000CA  00A2               	dw	_Default_ISR shr (0+2)
 55017                           
 55018                           ; Vector 98 : U4E
 55019   0000CC  00A2               	dw	_Default_ISR shr (0+2)
 55020                           
 55021                           ; Vector 99 : U4
 55022   0000CE  00A2               	dw	_Default_ISR shr (0+2)
 55023                           
 55024                           ; Vector 100 : DMA5SCNT
 55025   0000D0  00A2               	dw	_Default_ISR shr (0+2)
 55026                           
 55027                           ; Vector 101 : DMA5DCNT
 55028   0000D2  00A2               	dw	_Default_ISR shr (0+2)
 55029                           
 55030                           ; Vector 102 : DMA5OR
 55031   0000D4  00A2               	dw	_Default_ISR shr (0+2)
 55032                           
 55033                           ; Vector 103 : DMA5A
 55034   0000D6  00A2               	dw	_Default_ISR shr (0+2)
 55035                           
 55036                           ; Vector 104 : U5RX
 55037   0000D8  00A2               	dw	_Default_ISR shr (0+2)
 55038                           
 55039                           ; Vector 105 : U5TX
 55040   0000DA  00A2               	dw	_Default_ISR shr (0+2)
 55041                           
 55042                           ; Vector 106 : U5E
 55043   0000DC  00A2               	dw	_Default_ISR shr (0+2)
 55044                           
 55045                           ; Vector 107 : U5
 55046   0000DE  00A2               	dw	_Default_ISR shr (0+2)
 55047                           
 55048                           ; Vector 108 : DMA6SCNT
 55049   0000E0  00A2               	dw	_Default_ISR shr (0+2)
 55050                           
 55051                           ; Vector 109 : DMA6DCNT
 55052   0000E2  00A2               	dw	_Default_ISR shr (0+2)
 55053                           
 55054                           ; Vector 110 : DMA6OR
 55055   0000E4  00A2               	dw	_Default_ISR shr (0+2)
 55056                           
 55057                           ; Vector 111 : DMA6A
 55058   0000E6  00A2               	dw	_Default_ISR shr (0+2)
 55059                           
 55060                           ; Vector 112 : Undefined
 55061   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
 55062                           
 55063                           ; Vector 113 : CLC7
 55064   0000EA  00A2               	dw	_Default_ISR shr (0+2)
 55065                           
 55066                           ; Vector 114 : CMP2
 55067   0000EC  00A2               	dw	_Default_ISR shr (0+2)
 55068                           
 55069                           ; Vector 115 : NCO3
 55070   0000EE  00A2               	dw	_Default_ISR shr (0+2)
 55071                           
 55072                           ; Vector 116 : Undefined
 55073   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
 55074                           
 55075                           ; Vector 117 : Undefined
 55076   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
 55077                           
 55078                           ; Vector 118 : Undefined
 55079   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
 55080                           
 55081                           ; Vector 119 : Undefined
 55082   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
 55083                           
 55084                           ; Vector 120 : NVM
 55085   0000F8  00A2               	dw	_Default_ISR shr (0+2)
 55086                           
 55087                           ; Vector 121 : CLC8
 55088   0000FA  00A2               	dw	_Default_ISR shr (0+2)
 55089                           
 55090                           ; Vector 122 : CRC
 55091   0000FC  00A2               	dw	_Default_ISR shr (0+2)
 55092                           
 55093                           ; Vector 123 : TMR6
 55094   0000FE  00A2               	dw	_Default_ISR shr (0+2)
 55095   000100                     ivt0x8_undefint:
 55096                           	callstack 0
 55097   000100  00FF               	reset	
 55098                           
 55099                           	psect	rparam
 55100   000001                     ___rparam_used  equ	1
 55101   000000                     ___param_bank   equ	0
 55102   000000                     __Lparam        equ	__Lrparam
 55103   000000                     __Hparam        equ	__Hrparam
 55104                           
 55105                           	psect	config
 55106                           
 55107                           ;Config register CONFIG1 @ 0x300000
 55108                           ;	External Oscillator Selection
 55109                           ;	FEXTOSC = OFF, Oscillator not enabled
 55110                           ;	Reset Oscillator Selection
 55111                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 55112   300000                     	org	3145728
 55113   300000  8C                 	db	140
 55114                           
 55115                           ;Config register CONFIG2 @ 0x300001
 55116                           ;	Clock out Enable bit
 55117                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 55118                           ;	PRLOCKED One-Way Set Enable bit
 55119                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 55120                           ;	Clock Switch Enable bit
 55121                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 55122                           ;	Fail-Safe Clock Monitor Enable bit
 55123                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 55124   300001                     	org	3145729
 55125   300001  FF                 	db	255
 55126                           
 55127                           ;Config register CONFIG3 @ 0x300002
 55128                           ;	MCLR Enable bit
 55129                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 55130                           ;	Power-up timer selection bits
 55131                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 55132                           ;	Multi-vector enable bit
 55133                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 55134                           ;	IVTLOCK bit One-way set enable bit
 55135                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 55136                           ;	Low Power BOR Enable bit
 55137                           ;	LPBOREN = OFF, Low-Power BOR disabled
 55138                           ;	Brown-out Reset Enable bits
 55139                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 55140   300002                     	org	3145730
 55141   300002  FF                 	db	255
 55142                           
 55143                           ;Config register CONFIG4 @ 0x300003
 55144                           ;	Brown-out Reset Voltage Selection bits
 55145                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 55146                           ;	ZCD Disable bit
 55147                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 55148                           ;	PPSLOCK bit One-Way Set Enable bit
 55149                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
 55150                           ;	Stack Full/Underflow Reset Enable bit
 55151                           ;	STVREN = ON, Stack full/underflow will cause Reset
 55152                           ;	Low Voltage Programming Enable bit
 55153                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 55154                           ;	Extended Instruction Set Enable bit
 55155                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 55156   300003                     	org	3145731
 55157   300003  F7                 	db	247
 55158                           
 55159                           ;Config register CONFIG5 @ 0x300004
 55160                           ;	WDT Period selection bits
 55161                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 55162                           ;	WDT operating mode
 55163                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 55164   300004                     	org	3145732
 55165   300004  9F                 	db	159
 55166                           
 55167                           ;Config register CONFIG6 @ 0x300005
 55168                           ;	WDT Window Select bits
 55169                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 55170                           ;	WDT input clock selector
 55171                           ;	WDTCCS = SC, Software Control
 55172   300005                     	org	3145733
 55173   300005  FF                 	db	255
 55174                           
 55175                           ;Config register CONFIG7 @ 0x300006
 55176                           ;	Boot Block Size selection bits
 55177                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 55178                           ;	Boot Block enable bit
 55179                           ;	BBEN = OFF, Boot block disabled
 55180                           ;	Storage Area Flash enable bit
 55181                           ;	SAFEN = OFF, SAF disabled
 55182                           ;	Background Debugger
 55183                           ;	DEBUG = OFF, Background Debugger disabled
 55184   300006                     	org	3145734
 55185   300006  FF                 	db	255
 55186                           
 55187                           ;Config register CONFIG8 @ 0x300007
 55188                           ;	Boot Block Write Protection bit
 55189                           ;	WRTB = OFF, Boot Block not Write protected
 55190                           ;	Configuration Register Write Protection bit
 55191                           ;	WRTC = OFF, Configuration registers not Write protected
 55192                           ;	Data EEPROM Write Protection bit
 55193                           ;	WRTD = OFF, Data EEPROM not Write protected
 55194                           ;	SAF Write protection bit
 55195                           ;	WRTSAF = OFF, SAF not Write Protected
 55196                           ;	Application Block write protection bit
 55197                           ;	WRTAPP = OFF, Application Block not write protected
 55198   300007                     	org	3145735
 55199   300007  FF                 	db	255
 55200                           
 55201                           ;Config register CONFIG10 @ 0x300009
 55202                           ;	PFM and Data EEPROM Code Protection bit
 55203                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 55204   300009                     	org	3145737
 55205   300009  FF                 	db	255
 55206                           tosu	equ	0x4FF
 55207                           tosh	equ	0x4FE
 55208                           tosl	equ	0x4FD
 55209                           stkptr	equ	0x4FC
 55210                           pclatu	equ	0x4FB
 55211                           pclath	equ	0x4FA
 55212                           pcl	equ	0x4F9
 55213                           tblptru	equ	0x4F8
 55214                           tblptrh	equ	0x4F7
 55215                           tblptrl	equ	0x4F6
 55216                           tablat	equ	0x4F5
 55217                           prodh	equ	0x4F4
 55218                           prodl	equ	0x4F3
 55219                           indf0	equ	0x4EF
 55220                           postinc0	equ	0x4EE
 55221                           postdec0	equ	0x4ED
 55222                           preinc0	equ	0x4EC
 55223                           plusw0	equ	0x4EB
 55224                           fsr0h	equ	0x4EA
 55225                           fsr0l	equ	0x4E9
 55226                           wreg	equ	0x4E8
 55227                           indf1	equ	0x4E7
 55228                           postinc1	equ	0x4E6
 55229                           postdec1	equ	0x4E5
 55230                           preinc1	equ	0x4E4
 55231                           plusw1	equ	0x4E3
 55232                           fsr1h	equ	0x4E2
 55233                           fsr1l	equ	0x4E1
 55234                           bsr	equ	0x4E0
 55235                           indf2	equ	0x4DF
 55236                           postinc2	equ	0x4DE
 55237                           postdec2	equ	0x4DD
 55238                           preinc2	equ	0x4DC
 55239                           plusw2	equ	0x4DB
 55240                           fsr2h	equ	0x4DA
 55241                           fsr2l	equ	0x4D9
 55242                           status	equ	0x4D8

Data Sizes:
    Strings     3551
    Constant    30
    Data        177
    BSS         3343
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160    160     160
    BANK6           256    256     256
    BANK7           256    158     256
    BANK8           256      0     223
    BANK9           256      0     179
    BANK10          256      0     209
    BANK11          256      0     128
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    acquire_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    acquire_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    arg	PTR unsigned char [5] size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    board_name	PTR unsigned char  size(2) Largest target is 43
		 -> STR_47(CODE[43]), 

    bus_master_operation@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    check_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    cmd$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    cmd$func	PTR FTN()enum E17409 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    conf02	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_48(CODE[11]), 

    conf16	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_49(CODE[11]), 

    cpm_drives$filep	PTR struct . size(2) Largest target is 0

    create_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), pb$fp(COMRAM[2]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK6[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    ctx_$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    del_space@bytes	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    dir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_read@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), fs(BIGRAM[564]), 
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_closedir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@buff	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_getcwd@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@tp	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_gets@buff	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_gets@fp	PTR struct . size(2) Largest target is 548
		 -> rom_fl(BIGRAM[546]), 

    f_gets@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 0

    f_lseek@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mkdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_opendir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_opendir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> f_gets@rc(BANK6[2]), fin_cnt(BANK7[2]), load_program@br(BANK7[2]), read_sector@n(BANK6[2]), 
		 -> see_file@br(BANK7[2]), 

    f_read@buff	PTR void  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_read@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_readdir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_readdir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    f_readdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djn$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djo$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_stat@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@sdj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), write_sector@n(BANK6[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 2
		 -> pb$fp(COMRAM[2]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    FatFs	PTR struct .[1] size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    fsdir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    fsdir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_char	PTR FTN()int [2] size(3) Largest target is 2
		 -> in_file(), u_getch(), 

    get_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_getfree@obj(COMRAM[14]), f_mkdir@dj(COMRAM[40]), 
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), in_fl(BIGRAM[546]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_stat@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fileinfo@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> f_getcwd@fno(BANK7[22]), scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    get_hex@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_chdrive@path(COMRAM[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), 
		 -> f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_mount@rp(BANK6[2]), f_open@path(BANK6[2]), 
		 -> f_opendir@path(BANK6[2]), f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), f_stat@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_line@s	PTR unsigned char  size(2) Largest target is 81
		 -> line_buf(BANK10[81]), 

    get_str@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    in_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    load_config@a	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@conf	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_48(CODE[11]), STR_49(CODE[11]), 

    load_config@str	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_file@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@fname	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_program@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    main@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    main@res	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mem_dump@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_169(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcmp@vl	PTR const void  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_169(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    mezID	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_46(CODE[8]), 

    mon02	PTR unsigned char  size(2) Largest target is 11
		 -> STR_50(CODE[11]), 

    mon16	PTR unsigned char  size(2) Largest target is 11
		 -> STR_51(CODE[11]), 

    mon_prog@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mount_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    mount_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_mount@path(BANK6[2]), f_open@path(BANK6[2]), f_opendir@path(BANK6[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    mount_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> dj$obj(COMRAM[15]), dj$obj$fs(COMRAM[2]), f_chdir@fs(BANK6[2]), f_getcwd@fs(BANK7[2]), 
		 -> f_getfree@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_mount@fs(BANK6[2]), f_open@dj(BANK6[40]), 
		 -> f_open@fs(BANK6[2]), f_opendir@fs(BANK6[2]), f_rename@fs(COMRAM[2]), f_unlink@fs(COMRAM[2]), 

    move_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    print_reg@reg_02	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    print_reg@reg_816	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_108(CODE[22]), STR_109(CODE[34]), STR_11(CODE[25]), 
		 -> STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), STR_113(CODE[56]), 
		 -> STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), STR_117(CODE[41]), 
		 -> STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), STR_120(CODE[11]), 
		 -> STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), STR_124(CODE[19]), 
		 -> STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), STR_131(CODE[3]), 
		 -> STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), STR_136(CODE[29]), 
		 -> STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), STR_14(CODE[25]), 
		 -> STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), STR_143(CODE[17]), 
		 -> STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), STR_147(CODE[16]), 
		 -> STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), STR_150(CODE[19]), 
		 -> STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), STR_154(CODE[22]), 
		 -> STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), STR_158(CODE[38]), 
		 -> STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), STR_161(CODE[27]), 
		 -> STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), STR_165(CODE[19]), 
		 -> STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), STR_176(CODE[39]), 
		 -> STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), STR_180(CODE[21]), 
		 -> STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), STR_184(CODE[44]), 
		 -> STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), STR_19(CODE[43]), 
		 -> STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), STR_193(CODE[6]), 
		 -> STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), STR_197(CODE[6]), 
		 -> STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), STR_21(CODE[41]), 
		 -> STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), STR_25(CODE[50]), 
		 -> STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), STR_30(CODE[50]), 
		 -> STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), STR_34(CODE[22]), 
		 -> STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), STR_4(CODE[21]), 
		 -> STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), STR_45(CODE[35]), 
		 -> STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), STR_70(CODE[23]), 
		 -> STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), STR_74(CODE[5]), 
		 -> STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), STR_78(CODE[19]), 
		 -> STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), STR_82(CODE[39]), 
		 -> STR_83(CODE[19]), STR_85(CODE[27]), STR_86(CODE[12]), STR_87(CODE[25]), 
		 -> STR_88(CODE[23]), STR_89(CODE[14]), STR_90(CODE[19]), STR_91(CODE[3]), 
		 -> STR_92(CODE[9]), STR_93(CODE[10]), STR_94(CODE[12]), STR_95(CODE[15]), 
		 -> STR_96(CODE[20]), STR_97(CODE[20]), STR_98(CODE[9]), STR_99(CODE[10]), 

    put_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    read_sector@filep	PTR struct . size(2) Largest target is 0

    read_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> disk_buf(BANK10[128]), req_tbl(BANK7[13]), tmp_buf(BIGRAM[512]), 

    release_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    release_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_unlink@dj(COMRAM[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S1111$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S1134$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_52(CODE[8]), STR_53(CODE[8]), 

    S1134$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    S1159$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    S1159$func	PTR FTN()enum E17409 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    S1984$fp	PTR struct . size(2) Largest target is 0

    S375SDCard$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    S4628$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    S4628$source	PTR const unsigned char  size(2) Largest target is 0

    S739$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S746$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S756$filep	PTR struct . size(2) Largest target is 0

    scan_files1@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files1@fn	PTR unsigned char  size(2) Largest target is 22
		 -> fno$fname(COMRAM[13]), scan_files@fno(BANK7[22]), 

    scan_files1@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files1@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    scan_files@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files@fn	PTR unsigned char  size(2) Largest target is 22
		 -> fno$fname(COMRAM[13]), scan_files@fno(BANK7[22]), 

    scan_files@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SDCard_command@response_buffer	PTR void  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@responsep	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_command_r1@r1	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 

    __SDCard_command_r1@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_crc16@buf	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@endp	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_crc@buf	PTR const void  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@endp	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@p	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_end_transaction@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_init@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_read512@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_read512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_wait_response@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_write512@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_write512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    sdj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    see_file@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    see_file@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    seek_disk@filep	PTR struct . size(2) Largest target is 0

    seek_disk@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    set_arg@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sobj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sp__f_gets	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SPI_SD_begin@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_ctx	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), 

    SPI_SD_dummy_clocks@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_end_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive_byte@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_select@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_send@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@p	PTR unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_107(CODE[3]), STR_81(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), fno$fname(COMRAM[13]), 
		 -> fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), 
		 -> fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), line_buf(BANK10[81]), 
		 -> pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), rom_fl(BIGRAM[546]), 
		 -> rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), rom_fl$sect(BIGRAM[4]), 
		 -> scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), STR_132(CODE[5]), 
		 -> STR_167(CODE[15]), STR_178(CODE[1]), STR_186(CODE[6]), STR_189(CODE[6]), 
		 -> STR_199(CODE[1]), STR_206(CODE[7]), STR_26(CODE[5]), STR_29(CODE[5]), 
		 -> STR_35(CODE[6]), STR_39(CODE[6]), STR_42(CODE[5]), STR_43(CODE[5]), 
		 -> STR_47(CODE[43]), STR_48(CODE[11]), STR_49(CODE[11]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_7(CODE[17]), 
		 -> STR_9(CODE[17]), tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), tmp_buf$direct_page(UNKNOWN), 
		 -> tmp_buf$load_p(UNKNOWN), tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), tmp_buf$op2(UNKNOWN), 
		 -> tmp_buf$picif_p(UNKNOWN), tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), tmp_buf$REGDP(UNKNOWN), 
		 -> tmp_buf$REGPB(UNKNOWN), tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), tmp_buf$REGSP(UNKNOWN), 
		 -> tmp_buf$REGX(UNKNOWN), tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), util_addrdump@chars(BANK5[17]), 
		 -> util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), fno$fname(COMRAM[13]), 
		 -> fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), 
		 -> fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), line_buf(BANK10[81]), 
		 -> pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), rom_fl(BIGRAM[546]), 
		 -> rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), rom_fl$sect(BIGRAM[4]), 
		 -> scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), STR_132(CODE[5]), 
		 -> STR_167(CODE[15]), STR_178(CODE[1]), STR_186(CODE[6]), STR_189(CODE[6]), 
		 -> STR_199(CODE[1]), STR_26(CODE[5]), STR_29(CODE[5]), STR_35(CODE[6]), 
		 -> STR_39(CODE[6]), STR_42(CODE[5]), STR_43(CODE[5]), STR_47(CODE[43]), 
		 -> STR_48(CODE[11]), STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> STR_52(CODE[8]), STR_53(CODE[8]), STR_7(CODE[17]), STR_9(CODE[17]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), tmp_buf$direct_page(UNKNOWN), tmp_buf$load_p(UNKNOWN), 
		 -> tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), tmp_buf$op2(UNKNOWN), tmp_buf$picif_p(UNKNOWN), 
		 -> tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), tmp_buf$REGDP(UNKNOWN), tmp_buf$REGPB(UNKNOWN), 
		 -> tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), tmp_buf$REGSP(UNKNOWN), tmp_buf$REGX(UNKNOWN), 
		 -> tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), 
		 -> NULL(NULL[0]), 

    str_inf@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_200(CODE[4]), STR_203(CODE[4]), 

    strin_func	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned int [2] size(3) Largest target is 2
		 -> get_str(), str_inf(), 

    strin_func$0	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), 
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), 
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_54(CODE[3]), 
		 -> STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), STR_58(CODE[7]), 
		 -> STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), STR_62(CODE[8]), 
		 -> STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), STR_66(CODE[5]), 
		 -> STR_67(CODE[2]), STR_68(CODE[1]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_54(CODE[3]), 
		 -> STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), STR_58(CODE[7]), 
		 -> STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), STR_62(CODE[8]), 
		 -> STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), STR_66(CODE[5]), 
		 -> STR_67(CODE[2]), STR_68(CODE[1]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> load_config@a(BANK7[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    t_conf$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_52(CODE[8]), STR_53(CODE[8]), 

    t_conf$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    unimon_console@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    util_addrdump@addr	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@buf	PTR const unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_132(CODE[5]), STR_186(CODE[6]), STR_189(CODE[6]), STR_26(CODE[5]), 
		 -> STR_29(CODE[5]), STR_42(CODE[5]), STR_43(CODE[5]), 

    util_hexdump@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@buf	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_178(CODE[1]), STR_35(CODE[6]), STR_39(CODE[6]), 

    util_hexdump_sum@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    util_hexdump_sum@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_35(CODE[6]), STR_39(CODE[6]), 

    util_hexdump_sum@p	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    validate$2890	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK6[2]), f_closedir@fs(BANK5[2]), f_lseek@fs(BANK6[2]), f_read@fs(BANK6[2]), 
		 -> f_readdir@fs(BANK6[2]), f_sync@fs(BANK6[2]), f_truncate@fs(COMRAM[2]), f_write@fs(BANK6[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    write_sector@filep	PTR struct . size(2) Largest target is 0

    write_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> binv(BANK8[42]), cpu_flg(BANK7[1]), disk_buf(BANK10[128]), fh(BANK8[32]), 
		 -> mon_prog@sw(BANK7[1]), req_tbl(BANK7[13]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _SDCard_command->___SDCard_command_r1
    _get_fileinfo->_ld_dword
    ___strtoxl->___lmul
    _strstr->_strncmp
    _ld_clust->_ld_word
    _create_name->_memset
    _st_clust->_st_word
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___almod
    ___SDCard_command_r1->___SDCard_wait_response
    ___SDCard_wait_response->_SPI_SD_receive_byte
    _SPI_SD_receive_byte->_SPI_SD_receive
    _SPI_SD_begin_transaction->_SPI_SD_select
    _SPI_SD_begin_transaction->_acquire_bus
    _SDCard_end_transaction->_SPI_SD_dummy_clocks
    _SPI_SD_end_transaction->_SPI_SD_select
    _SPI_SD_end_transaction->_release_bus
    _SPI_SD_dummy_clocks->_SPI_SD_send
    _clst2sect->___lmul

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    None.

Critical Paths under _URT3Rx_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _wait_for_programmer->_printf
    _setup_sd->_SDCard_init
    _SDCard_init->_SPI_SD_configure
    _SPI_SD_configure->_printf
    _setup_monitor->_load_program
    _f_getcwd->_move_window
    _dir_read->_move_window
    _f_closedir->_validate
    _reset_cpu->_printf
    _print_reg->_printf
    _print_com->_printf
    _mem_init->_util_addrdump
    _mem_dump->_util_addrdump
    _load_file->_load_program
    _load_config->_f_gets
    _get_line->_printf
    _flash_apl->_printf
    _boot_file->_load_program
    _prt_reload->_printf
    _sprintf->_vfprintf
    _bus_master_operation->_in_file
    _bus_master_operation->_u_getch
    _unimon_console->_in_file
    _unimon_console->_u_getch
    _f_open->_move_window
    _mount_volume->_disk_initialize
    _mount_volume->_move_window
    _check_fs->_move_window
    _disk_initialize->_SDCard_read512
    _dir_find->_move_window
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_next->_dir_clear
    _dir_clear->_sync_window
    _f_sync->_move_window
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _util_hexdump_sum->_util_hexdump
    _util_hexdump->_printf
    _put_fat->_move_window
    _validate->_disk_status
    _disk_status->_printf
    _get_fat->_move_window
    _move_window->_disk_read
    _sync_window->_disk_write
    _disk_write->_SDCard_write512
    _SDCard_write512->_util_addrdump
    _disk_read->_SDCard_read512
    _SDCard_read512->_util_addrdump
    _util_addrdump->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _URT3Rx_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _wstart_prog->_drive_cpu
    _setup_monitor->_drive_cpu
    _see_file->_f_open
    _scan_files1->_f_open
    _scan_files->_f_open
    _f_readdir->_dir_read
    _f_opendir->_mount_volume
    _f_getcwd->_mount_volume
    _dir_read->_dir_next
    _return_cpu->_drive_cpu
    _restart_prog->_drive_cpu
    _mon_prog->_drive_cpu
    _load_config->_f_open
    _f_gets->_f_read
    _disk_init->_f_mount
    _f_mount->_mount_volume
    _change_directory->_f_chdir
    _f_chdir->_mount_volume
    _boot_file->_drive_cpu
    _load_program->_f_open
    _write_sector->_seek_disk
    _f_write->_create_chain
    _str_inf->_f_open
    _in_file->_f_open
    _f_open->_mount_volume
    _remove_chain->_put_fat
    _mount_volume->_disk_initialize
    _find_volume->_check_fs
    _check_fs->_move_window
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _read_sector->_seek_disk
    _seek_disk->_f_lseek
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _f_read->_get_fat
    _get_fat->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _URT3Rx_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    _main->_scan_files1
    _scan_files1->_f_getcwd
    _scan_files->_f_getcwd
    _load_file->_load_program
    _board_event_loop1->_bus_master_operation
    _board_event_loop->_bus_master_operation
    _bus_master_operation->_unimon_console
    _unimon_console->_str_inf

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _URT3Rx_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _URT3Rx_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _URT3Rx_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _URT3Rx_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _URT3Rx_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _URT3Rx_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _URT3Rx_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _URT3Rx_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _URT3Rx_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _URT3Rx_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _URT3Rx_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _URT3Rx_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _URT3Rx_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _URT3Rx_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _URT3Rx_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _URT3Rx_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _URT3Rx_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _URT3Rx_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _URT3Rx_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _URT3Rx_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _URT3Rx_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _URT3Rx_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _URT3Rx_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _URT3Rx_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _URT3Rx_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _Default_ISR in BANK32

    None.

Critical Paths under _TIMER0_ISR in BANK32

    None.

Critical Paths under _URT3Rx_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _Default_ISR in BANK33

    None.

Critical Paths under _TIMER0_ISR in BANK33

    None.

Critical Paths under _URT3Rx_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _Default_ISR in BANK34

    None.

Critical Paths under _TIMER0_ISR in BANK34

    None.

Critical Paths under _URT3Rx_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _Default_ISR in BANK35

    None.

Critical Paths under _TIMER0_ISR in BANK35

    None.

Critical Paths under _URT3Rx_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _Default_ISR in BANK36

    None.

Critical Paths under _TIMER0_ISR in BANK36

    None.

Critical Paths under _URT3Rx_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0 405880970
                                            145 BANK7     13    13      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _boot_file *
                   _change_directory *
                           _clc_init
                           _clk_init
                          _disk_init
                           _f_getcwd
                          _flash_apl *
                           _get_line
                        _load_config
                          _load_file *
                           _mem_dump *
                           _mem_init
                           _mon_prog *
                          _port_init
                          _print_com *
                          _print_reg *
                             _printf
                          _reset_clk
                          _reset_cpu
                       _restart_prog *
                         _return_cpu *
                         _scan_files *
                        _scan_files1 *
                           _see_file *
                            _set_arg
                      _setup_monitor
                           _setup_sd
                             _strlen
                             _strstr
                          _uart_init
                _wait_for_programmer
                        _wstart_prog *
 ---------------------------------------------------------------------------------
 (1) _wstart_prog                                          1     1      0 56884452
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _wait_for_programmer                                  2     2      0   25827
                                             93 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_sd                                             2     2      0   87420
                                            117 BANK5      2     2      0
                        _SDCard_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCard_init                                         16    10      6   61593
                                            101 BANK5     16    10      6
                     _SDCard_command
             _SDCard_end_transaction
                       _SPI_SD_begin
           _SPI_SD_begin_transaction
                   _SPI_SD_configure
                _SPI_SD_dummy_clocks
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_configure                                    10     4      6   26040
                                             93 BANK5      8     2      6
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_begin                                         4     2      2      46
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SDCard_command                                      15     7      8    6144
                                             42 COMRAM    15     7      8
             _SDCard_end_transaction
                     _SPI_SD_receive
                ___SDCard_command_r1
 ---------------------------------------------------------------------------------
 (1) _setup_monitor                                        5     3      2 63051434
                                             22 BANK7      4     2      2
                          _drive_cpu
                       _load_program
                             _printf
                       _setup_tomer0
                          _start_W65
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_W65                                            0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _setup_tomer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_arg                                              4     2      2     227
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _see_file                                             9     9      0 6114202
                                              0 BANK7      9     9      0
                            _f_close
                             _f_open
                             _f_read
                             _printf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _scan_files1                                         70    70      0 13678171
                                             75 BANK7     70    70      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scan_files                                          69    69      0 13678146
                                             75 BANK7     69    69      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_readdir                                            7     3      4 2362618
                                            137 BANK6      7     3      4
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_opendir                                            7     3      4 2486702
                                            175 BANK6      7     3      4
                            _dir_sdi
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (2) _f_getcwd                                            84    80      4 3181282
                                            175 BANK6      9     5      4
                                              0 BANK7     75    75      0
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _ld_clust
                       _mount_volume
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_fileinfo                                        13     9      4    1244
                                             16 COMRAM    13     9      4
                           _ld_dword
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_read                                            13     9      4 1166040
                                            124 BANK6     13     9      4
                           _dir_next
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_closedir                                           5     3      2   26421
                                            105 BANK5      5     3      2
                           _validate
 ---------------------------------------------------------------------------------
 (1) _return_cpu                                           1     1      0 56883790
                                             22 BANK7      1     1      0
                    _continue_action
                          _drive_cpu
 ---------------------------------------------------------------------------------
 (2) _continue_action                                      0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (1) _restart_prog                                         1     1      0 56884452
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_cpu                                            4     4      0   27336
                                             93 BANK5      2     2      0
                       _bus_hold_req
                    _bus_release_req
                             _memcmp
                             _printf
                          _read_sram
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_clk                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_reg                                            9     9      0   26840
                                             93 BANK5      9     9      0
                             _printf
                          _read_sram
 ---------------------------------------------------------------------------------
 (1) _print_com                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mon_prog                                             4     4      0 56911099
                                             22 BANK7      4     4      0
                          _drive_cpu
                             _printf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_init                                            14    10      4   54606
                                            126 BANK5     14    10      4
                             _memcmp
                             _printf
                          _read_sram
                      _util_addrdump
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             6     6      0   27583
                                            126 BANK5      6     6      0
                            _get_hex
                          _read_sram
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (1) _load_file                                            2     2      0 6142211
                                             21 BANK7      2     2      0
                            _get_hex
                       _load_program
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _get_hex                                             19    15      4     273
                                              3 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 (1) _load_config                                         27    25      2 6117255
                                              0 BANK7     21    19      2
                          ___strtoxl
                          _del_space
                            _f_close
                             _f_gets
                             _f_open
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _f_gets                                              21    15      6  493417
                                            159 BANK5      1     1      0
                                            105 BANK6     20    14      6
                             _f_read
 ---------------------------------------------------------------------------------
 (2) _del_space                                            6     4      2     253
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___strtoxl                                           30    23      7    2131
                                             15 COMRAM    30    23      7
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _get_line                                             7     3      4   26327
                                             93 BANK5      7     3      4
                              _getch
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _getch                                                5     3      2      23
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _flash_apl                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _disk_init                                            2     0      2  638786
                                            187 BANK6      2     0      2
                            _f_mount
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5  612959
                                            175 BANK6     12     7      5
                       _get_ldnumber
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _clk_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change_directory                                     0     0      0 2252336
                            _f_chdir
 ---------------------------------------------------------------------------------
 (2) _f_chdir                                             45    43      2 2252336
                                            175 BANK6     45    43      2
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _boot_file                                            5     5      0 63103942
                                             22 BANK7      3     3      0
                          _drive_cpu
                       _load_program
                             _printf
                         _prt_reload
                            _sprintf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_cpu                                            2     2      0       0
                                              3 COMRAM     2     2      0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _prt_reload                                           0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (2) _load_program                                        22    20      2 6141127
                                            159 BANK5      1     1      0
                                              0 BANK7     21    19      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
                            _sprintf
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4     777
                                             10 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6     182
                                              3 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2      95
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6   25620
                                             77 BANK5     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _drive_cpu                                            1     1      0 56883756
                                            255 BANK6      1     1      0
                   _board_event_loop
                  _board_event_loop1
                          _timer_off
                           _timer_on
 ---------------------------------------------------------------------------------
 (3) _timer_on                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _board_event_loop1                                    0     0      0 28441861
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (3) _board_event_loop                                     0     0      0 28441861
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
                           _make_irq
 ---------------------------------------------------------------------------------
 (4) _make_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bus_release_req                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_master_operation                                 6     6      0 28441861
                                             16 BANK7      6     6      0
                            _dsk_err
                            _get_str *
                            _in_file *
                              _putch
                        _read_sector
                          _read_sram
                        _setup_drive
                            _str_inf *
                            _u_getch *
                     _unimon_console
                       _write_sector
                         _write_sram
 ---------------------------------------------------------------------------------
 (5) _write_sector                                        10     8      2 2427141
                                            154 BANK6     10     8      2
                             _f_sync
                            _f_write
                             _printf
                          _read_sram
                          _seek_disk
                   _util_hexdump_sum
 ---------------------------------------------------------------------------------
 (6) _f_write                                             43    35      8  729019
                                             98 BANK6     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (5) _unimon_console                                       6     6      0 12227595
                                             10 BANK7      6     6      0
                            _get_str *
                            _in_file *
                              _putch
                          _read_sram
                            _str_inf *
                            _u_getch *
                         _write_sram
 ---------------------------------------------------------------------------------
 (6) _u_getch                                              5     3      2      34
                                            159 BANK5      1     1      0
                                              0 BANK7      4     2      2
 ---------------------------------------------------------------------------------
 (6) _str_inf                                             10     7      3 6112997
                                              0 BANK7     10     7      3
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (6) _read_sram                                           14     6      8     542
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (6) _in_file                                              3     1      2 6112787
                                            159 BANK5      1     1      0
                                              0 BANK7      2     0      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_open                                              82    77      5 4936105
                                            175 BANK6     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _follow_path
                            _get_fat
                        _get_fattime
                           _ld_clust
                           _ld_dword
                             _memset
                       _mount_volume
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (8) _remove_chain                                        25    15     10  467495
                                             69 BANK6     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (8) _mount_volume                                        46    41      5  611747
                                            129 BANK6     46    41      5
                            ___lldiv
                             ___lmul
                    _disk_initialize
                        _disk_status
                        _find_volume
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_ldnumber                                        15    13      2     634
                                              3 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (9) _find_volume                                         30    26      4  233936
                                             50 BANK6     30    26      4
                           _check_fs
                           _ld_dword
 ---------------------------------------------------------------------------------
 (10) _check_fs                                           14     8      6  232882
                                             36 BANK6     14     8      6
                           _ld_dword
                            _ld_word
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _disk_initialize                                    133   133      0  115791
                                            155 BANK5      4     4      0
                                              0 BANK6    129   129      0
                     _SDCard_read512
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (8) _follow_path                                         16    12      4 1639422
                                            132 BANK6     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (8) _ld_clust                                            12     8      4     374
                                             10 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (9) _dir_find                                             8     6      2 1400697
                                            124 BANK6      8     6      2
                           _dir_next
                            _dir_sdi
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (11) _memcmp                                             12     6      6     308
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _create_name                                         23    19      4    2865
                                             11 COMRAM    23    19      4
                            _dbc_1st
                            _dbc_2nd
                             _memset
                             _strchr
 ---------------------------------------------------------------------------------
 (10) _strchr                                              6     2      4     136
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _dbc_2nd                                             3     1      2     282
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) _dbc_1st                                             3     1      2     188
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _dir_register                                         5     3      2 1632380
                                            136 BANK6      5     3      2
                          _dir_alloc
                             _memcpy
                             _memset
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_alloc                                           12     8      4 1400302
                                            124 BANK6     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_sdi                                             30    24      6  234429
                                             62 BANK6     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (10) _dir_next                                           30    26      4  934191
                                             98 BANK6     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (11) _dir_clear                                          18    12      6  231111
                                            157 BANK5      2     2      0
                                             26 BANK6     16    10      6
                          _clst2sect
                         _disk_write
                             _memset
                        _sync_window
 ---------------------------------------------------------------------------------
 (7) _f_close                                              5     3      2  657941
                                             47 BANK6      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (6) _f_sync                                              11     9      2  631428
                                             36 BANK6     11     9      2
                         _disk_write
                        _get_fattime
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (7) _sync_fs                                             11     9      2  257452
                                            157 BANK5      1     1      0
                                             26 BANK6     10     8      2
                         _disk_ioctl
                         _disk_write
                             _memset
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6     200
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           5     2      3   26119
                                             93 BANK5      5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (7) _st_clust                                             9     1      8     372
                                              7 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (7) _get_fattime                                          4     0      4       0
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _get_str                                              9     6      3     198
                                              0 BANK7      9     6      3
 ---------------------------------------------------------------------------------
 (5) _setup_drive                                          4     2      2       0
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _read_sector                                         10     8      2 1559530
                                            154 BANK6     10     8      2
                             _f_read
                             _printf
                          _seek_disk
                   _util_hexdump_sum
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _write_sram                                          16     8      8     659
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) _util_hexdump_sum                                    11     5      6   52714
                                            122 BANK5     11     5      6
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (7) _util_hexdump                                        29    23      6   26572
                                             93 BANK5     29    23      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _seek_disk                                           17    15      2  987373
                                            139 BANK6     15    13      2
                            _f_lseek
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_lseek                                             41    35      6  961444
                                             98 BANK6     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        29    23      6  468582
                                             69 BANK6     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (9) _put_fat                                             33    23     10  233751
                                             36 BANK6     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (10) _st_word                                             4     0      4     163
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _st_dword                                            6     0      6     341
                                              3 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     259
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _f_read                                              43    35      8  492784
                                             62 BANK6     43    35      8
                          _clst2sect
                          _disk_read
                         _disk_write
                            _get_fat
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                            11     7      4   26275
                                             94 BANK5     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          1     1      0   25874
                                             93 BANK5      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (8) _get_fat                                             26    20      6  232813
                                             36 BANK6     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         11     5      6  231221
                                            158 BANK5      1     1      0
                                             26 BANK6     10     4      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (10) _sync_window                                        19    17      2  115220
                                            156 BANK5      1     1      0
                                              8 BANK6     18    16      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (11) _disk_write                                         11     3      8  114771
                                            153 BANK5      3     3      0
                                              0 BANK6      8     0      8
                    _SDCard_write512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _SDCard_write512                                    27    17     10   61863
                                            126 BANK5     27    17     10
             _SDCard_end_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          11     3      8  115559
                                            155 BANK5      3     3      0
                                              0 BANK6      8     0      8
                     _SDCard_read512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (11) _SDCard_read512                                     29    19     10   62687
                                            126 BANK5     29    19     10
             _SDCard_end_transaction
                     _SPI_SD_receive
                _SPI_SD_receive_byte
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _util_addrdump                                      33    23     10   26669
                                             93 BANK5     33    23     10
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              18     4     14   25827
                                             77 BANK5     16     2     14
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             8     2      6   25260
                                             69 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          18    12      6   24976
                                             51 BANK5     18    12      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (11) _xtoa                                               21    14      7    1801
                                             29 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (11) _stoa                                               14    10      4     901
                                             13 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _read_prec_or_width                                  9     5      4     272
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (11) _efgtoa                                             54    47      7   16824
                                             87 COMRAM     2     2      0
                                              0 BANK5     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (12) _strcpy                                              6     2      4     115
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _memcpy                                             11     5      6     298
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _labs                                                8     4      4     102
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _floorf                                             20    16      4     495
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fpclassifyf                                      14    10      4     207
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (12) ___fltol                                            10     6      4     349
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3055
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            16     8      8    2966
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (12) ___flneg                                             4     0      4      68
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) ___flmul                                            25    17      8    2265
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) ___flge                                             12     4      8     314
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fleq                                             12     4      8     148
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___fldiv                                            25    17      8    1767
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) _dtoa                                               15     9      6    2846
                                             29 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (12) _pad                                                 9     3      6    1254
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (13) _fputs                                               7     3      4     552
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4     400
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0      47
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _abs                                                 4     2      2      96
                                             13 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (12) ___almod                                            10     2      8     439
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (12) ___aldiv                                            14     6      8     451
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (13) ___SDCard_crc16                                     13     7      6     450
                                              3 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (13) ___SDCard_command_r1                                16    10      6    3748
                                             26 COMRAM    16    10      6
                         _SDCard_crc
           _SPI_SD_begin_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
             ___SDCard_wait_response
 ---------------------------------------------------------------------------------
 (13) ___SDCard_wait_response                              6     4      2    1409
                                             20 COMRAM     6     4      2
                _SPI_SD_receive_byte
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_receive_byte                                 3     1      2    1217
                                             17 COMRAM     3     1      2
                     _SPI_SD_receive
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_receive                                     14     8      6     998
                                              3 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_begin_transaction                            2     0      2     244
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _acquire_bus
 ---------------------------------------------------------------------------------
 (14) _SDCard_crc                                         11     7      4     343
                                              3 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (13) _SDCard_end_transaction                              2     2      0    1064
                                             20 COMRAM     2     2      0
                _SPI_SD_dummy_clocks
             _SPI_SD_end_transaction
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_end_transaction                              2     0      2     210
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_select                                       4     0      4      43
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_dummy_clocks                                 7     3      4     789
                                             13 COMRAM     7     3      4
                        _SPI_SD_send
                        _acquire_bus
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _release_bus                                         4     2      2     102
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _acquire_bus                                         4     2      2     133
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_send                                        11     5      6     323
                                              3 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _ld_word                                              7     5      2     190
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) _ld_dword                                            13     9      4     302
                                              3 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (8) _clst2sect                                           12     6      6     366
                                             15 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     160
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dsk_err                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_hold_req                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _URT3Rx_ISR                                          3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _boot_file *
     _drive_cpu
       _board_event_loop
         _bus_hold_req
         _bus_master_operation
           _dsk_err
           _get_str *
           _in_file *
             _f_close
               _f_sync
                 _disk_write
                   _SDCard_write512
                     _SDCard_end_transaction
                       _SPI_SD_dummy_clocks
                         _SPI_SD_send
                         _acquire_bus
                         _release_bus
                       _SPI_SD_end_transaction
                         _SPI_SD_select
                         _release_bus
                     _SPI_SD_dummy_clocks
                     _SPI_SD_send
                     ___SDCard_command_r1
                       _SDCard_crc
                       _SPI_SD_begin_transaction
                         _SPI_SD_select
                         _acquire_bus
                       _SPI_SD_dummy_clocks
                       _SPI_SD_send
                       ___SDCard_wait_response
                         _SPI_SD_receive_byte
                           _SPI_SD_receive
                     ___SDCard_crc16
                     ___SDCard_wait_response
                     _printf
                       ___xxtofl (ARG)
                       _vfprintf (ARG)
                         _vfpfcnvrt
                           _dtoa
                             ___aldiv
                             ___almod
                             _abs
                               ___almod (ARG)
                             _pad
                               _fputc
                                 _putch
                               _fputs
                                 _fputc
                           _efgtoa
                             ___fladd
                             ___fldiv
                             ___fleq
                             ___flge
                               ___flmul (ARG)
                             ___flmul
                             ___flneg
                             ___flsub
                               ___fladd
                               ___flmul (ARG)
                             ___fltol
                             ___fpclassifyf
                             _floorf
                               ___fldiv (ARG)
                             _labs
                             _memcpy
                             _pad
                             _strcpy
                           _fputc
                           _read_prec_or_width
                           _stoa
                             _fputc
                           _xtoa
                             _pad
                     _util_addrdump
                       _printf
                   _printf
                   _util_addrdump
                 _get_fattime
                 _move_window
                   _disk_read
                     _SDCard_read512
                       _SDCard_end_transaction
                       _SPI_SD_receive
                       _SPI_SD_receive_byte
                       ___SDCard_command_r1
                       ___SDCard_crc16
                       ___SDCard_wait_response
                       _printf
                       _util_addrdump
                     _printf
                     _util_addrdump
                   _sync_window
                     _disk_write
                 _st_clust
                   _st_word
                 _st_dword
                 _st_word
                 _sync_fs
                   _disk_ioctl
                     _printf
                   _disk_write
                   _memset
                   _st_dword
                   _st_word
                   _sync_window
                 _validate
                   _disk_status
                     _printf
               _validate
             _f_open
               _clst2sect
                 ___lmul
               _dir_register
                 _dir_alloc
                   _dir_next
                     _clst2sect
                     _create_chain
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                       _put_fat
                         _ld_dword
                         _move_window
                         _st_dword
                         _st_word
                     _dir_clear
                       _clst2sect
                       _disk_write
                       _memset
                       _sync_window
                     _get_fat
                   _dir_sdi
                     _clst2sect
                     _get_fat
                   _move_window
                 _memcpy
                 _memset
                 _move_window
               _disk_read
               _follow_path
                 _create_name
                   _dbc_1st
                   _dbc_2nd
                   _memset
                   _strchr
                 _dir_find
                   _dir_next
                   _dir_sdi
                   _memcmp
                   _move_window
                 _dir_sdi
                 _ld_clust
                   _ld_word
               _get_fat
               _get_fattime
               _ld_clust
               _ld_dword
               _memset
               _mount_volume
                 ___lldiv
                 ___lmul
                 _disk_initialize
                   _SDCard_read512
                   _printf
                   _util_hexdump
                     _printf
                 _disk_status
                 _find_volume
                   _check_fs
                     _ld_dword
                     _ld_word
                     _memcmp
                     _move_window
                   _ld_dword
                 _get_ldnumber
                 _ld_dword
                 _ld_word
                 _move_window
               _move_window
               _remove_chain
                 _get_fat
                 _put_fat
               _st_clust
               _st_dword
             _f_read
               _clst2sect
               _disk_read
               _disk_write
               _get_fat
               _memcpy
               _validate
             _printf
           _putch *
           _read_sector *
             _f_read
             _printf
             _seek_disk
               _f_lseek
                 ___lldiv
                 _clst2sect
                 _create_chain
                 _disk_read
                 _disk_write
                 _get_fat
                 _validate
               _printf
             _util_hexdump_sum
               _printf
               _util_hexdump
             _write_sram
           _read_sram *
           _setup_drive *
           _str_inf *
             _f_close
             _f_open
             _f_read
             _printf
           _u_getch *
           _unimon_console *
             _get_str *
             _in_file *
             _putch *
             _read_sram *
             _str_inf *
             _u_getch *
             _write_sram *
           _write_sector *
             _f_sync
             _f_write
               _clst2sect
               _create_chain
               _disk_read
               _disk_write
               _memcpy
               _validate
             _printf
             _read_sram
             _seek_disk
             _util_hexdump_sum
           _write_sram *
         _bus_release_req
         _make_irq
       _board_event_loop1
         _bus_hold_req
         _bus_master_operation
         _bus_release_req
       _timer_off
       _timer_on
     _load_program
       _f_close
       _f_open
       _f_read
       _printf
       _sprintf
         _vfprintf
       _strstr
         _strchr
         _strlen
         _strncmp
       _write_sram
     _printf
     _prt_reload
       _printf
     _sprintf
     _start_cpu
       _bus_release_req
     _strstr
     _write_sram
   _change_directory *
     _f_chdir
       _follow_path
       _ld_clust
       _mount_volume
   _clc_init *
   _clk_init *
   _disk_init *
     _f_mount
       _get_ldnumber
       _mount_volume
     _printf
   _f_getcwd *
     _dir_next
     _dir_read
       _dir_next
       _move_window
     _dir_sdi
     _get_fileinfo
       _ld_dword
       _ld_word
     _ld_clust
     _mount_volume
     _move_window
   _flash_apl *
     _printf
   _get_line *
     _getch
     _printf
     _putch
   _load_config *
     ___strtoxl
       ___lmul
     _del_space
     _f_close
     _f_gets
       _f_read
     _f_open
     _printf
     _strlen
     _strstr
   _load_file *
     _get_hex
     _load_program
     _strstr
   _mem_dump *
     _get_hex
     _read_sram
     _util_addrdump
   _mem_init *
     _memcmp
     _printf
     _read_sram
     _util_addrdump
     _write_sram
   _mon_prog *
     _drive_cpu
     _printf
     _start_cpu
     _strstr
     _write_sram
   _port_init *
   _print_com *
     _printf
   _print_reg *
     _printf
     _read_sram
   _printf *
   _reset_clk *
   _reset_cpu *
     _bus_hold_req
     _bus_release_req
     _memcmp
     _printf
     _read_sram
     _write_sram
   _restart_prog *
     _drive_cpu
     _start_cpu
     _write_sram
   _return_cpu *
     _continue_action
       _bus_release_req
     _drive_cpu
   _scan_files *
     _f_close
     _f_closedir
       _validate
     _f_getcwd
     _f_open
     _f_opendir
       _dir_sdi
       _follow_path
       _ld_clust
       _mount_volume
     _f_readdir
       _dir_next
       _dir_read
       _dir_sdi
       _get_fileinfo
       _validate
     _printf
   _scan_files1 *
     _f_close
     _f_closedir
     _f_getcwd
     _f_open
     _f_opendir
     _f_readdir
     _printf
   _see_file *
     _f_close
     _f_open
     _f_read
     _printf
     _strstr
   _set_arg *
   _setup_monitor *
     _drive_cpu
     _load_program
     _printf
     _setup_tomer0
     _start_W65
       _bus_release_req
     _write_sram
   _setup_sd *
     _SDCard_init
       _SDCard_command
         _SDCard_end_transaction
         _SPI_SD_receive
         ___SDCard_command_r1
       _SDCard_end_transaction
       _SPI_SD_begin
       _SPI_SD_begin_transaction
       _SPI_SD_configure
         _printf
       _SPI_SD_dummy_clocks
       _printf
     _printf
   _strlen *
   _strstr *
   _uart_init *
   _wait_for_programmer *
     _printf
   _wstart_prog *
     _drive_cpu
     _start_cpu
     _write_sram

 _Default_ISR (ROOT)

 _TIMER0_ISR (ROOT)

 _URT3Rx_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0    2680     32.7%
BITBIGSFRh        1065      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0     128     50.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0     209     81.6%
BITBANK9           256      0       0      0.0%
BANK9              256      0     179     69.9%
BITBANK8           256      0       0      0.0%
BANK8              256      0     223     87.1%
BITBANK7           256      0       0      0.0%
BANK7              256    158     256    100.0%
BITBANK6           256      0       0      0.0%
BANK6              256    256     256    100.0%
BITBANK5           160      0       0      0.0%
BANK5              160    160     160    100.0%
BITBIGSFRll        128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    4186      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 16 20:44:40 2024

                    del_space@bytes 0504                          _URT3Rx_ISR F4D8  
                       get_fat@clst 0626                        ___fldiv@aexp 0543  
                      ___fldiv@bexp 0542                _bus_master_operation 8BA2  
                    ?_SPI_SD_select 0504                        ___fldiv@sign 053B  
                      create_name@c 0522                        create_name@d 0517  
                      create_name@i 051A                        create_name@p 051E  
                  get_ldnumber@path 0504                     ?_SPI_SD_receive 0504  
                                _fh 08A2                                  _fs 0B80  
                 ?_SPI_SD_configure 05BD                   SDCard_command@spi 0534  
                    ??_dir_register 055A                        return_cpu@rs 0716  
                  disk_write@sector 0602                       create_name@dp 050C  
                     create_name@ni 0518                       create_name@si 0520  
                    create_chain@cs 065E                      create_chain@fs 065C  
               __end_of_wstart_prog EAFC                   SDCard_read512@crc 05F8  
                 SDCard_read512@buf 05E4                                 l311 0208  
                               l320 FAE4                                 l314 021A  
                               l331 EE3C                                 l403 EFD0  
                               l500 EF3A                                 l412 026C  
                               l308 FB2A                                 l333 EE44  
                               l421 EC3C                                 l341 DF0C  
                               l510 8040                                 l326 F5B8  
                               l422 EC02                                 l430 F3EA  
                               l342 DF0C                                 l406 FF32  
                               l350 FD3E                                 l327 F580  
                               l415 EBA0                                 l319 FAB0  
                               l504 82E4                                 l336 EEA0  
                               l424 EC10                                 l432 F3F8  
                               l344 DF54                                 l600 9604  
                               l409 0262                                 l521 80C0  
                               l505 809A                                 l361 D16E  
                               l337 EEAA                                 l281 FFE4  
                               l353 0188                                 l530 8126  
                               l514 8078                                 l434 F45E  
                               l442 FB3E                                 l507 802E  
                               l363 D23E                                 l283 FFF2  
                               l419 EBD0                                 l435 F42A  
                               l347 F6F2                                 l540 81AE  
                               l524 80E2                                 l372 E446  
                               l284 FFFC                                 l356 01D4  
                               l444 FB4C                                 l541 81B2  
                               l533 8148                                 l509 803C  
                               l365 D1DC                                 l437 F438  
                               l429 F3EA                                 l381 FE26  
                               l461 FF60                                 l454 F90C  
                               l550 8218                                 l518 809E  
                               l390 C292                                 l446 FB70  
                               l527 8104                                 l367 D240  
                               l287 01BC                                 l623 957E  
                               l544 81D4                                 l536 816A  
                               l376 E494                                 l384 0286  
                               l464 CAE0                                 l632 9590  
                               l608 948A                   SDCard_read512@spi 05F6  
                               l553 823A                                 l481 CBE6  
                               l458 FD02                                 l730 F236  
                               l562 82A0                                 l378 E4D2  
                               l491 EF3E                                 l547 81F6  
                               l387 0282                                 l723 F36E  
                               l467 CB20                                 l580 0204  
                               l732 F272                                 l484 0148  
                               l556 825C                                 l468 CB1C  
                               l469 CB1C                                 l814 0274  
                               l494 EF00                                 l574 F7B4  
                               l566 82D2                                 l654 FBFC  
                               l822 ACE2                                 l398 EF74  
                               l487 016A                                 l559 827E  
                               l719 85D4                                 l639 95A2  
                               l399 EF74                                 l496 EF0E  
                               l728 F224                                 l592 93A8  
                               l577 0126                                 l737 E40E  
                               l809 F4D4                                 l498 EF2C  
                               l658 E6FA                                 l738 E416  
                               l834 ADC6                                 l842 8E2C  
                               l587 FF8A                                 l835 AE08  
                               l819 AE04                                 l851 8C90  
                               l828 ACE8                                 l685 90F6  
                               l845 8C8A                                 l863 8DDE  
                               l784 CD04                                 l864 8E54  
                ??_SPI_SD_configure 05C3                                 l890 937E  
                               l884 926E                                 l789 BB1C  
                               l885 926E                                 l799 C6C4  
                               _GIE 26B7                                 _RA5 2675  
  __end_of_debug_flags@diskio$F4060 F20D                                 _abs FED0  
                               _cmd 0900                                 _arg 079E  
                               _pad EC3E                                 _mon 07C8  
                               _rom F20F                                 prod 04F3  
                    ??_create_chain 064B                                 tosl 04FD  
                               wreg 04E8                         disk_write@i 05FA  
                      ___flmul@aexp 051F                        ___flmul@bexp 0524  
                      ___flmul@sign 051E                        ___flmul@temp 0529  
                      ___flmul@prod 0525                    _util_hexdump_sum F170  
                    create_name@sfn 051C                     create_chain@ncl 0658  
                   create_chain@obj 0645             SPI_SD_receive_byte@ctx_ 0512  
                   create_chain@scl 0654                     create_chain@res 0653  
                       ld_clust@dir 050D                  SDCard_read512@addr 05DE  
                      ___fltol@exp1 050D                                l1111 7346  
                              l2000 D91E                                l1104 725A  
                              l1105 725A                                l1130 E900  
                              ?_abs 050E                                l1140 60BA  
                              l1108 731A                                l1301 B15E  
                              l1109 731A                                l1134 619C  
                              l1151 618A                                l2031 53D2  
                              l1304 E58C                                l2017 5122  
                              l1313 EAFA                                l1241 9872  
                              l1322 D82C                                l2043 212E  
                              l1219 9AA6                                l3100 4E2E  
                              l2036 25B4                                l1156 F95E  
                              l1332 584E                                l1340 561A  
                              l2037 1E64                                l1165 F05C  
                              l1173 719E                                l1309 EE10  
                              l1317 EA52                                l1325 F3E8  
                              l1431 FFB2                                l1263 FD7A  
                              l2071 BF20                                l3200 AAFC  
                              l1600 7B5A                                l2208 DA0A  
                              l2080 FDEE                                l1328 5428  
                              l1425 FECE                                l1513 4508  
                              l1337 5544                                l1329 586E  
                              l3106 4EE8                                l1450 B7E8  
                              l1434 F624                                l1610 620E  
                              l1522 9CD8                                l1266 01EC  
                              l1258 AFB6                                l1274 7DAA  
                              l1098 71E8                                l3203 AC58  
                              l3115 FBB6                                l1363 C11E  
                              l1339 5590                                l1099 71E8  
                              l1428 E644                                l3140 7802  
                              l3132 770A                                l1516 4592  
                              l1196 CF2C                                l2068 BFA4  
                              l1276 7FBC                                l3141 77F0  
                              l1461 E026                                l1445 DD9C  
                              l3301 D542                                l2421 B4AC  
                              l2069 BF86                                l2085 DBD8  
                              l1293 023C                                l3214 ABF0  
                              l2510 C46E                                l1702 4A6E  
                              l2430 B4C4                                l1374 AAA4  
                              l1358 FC82                                l1278 7F00  
                              l3207 AB94                                l1471 E1BE  
                              l3127 78E2                                l1455 B7EC  
                              l2503 F756                                l1439 ED76  
                              l1279 7ECA                                l2520 C30C  
                              l1464 A0FE                                l3320 F9FE  
                              l1296 024A                                l3129 7746  
                              l3073 4C58                                l1545 40A6  
                              l3313 FE5E                                l2089 DBDA  
                              l3138 778C                                l3090 4D72  
                              l3082 4F24                                l3074 4C46  
                              l3226 D640                                l1474 6A58  
                              l2418 022C                                l1626 651C  
                              l1618 65C6                                l2442 B534  
                              l1378 A9FC                                l3139 77AA  
                              l3163 69EC                                l3075 4C0C  
                              l3307 FA4E                                l1571 408E  
                              l1547 3C4A                                l2515 C566  
                              l2531 F1F0                                l1467 A102  
                              l3420 12B0                                l1492 6DD8  
                              l1644 CAB2                                l2428 B64A  
                              l2540 C806                                l3501 35A0  
                              l2525 C404                                l1477 6DC8  
                              l1653 FA9A                                l1645 CAB4  
                              l3350 EC76                                l3166 6882  
                              l3262 5ADC                                l2542 C816  
                              l3167 68A0                                l3159 668C  
                              l3087 4E00                                l3511 3AF6  
                              l3503 35A8                                l1479 6A64  
                              l3263 5B22                                l2624 D036  
                              l3360 A740                                l3176 69AE  
                              l3168 68F8                                l3512 381A  
                              l2464 E7AA                                l1568 4056  
                              l1664 B302                                l3353 ECB8  
                              l3169 68E6                                l2473 E856  
                              l2457 FCC4                                l1497 40F6  
                              l1569 4096                                l1577 C966  
                              l1649 F2F2                                l3362 A748  
                              l2810 D2FE                                l3442 B892  
                              l3602 FFDA                                l1922 336C  
                              l1594 7C6C                                l1754 8B08  
                              l1834 0422                                l1818 0AD6  
                              l3274 5B86                                l3355 ECDA  
                              l3363 A78E                                l3099 4E40  
                              l1763 8BA0                                l3283 5C6C  
                              l3259 5A4E                                l2556 F67E  
                              l2804 E9AA                                l3532 3984  
                              l2572 EB8E                                l1668 BE26  
                              l1756 8AF2                                l3620 F9AE  
                              l2557 F68E                                l2637 DAF4  
                              l3461 BB50                                l1861 D432  
                              l1917 3448                                l2493 F702  
                              l3605 F0EA                                l1845 0880  
                              l3269 5B2A                  SDCard_read512@offs 05E2  
                              l3614 FDB6                                l3390 0E68  
                              l3454 B98A                                l2478 E6FC  
                              l1862 D444                                l1678 DCBC  
                              l1782 88C0                                l1686 A50C  
                              l2815 D344                                l2487 E7A8  
                              l3607 F16E                                l1767 B4A6  
                              l1951 1C28                                l3287 5D0A  
                              l3279 5BD4                                l3552 FEEA  
                              l3376 A8DE                                l3392 0CAE  
                              l1776 B498                                l1952 1886  
                              l1944 1DB2                                l3640 CE20  
                              l3561 A314                                l3449 B942  
                              l1873 2D34                                l3633 DE7A  
                              l2842 D13C                                l2498 F708  
                              l1866 D73A                                l3555 FF02  
                              l2819 FE96                                l3387 1536  
                              l3483 E0F2                                l3475 BCA2  
                              l3459 BB48                                l2579 EB9E  
                              l1891 28D4                                l1867 D6C0  
                              l3564 A258                                l3548 F862  
                              l1980 9EEE                                l1884 26C0  
                              l1893 28B4                                l1885 26AE  
                              l1973 1D80                                l1798 A572  
                              l1878 2D14                                ?_pad 0515  
                              l3575 F8B8                                l3479 E0EA  
                              l1799 A700                                l1993 D91C  
                              l1986 F80C                                l3587 E352  
                              l3595 FC40                                l1899 2D14  
                              l1995 D8BE                                STR_1 F28B  
                              STR_2 FA56                                STR_3 F28B  
                              STR_4 FC85                                STR_5 FE6C  
                              STR_6 F6B4                                STR_7 FDC6  
                              STR_8 F419                                STR_9 FDC6  
                              _LATB 04BF                                _LATC 04C0  
                              _LATD 04C1                         boot_file@rs 0718  
                              _U3ON 1697                      ??_get_fileinfo 0515  
                              _WPUB 0409                                _WPUC 0411  
                              _WPUD 0419                                _Fsid 07B5  
                              abs@a 050E                                _dbuf 0828  
                              _binv 0878                                _labs F864  
                              _main 71A0                                _dtoa A702  
                              _ctx_ 07A8                        find_volume@i 064E  
                              _prec 055A                                pad@i 051C  
                              pad@p 0519                                fsr0h 04EA  
                              fsr1h 04E2                                indf0 04EF  
                              fsr2h 04DA                                fsr0l 04E9  
                              indf1 04E7                                indf2 04DF  
                              fsr1l 04E1                                fsr2l 04D9  
                              _stoa B7EE                         ld_dword@ptr 0504  
                              _xtoa BB1E                       disk_ioctl@cmd 05BD  
                     disk_read@buff 0600                       disk_ioctl@res 05C1  
                     ___fpclassifyf D544                       disk_read@pdrv 05FB  
                              prodh 04F4                                prodl 04F3  
                    ??_get_ldnumber 0506                                start 0102  
       SPI_SD_configure@clock_speed 05BF                   ??_continue_action 0504  
                   ___fldiv@new_exp 053C                       get_hex@hexval 0512  
            ___SDCard_command_r1@r1 051F                  disk_initialize@buf 0600  
                      ?_follow_path 0684                        ___param_bank 0000  
             ?_bus_master_operation 0501                       write_sector@n 06A2  
                  print_reg@reg_816 05C4                     create_name@path 050E  
                  create_chain@clst 0647                       write_sram@buf 0508  
                             ??_abs 0510                       write_sram@len 050A  
          SPI_SD_receive_byte@dummy 0514                         ?_TIMER0_ISR 0501  
                     get_fileinfo@c 051B                               ??_pad 051B  
               SDCard_read512@i_674 05EE                        SPI_SD_send@i 050A  
                      SPI_SD_send@p 050C                         _sync_window B64C  
                      ?_load_config 0700                               l20001 0F20  
                             l20011 1034                               l20003 0F84  
                             l20021 10F2                               l20013 1068  
                             l20005 0FDC                               l20103 1490  
                             l20111 14E8                               l20031 11C6  
                             l20023 1102                               l20015 109A  
                             l20007 1010                               l20113 14F8  
                             l20105 14A6                               l20041 11FA  
                             l20033 11DA                               l20025 1136  
                             l20017 10B0                               l20009 1016  
                             l20121 B7EE                               l20201 BC5A  
                             l21001 F606                               l20115 150E  
                             l20107 14AC                               l20051 12C2  
                             l20043 1202                               l20027 118C  
                             l20035 11DE                               l20019 10E2  
                             l20211 E030                               l20131 B85E  
                             l20123 B808                               l20203 BC74  
                             l21011 DF9C                               l21003 F614  
                             l20301 81F2                               l20221 7FBE  
                             l20117 1516                               l20109 14CA  
                             l20061 12F2                               l20053 12D0  
                             l20045 120E                               l20037 11EE  
                             l20029 1192                               l20213 E058  
                             l20141 B8C8                               l20133 B86C  
                             l20125 B810                               l20205 BC82  
                             l21013 DFAC                               l21021 E022  
                             l21005 DF56                               l21101 6DA2  
                             l21031 F654                               l20311 8232  
                             l20303 8204                               l20231 8004  
                             l20071 1324                               l20063 1302  
                             l20055 12E0                               l20047 1286  
                             l20039 11F6                               l20215 E092  
                             l20143 B8CC                               l20135 B88A  
                             l20127 B81C                               l21015 DFF4  
                             l21007 DF5A                               l21111 40FE  
                             l21103 40A8                               l21033 F65E  
                             l21025 F626                               l20321 826A  
                             l20313 8236                               l20305 8210  
                             l20241 8062                               l20233 8030  
                             l20225 7FDC                               l20081 13CC  
                             l20073 1336                               l20065 1306  
                             l20057 12E4                               l20049 12A6  
                             l20217 E0B0                               l20209 E028  
                             l20153 B954                               l20145 B8EE  
                             l20129 B820                               l20161 BB2C  
                             l20401 368C                               l21017 DFFE  
                             l21009 DF8C                               l21121 41A4  
                             l21113 4110                               l21105 40AE  
                             l21201 3B3C                               l21041 FE44  
                             l22001 A5EE                               l21027 F636  
                             l21051 E156                               l21043 E0F4  
                             l20331 829C                               l20323 8276  
                             l20315 8248                               l20307 8214  
                             l20251 80BC                               l20243 8086  
                             l20235 804E                               l20227 7FE2  
                             l20091 141A                               l20083 13D4  
                             l20075 133A                               l20067 130C  
                             l20059 12EA                               l20219 E0BE  
                             l20155 B968                               l20147 B924  
                             l20139 B8B4                               l20171 BB76  
                             l20163 BB2E                               l20411 36FE  
                             l20403 36A2                               l21019 E004  
                             l21131 4200                               l21123 41A8  
                             l21115 416C                               l21107 40C8  
                             l21211 3BD8                               l21203 3B52  
                             l21035 FE28                               l22011 A632  
                             l22003 A5F2                               l21029 F644  
                             l21045 E100                               l20501 F8E8  
                             l20333 82AE                               l20325 827A  
                             l20317 8254                               l20309 8226  
                             l20261 80FC                               l20253 80CE  
                             l20245 8092                               l20237 805A  
                             l20229 7FE6                               l20093 1428  
                             l20077 1340                               l20069 1312  
                             l20085 13D8                               l20157 B96C  
                             l20149 B928                               l20181 BB9E  
                             l20173 BB7E                               l20165 BB3C  
                             l20421 37A4                               l20413 3722  
                             l20405 36BE                               l21061 6A44  
                             l22101 D404                               l21141 42A4  
                             l21133 4210                               l21125 41B6  
                             l21301 3FF2                               l21205 3B7C  
                             l21037 FE34                               l22021 A6E2  
                             l22013 A668                               l22005 A608  
                             l21047 E142                               l20503 F8F8  
                             l20511 FCC6                               l20335 82BA  
                             l20327 828C                               l20319 8258  
                             l20271 8134                               l20263 8100  
                             l20255 80DA                               l20247 80AC  
                             l20239 805E                               l20095 1458  
                             l20087 13F6                               l20079 1398  
                             l20191 BBD2                               l20183 BBAE  
                             l20175 BB8A                               l20167 BB58  
                             l20159 BB1E                               l20431 381C  
                             l20423 37C4                               l20415 375A  
                             l20351 348E                               l21071 6B1A  
                             l21063 6A6C                               l21055 69EE  
                             l22103 D406                               l21151 439C  
                             l21143 42B2                               l21135 426C  
                             l21127 41C0                               l21119 4180  
                             l21303 4040                               l21231 3CA0  
                             l21215 3BEC                               l21223 3C5A  
                             l21207 3B90                               l21039 FE40  
                             l21311 C834                               l22015 A674  
                             l22007 A61A                               l20521 EEAC  
                             l20505 F8FA                               l20513 FCCE  
                             l20601 F1F2                               l20337 82BE  
                             l20329 8298                               l20281 8166  
                             l20273 8140                               l20265 8112  
                             l20257 80DE                               l20249 80B8  
                             l20097 1466                               l20089 1412  
                             l20193 BBD8                               l20185 BBB6  
                             l20177 BB92                               l20169 BB6A  
                             l20441 38BA                               l20433 3844  
                             l20409 36DE                               l20353 3492  
                             l20345 344A                               l21081 6BD0  
                             l21073 6B1E                               l21065 6A7E  
                             l21057 69FE                               l22105 D416  
                             l22121 EB22                               l21161 446E  
                             l21145 42EE                               l21129 41F4  
                             l21305 406A                               l21241 3D42  
                             l21233 3CC4                               l21225 3C7C  
                             l21217 3C08                               l21209 3BBC  
                             l22113 021C                               l21321 C8A4  
                             l22025 B4AC                               l22017 A6B8  
                             l22009 A626                               l22201 9B4A  
                             l23001 2C3E                               l20531 EEE0  
                             l20507 F8FC                               l20515 FCEC  
                             l20603 F1F4                               l20291 81C0  
                             l20339 82C0                               l20283 8178  
                             l20275 8144                               l20267 811E  
                             l20259 80F0                               l20099 147E  
                             l20187 BBBC                               l20179 BB98  
                             l20195 BC0E                               l20443 38F2  
                             l20435 3852                               l20419 378E  
                             l20371 3516                               l20363 34B6  
                             l20355 349A                               l20347 3472  
                             l21091 6C82                               l21083 6BE0  
                             l21059 6A1A                               l22107 D422  
                             l22131 EB6C                               l22123 EB2A  
                             l21155 43B0                               l21147 431A  
                             l21139 4280                               l21307 407A  
                             l21251 3DC6                               l21243 3D5A  
                             l21235 3CDC                               l21219 3C1C  
                             l21331 C8F2                               l21323 C8B2  
                             l21315 C83A                               l21411 793A  
                             l21403 78F4                               l22035 B4C4  
                             l22019 A6CC                               l22203 9B5A  
                             l23011 2D26                               l23003 2C56  
                             l20541 EF16                               l20533 EEE4  
                             l20525 EECA                               l20509 F8FE  
                             l20517 FCF2                               l20605 F20C  
                             l20621 F25A                               l20293 81CC  
                             l20285 8184                               l20277 8156  
                             l20269 8122                               l20197 BC2A  
                             l20189 BBCC                               l20453 394E  
                             l20437 385A                               l20429 37F6  
                             l20381 3582                               l20373 3520  
                             l20357 349C                               l20365 34DA  
                             l20349 3480                               l20701 C3D2  
                             l21093 6CCC                               l21085 6C00  
                             l21077 6B8A                               l21069 6AEA  
                             l22109 D442                               l22133 EB7C  
                             l22125 EB36                               l22117 EAFC  
                             l21157 43EE                               l21149 433A  
                             l21173 456A                               l21261 3E36  
                             l21253 3DF0                               l21245 3D7A  
                             l21237 3D06                               l21229 3C90  
                             l22141 9CF4                               l23021 F7D6  
                             l21333 C93C                               l21325 C8BA  
                             l21317 C866                               l21309 C818  
                             l21501 6318                               l21421 79A6  
                             l21341 ED1E                               l21181 D45A  
                             l22301 8A8A                               l22061 B55A  
                             l22029 B4BE                               l22221 9BDE  
                             l22213 9BA8                               l23013 2D32  
                             l23005 2C5E                               l23101 E45A  
                             l20535 EEF0                               l20527 EED0  
                             l20519 01EE                               l20631 FF76  
                             l20623 F270                               l20615 F232  
                             l20607 F218                               l20295 81D0  
                             l20287 8188                               l20279 8162  
                             l20543 0106                               l20199 BC40  
                             l20463 398A                               l20455 395E  
                             l20439 3882                               l20447 3906  
                             l20391 35DE                               l20383 3598  
                             l20375 3548                               l20367 34EA  
                             l20359 34AE                               l20551 F80E  
                             l20703 C3D4                               l20711 82EE  
                             l21087 6C10                               l21079 6BC2  
                             l22135 EB7E                               l22127 EB44  
                             l22119 EB0C                               l21167 4482  
                             l21159 4404                               l21175 4590  
                             l21263 3E42                               l21255 3E00  
                             l21247 3D90                               l21239 3D16  
                             l22143 9D04                               l23023 F7F0  
                             l21327 C8C6                               l21319 C884  
                             l21511 63E6                               l21503 638C  
                             l21415 7940                               l21407 78F4  
                             l21191 D4EE                               l21183 D468  
                             l22303 8A9A                               l22063 B56C  
                             l22047 B50A                               l22207 9B60  
                             l23007 2CB8                               l23111 E4A8  
                             l23103 E466                               l23031 F550  
                             l20537 EEFC                               l20529 EED4  
                             l20617 F23A                               l20609 F21C  
                             l20297 81E2                               l20289 81A6  
                             l20545 0108                               l20641 E65E  
                             l20633 E648                               l20473 3A34  
                             l20465 39A8                               l20457 3974  
                             l20449 3916                               l20393 35FE  
                             l20385 35A0                               l20377 3556  
                             l20369 3506                               l20553 F81A  
                             l20561 FFB4                               l20705 C3E8  
                             l20801 85C8                               l20721 8300  
                             l21097 6D46                               l22137 EB88  
                             l22129 EB4E                               l21169 4554  
                             l21281 3EF8                               l21265 3E6C  
                             l21273 3E9A                               l21249 3DAC  
                             l21257 3E10                               l23121 CC2E  
                             l22161 9DF4                               l22153 9D90  
                             l22145 9D1E                               l23025 F800  
                             l23017 F7B6                               l21329 C8D0  
                             l21521 6444                               l21513 6402  
                             l21505 63C4                               l21441 7AFC  
                             l21433 7A40                               l21425 79C2  
                             l21417 7978                               l21409 790C  
                             l21345 ED2A                               l21353 ED6E  
                             l21337 ECDE                               l21361 DD00  
                             l21185 D47A                               l22321 8B1A  
                             l22313 8ADC                               l22305 8AAA  
                             l22081 B616                               l22065 B57E  
                             l22057 B538                               l22049 B51E  
                             l22241 9CD6                               l22209 9B8C  
                             l23009 2D0A                               l23113 E4B8  
                             l23105 E476                               l23041 F594  
                             l23033 F560                               l20539 EF12  
                             l20571 014A                               l20627 FF62  
                             l20619 F23E                               l20299 81EE  
                             l20547 0124                               l20651 E69E  
                             l20643 E662                               l20635 E650  
                             l20483 3A9C                               l20475 3A4A  
                             l20467 39CC                               l20459 397C  
                             l20395 3622                               l20379 3572  
                             l20555 F838                               l20563 FFBE  
                             l20707 C3EE                               l20803 85CC  
                             l20731 834E                               l20723 8302  
                             l22091 D34C                               l21291 3F70  
                             l21283 3F18                               l21275 3EC6  
                             l21267 3E7C                               l21259 3E26  
                             l21195 3AF8                               l23131 CCFC  
                             l23123 CC92                               l22171 9ECC  
                             l22163 9E18                               l22147 9D38  
                             l22155 9DA2                               l22139 9CDA  
                             l23019 F7C6                               l21531 64AC  
                             l21507 63E0                               l21427 79D8  
                             l21435 7A6C                               l21419 798E  
                             l22251 DC16                               l21347 ED4A  
                             l21339 ECFE                               l21187 D4D0  
                             l21179 D446                               l22315 8AEC  
                             l22307 8ABC                               l22067 B590  
                             l22059 B548                               l22075 B5A6  
                             l21611 875A                               l21603 86F6  
                             l22411 01CE                               l22403 018A  
                             l22331 0000                               l22235 9C28  
                             l22227 9BE4                               l22219 9BC2  
                             l23107 E47A                               l23115 E4BC  
                             l23051 EE12                               l23043 F5AA  
                             l23211 17FA                               l23203 17CE  
                             l24011 95C8                               l20581 F772  
                             l20573 015E                               l20629 FF6A  
                             l20653 E6BA                               l20645 E666  
                             l20637 E656                               l20477 3A6A  
                             l20469 3A00                               l20485 3AB8  
                             l20397 3658                               l20389 35AE  
                             l20557 F858                               l20821 8EB6  
                             l20813 8E68                               l20741 83E4  
                             l20733 8372                               l20725 830E  
                             l20709 82E6                               l22093 D35E  
                             l21293 3F80                               l21197 3B08  
                             l23125 CCE4                               l23117 CBE8  
                             l23141 F198                               l21701 A0C6  
                             l22173 9EDC                               l22165 9E50  
                             l22157 9DB6                               l22149 9D8A  
                             l21541 64CC                               l21517 6408  
                             l21453 7B4A                               l21445 7B02  
                             l21437 7AB2                               l22253 DC42  
                             l22245 DBDC                               l21373 DD50  
                             l21365 DD0C                               l21381 DD94  
                             l21357 DCC0                               l21189 D4E2  
                             l22325 8B38                               l22317 8B00  
                             l22309 8ACA                               l22085 B648  
                             l22077 B5B2                               l21621 87FA  
                             l21613 876E                               l21605 8710  
                             l22501 0686                               l22421 025E  
                             l22413 01EE                               l22405 01A6  
                             l22341 0036                               l22333 000C  
                             l22237 9C76                               l22229 9C14  
                             l22181 9AA8                               l23109 E49C  
                             l23061 EE6C                               l23053 EE14  
                             l23045 F5B0                               l23037 F56C  
                             l23029 F54C                               l23301 1D44  
                             l23221 186A                               l23213 1816  
                             l23205 17E4                               l20495 F8BA  
                             l20583 F78E                               l20575 F758  
                             l20567 0128                               l20591 FBC2  
                             l20663 E6F2                               l20655 E6CA  
                             l20647 E67E                               l20639 E65A  
                             l20671 E37C                               l20823 8EC2  
                             l20815 8E8E                               l20807 8E56  
                             l20751 843E                               l20743 840A  
                             l20735 8380                               l20727 8332  
                             l20719 82F8                               l20911 E782  
                             l22095 D378                               l21295 3F96  
                             l21279 3EE2                               l21199 3B20  
                             l23119 CC24                               l23151 F1CE  
                             l23143 F1A4                               l23135 F170  
                             l23071 D156                               l21391 F724  
                             l21703 A0F8                               l22167 9E7E  
                             l22159 9DE4                               l22175 9EEC  
                             l21535 64B2                               l21527 645C  
                             l21519 6432                               l21471 619E  
                             l21455 7B78                               l21447 7B1C  
                             l21439 7ADE                               l21711 C99A  
                             l22255 DC52                               l22247 DBEC  
                             l21375 DD70                               l21367 DD2C  
                             l21359 DCE0                               l22327 8B9E  
                             l22263 88C2                               l22079 B5E4  
                             l21623 881C                               l21615 877E  
                             l21607 8722                               l22431 02DA  
                             l22423 027A                               l22415 0204  
                             l22351 0078                               l22343 0050  
                             l22335 0020                               l22239 9C9C  
                             l22191 9B04                               l22183 9AB8  
                             l23063 EE80                               l23055 EE32  
                             l23047 F5B2                               l23039 F582  
                             l23303 1D64                               l23231 1908  
                             l23223 18A0                               l23215 1826  
                             l23207 17F4                               l24103 5076  
                             l24031 FF0E                               l24023 95FA  
                             l20497 F8C2                               l20585 F792  
                             l20577 F75A                               l20569 0134  
                             l20593 FBD0                               l20657 E6D6  
                             l20649 E68A                               l20673 E38C  
                             l20681 E3F8                               l20489 3ACA  
                             l20841 8F5E                               l20833 8F06  
                             l20825 8ED4                               l20809 8E5E  
                             l20761 84C6                               l20753 8442  
                             l20737 83A4                               l20729 8338  
                             l20913 E788                               l20921 B650  
                             l21641 FC88                               l22097 D3A0  
                             l22089 D346                               l21297 3FC6  
                             l21289 3F40                               l22601 20CA  
                             l23145 F1B0                               l23137 F18C  
                             l23081 D1B6                               l21385 F6F8  
                             l22169 9EA0                               l21561 65C4  
                             l21529 6494                               l21481 61E4  
                             l21473 61AE                               l21465 7BF4  
                             l21457 7BB2                               l21721 C9F2  
                             l21713 C9AA                               l22257 DCA8  
                             l22249 DC06                               l21801 45CC  
                             l22281 896A                               l22265 88D2  
                             l21625 8844                               l21617 87A4  
                             l21609 8748                               l21633 8892  
                             l22513 06D0                               l22441 0376  
                             l22433 0302                               l22417 0224  
                             l22361 00C6                               l22353 007A  
                             l22345 0062                               l22337 0030  
                             l22185 9AD4                               l23401 A9F2  
                             l23057 EE50                               l23065 EE86  
                             l23321 C000                               l23313 BFA6  
                             l23225 18F2                               l23233 191A  
                             l23161 1576                               l23153 1538  
                             l24113 50E2                               l24105 5090  
                             l24041 FF28                               l24033 FF12  
                             l24009 95A2                               l25001 9736  
                             l20499 F8DE                               l20587 F7A8  
                             l20579 F766                               l20595 FBE2  
                             l20659 E6E6                               l20675 E390  
                             l20667 E354                               l20691 C330  
                             l20683 C294                               l20851 8FCA  
                             l20835 8F1A                               l20843 8F64  
                             l20827 8EE4                               l20819 8EA6  
                             l20763 84E2                               l20755 845E  
                             l20747 8422                               l20739 83AA  
                             l20915 E7A6                               l20907 E770  
                             l20931 B768                               l20923 B66E  
                             l22099 D3D8                               l21299 3FD6  
                             l22611 210C                               l22603 20DA  
                             l23147 F1B4                               l23139 F190  
                             l23091 D21C                               l23075 D180  
                             l23083 D1C2                               l23067 D13E  
                             l21387 F708                               l21395 F752  
                             l21555 653A                               l21547 64EC  
                             l21491 6264                               l21483 61FA  
                             l21467 7C6A                               l21459 7BCE  
                             l21731 CA74                               l21723 CA20  
                             l21715 C9B2                               l21707 C968  
                             l22259 DCBA                               l21571 F128  
                             l21811 4656                               l21803 45DC  
                             l22291 8A2A                               l22283 899C  
                             l22267 8904                               l21635 88AC  
                             l21627 886A                               l21619 87C6  
                             l22523 0762                               l22515 06FE  
                             l22507 06AC                               l22451 03EC  
                             l22443 039C                               l22435 0320  
                             l22419 0242                               l22363 00D4  
                             l22355 0092                               l22371 00E0  
                             l22187 9AFE                               l22179 9AA8  
                             l23411 AA34                               l23403 AA04  
                             l23059 EE68                               l23331 C03E  
                             l23315 BFBC                               l23251 19EE  
                             l23243 197E                               l23235 1952  
                             l23219 182C                               l23307 1DA0  
                             l23163 1596                               l23155 1540  
                             l24211 5F00                               l24203 5EA2  
                             l24051 FB30                               l24131 518C  
                             l24123 5136                               l24115 50FC  
                             l24043 FF2A                               l24035 FF14  
                             l24027 FF04                               l24019 95DE  
                             l25011 9776                               l25003 9746  
                             l20597 FBFA                               l20589 FBBA  
                             l20677 E3B8                               l20669 E36C  
                             l20693 C34E                               l20685 C2B6  
                             l20853 8FD8                               l20861 9022  
                             l20845 8F7A                               l20837 8F2A  
                             l20829 8EF0                               l20941 E7B8  
                             l20773 8524                               l20765 84E6  
                             l20757 8472                               l20749 8432  
                             l20909 E77E                               l20925 B6C0  
                             l20933 B7E2                               l21645 FC9A  
                             l22701 2524                               l22621 2164  
                             l21661 C406                               l23149 F1B8  
                             l23085 D1E6                               l23077 D1B0  
                             l23093 D228                               l23069 D14E  
                             l23501 C6BA                               l21493 629C  
                             l21557 6574                               l21485 6230  
                             l21477 61E4                               l21733 CA8C  
                             l21725 CA4C                               l21717 C9DE  
                             l21709 C978                               l21573 F166  
                             l21565 F0EA                               l21901 4962  
                             l21821 46AC                               l21813 4668  
                             l21805 45E4                               l21741 F274  
                             l22293 8A4E                               l22285 89CE  
                             l22277 8936                               l21637 88B8  
                             l21581 862E                               l22541 093C  
                             l22525 07B2                               l22517 0740  
                             l22461 0454                               l22453 0402  
                             l22429 029C                               l22381 0114  
                             l22373 00EA                               l22357 00A8  
                             l22349 0068                               l23413 AA44  
                             l23421 AA5E                               l23405 AA14  
                             l23333 C046                               l23317 BFE6  
                             l23325 C00C                               l23309 1DB0  
                             l23261 1A66                               l23253 1A0E  
                             l23245 198E                               l23237 196A  
                             l23157 154C                               l24221 5F60  
                             l24213 5F16                               l24205 5ECE  
                             l24301 D6EC                               l17101 F6D4  
                             l24061 FB52                               l24053 FB34  
                             l24133 51BC                               l24125 514A  
                             l24117 510C                               l24109 50A4  
                             l24141 527E                               l24045 FF2E  
                             l24037 FF20                               l24029 FF08  
                             l25021 97CA                               l25013 9784  
                             l25005 9758                               l25101 7E3A  
                             l20679 E3D6                               l20695 C36A  
                             l20687 C2C2                               l20871 9082  
                             l20855 8FE8                               l20847 8F96  
                             l20839 8F3A                               l20783 8558  
                             l20791 859A                               l20775 8530  
                             l20767 8502                               l20759 848E  
                             l20927 B6D0                               l20919 B64C  
                             l22711 2592                               l22703 2536  
                             l22623 2174                               l22615 2112  
                             l22607 20E0                               l21671 C4B0  
                             l21663 C428                               l23087 D216  
                             l23079 D1B2                               l23511 F47C  
                             l21751 FA50                               l21559 6590  
                             l21495 6300                               l21399 78E4  
                             l21735 CA9C                               l21567 F11C  
                             l21903 4972                               l21911 499E  
                             l21831 46F0                               l21823 46BE  
                             l21815 4682                               l21807 4622  
                             l21743 F290                               l22295 8A66  
                             l22279 8964                               l22287 89E4  
                             l21591 867A                               l22551 0A02  
                             l22543 095E                               l22535 08DC  
                             l22527 07C6                               l22471 0512  
                             l22463 04A4                               l22455 043C  
                             l22391 0152                               l22383 0124  
                             l22375 0100                               l22367 00DA  
                             l22359 00B6                               l22199 9B1A  
                             l23095 E418                               l23423 AA78  
                             l23407 AA20                               l23351 C0C2  
                             l23335 C07C                               l23343 C09C  
                             l23327 C01E                               l23319 BFFC  
                             l23271 1B78                               l23263 1AC6  
                             l23255 1A50                               l23247 19AE  
                             l23191 1718                               l23183 164C  
                             l23175 15BC                               l23167 159C  
                             l23159 1566                               l24231 60A4  
                             l24223 5F74                               l24215 5F2A  
                             l24207 5EDE                               l24311 D738  
                             l24303 D706                               l17111 F6DE  
                             l17103 F6D6                               l24063 FB54  
                             l24055 FB38                               l24151 5326  
                             l24135 51C4                               l24127 5158  
                             l24119 511E                               l24143 52A6  
                             l24071 4F54                               l24047 FF30  
                             l24039 FF24                               l25031 9822  
                             l25023 97D8                               l25015 979E  
                             l25111 7E78                               l25103 7E3E  
                             l20697 C396                               l20689 C2E0  
                             l20881 90D8                               l20873 9092  
                             l20857 8FF8                               l20849 8FA6  
                             l20961 E854                               l20945 E818  
                             l20953 E81E                               l20793 85AC  
                             l20785 8578                               l20769 8514  
                             l20929 B74A                               l21657 FCC2  
                             l21649 FCA0                               l22721 2D4A  
                             l22705 257C                               l22641 2202  
                             l22625 2190                               l22609 20FC  
                             l22617 214A                               l21681 C536  
                             l21673 C4CC                               l21665 C434  
                             l23089 D218                               l23505 F460  
                             l21753 FA68                               l21489 6236  
                             l21737 CAAE                               l21729 CA6C  
                             l21921 49EA                               l21913 49BA  
                             l21905 4982                               l21833 4700  
                             l21825 46CE                               l21817 4692  
                             l21809 4652                               l21761 BCD6  
                             l21745 F2AA                               l22289 8A1A  
                             l21593 868C                               l21585 863C  
                             l21577 85D6                               l22553 0A38  
                             l22545 0994                               l22537 0918  
                             l22529 0852                               l22481 0554  
                             l22449 03CE                               l22393 0168  
                             l22377 010E                               l23097 E428  
                             l23425 AA8A                               l23417 AA4E  
                             l23409 AA30                               l23361 C0FC  
                             l23353 C0D4                               l23345 C0B0  
                             l23329 C02A                               l23273 1BAE  
                             l23281 1C0A                               l23265 1B14  
                             l23249 19C0                               l23193 1734  
                             l23185 1686                               l23177 161A  
                             l23169 15B6                               l23441 B9EC  
                             l23433 B98C                               l23601 8C96  
                             l24241 60F8                               l24233 60B4  
                             l24217 5F3E                               l24209 5EFA  
                             l24225 5F96                               l17201 C21E  
                             l24305 D716                               l24401 5B78  
                             l24321 588A                               l17121 F6E8  
                             l17113 F6E0                               l17105 F6D8  
                             l17041 F696                               l24065 FB68  
                             l24057 FB3C                               l24049 FB2C  
                             l24153 5384                               l24145 52B6  
                             l24137 522C                               l24129 515E  
                             l24081 4F92                               l24073 4F72  
                             l16161 01B2                               l25033 9832  
                             l25017 97B4                               l25009 976E  
                             l25025 97E0                               l25201 ED78  
                             l25113 7E7C                               l25105 7E58  
                             l25041 7CA0                               l23523 026E  
                             l20971 E58E                               l20699 C3B2  
                             l20883 90E0                               l20867 905C  
                             l20859 901C                               l20955 E82C  
                             l20939 E7AA                               l20787 8584  
                             l20779 8544                               l22811 320A  
                             l22731 2D9A                               l22723 2D64  
                             l22651 2260                               l22643 222E  
                             l22635 21AA                               l22571 1DEE  
                             l21683 C54A                               l21675 C4F8  
                             l21667 C452                               l23515 F4A2  
                             l23507 F464                               l21755 FA82  
                             l21691 9F10                               l21931 4A5A  
                             l21923 49F6                               l21907 4986  
                             l21851 4772                               l21835 470C  
                             l21819 469A                               l21843 472A  
                             l21763 BCE6                               l21747 F2E2  
                             l22299 8A7A                               l21595 869E  
                             l21587 8656                               l21579 8602  
                             l22547 09A4                               l22555 0A96  
                             l22539 0928                               l22491 05A4  
                             l22483 055C                               l23427 AA98  
                             l23419 AA5A                               l23371 A8F6  
                             l23355 C0E2                               l23347 C0B6  
                             l23531 ACA6                               l23283 1C58  
                             l23275 1BF4                               l23291 1CD4  
                             l23267 1B26                               l23195 174A  
                             l23187 16E4                               l23179 1636  
                             l23451 BAA8                               l23443 B9FE  
                             l23435 B9A6                               l23611 8CF0  
                             l23603 8CBE                               l24251 616A  
                             l24243 610E                               l24227 606C  
                             l24219 5F4C                               l24235 60BA  
                             l24171 5D5A                               l24163 5D0C  
                             l17211 C248                               l17203 C220  
                             l16171 FA9C                               l24411 5BE2  
                             l24403 5B90                               l24331 58F4  
                             l24323 58A6                               l24315 5870  
                             l17123 F6EA                               l17115 F6E2  
                             l17107 F6DA                               l17051 F6A2  
                             l17043 F69A                               l24059 FB4E  
                             l24155 538A                               l24147 52D6  
                             l24139 5240                               l24091 5008  
                             l24083 4FB2                               l24075 4F82  
                             l24067 4F26                               l16163 01B6  
                             l17131 FD04                               l25035 986E  
                             l25019 97B8                               l25027 97F2  
                             l25211 EDEE                               l25203 ED7E  
                             l25131 7F30                               l25107 7E6A  
                             l25115 7E92                               l25051 7CF6  
                             l25043 7CBE                               l20973 E634  
                             l20965 FE98                               l20877 90AC  
                             l20869 906E                               l20885 90EA  
                             l20957 E830                               l20893 E6FC  
                             l22805 3142                               l22813 322E  
                             l22741 2E34                               l22733 2DB4  
                             l22725 2D74                               l22717 2D36  
                             l20981 FF9C                               l22661 22B8  
                             l22653 227A                               l22645 224C  
                             l22637 21D6                               l22581 1E48  
                             l22573 1DFE                               l22565 1DB4  
                             l21677 C514                               l21669 C492  
                             l21685 C550                               l23509 F474  
                             l21693 9F2A                               l21925 4A06  
                             l21909 4996                               l21861 481E  
                             l21853 4784                               l21845 475A  
                             l21837 4714                               l21829 46D4  
                             l21781 BD90                               l21773 BD2E  
                             l21757 BCA4                               l21597 86B6  
                             l21589 8668                               l21941 B320  
                             l22557 0AA2                               l22549 09CC  
                             l22485 0578                               l22477 052E  
                             l22469 04C6                               l22397 016E  
                             l22389 0136                               l22901 26DE  
                             l23429 AA9C                               l23373 A920  
                             l23381 A946                               l23357 C0E6  
                             l23365 C108                               l23349 C0BC  
                             l23541 ACEE                               l23533 ACB6  
                             l23525 AC5A                               l23293 1CDC  
                             l23285 1C6E                               l23269 1B48  
                             l23197 177A                               l23189 16F6  
                             l23461 BADC                               l23453 BABC  
                             l23445 BA0E                               l23437 B9BE  
                             l23613 8D06                               l23605 8CCC  
                             l23701 F43A                               l24261 FD44  
                             l24253 617C                               l24237 60DE  
                             l24229 607C                               l24181 5DC0  
                             l24245 6116                               l24165 5D1E  
                             l17221 C276                               l17213 C24A  
                             l17205 C226                               l24309 D71C  
                             l16181 FADE                               l16173 FAB2  
                             l24421 5C86                               l24413 5C20  
                             l24405 5BA8                               l24341 5950  
                             l24333 5904                               l24325 58B8  
                             l24317 5872                               l17125 F6EC  
                             l17117 F6E4                               l17109 F6DC  
                             l17061 F6AC                               l17053 F6A4  
                             l17045 F69C                               l24157 538E  
                             l24149 5314                               l24085 4FD4  
                             l24077 4F8A                               l24069 4F2E  
                             l24501 BEC0                               l16165 01B8  
                             l16157 01A4                               l17141 FD1A  
                             l17133 FD0E                               l25221 EA54  
                             l25029 9804                               l25213 EDFA  
                             l25205 EDAE                               l25301 546E  
                             l25141 7F74                               l25133 7F40  
                             l25125 7ED2                               l25117 7EA4  
                             l25109 7E74                               l25061 7D42  
                             l25053 7D1C                               l25045 7CC4  
                             l18111 AB22                               l18103 AAA8  
                             l20967 FEC6                               l20887 90EE  
                             l20879 90CC                               l20959 E836  
                             l20799 85C0                               l20895 E70A  
                             l22815 325E                               l22807 315E  
                             l22751 2EEA                               l22743 2E3C  
                             l22727 2D94                               l22719 2D3E  
                             l20991 F5CA                               l20983 FFA2  
                             l22671 2368                               l22655 22A4  
                             l22639 21EE                               l22663 22D4  
                             l22591 1FA4                               l22583 1EAC  
                             l22567 1DCE                               l21679 C534  
                             l23519 F4CC                               l21695 9F48  
                             l21687 9EF0                               l21927 4A46  
                             l21919 49D0                               l21863 4830  
                             l21855 479A                               l21847 475E  
                             l21839 4724                               l21783 BDB6  
                             l21775 BD4E                               l21767 BCEE  
                             l21759 BCB4                               l21599 86E8  
                             l21943 B332                               l22559 0ABE  
                             l22487 0580                               l22479 0536  
                             l22399 0184                               l22911 276C  
                             l22903 26F2                               l23391 A9B4  
                             l23383 A958                               l23375 A936  
                             l23359 C0F8                               l23551 AD48  
                             l23543 AD16                               l23535 ACC8  
                             l23527 AC68                               l23295 1CEC  
                             l23287 1C76                               l23199 17B2  
                             l23463 BAFC                               l23447 BA50  
                             l23439 B9C8                               l23631 8DA2  
                             l23623 8D44                               l23615 8D0E  
                             l23607 8CD2                               l23703 F43E  
                             l24271 FD6A                               l24263 FD56  
                             l24239 60F0                               l24191 5E4A  
                             l24183 5DD0                               l24247 6128  
                             l24175 5D66                               l24167 5D3C  
                             l17231 C28E                               l17223 C27C  
                             l17215 C250                               l17207 C228  
                             l17151 017C                               l16175 FAC2  
                             l24415 5C3E                               l24423 5C88  
                             l24407 5BAC                               l24351 5990  
                             l24343 5954                               l24335 5914  
                             l24431 5CC2                               l24327 58C6  
                             l24319 5882                               l17127 F6EE  
                             l17119 F6E6                               l17071 F6B6  
                             l17063 F6AE                               l17055 F6A6  
                             l17047 F69E                               l17039 F690  
                             l24095 501C                               l24159 53AC  
                             l24503 BEDA                               l24511 BF70  
                             l16167 01BA                               l16159 01AE  
                             l23711 CAB6                               l17143 FD20  
                             l17135 FD10                               l25231 EAEE  
                             l25223 EA5A                               l25215 EDFE  
                             l25207 EDCE                               l25311 5524  
                             l25303 548C                               l25143 7F7C  
                             l25135 7F52                               l25127 7F24  
                             l25119 7EB6                               l25071 7D72  
                             l25063 7D46                               l25055 7D26  
                             l25047 7CC8                               l25039 7C6E  
                             l18121 AB7C                               l18105 AAB8  
                             l22841 33BA                               l22825 32E0  
                             l22817 3278                               l22809 31BC  
                             l22761 2F92                               l22753 2EFC  
                             l22737 2DBA                               l20993 F5D8  
                             l20985 FFAE                               l20977 FF8C  
                             l22673 2380                               l22665 22F2  
                             l22593 2054                               l22585 1EC2  
                             l22681 23CA                               l22577 1E04  
                             l22569 1DDE                               l23481 C5DC  
                             l23473 C568                               l21697 A022  
                             l21689 9F00                               l21929 4A52  
                             l21881 48D0                               l21873 4870  
                             l21865 4846                               l21857 479E  
                             l21777 BD5E                               l21769 BD1A  
                             l21961 B39E                               l21953 B362  
                             l21945 B33A                               l21937 B304  
                             l22497 05BA                               l22489 059C  
                             l22921 27F6                               l22913 2790  
                             l22905 2714                               l23377 A93A  
                             l23385 A964                               l23369 A8E0  
                             l23553 AD86                               l23545 AD24  
                             l23537 ACD4                               l23529 AC9C  
                             l23561 ADCE                               l23297 1CF4  
                             l23289 1CC2                               l23449 BA6E  
                             l23633 8DB6                               l23609 8CD8  
                             l23705 F440                               l23641 0280  
                             l24273 FD72                               l24265 FD5A  
                             l23801 F9EE                               l24249 6138  
                             l24193 5E58                               l24185 5DE6  
                             l24177 5D76                               l24169 5D4C  
                             l17225 C27E                               l17217 C252  
                             l17209 C246                               l17161 C124  
                             l17153 017E                               l24281 D64A  
                             l16177 FAD6                               l16169 FA9C  
                             l24433 5CD4                               l24425 5C98  
                             l24417 5C4E                               l24361 59EA  
                             l24353 59A0                               l24345 5968  
                             l24337 5926                               l24329 58D8  
                             l17129 F6F0                               l17081 F6C0  
                             l17073 F6B8                               l17065 F6B0  
                             l17057 F6A8                               l17049 F6A0  
                             l24097 5040                               l24089 4FE8  
                             l24513 BF82                               l24505 BF1C  
                             l24521 DAF6                               l23721 CAC2  
                             l23713 CABA                               l17145 FD3C  
                             l17137 FD12                               l25225 EA6C  
                             l25233 EAF6                               l25217 EE0E  
                             l25209 EDDE                               l25241 E9C4  
                             l25321 55D8                               l25313 5536  
                             l25305 54B8                               l25145 7F7E  
                             l25137 7F64                               l25129 7F28  
                             l25081 7DAC                               l25073 7D96  
                             l25065 7D5C                               l25057 7D2C  
                             l25049 7CEE                               l18131 ABE0  
                             l18123 AB7E                               l18115 AB36  
                             l18107 AAC6                               l20899 E76A  
                             l22819 32CA                               l22827 32F2  
                             l22835 334E                               l22843 3406  
                             l22771 2FD4                               l22763 2FA2  
                             l22755 2F1E                               l22747 2E52  
                             l22739 2E0A                               l20995 F5E4  
                             l20987 F5BA                               l20979 FF98  
                             l22691 24A2                               l22683 2400  
                             l22667 230E                               l22595 2070  
                             l22587 1F04                               l22579 1E2E  
                             l23491 C610                               l23483 C5F0  
                             l23475 C582                               l21699 A074  
                             l21891 491E                               l21883 48E8  
                             l21867 485A                               l21875 4884  
                             l21859 47DC                               l21795 4594  
                             l21787 BDF8                               l21779 BD66  
                             l21971 B474                               l21963 B3D2  
                             l21955 B372                               l21947 B35E  
                             l21939 B308                               l22499 0672  
                             l22931 289E                               l22923 2826  
                             l22915 27B2                               l22907 2736  
                             l23387 A976                               l23555 AD8A  
                             l23547 AD2A                               l23539 ACDA  
                             l23299 1D0E                               l23627 8D60  
                             l23619 8D2A                               l23635 8DE6  
                             l23571 FFFA                               l23563 FFDC  
                             l23651 EBC0                               l23643 EBA4  
                             l23707 F454                               l24275 FD76  
                             l24267 FD62                               l24259 FD40  
                             l24195 5E62                               l24187 5DFC  
                             l24179 5D96                               l17227 C284  
                             l17219 C270                               l17171 C144  
                             l17163 C138                               l17155 0180  
                             l17147 016C                               l24291 D68E  
                             l24283 D65E                               l16179 FADC  
                             l24435 5CE2                               l24419 5C7C  
                             l24427 5C9E                               l24371 5A40  
                             l24363 59F2                               l24355 59B2  
                             l24339 593E                               l24451 D962  
                             l24443 D920                               l17091 F6CA  
                             l17083 F6C2                               l17075 F6BA  
                             l17067 F6B2                               l17059 F6AA  
                             l23811 B1A6                               l24099 5062  
                             l24515 BF96                               l24507 BF30  
                             l24531 DB6E                               l24523 DB10  
                             l23731 CB02                               l23723 CAC4  
                             l23715 CABC                               l17139 FD18  
                             l25227 EA90                               l25243 E9E8  
                             l25331 5694                               l25323 55F6  
                             l25315 5552                               l25307 54CA  
                             l25155 7FA8                               l25147 7F82  
                             l25139 7F6C                               l25091 7DFA  
                             l25083 7DD4                               l25075 7D9A  
                             l25067 7D6C                               l25059 7D3E  
                             l18141 AC38                               l18133 ABFE  
                             l18125 AB8A                               l18117 AB3E  
                             l18109 AB0C                               l23573 0258  
                             l19101 4A70                               l22845 3410  
                             l22837 339C                               l22829 3338  
                             l22781 3046                               l22757 2F3E  
                             l22749 2E8C                               l22853 3446  
                             l20997 F5F6                               l20989 F5C6  
                             l22693 24BC                               l22685 2428  
                             l22669 233C                               l22597 2086  
                             l22589 1F1A                               l23493 C622  
                             l23477 C59A                               l21893 4922  
                             l21877 489C                               l21797 45A4  
                             l21789 BE12                               l21981 A534  
                             l21973 B47C                               l21965 B406  
                             l21957 B384                               l21949 B362  
                             l22941 28F2                               l22933 28AC  
                             l22925 2836                               l22917 27C4  
                             l22909 275A                               l23389 A97E  
                             l23557 AD9E                               l23549 AD30  
                             l23469 BB14                               l23637 8E30  
                             l23629 8D9E                               l23581 8BD8  
                             l23565 FFE2                               l23645 EBB6  
                             l23653 EBC2                               l24269 FD66  
                             l24197 5E80                               l24189 5E20  
                             l23901 FE1C                               l17229 C286  
                             l17181 C1A2                               l17173 C146  
                             l17165 C13A                               l17149 017A  
                             l24293 D6A0                               l24285 D66E  
                             l24437 5CEA                               l24429 5CB2  
                             l24381 5AA8                               l24373 5A66  
                             l24365 5A02                               l24357 59C6  
                             l24349 597E                               l16621 F014  
                             l16613 EFD2                               l24461 D984  
                             l24445 D92A                               l17093 F6CC  
                             l17085 F6C4                               l17077 F6BC  
                             l17069 F6B4                               l17157 01BE  
                             l23821 B1F2                               l23805 B160  
                             l24517 BFA2                               l24509 BF50  
                             l24541 DBC0                               l24533 DB80  
                             l24525 DB20                               l23741 CB52  
                             l23733 CB26                               l23725 CAD8  
                             l23717 CABE                               l23709 CAB6  
                             l24701 EF4A                               l25229 EAEA  
                             l25173 023E                               l25245 EA42  
                             l25237 E9AC                               l25165 022E  
                             l25181 AFEA                               l25261 D7EA  
                             l25253 D73C                               l25341 5704  
                             l25333 56A2                               l25325 5646  
                             l25317 5570                               l25309 5508  
                             l25157 7FAC                               l25149 7F94  
                             l25093 7E0C                               l25077 7DA2  
                             l18143 AC46                               l18135 AC00  
                             l18127 ABC6                               l18119 AB4A  
                             l19111 4AAC                               l19103 4A7C  
                             l22847 3420                               l22839 33B2  
                             l22791 308A                               l22775 2FDA  
                             l22767 2FA8                               l22759 2F76  
                             l20999 F602                               l22695 250E  
                             l22687 2438                               l22679 2394  
                             l22599 20B2                               l23495 C632  
                             l23479 C5A4                               l21879 48CC  
                             l21895 493A                               l21799 45B0  
                             l21983 A54A                               l21975 B48C  
                             l21967 B42A                               l21959 B396  
                             l22951 29A0                               l22943 28F4  
                             l22935 28C2                               l22927 2856  
                             l22919 27DA                               l22871 25F0  
                             l22863 25D0                               l23399 A9D4  
                             l23591 8C4E                               l23583 8BDC  
                             l23575 0264                               l23567 FFF4  
                             l23671 EC12                               l23663 EBF4  
                             l23655 EBD6                               l23647 EBBA  
                             l23639 0284                               l24199 5E90  
                             l23903 FE1E                               l17191 C1D0  
                             l17183 C1A4                               l17175 C170  
                             l17167 C13C                               l17159 C120  
                             l24295 D6B6                               l24279 D642  
                             l24439 5CFA                               l24391 5AFA  
                             l24383 5ABA                               l24375 5A82  
                             l24367 5A1E                               l24359 59D8  
                             l16623 F024                               l16615 EFDA  
                             l24463 D990                               l24455 D97A  
                             l24471 D9B4                               l24447 D932  
                             l17095 F6CE                               l17087 F6C6  
                             l17079 F6BE                               l24551 FDD2  
                             l23823 B220                               l23815 B1BA  
                             l23807 B166                               l24543 DBD2  
                             l24535 DB82                               l24527 DB32  
                             l17511 AE1A                               l23743 CB5C  
                             l23735 CB34                               l23751 CB90  
                             l23727 CAE4                               l23719 CAC0  
                             l23911 938A                               l24711 EFC6  
                             l24703 EF66                               l25247 EA46  
                             l25239 E9B2                               l25167 0232  
                             l25191 B15C                               l25183 AFF4  
                             l25263 D80E                               l25255 D73C  
                             l25351 57AE                               l25343 5716  
                             l25335 56C0                               l25327 5666  
                             l25319 5582                               l25159 7FB4  
                             l25095 7E1C                               l18145 AC48  
                             l18137 AC04                               l18129 ABD2  
                             l19201 4C76                               l19121 4ADA  
                             l19113 4ABC                               l19105 4A8A  
                             l22849 3428                               l22793 309C  
                             l22769 2FC4                               l22777 2FF6  
                             l22689 2472                               l23497 C674  
                             l21889 490E                               l21985 A560  
                             l21993 A57E                               l21969 B45A  
                             l22961 2A02                               l22953 29B0  
                             l22945 291C                               l22937 28D0  
                             l22929 288E                               l22881 263E  
                             l22873 2600                               l22857 25B6  
                             l23593 8C5E                               l23585 8C04  
                             l23577 8BA2                               l23569 FFF8  
                             l23681 EC20                               l23673 EC16  
                             l23665 EBF8                               l23657 EBDA  
                             l23649 EBBC                               l23905 FE20  
                             l24561 D84C                               l17193 C1F2  
                             l17185 C1C6                               l17177 C19A  
                             l17169 C13E                               l24297 D6D2  
                             l24289 D674                               l24393 5B0E  
                             l24377 5A9A                               l24369 5A36  
                             l24385 5AC2                               l16617 EFEC  
                             l16625 F026                               l24465 D994  
                             l24473 D9D8                               l24449 D93C  
                             l24801 6E92                               l24721 9122  
                             l24713 90F8                               l17097 F6D0  
                             l17089 F6C8                               l24553 FDE2  
                             l23825 B232                               l23833 B28E  
                             l23817 B1DA                               l23841 B2DC  
                             l23809 B17A                               l24537 DB92  
                             l24529 DB56                               l24545 DBD8  
                             l17521 AEA0                               l17513 AE4C  
                             l23761 F306                               l23745 CB66  
                             l23737 CB3E                               l23729 CAF6  
                             l23921 93D2                               l23913 9392  
                             l24705 EF78                               l25249 EA4E  
                             l25169 023A                               l25185 B076  
                             l25177 AFB8                               l25265 D812  
                             l25257 D760                               l25281 F3E6  
                             l25273 F370                               l25353 57CC  
                             l25345 5728                               l25337 56D2  
                             l25329 5682                               l25097 7E2E  
                             l25089 7DE8                               l18139 AC28  
                             l19211 4CB6                               l19131 4B04  
                             l19123 4AEC                               l19115 4ABE  
                             l19107 4A8C                               l22795 30CA  
                             l22787 305A                               l22779 302E  
                             l23499 C696                               l21979 A50E  
                             l22971 2A90                               l22963 2A16  
                             l22955 29D0                               l22939 28E4  
                             l22947 2930                               l22891 268A  
                             l22883 2642                               l22875 2608  
                             l22867 25D0                               l22859 25CA  
                             l23595 8C70                               l23587 8C10  
                             l23579 8BC6                               l23683 EC32  
                             l23675 EC18                               l23667 EBFC  
                             l23659 EBDE                               l23907 FE22  
                             l24571 D89A                               l24563 D85C  
                             l17195 C1F4                               l17187 C1C8  
                             l17179 C19C                               l24299 D6E2  
                             l24395 5B3A                               l24387 5AD4  
                             l24379 5AA6                               l16627 F04C  
                             l16619 EFFE                               l24475 D9E2  
                             l24467 D998                               l24803 6EAE  
                             l24731 914A                               l24723 912A  
                             l17099 F6D2                               l23843 B2EC  
                             l23835 B2A6                               l23827 B244  
                             l23819 B1EA                               l24491 BE5E  
                             l24483 BE28                               l24539 DBA6  
                             l17531 AF6C                               l17523 AED2  
                             l17515 AE66                               l17507 AE0A  
                             l23763 F32C                               l23747 CB70  
                             l23739 CB48                               l23923 93E6  
                             l23915 939C                               l25187 B0C8  
                             l25179 AFD8                               l25267 D81A  
                             l25259 D7C2                               l25275 F378  
                             l25347 573A                               l25339 56E4  
                             l25355 5822                               l25291 5414  
                             l25371 FC80                               l25363 FC42  
                             l25195 E4D4                               l25099 7E38  
                             l25611 73BC                               l19301 FC20  
                             l19221 4CE0                               l19213 4CC2  
                             l19205 4C8A                               l19133 4B14  
                             l19141 4B3C                               l19125 4AEE  
                             l19109 4A9C                               l19117 4AC4  
                             l22797 30EA                               l22789 306A  
                             l22981 2B56                               l22973 2AD2  
                             l22965 2A36                               l22957 29E0  
                             l22949 2940                               l22893 2690  
                             l22885 2658                               l22877 2620  
                             l22869 25D4                               l23597 8C7C  
                             l23589 8C44                               l23677 EC1A  
                             l23669 EC00                               l23693 F41C  
                             l23685 F3FE                               l23773 DD9E  
                             l24557 01D6                               l24573 D8CC  
                             l24565 D864                               l17197 C1FA  
                             l17189 C1CE                               l24397 5B56  
                             l24389 5AEC                               l24477 D9F6  
                             l24821 701E                               l24813 6F02  
                             l16901 C6E2                               l24741 91A2  
                             l24733 9166                               l24725 913A  
                             l24549 FDB8                               l23845 B300  
                             l23829 B256                               l23853 A34A  
                             l24493 BE6E                               l24485 BE3C  
                             l17533 AF92                               l17525 AF04  
                             l17509 AE16                               l23765 F33E  
                             l26333 CBA8                               l23941 9454  
                             l23933 9422                               l23925 93EA  
                             l23909 9380                               l24709 EFAE  
                             l24901 9980                               l25189 B0D2  
                             l25269 D828                               l25277 F394  
                             l25349 5766                               l25357 584E  
                             l25293 5422                               l25285 53D4  
                             l25365 FC54                               l25197 E58A  
                             l25621 73F4                               l25605 7386  
                             l25541 71BE                               l19231 4D52  
                             l19215 4CC6                               l19207 4C9A  
                             l19223 4CE6                               l19151 4B74  
                             l19143 4B4C                               l19135 4B24  
                             l19127 4AF4                               l19119 4AD4  
                             l19311 FA30                               l19303 FA00  
                             l22799 312C                               l21999 A586  
                             l22991 2B9A                               l22983 2B5A  
                             l22975 2AEE                               l22967 2A46  
                             l22959 29EE                               l22895 26A6  
                             l22887 2668                               l22879 2630  
                             l23599 8C82                               l23679 EC1C  
                             l23695 F420                               l23687 F402  
                             l15863 F960                               l23783 DE02  
                             l23775 DDB0                               l24575 D902  
                             l24567 D87C                               l24559 D82E  
                             l17199 C1FC                               l24399 5B6E  
                             l24479 DA02                               l24831 70EE  
                             l16911 C746                               l16903 C706  
                             l24751 928E                               l24743 91C6  
                             l24735 916E                               l24719 9102  
                             l24671 DE7C                               l23839 B2BA  
                             l23871 A3E2                               l23863 A39C  
                             l23855 A35E                               l24495 BE7E  
                             l17535 AF96                               l17519 AE9C  
                             l23759 F2F6                               l23943 9466  
                             l23919 93C6                               l24911 99C2  
                             l24903 9990                               l25279 F3B8  
                             l25287 53E6                               l25367 FC6A  
                             l25631 74AA                               l25623 7442  
                             l25615 73EA                               l25607 739C  
                             l25551 71D0                               l25543 71C0  
               SDCard_read512@count 05E6                               l19401 DA86  
                             l19241 4DAC                               l19225 4D0C  
                             l19233 4D62                               l19217 4CD4  
                             l19209 4CA8                               l19161 4B88  
                             l19153 4B78                               l19145 4B5E  
                             l19137 4B34                               l19129 4B02  
                             l19321 D5CA                               l19305 FA14  
                             l19313 FA34                               l22993 2BB8  
                             l22985 2B76                               l22977 2B0E  
                             l22969 2A68                               l22897 26BC  
                             l22889 267A                               l23697 F424  
                             l23689 F406                               l23793 F9B0  
                             l15865 F96C                               l15881 CD3A  
                             l15873 CD06                               l23777 DDC8  
                             l23785 DE2E                               l24569 D88C  
                             l24577 D906                               l24817 6F54  
                             l24809 6EB8                               l24833 710A  
                             l16913 C756                               l16905 C70A  
                             l16921 C7D4                               l24761 936E  
                             l24753 92B2                               l24745 91F4  
                             l24737 9176                               l24681 DEFA  
                             l24673 DE80                               l23881 A460  
                             l23873 A3E6                               l23865 A3AE  
                             l23857 A382                               l23849 A316  
                             l24497 BE96                               l24489 BE42  
                             l17529 AF3A                               l17537 AF9A  
                             l23769 F346                               l23961 94EA  
                             l23953 9496                               l23945 9474  
                             l23937 942E                               l23929 9410  
                             l24665 FAE6                               l24921 9A38  
                             l24913 99D0                               l24905 99A4  
                             l25297 5434                               l25289 5404  
                             l25369 FC72                               l25641 752E  
                             l25633 74C0                               l25625 747A  
                             l25609 73A0                               l25561 71FA  
                             l25553 71D4                               l25545 71C4  
                             l25537 71A0                               l19411 DAD4  
                             l19403 DAA4                               l19083 0208  
                             l19091 E2AE                               l19251 4DDC  
                             l19243 4DB6                               l19235 4D88  
                             l19227 4D40                               l19219 4CD6  
                             l19171 4B9C                               l19163 4B8C  
                             l19155 4B7C                               l19147 4B6C  
                             l19139 4B36                               l19323 D5D6  
                             l19315 D544                               l19307 FA20  
                             l22995 2BD4                               l22987 2B7A  
                             l22979 2B3A                               l22899 26D0  
                             l23699 F428                               l23795 F9C2  
                             l15867 F970                               l15883 CD6C  
                             l15875 CD20                               l23787 DE40  
                             l23779 DDF6                               l23891 FDF8  
                             l24579 D918                               l24931 CE22  
                             l24843 7188                               l24835 713C  
                             l24827 7068                               l24819 6F9A  
                             l16915 C766                               l16907 C71A  
                             l24755 92E0                               l24747 9272  
                             l24739 917E                               l24691 DF18  
                             l24683 DEFE                               l24675 DE84  
                             l23883 A49C                               l23867 A3B2  
                             l23859 A386                               l23875 A406  
                             l24499 BEA6                               l24851 E866  
                             l15971 FF50                               l15963 FF34  
                             l23971 9520                               l24667 FB02  
                             l24923 9A56                               l24915 99EA  
                             l25299 545E                               l25643 753E  
                             l25635 74CC                               l25627 748A  
                             l25571 7246                               l25563 721C  
                             l25555 71EC                               l25547 71C8  
                             l25539 71AC                               l19341 CF3E  
                             l19413 DAE4                               l19405 DAB4  
                             l19085 0216                               l19093 E2B8  
                             l19501 7756                               l19421 756E  
                             l19261 4E26                               l19253 4DE0  
                             l19245 4DC4                               l19237 4D98  
                             l19229 4D42                               l19181 4BD8  
                             l19173 4BA0                               l19165 4B90  
                             l19157 4B80                               l19149 4B70  
                             l19333 D638                               l19317 D564  
                             l19309 FA24                               l22997 2BE4  
                             l22989 2B8A                               l23797 F9CA  
                             l15869 F9A2                               l15885 CD8C  
                             l23789 DE72                               l23893 FDFA  
                             l24773 F954                               l24765 F90E  
                             l24941 CE74                               l24933 CE2C  
                             l24845 7194                               l24837 7168  
                             l24829 70E8                               l24781 6DF4  
                             l16917 C77E                               l16909 C72A  
                             l24757 92F2                               l24693 DF32  
                             l24685 DF10                               l24677 DEA8  
                             l23885 A4D4                               l23877 A41C  
                             l23869 A3C6                               l24861 E892  
                             l24853 E878                               l15973 FF56  
                             l15965 FF3C                               l23965 9500  
                             l23949 948A                               l24669 FB1C  
                             l24925 9A66                               l24909 99BA  
                             l24917 9A14                               l25637 750A  
                             l25629 748E                               l25581 72F2  
                             l25573 725E                               l25565 7220  
                             l25557 71F0                               l25549 71CC  
                             l19351 CF74                               l19343 CF4E  
                             l19407 DABE                               l19095 E2D6  
                             l19087 E28A                               l19503 776C  
                             l19511 779C                               l19431 75A2  
                             l19423 7570                               l19271 4EA4  
                             l19255 4DF0                               l19247 4DC6  
                             l19191 4C2A                               l19183 4BF4  
                             l19175 4BA4                               l19167 4B94  
                             l19159 4B84                               l19319 D5A2  
                             l19327 D5E2                               l22999 2C12  
                             l23799 F9D2                               l15887 CD9E  
                             l15879 CD2C                               l23895 FDFC  
                             l23887 FDF0                               l24767 F938  
                             l24951 CEB4                               l24943 CE7C  
                             l24935 CE36                               l24791 6E4C  
                             l24783 6E00                               l24759 931A  
                             l24695 DF34                               l24687 DF14  
                             l24679 DECC                               l23879 A436  
                             l24871 E8EE                               l24863 E8A6  
                             l24855 E880                               l15975 FF5A  
                             l15967 FF4A                               l23983 955A  
                             l23967 9504                               l23959 949E  
                             l24927 9AA2                               l24919 9A26  
                             l25639 751C                               l25591 7338  
                             l25583 72F4                               l25575 72CC  
                             l25567 7232                               l25559 71F4  
                             l19361 CFBC                               l19353 CF84  
                             l19345 CF52                               l19337 CF2E  
                             l19409 DAC4                               l19097 E30C  
                             l19089 E29C                               l19521 781E  
                             l19513 77BA                               l19505 7772  
                             l19441 75D2                               l19425 7580  
                             l19433 75A8                               l19417 7554  
                             l19601 66F8                               l19281 4EF6  
                             l19265 4E50                               l19273 4EA6  
                             l19249 4DD4                               l19257 4DF2  
                             l19193 4C38                               l19185 4C04  
                             l19177 4BA8                               l19169 4B98  
                             l19329 D5F4                               l15889 CDE2  
                             l23897 FE14                               l23889 FDF4  
                             l24769 F946                               l24961 CEEE  
                             l24953 CEC0                               l24937 CE48  
                             l24945 CE86                               l24793 6E62  
                             l24785 6E08                               l24777 6DDA  
                             l24697 DF36                               l24689 DF16  
                             l24873 E8F2                               l24865 E8BA  
                             l24857 E888                               l24849 E858  
                             l15977 FF5C                               l15969 FF4E  
                             l24881 987C                               l25593 7342  
                             l25585 730C                               l25577 72EA  
                             l25569 7238                               l19371 D000  
                             l19363 CFC6                               l19355 CF9A  
                             l19347 CF60                               l19339 CF30  
                             l19531 788A                               l19523 782C  
                             l19515 77E8                               l19507 777C  
                             l19451 7606                               l19443 75D4  
                             l19435 75B8                               l19427 7590  
                             l19419 7560                               l19611 6742  
                             l19603 6710                               l19291 4F14  
                             l19283 4EFC                               l19275 4EB6  
                             l19267 4E5C                               l19259 4E10  
                             l19195 4C3A                               l19187 4C1A  
                             l19179 4BAC                               l23899 FE18  
                             l24971 CF24                               l24963 CF00  
                             l24947 CE98                               l24939 CE62  
                             l24787 6E1E                               l24779 6DE4  
                             l24875 E8F6                               l24867 E8C6  
                             l24859 E890                               l23987 9572  
                             l23979 9534                               l24699 EF40  
                             l24891 98F6                               l24883 9896  
                             l25595 7350                               l25587 731E  
                             l25579 72EE                               l19365 CFE4  
                             l19357 CFA2                               l19373 D006  
                             l19349 CF70                               l19381 DA0C  
                             l19541 78D0                               l19533 78A4  
                             l19525 7856                               l19509 778A  
                             l19461 764A                               l19445 75E4  
                             l19453 760C                               l19437 75BE  
                             l19429 75A0                               l19621 6798  
                             l19613 6752                               l19605 671C  
                             l19285 4EFE                               l19277 4EC6  
                             l19269 4E6A                               l19197 4C44  
                             l19189 4C26                               l24965 CF10  
                             l24957 CECC                               l24949 CEAA  
                             l24797 6E6C                               l24789 6E3C  
                             l24869 E8EA                               l24893 9910  
                             l24885 98A6                               l24981 963C  
                             l24973 9606                               l25597 7366  
                             l25589 7334                               l19375 D016  
                             l19367 CFF4                               l19359 CFAE  
                             l19391 DA3E                               l19383 DA0E  
                             l19295 FBFE                               l19543 78D6  
                             l19535 78BC                               l19519 7812  
                             l19527 785A                               l19471 7672  
                             l19463 764E                               l19455 761C  
                             l19447 75F4                               l19439 75C4  
                             l19711 D2BE                               l19703 D242  
                             l19631 683C                               l19623 67B4  
                             l19615 675E                               l19607 6728  
                             l19287 4F04                               l19279 4EE6  
                             l19199 4C66                               l24967 CF14  
                             l24959 CEE8                               l24799 6E78  
                             l23999 9590                               l24895 992E  
                             l24887 98AE                               l24879 9874  
                             l24991 96C4                               l24983 9644  
                             l24975 960E                               l25599 737C  
                             l19377 D026                               l19369 CFF6  
                             l19393 DA4E                               l19385 DA1C  
                             l19297 FC0A                               l19545 78D8  
                             l19537 78BE                               l19529 7874  
                             l19481 76C0                               l19457 7632  
                             l19449 7604                               l19721 D342  
                             l19713 D2CC                               l19705 D270  
                             l19641 6892                               l19633 684A  
                             l19625 67C0                               l19617 676E  
                             l19609 6736                               l19561 65F4  
                             l19553 65C8                               l19289 4F12  
                             l19801 F864                               l24969 CF20  
                             l24897 9948                               l24889 98C4  
                             l24993 96DE                               l24985 965A  
                             l24977 9612                               l19395 DA64  
                             l19387 DA2C                               l19299 FC1C  
                             l19539 78C2                               l19491 7708  
                             l19483 76D0                               l19475 7686  
                             l19459 7642                               l19467 7662  
                             l19715 D2DE                               l19707 D280  
                             l19651 6914                               l19643 68B0  
                             l19635 6868                               l19627 67DC  
                             l19619 6788                               l19571 6630  
                             l19563 6604                               l19555 65D4  
                             l19811 A124                               l19803 F872  
                             l16899 C6C6                               l24899 9966  
                             l24995 96FC                               l24987 968C  
                             l24979 962C                               l19397 DA6C  
                             l19389 DA30                               l19493 7714  
                             l19485 76D6                               l19477 76A0  
                             l19469 7672                               l19717 D2EC  
                             l19709 D2AE                               l19661 697E  
                             l19653 6922                               l19645 68DE  
                             l19637 6872                               l19629 6806  
                             l19581 6666                               l19573 6636  
                             l19565 6614                               l19557 65E2  
                             l19725 FE60                               l19741 D08C  
                             l19733 D038                               l19821 A20C  
                             l19813 A17A                               l19805 F886  
                             l19901 0B34                               l24997 9716  
                             l24989 96A6                               l19399 DA78  
                             l19495 7732                               l19487 76E6  
                             l19479 76B0                               l19719 D33C  
                             l19671 69D0                               l19663 6998  
                             l19655 694C                               l19639 6880  
                             l19583 6676                               l19575 6644  
                             l19567 661A                               l19559 65E4  
                             l19727 FE76                               l19743 D08E  
                             l19735 D04E                               l19831 A2F4  
                             l19823 A248                               l19815 A18E  
                             l19903 0B44                               l19911 0B6C  
                             l24999 9726                       ___fltol@sign1 050C  
                             l19841 A726                               l19497 7734  
                             l19489 76FA                               l19673 69D2  
                             l19665 69A8                               l19649 6908  
                             l19657 6950                               l19593 66C0  
                             l19585 667C                               l19577 6646  
                             l19569 662A                               l19729 FE86  
                             l19681 FB72                               l19745 D09E  
                             l19833 A304                               l19817 A19C  
                             l19825 A27C                               l19809 A104  
                             l19921 0BB6                               l19913 0B92  
                             l19905 0B54                     __end_of___aldiv D038  
                             l19851 A776                               l19843 A734  
                             l19499 7744                               l19691 E940  
                             l19667 69B2                               l19675 69D8  
                             l19659 696A                               l19595 66CC  
                             l19587 669C                               l19579 6656  
                             l19683 FB82                               l19771 D11C  
                             l19755 D0C8                               l19747 D0A2  
                             l19739 D062                               l19827 A2B8  
                             l19931 0C1E                               l19923 0BCE  
                             l19915 0BA4                               l19907 0B60  
                             l19781 EC60                               l19861 A7A4  
                             l19853 A782                               l19845 A750  
                             l19837 A702                               l19693 E96E  
                             l19677 69DC                               l19669 69C2  
                             l19597 66D6                               l19589 66AC  
                             l19773 D12C                               l19765 D0F0  
                             l19757 D0D2                               l19749 D0B0  
                             l19829 A2CC                               l19933 0C30  
                             l19925 0BD8                               l19917 0BA8  
                             l19909 0B68                               l19791 ECC6  
                             l19783 EC6E                               l19871 A840  
                             l19863 A7E6                               l19855 A78A  
                             l19847 A760                               l19839 A724  
                             l19695 E97E                               l19687 E902  
                             l19599 66EC                               l19767 D0FC  
                             l19759 D0DC                               l19935 0C34  
                             l19919 0BAE                               l19793 FED0  
                             l19785 EC82                               l19777 EC3E  
                             l19881 A8A8                               l19873 A856  
                             l19865 A7EC                               l19857 A796  
                             l19849 A766                               l19697 E9A2  
                             l19689 E930                               l19769 D10C  
                             l19961 0D68                               l19953 0CBE  
                             l19937 0C3A                               l19929 0BF8  
                             l19795 FEDE                               l19787 EC96  
                             l19779 EC4C                               l19883 A8AE  
                             l19875 A870                               l19867 A7F2  
                             l19859 A79E                               l19699 E9A8  
                             l19963 0DA6                               l19955 0CC4  
                             l19939 0C42                               l19947 0C5E  
                             l19891 0AEC                               l19789 EC9A  
                             l19885 A8BE                               l19877 A88A  
                             l19869 A826                               l19797 FD7C  
                             l19981 0E94                               l19965 0DBA  
                             l19973 0E36                               l19957 0CF8  
                             l19949 0C78                               l19893 0AFA  
                     ?_bus_hold_req 0501                               l19879 A898  
                             l19799 FD84                               l19991 0EDA  
                             l19983 0E9C                               l19975 0E70  
                             l19967 0DEE                               l19959 0D36  
                             l19895 0AFE                               l19993 0EEC  
                             l19985 0EA2                               l19977 0E7E  
                             l19969 0DF6                               l19897 0B22  
                             l19889 0AD8                               l19987 0EB4  
                             l19995 0EF4                               l19979 0E8A  
                             l19899 0B2C                               l19997 0EFC  
                             l19989 0EC2                               l19999 0F0C  
                             ?_labs 0504                     __end_of___almod DAF6  
                   __end_of___fladd 4F26                               ?_main 0501  
                             ?_dtoa 051E                               _G2POL 06B9  
                             _G3POL 06BA                     __end_of___fldiv 78E4  
                   __end_of___flneg FE98                               STR_10 F967  
                             STR_11 FAED                               STR_12 FD5B  
                             STR_20 F68E                               STR_21 F5C9  
                             STR_13 F446                               STR_22 FD92  
                             STR_14 FAD4                               STR_30 F35A  
                             STR_15 F9B9                               STR_23 F7F3  
                             STR_31 F78C                               STR_40 FABB  
                             STR_16 F769                               STR_24 F6FE  
                             STR_32 F54D                               STR_41 FA3C  
                             STR_17 F3EB                               STR_33 F3BC  
                             STR_25 F2F6                               STR_26 FFD0  
                             STR_42 FFCB                               STR_34 FC30  
                             STR_18 F722                               STR_50 FED8  
                             STR_43 FFC6                               STR_35 FF9D  
                             STR_19 F522                               STR_27 F257  
                             STR_51 FEE3                               STR_44 FBC1  
                             STR_36 F877                               STR_28 F328  
                             STR_60 FFB7                               STR_52 FF58  
                             STR_37 FC70                               STR_45 F746  
                             STR_61 FFE5                               STR_53 FF60  
                             STR_70 FBAA                               STR_38 F8D5  
                             STR_62 FF68                               STR_54 FFF6  
                             STR_46 FF50                               STR_39 FF9D  
                             STR_71 FB65                               STR_63 FF97  
                             STR_55 FFE9                               STR_47 F4F7  
                             STR_72 FE5E                               STR_80 FA89  
                             STR_64 FFC1                               STR_56 FFF3  
                             STR_48 FEC2                               STR_81 FFF9  
                             STR_73 FE50                               STR_65 FF91  
                             STR_57 FFB2                               STR_49 FECD  
                             STR_74 FFA3                               STR_90 FCE9  
                             STR_82 F641                               STR_66 FFBC  
                             STR_58 FF77                               STR_91 FB90  
                             STR_83 FCFC                               STR_75 F9EE  
                             STR_67 FFFC                               STR_59 FF7E  
                             STR_84 FFAD                               STR_92 FF1E  
                             STR_76 F5F2                               STR_68 FB7B  
                             STR_93 FEEE                               STR_69 FBEE  
                             STR_85 F99E                               STR_77 F6DA  
                             STR_78 FC5D                               STR_86 FEA0  
                             STR_94 FE94                               STR_95 FE16  
                             STR_79 FB1E                               STR_87 FAA2  
                             STR_96 FC9A                               STR_88 FB7C  
                   __end_of___flmul 69EE                               STR_97 FC9A  
                             STR_89 FE34                               STR_98 FF1E  
                             STR_99 FEEE                     __end_of_dbc_2nd DD9E  
               SDCard_read512@retry 05F0                     __end_of___flsub FBB8  
                   __end_of___fltol D13E                     __end_of_dbc_1st ED78  
                             ?_stoa 050E                     __end_of___lldiv EBA0  
                       ?_SDCard_crc 0504                               u20300 CD5C  
                             u20310 CD6C                               u20311 CD68  
                             ?_xtoa 051E                               u30000 A608  
                             u20320 CD8C                               u30001 A604  
                             u20321 CD88                               u30010 A61A  
                             u20330 CD9E                               u30011 A616  
                             u20331 CD9A                               u20307 CD52  
                             u30100 B548                               u30020 A668  
                             u20340 CDE2                               u30101 B544  
                             u30021 A664                               u20341 CDDE  
                             u30110 B55A                               u30030 A6CC  
                             u20270 F992                               u20350 CE04  
                             u30111 B556                               u30031 A6C8  
                             u30200 D404                               u30120 B56C  
                             u30040 A6E2                               u31000 0A38  
                             u20280 F9A2                               u30201 D400  
                             u30121 B568                               u30041 A6DE  
                             u31001 0A34                               u20281 F99E  
                             u20345 CDD2                               u30210 D416  
                             u31010 1DDE                               u30130 B57E  
                             u30050 A6FC                               u20290 CD20  
                             _LATA0 25F0                               u30211 D412  
                             u31011 1DDA                               u30131 B57A  
                             u30051 A6F8                               u20347 CDC8  
                             u20291 CD1C                               _LATA1 25F1  
                             u30220 EB22                               u31100 20CA  
                             u31020 1DFE                               u30140 B590  
                             u30060 B4BE                               u30300 9AD4  
                             u21260 EFEC                               _LATA2 25F2  
                             u30221 EB1E                               u31101 20C6  
                             u31021 1DFA                               u30141 B58C  
                             u30061 B4BA                               u30301 9AD0  
                             u20277 F988                               u20357 CDFA  
                             u21261 EFE8                               _LATA3 25F3  
                             u30230 EB44                               u31110 20FC  
                             u31030 1E2E                               u30150 B5A2  
                             u30070 B506                               u30310 9AFE  
                             u21270 EFFE                               _LATA4 25F4  
                             u30231 EB40                               u31111 20F8  
                             u31031 1E2A                               u30151 B59E  
                             u30071 B502                               u30311 9AFA  
                             u21271 EFFA                               u30160 D35E  
                             u30240 EB6C                               u31200 2380  
                             u31120 2160                               u31040 1E48  
                             u32000 CC24                               u30400 DC16  
                             u30080 B51E                               u30320 9B1A  
                             u21280 F010                               _LATA6 25F6  
                             u30161 D35A                               u30241 EB68  
                             u31201 237C                               u31121 215C  
                             u31041 1E44                               u32001 CC20  
                             u30401 DC12                               u30081 B51A  
                             u30321 9B16                               u21281 F00C  
                             u30170 D378                               u31210 23B4  
                             u31130 21AA                               u31050 1EC2  
                             u30250 9D04                               u30410 DC52  
                             u30090 B530                               u30330 9B5A  
                             u21290 F04C                               _LATE0 2610  
                             u30171 D374                               u31131 21A6  
                             u31051 1EBE                               u30251 9D00  
                             u30411 DC4E                               u30091 B52C  
                             u30331 9B56                               u21291 F048  
                             _LATE1 2611                               u23300 AAC6  
                             u30180 D3A0                               u31300 2DB4  
                             u31220 2400                               u31140 21EE  
                             u32020 CCE4                               u30260 9D1E  
                             u30500 8A06                               u30420 88F4  
                             u30340 9BA4                               u32100 16B2  
                             u22500 AED2                               _LATE2 2612  
                             u23301 AAC2                               u30181 D39C  
                             u31301 2DB0                               u31221 23FC  
                             u31141 21EA                               u32021 CCE0  
                             u30261 9D1A                               u30341 9BA0  
                             u22501 AECE                               u23310 AB22  
                             u30190 D3D8                               u31310 2E34  
                             u31230 2472                               u31150 224C  
                             u31070 1F1A                               u32030 F1CE  
                             u30270 9D38                               u30510 8A1A  
                             u30430 8904                               u30350 9BBE  
                             u32110 16F6                               u22510 AEF4  
                             u23311 AB1E                               u30191 D3D4  
                             u31311 2E30                               u31231 246E  
                             u31215 23AA                               u31151 2248  
                             u31071 1F16                               u32015 CCAC  
                             u32031 F1CA                               u30271 9D34  
                             u30511 8A16                               u30431 8900  
                             u30351 9BBA                               u32111 16F2  
                             u23320 AB78                               u25000 E30C  
                             u31320 2E4E                               u31240 24A2  
                             u31160 227A                               u31080 1FA4  
                             u30280 9D8A                               u30520 8A76  
                             u30440 8926                               u30600 0030  
                             u30360 9BDE                               u32200 196A  
                             u32120 1718                               u32040 1576  
                             u33000 DE72                               u22520 AF04  
                             u23321 AB74                               u25001 E308  
                             u31321 2E4A                               u31241 249E  
                             u31161 2276                               u31081 1FA0  
                             u31065 1EE4                               u30281 9D86  
                             u30521 8A72                               u30601 002C  
                             u30361 9BDA                               u32201 1966  
                             u32121 1714                               u32105 16A8  
                             u32041 1572                               u33001 DE6E  
                             u22521 AF00                               u23330 ABC2  
                             u25010 4A8A                               u31410 309C  
                             u31330 2E8C                               u31250 24BC  
                             u31170 22A4                               u31090 2086  
                             u30290 9DF4                               u30530 8AAA  
                             u30450 8936                               u30610 0062  
                             u30370 9C24                               u32130 174A  
                             u32050 1596                               u20690 FAB0  
                             u33010 B1B6                               u22530 AF26  
                             u22450 AE3C                               u23331 ABBE  
                             u25011 4A86                               u31411 3098  
                             u31331 2E88                               u31251 24B8  
                             u31171 22A0                               u31091 2082  
                             u30291 9DF0                               u30531 8AA6  
                             u30507 89FC                               u30451 8932  
                             u30427 88EA                               u30611 005E  
                             u30371 9C20                               u32131 1746  
                             u32051 1592                               u20691 FAAC  
                             u33011 B1B2                               _U3BRG 02D4  
                             u23340 ABE0                               u25100 4BD8  
                             u25020 4A9C                               u31500 32CA  
                             u31420 30CA                               u31340 2EB8  
                             u31260 250E                               u31180 22F2  
                             u30540 8ABC                               u30460 898C  
                             u30700 0184                               u30620 0092  
                             u30380 9C76                               u32300 1BF4  
                             u32220 19C0                               u32140 17CA  
                             u32060 15B6                               u21900 C766  
                             u33100 B2DC                               u33020 B1EA  
                             u22540 AF36                               u22460 AE4C  
                             u23341 ABDC                               u25101 4BD4  
                             u25021 4A98                               u31501 32C6  
                             u31421 30C6                               u31405 3076  
                             u31261 250A                               u31181 22EE  
                             u30541 8AB8                               u30701 0180  
                             u30621 008E                               u30381 9C72  
                             u32301 1BF0                               u32221 19BC  
                             u32141 17C6                               u32061 15B2  
                             u21901 C762                               u33101 B2D8  
                             u33021 B1E6                               u22541 AF32  
                             u22517 AEEA                               u22461 AE48  
                             u23350 ABF0                               u25110 4BF0  
                             u25030 4AAC                               u31510 3338  
                             u31430 312C                               u31350 2EFC  
                             u31270 257C                               u31190 233C  
                             u30550 8ACA                               u30470 899C  
                             u30710 01CA                               u30630 00B6  
                             u30390 9CD6                               u32310 1C6E  
                             u32230 19EE                               u32150 17E4  
                             u32070 161A                               u33110 B2EC  
                             u33030 B232                               u22550 AF5C  
                             u22470 AE88                               u23351 ABEC  
                             u25111 4BEA                               u25031 4AA8  
                             u31511 3334                               u31431 3128  
                             u31351 2EF8                               u31271 2578  
                             u31191 2338                               u30551 8AC6  
                             u30471 8998                               u30447 891C  
                             u30711 01C6                               u30631 00B2  
                             u30391 9CD2                               u32311 1C6A  
                             u32231 19EA                               u32215 199A  
                             u32151 17E0                               u32071 1616  
                             u33111 B2E8                               u33031 B22E  
                             u23360 ABFE                               u26000 696A  
                             u25200 4CD4                               u25120 4BF2  
                             u25040 4AEC                               u31520 33B2  
                             u31440 315E                               u31360 2F1E  
                             u31280 2D74                               u30560 8AD8  
                             u30480 89BE                               u30720 0204  
                             u30640 00C6                               u31600 26A6  
                             u32400 A8F6                               u32320 1D44  
                             u32240 1A50                               u32160 1816  
                             u32080 1648                               u34000 5C3E  
                             u21920 C7D0                               u33040 B244  
                             u33120 A346                               u22560 AF6C  
                             u22480 AE98                               u33200 9486  
                             u23361 ABFA                               u26001 6966  
                             u25201 4CD0                               u25041 4AE8  
                             u31521 33AE                               u31441 315A  
                             u31361 2F1A                               u31345 2EAE  
                             u31281 2D70                               u30561 8AD4  
                             u30721 0200                               u30641 00C2  
                             u31601 26A2                               u32401 A8F2  
                             u32321 1D40                               u32241 1A4C  
                             u32161 1812                               u32081 1644  
                             u34001 5C3A                               u21921 C7CC  
                             u33041 B240                               u33121 A342  
                             u22561 AF68                               u22537 AF1C  
                             u22481 AE94                               u22457 AE32  
                             u33201 9482                               u23370 AC38  
                             u23290 AAB8                               u26010 6998  
                             u25210 4D0C                               u25130 4C1A  
                             u25050 4B02                               u31450 31BC  
                             u31370 2F92                               u31290 2D94  
                             u30570 8B00                               u30490 89CE  
                             u30810 04C2                               u30730 027A  
                             u30650 00D4                               u31610 26BC  
                             u31530 25CA                               u32410 A920  
                             u32330 BFBC                               u32250 1AC6  
                             u32170 186A                               u32090 1686  
                             u34010 5C4E                               u21930 C7F6  
                             u33050 B256                               u33130 A398  
                             u22570 AF92                               u22490 AEC2  
                             u33210 94FC                               u23371 AC34  
                             u23291 AAB4                               u26011 6994  
                             u25211 4D08                               u25131 4C16  
                             u25051 4AFE                               u31451 31B8  
                             u31371 2F8E                               u31291 2D90  
                             u30571 8AFC                               u30491 89CA  
                             u30467 8982                               u30811 04BE  
                             u30731 0276                               u30651 00D0  
                             u31611 26B8                               u31531 25C6  
                             u32411 A91C                               u32331 BFB8  
                             u32251 1AC2                               u32171 1866  
                             u32091 1682                               u34011 5C4A  
                             u21915 C790                               u33051 B252  
                             u33131 A394                               u33211 94F8  
                             u23380 AC46                               u26100 D33C  
                             u26020 69D0                               u25300 4E26  
                             u25220 4D52                               u25140 4C38  
                             u25060 4B14                               u31380 2FC4  
                             u30580 8B16                               u30820 052A  
                             u30740 0298                               u30660 010E  
                             u31700 28E4                               u31620 26D0  
                             u31540 2600                               u32420 A976  
                             u32340 BFE6                               u32180 18A0  
                             u32500 BA0E                               u34020 5C6C  
                             u21940 C806                               u21860 C704  
                             u33060 B26C                               u33140 A3AE  
                             u33300 4F54                               u34100 BE3C  
                             u22580 AFB6                               u33220 9520  
                             u23381 AC42                               u26101 D338  
                             u26021 69CC                               u25301 4E22  
                             u25221 4D4E                               u25141 4C34  
                             u25061 4B10                               u31381 2FC0  
                             u30581 8B12                               u30821 0526  
                             u30805 046C                               u30741 0294  
                             u30661 010A                               u31701 28E0  
                             u31621 26CC                               u31541 25FC  
                             u32421 A972                               u32341 BFE2  
                             u32181 189C                               u32501 BA0A  
                             u34021 5C68                               u21941 C802  
                             u33061 B266                               u33141 A3AA  
                             u34101 BE38                               u22581 AFB2  
                             u22557 AF52                               u22477 AE7E  
                             u33221 951C                               u26030 E930  
                             u26110 FE76                               u25310 4E3C  
                             u25230 4D88                               u25150 4C58  
                             u25070 4B24                               u31390 3046  
                             u30590 8B34                               u30910 075E  
                             u30830 0554                               u30750 0320  
                             u30670 0124                               u31710 28F2  
                             u31630 26DE                               u31550 2630  
                             u32430 A9B4                               u32350 C03E  
                             u32190 18F2                               u34030 5CB2  
                             u21870 C71A                               u33070 B26E  
                             u33150 A3C6                               u33310 4F82  
                             u34110 BE6E                               u33230 9530  
                             u26031 E92C                               u26111 FE72  
                             u25311 4E38                               u25231 4D84  
                             u25151 4C54                               u25071 4B20  
                             u31391 3042                               u30591 8B30  
                             u30487 89B4                               u30911 075A  
                             u30831 0550                               u30751 031C  
                             u30671 0120                               u31711 28EE  
                             u31631 26DA                               u31551 262C  
                             u32431 A9B0                               u32351 C03A  
                             u32191 18EE                               u34031 5CAE  
                             u21871 C716                               u33151 A3C2  
                             u33311 4F7E                               u34111 BE6A  
                             u33231 952C                               u25400 FC40  
                             u26200 EC6E                               u26040 E96E  
                             u25320 4E50                               u25240 4D98  
                             u25160 4C66                               u25080 4B5E  
                             u26120 D04E                               u27000 BC40  
                             u31480 325E                               u32600 C632  
                             u30920 07C6                               u30840 0578  
                             u30760 0372                               u30680 0132  
                             u31800 2BE4                               u31720 2940  
                             u31640 27DA                               u31560 263E  
                             u32440 A9F2                               u32360 C07C  
                             u32280 1B78                               u32520 BA50  
                             u34040 5CD4                               u21880 C72A  
                             u33080 B28A                               u33160 A41C  
                             u33400 518C                               u33320 4FE4  
                             u34120 BEA6                               u34200 DB80  
                             u33240 9572                               u35000 7E1C  
                             u25401 FC3C                               u26201 EC6A  
                             u26041 E96A                               u25321 4E4C  
                             u25241 4D94                               u25161 4C62  
                             u25081 4B5A                               u26121 D04A  
                             u27001 BC3C                               u31481 325A  
                             u31465 31DA                               u32601 C62E  
                             u30921 07C2                               u30905 071C  
                             u30841 0574                               u30761 036E  
                             u30681 012E                               u31801 2BE0  
                             u31721 293C                               u31641 27D6  
                             u31561 263A                               u32441 A9EE  
                             u32361 C078                               u32281 1B74  
                             u32265 1AF0                               u32521 BA4C  
                             u34041 5CD0                               u21937 C7EC  
                             u21881 C726                               u33081 B286  
                             u33161 A418                               u33401 5188  
                             u33321 4FE0                               u34121 BEA2  
                             u34201 DB7C                               u22577 AF86  
                             u22497 AEB8                               u33241 956E  
                             u35001 7E18                               u26210 ECB8  
                             u26050 E9A2                               u25330 4E6A  
                             u25250 4DC4                               u25170 4C76  
                             u25090 4B6C                               u26130 D082  
                             u25410 FA4E                               u27010 BC5A  
                             u31490 3278                               u30930 08A8  
                             u30850 059C                               u30770 03CA  
                             u30690 0168                               u31810 2C12  
                             u31730 2A46                               u31650 2836  
                             u31570 2658                               u32450 AA44  
                             u32370 C0D4                               u32290 1BAE  
                             u32530 BAA8                               u32514 BA28  
                             u34050 5CE2                               u21890 C756  
                             u33090 B2B6                               u33410 51BC  
                             u33330 5018                               u34130 BEC0  
                             u34210 DB92                               u33250 958C  
                             u33170 9422                               u35010 7E2E  
                             u26211 ECB4                               u26051 E99E  
                             u25331 4E66                               u25251 4DC0  
                             u25171 4C72                               u25091 4B68  
                             u25411 FA4A                               u27011 BC56  
                             u31491 3274                               u31475 3214  
                             u30851 0598                               u30771 03C6  
                             u30691 0164                               u31811 2C0E  
                             u31731 2A42                               u31651 2832  
                             u31571 2654                               u32451 AA40  
                             u32371 C0D0                               u32291 1BAA  
                             u32275 1B30                               u32531 BAA4  
                             u32515 BA22                               u34051 5CDE  
                             u21891 C752                               u21867 C6FA  
                             u33091 B2B2                               u33411 51B8  
                             u33331 5014                               u33307 4F48  
                             u34131 BEBC                               u34211 DB8E  
                             u33251 9588                               u33171 941E  
                             u35011 7E2A                               u27100 8078  
                             u25500 CF60                               u26220 ECC6  
                             u26060 D270                               u25340 4EA4  
                             u25260 4DD4                               u25180 4CA8  
                             u26140 D0B0                               u25420 D584  
                             u26300 A208                               u27020 BC74  
                             u32620 C674                               u30940 08D8  
                             u30860 05B6                               u30780 0402  
                             u31820 2C56                               u31740 2A68  
                             u31660 289E                               u31580 2668  
                             u32460 AA78                               u31900 EE32  
                             u32380 C0F8                               u32540 BABC  
                             u34060 D976                               u33500 535A  
                             u33420 522C                               u33340 5072  
                             u34140 BEDA                               u34220 DBD2  
                             u33260 959E                               u33180 9466  
                             u35100 EDAE                               u35020 7E6A  
                             u27101 8074                               u25501 CF5C  
                             u26221 ECC2                               u26061 D26C  
                             u25341 4EA0                               u25261 4DD0  
                             u25181 4CA4                               u26141 D0AC  
                             u26301 A204                               u27021 BC70  
                             u32621 C670                               u30941 08D4  
                             u30861 05B2                               u30781 03FE  
                             u31821 2C52                               u31741 2A64  
                             u31661 289A                               u31581 2664  
                             u32461 AA74                               u31901 EE2E  
                             u32381 C0F4                               u32541 BAB8  
                             u34061 D972                               u33341 506E  
                             u34141 BED6                               u34221 DBCE  
                             u33261 959A                               u33181 9462  
                             u35101 EDAA                               u35021 7E66  
                             u27110 8086                               u25510 CF9A  
                             u26230 FEDE                               u26070 D2AE  
                             u25350 4EB6                               u25270 4DF0  
                             u25190 4CB6                               u26150 D0C4  
                             u25430 D5A2                               u26310 A22C  
                             u27030 BC82                               u32614 C64C  
                             u32630 F474                               u30950 093C  
                             u30870 0686                               u30790 0450  
                             u31830 2C7E                               u31670 28AC  
                             u31590 267A                               u32470 AA8A  
                             u31910 EEA0                               u32390 C11A  
                             u32710 AD9E                               u32550 BAFC  
                             u34070 D9B0                               u34230 FDE2  
                             u33510 5384                               u33430 5240  
                             u33350 50A0                               u34150 BF30  
                             u33270 95DA                               u33190 9474  
                             u35110 EA6C                               u35030 7EA4  
                             u27111 8082                               u25511 CF96  
                             u26231 FEDA                               u26071 D2AA  
                             u25351 4EB2                               u25271 4DEC  
                             u25191 4CB2                               u26151 D0C0  
                             u26135 D078                               u25431 D59E  
                             u27031 BC7E                               u32615 C646  
                             u32631 F470                               u30951 0938  
                             u30935 089E                               u30871 0682  
                             u30791 044C                               u31671 28A8  
                             u31591 2676                               u32471 AA86  
                             u31911 EE9C                               u32391 C116  
                             u32711 AD9A                               u32551 BAF8  
                             u34071 D9AC                               u34231 FDDE  
                             u33431 523C                               u33351 509C  
                             u34151 BF2C                               u33271 95D6  
                             u33191 9470                               u35111 EA68  
                             u35031 7EA0                               u28000 F644  
                             u27200 81E2                               u27120 80AC  
                             u25520 CFBC                               u25600 DAD4  
                             u26400 A760                               u26080 D2CC  
                             u25360 4EC6                               u25280 4E00  
                             u26160 D0EC                               u25440 D5CA  
                             u26320 A248                               u26240 FDB6  
                             u27040 E058                               u31920 D16A  
                             u32560 C59A                               u32640 F49E  
                             u30960 095E                               u30880 06A8  
                             u31840 2D0A                               u31760 2B56  
                             u31680 28C2                               u32480 B9BE  
                             u32800 8D40                               u32720 FFF2  
                             u33600 5E90                               u34240 D85C  
                             u34080 D9D8                               u34400 DEFA  
                             u33280 FB4C                               u33520 53AC  
                             u33440 527E                               u33360 50DE  
                             u34160 BF82                               u35120 E9C4  
                             u35200 5666                               u35040 7EC6  
                             u28001 F640                               u27201 81DE  
                             u27121 80A8                               u25521 CFB8  
                             u25601 DAD0                               u26401 A75C  
                             u26081 D2C8                               u25361 4EC2  
                             u25281 4DFC                               u26161 D0E8  
                             u25441 D5C6                               u25425 D57A  
                             u26321 A244                               u26241 FDB2  
                             u27041 E054                               u31921 D166  
                             u32561 C596                               u32641 F49A  
                             u30961 095A                               u30881 06A4  
                             u31841 2D06                               u31761 2B52  
                             u31681 28BE                               u32481 B9BA  
                             u32801 8D3C                               u32721 FFEE  
                             u33601 5E8C                               u34241 D858  
                             u34081 D9D4                               u34401 DEF6  
                             u33281 FB48                               u33521 53A8  
                             u33361 50DA                               u34161 BF7E  
                             u35121 E9C0                               u35201 5662  
                             u35041 7EC2                               u28010 F67E  
                             u27210 8204                               u27130 80CE  
                             u25530 CFE4                               u26410 A776  
                             u25610 756E                               u26090 D2EC  
                             u25370 4EE6                               u25290 4E10  
                             u26170 D10C                               u25450 D5F4  
                             u26330 A29C                               u26250 F872  
                             u27050 E0EA                               u31930 D1AE  
                             u32570 C5DC                               u32650 F4C8  
                             u30970 0994                               u30890 06CC  
                             u31850 2D26                               u31770 2B76  
                             u31690 28D0                               u32490 B9FE  
                             u32810 8D5C                               u32730 8BD8  
                             u33610 5EDE                               u34250 D88C  
                             u34090 D9F6                               u33290 FB68  
                             u33530 53D2                               u33450 52A6  
                             u33370 510C                               u34170 BF96  
                             u34410 EF66                               u35130 D7C2  
                             u35210 5682                               u35050 7F40  
                             u28011 F67A                               u27211 8200  
                             u27131 80CA                               u25531 CFE0  
                             u26411 A772                               u25611 756A  
                             u26091 D2E8                               u25371 4EE2  
                             u25291 4E0C                               u26171 D108  
                             u25451 D5F0                               u26315 A222  
                             u26251 F86E                               u27051 E0E6  
                             u32571 C5D8                               u32651 F4C4  
                             u30971 0990                               u30891 06C8  
                             u31851 2D22                               u31835 2C74  
                             u31771 2B72                               u31755 2AB2  
                             u31691 28CC                               u32491 B9FA  
                             u32811 8D58                               u32731 8BD4  
                             u33611 5EDA                               u34251 D888  
                             u34091 D9F2                               u33291 FB64  
                             u33507 5350                               u33451 52A2  
                             u33427 5220                               u33371 5108  
                             u34171 BF92                               u34411 EF62  
                             u35131 D7BE                               u35211 567E  
                             u35051 7F3C                               u27220 8226  
                             u27140 80F0                               u27060 7FD8  
                             u25540 D016                               u26420 A840  
                             u25700 7708                               u25620 7580  
                             u25380 4EF6                               u26180 D11C  
                             u26340 A2B8                               u26260 A14C  
                             u26500 0B54                               u27300 34EA  
                             u28100 6BD0                               u31940 D1D8  
                             u32580 C5F0                               u28020 FE5E  
                             u31860 F7D6                               u30980 09CC  
                             u31780 2B9A                               u32708 AD6A  
                             u32900 F418                               u33620 5EFA  
                             u33540 5D4C                               u34260 D89A  
                             u33700 D6A0                               u34500 6DF4  
                             u33460 52B6                               u33380 511E  
                             u34180 DB20                               u34420 EFAA  
                             u35220 56C0                               u35140 5414  
                             u35060 7F52                               u27221 8222  
                             u27141 80EC                               u27061 7FD4  
                             u25541 D012                               u26421 A83C  
                             u25701 7704                               u25621 757C  
                             u25381 4EF2                               u26181 D118  
                             u26341 A2B4                               u26501 0B50  
                             u27301 34E6                               u28101 6BCC  
                             u31941 D1D4                               u32581 C5EC  
                             u28021 FE5A                               u31861 F7D2  
                             u30981 09C8                               u31781 2B96  
                             u32709 AD7E                               u32901 F414  
                             u33621 5EF6                               u33541 5D48  
                             u34261 D896                               u33701 D69C  
                             u34501 6DF0                               u33517 5378  
                             u33461 52B2                               u33381 511A  
                             u34181 DB1C                               u34421 EFA6  
                             u35221 56BC                               u35141 5410  
                             u35061 7F4E                               u28030 E142  
                             u27230 8248                               u27150 8112  
                             u27070 8004                               u25550 DA1C  
                             u26190 EC4C                               u26430 A856  
                             u25710 7732                               u25630 7590  
                             u25390 4F12                               u25470 D62E  
                             u26350 A2F4                               u26270 A17A  
                             u26510 0B92                               u27310 3516  
                             u31950 D214                               u32590 C622  
                             u31870 F800                               u30990 0A02  
                             u31790 2BB8                               u32670 ACB6  
                             u32830 8DB6                               u32750 8C5E  
                             u32910 F438                               u33630 60B4  
                             u33550 5DD0                               u34270 D8CC  
                             u33710 D6D2                               u34510 6E4C  
                             u34430 913A                               u33470 52D6  
                             u33390 5132                               u34190 DB32  
                             u35230 57CC                               u35150 546E  
                             u35070 7F64                               u28031 E13E  
                             u27231 8244                               u27151 810E  
                             u27071 8000                               u25551 DA18  
                             u26191 EC48                               u26431 A852  
                             u25711 772E                               u25631 758C  
                             u25391 4F0E                               u25471 D628  
                             u26351 A2F0                               u26335 A292  
                             u26271 A176                               u26511 0B8E  
                             u27311 3512                               u32591 C61E  
                             u31871 F7FC                               u30991 09FE  
                             u31791 2BB4                               u32671 ACB2  
                             u32831 8DB2                               u32751 8C5A  
                             u32911 F434                               u33631 60B0  
                             u33551 5DCC                               u34271 D8C8  
                             u33711 D6CE                               u34511 6E48  
                             u34431 9136                               u33471 52D2  
                             u33447 5272                               u33391 512E  
                             u34191 DB2E                               u35231 57C8  
                             u35151 546A                               u35071 7F60  
                             u27240 826A                               u27160 8134  
                             u27080 802E                               u25560 DA3E  
                             u26440 A870                               u26360 A712  
                             u25800 782C                               u25720 7756  
                             u25640 75D2                               u25480 D630  
                             u26280 A19C                               u26600 0E68  
                             u26520 0BA4                               u27400 38F2  
                             u27320 3548                               u28120 6C7E  
                             u28040 6A1A                               u31960 D23E  
                             u29000 64AC                               u31880 F560  
                             u32680 ACC8                               u32760 8C70  
                             u32840 EBB6                               u32920 F454  
                             u33640 610E                               u33560 5DE6  
                             u34280 D918                               u33720 D716  
                             u33800 597A                               u34520 6E92  
                             u34440 91F4                               u33480 5314  
                             u34600 E878                               u35160 54B8  
                             u35240 FC54                               u35080 7FA4  
                             u27241 8266                               u27161 8130  
                             u27081 802A                               u25561 DA3A  
                             u26441 A86C                               u26361 A70C  
                             u25801 7828                               u25721 7752  
                             u25641 75CE                               u25465 D606  
                             u26281 A198                               u26265 A142  
                             u26601 0E64                               u26521 0BA0  
                             u27401 38EE                               u27321 3544  
                             u28121 6C7A                               u28041 6A16  
                             u31961 D23A                               u31937 D1A4  
                             u29001 64A8                               u31881 F55C  
                             u32681 ACC4                               u32761 8C6C  
                             u32841 EBB2                               u32921 F450  
                             u33641 610A                               u33561 5DE2  
                             u34281 D914                               u33721 D712  
                             u33801 5976                               u34521 6E8E  
                             u34441 91F0                               u33537 53C6  
                             u34601 E874                               u35161 54B4  
                             u35241 FC50                               u35081 7FA0  
                             u27250 828C                               u27170 8156  
                             u27090 804E                               u25490 CF3E  
                             u25570 DA64                               u26450 A88A  
                             u26370 A714                               u25810 7874  
                             u25730 776C                               u25650 75E4  
                             u26610 0E7E                               u26530 0C1E  
                             u27410 3916                               u27330 35FE  
                             u28130 6D10                               u28050 6A44  
                             u28210 427C                               u29010 64C8  
                             u31970 E442                               u31890 F580  
                             u32690 AD44                               u32770 8CEC  
                             u32850 EBD0                               u33650 6128  
                             u33570 5DFC                               u33810 5990  
                             u33730 58A6                               u34530 6EAA  
                             u34450 928A                               u33490 5326  
                             u34610 E8BA                               u32930 CAD8  
                             u35090 AFEA                               u35170 5524  
                             u27251 8288                               u27171 8152  
                             u27091 804A                               u25491 CF3A  
                             u25571 DA60                               u26451 A886  
                             u25811 7870                               u25731 7768  
                             u25651 75E0                               u26611 0E7A  
                             u26531 0C1A                               u27411 3912  
                             u27331 35FA                               u28115 6BEC  
                             u28051 6A40                               u28211 4278  
                             u29011 64C4                               u31971 E43E  
                             u31891 F57C                               u32691 AD40  
                             u32771 8CE8                               u32851 EBCC  
                             u33651 6124                               u33571 5DF8  
                             u33811 598C                               u33731 58A2  
                             u34531 6EA6                               u34451 9286  
                             u33491 5322                               u34611 E8B6  
                             u32931 CAD4                               u35091 AFE6  
                             u35171 5520                               u27500 EF3A  
                             u27260 82AE                               u27180 8178  
                             u25580 DA86                               u26460 A898  
                             u26380 A724                               u25820 78A4  
                             u25740 778A                               u25660 75F4  
                             u25900 669C                               u26700 11DA  
                             u26620 0EB4                               u26540 0C30  
                             u27420 39C8                               u27340 361E  
                             u28140 6D42                               u28220 42B2  
                             u29020 64E8                               u28300 D4E2  
                             u29100 868C                               u31980 E490  
                             u32668 AC7E                               u32828 8D82  
                             u32780 8D06                               u32748 8C26  
                             u32860 EBF0                               u33660 6138  
                             u33580 5E4A                               u33900 5A9A  
                             u33820 59B2                               u33740 58B8  
                             u34540 6EFE                               u34460 92E0  
                             u32940 CAF6                               u34700 9A38  
                             u34620 98A6                               u35180 5570  
                             u35500 721C                               u27501 EF36  
                             u27261 82AA                               u27181 8174  
                             u25581 DA82                               u26461 A894  
                             u26381 A720                               u25821 78A0  
                             u25741 7786                               u25661 75F0  
                             u25901 6698                               u26701 11D6  
                             u26621 0EB0                               u26541 0C2C  
                             u27421 39C4                               u27341 361A  
                             u28141 6D3E                               u28221 42AE  
                             u28205 4240                               u31957 D20A  
                             u29021 64E4                               u28301 D4DE  
                             u29101 8688                               u31981 E48C  
                             u32669 AC92                               u32829 8D96  
                             u32781 8D02                               u32749 8C3A  
                             u32861 EBEC                               u33661 6134  
                             u33581 5E46                               u33901 5A96  
                             u33821 59AE                               u33741 58B4  
                             u34541 6EFA                               u34461 92DC  
                             u32941 CAF2                               u34701 9A34  
                             u34621 98A2                               u35181 556C  
                             u35501 7218                               u27430 F8DE  
                             u27270 82D2                               u27190 81C0  
                             u25590 DAA4                               u26470 A8A8  
                             u26390 A734                               u25830 78D0  
                             u25750 77AA                               u25670 7632  
                             u25910 66AC                               u26710 1286  
                             u26630 0EC2                               u26550 0CAA  
                             u27350 36FE                               u27510 F858  
                             u28070 6AE6                               u28230 430E  
                             u28150 40C8                               u29030 6518  
                             u28310 D510                               u29110 869E  
                             u31990 E4D2                               u32790 8D26  
                             u32870 EC10                               u33670 617C  
                             u33590 5E80                               u33910 5ABA  
                             u33830 59C6                               u33750 58D8  
                             u34550 6F50                               u34470 931A  
                             u32950 F33E                               u34710 9A66  
                             u34630 98E6                               u35190 55F6  
                             u35510 725A                               u27431 F8DA  
                             u27271 82CE                               u27191 81BC  
                             u25591 DAA0                               u26471 A8A4  
                             u26391 A730                               u25831 78CC  
                             u25751 77A6                               u25671 762E  
                             u25911 66A8                               u26295 A1B0  
                             u26711 1282                               u26631 0EBE  
                             u26551 0CA6                               u27351 36FA  
                             u27511 F854                               u28135 6D06  
                             u28071 6AE2                               u28151 40C4  
                             u29031 6514                               u29111 869A  
                             u31991 E4CE                               u32791 8D22  
                             u32871 EC0C                               u33671 6178  
                             u33591 5E7C                               u33911 5AB6  
                             u33831 59C2                               u33751 58D4  
                             u34551 6F4C                               u34471 9316  
                             u33487 5308                               u32951 F33A  
                             u34711 9A62                               u35191 55F2  
                             u35511 7256                               u27440 FCEC  
                             u27520 F7A8                               u27280 82E0  
                             u24960 0216                               u25760 77BA  
                             u25680 7672                               u25920 6826  
                             u25840 65E2                               u26296 A1BA  
                             u26800 14CA                               u26720 12C2  
                             u26640 0EEC                               u26560 0D36  
                             u26480 0AFA                               u27360 371E  
                             u28240 43AC                               u28160 40F2  
                             u28400 3CC4                               u29040 F10C  
                             u28320 D534                               u29200 87FA  
                             u29120 86B6                               u32880 EC32  
                             u33680 FD56                               u32960 DDB0  
                             u34720 CE48                               u33920 5AD4  
                             u33840 59D8                               u33760 58F0  
                             u34560 701E                               u34480 935C  
                             u34640 98F6                               u34800 967C  
                             u35600 753E                               u35520 730C  
                             u27441 FCE8                               u27521 F7A4  
                             u27281 82DC                               u24961 0212  
                             u25761 77B6                               u25681 766E  
                             u25841 65DE                               u26297 A1CA  
                             u26801 14C6                               u26721 12BE  
                             u26641 0EE8                               u26561 0D32  
                             u26481 0AF6                               u27361 371A  
                             u28065 6AAE                               u28241 43A8  
                             u28161 40EE                               u28401 3CC0  
                             u29201 87F6                               u29121 86B2  
                             u32881 EC2E                               u33681 FD52  
                             u32961 DDAC                               u34721 CE44  
                             u33921 5AD0                               u33841 59D4  
                             u33761 58EC                               u34561 701A  
                             u34641 98F2                               u35601 753A  
                             u35521 7308                               u27450 0202  
                             u27530 FBE2                               u24970 E29C  
                             u25770 77E8                               u25690 76E6  
                             u25930 6880                               u25850 65F4  
                             u26810 14E8                               u26730 12D0  
                             u26650 1034                               u26570 0D68  
                             u26490 0B44                               u27370 3844  
                             u27290 3472                               u28090 6B86  
                             u28250 4448                               u28410 3D06  
                             u28330 3B20                               u29050 F11C  
                             u29210 881C                               u29130 86E8  
                             u32890 F3F8                               u32970 DDF6  
                             u33690 D66E                               u34490 F938  
                             u34730 CE62                               u33930 5AEC  
                             u33850 59EA                               u33770 5926  
                             u34570 710A                               u34650 992E  
                             u34810 968C                               u35530 73BC  
                             u27451 01FC                               u27531 FBDE  
                             u24971 E298                               u25771 77E4  
                             u25691 76E2                               u25931 687C  
                             u25851 65F0                               u26811 14E4  
                             u26731 12CC                               u26651 1030  
                             u26571 0D64                               u26491 0B40  
                             u27371 3840                               u27291 346E  
                             u28091 6B82                               u28235 4304  
                             u28411 3D02                               u28331 3B1C  
                             u29051 F118                               u29211 8818  
                             u29131 86E4                               u32891 F3F4  
                             u32971 DDF2                               u33691 D66A  
                             u34491 F934                               u34731 CE5E  
                             u33931 5AE8                               u33851 59E6  
                             u33771 5922                               u34571 7106  
                             u34651 992A                               u34811 9688  
                             u35531 73B8                               u27540 FBFA  
                             u27620 E40E                               u24980 E2AE  
                             u25780 77FE                               u25940 68A0  
                             u25860 6604                               u26820 14F8  
                             u26740 1324                               u26660 109A  
                             u26580 0DA6                               u26900 B910  
                             u27380 3882                               u27700 841E  
                             u28260 447E                               u28180 417C  
                             u28500 3EDE                               u28420 3D5A  
                             u28340 3B52                               u29300 C4CC  
                             u29060 F156                               u29220 8844  
                             u29140 8748                               u32980 DE40  
                             u34740 CE98                               u33940 5AFA  
                             u33860 5A1E                               u33780 593E  
                             u34580 713C                               u34660 9990  
                             u34900 9832                               u34820 96C4  
                             u35540 73E6                               u27541 FBF6  
                             u27621 E40A                               u27605 E3C2  
                             u24981 E2AA                               u25781 77FA  
                             u25941 689C                               u25925 681C  
                             u25861 6600                               u26821 14F4  
                             u26741 1320                               u26661 1096  
                             u26581 0DA2                               u27381 387E  
                             u27701 841A                               u28085 6B4E  
                             u28261 447A                               u28181 4178  
                             u28501 3EDA                               u28421 3D56  
                             u28341 3B4E                               u29301 C4C8  
                             u28317 D506                               u29221 8840  
                             u29141 8744                               u32981 DE3C  
                             u34741 CE94                               u33941 5AF6  
                             u33861 5A1A                               u33781 593A  
                             u34581 7138                               u34485 9352  
                             u34661 998C                               u34637 98DC  
                             u34901 982E                               u34821 96C0  
                             u35541 73E2                               u27470 EEC6  
                             u27550 F232                               u24990 E2D6  
                             u25790 7812                               u25950 68B0  
                             u25870 6644                               u26750 13F6  
                             u26670 10E2                               u26590 0E32  
                             u26910 B942                               u26830 B808  
                             u27390 38BA                               u27630 C2E0  
                             u27710 8432                               u28190 41B6  
                             u28510 3EF8                               u28430 3D76  
                             u28350 3B7C                               u29310 C534  
                             u29070 F166                               u28270 D47A  
                             u29230 886A                               u29150 875A  
                             u32990 DE62                               u34750 CEAA  
                             u33950 5B56                               u33870 5A36  
                             u33790 5950                               u34590 7168  
                             u34670 99A0                               u34830 9726  
                             u34910 7C90                               u35550 7442  
                             u27471 EEC2                               u27551 F22E  
                             u27615 E3E4                               u24991 E2D2  
                             u25791 780E                               u25951 68AC  
                             u25871 6640                               u26751 13F2  
                             u26671 10DE                               u26591 0E2E  
                             u26911 B93E                               u26831 B804  
                             u27391 38B6                               u27631 C2DC  
                             u27711 842E                               u28255 443E  
                             u28191 41B2                               u28175 4140  
                             u28511 3EF4                               u28431 3D72  
                             u28351 3B78                               u29311 C530  
                             u29071 F162                               u29047 F102  
                             u28327 D52A                               u28271 D476  
                             u29231 8866                               u29151 8756  
                             u34751 CEA6                               u33951 5B52  
                             u33871 5A32                               u33791 594C  
                             u34591 7164                               u34671 999C  
                             u34831 9722                               u34807 9672  
                             u35551 743E                               u27480 EF0E  
                             u27560 F25A                               u25960 68DE  
                             u25880 6656                               u26760 1412  
                             u26680 10F2                               u26920 B950  
                             u26840 B84E                               u27640 C34E  
                             u27800 8F02                               u27720 8524  
                             u28520 3F14                               u28440 3D90  
                             u28360 3BD8                               u29320 C566  
                             u28600 C8F2                               u29400 CA4C  
                             u28280 D49C                               u29240 888E  
                             u29160 876E                               u29080 862E  
                             u34760 CEE8                               u33960 5B6E  
                             u33880 5A66                               u34680 99B6  
                             u34840 9736                               u34920 7CA0  
                             u35560 74AA                               u27481 EF0A  
                             u27465 0204                               u27561 F256  
                             u25961 68DA                               u25881 6652  
                             u26761 140E                               u26681 10EE  
                             u26921 B94C                               u27641 C34A  
                             u27801 8EFE                               u27721 8520  
                             u28521 3F10                               u28441 3D8C  
                             u28361 3BD4                               u29321 C562  
                             u28601 C8EE                               u29401 CA48  
                             u29241 888A                               u29161 876A  
                             u29081 862A                               u34761 CEE4  
                             u33961 5B6A                               u33881 5A62  
                             u34681 99B2                               u34841 9732  
                             u34921 7C9C                               u35561 74A6  
                             u27490 EF2C                               u27570 F270  
                             u25970 68F4                               u25890 6666  
                             u26770 1478                               u26690 118C  
                             u26930 B98A                               u26850 B85E  
                             u27650 C36A                               u27810 8F3A  
                             u27730 8544                               u28530 3F3C  
                             u28450 3DC6                               u28370 3C08  
                             u29330 9F10                               u28610 C93C  
                             u29410 CA68                               u28290 D4D0  
                             u29250 88AC                               u29170 877E  
                             u29090 867A                               u34770 CF00  
                             u33970 5BA8                               u33890 5A82  
                             u34690 99D0                               u34850 9746  
                             u34930 7CEE                               u35570 74C0  
                             u35490 71E8                               u27491 EF28  
                             u27571 F26C                               u25971 68F0  
                             u25891 6662                               u26771 1472  
                             u26691 1188                               u26931 B986  
                             u26907 B906                               u26851 B85A  
                             u27651 C366                               u27811 8F36  
                             u27731 8540                               u28531 3F38  
                             u28451 3DC2                               u28371 3C04  
                             u29331 9F0C                               u28611 C938  
                             u29411 CA64                               u29067 F14C  
                             u28291 D4CC                               u29251 88A8  
                             u29171 877A                               u29091 8676  
                             u34771 CEFC                               u33971 5BA4  
                             u33891 5A7E                               u34691 99CC  
                             u34851 9742                               u34931 7CEA  
                             u35571 74BC                               u35491 71E4  
                             u27580 E6E6                               u25980 6908  
                             u26780 147A                               u26860 B86C  
                             u26940 BB2C                               u27660 C3D2  
                             u27820 8F7A                               u27740 8558  
                             u27900 E7A6                               u29260 FC9A  
                             u28540 3F80                               u28460 3DF0  
                             u28380 3C46                               u29340 9F2A  
                             u28620 C964                               u29420 CA9C  
                             u28700 DD2C                               u29500 BDF4  
                             u29180 87A4                               u34780 CF10  
                             u33980 5BD0                               u34860 976A  
                             u34940 7D1C                               u27581 E6E2  
                             u25981 6904                               u26861 B868  
                             u26941 BB28                               u27661 C3CE  
                             u27821 8F76                               u27741 8554  
                             u27901 E7A2                               u29261 FC96  
                             u28541 3F7C                               u28461 3DEC  
                             u28381 3C42                               u29341 9F26  
                             u28621 C95E                               u29421 CA98  
                             u28701 DD28                               u29501 BDF0  
                             u29181 87A0                               u32997 DE58  
                             u34781 CF0C                               u33981 5BCC  
                             u34861 9766                               u34941 7D18  
                             u34917 7C86                               u25990 6922  
                             u26790 148C                               u26870 B88A  
                             u26950 BB3C                               u27670 C404  
                             u27830 8FA6                               u27750 8578  
                             u27910 B66E                               u29270 FCBE  
                             u28550 3F96                               u28470 3E26  
                             u28390 3C7C                               u29350 9F48  
                             u28630 C966                               u29430 CAAE  
                             u28710 DD4C                               u29510 BE22  
                             u29190 87C6                               u33990 5BE2  
                             u34870 9784                               u34790 963C  
                             u34950 7D3E                               u35590 751C  
                             u25991 691E                               u26791 1488  
                             u26871 B886                               u26847 B844  
                             u26951 BB38                               u27671 C400  
                             u27831 8FA2                               u27751 8574  
                             u27911 B66A                               u29271 FCBA  
                             u28551 3F92                               u28471 3E22  
                             u28391 3C78                               u29351 9F44  
                             u29431 CAAA                               u28711 DD48  
                             u28295 D4C0                               u28287 D492  
                             u29511 BE1E                               u29191 87C2  
                             u33991 5BDE                               u34871 9780  
                             u34791 9638                               u34951 7D3A  
                             u35591 7518                               u26880 B8B0  
                             u26960 BB6A                               u27840 8FF8  
                             u27760 85BC                               u27680 834E  
                             u27920 B6C0                               u28560 3FD6  
                             u28480 3E6C                               u29280 C452  
                             u29360 A0F8                               u28800 7A3C  
                             u28640 ECFE                               u28720 DD70  
                             u29600 4700                               u29520 4612  
                             u29440 F2AA                               u34880 97CA  
                             u34960 7D6C                               u26881 B8AC  
                             u26961 BB66                               u27841 8FF4  
                             u27761 85B8                               u27681 834A  
                             u27921 B6BC                               u28561 3FD2  
                             u28481 3E68                               u29281 C44E  
                             u29361 A0F4                               u28801 7A38  
                             u28641 ECFA                               u28721 DD6C  
                             u29601 46FC                               u28297 D4B6  
                             u29441 F2A6                               u34881 97C6  
                             u34961 7D68                               u26890 B8EA  
                             u26970 BBAE                               u27850 905C  
                             u27770 8EA2                               u27690 83E4  
                             u27930 B74A                               u28570 4040  
                             u28490 3E96                               u29290 C4B0  
                             u29450 FA82                               u29370 C9AA  
                             u28650 ED1E                               u28730 DD90  
                             u29610 4758                               u29530 4622  
                             u34890 9804                               u34970 7DE4  
                             u27595 E39C                               u26891 B8E6  
                             u26971 BBAA                               u27851 9058  
                             u27771 8E9E                               u27691 83E0  
                             u27931 B746                               u28571 403C  
                             u28491 3E92                               u29291 C4AC  
                             u29451 FA7E                               u29371 C9A6  
                             u28651 ED1A                               u28731 DD8C  
                             u29531 461E                               u34891 9800  
                             u34971 7DE0                               u26980 BBF8  
                             u27860 9092                               u27780 8EB6  
                             u27940 B768                               u28580 407A  
                             u28900 6264                               u28820 7AFC  
                             u28740 790C                               u29380 C9EE  
                             u28660 ED4A                               u29700 4846  
                             u29620 476E                               u29540 4650  
                             u29460 BCE6                               u34980 7DFA  
                             u35588 74F2                               _MFOEN 059D  
                             u27861 908E                               u27781 8EB2  
                             u27941 B764                               u28581 4076  
                             u28901 6260                               u28821 7AF8  
                             u28741 7908                               u29381 C9EA  
                             u28661 ED46                               u29701 4842  
                             u29621 476A                               u29461 BCE2  
                             u34981 7DF6                               u35589 7506  
                             u26990 BC2A                               u27870 90AC  
                             u27790 8EE4                               u27950 E818  
                             u28590 C834                               u28910 629C  
                             u28830 7B1C                               u28750 793A  
                             u29390 CA20                               u28670 ED6A  
                             u29710 485A                               u29630 4784  
                             u29550 4668                               u29470 BD2A  
                             u34990 7E0C                               u26991 BC26  
                             u27871 90A8                               u27791 8EE0  
                             u27951 E814                               u28591 C830  
                             u28911 6298                               u28831 7B18  
                             u28815 7A8E                               u28751 7936  
                             u29391 CA1C                               u28671 ED66  
                             u29711 4856                               u29631 4780  
                             u29551 4664                               u29527 4608  
                             u29471 BD26                               u34991 7E08  
                             u27880 90CC                               u27960 E854  
                             u28920 62DC                               u28840 7B46  
                             u28760 798E                               u28680 DCE0  
                             u29800 49CC                               u29720 486C  
                             u29640 4796                               u29560 467E  
                             u29480 BD5E                               u26985 BBEE  
                             u27881 90C8                               u27961 E850  
                             u28841 7B42                               u28761 798A  
                             u28681 DCDC                               u29801 49C8  
                             u29721 4868                               u29641 4792  
                             u29617 474E                               u29561 467A  
                             u29481 BD5A                               u27890 E76A  
                             u27970 DF8C                               u28930 6300  
                             u28850 7B78                               u28770 79A6  
                             u28690 DD00                               u29810 49EA  
                             u29730 489C                               u29650 47CC  
                             u29570 46AC                               u29490 BDB6  
                             u27891 E766                               u27971 DF88  
                             u28931 62FC                               u28851 7B74  
                             u28771 79A2                               u28691 DCFC  
                             u29811 49E6                               u29731 4898  
                             u29571 46A8                               u29547 4646  
                             u29491 BDB2                               u27980 DFAC  
                             u28940 6358                               u28860 7BF0  
                             u28780 79D8                               u29820 4A06  
                             u29740 48CA                               u29660 47DC  
                             u29580 46BE                               u29900 B3C0  
                             u27981 DFA8                               u28925 62D2  
                             u28861 7BEC                               u28781 79D4  
                             u29821 4A02                               u29661 47D8  
                             u29581 46BA                               u27990 DFF4  
                             u28950 638C                               u28870 7C14  
                             u28790 7A18                               u29830 4A34  
                             u29750 48E8                               u29670 480A  
                             u29590 46CE                               u29910 B3D2  
                             u27991 DFF0                               u28951 6388  
                             u29751 48E4                               u29591 46CA  
                             u29911 B3CE                               u36847 FB0E  
                             u28960 63E0                               u28880 61FA  
                             u29840 4A46                               u29760 490A  
                             u29680 481A                               u29920 B3F4  
                             i2l305 F54A                               u28961 63DC  
                             u28945 634E                               u28881 61F6  
                             u29841 4A42                               u29761 4906  
                             u29681 4816                               u29657 47C2  
                             u36857 EFBA                               u28970 6402  
                             u28890 6230                               u29770 495E  
                             u29690 4830                               u29930 B406  
                             u29850 B332                               _U3RXB 02C7  
                             u28971 63FE                               u28891 622C  
                             u28875 7C0A                               u28795 7A0E  
                             u29771 495A                               u29747 48C0  
                             u29691 482C                               u29931 B402  
                             u29907 B3B6                               u29851 B32E  
                             u36867 DF24                               u28980 6432  
                             u29780 4972                               u29940 B42A  
                             u29860 B35C                               u28981 642E  
                             u29837 4A2A                               u29781 496E  
                             u29677 4800                               u29941 B426  
                             u36877 DF42                               u28990 6444  
                             u29790 4982                               u29950 B44C  
                             u29870 B372                               u28991 6440  
                             u29791 497E                               u29927 B3EA  
                             u29871 B36E                               u36887 FE06  
                             u29960 B474                               u29880 B384  
                             u29961 B470                               u29881 B380  
                             u29970 A54A                               u29890 B396  
                             _U3TXB 02C9                               u29971 A546  
                             u29891 B392                               u29867 B352  
                             i2l292 0288                               u29980 A560  
                             u29981 A55C                               u29957 B442  
                             u29990 A572                               u29991 A56E  
                             i2l297 027E                        vfpfcnvrt@fmt 0595  
                             _TMR0H 0319                               _TMR0L 0318  
                             _PORTB 04CF                     __end_of_f_chdir D920  
                             _TRISB 04C7                               _TRISC 04C8  
                             _TRISD 04C9                     _bioreq_cbuffadr 0824  
                       _Default_ISR 0288                               _WPUA0 2008  
                             _WPUA1 2009                               _WPUA2 200A  
                             _WPUA3 200B                               _WPUA4 200C  
                             _WPUA5 200D                               _WPUE0 2108  
                             _WPUE1 2109                               _WPUE2 210A  
                   __end_of_f_close F80E                               _FatFs 07B7  
                     scan_files1@fn 074B                     __end_of_f_lseek 25B6  
               ___lmul@multiplicand 0508                     __end_of_f_mount D73C  
                   __end_of_dir_sdi 7C6E                     __end_of_f_write 1DB4  
                   __end_of_get_fat 6DDA                 SPI_SD_select@select 0506  
         SPI_SD_configure@data_mode 05C2                     __end_of_get_hex C818  
                     scan_files@dir 0768                       scan_files@fno 0752  
                     scan_files@res 074F                     __end_of_get_str EEAC  
                   __end_of_dsk_err 0276                     __end_of_in_file C120  
                   __end_of_ld_word FED0                               _debug 0816  
                      ?_read_sector 069A                               _flags 055C  
           ?_SDCard_end_transaction 0501                               _mon02 07F4  
                             _getch FA9C                               _mon16 07F2  
                             _in_fl 0DB4                               _mezID 07FC  
                             _fsdir 098B                 read_prec_or_width@c 050A  
                             _errno 07B3                 read_prec_or_width@n 050B  
                             _fputc E28A                       find_volume@fs 0632  
                             _fputs FBFE                               labs@a 0504  
                             pad@fp 0515                               _width 07B1  
                  SPI_SD_begin@ctx_ 0504                               _putch 0206  
                             _rx_rp 07C3                               main@c 079C  
                             _rx_wp 07C5                               dtoa@d 0520  
                   __end_of_u_getch F5BA                               dtoa@i 052B  
                             dtoa@p 0526                               dtoa@s 052A  
                             dtoa@w 0528                     util_hexdump@buf 05D6  
                     setup_sd@retry 07BF                SDCard_command@length 0531  
         SPI_SD_configure@bit_order 05C1                      disk_ioctl@buff 05BE  
                   __end_of_set_arg AFB8                               pclath 04FA  
                    disk_read@count 0606                               tablat 04F5  
                    SDCard_crc@endp 0508                      disk_ioctl@pdrv 05C0  
       ___SDCard_command_r1@command 0521                SDCard_command@result 0536  
                             plusw2 04DB                               stoa@l 051A  
                             stoa@p 0514                               stoa@s 0510  
                   __end_of_put_fat 4594                               stoa@w 0516  
                      ?_scan_files1 0501                               status 04D8  
                   __end_of_st_word FFB4            ??_SPI_SD_end_transaction 050A  
                   __end_of_sprintf FA00                      ?___fpclassifyf 0504  
                             xtoa@a 0529                               xtoa@c 0530  
                             xtoa@d 0520                     ??_setup_monitor 055A  
                             xtoa@i 0531                     __end_of_str_inf AAA6  
                             xtoa@p 052C                               xtoa@w 052E  
                             xtoa@x 0524                     __end_of_sync_fs A104  
                   __end_of_strncmp CE22                   write_sector@filep 069F  
                     get_ldnumber@i 0508                         drive_cpu@rs 06FF  
                      _util_hexdump C406                     _bioreq_ubuffadr 07DB  
                   ??_SPI_SD_select 0508                     __initialization E1C0  
                    SDCard_init@buf 05D0                      SDCard_init@spi 05CE  
           ___SDCard_command_r1@buf 0522             ___SDCard_command_r1@spi 0529  
               disk_initialize@pdrv 0680                         _wstart_prog EA54  
                       ?_URT3Rx_ISR 0501                        __end_of_labs F8BA  
                      __end_of_main 7554                        __end_of_dtoa A8E0  
                      __end_of_stoa B98C                        __end_of_xtoa BCA4  
                    ??_bus_hold_req 0504                      write_sram@addr 0504  
                            ??_labs 0508                      get_fileinfo@di 051C  
                    get_fileinfo@dp 0511                              ??_main 0791  
                            ??_dtoa 0524                      get_fileinfo@si 0519  
                      ?_release_bus 0504                              ??_stoa 0512  
                            ??_xtoa 0525                       __activetblptr 0003  
                SDCard_init@timeout 05C9          __end_of_read_prec_or_width E0F4  
    __end_of_SDCard_end_transaction FF8C                              ?_getch 0504  
                            ?_fputc 0505                       see_file@rdbuf 0702  
                            STR_100 FE94                              STR_101 FB90  
                            STR_102 FF48                              STR_110 F897  
                            ?_fputs 050E                              STR_103 FF40  
                            STR_111 F28E                              STR_104 FB90  
                            STR_200 FFD5                              STR_120 FEAC  
                            STR_112 F857                              STR_105 FC9A  
                            STR_121 FEB7                              STR_113 F21F  
                            STR_130 FFC4                              STR_122 FF27  
                            STR_106 FCAE                              STR_114 F38C  
                            STR_131 FB90                              STR_107 FFF9  
                            STR_203 FFD9                              STR_123 FF38  
                            STR_115 F5A0                              STR_132 FFA8  
                            STR_124 FD22                              STR_140 FCC2  
                            STR_108 FBD8                              STR_116 FB36  
                            STR_125 FEF8                              STR_133 FC5B  
                            STR_141 FA08                              STR_109 F7AF  
                            STR_117 F577                              STR_206 FF70  
                            STR_126 FE7A                              STR_150 FD35  
                            STR_142 FC1A                              STR_118 FB93  
                            STR_134 F911                              STR_127 FFF0  
                            STR_119 FDD7                              STR_143 FDA4  
                            STR_151 FD80                              STR_135 F8B6  
                            STR_152 FCC2                              STR_128 FFF0  
                            STR_160 FE25                              STR_144 FDB5  
                            STR_136 F92E                              STR_153 FA08  
                            STR_137 FE87                              STR_161 F983  
                            STR_145 F7D1                              STR_154 FC1A  
                            STR_170 FFE1                              STR_138 FE42  
                            STR_162 FC04                              STR_146 F836  
                            STR_171 FFDD                              STR_139 FF02  
                            STR_147 FDF7                              STR_163 FD0F  
                            STR_155 FA22                              STR_156 FDA4  
                            STR_164 FC04                              STR_172 FFED  
                            STR_148 FD48                              STR_180 FC46  
                            STR_165 FD0F                              STR_157 FDB5  
                            STR_149 FDE7                              STR_181 F815  
                            STR_166 FE07                              STR_174 FA70  
                            STR_158 F668                              STR_190 F473  
                            STR_159 FB90                              STR_167 FE07  
                            STR_183 FD6E                              STR_175 FB4E  
                            STR_191 F2C4                              STR_192 FF30  
                            STR_168 FF15                              STR_176 F61A  
                            STR_184 F49F                              STR_169 FF15  
                            STR_193 FF85                              STR_177 F9D4  
                            STR_185 F94B                              STR_194 FE58  
                            STR_186 FF8B                              STR_195 FF0C  
                            STR_179 FCD6                              STR_187 F4CB  
                            STR_196 FF85                              STR_188 F8F4  
                            STR_197 FE58                    _change_directory 023E  
                            STR_198 FB06                              STR_199 FB7B  
              SDCard_read512@result 05F4                              _ANSELA 0400  
                            ?_putch 0501                              _ANSELB 0408  
                            _ANSELC 0410                              _ANSELD 0418  
                            _T0CON0 031A                              _T0CON1 031B  
                      ?_SDCard_init 05C5                       boot_file@flag 0716  
                            _RA0PPS 0201                              _NCO1EN 2237  
                            _RA2PPS 0203                              _RB0PPS 0209  
                            _RA3PPS 0204                              _RB1PPS 020A  
                            _RA6PPS 0207                       ?_load_program 0700  
                            _U3RXIE 2538                              _U3RXEN 168C  
                            _U3TXIF 25B9                              _U3TXEN 168D  
                            _OSCFRQ 00B1                       vfpfcnvrt@done 059D  
                            _TMR0IE 250F                              _TMR0IF 258F  
                            _TRISA0 2630                              _TRISA1 2631  
                            _TRISA2 2632                              _TRISB0 2638  
                            _TRISA3 2633                              _TRISB1 2639  
                            _TRISA4 2634                              _TRISB2 263A  
                            _TRISA5 2635                              _TRISA6 2636  
                            _TRISA7 2637                              _TRISE0 2650  
                            _TRISE1 2651                              _TRISE2 2652  
              __end_of_dir_register DCBE                              _DbcTbl F201  
                  __end_of___xxtofl AC5A                    __end_of_check_fs 88C2  
                  __end_of_f_getcwd 53D4                    __end_of_clc_init C294  
                    scan_files1@dir 0769                      scan_files1@fno 0753  
                    scan_files1@res 0750                     load_config@conf 070F  
                  __end_of_clk_init 018A                    __end_of_dir_find BE28  
            ??_bus_master_operation 055A                    __end_of_dir_read B304  
                  __end_of_dir_next 65C8                        ?_move_window 061A  
              __end_of_create_chain 40A8                        _write_sector B98C  
                      ___strtoxl@cp 052B                        vfprintf@cfmt 05AB  
                  __end_of_get_line CF2E                    __end_of_ld_clust F2F4  
                    scan_files@path 0750                              ___flge D242  
                            ___fleq E902                    __end_of_ld_dword E646  
                            ___lmul F626                           ??___aldiv 050C  
                  __end_of_make_irq FFFE                           ??___almod 050C  
                         ??___fladd 050C                           ??___fldiv 0533  
                         ??___flneg 0508                              _f_gets D920  
                         ??___flmul 051A                           ??_dbc_2nd 0506  
                            _conf02 07F8                           ??___flsub 0533  
                         ??___fltol 0508                              _conf16 07F6  
                         ??_dbc_1st 0506                              _f_read 2D36  
                         ??___lldiv 050C                              _f_open 25B6  
                            _cin_no 07CA                              _clk_fs 07DF  
                            _efgtoa 0AD8                              _f_sync 9CDA  
                  __end_of_mem_dump F3EA                    __end_of_mem_init 9380  
                            _floorf A104                           ??_f_chdir 055A  
                            _memcmp D446                              _memcpy FA00  
              read_prec_or_width@ap 0506                              _memset FE28  
                         ??_f_close 055A                      find_volume@fmt 064C  
                  ___strtoxl@endptr 0512                              _t_conf 07E6  
                            clear_0 E228                              clear_1 E23A  
                            clear_2 E246                              clear_3 E252  
                            clear_4 E25E                              clear_5 E26A  
               _wait_for_programmer FAE6                           ??_f_lseek 0668  
              __end_of_get_fileinfo A50E                              isa$std 0001  
                         ??_f_mount 055A             ?___SDCard_wait_response 0515  
                            _rom_fl 0FD6                              _printf FFB4  
                  __end_of_see_file 5870                              pad@buf 0517  
                            getch@c 0508               SDCard_command@command 0533  
                            _rx_buf 0B00                              _rx_cnt 07C1  
                         ??_dir_sdi 0644                           ??_f_write 066A  
                 ?_board_event_loop 0501                    util_hexdump@addr 05BF  
                         ??_get_fat 062A                           ??_get_hex 0508  
                            dtoa@fp 051E                              main@rs 0799  
                            _strchr F0EA                    ___strtoxl@prev_a 051A  
                    get_line@length 05BF                              _strcpy FD7C  
                            _strlen F960                           ??_get_str 0703  
                            _strstr DD9E                           ??_dsk_err 0504  
                         ??_in_file 055A                    __end_of_mon_prog D82E  
                  util_hexdump@size 05C1                           ??_ld_word 0506  
                            fputc@c 0505                    __end_of_validate D446  
                            fputs@c 0512                              fputs@i 0513  
                            fputs@s 050E                  ??_board_event_loop 055A  
                   SDCard_crc@count 0506                __end_of_get_ldnumber B4A8  
                   ___fpclassifyf@e 050C                     ___fpclassifyf@u 050E  
                   ___fpclassifyf@x 0504                           ??_u_getch 0702  
                     _util_addrdump C294                        __mediumconst F200  
                   disk_read@sector 0602                    __end_of_timer_on 0284  
                         ??_set_arg 0506                              tblptrh 04F7  
                            tblptrl 04F6                              tblptru 04F8  
                  __end_of_setup_sd EFD2                    __end_of_st_clust FA9C  
                  __end_of_st_dword F626                              stoa@cp 0518  
                            stoa@fp 050E                              putch@c 0504  
                  __end_of_vfprintf F864                           ??_put_fat 062E  
                         ??_st_word 0508                           ??_sprintf 055A  
                         ??_str_inf 0703                              xtoa@fp 051E  
                         ??_sync_fs 061C                           ??_strncmp 050A  
                    ??_load_program 05FF                        ?_setup_drive 0504  
                        ___flge@ff1 052B                          ___flge@ff2 052F  
                   ??___fpclassifyf 0508                         read_sram@ab 050E  
              ?_wait_for_programmer 0501                        ___xxtofl@arg 050E  
                      ___xxtofl@exp 050D                        ___xxtofl@val 0504  
                        ___fleq@ff1 0504                          ___fleq@ff2 0508  
           SDCard_write512@response 05F8                    SPI_SD_send@count 0508  
                    _unimon_console AC5A                          __accesstop 0560  
           __end_of__initialization E284                        ?_SPI_SD_send 0504  
                    get_ldnumber@tc 050A                          ___flneg@f1 0504  
                    disk_write@buff 0600                      get_ldnumber@tp 050F  
                    get_ldnumber@tt 050B                      disk_write@pdrv 05F9  
               _SPI_SD_dummy_clocks F758                     SDCard_read512@i 05EC  
                     ___rparam_used 0001                          ___fltol@f1 0504  
                  ??_SPI_SD_receive 050A                     seek_disk@sector 0693  
                    __pcstackCOMRAM 0501            __end_of_util_hexdump_sum F1F2  
                      __pidataBANK7 018A                        __pidataBANK8 024C  
                      __pidataBANK9 F05E                       __end_of_getch FAE6  
                       scan_files@p 074D                      ivt0x8_undefint 0100  
                     __end_of_fputc E354                       __end_of_fputs FC42  
    __end_of___SDCard_wait_response FBFE                   ??_bus_release_req 0504  
               ___SDCard_crc16@endp 050D                       f_closedir@res 05CD  
                     __end_of_putch 021C     ___SDCard_wait_response@attempts 0515  
              ?_SPI_SD_dummy_clocks 050E                      ?_util_addrdump 05BD  
                    _SDCard_command F2F4                      _SDCard_read512 8E56  
            SDCard_init@clock_speed 05C7                     _continue_action FB2C  
                           ??_getch 0506                     get_fileinfo@fno 0513  
                           ??_fputc 0509     ___SDCard_wait_response@response 051A  
                           ??_fputs 0512              __end_of_unimon_console AE0A  
                           ??_putch 0504               ??_wait_for_programmer 05BD  
                    SPI_SD_send@buf 0506                          __pbssBANK7 079E  
                        __pbssBANK8 0800                          __pbssBANK9 098B  
             SDCard_write512@result 05F2                          _f_closedir FDB8  
                     seek_disk@fres 0699                __end_of_bus_hold_req 0264  
                 unimon_console@buf 070C                   unimon_console@cnt 070E  
               SDCard_write512@addr 05DE                             IVTBASEH 045E  
                           IVTBASEL 045D                             IVTBASEU 045F  
               SDCard_write512@offs 05E2                 _SPI_SD_receive_byte 0106  
         ?_SPI_SD_begin_transaction 0508                             ?___flge 052B  
                           ?___fleq 0504                        mem_dump@addr 05E0  
                           ?___lmul 0504                          _board_name 07FA  
                           ?_f_gets 0669                  util_addrdump@chars 05C9  
                    see_file@header 0707                             ?_f_read 063E  
                      mem_init@addr 05E8                        ??_TIMER0_ISR 0501  
                           ?_f_open 06AF                             ?_efgtoa 0560  
                           ?_f_sync 0624                   ??_disk_initialize 05FB  
                           ?_floorf 0544                             ?_memcmp 0504  
                           ?_memcpy 0504                             ?_memset 0504  
                      ?_sync_window 0608                      ___lmul@product 050C  
                           _CLC8OUT 06A7               ??_SPI_SD_dummy_clocks 0512  
                           ?_printf 05AD                             _ANSELE0 2100  
                           _ANSELE1 2101                             _ANSELE2 2102  
            __end_of_SDCard_command F370              __end_of_SDCard_read512 90F8  
                           ?_strchr 0504              _SPI_SD_end_transaction 014A  
                           ?_strcpy 0504                        ??_SDCard_crc 0508  
                           ?_strlen 0504                             _CLCnCON 00D6  
                           _CLCnPOL 00D7                             ?_strstr 050B  
                           _NCO1CLK 0447                             _NCO1INC 0443  
                           _NCO1PFM 2230                             _NCO1OUT 2235  
              ?_SPI_SD_receive_byte 0512                        ?_Default_ISR 0501  
                           i2l18151 027C                             i2l18161 F50A  
                           i2l18153 F4D8                             i2l18163 F522  
                           i2l18155 F4DC                             i2l18165 F532  
                           i2l18157 F4EE                             i2l18149 0278  
                           i2l18167 F546                             i2l18159 F500  
                     wstart_prog@rs 0716                           ?___xxtofl 0504  
                         ?_check_fs 0624                           ?_f_getcwd 06AF  
                        _disk_ioctl F6F4                             _U3RXPPS 0276  
                        _cpm_drives 094B                             _IVTBASE 045D  
                         ?_clc_init 0501                      follow_path@res 0691  
                        _disk_write E6FC                             _IVTLOCK 0459  
                           _SPI1CLK 008C                             _SPI1RXB 0080  
                           _SPI1TXB 0081                           ?_clk_init 0501  
                    remove_chain@fs 065C                           ?_dir_find 067C  
                 __end_of___strtoxl 5D0C                           ?_dir_read 067C  
                         ?_dir_next 0662                           ?_get_line 05BD  
               _pic18f47q43_spi_ctx 08CF                           ?_ld_clust 050B  
                   ?_unimon_console 0501                           ?_ld_dword 0504  
                         ?_make_irq 0501                   ??_SDCard_write512 05E8  
                         ?_mem_dump 0501                 ___SDCard_command_r1 E646  
                         ?_mem_init 05DE                   __end_of_f_readdir DBDC  
                        f_chdir@res 06B1                   __end_of_del_space F05E  
                __end_of_TIMER0_ISR 0280                     scan_files1@fcnt 074D  
                     ?_remove_chain 0645                     scan_files1@path 0751  
___SDCard_wait_response@no_response 0517                   __end_of_f_opendir BFA6  
                       SDCard_crc@i 050A                         SDCard_crc@p 050D  
                         ?_see_file 0501                             _CurrVol 07C7  
                 __end_of_dir_clear C968                   __end_of_dir_alloc CAB6  
                         ?_mon_prog 0501                             __Hparam 0000  
                __end_of_SDCard_crc F274                   __end_of_clst2sect E1C0  
                           __Lparam 0000                        load_config@a 070D  
                         ?_validate 05BE                        load_config@i 0713  
                         _CLCSELECT 00D5                   __end_of_disk_init F960  
                 __end_of_disk_read E858                   __end_of_flash_apl FC84  
                      ?_wstart_prog 0501                        ??_URT3Rx_ISR 0501  
                         ?_timer_on 0501                             ___aldiv CF2E  
                 __end_of_boot_file 7FBE                        _f_write$3207 0676  
                           ___almod DA0C                           ?_setup_sd 0501  
                        f_close@res 0633                             ___fladd 4A70  
                           ___fldiv 7554                             ___flneg FE60  
                         ?_st_clust 0508                             ___flmul 65C8  
                           _dbc_2nd DCBE                             ___flsub FB72  
                           ___fltol D038                             _dbc_1st ECDC  
                         ?_st_dword 0504                          f_gets@buff 0669  
                           ___lldiv EAFC            __end_of_change_directory 024C  
                        check_fs@fs 0624                           ?_vfprintf 05A5  
                        f_getcwd@dj 0723                          f_getcwd@fs 0720  
                        f_getcwd@tp 0704                             _f_chdir D82E  
              __end_of_load_program 619E                             _f_close F7B6  
                           __pcinit E1C0                      ___SDCard_crc16 E354  
              ?___SDCard_command_r1 051B                   __end_of_drive_cpu FD7C  
                           _f_lseek 1DB4                        _get_fat$2154 0632  
                           __ramtop 2600                             _f_mount D642  
                   ??_util_addrdump 05C7                             __ptext0 71A0  
                           __ptext1 7C6E                             __ptext2 E4D4  
                           __ptext3 FC42                             __ptext4 53D4  
                           __ptext5 F370                             __ptext6 D73C  
                           __ptext7 AFB8                             __ptext8 022E  
                           __ptext9 E9AC                             _dir_sdi 78E4  
                   ?_SDCard_command 052B                             _f_write 1538  
                           _fin_cnt 07E3                     ?_SDCard_read512 05DE  
                       validate@obj 05BE                             _get_fat 69EE  
                       validate@res 05C8                             _get_hex C6C6  
                       validate@rfs 05C0                             _get_str EE12  
           __end_of_continue_action FB72                             _cpu_flg 07E5  
                      _dir_register DBDC                             _dsk_err 026E  
                           _in_file BFA6                             _frd_ptr 07BD  
             ??_SPI_SD_receive_byte 0514                             _ld_word FE98  
                 __end_of_load_file EE12                   URT3Rx_ISR@rx_data 0503  
                           f_gets@p 0671                             f_gets@s 0679  
                        f_read@buff 0640                          f_read@clst 0657  
                        _scan_files 9874               read_prec_or_width@fmt 0504  
                        ??___xxtofl 0508                          f_read@sect 0663  
                        f_read@rcnt 0661                          ??_check_fs 062A  
                        ??_f_getcwd 06B3                             _irq_flg 07CB  
                   find_volume@part 0634                             _nmi_sig 07CD  
                           _u_getch F54C                    ___aldiv@dividend 0504  
                 __end_of_read_sram E4D4                   _board_event_loop1 F3EA  
                        ??_clc_init 0504           SDCard_end_transaction@spi 0515  
                           _req_tbl 07CE                             _set_arg AE0A  
                           efgtoa@c 0566                             efgtoa@d 0572  
                           efgtoa@e 0576                             efgtoa@f 0562  
                           efgtoa@g 0589                             efgtoa@h 057E  
                           efgtoa@i 0586                             efgtoa@l 0582  
                           efgtoa@m 0574            SPI_SD_dummy_clocks@dummy 0514  
                           efgtoa@n 058D                             efgtoa@p 0569  
                           efgtoa@t 056B                             efgtoa@u 058F  
                           efgtoa@w 057C              util_addrdump@addr_offs 05BF  
                      _create_chain 3AF8                          ??_clk_init 0504  
            SDCard_command@argument 052B                          ??_dir_find 067E  
                           _tmp_buf 13F8                          del_space@c 0509  
                        del_space@i 0507                          ??_dir_read 0680  
                           _put_fat 40A8                          ??_dir_next 0666  
                ?_board_event_loop1 0501                       ?_restart_prog 0501  
                           _st_word FF8C                             main@buf 079A  
                           _sprintf F9B0                             _str_inf A8E0  
                           main@res 0797                   util_hexdump@chars 05C5  
                 __end_of_seek_disk CD06                          ??_get_line 055A  
                        f_lseek@bcs 0681                          ??_ld_clust 050F  
                           _sync_fs 9EF0                          f_lseek@ofs 0664  
                           _strncmp CD06                          f_lseek@res 0680  
                        ??_ld_dword 0508                end_of_initialization E284  
                     ??_acquire_bus 0506                             _wup_flg 07CC  
                        ??_make_irq 0504                             floorf@e 0552  
                           floorf@m 054E                  __end_of_URT3Rx_ISR F54C  
                           floorf@u 0554                             floorf@x 0544  
                       ?_f_closedir 05C9                   mount_volume@bsect 069E  
                        f_open@clst 06D0                          f_open@mode 06B3  
                        f_open@path 06B1                      ??_remove_chain 064F  
                           memcmp@l 050C                             memcmp@n 0508  
                           memcmp@r 050E                   mount_volume@nclst 06A3  
                           memcpy@d 050B                             memcpy@n 0508  
                           memcpy@s 050D                          ??_mem_dump 055A  
                        ??_mem_init 05E2                             fputc@fp 0507  
                 mount_volume@tsect 069A                        _get_fileinfo A316  
                           memset@c 0506                             memset@n 0508  
                           memset@p 050A                   __end_of_reset_clk 01D6  
                 __end_of_reset_cpu DF56                             fputs@fp 0510  
         SPI_SD_dummy_clocks@clocks 0510                 ??_board_event_loop1 055A  
                     ?_mount_volume 0681                  _read_prec_or_width E028  
                   disk_status@pdrv 05BD                          ??_see_file 0700  
                         i2u2340_40 F500                           i2u2340_41 F4FC  
                         i2u2341_40 F522                           i2u2341_41 F51E  
                    util_addrdump@i 05DC                     load_program@adr 070A  
                         i2u2339_40 F4EE                           i2u2339_41 F4EA  
                   load_program@cnt 070E                     load_program@btr 0708  
                 __end_of_uart_init FD40               __end_of_setup_monitor E902  
                   ___lldiv@divisor 0508                          f_mount@cfs 06B7  
                 util_hexdump_sum@i 05E2                          f_mount@res 06B4  
                 util_hexdump_sum@p 05E0                          ??_mon_prog 055A  
                        f_mount@opt 06B3                          f_mount@vol 06B9  
                 __end_of_timer_off 0288                     ___lldiv@counter 0510  
                      _get_ldnumber B304                          ??_validate 05C2  
                 __end_of_print_com E58E                   __end_of_print_reg B160  
                 __end_of_vfpfcnvrt 3AF8                          efgtoa@mode 0570  
                 __end_of_port_init F6F4                          efgtoa@sign 0588  
                         _SPI1TCNTH 0083                           _SPI1TCNTL 0082  
                  ___aldiv@quotient 050E                          ??_timer_on 0504  
                           postdec1 04E5                             postdec2 04DD  
               ?_read_prec_or_width 0504                          ??_setup_sd 05D5  
                           postinc0 04EE                             postinc1 04E6  
                           postinc2 04DE                   __end_of_start_W65 FF34  
             __end_of_SPI_SD_select 0206                    vfpfcnvrt@convarg 059E  
                        ??_st_clust 0510              __end_of___SDCard_crc16 E418  
                    move_window@res 05FE                          ??_st_dword 050A  
                 __end_of_start_cpu FE28                          ??_vfprintf 055A  
                           strchr@c 0506                          dir_clear@n 0628  
                           strchr@s 0504               ??___SDCard_command_r1 0521  
                        dir_alloc@n 0685                   SPI_SD_receive@buf 0506  
                           strcpy@d 0508                             strlen@a 0506  
                           strlen@s 0504                    remove_chain@clst 0647  
                        dir_find@dp 067C                          dir_find@fs 0680  
                           strstr@h 050B                             strstr@n 050D  
                        _return_cpu 022E                          dir_read@dp 067C  
                        dir_read@fs 0684           __end_of_board_event_loop1 F460  
                        dir_sdi@csz 064E                        read_sector@n 06A2  
                        dir_sdi@ofs 0640                          dir_next@dp 0662  
                        dir_next@fs 0676                         ___fladd@grs 0513  
                       ?_disk_ioctl 05BD                        read_sram@buf 0508  
                      read_sram@len 050A                     release_bus@ctx_ 0504  
                        f_write@btw 0666                       ___xxtofl@sign 050C  
                        f_write@res 067A                       ?_SPI_SD_begin 0504  
                       ?_disk_write 0600                       ?_setup_tomer0 0501  
                        _prt_reload 01D6                      ??_restart_prog 055A  
                        get_fat@obj 0624                          get_fat@val 0636  
              ??_read_prec_or_width 0508                         ___fldiv@grs 053E  
                       ___fldiv@rem 0537                     get_ldnumber@vol 050D  
                   disk_write@count 0606                          disk_read@i 05FC  
                        get_hex@buf 0504                    _SPI_SD_configure CAB6  
                     ??_create_name 0510                         ___flmul@grs 0520  
                    ??_mount_volume 0686                          ld_clust@cl 0513  
                        ld_clust@fs 050B                     _bus_release_req 0264  
               __end_of_debug_flags F20F                          boot_file@m 0717  
                     ??_get_fattime 0508                   SPI_SD_select@ctx_ 0504  
                        get_str@buf 0700                          get_str@cnt 0702  
                     ??_find_volume 0636                          ld_dword@rv 050D  
                    __end_of_DbcTbl F20B                       ??_disk_status 055A  
               __end_of_acquire_bus F90E                     setup_monitor@rs 0718  
    SDCard_init@initial_clock_speed 05C5                     print_reg@reg_02 05C2  
                        _strin_func 08D3                        write_sram@ab 0510  
                 ?_util_hexdump_sum 05DA                     ?___SDCard_crc16 0504  
                        in_file@chr 05FF                      __end_of___flge D346  
                    __end_of___fleq E9AC                      __end_of___lmul F690  
                       vfpfcnvrt@ap 0597                         st_clust@dir 050A  
                       vfpfcnvrt@cp 05A3                         vfpfcnvrt@fp 0593  
                    __end_of_f_gets DA0C                  ??_util_hexdump_sum 055A  
                    __end_of_f_read 344A                        scan_files1@p 074E  
                    __end_of_f_open 2D36                      __end_of_efgtoa 1538  
                    __end_of_f_sync 9EF0                        scan_files@fn 074B  
                        _write_sram D13E                      __end_of_floorf A316  
                    __end_of_memcmp D544                      __end_of_memcpy FA50  
                        floorf@F521 081C                      __end_of_memset FE60  
                      _bus_hold_req 0258                     SPI_SD_begin@ctx 0506  
                        ld_word@ptr 0504                    ?_continue_action 0501  
                     SDCard_crc@crc 050C                       SDCard_crc@buf 0504  
              ___SDCard_crc16@count 0508                      __end_of_printf FFDC  
                       ?_scan_files 0501                      __end_of_strchr F170  
                    __end_of_strcpy FDB8                      __end_of_strlen F9B0  
                    ??_SPI_SD_begin 0506                      __end_of_strstr DE7C  
                    ??_setup_tomer0 0504                 start_initialization E1C0  
                  write_sector@fres 06A1                         st_dword@val 0506  
                       st_dword@ptr 0504                         __end_of_abs FF04  
        ___SDCard_wait_response@spi 0518                         __end_of_pad ECDC  
                       __end_of_rom F21F    __end_of_SPI_SD_begin_transaction 014A  
                        ivt0x8_base 0008                         put_fat@clst 0626  
          _debug_flags@diskio$F4060 F20B               __end_of___fpclassifyf D642  
                   _disk_initialize B4A8                SPI_SD_dummy_clocks@i 0512  
                    load_config@buf 070A                          load_file@p 0715  
                    load_config@str 0711                       ??_follow_path 0688  
                       ___strtoxl@a 0527                         ___strtoxl@c 052D  
                       ___strtoxl@s 0510                 __end_of_create_name 4A70  
                       vfprintf@fmt 05A7                            ??___flge 0533  
                          ??___fleq 050C                            ??___lmul 050C  
                   ___strtoxl@flags 0526                            ??_f_gets 05FF  
                          ??_f_read 0646                 __end_of_get_fattime 022E  
                          ??_f_open 06B4                     ___strtoxl@limit 0522  
                          ??_efgtoa 0558             ?_SPI_SD_end_transaction 0508  
                          ??_f_sync 055A                         __pdataBANK7 07E6  
                       __pdataBANK8 08D3                         __pdataBANK9 0900  
                          ??_floorf 0548                 __end_of_find_volume A702  
                          ??_memcmp 050A                 __end_of_disk_status FCC6  
                          ??_memcpy 050A                       ??_load_config 0702  
                          ??_memset 050A            ??_SDCard_end_transaction 0515  
                        memset@dest 0504                            ??_printf 055A  
                       ?_return_cpu 0501                __end_of_remove_chain 9CDA  
                   SPI_SD_receive@i 050D                     SPI_SD_receive@p 0510  
                          ??_strchr 0508                            ??_strcpy 0508  
                          ??_strlen 0506                            ??_strstr 050F  
                         ___fladd@a 0508                           ___fladd@b 0504  
                       __pbssBANK10 0A00                         __pbssBANK11 0B00  
                        read_sram@i 050C                     SPI_SD_send@ctx_ 0504  
                         ___fldiv@a 052F                           ___fldiv@b 052B  
                       __pbssBIGRAM 0B80                     _SDCard_write512 82E6  
                  ??_unimon_console 055A                           ___flmul@a 0516  
                         ___flmul@b 0512                         __pbssCOMRAM 055A  
                    seek_disk@filep 0697         __end_of_wait_for_programmer FB2C  
                         ___flsub@a 052F                           ___flsub@b 052B  
                     __pcstackBANK5 0560                       __pcstackBANK6 0600  
                     __pcstackBANK7 0700                         ?_prt_reload 0501  
                     ??_read_sector 069C             __end_of_bus_release_req 026E  
                ___SDCard_crc16@crc 0504                  ___SDCard_crc16@buf 0506  
                      f_closedir@dp 05C9                        f_closedir@fs 05CB  
                       _debug_flags F20D                        check_fs@sect 0626  
                      check_fs@sign 062D                        f_getcwd@buff 06AF  
              SDCard_write512@i_691 05EE                          see_file@br 0704  
                        see_file@fr 0706                         _acquire_bus F8BA  
                     f_opendir@path 06B1                        _load_program 5D0C  
                         ___strtoxl 5870                       ??_scan_files1 055A  
              SDCard_write512@count 05E6                SDCard_write512@retry 05F0  
                     ?_util_hexdump 05BD                    ___SDCard_crc16@p 050F  
           bus_master_operation@buf 0712             bus_master_operation@cnt 0714  
                SDCard_write512@crc 05F4                  SDCard_write512@buf 05E4  
                         _f_readdir DAF6                         _efgtoa$4752 056D  
                         _del_space EFD2                           _main$5311 0793  
                SDCard_write512@spi 05F6                           _dtoa$4721 0524  
                  SDCard_write512@i 05EC                           _f_opendir BE28  
       __end_of_SPI_SD_dummy_clocks F7B6      __end_of_SPI_SD_end_transaction 016C  
                 util_addrdump@addr 05C3                       __pmediumconst F200  
                  ??_SDCard_command 0533                    ??_SDCard_read512 05E8  
                          ?___aldiv 0504                __end_of_restart_prog EA54  
                          ?___almod 0504                            ?___fladd 0504  
                 util_addrdump@size 05C5                            ?___fldiv 052B  
                         __ptext100 C568                           __ptext101 D13E  
                         __ptext110 EAFC                           __ptext102 F170  
                          ?___flneg 0504                           __ptext111 2D36  
                         __ptext103 C406                           __ptext120 8E56  
                         __ptext112 D346                           __ptext104 CBE8  
                         __ptext121 C294                           __ptext113 FC84  
                         __ptext105 1DB4                           __ptext130 FA00  
                         __ptext122 FFB4                           __ptext114 69EE  
                         __ptext106 3AF8                           __ptext131 F864  
                         __ptext123 F80E                           __ptext115 DF56  
                         __ptext107 40A8                           __ptext140 E902  
                         __ptext132 A104                           __ptext124 344A  
                         __ptext116 B64C                           __ptext108 FF8C  
                         __ptext141 7554                           __ptext133 D544  
                         __ptext125 BB1E                           __ptext117 E6FC  
                         __ptext109 F5BA                           __ptext150 E354  
                         __ptext142 A702                           __ptext134 D038  
                         __ptext126 B7EE                           __ptext118 82E6  
                         __ptext151 E646                           __ptext143 EC3E  
                         __ptext135 FB72                           __ptext127 E028  
                         __ptext119 E7AA                           __ptext160 F758  
                         __ptext152 FBB8                           __ptext144 FBFE  
                         __ptext136 4A70                           __ptext128 0AD8  
                         __ptext161 FCC6                           __ptext153 0106  
                         __ptext145 E28A                           __ptext137 FE60  
                         __ptext129 FD7C                           __ptext170 AAA6  
                         __ptext162 F8BA                           __ptext154 7FBE  
                         __ptext146 0206                           __ptext138 65C8  
                         __ptext171 0288                           __ptext163 EEAC  
                         __ptext155 0128                           __ptext147 FED0  
                         __ptext139 D242                           __ptext172 0278  
                         __ptext164 FE98                           __ptext156 F1F2  
                         __ptext148 DA0C                           __ptext173 F4D8  
                         __ptext165 E58E                           __ptext157 FF62  
                         __ptext149 CF2E                           __ptext166 E0F4  
                         __ptext158 014A                           __ptext167 F626  
                         __ptext159 01EE                           __ptext168 026E  
                         __ptext169 0258                            ?___flmul 0512  
                         _dir_clear C818                            ?_dbc_2nd 0504  
                         _dir_alloc C968                            ?___flsub 052B  
                          ?___fltol 0504                  load_program@header 0713  
                          ?_dbc_1st 0504                            ?___lldiv 0504  
                         _clst2sect E0F4                   ?_change_directory 0501  
                          ?_f_chdir 06AF                           _file_size 07B9  
                    dir_alloc@n_ent 067E                            ?_f_close 062F  
                         _disk_init F90E                           _disk_read E7AA  
                         _flash_apl FC42                 util_addrdump@header 05BD  
                     follow_path@dp 0684                       follow_path@fs 068E  
                          ?_f_lseek 0662                       follow_path@ns 0690  
                       ?_write_sram 0504                    ___almod@dividend 0504  
               __end_of_follow_path 8BA2                            ?_f_mount 06AF  
                     _validate$2890 05C6                          mon_prog@rs 0718  
                        mon_prog@sw 0719                           _boot_file 7C6E  
                     ??_release_bus 0506                            ?_dir_sdi 063E  
                ??_change_directory 055A                            ?_f_write 0662  
                          ?_get_fat 0624                            ?_get_hex 0504  
                          ?_get_str 0700                __end_of_mount_volume 0AD8  
                          ?_dsk_err 0501                            ?_in_file 0700  
                          ?_ld_word 0504                           f_chdir@dj 06B4  
                         f_chdir@fs 06B2                           _drive_cpu FD40  
                          ?_u_getch 0700                util_hexdump_sum@addr 05DC  
               __end_of_load_config 71A0              SDCard_read512@resp_crc 05F2  
                          ?_set_arg 0504                util_hexdump_sum@size 05DE  
            SDCard_read512@response 05FA                           f_close@fp 062F  
                         f_close@fs 0631                           _load_file ED78  
                         f_gets@len 066B                           check_fs@b 0631  
                          ?_put_fat 0624                           check_fs@w 062F  
                         f_getcwd@i 0708                           f_getcwd@n 0706  
                        set_arg@buf 0504                            ?_st_word 0504  
           __end_of_disk_initialize B64C                            ?_sprintf 05AD  
                          ?_str_inf 0700                            _CLCnGLS0 00DC  
                          _CLCnGLS1 00DD                            _CLCnGLS2 00DE  
                          _CLCnGLS3 00DF                            ?_sync_fs 061A  
                          ?_strncmp 0504                            _CLCnSEL0 00D8  
                          _CLCnSEL1 00D9                            _CLCnSEL2 00DA  
                          _CLCnSEL3 00DB                       ??_SDCard_init 05CB  
                         _read_sram E418                        f_read@remain 0652  
                      ??_f_closedir 055A                           f_read@btr 0642  
                         f_read@res 0656                   find_volume@mbr_pt 063C  
                  _board_event_loop EBA0                     ___aldiv@divisor 0508  
           SPI_SD_dummy_clocks@ctx_ 050E                          ?___strtoxl 0510  
                   ___aldiv@counter 050C                         _create_name 4594  
                         _seek_disk CBE8            _SPI_SD_begin_transaction 0128  
                         f_lseek@fp 0662                           f_lseek@fs 0685  
               __end_of_read_sector C6C6                      ??_util_hexdump 05C3  
                         f_open@bcs 06BC                           f_open@ofs 06CC  
                         f_open@res 06D6                    mount_volume@mode 0685  
                  mount_volume@path 0681                    mount_volume@nrsv 0698  
                       _get_fattime 021C                    mount_volume@stat 06A2  
     SDCard_command@response_buffer 052F            ??___SDCard_wait_response 0517  
                      _SPI1CON0bits 0084                        _SPI1CON1bits 0085  
                      _SPI1CON2bits 0086                      load_program@br 0710  
                        ?_f_readdir 0689                      load_program@fr 0712  
                       _find_volume A50E                          ?_del_space 0504  
                       _disk_status FC84                       ??_move_window 0620  
                         f_mount@fs 06AF                           f_mount@rp 06B5  
                     ?_write_sector 069A                     follow_path@path 0686  
              __end_of_SPI_SD_begin FF62                           _reset_clk 01BE  
                         _reset_cpu DE7C                            _SPI1BAUD 0089  
              __end_of_setup_tomer0 01BE                            _SPI1CON0 0084  
                          _SPI1CON1 0085                            _SPI1INTE 008B  
                        ?_f_opendir 06AF                 ___strtoxl@is_signed 0516  
                          _SPI1RXIF 2588                 __end_of_scan_files1 9874  
                     move_window@fs 061A                           _uart_init FD04  
                        ?_dir_clear 061A                           dir_find@c 0682  
                        ?_dir_alloc 067C                     remove_chain@obj 0645  
                   remove_chain@res 065B                     remove_chain@nxt 0657  
       __end_of_SPI_SD_receive_byte 0128                           _timer_off 0284  
                        ?_clst2sect 0510                           f_sync@dir 062B  
                      f_readdir@fno 068B             __end_of_SDCard_write512 85D6  
                      f_readdir@res 068F                           f_sync@res 062A  
                         dir_read@b 0687            __end_of_SPI_SD_configure CBE8  
                         dir_sdi@dp 063E                           dir_sdi@fs 0656  
                         _print_com E4D4                           _print_reg AFB8  
                        ?_disk_init 06BB                          ?_disk_read 0600  
                         _vfpfcnvrt 344A                      release_bus@ctx 0506  
                        ?_flash_apl 0501                           f_write@cc 067F  
                         _port_init F690                           f_write@bw 0668  
                         f_write@fp 0662                           f_write@fs 068B  
                         _xtoa$4774 052A                           get_fat@bc 063A  
                      del_space@pos 0508                           get_fat@fs 063C  
                        ?_boot_file 0501                           get_fat@wc 0634  
                         _start_W65 FF04                           get_hex@ch 0516  
                __end_of_f_closedir FDF0                           _start_lba 07EE  
                         _start_cpu FDF0                           get_line@c 05C1  
                         get_line@n 05C3                           get_line@s 05BD  
             __end_of_util_addrdump C406                     acquire_bus@ctx_ 0504  
                      ??_disk_ioctl 055A                          ?_drive_cpu 0501  
         _bus_master_operation$1027 0710                        ??_disk_write 055A  
                       f_chdir@path 06AF                        f_lseek@ifptr 0678  
                       write_sram@i 050E                        f_lseek@nsect 067C  
                        ?_load_file 0501                 __end_of_release_bus FD04  
                        st_clust@cl 050C                          vfpfcnvrt@c 05A2  
                        st_clust@fs 0508                    ?_bus_release_req 0501  
                 ___lmul@multiplier 0504                           copy_data0 E1D4  
                         copy_data1 E1F4                           copy_data2 E214  
                        ?_read_sram 0504                       util_hexdump@i 05D8  
                         ld_word@rv 0509                       ??_setup_drive 0506  
                    ___strtoxl$4607 051E                      ___strtoxl$4608 0520  
                     ??_SPI_SD_send 050A                        SDCard_init@i 05CC  
                        ?_seek_disk 068B                          put_fat@res 0644  
                        put_fat@val 062A                           mem_dump@p 05DE  
            util_hexdump_sum@header 05DA                           mem_init@i 05E6  
                  ??___SDCard_crc16 050A                     dir_next@stretch 0664  
               __end_of_SDCard_init 9606                      ??_write_sector 069C  
                          __Hrparam 0000         __end_of___SDCard_command_r1 E6FC  
                        ?_reset_clk 0501                       load_config@fr 070C  
                        ?_reset_cpu 0501                      restart_prog@rs 0716  
                         memcpy@tmp 050A                          vfprintf@ap 05A9  
                          __Lrparam 0000                          vfprintf@fp 05A5  
                       _follow_path 88C2                      ___strtoxl@base 0514  
                __end_of_disk_ioctl F758                          ?_uart_init 0501  
                __end_of_disk_write E7AA                          ?_timer_off 0501  
                        st_word@val 0506                          st_word@ptr 0504  
                        ?_print_com 0501                          ?_print_reg 0501  
                        ?_vfpfcnvrt 0593                          ?_port_init 0501  
               __end_of_move_window E028                         _load_config 6DDA  
      ___SDCard_command_r1@argument 051B                          ?_start_W65 0501  
                       f_getcwd@ccl 0700                         f_getcwd@fno 070A  
                       f_getcwd@len 06B1                          ?_start_cpu 0501  
                ___fpclassifyf@F465 0820                         f_getcwd@res 0722  
                      f_opendir@res 06B5                            dbc_2nd@c 0506  
                      ??_scan_files 055A                          sprintf@fmt 05AF  
                          dbc_1st@c 0506                            ___xxtofl AAA6  
                          _check_fs 85D6                            _f_getcwd 4F26  
                        str_inf@buf 0700                          str_inf@cnt 0702  
                          _clc_init C120                            _cin_file 11F8  
                          __pivt0x8 0008                     dir_register@res 068C  
      __end_of_bus_master_operation 8E56                       dir_clear@ibuf 0620  
                     dir_clear@clst 061C                    util_addrdump@buf 05DA  
                          _clk_init 016C                    read_sector@filep 069F  
                     dir_clear@sect 0622                            __ptext10 ED78  
                          __ptext11 023E                            __ptext20 FF34  
                          __ptext12 9606                            __ptext21 F2F4  
                          __ptext13 9874                            __ptext30 B160  
                          __ptext22 E858                            __ptext14 EA54  
                          __ptext31 FDB8                            __ptext23 FF04  
                          __ptext15 FAE6                            __ptext40 EFD2  
                          __ptext32 FB2C                            __ptext24 01A4  
                          __ptext16 FD04                            __ptext41 5870  
                          __ptext33 DE7C                            __ptext25 AE0A  
                          __ptext17 EF40                            __ptext50 01D6  
                          __ptext42 CE22                            __ptext34 01BE  
                          __ptext26 DAF6                            __ptext18 9380  
                          __ptext51 5D0C                            __ptext43 FA9C  
                          __ptext35 F690                            __ptext27 BE28  
                          __ptext19 CAB6                            __ptext60 EBA0  
                          __ptext52 DD9E                            __ptext44 F90E  
                          __ptext36 90F8                            __ptext28 4F26  
                          __ptext61 FFDC                            __ptext53 CD06  
                          __ptext45 D642                            __ptext37 C6C6  
                          __ptext29 A316                            __ptext70 A8E0  
                          __ptext62 0264                            __ptext54 F960  
                          __ptext46 016C                            __ptext38 6DDA  
                          __ptext71 E418                            __ptext63 8BA2  
                          __ptext55 F9B0                            __ptext47 C120  
                          __ptext39 D920                            __ptext80 F274  
                          __ptext72 25B6                            __ptext64 B98C  
                          __ptext56 FD40                            __ptext48 D82E  
                          __ptext81 BCA4                            __ptext73 9AA8  
                          __ptext65 1538                            __ptext57 0280  
                          __ptext49 FDF0                            __ptext90 619E  
                          __ptext82 D446                            __ptext74 0000  
                          __ptext66 AC5A                            __ptext58 0284  
                          __ptext91 C818                            __ptext83 4594  
                          __ptext75 B304                            __ptext67 BFA6  
                          __ptext59 F3EA                            __ptext92 F7B6  
                          __ptext84 F0EA                            __ptext76 A50E  
                          __ptext68 F54C                            _dir_find BCA4  
                          __ptext93 9CDA                            __ptext85 DCBE  
                          __ptext77 85D6                            __ptext69 EE12  
                          __ptext94 9EF0                            __ptext86 ECDC  
                          __ptext78 B4A8                            __ptext95 FE28  
                          __ptext87 DBDC                            __ptext79 88C2  
                          __ptext96 F6F4                            __ptext88 C968  
                          __ptext97 FA50                            __ptext89 78E4  
                          __ptext98 021C                            __ptext99 F460  
                 load_program@fname 0700                            _dir_read B160  
                          _dir_next 619E                         _read_sector C568  
                          _get_char 08D9                            _disk_buf 0A00  
                          _fin_name 08C2                   load_program@rdbuf 0706  
                          _fileinfo 0800                    ?_disk_initialize 0501  
                          _get_line CE22                            _fin_size 07BB  
                         mon_prog@p 0716                            _ld_clust F274  
                          _ld_dword E58E                     ___almod@divisor 0508  
                    sync_window@res 05FC                            _make_irq FFDC  
                   ___almod@counter 050C        ___SDCard_command_r1@response 0528  
                        strcpy@dest 0504              _SDCard_end_transaction FF62  
                       ??___strtoxl 0517                            _mem_dump F370  
               util_hexdump_sum@sum 05E4                            _mem_init 90F8  
              SPI_SD_receive@repeat 050C                            f_gets@dc 0673  
                          _load_flg 07C9                            f_gets@fp 066D  
                          f_gets@nc 066F                            f_gets@rc 0677  
                          _line_buf 0A80                         f_read@csect 065D  
                       _scan_files1 9606                          sync_fs@res 05FD  
                      _remove_chain 9AA8                         f_read@rbuff 065B  
                          f_read@cc 065F                            f_read@br 0644  
                          f_read@fp 063E                            f_read@fs 0667  
                          _see_file 53D4                            _raw_addr 07AD  
                          f_open@dj 06D7                            f_open@cl 06C4  
                          f_open@fp 06AF                            f_open@fs 06D4  
                          f_open@sc 06C8                     mount_volume@fmt 06AB  
                          f_open@tm 06C0                         _IVTLOCKbits 0459  
                   mount_volume@rfs 0683                         ??_f_readdir 055A  
                          _mon_prog D73C                     mount_volume@vol 0692  
               __end_of_setup_drive F4D6                         ??_del_space 0506  
                          _validate D346                            efgtoa@fp 0560  
                          efgtoa@ne 0567                            efgtoa@pp 056F  
                          efgtoa@ou 0578                         ??_f_opendir 055A  
               __end_of_SPI_SD_send EF40                  __end_of_scan_files 9AA8  
                          isa$xinst 0000                            _timer_on 0280  
                       f_readdir@dp 0689                         f_readdir@fs 068D  
                          f_sync@fp 0624                            f_sync@fs 062D  
                          f_sync@tm 0626                            _setup_sd EF40  
                       ??_dir_clear 05FD                         ??_dir_alloc 0680  
                          _st_clust FA50                            _st_dword F5BA  
                       ??_clst2sect 0516                            get_hex@c 050C  
                          get_hex@d 050E                            _vfprintf F80E  
                  ?_SDCard_write512 05DE                       ??_sync_window 060A  
                         printf@fmt 05AD                      acquire_bus@ctx 0506  
                       ??_disk_init 055A                         ??_disk_read 055A  
                       ??_flash_apl 055A                            get_str@c 0705  
                          get_str@i 0707                  util_hexdump@header 05BD  
                       f_lseek@clst 0687                        ??_return_cpu 055A  
                       ??_boot_file 055A                      _SPI_SD_receive 7FBE  
                       _release_bus FCC6                       ??_Default_ISR 0501  
              __end_of_util_hexdump C568                SPI_SD_configure@ctx_ 05BD  
                mount_volume@fasize 06A7                         ??_drive_cpu 055A  
                         put_fat@bc 0642                           put_fat@fs 0624  
                          memcmp@vl 0504                            memcmp@vr 0506  
                      ??_prt_reload 055A                            memcpy@d1 0504  
                          memcpy@s1 0506                         ??_load_file 055A  
                mount_volume@szbfat 068E                  mount_volume@sysect 0694  
                      _restart_prog E9AC                         ??_read_sram 050C  
                     clst2sect@clst 0512                         f_opendir@dp 06AF  
                       f_opendir@fs 06B3                            intlevel2 0000  
                      ?_acquire_bus 0504                         _SDCard_init 9380  
                         sprintf@ap 05B3                            u_getch@c 05FF  
               SPI_SD_receive@i_590 050F                      dir_register@dp 0688  
                    dir_register@fs 068A                    load_program@adr0 0702  
                   read_sector@fres 06A1                        dir_clear@szb 0626  
                       ??_seek_disk 068D                    ___lldiv@dividend 0504  
                      dir_alloc@res 0687                       sync_window@fs 0608  
                       _SLRCONBbits 040B                 SPI_SD_receive@count 0508  
                      _mount_volume 0000                         f_mount@path 06B1  
                         strcpy@src 0506                            set_arg@i 0506  
                         sync_fs@fs 061A                  __end_of_return_cpu 023E  
           SDCard_command@responsep 0538                      mount_volume@fs 06AD  
                       ??_reset_clk 0504                         ??_reset_cpu 05BD  
                     _setup_monitor E858                         _move_window DF56  
                     ??_wstart_prog 055A                         efgtoa@nmode 0571  
                        _SPI1SCKPPS 026A                          _SPI1SDIPPS 026B  
                       ??_uart_init 0504                            printf@ap 05BB  
                __end_of_prt_reload 01EE                         ??_timer_off 0504  
                        _SPI1TWIDTH 0088                          _TIMER0_ISR 0278  
            __end_of_SPI_SD_receive 82E6                       _SPI_SD_select 01EE  
                       ??_print_com 055A                         ??_print_reg 05BD  
                       ??_vfpfcnvrt 0599                         ??_port_init 0504  
                          put_fat@p 0640                     move_window@sect 061C  
                      ??_write_sram 050C            __end_of_board_event_loop EC3E  
                       ??_start_W65 0504                       ?_dir_register 0688  
                       ??_start_cpu 0504                          _SDCard_crc F1F2  
                      dir_read@attr 0686                            sprintf@f 05B5  
                          sprintf@s 05AD                            str_inf@a 0707  
                          str_inf@c 0705                            str_inf@i 0708  
                       dir_clear@fs 061A                         dir_alloc@dp 067C  
                       dir_alloc@fs 0683                    ___lldiv@quotient 050C  
                SPI_SD_receive@ctx_ 0504              ___SDCard_wait_response FBB8  
               __end_of_sync_window B7EE                         dir_find@res 0683  
                          strncmp@l 0504                            strncmp@n 0508  
                          strncmp@r 0506                   remove_chain@pclst 064B  
              __end_of_write_sector BB1E                        ___aldiv@sign 050D  
                     ?_create_chain 0645          ??_SPI_SD_begin_transaction 050A  
                      _SPI_SD_begin FF34        SPI_SD_begin_transaction@ctx_ 0508  
                      _setup_tomer0 01A4                            strstr@nl 050F  
                      dir_next@clst 0678                    _create_name$2691 0515  
                  _create_name$2687 0513                       ___fladd@signs 0510  
               _unimon_console$1022 070A                 __end_of_Default_ISR 028A  
                       clst2sect@fs 0510                         dir_read@res 0688  
                       dir_read@vol 067E                         dir_sdi@clst 0652  
                       _setup_drive F460                        ___almod@sign 050D  
                     ?_get_fileinfo 0511                        ?_create_name 050C  
                      ___fladd@aexp 0511                        ___fladd@bexp 0512  
                       _SPI_SD_send EEAC                         dir_next@ofs 0672  
                      f_write@csect 067D                       read_sram@addr 0504  
                      f_write@wbuff 067B                        ?_get_fattime 0504  
                __end_of_write_sram D242                        _put_fat$2184 063C  
                      _put_fat$2185 063E                          _SPI_SD_ctx 07FE  
                       f_write@buff 0664                         f_write@clst 0681  
                    ?_setup_monitor 0716                         f_write@sect 0687  
                      ?_find_volume 0632                         f_write@wcnt 0685  
                     ?_get_ldnumber 0504                        ?_disk_status 0501  
        SPI_SD_end_transaction@ctx_ 0508  
