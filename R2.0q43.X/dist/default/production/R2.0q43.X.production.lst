

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 08 21:12:11 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F47Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK7,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK9,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    66                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1,group=3
    77                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1,group=3
    78                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,group=3
    79                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1,group=3
    80                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1,group=3
   107                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=3
   109                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=3
   120                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1,group=3
   147                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1,group=1
   148                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1,group=1
   150                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1,group=1
   151                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1,group=1
   152                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1,group=1
   153                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1,group=3
   154                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1,group=3
   155                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1,group=3
   156                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1,group=3
   157                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1,group=3
   158                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1,group=2
   159                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1,group=2
   160                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1,group=2
   161                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1,group=2
   162                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1,group=2
   163                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1,group=2
   165                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1,group=1
   167                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1,group=3
   169                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1,group=3
   170                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1,group=3
   172                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1,group=2
   173                           	psect	text149,global,reloc=2,class=CODE,space=0,delta=1,group=2
   174                           	psect	text150,global,reloc=2,class=CODE,space=0,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,space=0,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,space=0,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,space=0,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,space=0,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,space=0,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,space=0,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,space=0,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,space=0,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,space=0,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,space=0,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,space=0,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,space=0,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,space=0,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,space=0,delta=1,group=2
   192                           	psect	text168,global,reloc=2,class=CODE,space=0,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,space=0,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,space=0,delta=1,group=2
   195                           	psect	text171,global,reloc=4,class=CODE,space=0,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,space=0,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,space=0,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   202   000000                     
   203                           ; Generated 23/02/2024 GMT
   204                           ; 
   205                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   206                           ; All rights reserved.
   207                           ; 
   208                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   209                           ; 
   210                           ; Redistribution and use in source and binary forms, with or without modification, are
   211                           ; permitted provided that the following conditions are met:
   212                           ; 
   213                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   214                           ;        conditions and the following disclaimer.
   215                           ; 
   216                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   217                           ;        of conditions and the following disclaimer in the documentation and/or other
   218                           ;        materials provided with the distribution. Publication is not required when
   219                           ;        this file is used in an embedded application.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F47Q43 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237   0004E0                     bsr             equ	1248
   238   0004E9                     fsr0            equ	1257
   239   0004EA                     fsr0h           equ	1258
   240   0004E9                     fsr0l           equ	1257
   241   0004E1                     fsr1            equ	1249
   242   0004E2                     fsr1h           equ	1250
   243   0004E1                     fsr1l           equ	1249
   244   0004D9                     fsr2            equ	1241
   245   0004DA                     fsr2h           equ	1242
   246   0004D9                     fsr2l           equ	1241
   247   0004EF                     indf0           equ	1263
   248   0004E7                     indf1           equ	1255
   249   0004DF                     indf2           equ	1247
   250   0004D6                     intcon          equ	1238
   251   000041                     nvmcon          equ	65
   252   0004F9                     pcl             equ	1273
   253   0004FA                     pclath          equ	1274
   254   0004FB                     pclatu          equ	1275
   255   0004EB                     plusw0          equ	1259
   256   0004E3                     plusw1          equ	1251
   257   0004DB                     plusw2          equ	1243
   258   0004ED                     postdec0        equ	1261
   259   0004E5                     postdec1        equ	1253
   260   0004DD                     postdec2        equ	1245
   261   0004EE                     postinc0        equ	1262
   262   0004E6                     postinc1        equ	1254
   263   0004DE                     postinc2        equ	1246
   264   0004EC                     preinc0         equ	1260
   265   0004E4                     preinc1         equ	1252
   266   0004DC                     preinc2         equ	1244
   267   0004F3                     prod            equ	1267
   268   0004F4                     prodh           equ	1268
   269   0004F3                     prodl           equ	1267
   270   0004D8                     status          equ	1240
   271   0004F5                     tablat          equ	1269
   272   0004F6                     tblptr          equ	1270
   273   0004F7                     tblptrh         equ	1271
   274   0004F6                     tblptrl         equ	1270
   275   0004F8                     tblptru         equ	1272
   276   0004FD                     tosl            equ	1277
   277   0004E8                     wreg            equ	1256
   278   000039                     CLKRCON         equ	57	;# 
   279   00003A                     CLKRCLK         equ	58	;# 
   280   000040                     NVMCON0         equ	64	;# 
   281   000041                     NVMCON1         equ	65	;# 
   282   000042                     NVMLOCK         equ	66	;# 
   283   000043                     NVMADR          equ	67	;# 
   284   000043                     NVMADRL         equ	67	;# 
   285   000044                     NVMADRH         equ	68	;# 
   286   000045                     NVMADRU         equ	69	;# 
   287   000046                     NVMDAT          equ	70	;# 
   288   000046                     NVMDATL         equ	70	;# 
   289   000047                     NVMDATH         equ	71	;# 
   290   000048                     VREGCON         equ	72	;# 
   291   000049                     BORCON          equ	73	;# 
   292   00004A                     HLVDCON0        equ	74	;# 
   293   00004B                     HLVDCON1        equ	75	;# 
   294   00004C                     ZCDCON          equ	76	;# 
   295   000060                     PMD0            equ	96	;# 
   296   000061                     PMD1            equ	97	;# 
   297   000063                     PMD3            equ	99	;# 
   298   000064                     PMD4            equ	100	;# 
   299   000065                     PMD5            equ	101	;# 
   300   000066                     PMD6            equ	102	;# 
   301   000067                     PMD7            equ	103	;# 
   302   000068                     PMD8            equ	104	;# 
   303   00006A                     MD1CON0         equ	106	;# 
   304   00006B                     MD1CON1         equ	107	;# 
   305   00006C                     MD1SRC          equ	108	;# 
   306   00006D                     MD1CARL         equ	109	;# 
   307   00006E                     MD1CARH         equ	110	;# 
   308   00006F                     CMOUT           equ	111	;# 
   309   000070                     CM1CON0         equ	112	;# 
   310   000071                     CM1CON1         equ	113	;# 
   311   000072                     CM1NCH          equ	114	;# 
   312   000073                     CM1PCH          equ	115	;# 
   313   000074                     CM2CON0         equ	116	;# 
   314   000075                     CM2CON1         equ	117	;# 
   315   000076                     CM2NCH          equ	118	;# 
   316   000077                     CM2PCH          equ	119	;# 
   317   000078                     WDTCON0         equ	120	;# 
   318   000079                     WDTCON1         equ	121	;# 
   319   00007A                     WDTPS           equ	122	;# 
   320   00007A                     WDTPSL          equ	122	;# 
   321   00007B                     WDTPSH          equ	123	;# 
   322   00007C                     WDTTMR          equ	124	;# 
   323   00007D                     DAC1DAT         equ	125	;# 
   324   00007D                     DAC1DATL        equ	125	;# 
   325   00007F                     DAC1CON         equ	127	;# 
   326   000080                     SPI1RXB         equ	128	;# 
   327   000081                     SPI1TXB         equ	129	;# 
   328   000082                     SPI1TCNT        equ	130	;# 
   329   000082                     SPI1TCNTL       equ	130	;# 
   330   000083                     SPI1TCNTH       equ	131	;# 
   331   000084                     SPI1CON0        equ	132	;# 
   332   000085                     SPI1CON1        equ	133	;# 
   333   000086                     SPI1CON2        equ	134	;# 
   334   000087                     SPI1STATUS      equ	135	;# 
   335   000088                     SPI1TWIDTH      equ	136	;# 
   336   000089                     SPI1BAUD        equ	137	;# 
   337   00008A                     SPI1INTF        equ	138	;# 
   338   00008B                     SPI1INTE        equ	139	;# 
   339   00008C                     SPI1CLK         equ	140	;# 
   340   00008D                     SPI2RXB         equ	141	;# 
   341   00008E                     SPI2TXB         equ	142	;# 
   342   00008F                     SPI2TCNT        equ	143	;# 
   343   00008F                     SPI2TCNTL       equ	143	;# 
   344   000090                     SPI2TCNTH       equ	144	;# 
   345   000091                     SPI2CON0        equ	145	;# 
   346   000092                     SPI2CON1        equ	146	;# 
   347   000093                     SPI2CON2        equ	147	;# 
   348   000094                     SPI2STATUS      equ	148	;# 
   349   000095                     SPI2TWIDTH      equ	149	;# 
   350   000096                     SPI2BAUD        equ	150	;# 
   351   000097                     SPI2INTF        equ	151	;# 
   352   000098                     SPI2INTE        equ	152	;# 
   353   000099                     SPI2CLK         equ	153	;# 
   354   0000AC                     ACTCON          equ	172	;# 
   355   0000AD                     OSCCON1         equ	173	;# 
   356   0000AE                     OSCCON2         equ	174	;# 
   357   0000AF                     OSCCON3         equ	175	;# 
   358   0000B0                     OSCTUNE         equ	176	;# 
   359   0000B1                     OSCFRQ          equ	177	;# 
   360   0000B1                     OSCFREQ         equ	177	;# 
   361   0000B2                     OSCSTAT         equ	178	;# 
   362   0000B2                     OSCSTAT1        equ	178	;# 
   363   0000B3                     OSCEN           equ	179	;# 
   364   0000B4                     PRLOCK          equ	180	;# 
   365   0000B5                     SCANPR          equ	181	;# 
   366   0000B6                     DMA1PR          equ	182	;# 
   367   0000B7                     DMA2PR          equ	183	;# 
   368   0000B8                     DMA3PR          equ	184	;# 
   369   0000B9                     DMA4PR          equ	185	;# 
   370   0000BA                     DMA5PR          equ	186	;# 
   371   0000BB                     DMA6PR          equ	187	;# 
   372   0000BE                     MAINPR          equ	190	;# 
   373   0000BF                     ISRPR           equ	191	;# 
   374   0000D4                     CLCDATA         equ	212	;# 
   375   0000D5                     CLCSELECT       equ	213	;# 
   376   0000D6                     CLCnCON         equ	214	;# 
   377   0000D7                     CLCnPOL         equ	215	;# 
   378   0000D8                     CLCnSEL0        equ	216	;# 
   379   0000D9                     CLCnSEL1        equ	217	;# 
   380   0000DA                     CLCnSEL2        equ	218	;# 
   381   0000DB                     CLCnSEL3        equ	219	;# 
   382   0000DC                     CLCnGLS0        equ	220	;# 
   383   0000DD                     CLCnGLS1        equ	221	;# 
   384   0000DE                     CLCnGLS2        equ	222	;# 
   385   0000DF                     CLCnGLS3        equ	223	;# 
   386   0000E8                     DMASELECT       equ	232	;# 
   387   0000E9                     DMAnBUF         equ	233	;# 
   388   0000EA                     DMAnDCNT        equ	234	;# 
   389   0000EA                     DMAnDCNTL       equ	234	;# 
   390   0000EB                     DMAnDCNTH       equ	235	;# 
   391   0000EC                     DMAnDPTR        equ	236	;# 
   392   0000EC                     DMAnDPTRL       equ	236	;# 
   393   0000ED                     DMAnDPTRH       equ	237	;# 
   394   0000EE                     DMAnDSZ         equ	238	;# 
   395   0000EE                     DMAnDSZL        equ	238	;# 
   396   0000EF                     DMAnDSZH        equ	239	;# 
   397   0000F0                     DMAnDSA         equ	240	;# 
   398   0000F0                     DMAnDSAL        equ	240	;# 
   399   0000F1                     DMAnDSAH        equ	241	;# 
   400   0000F2                     DMAnSCNT        equ	242	;# 
   401   0000F2                     DMAnSCNTL       equ	242	;# 
   402   0000F3                     DMAnSCNTH       equ	243	;# 
   403   0000F4                     DMAnSPTR        equ	244	;# 
   404   0000F4                     DMAnSPTRL       equ	244	;# 
   405   0000F5                     DMAnSPTRH       equ	245	;# 
   406   0000F6                     DMAnSPTRU       equ	246	;# 
   407   0000F7                     DMAnSSZ         equ	247	;# 
   408   0000F7                     DMAnSSZL        equ	247	;# 
   409   0000F8                     DMAnSSZH        equ	248	;# 
   410   0000F9                     DMAnSSA         equ	249	;# 
   411   0000F9                     DMAnSSAL        equ	249	;# 
   412   0000FA                     DMAnSSAH        equ	250	;# 
   413   0000FB                     DMAnSSAU        equ	251	;# 
   414   0000FC                     DMAnCON0        equ	252	;# 
   415   0000FD                     DMAnCON1        equ	253	;# 
   416   0000FE                     DMAnAIRQ        equ	254	;# 
   417   0000FF                     DMAnSIRQ        equ	255	;# 
   418   000200                     PPSLOCK         equ	512	;# 
   419   000201                     RA0PPS          equ	513	;# 
   420   000202                     RA1PPS          equ	514	;# 
   421   000203                     RA2PPS          equ	515	;# 
   422   000204                     RA3PPS          equ	516	;# 
   423   000205                     RA4PPS          equ	517	;# 
   424   000206                     RA5PPS          equ	518	;# 
   425   000207                     RA6PPS          equ	519	;# 
   426   000208                     RA7PPS          equ	520	;# 
   427   000209                     RB0PPS          equ	521	;# 
   428   00020A                     RB1PPS          equ	522	;# 
   429   00020B                     RB2PPS          equ	523	;# 
   430   00020C                     RB3PPS          equ	524	;# 
   431   00020D                     RB4PPS          equ	525	;# 
   432   00020E                     RB5PPS          equ	526	;# 
   433   00020F                     RB6PPS          equ	527	;# 
   434   000210                     RB7PPS          equ	528	;# 
   435   000211                     RC0PPS          equ	529	;# 
   436   000212                     RC1PPS          equ	530	;# 
   437   000213                     RC2PPS          equ	531	;# 
   438   000214                     RC3PPS          equ	532	;# 
   439   000215                     RC4PPS          equ	533	;# 
   440   000216                     RC5PPS          equ	534	;# 
   441   000217                     RC6PPS          equ	535	;# 
   442   000218                     RC7PPS          equ	536	;# 
   443   000219                     RD0PPS          equ	537	;# 
   444   00021A                     RD1PPS          equ	538	;# 
   445   00021B                     RD2PPS          equ	539	;# 
   446   00021C                     RD3PPS          equ	540	;# 
   447   00021D                     RD4PPS          equ	541	;# 
   448   00021E                     RD5PPS          equ	542	;# 
   449   00021F                     RD6PPS          equ	543	;# 
   450   000220                     RD7PPS          equ	544	;# 
   451   000221                     RE0PPS          equ	545	;# 
   452   000222                     RE1PPS          equ	546	;# 
   453   000223                     RE2PPS          equ	547	;# 
   454   00023E                     INT0PPS         equ	574	;# 
   455   00023F                     INT1PPS         equ	575	;# 
   456   000240                     INT2PPS         equ	576	;# 
   457   000241                     T0CKIPPS        equ	577	;# 
   458   000242                     T1CKIPPS        equ	578	;# 
   459   000243                     T1GPPS          equ	579	;# 
   460   000244                     T3CKIPPS        equ	580	;# 
   461   000245                     T3GPPS          equ	581	;# 
   462   000246                     T5CKIPPS        equ	582	;# 
   463   000247                     T5GPPS          equ	583	;# 
   464   000248                     T2INPPS         equ	584	;# 
   465   000249                     T4INPPS         equ	585	;# 
   466   00024A                     T6INPPS         equ	586	;# 
   467   00024F                     CCP1PPS         equ	591	;# 
   468   000250                     CCP2PPS         equ	592	;# 
   469   000251                     CCP3PPS         equ	593	;# 
   470   000253                     PWM1ERSPPS      equ	595	;# 
   471   000254                     PWM2ERSPPS      equ	596	;# 
   472   000255                     PWM3ERSPPS      equ	597	;# 
   473   000257                     PWMIN0PPS       equ	599	;# 
   474   000258                     PWMIN1PPS       equ	600	;# 
   475   000259                     SMT1WINPPS      equ	601	;# 
   476   00025A                     SMT1SIGPPS      equ	602	;# 
   477   00025B                     CWG1PPS         equ	603	;# 
   478   00025B                     CWG1INPPS       equ	603	;# 
   479   00025C                     CWG2PPS         equ	604	;# 
   480   00025C                     CWG2INPPS       equ	604	;# 
   481   00025D                     CWG3PPS         equ	605	;# 
   482   00025D                     CWG3INPPS       equ	605	;# 
   483   00025E                     MD1CARLPPS      equ	606	;# 
   484   00025E                     MDCARLPPS       equ	606	;# 
   485   00025F                     MD1CARHPPS      equ	607	;# 
   486   00025F                     MDCARHPPS       equ	607	;# 
   487   000260                     MD1SRCPPS       equ	608	;# 
   488   000260                     MDSRCPPS        equ	608	;# 
   489   000261                     CLCIN0PPS       equ	609	;# 
   490   000262                     CLCIN1PPS       equ	610	;# 
   491   000263                     CLCIN2PPS       equ	611	;# 
   492   000264                     CLCIN3PPS       equ	612	;# 
   493   000265                     CLCIN4PPS       equ	613	;# 
   494   000266                     CLCIN5PPS       equ	614	;# 
   495   000267                     CLCIN6PPS       equ	615	;# 
   496   000268                     CLCIN7PPS       equ	616	;# 
   497   000269                     ADACTPPS        equ	617	;# 
   498   00026A                     SPI1SCKPPS      equ	618	;# 
   499   00026B                     SPI1SDIPPS      equ	619	;# 
   500   00026C                     SPI1SSPPS       equ	620	;# 
   501   00026D                     SPI2SCKPPS      equ	621	;# 
   502   00026E                     SPI2SDIPPS      equ	622	;# 
   503   00026F                     SPI2SSPPS       equ	623	;# 
   504   000270                     I2C1SDAPPS      equ	624	;# 
   505   000271                     I2C1SCLPPS      equ	625	;# 
   506   000272                     U1RXPPS         equ	626	;# 
   507   000273                     U1CTSPPS        equ	627	;# 
   508   000274                     U2RXPPS         equ	628	;# 
   509   000275                     U2CTSPPS        equ	629	;# 
   510   000276                     U3RXPPS         equ	630	;# 
   511   000277                     U3CTSPPS        equ	631	;# 
   512   000278                     U4RXPPS         equ	632	;# 
   513   000279                     U4CTSPPS        equ	633	;# 
   514   00027A                     U5RXPPS         equ	634	;# 
   515   00027B                     U5CTSPPS        equ	635	;# 
   516   000286                     RC4I2C          equ	646	;# 
   517   000287                     RC3I2C          equ	647	;# 
   518   000288                     RB2I2C          equ	648	;# 
   519   000289                     RB1I2C          equ	649	;# 
   520   00028B                     I2C1RXB         equ	651	;# 
   521   00028C                     I2C1TXB         equ	652	;# 
   522   00028D                     I2C1CNT         equ	653	;# 
   523   00028E                     I2C1ADB0        equ	654	;# 
   524   00028F                     I2C1ADB1        equ	655	;# 
   525   000290                     I2C1ADR0        equ	656	;# 
   526   000291                     I2C1ADR1        equ	657	;# 
   527   000292                     I2C1ADR2        equ	658	;# 
   528   000293                     I2C1ADR3        equ	659	;# 
   529   000294                     I2C1CON0        equ	660	;# 
   530   000295                     I2C1CON1        equ	661	;# 
   531   000296                     I2C1CON2        equ	662	;# 
   532   000297                     I2C1ERR         equ	663	;# 
   533   000298                     I2C1STAT0       equ	664	;# 
   534   000299                     I2C1STAT1       equ	665	;# 
   535   00029A                     I2C1PIR         equ	666	;# 
   536   00029B                     I2C1PIE         equ	667	;# 
   537   00029C                     I2C1CLK         equ	668	;# 
   538   00029D                     I2C1BTO         equ	669	;# 
   539   0002A1                     U1RXB           equ	673	;# 
   540   0002A1                     U1RXBL          equ	673	;# 
   541   0002A2                     U1RXCHK         equ	674	;# 
   542   0002A3                     U1TXB           equ	675	;# 
   543   0002A3                     U1TXBL          equ	675	;# 
   544   0002A4                     U1TXCHK         equ	676	;# 
   545   0002A5                     U1P1            equ	677	;# 
   546   0002A5                     U1P1L           equ	677	;# 
   547   0002A6                     U1P1H           equ	678	;# 
   548   0002A7                     U1P2            equ	679	;# 
   549   0002A7                     U1P2L           equ	679	;# 
   550   0002A8                     U1P2H           equ	680	;# 
   551   0002A9                     U1P3            equ	681	;# 
   552   0002A9                     U1P3L           equ	681	;# 
   553   0002AA                     U1P3H           equ	682	;# 
   554   0002AB                     U1CON0          equ	683	;# 
   555   0002AC                     U1CON1          equ	684	;# 
   556   0002AD                     U1CON2          equ	685	;# 
   557   0002AE                     U1BRG           equ	686	;# 
   558   0002AE                     U1BRGL          equ	686	;# 
   559   0002AF                     U1BRGH          equ	687	;# 
   560   0002B0                     U1FIFO          equ	688	;# 
   561   0002B1                     U1UIR           equ	689	;# 
   562   0002B2                     U1ERRIR         equ	690	;# 
   563   0002B3                     U1ERRIE         equ	691	;# 
   564   0002B4                     U2RXB           equ	692	;# 
   565   0002B4                     U2RXBL          equ	692	;# 
   566   0002B6                     U2TXB           equ	694	;# 
   567   0002B6                     U2TXBL          equ	694	;# 
   568   0002B8                     U2P1            equ	696	;# 
   569   0002B8                     U2P1L           equ	696	;# 
   570   0002BA                     U2P2            equ	698	;# 
   571   0002BA                     U2P2L           equ	698	;# 
   572   0002BC                     U2P3            equ	700	;# 
   573   0002BC                     U2P3L           equ	700	;# 
   574   0002BE                     U2CON0          equ	702	;# 
   575   0002BF                     U2CON1          equ	703	;# 
   576   0002C0                     U2CON2          equ	704	;# 
   577   0002C1                     U2BRG           equ	705	;# 
   578   0002C1                     U2BRGL          equ	705	;# 
   579   0002C2                     U2BRGH          equ	706	;# 
   580   0002C3                     U2FIFO          equ	707	;# 
   581   0002C4                     U2UIR           equ	708	;# 
   582   0002C5                     U2ERRIR         equ	709	;# 
   583   0002C6                     U2ERRIE         equ	710	;# 
   584   0002C7                     U3RXB           equ	711	;# 
   585   0002C7                     U3RXBL          equ	711	;# 
   586   0002C9                     U3TXB           equ	713	;# 
   587   0002C9                     U3TXBL          equ	713	;# 
   588   0002CB                     U3P1            equ	715	;# 
   589   0002CB                     U3P1L           equ	715	;# 
   590   0002CD                     U3P2            equ	717	;# 
   591   0002CD                     U3P2L           equ	717	;# 
   592   0002CF                     U3P3            equ	719	;# 
   593   0002CF                     U3P3L           equ	719	;# 
   594   0002D1                     U3CON0          equ	721	;# 
   595   0002D2                     U3CON1          equ	722	;# 
   596   0002D3                     U3CON2          equ	723	;# 
   597   0002D4                     U3BRG           equ	724	;# 
   598   0002D4                     U3BRGL          equ	724	;# 
   599   0002D5                     U3BRGH          equ	725	;# 
   600   0002D6                     U3FIFO          equ	726	;# 
   601   0002D7                     U3UIR           equ	727	;# 
   602   0002D8                     U3ERRIR         equ	728	;# 
   603   0002D9                     U3ERRIE         equ	729	;# 
   604   0002DA                     U4RXB           equ	730	;# 
   605   0002DA                     U4RXBL          equ	730	;# 
   606   0002DC                     U4TXB           equ	732	;# 
   607   0002DC                     U4TXBL          equ	732	;# 
   608   0002DE                     U4P1            equ	734	;# 
   609   0002DE                     U4P1L           equ	734	;# 
   610   0002E0                     U4P2            equ	736	;# 
   611   0002E0                     U4P2L           equ	736	;# 
   612   0002E2                     U4P3            equ	738	;# 
   613   0002E2                     U4P3L           equ	738	;# 
   614   0002E4                     U4CON0          equ	740	;# 
   615   0002E5                     U4CON1          equ	741	;# 
   616   0002E6                     U4CON2          equ	742	;# 
   617   0002E7                     U4BRG           equ	743	;# 
   618   0002E7                     U4BRGL          equ	743	;# 
   619   0002E8                     U4BRGH          equ	744	;# 
   620   0002E9                     U4FIFO          equ	745	;# 
   621   0002EA                     U4UIR           equ	746	;# 
   622   0002EB                     U4ERRIR         equ	747	;# 
   623   0002EC                     U4ERRIE         equ	748	;# 
   624   0002ED                     U5RXB           equ	749	;# 
   625   0002ED                     U5RXBL          equ	749	;# 
   626   0002EF                     U5TXB           equ	751	;# 
   627   0002EF                     U5TXBL          equ	751	;# 
   628   0002F1                     U5P1            equ	753	;# 
   629   0002F1                     U5P1L           equ	753	;# 
   630   0002F3                     U5P2            equ	755	;# 
   631   0002F3                     U5P2L           equ	755	;# 
   632   0002F5                     U5P3            equ	757	;# 
   633   0002F5                     U5P3L           equ	757	;# 
   634   0002F7                     U5CON0          equ	759	;# 
   635   0002F8                     U5CON1          equ	760	;# 
   636   0002F9                     U5CON2          equ	761	;# 
   637   0002FA                     U5BRG           equ	762	;# 
   638   0002FA                     U5BRGL          equ	762	;# 
   639   0002FB                     U5BRGH          equ	763	;# 
   640   0002FC                     U5FIFO          equ	764	;# 
   641   0002FD                     U5UIR           equ	765	;# 
   642   0002FE                     U5ERRIR         equ	766	;# 
   643   0002FF                     U5ERRIE         equ	767	;# 
   644   000300                     SMT1TMR         equ	768	;# 
   645   000300                     SMT1TMRL        equ	768	;# 
   646   000301                     SMT1TMRH        equ	769	;# 
   647   000302                     SMT1TMRU        equ	770	;# 
   648   000303                     SMT1CPR         equ	771	;# 
   649   000303                     SMT1CPRL        equ	771	;# 
   650   000304                     SMT1CPRH        equ	772	;# 
   651   000305                     SMT1CPRU        equ	773	;# 
   652   000306                     SMT1CPW         equ	774	;# 
   653   000306                     SMT1CPWL        equ	774	;# 
   654   000307                     SMT1CPWH        equ	775	;# 
   655   000308                     SMT1CPWU        equ	776	;# 
   656   000309                     SMT1PR          equ	777	;# 
   657   000309                     SMT1PRL         equ	777	;# 
   658   00030A                     SMT1PRH         equ	778	;# 
   659   00030B                     SMT1PRU         equ	779	;# 
   660   00030C                     SMT1CON0        equ	780	;# 
   661   00030D                     SMT1CON1        equ	781	;# 
   662   00030E                     SMT1STAT        equ	782	;# 
   663   00030F                     SMT1CLK         equ	783	;# 
   664   000310                     SMT1SIG         equ	784	;# 
   665   000311                     SMT1WIN         equ	785	;# 
   666   000318                     TMR0L           equ	792	;# 
   667   000318                     TMR0            equ	792	;# 
   668   000319                     TMR0H           equ	793	;# 
   669   000319                     PR0             equ	793	;# 
   670   00031A                     T0CON0          equ	794	;# 
   671   00031B                     T0CON1          equ	795	;# 
   672   00031C                     TMR1            equ	796	;# 
   673   00031C                     TMR1L           equ	796	;# 
   674   00031D                     TMR1H           equ	797	;# 
   675   00031E                     T1CON           equ	798	;# 
   676   00031E                     TMR1CON         equ	798	;# 
   677   00031F                     T1GCON          equ	799	;# 
   678   00031F                     TMR1GCON        equ	799	;# 
   679   000320                     T1GATE          equ	800	;# 
   680   000320                     TMR1GATE        equ	800	;# 
   681   000321                     T1CLK           equ	801	;# 
   682   000321                     TMR1CLK         equ	801	;# 
   683   000321                     PR1             equ	801	;# 
   684   000322                     T2TMR           equ	802	;# 
   685   000322                     TMR2            equ	802	;# 
   686   000323                     T2PR            equ	803	;# 
   687   000323                     PR2             equ	803	;# 
   688   000324                     T2CON           equ	804	;# 
   689   000325                     T2HLT           equ	805	;# 
   690   000326                     T2CLKCON        equ	806	;# 
   691   000326                     T2CLK           equ	806	;# 
   692   000327                     T2RST           equ	807	;# 
   693   000328                     TMR3            equ	808	;# 
   694   000328                     TMR3L           equ	808	;# 
   695   000329                     TMR3H           equ	809	;# 
   696   00032A                     T3CON           equ	810	;# 
   697   00032A                     TMR3CON         equ	810	;# 
   698   00032B                     T3GCON          equ	811	;# 
   699   00032B                     TMR3GCON        equ	811	;# 
   700   00032C                     T3GATE          equ	812	;# 
   701   00032C                     TMR3GATE        equ	812	;# 
   702   00032D                     T3CLK           equ	813	;# 
   703   00032D                     TMR3CLK         equ	813	;# 
   704   00032D                     PR3             equ	813	;# 
   705   00032E                     T4TMR           equ	814	;# 
   706   00032E                     TMR4            equ	814	;# 
   707   00032F                     T4PR            equ	815	;# 
   708   00032F                     PR4             equ	815	;# 
   709   000330                     T4CON           equ	816	;# 
   710   000331                     T4HLT           equ	817	;# 
   711   000332                     T4CLKCON        equ	818	;# 
   712   000332                     T4CLK           equ	818	;# 
   713   000333                     T4RST           equ	819	;# 
   714   000334                     TMR5            equ	820	;# 
   715   000334                     TMR5L           equ	820	;# 
   716   000335                     TMR5H           equ	821	;# 
   717   000336                     T5CON           equ	822	;# 
   718   000336                     TMR5CON         equ	822	;# 
   719   000337                     T5GCON          equ	823	;# 
   720   000337                     TMR5GCON        equ	823	;# 
   721   000338                     T5GATE          equ	824	;# 
   722   000338                     TMR5GATE        equ	824	;# 
   723   000339                     T5CLK           equ	825	;# 
   724   000339                     TMR5CLK         equ	825	;# 
   725   000339                     PR5             equ	825	;# 
   726   00033A                     T6TMR           equ	826	;# 
   727   00033A                     TMR6            equ	826	;# 
   728   00033B                     T6PR            equ	827	;# 
   729   00033B                     PR6             equ	827	;# 
   730   00033C                     T6CON           equ	828	;# 
   731   00033D                     T6HLT           equ	829	;# 
   732   00033E                     T6CLKCON        equ	830	;# 
   733   00033E                     T6CLK           equ	830	;# 
   734   00033F                     T6RST           equ	831	;# 
   735   000340                     CCPR1           equ	832	;# 
   736   000340                     CCPR1L          equ	832	;# 
   737   000341                     CCPR1H          equ	833	;# 
   738   000342                     CCP1CON         equ	834	;# 
   739   000343                     CCP1CAP         equ	835	;# 
   740   000344                     CCPR2           equ	836	;# 
   741   000344                     CCPR2L          equ	836	;# 
   742   000345                     CCPR2H          equ	837	;# 
   743   000346                     CCP2CON         equ	838	;# 
   744   000347                     CCP2CAP         equ	839	;# 
   745   000348                     CCPR3           equ	840	;# 
   746   000348                     CCPR3L          equ	840	;# 
   747   000349                     CCPR3H          equ	841	;# 
   748   00034A                     CCP3CON         equ	842	;# 
   749   00034B                     CCP3CAP         equ	843	;# 
   750   00034C                     CCPTMRS0        equ	844	;# 
   751   00034F                     CRCDATA         equ	847	;# 
   752   00034F                     CRCDATL         equ	847	;# 
   753   000350                     CRCDATH         equ	848	;# 
   754   000351                     CRCACC          equ	849	;# 
   755   000351                     CRCACCL         equ	849	;# 
   756   000352                     CRCACCH         equ	850	;# 
   757   000353                     CRCSHFT         equ	851	;# 
   758   000353                     CRCSHIFTL       equ	851	;# 
   759   000354                     CRCSHIFTH       equ	852	;# 
   760   000355                     CRCXOR          equ	853	;# 
   761   000355                     CRCXORL         equ	853	;# 
   762   000356                     CRCXORH         equ	854	;# 
   763   000357                     CRCCON0         equ	855	;# 
   764   000358                     CRCCON1         equ	856	;# 
   765   00035A                     SCANLADR        equ	858	;# 
   766   00035A                     SCANLADRL       equ	858	;# 
   767   00035B                     SCANLADRH       equ	859	;# 
   768   00035C                     SCANLADRU       equ	860	;# 
   769   00035D                     SCANHADR        equ	861	;# 
   770   00035D                     SCANHADRL       equ	861	;# 
   771   00035E                     SCANHADRH       equ	862	;# 
   772   00035F                     SCANHADRU       equ	863	;# 
   773   000360                     SCANCON0        equ	864	;# 
   774   000361                     SCANTRIG        equ	865	;# 
   775   000362                     IPR0            equ	866	;# 
   776   000363                     IPR1            equ	867	;# 
   777   000364                     IPR2            equ	868	;# 
   778   000365                     IPR3            equ	869	;# 
   779   000366                     IPR4            equ	870	;# 
   780   000367                     IPR5            equ	871	;# 
   781   000368                     IPR6            equ	872	;# 
   782   000369                     IPR7            equ	873	;# 
   783   00036A                     IPR8            equ	874	;# 
   784   00036B                     IPR9            equ	875	;# 
   785   00036C                     IPR10           equ	876	;# 
   786   00036D                     IPR11           equ	877	;# 
   787   00036E                     IPR12           equ	878	;# 
   788   00036F                     IPR13           equ	879	;# 
   789   000370                     IPR14           equ	880	;# 
   790   000371                     IPR15           equ	881	;# 
   791   000373                     STATUS_CSHAD    equ	883	;# 
   792   000374                     WREG_CSHAD      equ	884	;# 
   793   000375                     BSR_CSHAD       equ	885	;# 
   794   000376                     SHADCON         equ	886	;# 
   795   000377                     STATUS_SHAD     equ	887	;# 
   796   000378                     WREG_SHAD       equ	888	;# 
   797   000379                     BSR_SHAD        equ	889	;# 
   798   00037A                     PCLATH_SHAD     equ	890	;# 
   799   00037B                     PCLATU_SHAD     equ	891	;# 
   800   00037C                     FSR0SH          equ	892	;# 
   801   00037C                     FSR0L_SHAD      equ	892	;# 
   802   00037D                     FSR0H_SHAD      equ	893	;# 
   803   00037E                     FSR1SH          equ	894	;# 
   804   00037E                     FSR1L_SHAD      equ	894	;# 
   805   00037F                     FSR1H_SHAD      equ	895	;# 
   806   000380                     FSR2SH          equ	896	;# 
   807   000380                     FSR2L_SHAD      equ	896	;# 
   808   000381                     FSR2H_SHAD      equ	897	;# 
   809   000382                     PRODSH          equ	898	;# 
   810   000382                     PRODL_SHAD      equ	898	;# 
   811   000383                     PRODH_SHAD      equ	899	;# 
   812   0003BC                     CWG1CLK         equ	956	;# 
   813   0003BC                     CWG1CLKCON      equ	956	;# 
   814   0003BD                     CWG1ISM         equ	957	;# 
   815   0003BD                     CWG1DAT         equ	957	;# 
   816   0003BE                     CWG1DBR         equ	958	;# 
   817   0003BF                     CWG1DBF         equ	959	;# 
   818   0003C0                     CWG1CON0        equ	960	;# 
   819   0003C1                     CWG1CON1        equ	961	;# 
   820   0003C2                     CWG1AS0         equ	962	;# 
   821   0003C3                     CWG1AS1         equ	963	;# 
   822   0003C4                     CWG1STR         equ	964	;# 
   823   0003C5                     CWG2CLK         equ	965	;# 
   824   0003C5                     CWG2CLKCON      equ	965	;# 
   825   0003C6                     CWG2ISM         equ	966	;# 
   826   0003C6                     CWG2DAT         equ	966	;# 
   827   0003C7                     CWG2DBR         equ	967	;# 
   828   0003C8                     CWG2DBF         equ	968	;# 
   829   0003C9                     CWG2CON0        equ	969	;# 
   830   0003CA                     CWG2CON1        equ	970	;# 
   831   0003CB                     CWG2AS0         equ	971	;# 
   832   0003CC                     CWG2AS1         equ	972	;# 
   833   0003CD                     CWG2STR         equ	973	;# 
   834   0003CE                     CWG3CLK         equ	974	;# 
   835   0003CE                     CWG3CLKCON      equ	974	;# 
   836   0003CF                     CWG3ISM         equ	975	;# 
   837   0003CF                     CWG3DAT         equ	975	;# 
   838   0003D0                     CWG3DBR         equ	976	;# 
   839   0003D1                     CWG3DBF         equ	977	;# 
   840   0003D2                     CWG3CON0        equ	978	;# 
   841   0003D3                     CWG3CON1        equ	979	;# 
   842   0003D4                     CWG3AS0         equ	980	;# 
   843   0003D5                     CWG3AS1         equ	981	;# 
   844   0003D6                     CWG3STR         equ	982	;# 
   845   0003D7                     FVRCON          equ	983	;# 
   846   0003D8                     ADCPCON         equ	984	;# 
   847   0003D8                     ADCP            equ	984	;# 
   848   0003D9                     ADLTH           equ	985	;# 
   849   0003D9                     ADLTHL          equ	985	;# 
   850   0003DA                     ADLTHH          equ	986	;# 
   851   0003DB                     ADUTH           equ	987	;# 
   852   0003DB                     ADUTHL          equ	987	;# 
   853   0003DC                     ADUTHH          equ	988	;# 
   854   0003DD                     ADERR           equ	989	;# 
   855   0003DD                     ADERRL          equ	989	;# 
   856   0003DE                     ADERRH          equ	990	;# 
   857   0003DF                     ADSTPT          equ	991	;# 
   858   0003DF                     ADSTPTL         equ	991	;# 
   859   0003E0                     ADSTPTH         equ	992	;# 
   860   0003E1                     ADFLTR          equ	993	;# 
   861   0003E1                     ADFLTRL         equ	993	;# 
   862   0003E2                     ADFLTRH         equ	994	;# 
   863   0003E3                     ADACC           equ	995	;# 
   864   0003E3                     ADACCL          equ	995	;# 
   865   0003E4                     ADACCH          equ	996	;# 
   866   0003E5                     ADACCU          equ	997	;# 
   867   0003E6                     ADCNT           equ	998	;# 
   868   0003E7                     ADRPT           equ	999	;# 
   869   0003E8                     ADPREV          equ	1000	;# 
   870   0003E8                     ADPREVL         equ	1000	;# 
   871   0003E9                     ADPREVH         equ	1001	;# 
   872   0003EA                     ADRES           equ	1002	;# 
   873   0003EA                     ADRESL          equ	1002	;# 
   874   0003EB                     ADRESH          equ	1003	;# 
   875   0003EC                     ADPCH           equ	1004	;# 
   876   0003EE                     ADACQ           equ	1006	;# 
   877   0003EE                     ADACQL          equ	1006	;# 
   878   0003EF                     ADACQH          equ	1007	;# 
   879   0003F0                     ADCAP           equ	1008	;# 
   880   0003F1                     ADPRE           equ	1009	;# 
   881   0003F1                     ADPREL          equ	1009	;# 
   882   0003F2                     ADPREH          equ	1010	;# 
   883   0003F3                     ADCON0          equ	1011	;# 
   884   0003F4                     ADCON1          equ	1012	;# 
   885   0003F5                     ADCON2          equ	1013	;# 
   886   0003F6                     ADCON3          equ	1014	;# 
   887   0003F7                     ADSTAT          equ	1015	;# 
   888   0003F8                     ADREF           equ	1016	;# 
   889   0003F9                     ADACT           equ	1017	;# 
   890   0003FA                     ADCLK           equ	1018	;# 
   891   000400                     ANSELA          equ	1024	;# 
   892   000401                     WPUA            equ	1025	;# 
   893   000402                     ODCONA          equ	1026	;# 
   894   000403                     SLRCONA         equ	1027	;# 
   895   000404                     INLVLA          equ	1028	;# 
   896   000405                     IOCAP           equ	1029	;# 
   897   000406                     IOCAN           equ	1030	;# 
   898   000407                     IOCAF           equ	1031	;# 
   899   000408                     ANSELB          equ	1032	;# 
   900   000409                     WPUB            equ	1033	;# 
   901   00040A                     ODCONB          equ	1034	;# 
   902   00040B                     SLRCONB         equ	1035	;# 
   903   00040C                     INLVLB          equ	1036	;# 
   904   00040D                     IOCBP           equ	1037	;# 
   905   00040E                     IOCBN           equ	1038	;# 
   906   00040F                     IOCBF           equ	1039	;# 
   907   000410                     ANSELC          equ	1040	;# 
   908   000411                     WPUC            equ	1041	;# 
   909   000412                     ODCONC          equ	1042	;# 
   910   000413                     SLRCONC         equ	1043	;# 
   911   000414                     INLVLC          equ	1044	;# 
   912   000415                     IOCCP           equ	1045	;# 
   913   000416                     IOCCN           equ	1046	;# 
   914   000417                     IOCCF           equ	1047	;# 
   915   000418                     ANSELD          equ	1048	;# 
   916   000419                     WPUD            equ	1049	;# 
   917   00041A                     ODCOND          equ	1050	;# 
   918   00041B                     SLRCOND         equ	1051	;# 
   919   00041C                     INLVLD          equ	1052	;# 
   920   000420                     ANSELE          equ	1056	;# 
   921   000421                     WPUE            equ	1057	;# 
   922   000422                     ODCONE          equ	1058	;# 
   923   000423                     SLRCONE         equ	1059	;# 
   924   000424                     INLVLE          equ	1060	;# 
   925   000425                     IOCEP           equ	1061	;# 
   926   000426                     IOCEN           equ	1062	;# 
   927   000427                     IOCEF           equ	1063	;# 
   928   000440                     NCO1ACC         equ	1088	;# 
   929   000440                     NCO1ACCL        equ	1088	;# 
   930   000441                     NCO1ACCH        equ	1089	;# 
   931   000442                     NCO1ACCU        equ	1090	;# 
   932   000443                     NCO1INC         equ	1091	;# 
   933   000443                     NCO1INCL        equ	1091	;# 
   934   000444                     NCO1INCH        equ	1092	;# 
   935   000445                     NCO1INCU        equ	1093	;# 
   936   000446                     NCO1CON         equ	1094	;# 
   937   000447                     NCO1CLK         equ	1095	;# 
   938   000448                     NCO2ACC         equ	1096	;# 
   939   000448                     NCO2ACCL        equ	1096	;# 
   940   000449                     NCO2ACCH        equ	1097	;# 
   941   00044A                     NCO2ACCU        equ	1098	;# 
   942   00044B                     NCO2INC         equ	1099	;# 
   943   00044B                     NCO2INCL        equ	1099	;# 
   944   00044C                     NCO2INCH        equ	1100	;# 
   945   00044D                     NCO2INCU        equ	1101	;# 
   946   00044E                     NCO2CON         equ	1102	;# 
   947   00044F                     NCO2CLK         equ	1103	;# 
   948   000450                     NCO3ACC         equ	1104	;# 
   949   000450                     NCO3ACCL        equ	1104	;# 
   950   000451                     NCO3ACCH        equ	1105	;# 
   951   000452                     NCO3ACCU        equ	1106	;# 
   952   000453                     NCO3INC         equ	1107	;# 
   953   000453                     NCO3INCL        equ	1107	;# 
   954   000454                     NCO3INCH        equ	1108	;# 
   955   000455                     NCO3INCU        equ	1109	;# 
   956   000456                     NCO3CON         equ	1110	;# 
   957   000457                     NCO3CLK         equ	1111	;# 
   958   000459                     IVTLOCK         equ	1113	;# 
   959   00045A                     IVTAD           equ	1114	;# 
   960   00045A                     IVTADL          equ	1114	;# 
   961   00045B                     IVTADH          equ	1115	;# 
   962   00045C                     IVTADU          equ	1116	;# 
   963   00045D                     IVTBASE         equ	1117	;# 
   964   00045D                     IVTBASEL        equ	1117	;# 
   965   00045E                     IVTBASEH        equ	1118	;# 
   966   00045F                     IVTBASEU        equ	1119	;# 
   967   000460                     PWM1ERS         equ	1120	;# 
   968   000461                     PWM1CLK         equ	1121	;# 
   969   000462                     PWM1LDS         equ	1122	;# 
   970   000463                     PWM1PR          equ	1123	;# 
   971   000463                     PWM1PRL         equ	1123	;# 
   972   000464                     PWM1PRH         equ	1124	;# 
   973   000465                     PWM1CPRE        equ	1125	;# 
   974   000466                     PWM1PIPOS       equ	1126	;# 
   975   000467                     PWM1GIR         equ	1127	;# 
   976   000468                     PWM1GIE         equ	1128	;# 
   977   000469                     PWM1CON         equ	1129	;# 
   978   00046A                     PWM1S1CFG       equ	1130	;# 
   979   00046B                     PWM1S1P1        equ	1131	;# 
   980   00046B                     PWM1S1P1L       equ	1131	;# 
   981   00046C                     PWM1S1P1H       equ	1132	;# 
   982   00046D                     PWM1S1P2        equ	1133	;# 
   983   00046D                     PWM1S1P2L       equ	1133	;# 
   984   00046E                     PWM1S1P2H       equ	1134	;# 
   985   00046F                     PWM2ERS         equ	1135	;# 
   986   000470                     PWM2CLK         equ	1136	;# 
   987   000471                     PWM2LDS         equ	1137	;# 
   988   000472                     PWM2PR          equ	1138	;# 
   989   000472                     PWM2PRL         equ	1138	;# 
   990   000473                     PWM2PRH         equ	1139	;# 
   991   000474                     PWM2CPRE        equ	1140	;# 
   992   000475                     PWM2PIPOS       equ	1141	;# 
   993   000476                     PWM2GIR         equ	1142	;# 
   994   000477                     PWM2GIE         equ	1143	;# 
   995   000478                     PWM2CON         equ	1144	;# 
   996   000479                     PWM2S1CFG       equ	1145	;# 
   997   00047A                     PWM2S1P1        equ	1146	;# 
   998   00047A                     PWM2S1P1L       equ	1146	;# 
   999   00047B                     PWM2S1P1H       equ	1147	;# 
  1000   00047C                     PWM2S1P2        equ	1148	;# 
  1001   00047C                     PWM2S1P2L       equ	1148	;# 
  1002   00047D                     PWM2S1P2H       equ	1149	;# 
  1003   00047E                     PWM3ERS         equ	1150	;# 
  1004   00047F                     PWM3CLK         equ	1151	;# 
  1005   000480                     PWM3LDS         equ	1152	;# 
  1006   000481                     PWM3PR          equ	1153	;# 
  1007   000481                     PWM3PRL         equ	1153	;# 
  1008   000482                     PWM3PRH         equ	1154	;# 
  1009   000483                     PWM3CPRE        equ	1155	;# 
  1010   000484                     PWM3PIPOS       equ	1156	;# 
  1011   000485                     PWM3GIR         equ	1157	;# 
  1012   000486                     PWM3GIE         equ	1158	;# 
  1013   000487                     PWM3CON         equ	1159	;# 
  1014   000488                     PWM3S1CFG       equ	1160	;# 
  1015   000489                     PWM3S1P1        equ	1161	;# 
  1016   000489                     PWM3S1P1L       equ	1161	;# 
  1017   00048A                     PWM3S1P1H       equ	1162	;# 
  1018   00048B                     PWM3S1P2        equ	1163	;# 
  1019   00048B                     PWM3S1P2L       equ	1163	;# 
  1020   00048C                     PWM3S1P2H       equ	1164	;# 
  1021   00049C                     PWMLOAD         equ	1180	;# 
  1022   00049D                     PWMEN           equ	1181	;# 
  1023   00049E                     PIE0            equ	1182	;# 
  1024   00049F                     PIE1            equ	1183	;# 
  1025   0004A0                     PIE2            equ	1184	;# 
  1026   0004A1                     PIE3            equ	1185	;# 
  1027   0004A2                     PIE4            equ	1186	;# 
  1028   0004A3                     PIE5            equ	1187	;# 
  1029   0004A4                     PIE6            equ	1188	;# 
  1030   0004A5                     PIE7            equ	1189	;# 
  1031   0004A6                     PIE8            equ	1190	;# 
  1032   0004A7                     PIE9            equ	1191	;# 
  1033   0004A8                     PIE10           equ	1192	;# 
  1034   0004A9                     PIE11           equ	1193	;# 
  1035   0004AA                     PIE12           equ	1194	;# 
  1036   0004AB                     PIE13           equ	1195	;# 
  1037   0004AC                     PIE14           equ	1196	;# 
  1038   0004AD                     PIE15           equ	1197	;# 
  1039   0004AE                     PIR0            equ	1198	;# 
  1040   0004AF                     PIR1            equ	1199	;# 
  1041   0004B0                     PIR2            equ	1200	;# 
  1042   0004B1                     PIR3            equ	1201	;# 
  1043   0004B2                     PIR4            equ	1202	;# 
  1044   0004B3                     PIR5            equ	1203	;# 
  1045   0004B4                     PIR6            equ	1204	;# 
  1046   0004B5                     PIR7            equ	1205	;# 
  1047   0004B6                     PIR8            equ	1206	;# 
  1048   0004B7                     PIR9            equ	1207	;# 
  1049   0004B8                     PIR10           equ	1208	;# 
  1050   0004B9                     PIR11           equ	1209	;# 
  1051   0004BA                     PIR12           equ	1210	;# 
  1052   0004BB                     PIR13           equ	1211	;# 
  1053   0004BC                     PIR14           equ	1212	;# 
  1054   0004BD                     PIR15           equ	1213	;# 
  1055   0004BE                     LATA            equ	1214	;# 
  1056   0004BF                     LATB            equ	1215	;# 
  1057   0004C0                     LATC            equ	1216	;# 
  1058   0004C1                     LATD            equ	1217	;# 
  1059   0004C2                     LATE            equ	1218	;# 
  1060   0004C6                     TRISA           equ	1222	;# 
  1061   0004C7                     TRISB           equ	1223	;# 
  1062   0004C8                     TRISC           equ	1224	;# 
  1063   0004C9                     TRISD           equ	1225	;# 
  1064   0004CA                     TRISE           equ	1226	;# 
  1065   0004CE                     PORTA           equ	1230	;# 
  1066   0004CF                     PORTB           equ	1231	;# 
  1067   0004D0                     PORTC           equ	1232	;# 
  1068   0004D1                     PORTD           equ	1233	;# 
  1069   0004D2                     PORTE           equ	1234	;# 
  1070   0004D6                     INTCON0         equ	1238	;# 
  1071   0004D7                     INTCON1         equ	1239	;# 
  1072   0004D8                     STATUS          equ	1240	;# 
  1073   0004D9                     FSR2            equ	1241	;# 
  1074   0004D9                     FSR2L           equ	1241	;# 
  1075   0004DA                     FSR2H           equ	1242	;# 
  1076   0004DB                     PLUSW2          equ	1243	;# 
  1077   0004DC                     PREINC2         equ	1244	;# 
  1078   0004DD                     POSTDEC2        equ	1245	;# 
  1079   0004DE                     POSTINC2        equ	1246	;# 
  1080   0004DF                     INDF2           equ	1247	;# 
  1081   0004E0                     BSR             equ	1248	;# 
  1082   0004E1                     FSR1            equ	1249	;# 
  1083   0004E1                     FSR1L           equ	1249	;# 
  1084   0004E2                     FSR1H           equ	1250	;# 
  1085   0004E3                     PLUSW1          equ	1251	;# 
  1086   0004E4                     PREINC1         equ	1252	;# 
  1087   0004E5                     POSTDEC1        equ	1253	;# 
  1088   0004E6                     POSTINC1        equ	1254	;# 
  1089   0004E7                     INDF1           equ	1255	;# 
  1090   0004E8                     WREG            equ	1256	;# 
  1091   0004E9                     FSR0            equ	1257	;# 
  1092   0004E9                     FSR0L           equ	1257	;# 
  1093   0004EA                     FSR0H           equ	1258	;# 
  1094   0004EB                     PLUSW0          equ	1259	;# 
  1095   0004EC                     PREINC0         equ	1260	;# 
  1096   0004ED                     POSTDEC0        equ	1261	;# 
  1097   0004EE                     POSTINC0        equ	1262	;# 
  1098   0004EF                     INDF0           equ	1263	;# 
  1099   0004F0                     PCON0           equ	1264	;# 
  1100   0004F1                     PCON1           equ	1265	;# 
  1101   0004F2                     CPUDOZE         equ	1266	;# 
  1102   0004F3                     PROD            equ	1267	;# 
  1103   0004F3                     PRODL           equ	1267	;# 
  1104   0004F4                     PRODH           equ	1268	;# 
  1105   0004F5                     TABLAT          equ	1269	;# 
  1106   0004F6                     TBLPTR          equ	1270	;# 
  1107   0004F6                     TBLPTRL         equ	1270	;# 
  1108   0004F7                     TBLPTRH         equ	1271	;# 
  1109   0004F8                     TBLPTRU         equ	1272	;# 
  1110   0004F9                     PCLAT           equ	1273	;# 
  1111   0004F9                     PCL             equ	1273	;# 
  1112   0004FA                     PCLATH          equ	1274	;# 
  1113   0004FB                     PCLATU          equ	1275	;# 
  1114   0004FC                     STKPTR          equ	1276	;# 
  1115   0004FD                     TOS             equ	1277	;# 
  1116   0004FD                     TOSL            equ	1277	;# 
  1117   0004FE                     TOSH            equ	1278	;# 
  1118   0004FF                     TOSU            equ	1279	;# 
  1119   000039                     CLKRCON         equ	57	;# 
  1120   00003A                     CLKRCLK         equ	58	;# 
  1121   000040                     NVMCON0         equ	64	;# 
  1122   000041                     NVMCON1         equ	65	;# 
  1123   000042                     NVMLOCK         equ	66	;# 
  1124   000043                     NVMADR          equ	67	;# 
  1125   000043                     NVMADRL         equ	67	;# 
  1126   000044                     NVMADRH         equ	68	;# 
  1127   000045                     NVMADRU         equ	69	;# 
  1128   000046                     NVMDAT          equ	70	;# 
  1129   000046                     NVMDATL         equ	70	;# 
  1130   000047                     NVMDATH         equ	71	;# 
  1131   000048                     VREGCON         equ	72	;# 
  1132   000049                     BORCON          equ	73	;# 
  1133   00004A                     HLVDCON0        equ	74	;# 
  1134   00004B                     HLVDCON1        equ	75	;# 
  1135   00004C                     ZCDCON          equ	76	;# 
  1136   000060                     PMD0            equ	96	;# 
  1137   000061                     PMD1            equ	97	;# 
  1138   000063                     PMD3            equ	99	;# 
  1139   000064                     PMD4            equ	100	;# 
  1140   000065                     PMD5            equ	101	;# 
  1141   000066                     PMD6            equ	102	;# 
  1142   000067                     PMD7            equ	103	;# 
  1143   000068                     PMD8            equ	104	;# 
  1144   00006A                     MD1CON0         equ	106	;# 
  1145   00006B                     MD1CON1         equ	107	;# 
  1146   00006C                     MD1SRC          equ	108	;# 
  1147   00006D                     MD1CARL         equ	109	;# 
  1148   00006E                     MD1CARH         equ	110	;# 
  1149   00006F                     CMOUT           equ	111	;# 
  1150   000070                     CM1CON0         equ	112	;# 
  1151   000071                     CM1CON1         equ	113	;# 
  1152   000072                     CM1NCH          equ	114	;# 
  1153   000073                     CM1PCH          equ	115	;# 
  1154   000074                     CM2CON0         equ	116	;# 
  1155   000075                     CM2CON1         equ	117	;# 
  1156   000076                     CM2NCH          equ	118	;# 
  1157   000077                     CM2PCH          equ	119	;# 
  1158   000078                     WDTCON0         equ	120	;# 
  1159   000079                     WDTCON1         equ	121	;# 
  1160   00007A                     WDTPS           equ	122	;# 
  1161   00007A                     WDTPSL          equ	122	;# 
  1162   00007B                     WDTPSH          equ	123	;# 
  1163   00007C                     WDTTMR          equ	124	;# 
  1164   00007D                     DAC1DAT         equ	125	;# 
  1165   00007D                     DAC1DATL        equ	125	;# 
  1166   00007F                     DAC1CON         equ	127	;# 
  1167   000080                     SPI1RXB         equ	128	;# 
  1168   000081                     SPI1TXB         equ	129	;# 
  1169   000082                     SPI1TCNT        equ	130	;# 
  1170   000082                     SPI1TCNTL       equ	130	;# 
  1171   000083                     SPI1TCNTH       equ	131	;# 
  1172   000084                     SPI1CON0        equ	132	;# 
  1173   000085                     SPI1CON1        equ	133	;# 
  1174   000086                     SPI1CON2        equ	134	;# 
  1175   000087                     SPI1STATUS      equ	135	;# 
  1176   000088                     SPI1TWIDTH      equ	136	;# 
  1177   000089                     SPI1BAUD        equ	137	;# 
  1178   00008A                     SPI1INTF        equ	138	;# 
  1179   00008B                     SPI1INTE        equ	139	;# 
  1180   00008C                     SPI1CLK         equ	140	;# 
  1181   00008D                     SPI2RXB         equ	141	;# 
  1182   00008E                     SPI2TXB         equ	142	;# 
  1183   00008F                     SPI2TCNT        equ	143	;# 
  1184   00008F                     SPI2TCNTL       equ	143	;# 
  1185   000090                     SPI2TCNTH       equ	144	;# 
  1186   000091                     SPI2CON0        equ	145	;# 
  1187   000092                     SPI2CON1        equ	146	;# 
  1188   000093                     SPI2CON2        equ	147	;# 
  1189   000094                     SPI2STATUS      equ	148	;# 
  1190   000095                     SPI2TWIDTH      equ	149	;# 
  1191   000096                     SPI2BAUD        equ	150	;# 
  1192   000097                     SPI2INTF        equ	151	;# 
  1193   000098                     SPI2INTE        equ	152	;# 
  1194   000099                     SPI2CLK         equ	153	;# 
  1195   0000AC                     ACTCON          equ	172	;# 
  1196   0000AD                     OSCCON1         equ	173	;# 
  1197   0000AE                     OSCCON2         equ	174	;# 
  1198   0000AF                     OSCCON3         equ	175	;# 
  1199   0000B0                     OSCTUNE         equ	176	;# 
  1200   0000B1                     OSCFRQ          equ	177	;# 
  1201   0000B1                     OSCFREQ         equ	177	;# 
  1202   0000B2                     OSCSTAT         equ	178	;# 
  1203   0000B2                     OSCSTAT1        equ	178	;# 
  1204   0000B3                     OSCEN           equ	179	;# 
  1205   0000B4                     PRLOCK          equ	180	;# 
  1206   0000B5                     SCANPR          equ	181	;# 
  1207   0000B6                     DMA1PR          equ	182	;# 
  1208   0000B7                     DMA2PR          equ	183	;# 
  1209   0000B8                     DMA3PR          equ	184	;# 
  1210   0000B9                     DMA4PR          equ	185	;# 
  1211   0000BA                     DMA5PR          equ	186	;# 
  1212   0000BB                     DMA6PR          equ	187	;# 
  1213   0000BE                     MAINPR          equ	190	;# 
  1214   0000BF                     ISRPR           equ	191	;# 
  1215   0000D4                     CLCDATA         equ	212	;# 
  1216   0000D5                     CLCSELECT       equ	213	;# 
  1217   0000D6                     CLCnCON         equ	214	;# 
  1218   0000D7                     CLCnPOL         equ	215	;# 
  1219   0000D8                     CLCnSEL0        equ	216	;# 
  1220   0000D9                     CLCnSEL1        equ	217	;# 
  1221   0000DA                     CLCnSEL2        equ	218	;# 
  1222   0000DB                     CLCnSEL3        equ	219	;# 
  1223   0000DC                     CLCnGLS0        equ	220	;# 
  1224   0000DD                     CLCnGLS1        equ	221	;# 
  1225   0000DE                     CLCnGLS2        equ	222	;# 
  1226   0000DF                     CLCnGLS3        equ	223	;# 
  1227   0000E8                     DMASELECT       equ	232	;# 
  1228   0000E9                     DMAnBUF         equ	233	;# 
  1229   0000EA                     DMAnDCNT        equ	234	;# 
  1230   0000EA                     DMAnDCNTL       equ	234	;# 
  1231   0000EB                     DMAnDCNTH       equ	235	;# 
  1232   0000EC                     DMAnDPTR        equ	236	;# 
  1233   0000EC                     DMAnDPTRL       equ	236	;# 
  1234   0000ED                     DMAnDPTRH       equ	237	;# 
  1235   0000EE                     DMAnDSZ         equ	238	;# 
  1236   0000EE                     DMAnDSZL        equ	238	;# 
  1237   0000EF                     DMAnDSZH        equ	239	;# 
  1238   0000F0                     DMAnDSA         equ	240	;# 
  1239   0000F0                     DMAnDSAL        equ	240	;# 
  1240   0000F1                     DMAnDSAH        equ	241	;# 
  1241   0000F2                     DMAnSCNT        equ	242	;# 
  1242   0000F2                     DMAnSCNTL       equ	242	;# 
  1243   0000F3                     DMAnSCNTH       equ	243	;# 
  1244   0000F4                     DMAnSPTR        equ	244	;# 
  1245   0000F4                     DMAnSPTRL       equ	244	;# 
  1246   0000F5                     DMAnSPTRH       equ	245	;# 
  1247   0000F6                     DMAnSPTRU       equ	246	;# 
  1248   0000F7                     DMAnSSZ         equ	247	;# 
  1249   0000F7                     DMAnSSZL        equ	247	;# 
  1250   0000F8                     DMAnSSZH        equ	248	;# 
  1251   0000F9                     DMAnSSA         equ	249	;# 
  1252   0000F9                     DMAnSSAL        equ	249	;# 
  1253   0000FA                     DMAnSSAH        equ	250	;# 
  1254   0000FB                     DMAnSSAU        equ	251	;# 
  1255   0000FC                     DMAnCON0        equ	252	;# 
  1256   0000FD                     DMAnCON1        equ	253	;# 
  1257   0000FE                     DMAnAIRQ        equ	254	;# 
  1258   0000FF                     DMAnSIRQ        equ	255	;# 
  1259   000200                     PPSLOCK         equ	512	;# 
  1260   000201                     RA0PPS          equ	513	;# 
  1261   000202                     RA1PPS          equ	514	;# 
  1262   000203                     RA2PPS          equ	515	;# 
  1263   000204                     RA3PPS          equ	516	;# 
  1264   000205                     RA4PPS          equ	517	;# 
  1265   000206                     RA5PPS          equ	518	;# 
  1266   000207                     RA6PPS          equ	519	;# 
  1267   000208                     RA7PPS          equ	520	;# 
  1268   000209                     RB0PPS          equ	521	;# 
  1269   00020A                     RB1PPS          equ	522	;# 
  1270   00020B                     RB2PPS          equ	523	;# 
  1271   00020C                     RB3PPS          equ	524	;# 
  1272   00020D                     RB4PPS          equ	525	;# 
  1273   00020E                     RB5PPS          equ	526	;# 
  1274   00020F                     RB6PPS          equ	527	;# 
  1275   000210                     RB7PPS          equ	528	;# 
  1276   000211                     RC0PPS          equ	529	;# 
  1277   000212                     RC1PPS          equ	530	;# 
  1278   000213                     RC2PPS          equ	531	;# 
  1279   000214                     RC3PPS          equ	532	;# 
  1280   000215                     RC4PPS          equ	533	;# 
  1281   000216                     RC5PPS          equ	534	;# 
  1282   000217                     RC6PPS          equ	535	;# 
  1283   000218                     RC7PPS          equ	536	;# 
  1284   000219                     RD0PPS          equ	537	;# 
  1285   00021A                     RD1PPS          equ	538	;# 
  1286   00021B                     RD2PPS          equ	539	;# 
  1287   00021C                     RD3PPS          equ	540	;# 
  1288   00021D                     RD4PPS          equ	541	;# 
  1289   00021E                     RD5PPS          equ	542	;# 
  1290   00021F                     RD6PPS          equ	543	;# 
  1291   000220                     RD7PPS          equ	544	;# 
  1292   000221                     RE0PPS          equ	545	;# 
  1293   000222                     RE1PPS          equ	546	;# 
  1294   000223                     RE2PPS          equ	547	;# 
  1295   00023E                     INT0PPS         equ	574	;# 
  1296   00023F                     INT1PPS         equ	575	;# 
  1297   000240                     INT2PPS         equ	576	;# 
  1298   000241                     T0CKIPPS        equ	577	;# 
  1299   000242                     T1CKIPPS        equ	578	;# 
  1300   000243                     T1GPPS          equ	579	;# 
  1301   000244                     T3CKIPPS        equ	580	;# 
  1302   000245                     T3GPPS          equ	581	;# 
  1303   000246                     T5CKIPPS        equ	582	;# 
  1304   000247                     T5GPPS          equ	583	;# 
  1305   000248                     T2INPPS         equ	584	;# 
  1306   000249                     T4INPPS         equ	585	;# 
  1307   00024A                     T6INPPS         equ	586	;# 
  1308   00024F                     CCP1PPS         equ	591	;# 
  1309   000250                     CCP2PPS         equ	592	;# 
  1310   000251                     CCP3PPS         equ	593	;# 
  1311   000253                     PWM1ERSPPS      equ	595	;# 
  1312   000254                     PWM2ERSPPS      equ	596	;# 
  1313   000255                     PWM3ERSPPS      equ	597	;# 
  1314   000257                     PWMIN0PPS       equ	599	;# 
  1315   000258                     PWMIN1PPS       equ	600	;# 
  1316   000259                     SMT1WINPPS      equ	601	;# 
  1317   00025A                     SMT1SIGPPS      equ	602	;# 
  1318   00025B                     CWG1PPS         equ	603	;# 
  1319   00025B                     CWG1INPPS       equ	603	;# 
  1320   00025C                     CWG2PPS         equ	604	;# 
  1321   00025C                     CWG2INPPS       equ	604	;# 
  1322   00025D                     CWG3PPS         equ	605	;# 
  1323   00025D                     CWG3INPPS       equ	605	;# 
  1324   00025E                     MD1CARLPPS      equ	606	;# 
  1325   00025E                     MDCARLPPS       equ	606	;# 
  1326   00025F                     MD1CARHPPS      equ	607	;# 
  1327   00025F                     MDCARHPPS       equ	607	;# 
  1328   000260                     MD1SRCPPS       equ	608	;# 
  1329   000260                     MDSRCPPS        equ	608	;# 
  1330   000261                     CLCIN0PPS       equ	609	;# 
  1331   000262                     CLCIN1PPS       equ	610	;# 
  1332   000263                     CLCIN2PPS       equ	611	;# 
  1333   000264                     CLCIN3PPS       equ	612	;# 
  1334   000265                     CLCIN4PPS       equ	613	;# 
  1335   000266                     CLCIN5PPS       equ	614	;# 
  1336   000267                     CLCIN6PPS       equ	615	;# 
  1337   000268                     CLCIN7PPS       equ	616	;# 
  1338   000269                     ADACTPPS        equ	617	;# 
  1339   00026A                     SPI1SCKPPS      equ	618	;# 
  1340   00026B                     SPI1SDIPPS      equ	619	;# 
  1341   00026C                     SPI1SSPPS       equ	620	;# 
  1342   00026D                     SPI2SCKPPS      equ	621	;# 
  1343   00026E                     SPI2SDIPPS      equ	622	;# 
  1344   00026F                     SPI2SSPPS       equ	623	;# 
  1345   000270                     I2C1SDAPPS      equ	624	;# 
  1346   000271                     I2C1SCLPPS      equ	625	;# 
  1347   000272                     U1RXPPS         equ	626	;# 
  1348   000273                     U1CTSPPS        equ	627	;# 
  1349   000274                     U2RXPPS         equ	628	;# 
  1350   000275                     U2CTSPPS        equ	629	;# 
  1351   000276                     U3RXPPS         equ	630	;# 
  1352   000277                     U3CTSPPS        equ	631	;# 
  1353   000278                     U4RXPPS         equ	632	;# 
  1354   000279                     U4CTSPPS        equ	633	;# 
  1355   00027A                     U5RXPPS         equ	634	;# 
  1356   00027B                     U5CTSPPS        equ	635	;# 
  1357   000286                     RC4I2C          equ	646	;# 
  1358   000287                     RC3I2C          equ	647	;# 
  1359   000288                     RB2I2C          equ	648	;# 
  1360   000289                     RB1I2C          equ	649	;# 
  1361   00028B                     I2C1RXB         equ	651	;# 
  1362   00028C                     I2C1TXB         equ	652	;# 
  1363   00028D                     I2C1CNT         equ	653	;# 
  1364   00028E                     I2C1ADB0        equ	654	;# 
  1365   00028F                     I2C1ADB1        equ	655	;# 
  1366   000290                     I2C1ADR0        equ	656	;# 
  1367   000291                     I2C1ADR1        equ	657	;# 
  1368   000292                     I2C1ADR2        equ	658	;# 
  1369   000293                     I2C1ADR3        equ	659	;# 
  1370   000294                     I2C1CON0        equ	660	;# 
  1371   000295                     I2C1CON1        equ	661	;# 
  1372   000296                     I2C1CON2        equ	662	;# 
  1373   000297                     I2C1ERR         equ	663	;# 
  1374   000298                     I2C1STAT0       equ	664	;# 
  1375   000299                     I2C1STAT1       equ	665	;# 
  1376   00029A                     I2C1PIR         equ	666	;# 
  1377   00029B                     I2C1PIE         equ	667	;# 
  1378   00029C                     I2C1CLK         equ	668	;# 
  1379   00029D                     I2C1BTO         equ	669	;# 
  1380   0002A1                     U1RXB           equ	673	;# 
  1381   0002A1                     U1RXBL          equ	673	;# 
  1382   0002A2                     U1RXCHK         equ	674	;# 
  1383   0002A3                     U1TXB           equ	675	;# 
  1384   0002A3                     U1TXBL          equ	675	;# 
  1385   0002A4                     U1TXCHK         equ	676	;# 
  1386   0002A5                     U1P1            equ	677	;# 
  1387   0002A5                     U1P1L           equ	677	;# 
  1388   0002A6                     U1P1H           equ	678	;# 
  1389   0002A7                     U1P2            equ	679	;# 
  1390   0002A7                     U1P2L           equ	679	;# 
  1391   0002A8                     U1P2H           equ	680	;# 
  1392   0002A9                     U1P3            equ	681	;# 
  1393   0002A9                     U1P3L           equ	681	;# 
  1394   0002AA                     U1P3H           equ	682	;# 
  1395   0002AB                     U1CON0          equ	683	;# 
  1396   0002AC                     U1CON1          equ	684	;# 
  1397   0002AD                     U1CON2          equ	685	;# 
  1398   0002AE                     U1BRG           equ	686	;# 
  1399   0002AE                     U1BRGL          equ	686	;# 
  1400   0002AF                     U1BRGH          equ	687	;# 
  1401   0002B0                     U1FIFO          equ	688	;# 
  1402   0002B1                     U1UIR           equ	689	;# 
  1403   0002B2                     U1ERRIR         equ	690	;# 
  1404   0002B3                     U1ERRIE         equ	691	;# 
  1405   0002B4                     U2RXB           equ	692	;# 
  1406   0002B4                     U2RXBL          equ	692	;# 
  1407   0002B6                     U2TXB           equ	694	;# 
  1408   0002B6                     U2TXBL          equ	694	;# 
  1409   0002B8                     U2P1            equ	696	;# 
  1410   0002B8                     U2P1L           equ	696	;# 
  1411   0002BA                     U2P2            equ	698	;# 
  1412   0002BA                     U2P2L           equ	698	;# 
  1413   0002BC                     U2P3            equ	700	;# 
  1414   0002BC                     U2P3L           equ	700	;# 
  1415   0002BE                     U2CON0          equ	702	;# 
  1416   0002BF                     U2CON1          equ	703	;# 
  1417   0002C0                     U2CON2          equ	704	;# 
  1418   0002C1                     U2BRG           equ	705	;# 
  1419   0002C1                     U2BRGL          equ	705	;# 
  1420   0002C2                     U2BRGH          equ	706	;# 
  1421   0002C3                     U2FIFO          equ	707	;# 
  1422   0002C4                     U2UIR           equ	708	;# 
  1423   0002C5                     U2ERRIR         equ	709	;# 
  1424   0002C6                     U2ERRIE         equ	710	;# 
  1425   0002C7                     U3RXB           equ	711	;# 
  1426   0002C7                     U3RXBL          equ	711	;# 
  1427   0002C9                     U3TXB           equ	713	;# 
  1428   0002C9                     U3TXBL          equ	713	;# 
  1429   0002CB                     U3P1            equ	715	;# 
  1430   0002CB                     U3P1L           equ	715	;# 
  1431   0002CD                     U3P2            equ	717	;# 
  1432   0002CD                     U3P2L           equ	717	;# 
  1433   0002CF                     U3P3            equ	719	;# 
  1434   0002CF                     U3P3L           equ	719	;# 
  1435   0002D1                     U3CON0          equ	721	;# 
  1436   0002D2                     U3CON1          equ	722	;# 
  1437   0002D3                     U3CON2          equ	723	;# 
  1438   0002D4                     U3BRG           equ	724	;# 
  1439   0002D4                     U3BRGL          equ	724	;# 
  1440   0002D5                     U3BRGH          equ	725	;# 
  1441   0002D6                     U3FIFO          equ	726	;# 
  1442   0002D7                     U3UIR           equ	727	;# 
  1443   0002D8                     U3ERRIR         equ	728	;# 
  1444   0002D9                     U3ERRIE         equ	729	;# 
  1445   0002DA                     U4RXB           equ	730	;# 
  1446   0002DA                     U4RXBL          equ	730	;# 
  1447   0002DC                     U4TXB           equ	732	;# 
  1448   0002DC                     U4TXBL          equ	732	;# 
  1449   0002DE                     U4P1            equ	734	;# 
  1450   0002DE                     U4P1L           equ	734	;# 
  1451   0002E0                     U4P2            equ	736	;# 
  1452   0002E0                     U4P2L           equ	736	;# 
  1453   0002E2                     U4P3            equ	738	;# 
  1454   0002E2                     U4P3L           equ	738	;# 
  1455   0002E4                     U4CON0          equ	740	;# 
  1456   0002E5                     U4CON1          equ	741	;# 
  1457   0002E6                     U4CON2          equ	742	;# 
  1458   0002E7                     U4BRG           equ	743	;# 
  1459   0002E7                     U4BRGL          equ	743	;# 
  1460   0002E8                     U4BRGH          equ	744	;# 
  1461   0002E9                     U4FIFO          equ	745	;# 
  1462   0002EA                     U4UIR           equ	746	;# 
  1463   0002EB                     U4ERRIR         equ	747	;# 
  1464   0002EC                     U4ERRIE         equ	748	;# 
  1465   0002ED                     U5RXB           equ	749	;# 
  1466   0002ED                     U5RXBL          equ	749	;# 
  1467   0002EF                     U5TXB           equ	751	;# 
  1468   0002EF                     U5TXBL          equ	751	;# 
  1469   0002F1                     U5P1            equ	753	;# 
  1470   0002F1                     U5P1L           equ	753	;# 
  1471   0002F3                     U5P2            equ	755	;# 
  1472   0002F3                     U5P2L           equ	755	;# 
  1473   0002F5                     U5P3            equ	757	;# 
  1474   0002F5                     U5P3L           equ	757	;# 
  1475   0002F7                     U5CON0          equ	759	;# 
  1476   0002F8                     U5CON1          equ	760	;# 
  1477   0002F9                     U5CON2          equ	761	;# 
  1478   0002FA                     U5BRG           equ	762	;# 
  1479   0002FA                     U5BRGL          equ	762	;# 
  1480   0002FB                     U5BRGH          equ	763	;# 
  1481   0002FC                     U5FIFO          equ	764	;# 
  1482   0002FD                     U5UIR           equ	765	;# 
  1483   0002FE                     U5ERRIR         equ	766	;# 
  1484   0002FF                     U5ERRIE         equ	767	;# 
  1485   000300                     SMT1TMR         equ	768	;# 
  1486   000300                     SMT1TMRL        equ	768	;# 
  1487   000301                     SMT1TMRH        equ	769	;# 
  1488   000302                     SMT1TMRU        equ	770	;# 
  1489   000303                     SMT1CPR         equ	771	;# 
  1490   000303                     SMT1CPRL        equ	771	;# 
  1491   000304                     SMT1CPRH        equ	772	;# 
  1492   000305                     SMT1CPRU        equ	773	;# 
  1493   000306                     SMT1CPW         equ	774	;# 
  1494   000306                     SMT1CPWL        equ	774	;# 
  1495   000307                     SMT1CPWH        equ	775	;# 
  1496   000308                     SMT1CPWU        equ	776	;# 
  1497   000309                     SMT1PR          equ	777	;# 
  1498   000309                     SMT1PRL         equ	777	;# 
  1499   00030A                     SMT1PRH         equ	778	;# 
  1500   00030B                     SMT1PRU         equ	779	;# 
  1501   00030C                     SMT1CON0        equ	780	;# 
  1502   00030D                     SMT1CON1        equ	781	;# 
  1503   00030E                     SMT1STAT        equ	782	;# 
  1504   00030F                     SMT1CLK         equ	783	;# 
  1505   000310                     SMT1SIG         equ	784	;# 
  1506   000311                     SMT1WIN         equ	785	;# 
  1507   000318                     TMR0L           equ	792	;# 
  1508   000318                     TMR0            equ	792	;# 
  1509   000319                     TMR0H           equ	793	;# 
  1510   000319                     PR0             equ	793	;# 
  1511   00031A                     T0CON0          equ	794	;# 
  1512   00031B                     T0CON1          equ	795	;# 
  1513   00031C                     TMR1            equ	796	;# 
  1514   00031C                     TMR1L           equ	796	;# 
  1515   00031D                     TMR1H           equ	797	;# 
  1516   00031E                     T1CON           equ	798	;# 
  1517   00031E                     TMR1CON         equ	798	;# 
  1518   00031F                     T1GCON          equ	799	;# 
  1519   00031F                     TMR1GCON        equ	799	;# 
  1520   000320                     T1GATE          equ	800	;# 
  1521   000320                     TMR1GATE        equ	800	;# 
  1522   000321                     T1CLK           equ	801	;# 
  1523   000321                     TMR1CLK         equ	801	;# 
  1524   000321                     PR1             equ	801	;# 
  1525   000322                     T2TMR           equ	802	;# 
  1526   000322                     TMR2            equ	802	;# 
  1527   000323                     T2PR            equ	803	;# 
  1528   000323                     PR2             equ	803	;# 
  1529   000324                     T2CON           equ	804	;# 
  1530   000325                     T2HLT           equ	805	;# 
  1531   000326                     T2CLKCON        equ	806	;# 
  1532   000326                     T2CLK           equ	806	;# 
  1533   000327                     T2RST           equ	807	;# 
  1534   000328                     TMR3            equ	808	;# 
  1535   000328                     TMR3L           equ	808	;# 
  1536   000329                     TMR3H           equ	809	;# 
  1537   00032A                     T3CON           equ	810	;# 
  1538   00032A                     TMR3CON         equ	810	;# 
  1539   00032B                     T3GCON          equ	811	;# 
  1540   00032B                     TMR3GCON        equ	811	;# 
  1541   00032C                     T3GATE          equ	812	;# 
  1542   00032C                     TMR3GATE        equ	812	;# 
  1543   00032D                     T3CLK           equ	813	;# 
  1544   00032D                     TMR3CLK         equ	813	;# 
  1545   00032D                     PR3             equ	813	;# 
  1546   00032E                     T4TMR           equ	814	;# 
  1547   00032E                     TMR4            equ	814	;# 
  1548   00032F                     T4PR            equ	815	;# 
  1549   00032F                     PR4             equ	815	;# 
  1550   000330                     T4CON           equ	816	;# 
  1551   000331                     T4HLT           equ	817	;# 
  1552   000332                     T4CLKCON        equ	818	;# 
  1553   000332                     T4CLK           equ	818	;# 
  1554   000333                     T4RST           equ	819	;# 
  1555   000334                     TMR5            equ	820	;# 
  1556   000334                     TMR5L           equ	820	;# 
  1557   000335                     TMR5H           equ	821	;# 
  1558   000336                     T5CON           equ	822	;# 
  1559   000336                     TMR5CON         equ	822	;# 
  1560   000337                     T5GCON          equ	823	;# 
  1561   000337                     TMR5GCON        equ	823	;# 
  1562   000338                     T5GATE          equ	824	;# 
  1563   000338                     TMR5GATE        equ	824	;# 
  1564   000339                     T5CLK           equ	825	;# 
  1565   000339                     TMR5CLK         equ	825	;# 
  1566   000339                     PR5             equ	825	;# 
  1567   00033A                     T6TMR           equ	826	;# 
  1568   00033A                     TMR6            equ	826	;# 
  1569   00033B                     T6PR            equ	827	;# 
  1570   00033B                     PR6             equ	827	;# 
  1571   00033C                     T6CON           equ	828	;# 
  1572   00033D                     T6HLT           equ	829	;# 
  1573   00033E                     T6CLKCON        equ	830	;# 
  1574   00033E                     T6CLK           equ	830	;# 
  1575   00033F                     T6RST           equ	831	;# 
  1576   000340                     CCPR1           equ	832	;# 
  1577   000340                     CCPR1L          equ	832	;# 
  1578   000341                     CCPR1H          equ	833	;# 
  1579   000342                     CCP1CON         equ	834	;# 
  1580   000343                     CCP1CAP         equ	835	;# 
  1581   000344                     CCPR2           equ	836	;# 
  1582   000344                     CCPR2L          equ	836	;# 
  1583   000345                     CCPR2H          equ	837	;# 
  1584   000346                     CCP2CON         equ	838	;# 
  1585   000347                     CCP2CAP         equ	839	;# 
  1586   000348                     CCPR3           equ	840	;# 
  1587   000348                     CCPR3L          equ	840	;# 
  1588   000349                     CCPR3H          equ	841	;# 
  1589   00034A                     CCP3CON         equ	842	;# 
  1590   00034B                     CCP3CAP         equ	843	;# 
  1591   00034C                     CCPTMRS0        equ	844	;# 
  1592   00034F                     CRCDATA         equ	847	;# 
  1593   00034F                     CRCDATL         equ	847	;# 
  1594   000350                     CRCDATH         equ	848	;# 
  1595   000351                     CRCACC          equ	849	;# 
  1596   000351                     CRCACCL         equ	849	;# 
  1597   000352                     CRCACCH         equ	850	;# 
  1598   000353                     CRCSHFT         equ	851	;# 
  1599   000353                     CRCSHIFTL       equ	851	;# 
  1600   000354                     CRCSHIFTH       equ	852	;# 
  1601   000355                     CRCXOR          equ	853	;# 
  1602   000355                     CRCXORL         equ	853	;# 
  1603   000356                     CRCXORH         equ	854	;# 
  1604   000357                     CRCCON0         equ	855	;# 
  1605   000358                     CRCCON1         equ	856	;# 
  1606   00035A                     SCANLADR        equ	858	;# 
  1607   00035A                     SCANLADRL       equ	858	;# 
  1608   00035B                     SCANLADRH       equ	859	;# 
  1609   00035C                     SCANLADRU       equ	860	;# 
  1610   00035D                     SCANHADR        equ	861	;# 
  1611   00035D                     SCANHADRL       equ	861	;# 
  1612   00035E                     SCANHADRH       equ	862	;# 
  1613   00035F                     SCANHADRU       equ	863	;# 
  1614   000360                     SCANCON0        equ	864	;# 
  1615   000361                     SCANTRIG        equ	865	;# 
  1616   000362                     IPR0            equ	866	;# 
  1617   000363                     IPR1            equ	867	;# 
  1618   000364                     IPR2            equ	868	;# 
  1619   000365                     IPR3            equ	869	;# 
  1620   000366                     IPR4            equ	870	;# 
  1621   000367                     IPR5            equ	871	;# 
  1622   000368                     IPR6            equ	872	;# 
  1623   000369                     IPR7            equ	873	;# 
  1624   00036A                     IPR8            equ	874	;# 
  1625   00036B                     IPR9            equ	875	;# 
  1626   00036C                     IPR10           equ	876	;# 
  1627   00036D                     IPR11           equ	877	;# 
  1628   00036E                     IPR12           equ	878	;# 
  1629   00036F                     IPR13           equ	879	;# 
  1630   000370                     IPR14           equ	880	;# 
  1631   000371                     IPR15           equ	881	;# 
  1632   000373                     STATUS_CSHAD    equ	883	;# 
  1633   000374                     WREG_CSHAD      equ	884	;# 
  1634   000375                     BSR_CSHAD       equ	885	;# 
  1635   000376                     SHADCON         equ	886	;# 
  1636   000377                     STATUS_SHAD     equ	887	;# 
  1637   000378                     WREG_SHAD       equ	888	;# 
  1638   000379                     BSR_SHAD        equ	889	;# 
  1639   00037A                     PCLATH_SHAD     equ	890	;# 
  1640   00037B                     PCLATU_SHAD     equ	891	;# 
  1641   00037C                     FSR0SH          equ	892	;# 
  1642   00037C                     FSR0L_SHAD      equ	892	;# 
  1643   00037D                     FSR0H_SHAD      equ	893	;# 
  1644   00037E                     FSR1SH          equ	894	;# 
  1645   00037E                     FSR1L_SHAD      equ	894	;# 
  1646   00037F                     FSR1H_SHAD      equ	895	;# 
  1647   000380                     FSR2SH          equ	896	;# 
  1648   000380                     FSR2L_SHAD      equ	896	;# 
  1649   000381                     FSR2H_SHAD      equ	897	;# 
  1650   000382                     PRODSH          equ	898	;# 
  1651   000382                     PRODL_SHAD      equ	898	;# 
  1652   000383                     PRODH_SHAD      equ	899	;# 
  1653   0003BC                     CWG1CLK         equ	956	;# 
  1654   0003BC                     CWG1CLKCON      equ	956	;# 
  1655   0003BD                     CWG1ISM         equ	957	;# 
  1656   0003BD                     CWG1DAT         equ	957	;# 
  1657   0003BE                     CWG1DBR         equ	958	;# 
  1658   0003BF                     CWG1DBF         equ	959	;# 
  1659   0003C0                     CWG1CON0        equ	960	;# 
  1660   0003C1                     CWG1CON1        equ	961	;# 
  1661   0003C2                     CWG1AS0         equ	962	;# 
  1662   0003C3                     CWG1AS1         equ	963	;# 
  1663   0003C4                     CWG1STR         equ	964	;# 
  1664   0003C5                     CWG2CLK         equ	965	;# 
  1665   0003C5                     CWG2CLKCON      equ	965	;# 
  1666   0003C6                     CWG2ISM         equ	966	;# 
  1667   0003C6                     CWG2DAT         equ	966	;# 
  1668   0003C7                     CWG2DBR         equ	967	;# 
  1669   0003C8                     CWG2DBF         equ	968	;# 
  1670   0003C9                     CWG2CON0        equ	969	;# 
  1671   0003CA                     CWG2CON1        equ	970	;# 
  1672   0003CB                     CWG2AS0         equ	971	;# 
  1673   0003CC                     CWG2AS1         equ	972	;# 
  1674   0003CD                     CWG2STR         equ	973	;# 
  1675   0003CE                     CWG3CLK         equ	974	;# 
  1676   0003CE                     CWG3CLKCON      equ	974	;# 
  1677   0003CF                     CWG3ISM         equ	975	;# 
  1678   0003CF                     CWG3DAT         equ	975	;# 
  1679   0003D0                     CWG3DBR         equ	976	;# 
  1680   0003D1                     CWG3DBF         equ	977	;# 
  1681   0003D2                     CWG3CON0        equ	978	;# 
  1682   0003D3                     CWG3CON1        equ	979	;# 
  1683   0003D4                     CWG3AS0         equ	980	;# 
  1684   0003D5                     CWG3AS1         equ	981	;# 
  1685   0003D6                     CWG3STR         equ	982	;# 
  1686   0003D7                     FVRCON          equ	983	;# 
  1687   0003D8                     ADCPCON         equ	984	;# 
  1688   0003D8                     ADCP            equ	984	;# 
  1689   0003D9                     ADLTH           equ	985	;# 
  1690   0003D9                     ADLTHL          equ	985	;# 
  1691   0003DA                     ADLTHH          equ	986	;# 
  1692   0003DB                     ADUTH           equ	987	;# 
  1693   0003DB                     ADUTHL          equ	987	;# 
  1694   0003DC                     ADUTHH          equ	988	;# 
  1695   0003DD                     ADERR           equ	989	;# 
  1696   0003DD                     ADERRL          equ	989	;# 
  1697   0003DE                     ADERRH          equ	990	;# 
  1698   0003DF                     ADSTPT          equ	991	;# 
  1699   0003DF                     ADSTPTL         equ	991	;# 
  1700   0003E0                     ADSTPTH         equ	992	;# 
  1701   0003E1                     ADFLTR          equ	993	;# 
  1702   0003E1                     ADFLTRL         equ	993	;# 
  1703   0003E2                     ADFLTRH         equ	994	;# 
  1704   0003E3                     ADACC           equ	995	;# 
  1705   0003E3                     ADACCL          equ	995	;# 
  1706   0003E4                     ADACCH          equ	996	;# 
  1707   0003E5                     ADACCU          equ	997	;# 
  1708   0003E6                     ADCNT           equ	998	;# 
  1709   0003E7                     ADRPT           equ	999	;# 
  1710   0003E8                     ADPREV          equ	1000	;# 
  1711   0003E8                     ADPREVL         equ	1000	;# 
  1712   0003E9                     ADPREVH         equ	1001	;# 
  1713   0003EA                     ADRES           equ	1002	;# 
  1714   0003EA                     ADRESL          equ	1002	;# 
  1715   0003EB                     ADRESH          equ	1003	;# 
  1716   0003EC                     ADPCH           equ	1004	;# 
  1717   0003EE                     ADACQ           equ	1006	;# 
  1718   0003EE                     ADACQL          equ	1006	;# 
  1719   0003EF                     ADACQH          equ	1007	;# 
  1720   0003F0                     ADCAP           equ	1008	;# 
  1721   0003F1                     ADPRE           equ	1009	;# 
  1722   0003F1                     ADPREL          equ	1009	;# 
  1723   0003F2                     ADPREH          equ	1010	;# 
  1724   0003F3                     ADCON0          equ	1011	;# 
  1725   0003F4                     ADCON1          equ	1012	;# 
  1726   0003F5                     ADCON2          equ	1013	;# 
  1727   0003F6                     ADCON3          equ	1014	;# 
  1728   0003F7                     ADSTAT          equ	1015	;# 
  1729   0003F8                     ADREF           equ	1016	;# 
  1730   0003F9                     ADACT           equ	1017	;# 
  1731   0003FA                     ADCLK           equ	1018	;# 
  1732   000400                     ANSELA          equ	1024	;# 
  1733   000401                     WPUA            equ	1025	;# 
  1734   000402                     ODCONA          equ	1026	;# 
  1735   000403                     SLRCONA         equ	1027	;# 
  1736   000404                     INLVLA          equ	1028	;# 
  1737   000405                     IOCAP           equ	1029	;# 
  1738   000406                     IOCAN           equ	1030	;# 
  1739   000407                     IOCAF           equ	1031	;# 
  1740   000408                     ANSELB          equ	1032	;# 
  1741   000409                     WPUB            equ	1033	;# 
  1742   00040A                     ODCONB          equ	1034	;# 
  1743   00040B                     SLRCONB         equ	1035	;# 
  1744   00040C                     INLVLB          equ	1036	;# 
  1745   00040D                     IOCBP           equ	1037	;# 
  1746   00040E                     IOCBN           equ	1038	;# 
  1747   00040F                     IOCBF           equ	1039	;# 
  1748   000410                     ANSELC          equ	1040	;# 
  1749   000411                     WPUC            equ	1041	;# 
  1750   000412                     ODCONC          equ	1042	;# 
  1751   000413                     SLRCONC         equ	1043	;# 
  1752   000414                     INLVLC          equ	1044	;# 
  1753   000415                     IOCCP           equ	1045	;# 
  1754   000416                     IOCCN           equ	1046	;# 
  1755   000417                     IOCCF           equ	1047	;# 
  1756   000418                     ANSELD          equ	1048	;# 
  1757   000419                     WPUD            equ	1049	;# 
  1758   00041A                     ODCOND          equ	1050	;# 
  1759   00041B                     SLRCOND         equ	1051	;# 
  1760   00041C                     INLVLD          equ	1052	;# 
  1761   000420                     ANSELE          equ	1056	;# 
  1762   000421                     WPUE            equ	1057	;# 
  1763   000422                     ODCONE          equ	1058	;# 
  1764   000423                     SLRCONE         equ	1059	;# 
  1765   000424                     INLVLE          equ	1060	;# 
  1766   000425                     IOCEP           equ	1061	;# 
  1767   000426                     IOCEN           equ	1062	;# 
  1768   000427                     IOCEF           equ	1063	;# 
  1769   000440                     NCO1ACC         equ	1088	;# 
  1770   000440                     NCO1ACCL        equ	1088	;# 
  1771   000441                     NCO1ACCH        equ	1089	;# 
  1772   000442                     NCO1ACCU        equ	1090	;# 
  1773   000443                     NCO1INC         equ	1091	;# 
  1774   000443                     NCO1INCL        equ	1091	;# 
  1775   000444                     NCO1INCH        equ	1092	;# 
  1776   000445                     NCO1INCU        equ	1093	;# 
  1777   000446                     NCO1CON         equ	1094	;# 
  1778   000447                     NCO1CLK         equ	1095	;# 
  1779   000448                     NCO2ACC         equ	1096	;# 
  1780   000448                     NCO2ACCL        equ	1096	;# 
  1781   000449                     NCO2ACCH        equ	1097	;# 
  1782   00044A                     NCO2ACCU        equ	1098	;# 
  1783   00044B                     NCO2INC         equ	1099	;# 
  1784   00044B                     NCO2INCL        equ	1099	;# 
  1785   00044C                     NCO2INCH        equ	1100	;# 
  1786   00044D                     NCO2INCU        equ	1101	;# 
  1787   00044E                     NCO2CON         equ	1102	;# 
  1788   00044F                     NCO2CLK         equ	1103	;# 
  1789   000450                     NCO3ACC         equ	1104	;# 
  1790   000450                     NCO3ACCL        equ	1104	;# 
  1791   000451                     NCO3ACCH        equ	1105	;# 
  1792   000452                     NCO3ACCU        equ	1106	;# 
  1793   000453                     NCO3INC         equ	1107	;# 
  1794   000453                     NCO3INCL        equ	1107	;# 
  1795   000454                     NCO3INCH        equ	1108	;# 
  1796   000455                     NCO3INCU        equ	1109	;# 
  1797   000456                     NCO3CON         equ	1110	;# 
  1798   000457                     NCO3CLK         equ	1111	;# 
  1799   000459                     IVTLOCK         equ	1113	;# 
  1800   00045A                     IVTAD           equ	1114	;# 
  1801   00045A                     IVTADL          equ	1114	;# 
  1802   00045B                     IVTADH          equ	1115	;# 
  1803   00045C                     IVTADU          equ	1116	;# 
  1804   00045D                     IVTBASE         equ	1117	;# 
  1805   00045D                     IVTBASEL        equ	1117	;# 
  1806   00045E                     IVTBASEH        equ	1118	;# 
  1807   00045F                     IVTBASEU        equ	1119	;# 
  1808   000460                     PWM1ERS         equ	1120	;# 
  1809   000461                     PWM1CLK         equ	1121	;# 
  1810   000462                     PWM1LDS         equ	1122	;# 
  1811   000463                     PWM1PR          equ	1123	;# 
  1812   000463                     PWM1PRL         equ	1123	;# 
  1813   000464                     PWM1PRH         equ	1124	;# 
  1814   000465                     PWM1CPRE        equ	1125	;# 
  1815   000466                     PWM1PIPOS       equ	1126	;# 
  1816   000467                     PWM1GIR         equ	1127	;# 
  1817   000468                     PWM1GIE         equ	1128	;# 
  1818   000469                     PWM1CON         equ	1129	;# 
  1819   00046A                     PWM1S1CFG       equ	1130	;# 
  1820   00046B                     PWM1S1P1        equ	1131	;# 
  1821   00046B                     PWM1S1P1L       equ	1131	;# 
  1822   00046C                     PWM1S1P1H       equ	1132	;# 
  1823   00046D                     PWM1S1P2        equ	1133	;# 
  1824   00046D                     PWM1S1P2L       equ	1133	;# 
  1825   00046E                     PWM1S1P2H       equ	1134	;# 
  1826   00046F                     PWM2ERS         equ	1135	;# 
  1827   000470                     PWM2CLK         equ	1136	;# 
  1828   000471                     PWM2LDS         equ	1137	;# 
  1829   000472                     PWM2PR          equ	1138	;# 
  1830   000472                     PWM2PRL         equ	1138	;# 
  1831   000473                     PWM2PRH         equ	1139	;# 
  1832   000474                     PWM2CPRE        equ	1140	;# 
  1833   000475                     PWM2PIPOS       equ	1141	;# 
  1834   000476                     PWM2GIR         equ	1142	;# 
  1835   000477                     PWM2GIE         equ	1143	;# 
  1836   000478                     PWM2CON         equ	1144	;# 
  1837   000479                     PWM2S1CFG       equ	1145	;# 
  1838   00047A                     PWM2S1P1        equ	1146	;# 
  1839   00047A                     PWM2S1P1L       equ	1146	;# 
  1840   00047B                     PWM2S1P1H       equ	1147	;# 
  1841   00047C                     PWM2S1P2        equ	1148	;# 
  1842   00047C                     PWM2S1P2L       equ	1148	;# 
  1843   00047D                     PWM2S1P2H       equ	1149	;# 
  1844   00047E                     PWM3ERS         equ	1150	;# 
  1845   00047F                     PWM3CLK         equ	1151	;# 
  1846   000480                     PWM3LDS         equ	1152	;# 
  1847   000481                     PWM3PR          equ	1153	;# 
  1848   000481                     PWM3PRL         equ	1153	;# 
  1849   000482                     PWM3PRH         equ	1154	;# 
  1850   000483                     PWM3CPRE        equ	1155	;# 
  1851   000484                     PWM3PIPOS       equ	1156	;# 
  1852   000485                     PWM3GIR         equ	1157	;# 
  1853   000486                     PWM3GIE         equ	1158	;# 
  1854   000487                     PWM3CON         equ	1159	;# 
  1855   000488                     PWM3S1CFG       equ	1160	;# 
  1856   000489                     PWM3S1P1        equ	1161	;# 
  1857   000489                     PWM3S1P1L       equ	1161	;# 
  1858   00048A                     PWM3S1P1H       equ	1162	;# 
  1859   00048B                     PWM3S1P2        equ	1163	;# 
  1860   00048B                     PWM3S1P2L       equ	1163	;# 
  1861   00048C                     PWM3S1P2H       equ	1164	;# 
  1862   00049C                     PWMLOAD         equ	1180	;# 
  1863   00049D                     PWMEN           equ	1181	;# 
  1864   00049E                     PIE0            equ	1182	;# 
  1865   00049F                     PIE1            equ	1183	;# 
  1866   0004A0                     PIE2            equ	1184	;# 
  1867   0004A1                     PIE3            equ	1185	;# 
  1868   0004A2                     PIE4            equ	1186	;# 
  1869   0004A3                     PIE5            equ	1187	;# 
  1870   0004A4                     PIE6            equ	1188	;# 
  1871   0004A5                     PIE7            equ	1189	;# 
  1872   0004A6                     PIE8            equ	1190	;# 
  1873   0004A7                     PIE9            equ	1191	;# 
  1874   0004A8                     PIE10           equ	1192	;# 
  1875   0004A9                     PIE11           equ	1193	;# 
  1876   0004AA                     PIE12           equ	1194	;# 
  1877   0004AB                     PIE13           equ	1195	;# 
  1878   0004AC                     PIE14           equ	1196	;# 
  1879   0004AD                     PIE15           equ	1197	;# 
  1880   0004AE                     PIR0            equ	1198	;# 
  1881   0004AF                     PIR1            equ	1199	;# 
  1882   0004B0                     PIR2            equ	1200	;# 
  1883   0004B1                     PIR3            equ	1201	;# 
  1884   0004B2                     PIR4            equ	1202	;# 
  1885   0004B3                     PIR5            equ	1203	;# 
  1886   0004B4                     PIR6            equ	1204	;# 
  1887   0004B5                     PIR7            equ	1205	;# 
  1888   0004B6                     PIR8            equ	1206	;# 
  1889   0004B7                     PIR9            equ	1207	;# 
  1890   0004B8                     PIR10           equ	1208	;# 
  1891   0004B9                     PIR11           equ	1209	;# 
  1892   0004BA                     PIR12           equ	1210	;# 
  1893   0004BB                     PIR13           equ	1211	;# 
  1894   0004BC                     PIR14           equ	1212	;# 
  1895   0004BD                     PIR15           equ	1213	;# 
  1896   0004BE                     LATA            equ	1214	;# 
  1897   0004BF                     LATB            equ	1215	;# 
  1898   0004C0                     LATC            equ	1216	;# 
  1899   0004C1                     LATD            equ	1217	;# 
  1900   0004C2                     LATE            equ	1218	;# 
  1901   0004C6                     TRISA           equ	1222	;# 
  1902   0004C7                     TRISB           equ	1223	;# 
  1903   0004C8                     TRISC           equ	1224	;# 
  1904   0004C9                     TRISD           equ	1225	;# 
  1905   0004CA                     TRISE           equ	1226	;# 
  1906   0004CE                     PORTA           equ	1230	;# 
  1907   0004CF                     PORTB           equ	1231	;# 
  1908   0004D0                     PORTC           equ	1232	;# 
  1909   0004D1                     PORTD           equ	1233	;# 
  1910   0004D2                     PORTE           equ	1234	;# 
  1911   0004D6                     INTCON0         equ	1238	;# 
  1912   0004D7                     INTCON1         equ	1239	;# 
  1913   0004D8                     STATUS          equ	1240	;# 
  1914   0004D9                     FSR2            equ	1241	;# 
  1915   0004D9                     FSR2L           equ	1241	;# 
  1916   0004DA                     FSR2H           equ	1242	;# 
  1917   0004DB                     PLUSW2          equ	1243	;# 
  1918   0004DC                     PREINC2         equ	1244	;# 
  1919   0004DD                     POSTDEC2        equ	1245	;# 
  1920   0004DE                     POSTINC2        equ	1246	;# 
  1921   0004DF                     INDF2           equ	1247	;# 
  1922   0004E0                     BSR             equ	1248	;# 
  1923   0004E1                     FSR1            equ	1249	;# 
  1924   0004E1                     FSR1L           equ	1249	;# 
  1925   0004E2                     FSR1H           equ	1250	;# 
  1926   0004E3                     PLUSW1          equ	1251	;# 
  1927   0004E4                     PREINC1         equ	1252	;# 
  1928   0004E5                     POSTDEC1        equ	1253	;# 
  1929   0004E6                     POSTINC1        equ	1254	;# 
  1930   0004E7                     INDF1           equ	1255	;# 
  1931   0004E8                     WREG            equ	1256	;# 
  1932   0004E9                     FSR0            equ	1257	;# 
  1933   0004E9                     FSR0L           equ	1257	;# 
  1934   0004EA                     FSR0H           equ	1258	;# 
  1935   0004EB                     PLUSW0          equ	1259	;# 
  1936   0004EC                     PREINC0         equ	1260	;# 
  1937   0004ED                     POSTDEC0        equ	1261	;# 
  1938   0004EE                     POSTINC0        equ	1262	;# 
  1939   0004EF                     INDF0           equ	1263	;# 
  1940   0004F0                     PCON0           equ	1264	;# 
  1941   0004F1                     PCON1           equ	1265	;# 
  1942   0004F2                     CPUDOZE         equ	1266	;# 
  1943   0004F3                     PROD            equ	1267	;# 
  1944   0004F3                     PRODL           equ	1267	;# 
  1945   0004F4                     PRODH           equ	1268	;# 
  1946   0004F5                     TABLAT          equ	1269	;# 
  1947   0004F6                     TBLPTR          equ	1270	;# 
  1948   0004F6                     TBLPTRL         equ	1270	;# 
  1949   0004F7                     TBLPTRH         equ	1271	;# 
  1950   0004F8                     TBLPTRU         equ	1272	;# 
  1951   0004F9                     PCLAT           equ	1273	;# 
  1952   0004F9                     PCL             equ	1273	;# 
  1953   0004FA                     PCLATH          equ	1274	;# 
  1954   0004FB                     PCLATU          equ	1275	;# 
  1955   0004FC                     STKPTR          equ	1276	;# 
  1956   0004FD                     TOS             equ	1277	;# 
  1957   0004FD                     TOSL            equ	1277	;# 
  1958   0004FE                     TOSH            equ	1278	;# 
  1959   0004FF                     TOSU            equ	1279	;# 
  1960   000039                     CLKRCON         equ	57	;# 
  1961   00003A                     CLKRCLK         equ	58	;# 
  1962   000040                     NVMCON0         equ	64	;# 
  1963   000041                     NVMCON1         equ	65	;# 
  1964   000042                     NVMLOCK         equ	66	;# 
  1965   000043                     NVMADR          equ	67	;# 
  1966   000043                     NVMADRL         equ	67	;# 
  1967   000044                     NVMADRH         equ	68	;# 
  1968   000045                     NVMADRU         equ	69	;# 
  1969   000046                     NVMDAT          equ	70	;# 
  1970   000046                     NVMDATL         equ	70	;# 
  1971   000047                     NVMDATH         equ	71	;# 
  1972   000048                     VREGCON         equ	72	;# 
  1973   000049                     BORCON          equ	73	;# 
  1974   00004A                     HLVDCON0        equ	74	;# 
  1975   00004B                     HLVDCON1        equ	75	;# 
  1976   00004C                     ZCDCON          equ	76	;# 
  1977   000060                     PMD0            equ	96	;# 
  1978   000061                     PMD1            equ	97	;# 
  1979   000063                     PMD3            equ	99	;# 
  1980   000064                     PMD4            equ	100	;# 
  1981   000065                     PMD5            equ	101	;# 
  1982   000066                     PMD6            equ	102	;# 
  1983   000067                     PMD7            equ	103	;# 
  1984   000068                     PMD8            equ	104	;# 
  1985   00006A                     MD1CON0         equ	106	;# 
  1986   00006B                     MD1CON1         equ	107	;# 
  1987   00006C                     MD1SRC          equ	108	;# 
  1988   00006D                     MD1CARL         equ	109	;# 
  1989   00006E                     MD1CARH         equ	110	;# 
  1990   00006F                     CMOUT           equ	111	;# 
  1991   000070                     CM1CON0         equ	112	;# 
  1992   000071                     CM1CON1         equ	113	;# 
  1993   000072                     CM1NCH          equ	114	;# 
  1994   000073                     CM1PCH          equ	115	;# 
  1995   000074                     CM2CON0         equ	116	;# 
  1996   000075                     CM2CON1         equ	117	;# 
  1997   000076                     CM2NCH          equ	118	;# 
  1998   000077                     CM2PCH          equ	119	;# 
  1999   000078                     WDTCON0         equ	120	;# 
  2000   000079                     WDTCON1         equ	121	;# 
  2001   00007A                     WDTPS           equ	122	;# 
  2002   00007A                     WDTPSL          equ	122	;# 
  2003   00007B                     WDTPSH          equ	123	;# 
  2004   00007C                     WDTTMR          equ	124	;# 
  2005   00007D                     DAC1DAT         equ	125	;# 
  2006   00007D                     DAC1DATL        equ	125	;# 
  2007   00007F                     DAC1CON         equ	127	;# 
  2008   000080                     SPI1RXB         equ	128	;# 
  2009   000081                     SPI1TXB         equ	129	;# 
  2010   000082                     SPI1TCNT        equ	130	;# 
  2011   000082                     SPI1TCNTL       equ	130	;# 
  2012   000083                     SPI1TCNTH       equ	131	;# 
  2013   000084                     SPI1CON0        equ	132	;# 
  2014   000085                     SPI1CON1        equ	133	;# 
  2015   000086                     SPI1CON2        equ	134	;# 
  2016   000087                     SPI1STATUS      equ	135	;# 
  2017   000088                     SPI1TWIDTH      equ	136	;# 
  2018   000089                     SPI1BAUD        equ	137	;# 
  2019   00008A                     SPI1INTF        equ	138	;# 
  2020   00008B                     SPI1INTE        equ	139	;# 
  2021   00008C                     SPI1CLK         equ	140	;# 
  2022   00008D                     SPI2RXB         equ	141	;# 
  2023   00008E                     SPI2TXB         equ	142	;# 
  2024   00008F                     SPI2TCNT        equ	143	;# 
  2025   00008F                     SPI2TCNTL       equ	143	;# 
  2026   000090                     SPI2TCNTH       equ	144	;# 
  2027   000091                     SPI2CON0        equ	145	;# 
  2028   000092                     SPI2CON1        equ	146	;# 
  2029   000093                     SPI2CON2        equ	147	;# 
  2030   000094                     SPI2STATUS      equ	148	;# 
  2031   000095                     SPI2TWIDTH      equ	149	;# 
  2032   000096                     SPI2BAUD        equ	150	;# 
  2033   000097                     SPI2INTF        equ	151	;# 
  2034   000098                     SPI2INTE        equ	152	;# 
  2035   000099                     SPI2CLK         equ	153	;# 
  2036   0000AC                     ACTCON          equ	172	;# 
  2037   0000AD                     OSCCON1         equ	173	;# 
  2038   0000AE                     OSCCON2         equ	174	;# 
  2039   0000AF                     OSCCON3         equ	175	;# 
  2040   0000B0                     OSCTUNE         equ	176	;# 
  2041   0000B1                     OSCFRQ          equ	177	;# 
  2042   0000B1                     OSCFREQ         equ	177	;# 
  2043   0000B2                     OSCSTAT         equ	178	;# 
  2044   0000B2                     OSCSTAT1        equ	178	;# 
  2045   0000B3                     OSCEN           equ	179	;# 
  2046   0000B4                     PRLOCK          equ	180	;# 
  2047   0000B5                     SCANPR          equ	181	;# 
  2048   0000B6                     DMA1PR          equ	182	;# 
  2049   0000B7                     DMA2PR          equ	183	;# 
  2050   0000B8                     DMA3PR          equ	184	;# 
  2051   0000B9                     DMA4PR          equ	185	;# 
  2052   0000BA                     DMA5PR          equ	186	;# 
  2053   0000BB                     DMA6PR          equ	187	;# 
  2054   0000BE                     MAINPR          equ	190	;# 
  2055   0000BF                     ISRPR           equ	191	;# 
  2056   0000D4                     CLCDATA         equ	212	;# 
  2057   0000D5                     CLCSELECT       equ	213	;# 
  2058   0000D6                     CLCnCON         equ	214	;# 
  2059   0000D7                     CLCnPOL         equ	215	;# 
  2060   0000D8                     CLCnSEL0        equ	216	;# 
  2061   0000D9                     CLCnSEL1        equ	217	;# 
  2062   0000DA                     CLCnSEL2        equ	218	;# 
  2063   0000DB                     CLCnSEL3        equ	219	;# 
  2064   0000DC                     CLCnGLS0        equ	220	;# 
  2065   0000DD                     CLCnGLS1        equ	221	;# 
  2066   0000DE                     CLCnGLS2        equ	222	;# 
  2067   0000DF                     CLCnGLS3        equ	223	;# 
  2068   0000E8                     DMASELECT       equ	232	;# 
  2069   0000E9                     DMAnBUF         equ	233	;# 
  2070   0000EA                     DMAnDCNT        equ	234	;# 
  2071   0000EA                     DMAnDCNTL       equ	234	;# 
  2072   0000EB                     DMAnDCNTH       equ	235	;# 
  2073   0000EC                     DMAnDPTR        equ	236	;# 
  2074   0000EC                     DMAnDPTRL       equ	236	;# 
  2075   0000ED                     DMAnDPTRH       equ	237	;# 
  2076   0000EE                     DMAnDSZ         equ	238	;# 
  2077   0000EE                     DMAnDSZL        equ	238	;# 
  2078   0000EF                     DMAnDSZH        equ	239	;# 
  2079   0000F0                     DMAnDSA         equ	240	;# 
  2080   0000F0                     DMAnDSAL        equ	240	;# 
  2081   0000F1                     DMAnDSAH        equ	241	;# 
  2082   0000F2                     DMAnSCNT        equ	242	;# 
  2083   0000F2                     DMAnSCNTL       equ	242	;# 
  2084   0000F3                     DMAnSCNTH       equ	243	;# 
  2085   0000F4                     DMAnSPTR        equ	244	;# 
  2086   0000F4                     DMAnSPTRL       equ	244	;# 
  2087   0000F5                     DMAnSPTRH       equ	245	;# 
  2088   0000F6                     DMAnSPTRU       equ	246	;# 
  2089   0000F7                     DMAnSSZ         equ	247	;# 
  2090   0000F7                     DMAnSSZL        equ	247	;# 
  2091   0000F8                     DMAnSSZH        equ	248	;# 
  2092   0000F9                     DMAnSSA         equ	249	;# 
  2093   0000F9                     DMAnSSAL        equ	249	;# 
  2094   0000FA                     DMAnSSAH        equ	250	;# 
  2095   0000FB                     DMAnSSAU        equ	251	;# 
  2096   0000FC                     DMAnCON0        equ	252	;# 
  2097   0000FD                     DMAnCON1        equ	253	;# 
  2098   0000FE                     DMAnAIRQ        equ	254	;# 
  2099   0000FF                     DMAnSIRQ        equ	255	;# 
  2100   000200                     PPSLOCK         equ	512	;# 
  2101   000201                     RA0PPS          equ	513	;# 
  2102   000202                     RA1PPS          equ	514	;# 
  2103   000203                     RA2PPS          equ	515	;# 
  2104   000204                     RA3PPS          equ	516	;# 
  2105   000205                     RA4PPS          equ	517	;# 
  2106   000206                     RA5PPS          equ	518	;# 
  2107   000207                     RA6PPS          equ	519	;# 
  2108   000208                     RA7PPS          equ	520	;# 
  2109   000209                     RB0PPS          equ	521	;# 
  2110   00020A                     RB1PPS          equ	522	;# 
  2111   00020B                     RB2PPS          equ	523	;# 
  2112   00020C                     RB3PPS          equ	524	;# 
  2113   00020D                     RB4PPS          equ	525	;# 
  2114   00020E                     RB5PPS          equ	526	;# 
  2115   00020F                     RB6PPS          equ	527	;# 
  2116   000210                     RB7PPS          equ	528	;# 
  2117   000211                     RC0PPS          equ	529	;# 
  2118   000212                     RC1PPS          equ	530	;# 
  2119   000213                     RC2PPS          equ	531	;# 
  2120   000214                     RC3PPS          equ	532	;# 
  2121   000215                     RC4PPS          equ	533	;# 
  2122   000216                     RC5PPS          equ	534	;# 
  2123   000217                     RC6PPS          equ	535	;# 
  2124   000218                     RC7PPS          equ	536	;# 
  2125   000219                     RD0PPS          equ	537	;# 
  2126   00021A                     RD1PPS          equ	538	;# 
  2127   00021B                     RD2PPS          equ	539	;# 
  2128   00021C                     RD3PPS          equ	540	;# 
  2129   00021D                     RD4PPS          equ	541	;# 
  2130   00021E                     RD5PPS          equ	542	;# 
  2131   00021F                     RD6PPS          equ	543	;# 
  2132   000220                     RD7PPS          equ	544	;# 
  2133   000221                     RE0PPS          equ	545	;# 
  2134   000222                     RE1PPS          equ	546	;# 
  2135   000223                     RE2PPS          equ	547	;# 
  2136   00023E                     INT0PPS         equ	574	;# 
  2137   00023F                     INT1PPS         equ	575	;# 
  2138   000240                     INT2PPS         equ	576	;# 
  2139   000241                     T0CKIPPS        equ	577	;# 
  2140   000242                     T1CKIPPS        equ	578	;# 
  2141   000243                     T1GPPS          equ	579	;# 
  2142   000244                     T3CKIPPS        equ	580	;# 
  2143   000245                     T3GPPS          equ	581	;# 
  2144   000246                     T5CKIPPS        equ	582	;# 
  2145   000247                     T5GPPS          equ	583	;# 
  2146   000248                     T2INPPS         equ	584	;# 
  2147   000249                     T4INPPS         equ	585	;# 
  2148   00024A                     T6INPPS         equ	586	;# 
  2149   00024F                     CCP1PPS         equ	591	;# 
  2150   000250                     CCP2PPS         equ	592	;# 
  2151   000251                     CCP3PPS         equ	593	;# 
  2152   000253                     PWM1ERSPPS      equ	595	;# 
  2153   000254                     PWM2ERSPPS      equ	596	;# 
  2154   000255                     PWM3ERSPPS      equ	597	;# 
  2155   000257                     PWMIN0PPS       equ	599	;# 
  2156   000258                     PWMIN1PPS       equ	600	;# 
  2157   000259                     SMT1WINPPS      equ	601	;# 
  2158   00025A                     SMT1SIGPPS      equ	602	;# 
  2159   00025B                     CWG1PPS         equ	603	;# 
  2160   00025B                     CWG1INPPS       equ	603	;# 
  2161   00025C                     CWG2PPS         equ	604	;# 
  2162   00025C                     CWG2INPPS       equ	604	;# 
  2163   00025D                     CWG3PPS         equ	605	;# 
  2164   00025D                     CWG3INPPS       equ	605	;# 
  2165   00025E                     MD1CARLPPS      equ	606	;# 
  2166   00025E                     MDCARLPPS       equ	606	;# 
  2167   00025F                     MD1CARHPPS      equ	607	;# 
  2168   00025F                     MDCARHPPS       equ	607	;# 
  2169   000260                     MD1SRCPPS       equ	608	;# 
  2170   000260                     MDSRCPPS        equ	608	;# 
  2171   000261                     CLCIN0PPS       equ	609	;# 
  2172   000262                     CLCIN1PPS       equ	610	;# 
  2173   000263                     CLCIN2PPS       equ	611	;# 
  2174   000264                     CLCIN3PPS       equ	612	;# 
  2175   000265                     CLCIN4PPS       equ	613	;# 
  2176   000266                     CLCIN5PPS       equ	614	;# 
  2177   000267                     CLCIN6PPS       equ	615	;# 
  2178   000268                     CLCIN7PPS       equ	616	;# 
  2179   000269                     ADACTPPS        equ	617	;# 
  2180   00026A                     SPI1SCKPPS      equ	618	;# 
  2181   00026B                     SPI1SDIPPS      equ	619	;# 
  2182   00026C                     SPI1SSPPS       equ	620	;# 
  2183   00026D                     SPI2SCKPPS      equ	621	;# 
  2184   00026E                     SPI2SDIPPS      equ	622	;# 
  2185   00026F                     SPI2SSPPS       equ	623	;# 
  2186   000270                     I2C1SDAPPS      equ	624	;# 
  2187   000271                     I2C1SCLPPS      equ	625	;# 
  2188   000272                     U1RXPPS         equ	626	;# 
  2189   000273                     U1CTSPPS        equ	627	;# 
  2190   000274                     U2RXPPS         equ	628	;# 
  2191   000275                     U2CTSPPS        equ	629	;# 
  2192   000276                     U3RXPPS         equ	630	;# 
  2193   000277                     U3CTSPPS        equ	631	;# 
  2194   000278                     U4RXPPS         equ	632	;# 
  2195   000279                     U4CTSPPS        equ	633	;# 
  2196   00027A                     U5RXPPS         equ	634	;# 
  2197   00027B                     U5CTSPPS        equ	635	;# 
  2198   000286                     RC4I2C          equ	646	;# 
  2199   000287                     RC3I2C          equ	647	;# 
  2200   000288                     RB2I2C          equ	648	;# 
  2201   000289                     RB1I2C          equ	649	;# 
  2202   00028B                     I2C1RXB         equ	651	;# 
  2203   00028C                     I2C1TXB         equ	652	;# 
  2204   00028D                     I2C1CNT         equ	653	;# 
  2205   00028E                     I2C1ADB0        equ	654	;# 
  2206   00028F                     I2C1ADB1        equ	655	;# 
  2207   000290                     I2C1ADR0        equ	656	;# 
  2208   000291                     I2C1ADR1        equ	657	;# 
  2209   000292                     I2C1ADR2        equ	658	;# 
  2210   000293                     I2C1ADR3        equ	659	;# 
  2211   000294                     I2C1CON0        equ	660	;# 
  2212   000295                     I2C1CON1        equ	661	;# 
  2213   000296                     I2C1CON2        equ	662	;# 
  2214   000297                     I2C1ERR         equ	663	;# 
  2215   000298                     I2C1STAT0       equ	664	;# 
  2216   000299                     I2C1STAT1       equ	665	;# 
  2217   00029A                     I2C1PIR         equ	666	;# 
  2218   00029B                     I2C1PIE         equ	667	;# 
  2219   00029C                     I2C1CLK         equ	668	;# 
  2220   00029D                     I2C1BTO         equ	669	;# 
  2221   0002A1                     U1RXB           equ	673	;# 
  2222   0002A1                     U1RXBL          equ	673	;# 
  2223   0002A2                     U1RXCHK         equ	674	;# 
  2224   0002A3                     U1TXB           equ	675	;# 
  2225   0002A3                     U1TXBL          equ	675	;# 
  2226   0002A4                     U1TXCHK         equ	676	;# 
  2227   0002A5                     U1P1            equ	677	;# 
  2228   0002A5                     U1P1L           equ	677	;# 
  2229   0002A6                     U1P1H           equ	678	;# 
  2230   0002A7                     U1P2            equ	679	;# 
  2231   0002A7                     U1P2L           equ	679	;# 
  2232   0002A8                     U1P2H           equ	680	;# 
  2233   0002A9                     U1P3            equ	681	;# 
  2234   0002A9                     U1P3L           equ	681	;# 
  2235   0002AA                     U1P3H           equ	682	;# 
  2236   0002AB                     U1CON0          equ	683	;# 
  2237   0002AC                     U1CON1          equ	684	;# 
  2238   0002AD                     U1CON2          equ	685	;# 
  2239   0002AE                     U1BRG           equ	686	;# 
  2240   0002AE                     U1BRGL          equ	686	;# 
  2241   0002AF                     U1BRGH          equ	687	;# 
  2242   0002B0                     U1FIFO          equ	688	;# 
  2243   0002B1                     U1UIR           equ	689	;# 
  2244   0002B2                     U1ERRIR         equ	690	;# 
  2245   0002B3                     U1ERRIE         equ	691	;# 
  2246   0002B4                     U2RXB           equ	692	;# 
  2247   0002B4                     U2RXBL          equ	692	;# 
  2248   0002B6                     U2TXB           equ	694	;# 
  2249   0002B6                     U2TXBL          equ	694	;# 
  2250   0002B8                     U2P1            equ	696	;# 
  2251   0002B8                     U2P1L           equ	696	;# 
  2252   0002BA                     U2P2            equ	698	;# 
  2253   0002BA                     U2P2L           equ	698	;# 
  2254   0002BC                     U2P3            equ	700	;# 
  2255   0002BC                     U2P3L           equ	700	;# 
  2256   0002BE                     U2CON0          equ	702	;# 
  2257   0002BF                     U2CON1          equ	703	;# 
  2258   0002C0                     U2CON2          equ	704	;# 
  2259   0002C1                     U2BRG           equ	705	;# 
  2260   0002C1                     U2BRGL          equ	705	;# 
  2261   0002C2                     U2BRGH          equ	706	;# 
  2262   0002C3                     U2FIFO          equ	707	;# 
  2263   0002C4                     U2UIR           equ	708	;# 
  2264   0002C5                     U2ERRIR         equ	709	;# 
  2265   0002C6                     U2ERRIE         equ	710	;# 
  2266   0002C7                     U3RXB           equ	711	;# 
  2267   0002C7                     U3RXBL          equ	711	;# 
  2268   0002C9                     U3TXB           equ	713	;# 
  2269   0002C9                     U3TXBL          equ	713	;# 
  2270   0002CB                     U3P1            equ	715	;# 
  2271   0002CB                     U3P1L           equ	715	;# 
  2272   0002CD                     U3P2            equ	717	;# 
  2273   0002CD                     U3P2L           equ	717	;# 
  2274   0002CF                     U3P3            equ	719	;# 
  2275   0002CF                     U3P3L           equ	719	;# 
  2276   0002D1                     U3CON0          equ	721	;# 
  2277   0002D2                     U3CON1          equ	722	;# 
  2278   0002D3                     U3CON2          equ	723	;# 
  2279   0002D4                     U3BRG           equ	724	;# 
  2280   0002D4                     U3BRGL          equ	724	;# 
  2281   0002D5                     U3BRGH          equ	725	;# 
  2282   0002D6                     U3FIFO          equ	726	;# 
  2283   0002D7                     U3UIR           equ	727	;# 
  2284   0002D8                     U3ERRIR         equ	728	;# 
  2285   0002D9                     U3ERRIE         equ	729	;# 
  2286   0002DA                     U4RXB           equ	730	;# 
  2287   0002DA                     U4RXBL          equ	730	;# 
  2288   0002DC                     U4TXB           equ	732	;# 
  2289   0002DC                     U4TXBL          equ	732	;# 
  2290   0002DE                     U4P1            equ	734	;# 
  2291   0002DE                     U4P1L           equ	734	;# 
  2292   0002E0                     U4P2            equ	736	;# 
  2293   0002E0                     U4P2L           equ	736	;# 
  2294   0002E2                     U4P3            equ	738	;# 
  2295   0002E2                     U4P3L           equ	738	;# 
  2296   0002E4                     U4CON0          equ	740	;# 
  2297   0002E5                     U4CON1          equ	741	;# 
  2298   0002E6                     U4CON2          equ	742	;# 
  2299   0002E7                     U4BRG           equ	743	;# 
  2300   0002E7                     U4BRGL          equ	743	;# 
  2301   0002E8                     U4BRGH          equ	744	;# 
  2302   0002E9                     U4FIFO          equ	745	;# 
  2303   0002EA                     U4UIR           equ	746	;# 
  2304   0002EB                     U4ERRIR         equ	747	;# 
  2305   0002EC                     U4ERRIE         equ	748	;# 
  2306   0002ED                     U5RXB           equ	749	;# 
  2307   0002ED                     U5RXBL          equ	749	;# 
  2308   0002EF                     U5TXB           equ	751	;# 
  2309   0002EF                     U5TXBL          equ	751	;# 
  2310   0002F1                     U5P1            equ	753	;# 
  2311   0002F1                     U5P1L           equ	753	;# 
  2312   0002F3                     U5P2            equ	755	;# 
  2313   0002F3                     U5P2L           equ	755	;# 
  2314   0002F5                     U5P3            equ	757	;# 
  2315   0002F5                     U5P3L           equ	757	;# 
  2316   0002F7                     U5CON0          equ	759	;# 
  2317   0002F8                     U5CON1          equ	760	;# 
  2318   0002F9                     U5CON2          equ	761	;# 
  2319   0002FA                     U5BRG           equ	762	;# 
  2320   0002FA                     U5BRGL          equ	762	;# 
  2321   0002FB                     U5BRGH          equ	763	;# 
  2322   0002FC                     U5FIFO          equ	764	;# 
  2323   0002FD                     U5UIR           equ	765	;# 
  2324   0002FE                     U5ERRIR         equ	766	;# 
  2325   0002FF                     U5ERRIE         equ	767	;# 
  2326   000300                     SMT1TMR         equ	768	;# 
  2327   000300                     SMT1TMRL        equ	768	;# 
  2328   000301                     SMT1TMRH        equ	769	;# 
  2329   000302                     SMT1TMRU        equ	770	;# 
  2330   000303                     SMT1CPR         equ	771	;# 
  2331   000303                     SMT1CPRL        equ	771	;# 
  2332   000304                     SMT1CPRH        equ	772	;# 
  2333   000305                     SMT1CPRU        equ	773	;# 
  2334   000306                     SMT1CPW         equ	774	;# 
  2335   000306                     SMT1CPWL        equ	774	;# 
  2336   000307                     SMT1CPWH        equ	775	;# 
  2337   000308                     SMT1CPWU        equ	776	;# 
  2338   000309                     SMT1PR          equ	777	;# 
  2339   000309                     SMT1PRL         equ	777	;# 
  2340   00030A                     SMT1PRH         equ	778	;# 
  2341   00030B                     SMT1PRU         equ	779	;# 
  2342   00030C                     SMT1CON0        equ	780	;# 
  2343   00030D                     SMT1CON1        equ	781	;# 
  2344   00030E                     SMT1STAT        equ	782	;# 
  2345   00030F                     SMT1CLK         equ	783	;# 
  2346   000310                     SMT1SIG         equ	784	;# 
  2347   000311                     SMT1WIN         equ	785	;# 
  2348   000318                     TMR0L           equ	792	;# 
  2349   000318                     TMR0            equ	792	;# 
  2350   000319                     TMR0H           equ	793	;# 
  2351   000319                     PR0             equ	793	;# 
  2352   00031A                     T0CON0          equ	794	;# 
  2353   00031B                     T0CON1          equ	795	;# 
  2354   00031C                     TMR1            equ	796	;# 
  2355   00031C                     TMR1L           equ	796	;# 
  2356   00031D                     TMR1H           equ	797	;# 
  2357   00031E                     T1CON           equ	798	;# 
  2358   00031E                     TMR1CON         equ	798	;# 
  2359   00031F                     T1GCON          equ	799	;# 
  2360   00031F                     TMR1GCON        equ	799	;# 
  2361   000320                     T1GATE          equ	800	;# 
  2362   000320                     TMR1GATE        equ	800	;# 
  2363   000321                     T1CLK           equ	801	;# 
  2364   000321                     TMR1CLK         equ	801	;# 
  2365   000321                     PR1             equ	801	;# 
  2366   000322                     T2TMR           equ	802	;# 
  2367   000322                     TMR2            equ	802	;# 
  2368   000323                     T2PR            equ	803	;# 
  2369   000323                     PR2             equ	803	;# 
  2370   000324                     T2CON           equ	804	;# 
  2371   000325                     T2HLT           equ	805	;# 
  2372   000326                     T2CLKCON        equ	806	;# 
  2373   000326                     T2CLK           equ	806	;# 
  2374   000327                     T2RST           equ	807	;# 
  2375   000328                     TMR3            equ	808	;# 
  2376   000328                     TMR3L           equ	808	;# 
  2377   000329                     TMR3H           equ	809	;# 
  2378   00032A                     T3CON           equ	810	;# 
  2379   00032A                     TMR3CON         equ	810	;# 
  2380   00032B                     T3GCON          equ	811	;# 
  2381   00032B                     TMR3GCON        equ	811	;# 
  2382   00032C                     T3GATE          equ	812	;# 
  2383   00032C                     TMR3GATE        equ	812	;# 
  2384   00032D                     T3CLK           equ	813	;# 
  2385   00032D                     TMR3CLK         equ	813	;# 
  2386   00032D                     PR3             equ	813	;# 
  2387   00032E                     T4TMR           equ	814	;# 
  2388   00032E                     TMR4            equ	814	;# 
  2389   00032F                     T4PR            equ	815	;# 
  2390   00032F                     PR4             equ	815	;# 
  2391   000330                     T4CON           equ	816	;# 
  2392   000331                     T4HLT           equ	817	;# 
  2393   000332                     T4CLKCON        equ	818	;# 
  2394   000332                     T4CLK           equ	818	;# 
  2395   000333                     T4RST           equ	819	;# 
  2396   000334                     TMR5            equ	820	;# 
  2397   000334                     TMR5L           equ	820	;# 
  2398   000335                     TMR5H           equ	821	;# 
  2399   000336                     T5CON           equ	822	;# 
  2400   000336                     TMR5CON         equ	822	;# 
  2401   000337                     T5GCON          equ	823	;# 
  2402   000337                     TMR5GCON        equ	823	;# 
  2403   000338                     T5GATE          equ	824	;# 
  2404   000338                     TMR5GATE        equ	824	;# 
  2405   000339                     T5CLK           equ	825	;# 
  2406   000339                     TMR5CLK         equ	825	;# 
  2407   000339                     PR5             equ	825	;# 
  2408   00033A                     T6TMR           equ	826	;# 
  2409   00033A                     TMR6            equ	826	;# 
  2410   00033B                     T6PR            equ	827	;# 
  2411   00033B                     PR6             equ	827	;# 
  2412   00033C                     T6CON           equ	828	;# 
  2413   00033D                     T6HLT           equ	829	;# 
  2414   00033E                     T6CLKCON        equ	830	;# 
  2415   00033E                     T6CLK           equ	830	;# 
  2416   00033F                     T6RST           equ	831	;# 
  2417   000340                     CCPR1           equ	832	;# 
  2418   000340                     CCPR1L          equ	832	;# 
  2419   000341                     CCPR1H          equ	833	;# 
  2420   000342                     CCP1CON         equ	834	;# 
  2421   000343                     CCP1CAP         equ	835	;# 
  2422   000344                     CCPR2           equ	836	;# 
  2423   000344                     CCPR2L          equ	836	;# 
  2424   000345                     CCPR2H          equ	837	;# 
  2425   000346                     CCP2CON         equ	838	;# 
  2426   000347                     CCP2CAP         equ	839	;# 
  2427   000348                     CCPR3           equ	840	;# 
  2428   000348                     CCPR3L          equ	840	;# 
  2429   000349                     CCPR3H          equ	841	;# 
  2430   00034A                     CCP3CON         equ	842	;# 
  2431   00034B                     CCP3CAP         equ	843	;# 
  2432   00034C                     CCPTMRS0        equ	844	;# 
  2433   00034F                     CRCDATA         equ	847	;# 
  2434   00034F                     CRCDATL         equ	847	;# 
  2435   000350                     CRCDATH         equ	848	;# 
  2436   000351                     CRCACC          equ	849	;# 
  2437   000351                     CRCACCL         equ	849	;# 
  2438   000352                     CRCACCH         equ	850	;# 
  2439   000353                     CRCSHFT         equ	851	;# 
  2440   000353                     CRCSHIFTL       equ	851	;# 
  2441   000354                     CRCSHIFTH       equ	852	;# 
  2442   000355                     CRCXOR          equ	853	;# 
  2443   000355                     CRCXORL         equ	853	;# 
  2444   000356                     CRCXORH         equ	854	;# 
  2445   000357                     CRCCON0         equ	855	;# 
  2446   000358                     CRCCON1         equ	856	;# 
  2447   00035A                     SCANLADR        equ	858	;# 
  2448   00035A                     SCANLADRL       equ	858	;# 
  2449   00035B                     SCANLADRH       equ	859	;# 
  2450   00035C                     SCANLADRU       equ	860	;# 
  2451   00035D                     SCANHADR        equ	861	;# 
  2452   00035D                     SCANHADRL       equ	861	;# 
  2453   00035E                     SCANHADRH       equ	862	;# 
  2454   00035F                     SCANHADRU       equ	863	;# 
  2455   000360                     SCANCON0        equ	864	;# 
  2456   000361                     SCANTRIG        equ	865	;# 
  2457   000362                     IPR0            equ	866	;# 
  2458   000363                     IPR1            equ	867	;# 
  2459   000364                     IPR2            equ	868	;# 
  2460   000365                     IPR3            equ	869	;# 
  2461   000366                     IPR4            equ	870	;# 
  2462   000367                     IPR5            equ	871	;# 
  2463   000368                     IPR6            equ	872	;# 
  2464   000369                     IPR7            equ	873	;# 
  2465   00036A                     IPR8            equ	874	;# 
  2466   00036B                     IPR9            equ	875	;# 
  2467   00036C                     IPR10           equ	876	;# 
  2468   00036D                     IPR11           equ	877	;# 
  2469   00036E                     IPR12           equ	878	;# 
  2470   00036F                     IPR13           equ	879	;# 
  2471   000370                     IPR14           equ	880	;# 
  2472   000371                     IPR15           equ	881	;# 
  2473   000373                     STATUS_CSHAD    equ	883	;# 
  2474   000374                     WREG_CSHAD      equ	884	;# 
  2475   000375                     BSR_CSHAD       equ	885	;# 
  2476   000376                     SHADCON         equ	886	;# 
  2477   000377                     STATUS_SHAD     equ	887	;# 
  2478   000378                     WREG_SHAD       equ	888	;# 
  2479   000379                     BSR_SHAD        equ	889	;# 
  2480   00037A                     PCLATH_SHAD     equ	890	;# 
  2481   00037B                     PCLATU_SHAD     equ	891	;# 
  2482   00037C                     FSR0SH          equ	892	;# 
  2483   00037C                     FSR0L_SHAD      equ	892	;# 
  2484   00037D                     FSR0H_SHAD      equ	893	;# 
  2485   00037E                     FSR1SH          equ	894	;# 
  2486   00037E                     FSR1L_SHAD      equ	894	;# 
  2487   00037F                     FSR1H_SHAD      equ	895	;# 
  2488   000380                     FSR2SH          equ	896	;# 
  2489   000380                     FSR2L_SHAD      equ	896	;# 
  2490   000381                     FSR2H_SHAD      equ	897	;# 
  2491   000382                     PRODSH          equ	898	;# 
  2492   000382                     PRODL_SHAD      equ	898	;# 
  2493   000383                     PRODH_SHAD      equ	899	;# 
  2494   0003BC                     CWG1CLK         equ	956	;# 
  2495   0003BC                     CWG1CLKCON      equ	956	;# 
  2496   0003BD                     CWG1ISM         equ	957	;# 
  2497   0003BD                     CWG1DAT         equ	957	;# 
  2498   0003BE                     CWG1DBR         equ	958	;# 
  2499   0003BF                     CWG1DBF         equ	959	;# 
  2500   0003C0                     CWG1CON0        equ	960	;# 
  2501   0003C1                     CWG1CON1        equ	961	;# 
  2502   0003C2                     CWG1AS0         equ	962	;# 
  2503   0003C3                     CWG1AS1         equ	963	;# 
  2504   0003C4                     CWG1STR         equ	964	;# 
  2505   0003C5                     CWG2CLK         equ	965	;# 
  2506   0003C5                     CWG2CLKCON      equ	965	;# 
  2507   0003C6                     CWG2ISM         equ	966	;# 
  2508   0003C6                     CWG2DAT         equ	966	;# 
  2509   0003C7                     CWG2DBR         equ	967	;# 
  2510   0003C8                     CWG2DBF         equ	968	;# 
  2511   0003C9                     CWG2CON0        equ	969	;# 
  2512   0003CA                     CWG2CON1        equ	970	;# 
  2513   0003CB                     CWG2AS0         equ	971	;# 
  2514   0003CC                     CWG2AS1         equ	972	;# 
  2515   0003CD                     CWG2STR         equ	973	;# 
  2516   0003CE                     CWG3CLK         equ	974	;# 
  2517   0003CE                     CWG3CLKCON      equ	974	;# 
  2518   0003CF                     CWG3ISM         equ	975	;# 
  2519   0003CF                     CWG3DAT         equ	975	;# 
  2520   0003D0                     CWG3DBR         equ	976	;# 
  2521   0003D1                     CWG3DBF         equ	977	;# 
  2522   0003D2                     CWG3CON0        equ	978	;# 
  2523   0003D3                     CWG3CON1        equ	979	;# 
  2524   0003D4                     CWG3AS0         equ	980	;# 
  2525   0003D5                     CWG3AS1         equ	981	;# 
  2526   0003D6                     CWG3STR         equ	982	;# 
  2527   0003D7                     FVRCON          equ	983	;# 
  2528   0003D8                     ADCPCON         equ	984	;# 
  2529   0003D8                     ADCP            equ	984	;# 
  2530   0003D9                     ADLTH           equ	985	;# 
  2531   0003D9                     ADLTHL          equ	985	;# 
  2532   0003DA                     ADLTHH          equ	986	;# 
  2533   0003DB                     ADUTH           equ	987	;# 
  2534   0003DB                     ADUTHL          equ	987	;# 
  2535   0003DC                     ADUTHH          equ	988	;# 
  2536   0003DD                     ADERR           equ	989	;# 
  2537   0003DD                     ADERRL          equ	989	;# 
  2538   0003DE                     ADERRH          equ	990	;# 
  2539   0003DF                     ADSTPT          equ	991	;# 
  2540   0003DF                     ADSTPTL         equ	991	;# 
  2541   0003E0                     ADSTPTH         equ	992	;# 
  2542   0003E1                     ADFLTR          equ	993	;# 
  2543   0003E1                     ADFLTRL         equ	993	;# 
  2544   0003E2                     ADFLTRH         equ	994	;# 
  2545   0003E3                     ADACC           equ	995	;# 
  2546   0003E3                     ADACCL          equ	995	;# 
  2547   0003E4                     ADACCH          equ	996	;# 
  2548   0003E5                     ADACCU          equ	997	;# 
  2549   0003E6                     ADCNT           equ	998	;# 
  2550   0003E7                     ADRPT           equ	999	;# 
  2551   0003E8                     ADPREV          equ	1000	;# 
  2552   0003E8                     ADPREVL         equ	1000	;# 
  2553   0003E9                     ADPREVH         equ	1001	;# 
  2554   0003EA                     ADRES           equ	1002	;# 
  2555   0003EA                     ADRESL          equ	1002	;# 
  2556   0003EB                     ADRESH          equ	1003	;# 
  2557   0003EC                     ADPCH           equ	1004	;# 
  2558   0003EE                     ADACQ           equ	1006	;# 
  2559   0003EE                     ADACQL          equ	1006	;# 
  2560   0003EF                     ADACQH          equ	1007	;# 
  2561   0003F0                     ADCAP           equ	1008	;# 
  2562   0003F1                     ADPRE           equ	1009	;# 
  2563   0003F1                     ADPREL          equ	1009	;# 
  2564   0003F2                     ADPREH          equ	1010	;# 
  2565   0003F3                     ADCON0          equ	1011	;# 
  2566   0003F4                     ADCON1          equ	1012	;# 
  2567   0003F5                     ADCON2          equ	1013	;# 
  2568   0003F6                     ADCON3          equ	1014	;# 
  2569   0003F7                     ADSTAT          equ	1015	;# 
  2570   0003F8                     ADREF           equ	1016	;# 
  2571   0003F9                     ADACT           equ	1017	;# 
  2572   0003FA                     ADCLK           equ	1018	;# 
  2573   000400                     ANSELA          equ	1024	;# 
  2574   000401                     WPUA            equ	1025	;# 
  2575   000402                     ODCONA          equ	1026	;# 
  2576   000403                     SLRCONA         equ	1027	;# 
  2577   000404                     INLVLA          equ	1028	;# 
  2578   000405                     IOCAP           equ	1029	;# 
  2579   000406                     IOCAN           equ	1030	;# 
  2580   000407                     IOCAF           equ	1031	;# 
  2581   000408                     ANSELB          equ	1032	;# 
  2582   000409                     WPUB            equ	1033	;# 
  2583   00040A                     ODCONB          equ	1034	;# 
  2584   00040B                     SLRCONB         equ	1035	;# 
  2585   00040C                     INLVLB          equ	1036	;# 
  2586   00040D                     IOCBP           equ	1037	;# 
  2587   00040E                     IOCBN           equ	1038	;# 
  2588   00040F                     IOCBF           equ	1039	;# 
  2589   000410                     ANSELC          equ	1040	;# 
  2590   000411                     WPUC            equ	1041	;# 
  2591   000412                     ODCONC          equ	1042	;# 
  2592   000413                     SLRCONC         equ	1043	;# 
  2593   000414                     INLVLC          equ	1044	;# 
  2594   000415                     IOCCP           equ	1045	;# 
  2595   000416                     IOCCN           equ	1046	;# 
  2596   000417                     IOCCF           equ	1047	;# 
  2597   000418                     ANSELD          equ	1048	;# 
  2598   000419                     WPUD            equ	1049	;# 
  2599   00041A                     ODCOND          equ	1050	;# 
  2600   00041B                     SLRCOND         equ	1051	;# 
  2601   00041C                     INLVLD          equ	1052	;# 
  2602   000420                     ANSELE          equ	1056	;# 
  2603   000421                     WPUE            equ	1057	;# 
  2604   000422                     ODCONE          equ	1058	;# 
  2605   000423                     SLRCONE         equ	1059	;# 
  2606   000424                     INLVLE          equ	1060	;# 
  2607   000425                     IOCEP           equ	1061	;# 
  2608   000426                     IOCEN           equ	1062	;# 
  2609   000427                     IOCEF           equ	1063	;# 
  2610   000440                     NCO1ACC         equ	1088	;# 
  2611   000440                     NCO1ACCL        equ	1088	;# 
  2612   000441                     NCO1ACCH        equ	1089	;# 
  2613   000442                     NCO1ACCU        equ	1090	;# 
  2614   000443                     NCO1INC         equ	1091	;# 
  2615   000443                     NCO1INCL        equ	1091	;# 
  2616   000444                     NCO1INCH        equ	1092	;# 
  2617   000445                     NCO1INCU        equ	1093	;# 
  2618   000446                     NCO1CON         equ	1094	;# 
  2619   000447                     NCO1CLK         equ	1095	;# 
  2620   000448                     NCO2ACC         equ	1096	;# 
  2621   000448                     NCO2ACCL        equ	1096	;# 
  2622   000449                     NCO2ACCH        equ	1097	;# 
  2623   00044A                     NCO2ACCU        equ	1098	;# 
  2624   00044B                     NCO2INC         equ	1099	;# 
  2625   00044B                     NCO2INCL        equ	1099	;# 
  2626   00044C                     NCO2INCH        equ	1100	;# 
  2627   00044D                     NCO2INCU        equ	1101	;# 
  2628   00044E                     NCO2CON         equ	1102	;# 
  2629   00044F                     NCO2CLK         equ	1103	;# 
  2630   000450                     NCO3ACC         equ	1104	;# 
  2631   000450                     NCO3ACCL        equ	1104	;# 
  2632   000451                     NCO3ACCH        equ	1105	;# 
  2633   000452                     NCO3ACCU        equ	1106	;# 
  2634   000453                     NCO3INC         equ	1107	;# 
  2635   000453                     NCO3INCL        equ	1107	;# 
  2636   000454                     NCO3INCH        equ	1108	;# 
  2637   000455                     NCO3INCU        equ	1109	;# 
  2638   000456                     NCO3CON         equ	1110	;# 
  2639   000457                     NCO3CLK         equ	1111	;# 
  2640   000459                     IVTLOCK         equ	1113	;# 
  2641   00045A                     IVTAD           equ	1114	;# 
  2642   00045A                     IVTADL          equ	1114	;# 
  2643   00045B                     IVTADH          equ	1115	;# 
  2644   00045C                     IVTADU          equ	1116	;# 
  2645   00045D                     IVTBASE         equ	1117	;# 
  2646   00045D                     IVTBASEL        equ	1117	;# 
  2647   00045E                     IVTBASEH        equ	1118	;# 
  2648   00045F                     IVTBASEU        equ	1119	;# 
  2649   000460                     PWM1ERS         equ	1120	;# 
  2650   000461                     PWM1CLK         equ	1121	;# 
  2651   000462                     PWM1LDS         equ	1122	;# 
  2652   000463                     PWM1PR          equ	1123	;# 
  2653   000463                     PWM1PRL         equ	1123	;# 
  2654   000464                     PWM1PRH         equ	1124	;# 
  2655   000465                     PWM1CPRE        equ	1125	;# 
  2656   000466                     PWM1PIPOS       equ	1126	;# 
  2657   000467                     PWM1GIR         equ	1127	;# 
  2658   000468                     PWM1GIE         equ	1128	;# 
  2659   000469                     PWM1CON         equ	1129	;# 
  2660   00046A                     PWM1S1CFG       equ	1130	;# 
  2661   00046B                     PWM1S1P1        equ	1131	;# 
  2662   00046B                     PWM1S1P1L       equ	1131	;# 
  2663   00046C                     PWM1S1P1H       equ	1132	;# 
  2664   00046D                     PWM1S1P2        equ	1133	;# 
  2665   00046D                     PWM1S1P2L       equ	1133	;# 
  2666   00046E                     PWM1S1P2H       equ	1134	;# 
  2667   00046F                     PWM2ERS         equ	1135	;# 
  2668   000470                     PWM2CLK         equ	1136	;# 
  2669   000471                     PWM2LDS         equ	1137	;# 
  2670   000472                     PWM2PR          equ	1138	;# 
  2671   000472                     PWM2PRL         equ	1138	;# 
  2672   000473                     PWM2PRH         equ	1139	;# 
  2673   000474                     PWM2CPRE        equ	1140	;# 
  2674   000475                     PWM2PIPOS       equ	1141	;# 
  2675   000476                     PWM2GIR         equ	1142	;# 
  2676   000477                     PWM2GIE         equ	1143	;# 
  2677   000478                     PWM2CON         equ	1144	;# 
  2678   000479                     PWM2S1CFG       equ	1145	;# 
  2679   00047A                     PWM2S1P1        equ	1146	;# 
  2680   00047A                     PWM2S1P1L       equ	1146	;# 
  2681   00047B                     PWM2S1P1H       equ	1147	;# 
  2682   00047C                     PWM2S1P2        equ	1148	;# 
  2683   00047C                     PWM2S1P2L       equ	1148	;# 
  2684   00047D                     PWM2S1P2H       equ	1149	;# 
  2685   00047E                     PWM3ERS         equ	1150	;# 
  2686   00047F                     PWM3CLK         equ	1151	;# 
  2687   000480                     PWM3LDS         equ	1152	;# 
  2688   000481                     PWM3PR          equ	1153	;# 
  2689   000481                     PWM3PRL         equ	1153	;# 
  2690   000482                     PWM3PRH         equ	1154	;# 
  2691   000483                     PWM3CPRE        equ	1155	;# 
  2692   000484                     PWM3PIPOS       equ	1156	;# 
  2693   000485                     PWM3GIR         equ	1157	;# 
  2694   000486                     PWM3GIE         equ	1158	;# 
  2695   000487                     PWM3CON         equ	1159	;# 
  2696   000488                     PWM3S1CFG       equ	1160	;# 
  2697   000489                     PWM3S1P1        equ	1161	;# 
  2698   000489                     PWM3S1P1L       equ	1161	;# 
  2699   00048A                     PWM3S1P1H       equ	1162	;# 
  2700   00048B                     PWM3S1P2        equ	1163	;# 
  2701   00048B                     PWM3S1P2L       equ	1163	;# 
  2702   00048C                     PWM3S1P2H       equ	1164	;# 
  2703   00049C                     PWMLOAD         equ	1180	;# 
  2704   00049D                     PWMEN           equ	1181	;# 
  2705   00049E                     PIE0            equ	1182	;# 
  2706   00049F                     PIE1            equ	1183	;# 
  2707   0004A0                     PIE2            equ	1184	;# 
  2708   0004A1                     PIE3            equ	1185	;# 
  2709   0004A2                     PIE4            equ	1186	;# 
  2710   0004A3                     PIE5            equ	1187	;# 
  2711   0004A4                     PIE6            equ	1188	;# 
  2712   0004A5                     PIE7            equ	1189	;# 
  2713   0004A6                     PIE8            equ	1190	;# 
  2714   0004A7                     PIE9            equ	1191	;# 
  2715   0004A8                     PIE10           equ	1192	;# 
  2716   0004A9                     PIE11           equ	1193	;# 
  2717   0004AA                     PIE12           equ	1194	;# 
  2718   0004AB                     PIE13           equ	1195	;# 
  2719   0004AC                     PIE14           equ	1196	;# 
  2720   0004AD                     PIE15           equ	1197	;# 
  2721   0004AE                     PIR0            equ	1198	;# 
  2722   0004AF                     PIR1            equ	1199	;# 
  2723   0004B0                     PIR2            equ	1200	;# 
  2724   0004B1                     PIR3            equ	1201	;# 
  2725   0004B2                     PIR4            equ	1202	;# 
  2726   0004B3                     PIR5            equ	1203	;# 
  2727   0004B4                     PIR6            equ	1204	;# 
  2728   0004B5                     PIR7            equ	1205	;# 
  2729   0004B6                     PIR8            equ	1206	;# 
  2730   0004B7                     PIR9            equ	1207	;# 
  2731   0004B8                     PIR10           equ	1208	;# 
  2732   0004B9                     PIR11           equ	1209	;# 
  2733   0004BA                     PIR12           equ	1210	;# 
  2734   0004BB                     PIR13           equ	1211	;# 
  2735   0004BC                     PIR14           equ	1212	;# 
  2736   0004BD                     PIR15           equ	1213	;# 
  2737   0004BE                     LATA            equ	1214	;# 
  2738   0004BF                     LATB            equ	1215	;# 
  2739   0004C0                     LATC            equ	1216	;# 
  2740   0004C1                     LATD            equ	1217	;# 
  2741   0004C2                     LATE            equ	1218	;# 
  2742   0004C6                     TRISA           equ	1222	;# 
  2743   0004C7                     TRISB           equ	1223	;# 
  2744   0004C8                     TRISC           equ	1224	;# 
  2745   0004C9                     TRISD           equ	1225	;# 
  2746   0004CA                     TRISE           equ	1226	;# 
  2747   0004CE                     PORTA           equ	1230	;# 
  2748   0004CF                     PORTB           equ	1231	;# 
  2749   0004D0                     PORTC           equ	1232	;# 
  2750   0004D1                     PORTD           equ	1233	;# 
  2751   0004D2                     PORTE           equ	1234	;# 
  2752   0004D6                     INTCON0         equ	1238	;# 
  2753   0004D7                     INTCON1         equ	1239	;# 
  2754   0004D8                     STATUS          equ	1240	;# 
  2755   0004D9                     FSR2            equ	1241	;# 
  2756   0004D9                     FSR2L           equ	1241	;# 
  2757   0004DA                     FSR2H           equ	1242	;# 
  2758   0004DB                     PLUSW2          equ	1243	;# 
  2759   0004DC                     PREINC2         equ	1244	;# 
  2760   0004DD                     POSTDEC2        equ	1245	;# 
  2761   0004DE                     POSTINC2        equ	1246	;# 
  2762   0004DF                     INDF2           equ	1247	;# 
  2763   0004E0                     BSR             equ	1248	;# 
  2764   0004E1                     FSR1            equ	1249	;# 
  2765   0004E1                     FSR1L           equ	1249	;# 
  2766   0004E2                     FSR1H           equ	1250	;# 
  2767   0004E3                     PLUSW1          equ	1251	;# 
  2768   0004E4                     PREINC1         equ	1252	;# 
  2769   0004E5                     POSTDEC1        equ	1253	;# 
  2770   0004E6                     POSTINC1        equ	1254	;# 
  2771   0004E7                     INDF1           equ	1255	;# 
  2772   0004E8                     WREG            equ	1256	;# 
  2773   0004E9                     FSR0            equ	1257	;# 
  2774   0004E9                     FSR0L           equ	1257	;# 
  2775   0004EA                     FSR0H           equ	1258	;# 
  2776   0004EB                     PLUSW0          equ	1259	;# 
  2777   0004EC                     PREINC0         equ	1260	;# 
  2778   0004ED                     POSTDEC0        equ	1261	;# 
  2779   0004EE                     POSTINC0        equ	1262	;# 
  2780   0004EF                     INDF0           equ	1263	;# 
  2781   0004F0                     PCON0           equ	1264	;# 
  2782   0004F1                     PCON1           equ	1265	;# 
  2783   0004F2                     CPUDOZE         equ	1266	;# 
  2784   0004F3                     PROD            equ	1267	;# 
  2785   0004F3                     PRODL           equ	1267	;# 
  2786   0004F4                     PRODH           equ	1268	;# 
  2787   0004F5                     TABLAT          equ	1269	;# 
  2788   0004F6                     TBLPTR          equ	1270	;# 
  2789   0004F6                     TBLPTRL         equ	1270	;# 
  2790   0004F7                     TBLPTRH         equ	1271	;# 
  2791   0004F8                     TBLPTRU         equ	1272	;# 
  2792   0004F9                     PCLAT           equ	1273	;# 
  2793   0004F9                     PCL             equ	1273	;# 
  2794   0004FA                     PCLATH          equ	1274	;# 
  2795   0004FB                     PCLATU          equ	1275	;# 
  2796   0004FC                     STKPTR          equ	1276	;# 
  2797   0004FD                     TOS             equ	1277	;# 
  2798   0004FD                     TOSL            equ	1277	;# 
  2799   0004FE                     TOSH            equ	1278	;# 
  2800   0004FF                     TOSU            equ	1279	;# 
  2801   000039                     CLKRCON         equ	57	;# 
  2802   00003A                     CLKRCLK         equ	58	;# 
  2803   000040                     NVMCON0         equ	64	;# 
  2804   000041                     NVMCON1         equ	65	;# 
  2805   000042                     NVMLOCK         equ	66	;# 
  2806   000043                     NVMADR          equ	67	;# 
  2807   000043                     NVMADRL         equ	67	;# 
  2808   000044                     NVMADRH         equ	68	;# 
  2809   000045                     NVMADRU         equ	69	;# 
  2810   000046                     NVMDAT          equ	70	;# 
  2811   000046                     NVMDATL         equ	70	;# 
  2812   000047                     NVMDATH         equ	71	;# 
  2813   000048                     VREGCON         equ	72	;# 
  2814   000049                     BORCON          equ	73	;# 
  2815   00004A                     HLVDCON0        equ	74	;# 
  2816   00004B                     HLVDCON1        equ	75	;# 
  2817   00004C                     ZCDCON          equ	76	;# 
  2818   000060                     PMD0            equ	96	;# 
  2819   000061                     PMD1            equ	97	;# 
  2820   000063                     PMD3            equ	99	;# 
  2821   000064                     PMD4            equ	100	;# 
  2822   000065                     PMD5            equ	101	;# 
  2823   000066                     PMD6            equ	102	;# 
  2824   000067                     PMD7            equ	103	;# 
  2825   000068                     PMD8            equ	104	;# 
  2826   00006A                     MD1CON0         equ	106	;# 
  2827   00006B                     MD1CON1         equ	107	;# 
  2828   00006C                     MD1SRC          equ	108	;# 
  2829   00006D                     MD1CARL         equ	109	;# 
  2830   00006E                     MD1CARH         equ	110	;# 
  2831   00006F                     CMOUT           equ	111	;# 
  2832   000070                     CM1CON0         equ	112	;# 
  2833   000071                     CM1CON1         equ	113	;# 
  2834   000072                     CM1NCH          equ	114	;# 
  2835   000073                     CM1PCH          equ	115	;# 
  2836   000074                     CM2CON0         equ	116	;# 
  2837   000075                     CM2CON1         equ	117	;# 
  2838   000076                     CM2NCH          equ	118	;# 
  2839   000077                     CM2PCH          equ	119	;# 
  2840   000078                     WDTCON0         equ	120	;# 
  2841   000079                     WDTCON1         equ	121	;# 
  2842   00007A                     WDTPS           equ	122	;# 
  2843   00007A                     WDTPSL          equ	122	;# 
  2844   00007B                     WDTPSH          equ	123	;# 
  2845   00007C                     WDTTMR          equ	124	;# 
  2846   00007D                     DAC1DAT         equ	125	;# 
  2847   00007D                     DAC1DATL        equ	125	;# 
  2848   00007F                     DAC1CON         equ	127	;# 
  2849   000080                     SPI1RXB         equ	128	;# 
  2850   000081                     SPI1TXB         equ	129	;# 
  2851   000082                     SPI1TCNT        equ	130	;# 
  2852   000082                     SPI1TCNTL       equ	130	;# 
  2853   000083                     SPI1TCNTH       equ	131	;# 
  2854   000084                     SPI1CON0        equ	132	;# 
  2855   000085                     SPI1CON1        equ	133	;# 
  2856   000086                     SPI1CON2        equ	134	;# 
  2857   000087                     SPI1STATUS      equ	135	;# 
  2858   000088                     SPI1TWIDTH      equ	136	;# 
  2859   000089                     SPI1BAUD        equ	137	;# 
  2860   00008A                     SPI1INTF        equ	138	;# 
  2861   00008B                     SPI1INTE        equ	139	;# 
  2862   00008C                     SPI1CLK         equ	140	;# 
  2863   00008D                     SPI2RXB         equ	141	;# 
  2864   00008E                     SPI2TXB         equ	142	;# 
  2865   00008F                     SPI2TCNT        equ	143	;# 
  2866   00008F                     SPI2TCNTL       equ	143	;# 
  2867   000090                     SPI2TCNTH       equ	144	;# 
  2868   000091                     SPI2CON0        equ	145	;# 
  2869   000092                     SPI2CON1        equ	146	;# 
  2870   000093                     SPI2CON2        equ	147	;# 
  2871   000094                     SPI2STATUS      equ	148	;# 
  2872   000095                     SPI2TWIDTH      equ	149	;# 
  2873   000096                     SPI2BAUD        equ	150	;# 
  2874   000097                     SPI2INTF        equ	151	;# 
  2875   000098                     SPI2INTE        equ	152	;# 
  2876   000099                     SPI2CLK         equ	153	;# 
  2877   0000AC                     ACTCON          equ	172	;# 
  2878   0000AD                     OSCCON1         equ	173	;# 
  2879   0000AE                     OSCCON2         equ	174	;# 
  2880   0000AF                     OSCCON3         equ	175	;# 
  2881   0000B0                     OSCTUNE         equ	176	;# 
  2882   0000B1                     OSCFRQ          equ	177	;# 
  2883   0000B1                     OSCFREQ         equ	177	;# 
  2884   0000B2                     OSCSTAT         equ	178	;# 
  2885   0000B2                     OSCSTAT1        equ	178	;# 
  2886   0000B3                     OSCEN           equ	179	;# 
  2887   0000B4                     PRLOCK          equ	180	;# 
  2888   0000B5                     SCANPR          equ	181	;# 
  2889   0000B6                     DMA1PR          equ	182	;# 
  2890   0000B7                     DMA2PR          equ	183	;# 
  2891   0000B8                     DMA3PR          equ	184	;# 
  2892   0000B9                     DMA4PR          equ	185	;# 
  2893   0000BA                     DMA5PR          equ	186	;# 
  2894   0000BB                     DMA6PR          equ	187	;# 
  2895   0000BE                     MAINPR          equ	190	;# 
  2896   0000BF                     ISRPR           equ	191	;# 
  2897   0000D4                     CLCDATA         equ	212	;# 
  2898   0000D5                     CLCSELECT       equ	213	;# 
  2899   0000D6                     CLCnCON         equ	214	;# 
  2900   0000D7                     CLCnPOL         equ	215	;# 
  2901   0000D8                     CLCnSEL0        equ	216	;# 
  2902   0000D9                     CLCnSEL1        equ	217	;# 
  2903   0000DA                     CLCnSEL2        equ	218	;# 
  2904   0000DB                     CLCnSEL3        equ	219	;# 
  2905   0000DC                     CLCnGLS0        equ	220	;# 
  2906   0000DD                     CLCnGLS1        equ	221	;# 
  2907   0000DE                     CLCnGLS2        equ	222	;# 
  2908   0000DF                     CLCnGLS3        equ	223	;# 
  2909   0000E8                     DMASELECT       equ	232	;# 
  2910   0000E9                     DMAnBUF         equ	233	;# 
  2911   0000EA                     DMAnDCNT        equ	234	;# 
  2912   0000EA                     DMAnDCNTL       equ	234	;# 
  2913   0000EB                     DMAnDCNTH       equ	235	;# 
  2914   0000EC                     DMAnDPTR        equ	236	;# 
  2915   0000EC                     DMAnDPTRL       equ	236	;# 
  2916   0000ED                     DMAnDPTRH       equ	237	;# 
  2917   0000EE                     DMAnDSZ         equ	238	;# 
  2918   0000EE                     DMAnDSZL        equ	238	;# 
  2919   0000EF                     DMAnDSZH        equ	239	;# 
  2920   0000F0                     DMAnDSA         equ	240	;# 
  2921   0000F0                     DMAnDSAL        equ	240	;# 
  2922   0000F1                     DMAnDSAH        equ	241	;# 
  2923   0000F2                     DMAnSCNT        equ	242	;# 
  2924   0000F2                     DMAnSCNTL       equ	242	;# 
  2925   0000F3                     DMAnSCNTH       equ	243	;# 
  2926   0000F4                     DMAnSPTR        equ	244	;# 
  2927   0000F4                     DMAnSPTRL       equ	244	;# 
  2928   0000F5                     DMAnSPTRH       equ	245	;# 
  2929   0000F6                     DMAnSPTRU       equ	246	;# 
  2930   0000F7                     DMAnSSZ         equ	247	;# 
  2931   0000F7                     DMAnSSZL        equ	247	;# 
  2932   0000F8                     DMAnSSZH        equ	248	;# 
  2933   0000F9                     DMAnSSA         equ	249	;# 
  2934   0000F9                     DMAnSSAL        equ	249	;# 
  2935   0000FA                     DMAnSSAH        equ	250	;# 
  2936   0000FB                     DMAnSSAU        equ	251	;# 
  2937   0000FC                     DMAnCON0        equ	252	;# 
  2938   0000FD                     DMAnCON1        equ	253	;# 
  2939   0000FE                     DMAnAIRQ        equ	254	;# 
  2940   0000FF                     DMAnSIRQ        equ	255	;# 
  2941   000200                     PPSLOCK         equ	512	;# 
  2942   000201                     RA0PPS          equ	513	;# 
  2943   000202                     RA1PPS          equ	514	;# 
  2944   000203                     RA2PPS          equ	515	;# 
  2945   000204                     RA3PPS          equ	516	;# 
  2946   000205                     RA4PPS          equ	517	;# 
  2947   000206                     RA5PPS          equ	518	;# 
  2948   000207                     RA6PPS          equ	519	;# 
  2949   000208                     RA7PPS          equ	520	;# 
  2950   000209                     RB0PPS          equ	521	;# 
  2951   00020A                     RB1PPS          equ	522	;# 
  2952   00020B                     RB2PPS          equ	523	;# 
  2953   00020C                     RB3PPS          equ	524	;# 
  2954   00020D                     RB4PPS          equ	525	;# 
  2955   00020E                     RB5PPS          equ	526	;# 
  2956   00020F                     RB6PPS          equ	527	;# 
  2957   000210                     RB7PPS          equ	528	;# 
  2958   000211                     RC0PPS          equ	529	;# 
  2959   000212                     RC1PPS          equ	530	;# 
  2960   000213                     RC2PPS          equ	531	;# 
  2961   000214                     RC3PPS          equ	532	;# 
  2962   000215                     RC4PPS          equ	533	;# 
  2963   000216                     RC5PPS          equ	534	;# 
  2964   000217                     RC6PPS          equ	535	;# 
  2965   000218                     RC7PPS          equ	536	;# 
  2966   000219                     RD0PPS          equ	537	;# 
  2967   00021A                     RD1PPS          equ	538	;# 
  2968   00021B                     RD2PPS          equ	539	;# 
  2969   00021C                     RD3PPS          equ	540	;# 
  2970   00021D                     RD4PPS          equ	541	;# 
  2971   00021E                     RD5PPS          equ	542	;# 
  2972   00021F                     RD6PPS          equ	543	;# 
  2973   000220                     RD7PPS          equ	544	;# 
  2974   000221                     RE0PPS          equ	545	;# 
  2975   000222                     RE1PPS          equ	546	;# 
  2976   000223                     RE2PPS          equ	547	;# 
  2977   00023E                     INT0PPS         equ	574	;# 
  2978   00023F                     INT1PPS         equ	575	;# 
  2979   000240                     INT2PPS         equ	576	;# 
  2980   000241                     T0CKIPPS        equ	577	;# 
  2981   000242                     T1CKIPPS        equ	578	;# 
  2982   000243                     T1GPPS          equ	579	;# 
  2983   000244                     T3CKIPPS        equ	580	;# 
  2984   000245                     T3GPPS          equ	581	;# 
  2985   000246                     T5CKIPPS        equ	582	;# 
  2986   000247                     T5GPPS          equ	583	;# 
  2987   000248                     T2INPPS         equ	584	;# 
  2988   000249                     T4INPPS         equ	585	;# 
  2989   00024A                     T6INPPS         equ	586	;# 
  2990   00024F                     CCP1PPS         equ	591	;# 
  2991   000250                     CCP2PPS         equ	592	;# 
  2992   000251                     CCP3PPS         equ	593	;# 
  2993   000253                     PWM1ERSPPS      equ	595	;# 
  2994   000254                     PWM2ERSPPS      equ	596	;# 
  2995   000255                     PWM3ERSPPS      equ	597	;# 
  2996   000257                     PWMIN0PPS       equ	599	;# 
  2997   000258                     PWMIN1PPS       equ	600	;# 
  2998   000259                     SMT1WINPPS      equ	601	;# 
  2999   00025A                     SMT1SIGPPS      equ	602	;# 
  3000   00025B                     CWG1PPS         equ	603	;# 
  3001   00025B                     CWG1INPPS       equ	603	;# 
  3002   00025C                     CWG2PPS         equ	604	;# 
  3003   00025C                     CWG2INPPS       equ	604	;# 
  3004   00025D                     CWG3PPS         equ	605	;# 
  3005   00025D                     CWG3INPPS       equ	605	;# 
  3006   00025E                     MD1CARLPPS      equ	606	;# 
  3007   00025E                     MDCARLPPS       equ	606	;# 
  3008   00025F                     MD1CARHPPS      equ	607	;# 
  3009   00025F                     MDCARHPPS       equ	607	;# 
  3010   000260                     MD1SRCPPS       equ	608	;# 
  3011   000260                     MDSRCPPS        equ	608	;# 
  3012   000261                     CLCIN0PPS       equ	609	;# 
  3013   000262                     CLCIN1PPS       equ	610	;# 
  3014   000263                     CLCIN2PPS       equ	611	;# 
  3015   000264                     CLCIN3PPS       equ	612	;# 
  3016   000265                     CLCIN4PPS       equ	613	;# 
  3017   000266                     CLCIN5PPS       equ	614	;# 
  3018   000267                     CLCIN6PPS       equ	615	;# 
  3019   000268                     CLCIN7PPS       equ	616	;# 
  3020   000269                     ADACTPPS        equ	617	;# 
  3021   00026A                     SPI1SCKPPS      equ	618	;# 
  3022   00026B                     SPI1SDIPPS      equ	619	;# 
  3023   00026C                     SPI1SSPPS       equ	620	;# 
  3024   00026D                     SPI2SCKPPS      equ	621	;# 
  3025   00026E                     SPI2SDIPPS      equ	622	;# 
  3026   00026F                     SPI2SSPPS       equ	623	;# 
  3027   000270                     I2C1SDAPPS      equ	624	;# 
  3028   000271                     I2C1SCLPPS      equ	625	;# 
  3029   000272                     U1RXPPS         equ	626	;# 
  3030   000273                     U1CTSPPS        equ	627	;# 
  3031   000274                     U2RXPPS         equ	628	;# 
  3032   000275                     U2CTSPPS        equ	629	;# 
  3033   000276                     U3RXPPS         equ	630	;# 
  3034   000277                     U3CTSPPS        equ	631	;# 
  3035   000278                     U4RXPPS         equ	632	;# 
  3036   000279                     U4CTSPPS        equ	633	;# 
  3037   00027A                     U5RXPPS         equ	634	;# 
  3038   00027B                     U5CTSPPS        equ	635	;# 
  3039   000286                     RC4I2C          equ	646	;# 
  3040   000287                     RC3I2C          equ	647	;# 
  3041   000288                     RB2I2C          equ	648	;# 
  3042   000289                     RB1I2C          equ	649	;# 
  3043   00028B                     I2C1RXB         equ	651	;# 
  3044   00028C                     I2C1TXB         equ	652	;# 
  3045   00028D                     I2C1CNT         equ	653	;# 
  3046   00028E                     I2C1ADB0        equ	654	;# 
  3047   00028F                     I2C1ADB1        equ	655	;# 
  3048   000290                     I2C1ADR0        equ	656	;# 
  3049   000291                     I2C1ADR1        equ	657	;# 
  3050   000292                     I2C1ADR2        equ	658	;# 
  3051   000293                     I2C1ADR3        equ	659	;# 
  3052   000294                     I2C1CON0        equ	660	;# 
  3053   000295                     I2C1CON1        equ	661	;# 
  3054   000296                     I2C1CON2        equ	662	;# 
  3055   000297                     I2C1ERR         equ	663	;# 
  3056   000298                     I2C1STAT0       equ	664	;# 
  3057   000299                     I2C1STAT1       equ	665	;# 
  3058   00029A                     I2C1PIR         equ	666	;# 
  3059   00029B                     I2C1PIE         equ	667	;# 
  3060   00029C                     I2C1CLK         equ	668	;# 
  3061   00029D                     I2C1BTO         equ	669	;# 
  3062   0002A1                     U1RXB           equ	673	;# 
  3063   0002A1                     U1RXBL          equ	673	;# 
  3064   0002A2                     U1RXCHK         equ	674	;# 
  3065   0002A3                     U1TXB           equ	675	;# 
  3066   0002A3                     U1TXBL          equ	675	;# 
  3067   0002A4                     U1TXCHK         equ	676	;# 
  3068   0002A5                     U1P1            equ	677	;# 
  3069   0002A5                     U1P1L           equ	677	;# 
  3070   0002A6                     U1P1H           equ	678	;# 
  3071   0002A7                     U1P2            equ	679	;# 
  3072   0002A7                     U1P2L           equ	679	;# 
  3073   0002A8                     U1P2H           equ	680	;# 
  3074   0002A9                     U1P3            equ	681	;# 
  3075   0002A9                     U1P3L           equ	681	;# 
  3076   0002AA                     U1P3H           equ	682	;# 
  3077   0002AB                     U1CON0          equ	683	;# 
  3078   0002AC                     U1CON1          equ	684	;# 
  3079   0002AD                     U1CON2          equ	685	;# 
  3080   0002AE                     U1BRG           equ	686	;# 
  3081   0002AE                     U1BRGL          equ	686	;# 
  3082   0002AF                     U1BRGH          equ	687	;# 
  3083   0002B0                     U1FIFO          equ	688	;# 
  3084   0002B1                     U1UIR           equ	689	;# 
  3085   0002B2                     U1ERRIR         equ	690	;# 
  3086   0002B3                     U1ERRIE         equ	691	;# 
  3087   0002B4                     U2RXB           equ	692	;# 
  3088   0002B4                     U2RXBL          equ	692	;# 
  3089   0002B6                     U2TXB           equ	694	;# 
  3090   0002B6                     U2TXBL          equ	694	;# 
  3091   0002B8                     U2P1            equ	696	;# 
  3092   0002B8                     U2P1L           equ	696	;# 
  3093   0002BA                     U2P2            equ	698	;# 
  3094   0002BA                     U2P2L           equ	698	;# 
  3095   0002BC                     U2P3            equ	700	;# 
  3096   0002BC                     U2P3L           equ	700	;# 
  3097   0002BE                     U2CON0          equ	702	;# 
  3098   0002BF                     U2CON1          equ	703	;# 
  3099   0002C0                     U2CON2          equ	704	;# 
  3100   0002C1                     U2BRG           equ	705	;# 
  3101   0002C1                     U2BRGL          equ	705	;# 
  3102   0002C2                     U2BRGH          equ	706	;# 
  3103   0002C3                     U2FIFO          equ	707	;# 
  3104   0002C4                     U2UIR           equ	708	;# 
  3105   0002C5                     U2ERRIR         equ	709	;# 
  3106   0002C6                     U2ERRIE         equ	710	;# 
  3107   0002C7                     U3RXB           equ	711	;# 
  3108   0002C7                     U3RXBL          equ	711	;# 
  3109   0002C9                     U3TXB           equ	713	;# 
  3110   0002C9                     U3TXBL          equ	713	;# 
  3111   0002CB                     U3P1            equ	715	;# 
  3112   0002CB                     U3P1L           equ	715	;# 
  3113   0002CD                     U3P2            equ	717	;# 
  3114   0002CD                     U3P2L           equ	717	;# 
  3115   0002CF                     U3P3            equ	719	;# 
  3116   0002CF                     U3P3L           equ	719	;# 
  3117   0002D1                     U3CON0          equ	721	;# 
  3118   0002D2                     U3CON1          equ	722	;# 
  3119   0002D3                     U3CON2          equ	723	;# 
  3120   0002D4                     U3BRG           equ	724	;# 
  3121   0002D4                     U3BRGL          equ	724	;# 
  3122   0002D5                     U3BRGH          equ	725	;# 
  3123   0002D6                     U3FIFO          equ	726	;# 
  3124   0002D7                     U3UIR           equ	727	;# 
  3125   0002D8                     U3ERRIR         equ	728	;# 
  3126   0002D9                     U3ERRIE         equ	729	;# 
  3127   0002DA                     U4RXB           equ	730	;# 
  3128   0002DA                     U4RXBL          equ	730	;# 
  3129   0002DC                     U4TXB           equ	732	;# 
  3130   0002DC                     U4TXBL          equ	732	;# 
  3131   0002DE                     U4P1            equ	734	;# 
  3132   0002DE                     U4P1L           equ	734	;# 
  3133   0002E0                     U4P2            equ	736	;# 
  3134   0002E0                     U4P2L           equ	736	;# 
  3135   0002E2                     U4P3            equ	738	;# 
  3136   0002E2                     U4P3L           equ	738	;# 
  3137   0002E4                     U4CON0          equ	740	;# 
  3138   0002E5                     U4CON1          equ	741	;# 
  3139   0002E6                     U4CON2          equ	742	;# 
  3140   0002E7                     U4BRG           equ	743	;# 
  3141   0002E7                     U4BRGL          equ	743	;# 
  3142   0002E8                     U4BRGH          equ	744	;# 
  3143   0002E9                     U4FIFO          equ	745	;# 
  3144   0002EA                     U4UIR           equ	746	;# 
  3145   0002EB                     U4ERRIR         equ	747	;# 
  3146   0002EC                     U4ERRIE         equ	748	;# 
  3147   0002ED                     U5RXB           equ	749	;# 
  3148   0002ED                     U5RXBL          equ	749	;# 
  3149   0002EF                     U5TXB           equ	751	;# 
  3150   0002EF                     U5TXBL          equ	751	;# 
  3151   0002F1                     U5P1            equ	753	;# 
  3152   0002F1                     U5P1L           equ	753	;# 
  3153   0002F3                     U5P2            equ	755	;# 
  3154   0002F3                     U5P2L           equ	755	;# 
  3155   0002F5                     U5P3            equ	757	;# 
  3156   0002F5                     U5P3L           equ	757	;# 
  3157   0002F7                     U5CON0          equ	759	;# 
  3158   0002F8                     U5CON1          equ	760	;# 
  3159   0002F9                     U5CON2          equ	761	;# 
  3160   0002FA                     U5BRG           equ	762	;# 
  3161   0002FA                     U5BRGL          equ	762	;# 
  3162   0002FB                     U5BRGH          equ	763	;# 
  3163   0002FC                     U5FIFO          equ	764	;# 
  3164   0002FD                     U5UIR           equ	765	;# 
  3165   0002FE                     U5ERRIR         equ	766	;# 
  3166   0002FF                     U5ERRIE         equ	767	;# 
  3167   000300                     SMT1TMR         equ	768	;# 
  3168   000300                     SMT1TMRL        equ	768	;# 
  3169   000301                     SMT1TMRH        equ	769	;# 
  3170   000302                     SMT1TMRU        equ	770	;# 
  3171   000303                     SMT1CPR         equ	771	;# 
  3172   000303                     SMT1CPRL        equ	771	;# 
  3173   000304                     SMT1CPRH        equ	772	;# 
  3174   000305                     SMT1CPRU        equ	773	;# 
  3175   000306                     SMT1CPW         equ	774	;# 
  3176   000306                     SMT1CPWL        equ	774	;# 
  3177   000307                     SMT1CPWH        equ	775	;# 
  3178   000308                     SMT1CPWU        equ	776	;# 
  3179   000309                     SMT1PR          equ	777	;# 
  3180   000309                     SMT1PRL         equ	777	;# 
  3181   00030A                     SMT1PRH         equ	778	;# 
  3182   00030B                     SMT1PRU         equ	779	;# 
  3183   00030C                     SMT1CON0        equ	780	;# 
  3184   00030D                     SMT1CON1        equ	781	;# 
  3185   00030E                     SMT1STAT        equ	782	;# 
  3186   00030F                     SMT1CLK         equ	783	;# 
  3187   000310                     SMT1SIG         equ	784	;# 
  3188   000311                     SMT1WIN         equ	785	;# 
  3189   000318                     TMR0L           equ	792	;# 
  3190   000318                     TMR0            equ	792	;# 
  3191   000319                     TMR0H           equ	793	;# 
  3192   000319                     PR0             equ	793	;# 
  3193   00031A                     T0CON0          equ	794	;# 
  3194   00031B                     T0CON1          equ	795	;# 
  3195   00031C                     TMR1            equ	796	;# 
  3196   00031C                     TMR1L           equ	796	;# 
  3197   00031D                     TMR1H           equ	797	;# 
  3198   00031E                     T1CON           equ	798	;# 
  3199   00031E                     TMR1CON         equ	798	;# 
  3200   00031F                     T1GCON          equ	799	;# 
  3201   00031F                     TMR1GCON        equ	799	;# 
  3202   000320                     T1GATE          equ	800	;# 
  3203   000320                     TMR1GATE        equ	800	;# 
  3204   000321                     T1CLK           equ	801	;# 
  3205   000321                     TMR1CLK         equ	801	;# 
  3206   000321                     PR1             equ	801	;# 
  3207   000322                     T2TMR           equ	802	;# 
  3208   000322                     TMR2            equ	802	;# 
  3209   000323                     T2PR            equ	803	;# 
  3210   000323                     PR2             equ	803	;# 
  3211   000324                     T2CON           equ	804	;# 
  3212   000325                     T2HLT           equ	805	;# 
  3213   000326                     T2CLKCON        equ	806	;# 
  3214   000326                     T2CLK           equ	806	;# 
  3215   000327                     T2RST           equ	807	;# 
  3216   000328                     TMR3            equ	808	;# 
  3217   000328                     TMR3L           equ	808	;# 
  3218   000329                     TMR3H           equ	809	;# 
  3219   00032A                     T3CON           equ	810	;# 
  3220   00032A                     TMR3CON         equ	810	;# 
  3221   00032B                     T3GCON          equ	811	;# 
  3222   00032B                     TMR3GCON        equ	811	;# 
  3223   00032C                     T3GATE          equ	812	;# 
  3224   00032C                     TMR3GATE        equ	812	;# 
  3225   00032D                     T3CLK           equ	813	;# 
  3226   00032D                     TMR3CLK         equ	813	;# 
  3227   00032D                     PR3             equ	813	;# 
  3228   00032E                     T4TMR           equ	814	;# 
  3229   00032E                     TMR4            equ	814	;# 
  3230   00032F                     T4PR            equ	815	;# 
  3231   00032F                     PR4             equ	815	;# 
  3232   000330                     T4CON           equ	816	;# 
  3233   000331                     T4HLT           equ	817	;# 
  3234   000332                     T4CLKCON        equ	818	;# 
  3235   000332                     T4CLK           equ	818	;# 
  3236   000333                     T4RST           equ	819	;# 
  3237   000334                     TMR5            equ	820	;# 
  3238   000334                     TMR5L           equ	820	;# 
  3239   000335                     TMR5H           equ	821	;# 
  3240   000336                     T5CON           equ	822	;# 
  3241   000336                     TMR5CON         equ	822	;# 
  3242   000337                     T5GCON          equ	823	;# 
  3243   000337                     TMR5GCON        equ	823	;# 
  3244   000338                     T5GATE          equ	824	;# 
  3245   000338                     TMR5GATE        equ	824	;# 
  3246   000339                     T5CLK           equ	825	;# 
  3247   000339                     TMR5CLK         equ	825	;# 
  3248   000339                     PR5             equ	825	;# 
  3249   00033A                     T6TMR           equ	826	;# 
  3250   00033A                     TMR6            equ	826	;# 
  3251   00033B                     T6PR            equ	827	;# 
  3252   00033B                     PR6             equ	827	;# 
  3253   00033C                     T6CON           equ	828	;# 
  3254   00033D                     T6HLT           equ	829	;# 
  3255   00033E                     T6CLKCON        equ	830	;# 
  3256   00033E                     T6CLK           equ	830	;# 
  3257   00033F                     T6RST           equ	831	;# 
  3258   000340                     CCPR1           equ	832	;# 
  3259   000340                     CCPR1L          equ	832	;# 
  3260   000341                     CCPR1H          equ	833	;# 
  3261   000342                     CCP1CON         equ	834	;# 
  3262   000343                     CCP1CAP         equ	835	;# 
  3263   000344                     CCPR2           equ	836	;# 
  3264   000344                     CCPR2L          equ	836	;# 
  3265   000345                     CCPR2H          equ	837	;# 
  3266   000346                     CCP2CON         equ	838	;# 
  3267   000347                     CCP2CAP         equ	839	;# 
  3268   000348                     CCPR3           equ	840	;# 
  3269   000348                     CCPR3L          equ	840	;# 
  3270   000349                     CCPR3H          equ	841	;# 
  3271   00034A                     CCP3CON         equ	842	;# 
  3272   00034B                     CCP3CAP         equ	843	;# 
  3273   00034C                     CCPTMRS0        equ	844	;# 
  3274   00034F                     CRCDATA         equ	847	;# 
  3275   00034F                     CRCDATL         equ	847	;# 
  3276   000350                     CRCDATH         equ	848	;# 
  3277   000351                     CRCACC          equ	849	;# 
  3278   000351                     CRCACCL         equ	849	;# 
  3279   000352                     CRCACCH         equ	850	;# 
  3280   000353                     CRCSHFT         equ	851	;# 
  3281   000353                     CRCSHIFTL       equ	851	;# 
  3282   000354                     CRCSHIFTH       equ	852	;# 
  3283   000355                     CRCXOR          equ	853	;# 
  3284   000355                     CRCXORL         equ	853	;# 
  3285   000356                     CRCXORH         equ	854	;# 
  3286   000357                     CRCCON0         equ	855	;# 
  3287   000358                     CRCCON1         equ	856	;# 
  3288   00035A                     SCANLADR        equ	858	;# 
  3289   00035A                     SCANLADRL       equ	858	;# 
  3290   00035B                     SCANLADRH       equ	859	;# 
  3291   00035C                     SCANLADRU       equ	860	;# 
  3292   00035D                     SCANHADR        equ	861	;# 
  3293   00035D                     SCANHADRL       equ	861	;# 
  3294   00035E                     SCANHADRH       equ	862	;# 
  3295   00035F                     SCANHADRU       equ	863	;# 
  3296   000360                     SCANCON0        equ	864	;# 
  3297   000361                     SCANTRIG        equ	865	;# 
  3298   000362                     IPR0            equ	866	;# 
  3299   000363                     IPR1            equ	867	;# 
  3300   000364                     IPR2            equ	868	;# 
  3301   000365                     IPR3            equ	869	;# 
  3302   000366                     IPR4            equ	870	;# 
  3303   000367                     IPR5            equ	871	;# 
  3304   000368                     IPR6            equ	872	;# 
  3305   000369                     IPR7            equ	873	;# 
  3306   00036A                     IPR8            equ	874	;# 
  3307   00036B                     IPR9            equ	875	;# 
  3308   00036C                     IPR10           equ	876	;# 
  3309   00036D                     IPR11           equ	877	;# 
  3310   00036E                     IPR12           equ	878	;# 
  3311   00036F                     IPR13           equ	879	;# 
  3312   000370                     IPR14           equ	880	;# 
  3313   000371                     IPR15           equ	881	;# 
  3314   000373                     STATUS_CSHAD    equ	883	;# 
  3315   000374                     WREG_CSHAD      equ	884	;# 
  3316   000375                     BSR_CSHAD       equ	885	;# 
  3317   000376                     SHADCON         equ	886	;# 
  3318   000377                     STATUS_SHAD     equ	887	;# 
  3319   000378                     WREG_SHAD       equ	888	;# 
  3320   000379                     BSR_SHAD        equ	889	;# 
  3321   00037A                     PCLATH_SHAD     equ	890	;# 
  3322   00037B                     PCLATU_SHAD     equ	891	;# 
  3323   00037C                     FSR0SH          equ	892	;# 
  3324   00037C                     FSR0L_SHAD      equ	892	;# 
  3325   00037D                     FSR0H_SHAD      equ	893	;# 
  3326   00037E                     FSR1SH          equ	894	;# 
  3327   00037E                     FSR1L_SHAD      equ	894	;# 
  3328   00037F                     FSR1H_SHAD      equ	895	;# 
  3329   000380                     FSR2SH          equ	896	;# 
  3330   000380                     FSR2L_SHAD      equ	896	;# 
  3331   000381                     FSR2H_SHAD      equ	897	;# 
  3332   000382                     PRODSH          equ	898	;# 
  3333   000382                     PRODL_SHAD      equ	898	;# 
  3334   000383                     PRODH_SHAD      equ	899	;# 
  3335   0003BC                     CWG1CLK         equ	956	;# 
  3336   0003BC                     CWG1CLKCON      equ	956	;# 
  3337   0003BD                     CWG1ISM         equ	957	;# 
  3338   0003BD                     CWG1DAT         equ	957	;# 
  3339   0003BE                     CWG1DBR         equ	958	;# 
  3340   0003BF                     CWG1DBF         equ	959	;# 
  3341   0003C0                     CWG1CON0        equ	960	;# 
  3342   0003C1                     CWG1CON1        equ	961	;# 
  3343   0003C2                     CWG1AS0         equ	962	;# 
  3344   0003C3                     CWG1AS1         equ	963	;# 
  3345   0003C4                     CWG1STR         equ	964	;# 
  3346   0003C5                     CWG2CLK         equ	965	;# 
  3347   0003C5                     CWG2CLKCON      equ	965	;# 
  3348   0003C6                     CWG2ISM         equ	966	;# 
  3349   0003C6                     CWG2DAT         equ	966	;# 
  3350   0003C7                     CWG2DBR         equ	967	;# 
  3351   0003C8                     CWG2DBF         equ	968	;# 
  3352   0003C9                     CWG2CON0        equ	969	;# 
  3353   0003CA                     CWG2CON1        equ	970	;# 
  3354   0003CB                     CWG2AS0         equ	971	;# 
  3355   0003CC                     CWG2AS1         equ	972	;# 
  3356   0003CD                     CWG2STR         equ	973	;# 
  3357   0003CE                     CWG3CLK         equ	974	;# 
  3358   0003CE                     CWG3CLKCON      equ	974	;# 
  3359   0003CF                     CWG3ISM         equ	975	;# 
  3360   0003CF                     CWG3DAT         equ	975	;# 
  3361   0003D0                     CWG3DBR         equ	976	;# 
  3362   0003D1                     CWG3DBF         equ	977	;# 
  3363   0003D2                     CWG3CON0        equ	978	;# 
  3364   0003D3                     CWG3CON1        equ	979	;# 
  3365   0003D4                     CWG3AS0         equ	980	;# 
  3366   0003D5                     CWG3AS1         equ	981	;# 
  3367   0003D6                     CWG3STR         equ	982	;# 
  3368   0003D7                     FVRCON          equ	983	;# 
  3369   0003D8                     ADCPCON         equ	984	;# 
  3370   0003D8                     ADCP            equ	984	;# 
  3371   0003D9                     ADLTH           equ	985	;# 
  3372   0003D9                     ADLTHL          equ	985	;# 
  3373   0003DA                     ADLTHH          equ	986	;# 
  3374   0003DB                     ADUTH           equ	987	;# 
  3375   0003DB                     ADUTHL          equ	987	;# 
  3376   0003DC                     ADUTHH          equ	988	;# 
  3377   0003DD                     ADERR           equ	989	;# 
  3378   0003DD                     ADERRL          equ	989	;# 
  3379   0003DE                     ADERRH          equ	990	;# 
  3380   0003DF                     ADSTPT          equ	991	;# 
  3381   0003DF                     ADSTPTL         equ	991	;# 
  3382   0003E0                     ADSTPTH         equ	992	;# 
  3383   0003E1                     ADFLTR          equ	993	;# 
  3384   0003E1                     ADFLTRL         equ	993	;# 
  3385   0003E2                     ADFLTRH         equ	994	;# 
  3386   0003E3                     ADACC           equ	995	;# 
  3387   0003E3                     ADACCL          equ	995	;# 
  3388   0003E4                     ADACCH          equ	996	;# 
  3389   0003E5                     ADACCU          equ	997	;# 
  3390   0003E6                     ADCNT           equ	998	;# 
  3391   0003E7                     ADRPT           equ	999	;# 
  3392   0003E8                     ADPREV          equ	1000	;# 
  3393   0003E8                     ADPREVL         equ	1000	;# 
  3394   0003E9                     ADPREVH         equ	1001	;# 
  3395   0003EA                     ADRES           equ	1002	;# 
  3396   0003EA                     ADRESL          equ	1002	;# 
  3397   0003EB                     ADRESH          equ	1003	;# 
  3398   0003EC                     ADPCH           equ	1004	;# 
  3399   0003EE                     ADACQ           equ	1006	;# 
  3400   0003EE                     ADACQL          equ	1006	;# 
  3401   0003EF                     ADACQH          equ	1007	;# 
  3402   0003F0                     ADCAP           equ	1008	;# 
  3403   0003F1                     ADPRE           equ	1009	;# 
  3404   0003F1                     ADPREL          equ	1009	;# 
  3405   0003F2                     ADPREH          equ	1010	;# 
  3406   0003F3                     ADCON0          equ	1011	;# 
  3407   0003F4                     ADCON1          equ	1012	;# 
  3408   0003F5                     ADCON2          equ	1013	;# 
  3409   0003F6                     ADCON3          equ	1014	;# 
  3410   0003F7                     ADSTAT          equ	1015	;# 
  3411   0003F8                     ADREF           equ	1016	;# 
  3412   0003F9                     ADACT           equ	1017	;# 
  3413   0003FA                     ADCLK           equ	1018	;# 
  3414   000400                     ANSELA          equ	1024	;# 
  3415   000401                     WPUA            equ	1025	;# 
  3416   000402                     ODCONA          equ	1026	;# 
  3417   000403                     SLRCONA         equ	1027	;# 
  3418   000404                     INLVLA          equ	1028	;# 
  3419   000405                     IOCAP           equ	1029	;# 
  3420   000406                     IOCAN           equ	1030	;# 
  3421   000407                     IOCAF           equ	1031	;# 
  3422   000408                     ANSELB          equ	1032	;# 
  3423   000409                     WPUB            equ	1033	;# 
  3424   00040A                     ODCONB          equ	1034	;# 
  3425   00040B                     SLRCONB         equ	1035	;# 
  3426   00040C                     INLVLB          equ	1036	;# 
  3427   00040D                     IOCBP           equ	1037	;# 
  3428   00040E                     IOCBN           equ	1038	;# 
  3429   00040F                     IOCBF           equ	1039	;# 
  3430   000410                     ANSELC          equ	1040	;# 
  3431   000411                     WPUC            equ	1041	;# 
  3432   000412                     ODCONC          equ	1042	;# 
  3433   000413                     SLRCONC         equ	1043	;# 
  3434   000414                     INLVLC          equ	1044	;# 
  3435   000415                     IOCCP           equ	1045	;# 
  3436   000416                     IOCCN           equ	1046	;# 
  3437   000417                     IOCCF           equ	1047	;# 
  3438   000418                     ANSELD          equ	1048	;# 
  3439   000419                     WPUD            equ	1049	;# 
  3440   00041A                     ODCOND          equ	1050	;# 
  3441   00041B                     SLRCOND         equ	1051	;# 
  3442   00041C                     INLVLD          equ	1052	;# 
  3443   000420                     ANSELE          equ	1056	;# 
  3444   000421                     WPUE            equ	1057	;# 
  3445   000422                     ODCONE          equ	1058	;# 
  3446   000423                     SLRCONE         equ	1059	;# 
  3447   000424                     INLVLE          equ	1060	;# 
  3448   000425                     IOCEP           equ	1061	;# 
  3449   000426                     IOCEN           equ	1062	;# 
  3450   000427                     IOCEF           equ	1063	;# 
  3451   000440                     NCO1ACC         equ	1088	;# 
  3452   000440                     NCO1ACCL        equ	1088	;# 
  3453   000441                     NCO1ACCH        equ	1089	;# 
  3454   000442                     NCO1ACCU        equ	1090	;# 
  3455   000443                     NCO1INC         equ	1091	;# 
  3456   000443                     NCO1INCL        equ	1091	;# 
  3457   000444                     NCO1INCH        equ	1092	;# 
  3458   000445                     NCO1INCU        equ	1093	;# 
  3459   000446                     NCO1CON         equ	1094	;# 
  3460   000447                     NCO1CLK         equ	1095	;# 
  3461   000448                     NCO2ACC         equ	1096	;# 
  3462   000448                     NCO2ACCL        equ	1096	;# 
  3463   000449                     NCO2ACCH        equ	1097	;# 
  3464   00044A                     NCO2ACCU        equ	1098	;# 
  3465   00044B                     NCO2INC         equ	1099	;# 
  3466   00044B                     NCO2INCL        equ	1099	;# 
  3467   00044C                     NCO2INCH        equ	1100	;# 
  3468   00044D                     NCO2INCU        equ	1101	;# 
  3469   00044E                     NCO2CON         equ	1102	;# 
  3470   00044F                     NCO2CLK         equ	1103	;# 
  3471   000450                     NCO3ACC         equ	1104	;# 
  3472   000450                     NCO3ACCL        equ	1104	;# 
  3473   000451                     NCO3ACCH        equ	1105	;# 
  3474   000452                     NCO3ACCU        equ	1106	;# 
  3475   000453                     NCO3INC         equ	1107	;# 
  3476   000453                     NCO3INCL        equ	1107	;# 
  3477   000454                     NCO3INCH        equ	1108	;# 
  3478   000455                     NCO3INCU        equ	1109	;# 
  3479   000456                     NCO3CON         equ	1110	;# 
  3480   000457                     NCO3CLK         equ	1111	;# 
  3481   000459                     IVTLOCK         equ	1113	;# 
  3482   00045A                     IVTAD           equ	1114	;# 
  3483   00045A                     IVTADL          equ	1114	;# 
  3484   00045B                     IVTADH          equ	1115	;# 
  3485   00045C                     IVTADU          equ	1116	;# 
  3486   00045D                     IVTBASE         equ	1117	;# 
  3487   00045D                     IVTBASEL        equ	1117	;# 
  3488   00045E                     IVTBASEH        equ	1118	;# 
  3489   00045F                     IVTBASEU        equ	1119	;# 
  3490   000460                     PWM1ERS         equ	1120	;# 
  3491   000461                     PWM1CLK         equ	1121	;# 
  3492   000462                     PWM1LDS         equ	1122	;# 
  3493   000463                     PWM1PR          equ	1123	;# 
  3494   000463                     PWM1PRL         equ	1123	;# 
  3495   000464                     PWM1PRH         equ	1124	;# 
  3496   000465                     PWM1CPRE        equ	1125	;# 
  3497   000466                     PWM1PIPOS       equ	1126	;# 
  3498   000467                     PWM1GIR         equ	1127	;# 
  3499   000468                     PWM1GIE         equ	1128	;# 
  3500   000469                     PWM1CON         equ	1129	;# 
  3501   00046A                     PWM1S1CFG       equ	1130	;# 
  3502   00046B                     PWM1S1P1        equ	1131	;# 
  3503   00046B                     PWM1S1P1L       equ	1131	;# 
  3504   00046C                     PWM1S1P1H       equ	1132	;# 
  3505   00046D                     PWM1S1P2        equ	1133	;# 
  3506   00046D                     PWM1S1P2L       equ	1133	;# 
  3507   00046E                     PWM1S1P2H       equ	1134	;# 
  3508   00046F                     PWM2ERS         equ	1135	;# 
  3509   000470                     PWM2CLK         equ	1136	;# 
  3510   000471                     PWM2LDS         equ	1137	;# 
  3511   000472                     PWM2PR          equ	1138	;# 
  3512   000472                     PWM2PRL         equ	1138	;# 
  3513   000473                     PWM2PRH         equ	1139	;# 
  3514   000474                     PWM2CPRE        equ	1140	;# 
  3515   000475                     PWM2PIPOS       equ	1141	;# 
  3516   000476                     PWM2GIR         equ	1142	;# 
  3517   000477                     PWM2GIE         equ	1143	;# 
  3518   000478                     PWM2CON         equ	1144	;# 
  3519   000479                     PWM2S1CFG       equ	1145	;# 
  3520   00047A                     PWM2S1P1        equ	1146	;# 
  3521   00047A                     PWM2S1P1L       equ	1146	;# 
  3522   00047B                     PWM2S1P1H       equ	1147	;# 
  3523   00047C                     PWM2S1P2        equ	1148	;# 
  3524   00047C                     PWM2S1P2L       equ	1148	;# 
  3525   00047D                     PWM2S1P2H       equ	1149	;# 
  3526   00047E                     PWM3ERS         equ	1150	;# 
  3527   00047F                     PWM3CLK         equ	1151	;# 
  3528   000480                     PWM3LDS         equ	1152	;# 
  3529   000481                     PWM3PR          equ	1153	;# 
  3530   000481                     PWM3PRL         equ	1153	;# 
  3531   000482                     PWM3PRH         equ	1154	;# 
  3532   000483                     PWM3CPRE        equ	1155	;# 
  3533   000484                     PWM3PIPOS       equ	1156	;# 
  3534   000485                     PWM3GIR         equ	1157	;# 
  3535   000486                     PWM3GIE         equ	1158	;# 
  3536   000487                     PWM3CON         equ	1159	;# 
  3537   000488                     PWM3S1CFG       equ	1160	;# 
  3538   000489                     PWM3S1P1        equ	1161	;# 
  3539   000489                     PWM3S1P1L       equ	1161	;# 
  3540   00048A                     PWM3S1P1H       equ	1162	;# 
  3541   00048B                     PWM3S1P2        equ	1163	;# 
  3542   00048B                     PWM3S1P2L       equ	1163	;# 
  3543   00048C                     PWM3S1P2H       equ	1164	;# 
  3544   00049C                     PWMLOAD         equ	1180	;# 
  3545   00049D                     PWMEN           equ	1181	;# 
  3546   00049E                     PIE0            equ	1182	;# 
  3547   00049F                     PIE1            equ	1183	;# 
  3548   0004A0                     PIE2            equ	1184	;# 
  3549   0004A1                     PIE3            equ	1185	;# 
  3550   0004A2                     PIE4            equ	1186	;# 
  3551   0004A3                     PIE5            equ	1187	;# 
  3552   0004A4                     PIE6            equ	1188	;# 
  3553   0004A5                     PIE7            equ	1189	;# 
  3554   0004A6                     PIE8            equ	1190	;# 
  3555   0004A7                     PIE9            equ	1191	;# 
  3556   0004A8                     PIE10           equ	1192	;# 
  3557   0004A9                     PIE11           equ	1193	;# 
  3558   0004AA                     PIE12           equ	1194	;# 
  3559   0004AB                     PIE13           equ	1195	;# 
  3560   0004AC                     PIE14           equ	1196	;# 
  3561   0004AD                     PIE15           equ	1197	;# 
  3562   0004AE                     PIR0            equ	1198	;# 
  3563   0004AF                     PIR1            equ	1199	;# 
  3564   0004B0                     PIR2            equ	1200	;# 
  3565   0004B1                     PIR3            equ	1201	;# 
  3566   0004B2                     PIR4            equ	1202	;# 
  3567   0004B3                     PIR5            equ	1203	;# 
  3568   0004B4                     PIR6            equ	1204	;# 
  3569   0004B5                     PIR7            equ	1205	;# 
  3570   0004B6                     PIR8            equ	1206	;# 
  3571   0004B7                     PIR9            equ	1207	;# 
  3572   0004B8                     PIR10           equ	1208	;# 
  3573   0004B9                     PIR11           equ	1209	;# 
  3574   0004BA                     PIR12           equ	1210	;# 
  3575   0004BB                     PIR13           equ	1211	;# 
  3576   0004BC                     PIR14           equ	1212	;# 
  3577   0004BD                     PIR15           equ	1213	;# 
  3578   0004BE                     LATA            equ	1214	;# 
  3579   0004BF                     LATB            equ	1215	;# 
  3580   0004C0                     LATC            equ	1216	;# 
  3581   0004C1                     LATD            equ	1217	;# 
  3582   0004C2                     LATE            equ	1218	;# 
  3583   0004C6                     TRISA           equ	1222	;# 
  3584   0004C7                     TRISB           equ	1223	;# 
  3585   0004C8                     TRISC           equ	1224	;# 
  3586   0004C9                     TRISD           equ	1225	;# 
  3587   0004CA                     TRISE           equ	1226	;# 
  3588   0004CE                     PORTA           equ	1230	;# 
  3589   0004CF                     PORTB           equ	1231	;# 
  3590   0004D0                     PORTC           equ	1232	;# 
  3591   0004D1                     PORTD           equ	1233	;# 
  3592   0004D2                     PORTE           equ	1234	;# 
  3593   0004D6                     INTCON0         equ	1238	;# 
  3594   0004D7                     INTCON1         equ	1239	;# 
  3595   0004D8                     STATUS          equ	1240	;# 
  3596   0004D9                     FSR2            equ	1241	;# 
  3597   0004D9                     FSR2L           equ	1241	;# 
  3598   0004DA                     FSR2H           equ	1242	;# 
  3599   0004DB                     PLUSW2          equ	1243	;# 
  3600   0004DC                     PREINC2         equ	1244	;# 
  3601   0004DD                     POSTDEC2        equ	1245	;# 
  3602   0004DE                     POSTINC2        equ	1246	;# 
  3603   0004DF                     INDF2           equ	1247	;# 
  3604   0004E0                     BSR             equ	1248	;# 
  3605   0004E1                     FSR1            equ	1249	;# 
  3606   0004E1                     FSR1L           equ	1249	;# 
  3607   0004E2                     FSR1H           equ	1250	;# 
  3608   0004E3                     PLUSW1          equ	1251	;# 
  3609   0004E4                     PREINC1         equ	1252	;# 
  3610   0004E5                     POSTDEC1        equ	1253	;# 
  3611   0004E6                     POSTINC1        equ	1254	;# 
  3612   0004E7                     INDF1           equ	1255	;# 
  3613   0004E8                     WREG            equ	1256	;# 
  3614   0004E9                     FSR0            equ	1257	;# 
  3615   0004E9                     FSR0L           equ	1257	;# 
  3616   0004EA                     FSR0H           equ	1258	;# 
  3617   0004EB                     PLUSW0          equ	1259	;# 
  3618   0004EC                     PREINC0         equ	1260	;# 
  3619   0004ED                     POSTDEC0        equ	1261	;# 
  3620   0004EE                     POSTINC0        equ	1262	;# 
  3621   0004EF                     INDF0           equ	1263	;# 
  3622   0004F0                     PCON0           equ	1264	;# 
  3623   0004F1                     PCON1           equ	1265	;# 
  3624   0004F2                     CPUDOZE         equ	1266	;# 
  3625   0004F3                     PROD            equ	1267	;# 
  3626   0004F3                     PRODL           equ	1267	;# 
  3627   0004F4                     PRODH           equ	1268	;# 
  3628   0004F5                     TABLAT          equ	1269	;# 
  3629   0004F6                     TBLPTR          equ	1270	;# 
  3630   0004F6                     TBLPTRL         equ	1270	;# 
  3631   0004F7                     TBLPTRH         equ	1271	;# 
  3632   0004F8                     TBLPTRU         equ	1272	;# 
  3633   0004F9                     PCLAT           equ	1273	;# 
  3634   0004F9                     PCL             equ	1273	;# 
  3635   0004FA                     PCLATH          equ	1274	;# 
  3636   0004FB                     PCLATU          equ	1275	;# 
  3637   0004FC                     STKPTR          equ	1276	;# 
  3638   0004FD                     TOS             equ	1277	;# 
  3639   0004FD                     TOSL            equ	1277	;# 
  3640   0004FE                     TOSH            equ	1278	;# 
  3641   0004FF                     TOSU            equ	1279	;# 
  3642   000039                     CLKRCON         equ	57	;# 
  3643   00003A                     CLKRCLK         equ	58	;# 
  3644   000040                     NVMCON0         equ	64	;# 
  3645   000041                     NVMCON1         equ	65	;# 
  3646   000042                     NVMLOCK         equ	66	;# 
  3647   000043                     NVMADR          equ	67	;# 
  3648   000043                     NVMADRL         equ	67	;# 
  3649   000044                     NVMADRH         equ	68	;# 
  3650   000045                     NVMADRU         equ	69	;# 
  3651   000046                     NVMDAT          equ	70	;# 
  3652   000046                     NVMDATL         equ	70	;# 
  3653   000047                     NVMDATH         equ	71	;# 
  3654   000048                     VREGCON         equ	72	;# 
  3655   000049                     BORCON          equ	73	;# 
  3656   00004A                     HLVDCON0        equ	74	;# 
  3657   00004B                     HLVDCON1        equ	75	;# 
  3658   00004C                     ZCDCON          equ	76	;# 
  3659   000060                     PMD0            equ	96	;# 
  3660   000061                     PMD1            equ	97	;# 
  3661   000063                     PMD3            equ	99	;# 
  3662   000064                     PMD4            equ	100	;# 
  3663   000065                     PMD5            equ	101	;# 
  3664   000066                     PMD6            equ	102	;# 
  3665   000067                     PMD7            equ	103	;# 
  3666   000068                     PMD8            equ	104	;# 
  3667   00006A                     MD1CON0         equ	106	;# 
  3668   00006B                     MD1CON1         equ	107	;# 
  3669   00006C                     MD1SRC          equ	108	;# 
  3670   00006D                     MD1CARL         equ	109	;# 
  3671   00006E                     MD1CARH         equ	110	;# 
  3672   00006F                     CMOUT           equ	111	;# 
  3673   000070                     CM1CON0         equ	112	;# 
  3674   000071                     CM1CON1         equ	113	;# 
  3675   000072                     CM1NCH          equ	114	;# 
  3676   000073                     CM1PCH          equ	115	;# 
  3677   000074                     CM2CON0         equ	116	;# 
  3678   000075                     CM2CON1         equ	117	;# 
  3679   000076                     CM2NCH          equ	118	;# 
  3680   000077                     CM2PCH          equ	119	;# 
  3681   000078                     WDTCON0         equ	120	;# 
  3682   000079                     WDTCON1         equ	121	;# 
  3683   00007A                     WDTPS           equ	122	;# 
  3684   00007A                     WDTPSL          equ	122	;# 
  3685   00007B                     WDTPSH          equ	123	;# 
  3686   00007C                     WDTTMR          equ	124	;# 
  3687   00007D                     DAC1DAT         equ	125	;# 
  3688   00007D                     DAC1DATL        equ	125	;# 
  3689   00007F                     DAC1CON         equ	127	;# 
  3690   000080                     SPI1RXB         equ	128	;# 
  3691   000081                     SPI1TXB         equ	129	;# 
  3692   000082                     SPI1TCNT        equ	130	;# 
  3693   000082                     SPI1TCNTL       equ	130	;# 
  3694   000083                     SPI1TCNTH       equ	131	;# 
  3695   000084                     SPI1CON0        equ	132	;# 
  3696   000085                     SPI1CON1        equ	133	;# 
  3697   000086                     SPI1CON2        equ	134	;# 
  3698   000087                     SPI1STATUS      equ	135	;# 
  3699   000088                     SPI1TWIDTH      equ	136	;# 
  3700   000089                     SPI1BAUD        equ	137	;# 
  3701   00008A                     SPI1INTF        equ	138	;# 
  3702   00008B                     SPI1INTE        equ	139	;# 
  3703   00008C                     SPI1CLK         equ	140	;# 
  3704   00008D                     SPI2RXB         equ	141	;# 
  3705   00008E                     SPI2TXB         equ	142	;# 
  3706   00008F                     SPI2TCNT        equ	143	;# 
  3707   00008F                     SPI2TCNTL       equ	143	;# 
  3708   000090                     SPI2TCNTH       equ	144	;# 
  3709   000091                     SPI2CON0        equ	145	;# 
  3710   000092                     SPI2CON1        equ	146	;# 
  3711   000093                     SPI2CON2        equ	147	;# 
  3712   000094                     SPI2STATUS      equ	148	;# 
  3713   000095                     SPI2TWIDTH      equ	149	;# 
  3714   000096                     SPI2BAUD        equ	150	;# 
  3715   000097                     SPI2INTF        equ	151	;# 
  3716   000098                     SPI2INTE        equ	152	;# 
  3717   000099                     SPI2CLK         equ	153	;# 
  3718   0000AC                     ACTCON          equ	172	;# 
  3719   0000AD                     OSCCON1         equ	173	;# 
  3720   0000AE                     OSCCON2         equ	174	;# 
  3721   0000AF                     OSCCON3         equ	175	;# 
  3722   0000B0                     OSCTUNE         equ	176	;# 
  3723   0000B1                     OSCFRQ          equ	177	;# 
  3724   0000B1                     OSCFREQ         equ	177	;# 
  3725   0000B2                     OSCSTAT         equ	178	;# 
  3726   0000B2                     OSCSTAT1        equ	178	;# 
  3727   0000B3                     OSCEN           equ	179	;# 
  3728   0000B4                     PRLOCK          equ	180	;# 
  3729   0000B5                     SCANPR          equ	181	;# 
  3730   0000B6                     DMA1PR          equ	182	;# 
  3731   0000B7                     DMA2PR          equ	183	;# 
  3732   0000B8                     DMA3PR          equ	184	;# 
  3733   0000B9                     DMA4PR          equ	185	;# 
  3734   0000BA                     DMA5PR          equ	186	;# 
  3735   0000BB                     DMA6PR          equ	187	;# 
  3736   0000BE                     MAINPR          equ	190	;# 
  3737   0000BF                     ISRPR           equ	191	;# 
  3738   0000D4                     CLCDATA         equ	212	;# 
  3739   0000D5                     CLCSELECT       equ	213	;# 
  3740   0000D6                     CLCnCON         equ	214	;# 
  3741   0000D7                     CLCnPOL         equ	215	;# 
  3742   0000D8                     CLCnSEL0        equ	216	;# 
  3743   0000D9                     CLCnSEL1        equ	217	;# 
  3744   0000DA                     CLCnSEL2        equ	218	;# 
  3745   0000DB                     CLCnSEL3        equ	219	;# 
  3746   0000DC                     CLCnGLS0        equ	220	;# 
  3747   0000DD                     CLCnGLS1        equ	221	;# 
  3748   0000DE                     CLCnGLS2        equ	222	;# 
  3749   0000DF                     CLCnGLS3        equ	223	;# 
  3750   0000E8                     DMASELECT       equ	232	;# 
  3751   0000E9                     DMAnBUF         equ	233	;# 
  3752   0000EA                     DMAnDCNT        equ	234	;# 
  3753   0000EA                     DMAnDCNTL       equ	234	;# 
  3754   0000EB                     DMAnDCNTH       equ	235	;# 
  3755   0000EC                     DMAnDPTR        equ	236	;# 
  3756   0000EC                     DMAnDPTRL       equ	236	;# 
  3757   0000ED                     DMAnDPTRH       equ	237	;# 
  3758   0000EE                     DMAnDSZ         equ	238	;# 
  3759   0000EE                     DMAnDSZL        equ	238	;# 
  3760   0000EF                     DMAnDSZH        equ	239	;# 
  3761   0000F0                     DMAnDSA         equ	240	;# 
  3762   0000F0                     DMAnDSAL        equ	240	;# 
  3763   0000F1                     DMAnDSAH        equ	241	;# 
  3764   0000F2                     DMAnSCNT        equ	242	;# 
  3765   0000F2                     DMAnSCNTL       equ	242	;# 
  3766   0000F3                     DMAnSCNTH       equ	243	;# 
  3767   0000F4                     DMAnSPTR        equ	244	;# 
  3768   0000F4                     DMAnSPTRL       equ	244	;# 
  3769   0000F5                     DMAnSPTRH       equ	245	;# 
  3770   0000F6                     DMAnSPTRU       equ	246	;# 
  3771   0000F7                     DMAnSSZ         equ	247	;# 
  3772   0000F7                     DMAnSSZL        equ	247	;# 
  3773   0000F8                     DMAnSSZH        equ	248	;# 
  3774   0000F9                     DMAnSSA         equ	249	;# 
  3775   0000F9                     DMAnSSAL        equ	249	;# 
  3776   0000FA                     DMAnSSAH        equ	250	;# 
  3777   0000FB                     DMAnSSAU        equ	251	;# 
  3778   0000FC                     DMAnCON0        equ	252	;# 
  3779   0000FD                     DMAnCON1        equ	253	;# 
  3780   0000FE                     DMAnAIRQ        equ	254	;# 
  3781   0000FF                     DMAnSIRQ        equ	255	;# 
  3782   000200                     PPSLOCK         equ	512	;# 
  3783   000201                     RA0PPS          equ	513	;# 
  3784   000202                     RA1PPS          equ	514	;# 
  3785   000203                     RA2PPS          equ	515	;# 
  3786   000204                     RA3PPS          equ	516	;# 
  3787   000205                     RA4PPS          equ	517	;# 
  3788   000206                     RA5PPS          equ	518	;# 
  3789   000207                     RA6PPS          equ	519	;# 
  3790   000208                     RA7PPS          equ	520	;# 
  3791   000209                     RB0PPS          equ	521	;# 
  3792   00020A                     RB1PPS          equ	522	;# 
  3793   00020B                     RB2PPS          equ	523	;# 
  3794   00020C                     RB3PPS          equ	524	;# 
  3795   00020D                     RB4PPS          equ	525	;# 
  3796   00020E                     RB5PPS          equ	526	;# 
  3797   00020F                     RB6PPS          equ	527	;# 
  3798   000210                     RB7PPS          equ	528	;# 
  3799   000211                     RC0PPS          equ	529	;# 
  3800   000212                     RC1PPS          equ	530	;# 
  3801   000213                     RC2PPS          equ	531	;# 
  3802   000214                     RC3PPS          equ	532	;# 
  3803   000215                     RC4PPS          equ	533	;# 
  3804   000216                     RC5PPS          equ	534	;# 
  3805   000217                     RC6PPS          equ	535	;# 
  3806   000218                     RC7PPS          equ	536	;# 
  3807   000219                     RD0PPS          equ	537	;# 
  3808   00021A                     RD1PPS          equ	538	;# 
  3809   00021B                     RD2PPS          equ	539	;# 
  3810   00021C                     RD3PPS          equ	540	;# 
  3811   00021D                     RD4PPS          equ	541	;# 
  3812   00021E                     RD5PPS          equ	542	;# 
  3813   00021F                     RD6PPS          equ	543	;# 
  3814   000220                     RD7PPS          equ	544	;# 
  3815   000221                     RE0PPS          equ	545	;# 
  3816   000222                     RE1PPS          equ	546	;# 
  3817   000223                     RE2PPS          equ	547	;# 
  3818   00023E                     INT0PPS         equ	574	;# 
  3819   00023F                     INT1PPS         equ	575	;# 
  3820   000240                     INT2PPS         equ	576	;# 
  3821   000241                     T0CKIPPS        equ	577	;# 
  3822   000242                     T1CKIPPS        equ	578	;# 
  3823   000243                     T1GPPS          equ	579	;# 
  3824   000244                     T3CKIPPS        equ	580	;# 
  3825   000245                     T3GPPS          equ	581	;# 
  3826   000246                     T5CKIPPS        equ	582	;# 
  3827   000247                     T5GPPS          equ	583	;# 
  3828   000248                     T2INPPS         equ	584	;# 
  3829   000249                     T4INPPS         equ	585	;# 
  3830   00024A                     T6INPPS         equ	586	;# 
  3831   00024F                     CCP1PPS         equ	591	;# 
  3832   000250                     CCP2PPS         equ	592	;# 
  3833   000251                     CCP3PPS         equ	593	;# 
  3834   000253                     PWM1ERSPPS      equ	595	;# 
  3835   000254                     PWM2ERSPPS      equ	596	;# 
  3836   000255                     PWM3ERSPPS      equ	597	;# 
  3837   000257                     PWMIN0PPS       equ	599	;# 
  3838   000258                     PWMIN1PPS       equ	600	;# 
  3839   000259                     SMT1WINPPS      equ	601	;# 
  3840   00025A                     SMT1SIGPPS      equ	602	;# 
  3841   00025B                     CWG1PPS         equ	603	;# 
  3842   00025B                     CWG1INPPS       equ	603	;# 
  3843   00025C                     CWG2PPS         equ	604	;# 
  3844   00025C                     CWG2INPPS       equ	604	;# 
  3845   00025D                     CWG3PPS         equ	605	;# 
  3846   00025D                     CWG3INPPS       equ	605	;# 
  3847   00025E                     MD1CARLPPS      equ	606	;# 
  3848   00025E                     MDCARLPPS       equ	606	;# 
  3849   00025F                     MD1CARHPPS      equ	607	;# 
  3850   00025F                     MDCARHPPS       equ	607	;# 
  3851   000260                     MD1SRCPPS       equ	608	;# 
  3852   000260                     MDSRCPPS        equ	608	;# 
  3853   000261                     CLCIN0PPS       equ	609	;# 
  3854   000262                     CLCIN1PPS       equ	610	;# 
  3855   000263                     CLCIN2PPS       equ	611	;# 
  3856   000264                     CLCIN3PPS       equ	612	;# 
  3857   000265                     CLCIN4PPS       equ	613	;# 
  3858   000266                     CLCIN5PPS       equ	614	;# 
  3859   000267                     CLCIN6PPS       equ	615	;# 
  3860   000268                     CLCIN7PPS       equ	616	;# 
  3861   000269                     ADACTPPS        equ	617	;# 
  3862   00026A                     SPI1SCKPPS      equ	618	;# 
  3863   00026B                     SPI1SDIPPS      equ	619	;# 
  3864   00026C                     SPI1SSPPS       equ	620	;# 
  3865   00026D                     SPI2SCKPPS      equ	621	;# 
  3866   00026E                     SPI2SDIPPS      equ	622	;# 
  3867   00026F                     SPI2SSPPS       equ	623	;# 
  3868   000270                     I2C1SDAPPS      equ	624	;# 
  3869   000271                     I2C1SCLPPS      equ	625	;# 
  3870   000272                     U1RXPPS         equ	626	;# 
  3871   000273                     U1CTSPPS        equ	627	;# 
  3872   000274                     U2RXPPS         equ	628	;# 
  3873   000275                     U2CTSPPS        equ	629	;# 
  3874   000276                     U3RXPPS         equ	630	;# 
  3875   000277                     U3CTSPPS        equ	631	;# 
  3876   000278                     U4RXPPS         equ	632	;# 
  3877   000279                     U4CTSPPS        equ	633	;# 
  3878   00027A                     U5RXPPS         equ	634	;# 
  3879   00027B                     U5CTSPPS        equ	635	;# 
  3880   000286                     RC4I2C          equ	646	;# 
  3881   000287                     RC3I2C          equ	647	;# 
  3882   000288                     RB2I2C          equ	648	;# 
  3883   000289                     RB1I2C          equ	649	;# 
  3884   00028B                     I2C1RXB         equ	651	;# 
  3885   00028C                     I2C1TXB         equ	652	;# 
  3886   00028D                     I2C1CNT         equ	653	;# 
  3887   00028E                     I2C1ADB0        equ	654	;# 
  3888   00028F                     I2C1ADB1        equ	655	;# 
  3889   000290                     I2C1ADR0        equ	656	;# 
  3890   000291                     I2C1ADR1        equ	657	;# 
  3891   000292                     I2C1ADR2        equ	658	;# 
  3892   000293                     I2C1ADR3        equ	659	;# 
  3893   000294                     I2C1CON0        equ	660	;# 
  3894   000295                     I2C1CON1        equ	661	;# 
  3895   000296                     I2C1CON2        equ	662	;# 
  3896   000297                     I2C1ERR         equ	663	;# 
  3897   000298                     I2C1STAT0       equ	664	;# 
  3898   000299                     I2C1STAT1       equ	665	;# 
  3899   00029A                     I2C1PIR         equ	666	;# 
  3900   00029B                     I2C1PIE         equ	667	;# 
  3901   00029C                     I2C1CLK         equ	668	;# 
  3902   00029D                     I2C1BTO         equ	669	;# 
  3903   0002A1                     U1RXB           equ	673	;# 
  3904   0002A1                     U1RXBL          equ	673	;# 
  3905   0002A2                     U1RXCHK         equ	674	;# 
  3906   0002A3                     U1TXB           equ	675	;# 
  3907   0002A3                     U1TXBL          equ	675	;# 
  3908   0002A4                     U1TXCHK         equ	676	;# 
  3909   0002A5                     U1P1            equ	677	;# 
  3910   0002A5                     U1P1L           equ	677	;# 
  3911   0002A6                     U1P1H           equ	678	;# 
  3912   0002A7                     U1P2            equ	679	;# 
  3913   0002A7                     U1P2L           equ	679	;# 
  3914   0002A8                     U1P2H           equ	680	;# 
  3915   0002A9                     U1P3            equ	681	;# 
  3916   0002A9                     U1P3L           equ	681	;# 
  3917   0002AA                     U1P3H           equ	682	;# 
  3918   0002AB                     U1CON0          equ	683	;# 
  3919   0002AC                     U1CON1          equ	684	;# 
  3920   0002AD                     U1CON2          equ	685	;# 
  3921   0002AE                     U1BRG           equ	686	;# 
  3922   0002AE                     U1BRGL          equ	686	;# 
  3923   0002AF                     U1BRGH          equ	687	;# 
  3924   0002B0                     U1FIFO          equ	688	;# 
  3925   0002B1                     U1UIR           equ	689	;# 
  3926   0002B2                     U1ERRIR         equ	690	;# 
  3927   0002B3                     U1ERRIE         equ	691	;# 
  3928   0002B4                     U2RXB           equ	692	;# 
  3929   0002B4                     U2RXBL          equ	692	;# 
  3930   0002B6                     U2TXB           equ	694	;# 
  3931   0002B6                     U2TXBL          equ	694	;# 
  3932   0002B8                     U2P1            equ	696	;# 
  3933   0002B8                     U2P1L           equ	696	;# 
  3934   0002BA                     U2P2            equ	698	;# 
  3935   0002BA                     U2P2L           equ	698	;# 
  3936   0002BC                     U2P3            equ	700	;# 
  3937   0002BC                     U2P3L           equ	700	;# 
  3938   0002BE                     U2CON0          equ	702	;# 
  3939   0002BF                     U2CON1          equ	703	;# 
  3940   0002C0                     U2CON2          equ	704	;# 
  3941   0002C1                     U2BRG           equ	705	;# 
  3942   0002C1                     U2BRGL          equ	705	;# 
  3943   0002C2                     U2BRGH          equ	706	;# 
  3944   0002C3                     U2FIFO          equ	707	;# 
  3945   0002C4                     U2UIR           equ	708	;# 
  3946   0002C5                     U2ERRIR         equ	709	;# 
  3947   0002C6                     U2ERRIE         equ	710	;# 
  3948   0002C7                     U3RXB           equ	711	;# 
  3949   0002C7                     U3RXBL          equ	711	;# 
  3950   0002C9                     U3TXB           equ	713	;# 
  3951   0002C9                     U3TXBL          equ	713	;# 
  3952   0002CB                     U3P1            equ	715	;# 
  3953   0002CB                     U3P1L           equ	715	;# 
  3954   0002CD                     U3P2            equ	717	;# 
  3955   0002CD                     U3P2L           equ	717	;# 
  3956   0002CF                     U3P3            equ	719	;# 
  3957   0002CF                     U3P3L           equ	719	;# 
  3958   0002D1                     U3CON0          equ	721	;# 
  3959   0002D2                     U3CON1          equ	722	;# 
  3960   0002D3                     U3CON2          equ	723	;# 
  3961   0002D4                     U3BRG           equ	724	;# 
  3962   0002D4                     U3BRGL          equ	724	;# 
  3963   0002D5                     U3BRGH          equ	725	;# 
  3964   0002D6                     U3FIFO          equ	726	;# 
  3965   0002D7                     U3UIR           equ	727	;# 
  3966   0002D8                     U3ERRIR         equ	728	;# 
  3967   0002D9                     U3ERRIE         equ	729	;# 
  3968   0002DA                     U4RXB           equ	730	;# 
  3969   0002DA                     U4RXBL          equ	730	;# 
  3970   0002DC                     U4TXB           equ	732	;# 
  3971   0002DC                     U4TXBL          equ	732	;# 
  3972   0002DE                     U4P1            equ	734	;# 
  3973   0002DE                     U4P1L           equ	734	;# 
  3974   0002E0                     U4P2            equ	736	;# 
  3975   0002E0                     U4P2L           equ	736	;# 
  3976   0002E2                     U4P3            equ	738	;# 
  3977   0002E2                     U4P3L           equ	738	;# 
  3978   0002E4                     U4CON0          equ	740	;# 
  3979   0002E5                     U4CON1          equ	741	;# 
  3980   0002E6                     U4CON2          equ	742	;# 
  3981   0002E7                     U4BRG           equ	743	;# 
  3982   0002E7                     U4BRGL          equ	743	;# 
  3983   0002E8                     U4BRGH          equ	744	;# 
  3984   0002E9                     U4FIFO          equ	745	;# 
  3985   0002EA                     U4UIR           equ	746	;# 
  3986   0002EB                     U4ERRIR         equ	747	;# 
  3987   0002EC                     U4ERRIE         equ	748	;# 
  3988   0002ED                     U5RXB           equ	749	;# 
  3989   0002ED                     U5RXBL          equ	749	;# 
  3990   0002EF                     U5TXB           equ	751	;# 
  3991   0002EF                     U5TXBL          equ	751	;# 
  3992   0002F1                     U5P1            equ	753	;# 
  3993   0002F1                     U5P1L           equ	753	;# 
  3994   0002F3                     U5P2            equ	755	;# 
  3995   0002F3                     U5P2L           equ	755	;# 
  3996   0002F5                     U5P3            equ	757	;# 
  3997   0002F5                     U5P3L           equ	757	;# 
  3998   0002F7                     U5CON0          equ	759	;# 
  3999   0002F8                     U5CON1          equ	760	;# 
  4000   0002F9                     U5CON2          equ	761	;# 
  4001   0002FA                     U5BRG           equ	762	;# 
  4002   0002FA                     U5BRGL          equ	762	;# 
  4003   0002FB                     U5BRGH          equ	763	;# 
  4004   0002FC                     U5FIFO          equ	764	;# 
  4005   0002FD                     U5UIR           equ	765	;# 
  4006   0002FE                     U5ERRIR         equ	766	;# 
  4007   0002FF                     U5ERRIE         equ	767	;# 
  4008   000300                     SMT1TMR         equ	768	;# 
  4009   000300                     SMT1TMRL        equ	768	;# 
  4010   000301                     SMT1TMRH        equ	769	;# 
  4011   000302                     SMT1TMRU        equ	770	;# 
  4012   000303                     SMT1CPR         equ	771	;# 
  4013   000303                     SMT1CPRL        equ	771	;# 
  4014   000304                     SMT1CPRH        equ	772	;# 
  4015   000305                     SMT1CPRU        equ	773	;# 
  4016   000306                     SMT1CPW         equ	774	;# 
  4017   000306                     SMT1CPWL        equ	774	;# 
  4018   000307                     SMT1CPWH        equ	775	;# 
  4019   000308                     SMT1CPWU        equ	776	;# 
  4020   000309                     SMT1PR          equ	777	;# 
  4021   000309                     SMT1PRL         equ	777	;# 
  4022   00030A                     SMT1PRH         equ	778	;# 
  4023   00030B                     SMT1PRU         equ	779	;# 
  4024   00030C                     SMT1CON0        equ	780	;# 
  4025   00030D                     SMT1CON1        equ	781	;# 
  4026   00030E                     SMT1STAT        equ	782	;# 
  4027   00030F                     SMT1CLK         equ	783	;# 
  4028   000310                     SMT1SIG         equ	784	;# 
  4029   000311                     SMT1WIN         equ	785	;# 
  4030   000318                     TMR0L           equ	792	;# 
  4031   000318                     TMR0            equ	792	;# 
  4032   000319                     TMR0H           equ	793	;# 
  4033   000319                     PR0             equ	793	;# 
  4034   00031A                     T0CON0          equ	794	;# 
  4035   00031B                     T0CON1          equ	795	;# 
  4036   00031C                     TMR1            equ	796	;# 
  4037   00031C                     TMR1L           equ	796	;# 
  4038   00031D                     TMR1H           equ	797	;# 
  4039   00031E                     T1CON           equ	798	;# 
  4040   00031E                     TMR1CON         equ	798	;# 
  4041   00031F                     T1GCON          equ	799	;# 
  4042   00031F                     TMR1GCON        equ	799	;# 
  4043   000320                     T1GATE          equ	800	;# 
  4044   000320                     TMR1GATE        equ	800	;# 
  4045   000321                     T1CLK           equ	801	;# 
  4046   000321                     TMR1CLK         equ	801	;# 
  4047   000321                     PR1             equ	801	;# 
  4048   000322                     T2TMR           equ	802	;# 
  4049   000322                     TMR2            equ	802	;# 
  4050   000323                     T2PR            equ	803	;# 
  4051   000323                     PR2             equ	803	;# 
  4052   000324                     T2CON           equ	804	;# 
  4053   000325                     T2HLT           equ	805	;# 
  4054   000326                     T2CLKCON        equ	806	;# 
  4055   000326                     T2CLK           equ	806	;# 
  4056   000327                     T2RST           equ	807	;# 
  4057   000328                     TMR3            equ	808	;# 
  4058   000328                     TMR3L           equ	808	;# 
  4059   000329                     TMR3H           equ	809	;# 
  4060   00032A                     T3CON           equ	810	;# 
  4061   00032A                     TMR3CON         equ	810	;# 
  4062   00032B                     T3GCON          equ	811	;# 
  4063   00032B                     TMR3GCON        equ	811	;# 
  4064   00032C                     T3GATE          equ	812	;# 
  4065   00032C                     TMR3GATE        equ	812	;# 
  4066   00032D                     T3CLK           equ	813	;# 
  4067   00032D                     TMR3CLK         equ	813	;# 
  4068   00032D                     PR3             equ	813	;# 
  4069   00032E                     T4TMR           equ	814	;# 
  4070   00032E                     TMR4            equ	814	;# 
  4071   00032F                     T4PR            equ	815	;# 
  4072   00032F                     PR4             equ	815	;# 
  4073   000330                     T4CON           equ	816	;# 
  4074   000331                     T4HLT           equ	817	;# 
  4075   000332                     T4CLKCON        equ	818	;# 
  4076   000332                     T4CLK           equ	818	;# 
  4077   000333                     T4RST           equ	819	;# 
  4078   000334                     TMR5            equ	820	;# 
  4079   000334                     TMR5L           equ	820	;# 
  4080   000335                     TMR5H           equ	821	;# 
  4081   000336                     T5CON           equ	822	;# 
  4082   000336                     TMR5CON         equ	822	;# 
  4083   000337                     T5GCON          equ	823	;# 
  4084   000337                     TMR5GCON        equ	823	;# 
  4085   000338                     T5GATE          equ	824	;# 
  4086   000338                     TMR5GATE        equ	824	;# 
  4087   000339                     T5CLK           equ	825	;# 
  4088   000339                     TMR5CLK         equ	825	;# 
  4089   000339                     PR5             equ	825	;# 
  4090   00033A                     T6TMR           equ	826	;# 
  4091   00033A                     TMR6            equ	826	;# 
  4092   00033B                     T6PR            equ	827	;# 
  4093   00033B                     PR6             equ	827	;# 
  4094   00033C                     T6CON           equ	828	;# 
  4095   00033D                     T6HLT           equ	829	;# 
  4096   00033E                     T6CLKCON        equ	830	;# 
  4097   00033E                     T6CLK           equ	830	;# 
  4098   00033F                     T6RST           equ	831	;# 
  4099   000340                     CCPR1           equ	832	;# 
  4100   000340                     CCPR1L          equ	832	;# 
  4101   000341                     CCPR1H          equ	833	;# 
  4102   000342                     CCP1CON         equ	834	;# 
  4103   000343                     CCP1CAP         equ	835	;# 
  4104   000344                     CCPR2           equ	836	;# 
  4105   000344                     CCPR2L          equ	836	;# 
  4106   000345                     CCPR2H          equ	837	;# 
  4107   000346                     CCP2CON         equ	838	;# 
  4108   000347                     CCP2CAP         equ	839	;# 
  4109   000348                     CCPR3           equ	840	;# 
  4110   000348                     CCPR3L          equ	840	;# 
  4111   000349                     CCPR3H          equ	841	;# 
  4112   00034A                     CCP3CON         equ	842	;# 
  4113   00034B                     CCP3CAP         equ	843	;# 
  4114   00034C                     CCPTMRS0        equ	844	;# 
  4115   00034F                     CRCDATA         equ	847	;# 
  4116   00034F                     CRCDATL         equ	847	;# 
  4117   000350                     CRCDATH         equ	848	;# 
  4118   000351                     CRCACC          equ	849	;# 
  4119   000351                     CRCACCL         equ	849	;# 
  4120   000352                     CRCACCH         equ	850	;# 
  4121   000353                     CRCSHFT         equ	851	;# 
  4122   000353                     CRCSHIFTL       equ	851	;# 
  4123   000354                     CRCSHIFTH       equ	852	;# 
  4124   000355                     CRCXOR          equ	853	;# 
  4125   000355                     CRCXORL         equ	853	;# 
  4126   000356                     CRCXORH         equ	854	;# 
  4127   000357                     CRCCON0         equ	855	;# 
  4128   000358                     CRCCON1         equ	856	;# 
  4129   00035A                     SCANLADR        equ	858	;# 
  4130   00035A                     SCANLADRL       equ	858	;# 
  4131   00035B                     SCANLADRH       equ	859	;# 
  4132   00035C                     SCANLADRU       equ	860	;# 
  4133   00035D                     SCANHADR        equ	861	;# 
  4134   00035D                     SCANHADRL       equ	861	;# 
  4135   00035E                     SCANHADRH       equ	862	;# 
  4136   00035F                     SCANHADRU       equ	863	;# 
  4137   000360                     SCANCON0        equ	864	;# 
  4138   000361                     SCANTRIG        equ	865	;# 
  4139   000362                     IPR0            equ	866	;# 
  4140   000363                     IPR1            equ	867	;# 
  4141   000364                     IPR2            equ	868	;# 
  4142   000365                     IPR3            equ	869	;# 
  4143   000366                     IPR4            equ	870	;# 
  4144   000367                     IPR5            equ	871	;# 
  4145   000368                     IPR6            equ	872	;# 
  4146   000369                     IPR7            equ	873	;# 
  4147   00036A                     IPR8            equ	874	;# 
  4148   00036B                     IPR9            equ	875	;# 
  4149   00036C                     IPR10           equ	876	;# 
  4150   00036D                     IPR11           equ	877	;# 
  4151   00036E                     IPR12           equ	878	;# 
  4152   00036F                     IPR13           equ	879	;# 
  4153   000370                     IPR14           equ	880	;# 
  4154   000371                     IPR15           equ	881	;# 
  4155   000373                     STATUS_CSHAD    equ	883	;# 
  4156   000374                     WREG_CSHAD      equ	884	;# 
  4157   000375                     BSR_CSHAD       equ	885	;# 
  4158   000376                     SHADCON         equ	886	;# 
  4159   000377                     STATUS_SHAD     equ	887	;# 
  4160   000378                     WREG_SHAD       equ	888	;# 
  4161   000379                     BSR_SHAD        equ	889	;# 
  4162   00037A                     PCLATH_SHAD     equ	890	;# 
  4163   00037B                     PCLATU_SHAD     equ	891	;# 
  4164   00037C                     FSR0SH          equ	892	;# 
  4165   00037C                     FSR0L_SHAD      equ	892	;# 
  4166   00037D                     FSR0H_SHAD      equ	893	;# 
  4167   00037E                     FSR1SH          equ	894	;# 
  4168   00037E                     FSR1L_SHAD      equ	894	;# 
  4169   00037F                     FSR1H_SHAD      equ	895	;# 
  4170   000380                     FSR2SH          equ	896	;# 
  4171   000380                     FSR2L_SHAD      equ	896	;# 
  4172   000381                     FSR2H_SHAD      equ	897	;# 
  4173   000382                     PRODSH          equ	898	;# 
  4174   000382                     PRODL_SHAD      equ	898	;# 
  4175   000383                     PRODH_SHAD      equ	899	;# 
  4176   0003BC                     CWG1CLK         equ	956	;# 
  4177   0003BC                     CWG1CLKCON      equ	956	;# 
  4178   0003BD                     CWG1ISM         equ	957	;# 
  4179   0003BD                     CWG1DAT         equ	957	;# 
  4180   0003BE                     CWG1DBR         equ	958	;# 
  4181   0003BF                     CWG1DBF         equ	959	;# 
  4182   0003C0                     CWG1CON0        equ	960	;# 
  4183   0003C1                     CWG1CON1        equ	961	;# 
  4184   0003C2                     CWG1AS0         equ	962	;# 
  4185   0003C3                     CWG1AS1         equ	963	;# 
  4186   0003C4                     CWG1STR         equ	964	;# 
  4187   0003C5                     CWG2CLK         equ	965	;# 
  4188   0003C5                     CWG2CLKCON      equ	965	;# 
  4189   0003C6                     CWG2ISM         equ	966	;# 
  4190   0003C6                     CWG2DAT         equ	966	;# 
  4191   0003C7                     CWG2DBR         equ	967	;# 
  4192   0003C8                     CWG2DBF         equ	968	;# 
  4193   0003C9                     CWG2CON0        equ	969	;# 
  4194   0003CA                     CWG2CON1        equ	970	;# 
  4195   0003CB                     CWG2AS0         equ	971	;# 
  4196   0003CC                     CWG2AS1         equ	972	;# 
  4197   0003CD                     CWG2STR         equ	973	;# 
  4198   0003CE                     CWG3CLK         equ	974	;# 
  4199   0003CE                     CWG3CLKCON      equ	974	;# 
  4200   0003CF                     CWG3ISM         equ	975	;# 
  4201   0003CF                     CWG3DAT         equ	975	;# 
  4202   0003D0                     CWG3DBR         equ	976	;# 
  4203   0003D1                     CWG3DBF         equ	977	;# 
  4204   0003D2                     CWG3CON0        equ	978	;# 
  4205   0003D3                     CWG3CON1        equ	979	;# 
  4206   0003D4                     CWG3AS0         equ	980	;# 
  4207   0003D5                     CWG3AS1         equ	981	;# 
  4208   0003D6                     CWG3STR         equ	982	;# 
  4209   0003D7                     FVRCON          equ	983	;# 
  4210   0003D8                     ADCPCON         equ	984	;# 
  4211   0003D8                     ADCP            equ	984	;# 
  4212   0003D9                     ADLTH           equ	985	;# 
  4213   0003D9                     ADLTHL          equ	985	;# 
  4214   0003DA                     ADLTHH          equ	986	;# 
  4215   0003DB                     ADUTH           equ	987	;# 
  4216   0003DB                     ADUTHL          equ	987	;# 
  4217   0003DC                     ADUTHH          equ	988	;# 
  4218   0003DD                     ADERR           equ	989	;# 
  4219   0003DD                     ADERRL          equ	989	;# 
  4220   0003DE                     ADERRH          equ	990	;# 
  4221   0003DF                     ADSTPT          equ	991	;# 
  4222   0003DF                     ADSTPTL         equ	991	;# 
  4223   0003E0                     ADSTPTH         equ	992	;# 
  4224   0003E1                     ADFLTR          equ	993	;# 
  4225   0003E1                     ADFLTRL         equ	993	;# 
  4226   0003E2                     ADFLTRH         equ	994	;# 
  4227   0003E3                     ADACC           equ	995	;# 
  4228   0003E3                     ADACCL          equ	995	;# 
  4229   0003E4                     ADACCH          equ	996	;# 
  4230   0003E5                     ADACCU          equ	997	;# 
  4231   0003E6                     ADCNT           equ	998	;# 
  4232   0003E7                     ADRPT           equ	999	;# 
  4233   0003E8                     ADPREV          equ	1000	;# 
  4234   0003E8                     ADPREVL         equ	1000	;# 
  4235   0003E9                     ADPREVH         equ	1001	;# 
  4236   0003EA                     ADRES           equ	1002	;# 
  4237   0003EA                     ADRESL          equ	1002	;# 
  4238   0003EB                     ADRESH          equ	1003	;# 
  4239   0003EC                     ADPCH           equ	1004	;# 
  4240   0003EE                     ADACQ           equ	1006	;# 
  4241   0003EE                     ADACQL          equ	1006	;# 
  4242   0003EF                     ADACQH          equ	1007	;# 
  4243   0003F0                     ADCAP           equ	1008	;# 
  4244   0003F1                     ADPRE           equ	1009	;# 
  4245   0003F1                     ADPREL          equ	1009	;# 
  4246   0003F2                     ADPREH          equ	1010	;# 
  4247   0003F3                     ADCON0          equ	1011	;# 
  4248   0003F4                     ADCON1          equ	1012	;# 
  4249   0003F5                     ADCON2          equ	1013	;# 
  4250   0003F6                     ADCON3          equ	1014	;# 
  4251   0003F7                     ADSTAT          equ	1015	;# 
  4252   0003F8                     ADREF           equ	1016	;# 
  4253   0003F9                     ADACT           equ	1017	;# 
  4254   0003FA                     ADCLK           equ	1018	;# 
  4255   000400                     ANSELA          equ	1024	;# 
  4256   000401                     WPUA            equ	1025	;# 
  4257   000402                     ODCONA          equ	1026	;# 
  4258   000403                     SLRCONA         equ	1027	;# 
  4259   000404                     INLVLA          equ	1028	;# 
  4260   000405                     IOCAP           equ	1029	;# 
  4261   000406                     IOCAN           equ	1030	;# 
  4262   000407                     IOCAF           equ	1031	;# 
  4263   000408                     ANSELB          equ	1032	;# 
  4264   000409                     WPUB            equ	1033	;# 
  4265   00040A                     ODCONB          equ	1034	;# 
  4266   00040B                     SLRCONB         equ	1035	;# 
  4267   00040C                     INLVLB          equ	1036	;# 
  4268   00040D                     IOCBP           equ	1037	;# 
  4269   00040E                     IOCBN           equ	1038	;# 
  4270   00040F                     IOCBF           equ	1039	;# 
  4271   000410                     ANSELC          equ	1040	;# 
  4272   000411                     WPUC            equ	1041	;# 
  4273   000412                     ODCONC          equ	1042	;# 
  4274   000413                     SLRCONC         equ	1043	;# 
  4275   000414                     INLVLC          equ	1044	;# 
  4276   000415                     IOCCP           equ	1045	;# 
  4277   000416                     IOCCN           equ	1046	;# 
  4278   000417                     IOCCF           equ	1047	;# 
  4279   000418                     ANSELD          equ	1048	;# 
  4280   000419                     WPUD            equ	1049	;# 
  4281   00041A                     ODCOND          equ	1050	;# 
  4282   00041B                     SLRCOND         equ	1051	;# 
  4283   00041C                     INLVLD          equ	1052	;# 
  4284   000420                     ANSELE          equ	1056	;# 
  4285   000421                     WPUE            equ	1057	;# 
  4286   000422                     ODCONE          equ	1058	;# 
  4287   000423                     SLRCONE         equ	1059	;# 
  4288   000424                     INLVLE          equ	1060	;# 
  4289   000425                     IOCEP           equ	1061	;# 
  4290   000426                     IOCEN           equ	1062	;# 
  4291   000427                     IOCEF           equ	1063	;# 
  4292   000440                     NCO1ACC         equ	1088	;# 
  4293   000440                     NCO1ACCL        equ	1088	;# 
  4294   000441                     NCO1ACCH        equ	1089	;# 
  4295   000442                     NCO1ACCU        equ	1090	;# 
  4296   000443                     NCO1INC         equ	1091	;# 
  4297   000443                     NCO1INCL        equ	1091	;# 
  4298   000444                     NCO1INCH        equ	1092	;# 
  4299   000445                     NCO1INCU        equ	1093	;# 
  4300   000446                     NCO1CON         equ	1094	;# 
  4301   000447                     NCO1CLK         equ	1095	;# 
  4302   000448                     NCO2ACC         equ	1096	;# 
  4303   000448                     NCO2ACCL        equ	1096	;# 
  4304   000449                     NCO2ACCH        equ	1097	;# 
  4305   00044A                     NCO2ACCU        equ	1098	;# 
  4306   00044B                     NCO2INC         equ	1099	;# 
  4307   00044B                     NCO2INCL        equ	1099	;# 
  4308   00044C                     NCO2INCH        equ	1100	;# 
  4309   00044D                     NCO2INCU        equ	1101	;# 
  4310   00044E                     NCO2CON         equ	1102	;# 
  4311   00044F                     NCO2CLK         equ	1103	;# 
  4312   000450                     NCO3ACC         equ	1104	;# 
  4313   000450                     NCO3ACCL        equ	1104	;# 
  4314   000451                     NCO3ACCH        equ	1105	;# 
  4315   000452                     NCO3ACCU        equ	1106	;# 
  4316   000453                     NCO3INC         equ	1107	;# 
  4317   000453                     NCO3INCL        equ	1107	;# 
  4318   000454                     NCO3INCH        equ	1108	;# 
  4319   000455                     NCO3INCU        equ	1109	;# 
  4320   000456                     NCO3CON         equ	1110	;# 
  4321   000457                     NCO3CLK         equ	1111	;# 
  4322   000459                     IVTLOCK         equ	1113	;# 
  4323   00045A                     IVTAD           equ	1114	;# 
  4324   00045A                     IVTADL          equ	1114	;# 
  4325   00045B                     IVTADH          equ	1115	;# 
  4326   00045C                     IVTADU          equ	1116	;# 
  4327   00045D                     IVTBASE         equ	1117	;# 
  4328   00045D                     IVTBASEL        equ	1117	;# 
  4329   00045E                     IVTBASEH        equ	1118	;# 
  4330   00045F                     IVTBASEU        equ	1119	;# 
  4331   000460                     PWM1ERS         equ	1120	;# 
  4332   000461                     PWM1CLK         equ	1121	;# 
  4333   000462                     PWM1LDS         equ	1122	;# 
  4334   000463                     PWM1PR          equ	1123	;# 
  4335   000463                     PWM1PRL         equ	1123	;# 
  4336   000464                     PWM1PRH         equ	1124	;# 
  4337   000465                     PWM1CPRE        equ	1125	;# 
  4338   000466                     PWM1PIPOS       equ	1126	;# 
  4339   000467                     PWM1GIR         equ	1127	;# 
  4340   000468                     PWM1GIE         equ	1128	;# 
  4341   000469                     PWM1CON         equ	1129	;# 
  4342   00046A                     PWM1S1CFG       equ	1130	;# 
  4343   00046B                     PWM1S1P1        equ	1131	;# 
  4344   00046B                     PWM1S1P1L       equ	1131	;# 
  4345   00046C                     PWM1S1P1H       equ	1132	;# 
  4346   00046D                     PWM1S1P2        equ	1133	;# 
  4347   00046D                     PWM1S1P2L       equ	1133	;# 
  4348   00046E                     PWM1S1P2H       equ	1134	;# 
  4349   00046F                     PWM2ERS         equ	1135	;# 
  4350   000470                     PWM2CLK         equ	1136	;# 
  4351   000471                     PWM2LDS         equ	1137	;# 
  4352   000472                     PWM2PR          equ	1138	;# 
  4353   000472                     PWM2PRL         equ	1138	;# 
  4354   000473                     PWM2PRH         equ	1139	;# 
  4355   000474                     PWM2CPRE        equ	1140	;# 
  4356   000475                     PWM2PIPOS       equ	1141	;# 
  4357   000476                     PWM2GIR         equ	1142	;# 
  4358   000477                     PWM2GIE         equ	1143	;# 
  4359   000478                     PWM2CON         equ	1144	;# 
  4360   000479                     PWM2S1CFG       equ	1145	;# 
  4361   00047A                     PWM2S1P1        equ	1146	;# 
  4362   00047A                     PWM2S1P1L       equ	1146	;# 
  4363   00047B                     PWM2S1P1H       equ	1147	;# 
  4364   00047C                     PWM2S1P2        equ	1148	;# 
  4365   00047C                     PWM2S1P2L       equ	1148	;# 
  4366   00047D                     PWM2S1P2H       equ	1149	;# 
  4367   00047E                     PWM3ERS         equ	1150	;# 
  4368   00047F                     PWM3CLK         equ	1151	;# 
  4369   000480                     PWM3LDS         equ	1152	;# 
  4370   000481                     PWM3PR          equ	1153	;# 
  4371   000481                     PWM3PRL         equ	1153	;# 
  4372   000482                     PWM3PRH         equ	1154	;# 
  4373   000483                     PWM3CPRE        equ	1155	;# 
  4374   000484                     PWM3PIPOS       equ	1156	;# 
  4375   000485                     PWM3GIR         equ	1157	;# 
  4376   000486                     PWM3GIE         equ	1158	;# 
  4377   000487                     PWM3CON         equ	1159	;# 
  4378   000488                     PWM3S1CFG       equ	1160	;# 
  4379   000489                     PWM3S1P1        equ	1161	;# 
  4380   000489                     PWM3S1P1L       equ	1161	;# 
  4381   00048A                     PWM3S1P1H       equ	1162	;# 
  4382   00048B                     PWM3S1P2        equ	1163	;# 
  4383   00048B                     PWM3S1P2L       equ	1163	;# 
  4384   00048C                     PWM3S1P2H       equ	1164	;# 
  4385   00049C                     PWMLOAD         equ	1180	;# 
  4386   00049D                     PWMEN           equ	1181	;# 
  4387   00049E                     PIE0            equ	1182	;# 
  4388   00049F                     PIE1            equ	1183	;# 
  4389   0004A0                     PIE2            equ	1184	;# 
  4390   0004A1                     PIE3            equ	1185	;# 
  4391   0004A2                     PIE4            equ	1186	;# 
  4392   0004A3                     PIE5            equ	1187	;# 
  4393   0004A4                     PIE6            equ	1188	;# 
  4394   0004A5                     PIE7            equ	1189	;# 
  4395   0004A6                     PIE8            equ	1190	;# 
  4396   0004A7                     PIE9            equ	1191	;# 
  4397   0004A8                     PIE10           equ	1192	;# 
  4398   0004A9                     PIE11           equ	1193	;# 
  4399   0004AA                     PIE12           equ	1194	;# 
  4400   0004AB                     PIE13           equ	1195	;# 
  4401   0004AC                     PIE14           equ	1196	;# 
  4402   0004AD                     PIE15           equ	1197	;# 
  4403   0004AE                     PIR0            equ	1198	;# 
  4404   0004AF                     PIR1            equ	1199	;# 
  4405   0004B0                     PIR2            equ	1200	;# 
  4406   0004B1                     PIR3            equ	1201	;# 
  4407   0004B2                     PIR4            equ	1202	;# 
  4408   0004B3                     PIR5            equ	1203	;# 
  4409   0004B4                     PIR6            equ	1204	;# 
  4410   0004B5                     PIR7            equ	1205	;# 
  4411   0004B6                     PIR8            equ	1206	;# 
  4412   0004B7                     PIR9            equ	1207	;# 
  4413   0004B8                     PIR10           equ	1208	;# 
  4414   0004B9                     PIR11           equ	1209	;# 
  4415   0004BA                     PIR12           equ	1210	;# 
  4416   0004BB                     PIR13           equ	1211	;# 
  4417   0004BC                     PIR14           equ	1212	;# 
  4418   0004BD                     PIR15           equ	1213	;# 
  4419   0004BE                     LATA            equ	1214	;# 
  4420   0004BF                     LATB            equ	1215	;# 
  4421   0004C0                     LATC            equ	1216	;# 
  4422   0004C1                     LATD            equ	1217	;# 
  4423   0004C2                     LATE            equ	1218	;# 
  4424   0004C6                     TRISA           equ	1222	;# 
  4425   0004C7                     TRISB           equ	1223	;# 
  4426   0004C8                     TRISC           equ	1224	;# 
  4427   0004C9                     TRISD           equ	1225	;# 
  4428   0004CA                     TRISE           equ	1226	;# 
  4429   0004CE                     PORTA           equ	1230	;# 
  4430   0004CF                     PORTB           equ	1231	;# 
  4431   0004D0                     PORTC           equ	1232	;# 
  4432   0004D1                     PORTD           equ	1233	;# 
  4433   0004D2                     PORTE           equ	1234	;# 
  4434   0004D6                     INTCON0         equ	1238	;# 
  4435   0004D7                     INTCON1         equ	1239	;# 
  4436   0004D8                     STATUS          equ	1240	;# 
  4437   0004D9                     FSR2            equ	1241	;# 
  4438   0004D9                     FSR2L           equ	1241	;# 
  4439   0004DA                     FSR2H           equ	1242	;# 
  4440   0004DB                     PLUSW2          equ	1243	;# 
  4441   0004DC                     PREINC2         equ	1244	;# 
  4442   0004DD                     POSTDEC2        equ	1245	;# 
  4443   0004DE                     POSTINC2        equ	1246	;# 
  4444   0004DF                     INDF2           equ	1247	;# 
  4445   0004E0                     BSR             equ	1248	;# 
  4446   0004E1                     FSR1            equ	1249	;# 
  4447   0004E1                     FSR1L           equ	1249	;# 
  4448   0004E2                     FSR1H           equ	1250	;# 
  4449   0004E3                     PLUSW1          equ	1251	;# 
  4450   0004E4                     PREINC1         equ	1252	;# 
  4451   0004E5                     POSTDEC1        equ	1253	;# 
  4452   0004E6                     POSTINC1        equ	1254	;# 
  4453   0004E7                     INDF1           equ	1255	;# 
  4454   0004E8                     WREG            equ	1256	;# 
  4455   0004E9                     FSR0            equ	1257	;# 
  4456   0004E9                     FSR0L           equ	1257	;# 
  4457   0004EA                     FSR0H           equ	1258	;# 
  4458   0004EB                     PLUSW0          equ	1259	;# 
  4459   0004EC                     PREINC0         equ	1260	;# 
  4460   0004ED                     POSTDEC0        equ	1261	;# 
  4461   0004EE                     POSTINC0        equ	1262	;# 
  4462   0004EF                     INDF0           equ	1263	;# 
  4463   0004F0                     PCON0           equ	1264	;# 
  4464   0004F1                     PCON1           equ	1265	;# 
  4465   0004F2                     CPUDOZE         equ	1266	;# 
  4466   0004F3                     PROD            equ	1267	;# 
  4467   0004F3                     PRODL           equ	1267	;# 
  4468   0004F4                     PRODH           equ	1268	;# 
  4469   0004F5                     TABLAT          equ	1269	;# 
  4470   0004F6                     TBLPTR          equ	1270	;# 
  4471   0004F6                     TBLPTRL         equ	1270	;# 
  4472   0004F7                     TBLPTRH         equ	1271	;# 
  4473   0004F8                     TBLPTRU         equ	1272	;# 
  4474   0004F9                     PCLAT           equ	1273	;# 
  4475   0004F9                     PCL             equ	1273	;# 
  4476   0004FA                     PCLATH          equ	1274	;# 
  4477   0004FB                     PCLATU          equ	1275	;# 
  4478   0004FC                     STKPTR          equ	1276	;# 
  4479   0004FD                     TOS             equ	1277	;# 
  4480   0004FD                     TOSL            equ	1277	;# 
  4481   0004FE                     TOSH            equ	1278	;# 
  4482   0004FF                     TOSU            equ	1279	;# 
  4483                           
  4484                           	psect	idataBANK7
  4485   00018A                     __pidataBANK7:
  4486                           	callstack 0
  4487                           
  4488                           ;initializer for _t_conf
  4489   00018A  58                 	db	low STR_52
  4490   00018B  FF                 	db	high STR_52
  4491   00018C  DF                 	db	low _clk_fs
  4492   00018D  07                 	db	high _clk_fs
  4493   00018E  60                 	db	low STR_53
  4494   00018F  FF                 	db	high STR_53
  4495   000190  DB                 	db	low _bioreq_ubuffadr
  4496   000191  07                 	db	high _bioreq_ubuffadr
  4497                           
  4498                           ;initializer for _start_lba
  4499   000192  FFFF               	dw	65535
  4500   000194  FFFF               	dw	65535
  4501                           
  4502                           ;initializer for _mon16
  4503   000196  E3                 	db	low STR_51
  4504   000197  FE                 	db	high STR_51
  4505                           
  4506                           ;initializer for _mon02
  4507   000198  D8                 	db	low STR_50
  4508   000199  FE                 	db	high STR_50
  4509                           
  4510                           ;initializer for _conf16
  4511   00019A  CD                 	db	low STR_49
  4512   00019B  FE                 	db	high STR_49
  4513                           
  4514                           ;initializer for _conf02
  4515   00019C  C2                 	db	low STR_48
  4516   00019D  FE                 	db	high STR_48
  4517                           
  4518                           ;initializer for _board_name
  4519   00019E  F7                 	db	low STR_47
  4520   00019F  F4                 	db	high STR_47
  4521                           
  4522                           ;initializer for _mezID
  4523   0001A0  50                 	db	low STR_46
  4524   0001A1  FF                 	db	high STR_46
  4525                           
  4526                           ;initializer for _SPI_SD_ctx
  4527   0001A2  CF                 	db	low _pic18f47q43_spi_ctx
  4528   0001A3  08                 	db	high _pic18f47q43_spi_ctx
  4529                           
  4530                           	psect	idataBANK8
  4531   00024C                     __pidataBANK8:
  4532                           	callstack 0
  4533                           
  4534                           ;initializer for _strin_func
  4535   00024C  12                 	db	low _get_str
  4536   00024D  EE                 	db	high _get_str
  4537   00024E  01                 	db	low (_get_str shr (0+16))
  4538   00024F  E0                 	db	low _str_inf
  4539   000250  A8                 	db	high _str_inf
  4540   000251  01                 	db	low (_str_inf shr (0+16))
  4541                           
  4542                           ;initializer for _get_char
  4543   000252  4C                 	db	low _u_getch
  4544   000253  F5                 	db	high _u_getch
  4545   000254  01                 	db	low (_u_getch shr (0+16))
  4546   000255  A6                 	db	low _in_file
  4547   000256  BF                 	db	high _in_file
  4548   000257  01                 	db	low (_in_file shr (0+16))
  4549                           
  4550                           	psect	idataBANK9
  4551   01F05E                     __pidataBANK9:
  4552                           	callstack 0
  4553                           
  4554                           ;initializer for _cmd
  4555   01F05E  F6                 	db	low STR_54
  4556   01F05F  FF                 	db	high STR_54
  4557   01F060  74                 	db	low _scan_files
  4558   01F061  98                 	db	high _scan_files
  4559   01F062  01                 	db	low (_scan_files shr (0+16))
  4560   01F063  E9                 	db	low STR_55
  4561   01F064  FF                 	db	high STR_55
  4562   01F065  06                 	db	low _scan_files1
  4563   01F066  96                 	db	high _scan_files1
  4564   01F067  01                 	db	low (_scan_files1 shr (0+16))
  4565   01F068  F3                 	db	low STR_56
  4566   01F069  FF                 	db	high STR_56
  4567   01F06A  3E                 	db	low _change_directory
  4568   01F06B  02                 	db	high _change_directory
  4569   01F06C  00                 	db	low (_change_directory shr (0+16))
  4570   01F06D  B2                 	db	low STR_57
  4571   01F06E  FF                 	db	high STR_57
  4572   01F06F  78                 	db	low _load_file
  4573   01F070  ED                 	db	high _load_file
  4574   01F071  01                 	db	low (_load_file shr (0+16))
  4575   01F072  77                 	db	low STR_58
  4576   01F073  FF                 	db	high STR_58
  4577   01F074  AC                 	db	low _restart_prog
  4578   01F075  E9                 	db	high _restart_prog
  4579   01F076  01                 	db	low (_restart_prog shr (0+16))
  4580   01F077  7E                 	db	low STR_59
  4581   01F078  FF                 	db	high STR_59
  4582   01F079  54                 	db	low _wstart_prog
  4583   01F07A  EA                 	db	high _wstart_prog
  4584   01F07B  01                 	db	low (_wstart_prog shr (0+16))
  4585   01F07C  B7                 	db	low STR_60
  4586   01F07D  FF                 	db	high STR_60
  4587   01F07E  2E                 	db	low _return_cpu
  4588   01F07F  02                 	db	high _return_cpu
  4589   01F080  00                 	db	low (_return_cpu shr (0+16))
  4590   01F081  E5                 	db	low STR_61
  4591   01F082  FF                 	db	high STR_61
  4592   01F083  B8                 	db	low _print_reg
  4593   01F084  AF                 	db	high _print_reg
  4594   01F085  01                 	db	low (_print_reg shr (0+16))
  4595   01F086  68                 	db	low STR_62
  4596   01F087  FF                 	db	high STR_62
  4597   01F088  3C                 	db	low _mon_prog
  4598   01F089  D7                 	db	high _mon_prog
  4599   01F08A  01                 	db	low (_mon_prog shr (0+16))
  4600   01F08B  97                 	db	low STR_63
  4601   01F08C  FF                 	db	high STR_63
  4602   01F08D  70                 	db	low _mem_dump
  4603   01F08E  F3                 	db	high _mem_dump
  4604   01F08F  01                 	db	low (_mem_dump shr (0+16))
  4605   01F090  C1                 	db	low STR_64
  4606   01F091  FF                 	db	high STR_64
  4607   01F092  D4                 	db	low _see_file
  4608   01F093  53                 	db	high _see_file
  4609   01F094  01                 	db	low (_see_file shr (0+16))
  4610   01F095  91                 	db	low STR_65
  4611   01F096  FF                 	db	high STR_65
  4612   01F097  42                 	db	low _flash_apl
  4613   01F098  FC                 	db	high _flash_apl
  4614   01F099  01                 	db	low (_flash_apl shr (0+16))
  4615   01F09A  BC                 	db	low STR_66
  4616   01F09B  FF                 	db	high STR_66
  4617   01F09C  D4                 	db	low _print_com
  4618   01F09D  E4                 	db	high _print_com
  4619   01F09E  01                 	db	low (_print_com shr (0+16))
  4620   01F09F  FC                 	db	low STR_67
  4621   01F0A0  FF                 	db	high STR_67
  4622   01F0A1  D4                 	db	low _print_com
  4623   01F0A2  E4                 	db	high _print_com
  4624   01F0A3  01                 	db	low (_print_com shr (0+16))
  4625   01F0A4  7B                 	db	low (STR_71+22)
  4626   01F0A5  FB                 	db	high (STR_71+22)
  4627   01F0A6  6E                 	db	low _boot_file
  4628   01F0A7  7C                 	db	high _boot_file
  4629   01F0A8  01                 	db	low (_boot_file shr (0+16))
  4630                           
  4631                           ;initializer for _cpm_drives
  4632   01F0A9  0080               	dw	128
  4633   01F0AB  00                 	db	0
  4634   01F0AC  00                 	db	0
  4635   01F0AD  0080               	dw	128
  4636   01F0AF  00                 	db	0
  4637   01F0B0  00                 	db	0
  4638   01F0B1  0080               	dw	128
  4639   01F0B3  00                 	db	0
  4640   01F0B4  00                 	db	0
  4641   01F0B5  0080               	dw	128
  4642   01F0B7  00                 	db	0
  4643   01F0B8  00                 	db	0
  4644   01F0B9  0000               	dw	0
  4645   01F0BB  00                 	db	0
  4646   01F0BC  00                 	db	0
  4647   01F0BD  0000               	dw	0
  4648   01F0BF  00                 	db	0
  4649   01F0C0  00                 	db	0
  4650   01F0C1  0000               	dw	0
  4651   01F0C3  00                 	db	0
  4652   01F0C4  00                 	db	0
  4653   01F0C5  0000               	dw	0
  4654   01F0C7  00                 	db	0
  4655   01F0C8  00                 	db	0
  4656   01F0C9  0000               	dw	0
  4657   01F0CB  00                 	db	0
  4658   01F0CC  00                 	db	0
  4659   01F0CD  0000               	dw	0
  4660   01F0CF  00                 	db	0
  4661   01F0D0  00                 	db	0
  4662   01F0D1  0000               	dw	0
  4663   01F0D3  00                 	db	0
  4664   01F0D4  00                 	db	0
  4665   01F0D5  0000               	dw	0
  4666   01F0D7  00                 	db	0
  4667   01F0D8  00                 	db	0
  4668   01F0D9  0000               	dw	0
  4669   01F0DB  00                 	db	0
  4670   01F0DC  00                 	db	0
  4671   01F0DD  0000               	dw	0
  4672   01F0DF  00                 	db	0
  4673   01F0E0  00                 	db	0
  4674   01F0E1  0000               	dw	0
  4675   01F0E3  00                 	db	0
  4676   01F0E4  00                 	db	0
  4677   01F0E5  4064               	dw	16484
  4678   01F0E7  00                 	db	0
  4679   01F0E8  00                 	db	0
  4680                           
  4681                           	psect	mediumconst
  4682   00F1E8                     __pmediumconst:
  4683                           	callstack 0
  4684   00F1E8  00                 	db	0
  4685   00F1E9                     _mtod:
  4686                           	callstack 0
  4687   00F1E9  001F               	dw	31
  4688   00F1EB  001C               	dw	28
  4689   00F1ED  001F               	dw	31
  4690   00F1EF  001E               	dw	30
  4691   00F1F1  001F               	dw	31
  4692   00F1F3  001E               	dw	30
  4693   00F1F5  001F               	dw	31
  4694   00F1F7  001F               	dw	31
  4695   00F1F9  001E               	dw	30
  4696   00F1FB  001F               	dw	31
  4697   00F1FD  001E               	dw	30
  4698   00F1FF  001F               	dw	31
  4699   00F201                     __end_of_mtod:
  4700                           	callstack 0
  4701   00F201                     _DbcTbl:
  4702                           	callstack 0
  4703   00F201  81                 	db	129
  4704   00F202  9F                 	db	159
  4705   00F203  E0                 	db	224
  4706   00F204  FC                 	db	252
  4707   00F205  40                 	db	64
  4708   00F206  7E                 	db	126
  4709   00F207  80                 	db	128
  4710   00F208  FC                 	db	252
  4711   00F209  00                 	db	0
  4712   00F20A  00                 	db	0
  4713   00F20B                     __end_of_DbcTbl:
  4714                           	callstack 0
  4715   00F20B  0000               	dw	0
  4716   00F20D                     __end_of_debug_flags@diskio$F4076:
  4717                           	callstack 0
  4718   00F20D  0000               	dw	0
  4719   00F20F                     __end_of_debug_flags:
  4720                           	callstack 0
  4721   00F20F                     _rom:
  4722                           	callstack 0
  4723   00F20F  38                 	db	56
  4724   00F210  FB                 	db	251
  4725   00F211  DB                 	db	219
  4726   00F212  FF                 	db	255
  4727   00F213  FF                 	db	255
  4728   00F214  FF                 	db	255
  4729   00F215  FF                 	db	255
  4730   00F216  FF                 	db	255
  4731   00F217  FF                 	db	255
  4732   00F218  FF                 	db	255
  4733   00F219  F2                 	db	242
  4734   00F21A  FF                 	db	255
  4735   00F21B  F0                 	db	240
  4736   00F21C  FF                 	db	255
  4737   00F21D  F2                 	db	242
  4738   00F21E  FF                 	db	255
  4739   00F21F                     __end_of_rom:
  4740                           	callstack 0
  4741   000080                     _SPI1RXB        set	128
  4742   000081                     _SPI1TXB        set	129
  4743   000082                     _SPI1TCNTL      set	130
  4744   000083                     _SPI1TCNTH      set	131
  4745   000089                     _SPI1BAUD       set	137
  4746   00008C                     _SPI1CLK        set	140
  4747   000086                     _SPI1CON2bits   set	134
  4748   000085                     _SPI1CON1bits   set	133
  4749   00008B                     _SPI1INTE       set	139
  4750   000088                     _SPI1TWIDTH     set	136
  4751   000084                     _SPI1CON0bits   set	132
  4752   000085                     _SPI1CON1       set	133
  4753   000084                     _SPI1CON0       set	132
  4754   0000D6                     _CLCnCON        set	214
  4755   0000D7                     _CLCnPOL        set	215
  4756   0000DF                     _CLCnGLS3       set	223
  4757   0000DE                     _CLCnGLS2       set	222
  4758   0000DD                     _CLCnGLS1       set	221
  4759   0000DC                     _CLCnGLS0       set	220
  4760   0000DB                     _CLCnSEL3       set	219
  4761   0000DA                     _CLCnSEL2       set	218
  4762   0000D9                     _CLCnSEL1       set	217
  4763   0000D8                     _CLCnSEL0       set	216
  4764   0000B1                     _OSCFRQ         set	177
  4765   0000D5                     _CLCSELECT      set	213
  4766   00059D                     _MFOEN          set	1437
  4767   0006BA                     _G3POL          set	1722
  4768   0006A7                     _CLC8OUT        set	1703
  4769   0006B9                     _G2POL          set	1721
  4770   0002D4                     _U3BRG          set	724
  4771   00026B                     _SPI1SDIPPS     set	619
  4772   00026A                     _SPI1SCKPPS     set	618
  4773   000209                     _RB0PPS         set	521
  4774   00020A                     _RB1PPS         set	522
  4775   000203                     _RA2PPS         set	515
  4776   000201                     _RA0PPS         set	513
  4777   000204                     _RA3PPS         set	516
  4778   000207                     _RA6PPS         set	519
  4779   000276                     _U3RXPPS        set	630
  4780   0002C9                     _U3TXB          set	713
  4781   0002C7                     _U3RXB          set	711
  4782   001697                     _U3ON           set	5783
  4783   00168D                     _U3TXEN         set	5773
  4784   00168C                     _U3RXEN         set	5772
  4785   000318                     _TMR0L          set	792
  4786   000319                     _TMR0H          set	793
  4787   00031B                     _T0CON1         set	795
  4788   00031A                     _T0CON0         set	794
  4789   00045D                     _IVTBASE        set	1117
  4790   000443                     _NCO1INC        set	1091
  4791   000459                     _IVTLOCKbits    set	1113
  4792   000459                     _IVTLOCK        set	1113
  4793   000447                     _NCO1CLK        set	1095
  4794   00040B                     _SLRCONBbits    set	1035
  4795   000409                     _WPUB           set	1033
  4796   000419                     _WPUD           set	1049
  4797   000411                     _WPUC           set	1041
  4798   000418                     _ANSELD         set	1048
  4799   000410                     _ANSELC         set	1040
  4800   000408                     _ANSELB         set	1032
  4801   000400                     _ANSELA         set	1024
  4802   002237                     _NCO1EN         set	8759
  4803   002235                     _NCO1OUT        set	8757
  4804   002230                     _NCO1PFM        set	8752
  4805   00200C                     _WPUA4          set	8204
  4806   002009                     _WPUA1          set	8201
  4807   00200D                     _WPUA5          set	8205
  4808   00200A                     _WPUA2          set	8202
  4809   00200B                     _WPUA3          set	8203
  4810   002008                     _WPUA0          set	8200
  4811   00210A                     _WPUE2          set	8458
  4812   002109                     _WPUE1          set	8457
  4813   002108                     _WPUE0          set	8456
  4814   002102                     _ANSELE2        set	8450
  4815   002101                     _ANSELE1        set	8449
  4816   002100                     _ANSELE0        set	8448
  4817   0004CF                     _PORTB          set	1231
  4818   0004C7                     _TRISB          set	1223
  4819   0004BF                     _LATB           set	1215
  4820   0004C9                     _TRISD          set	1225
  4821   0004C1                     _LATD           set	1217
  4822   0004C8                     _TRISC          set	1224
  4823   0004C0                     _LATC           set	1216
  4824   002588                     _SPI1RXIF       set	9608
  4825   00263A                     _TRISB2         set	9786
  4826   002639                     _TRISB1         set	9785
  4827   002638                     _TRISB0         set	9784
  4828   002675                     _RA5            set	9845
  4829   0026B7                     _GIE            set	9911
  4830   002636                     _TRISA6         set	9782
  4831   0025F6                     _LATA6          set	9718
  4832   002637                     _TRISA7         set	9783
  4833   002634                     _TRISA4         set	9780
  4834   0025F4                     _LATA4          set	9716
  4835   002631                     _TRISA1         set	9777
  4836   0025F1                     _LATA1          set	9713
  4837   002635                     _TRISA5         set	9781
  4838   0025F2                     _LATA2          set	9714
  4839   002632                     _TRISA2         set	9778
  4840   002633                     _TRISA3         set	9779
  4841   0025F3                     _LATA3          set	9715
  4842   002630                     _TRISA0         set	9776
  4843   002652                     _TRISE2         set	9810
  4844   002612                     _LATE2          set	9746
  4845   002651                     _TRISE1         set	9809
  4846   002611                     _LATE1          set	9745
  4847   002650                     _TRISE0         set	9808
  4848   002610                     _LATE0          set	9744
  4849   0025F0                     _LATA0          set	9712
  4850   002538                     _U3RXIE         set	9528
  4851   0025B9                     _U3TXIF         set	9657
  4852   00250F                     _TMR0IE         set	9487
  4853   00258F                     _TMR0IF         set	9615
  4854   00F21F                     STR_113:
  4855                           
  4856                           ; BSR set to: 7
  4857   00F21F  41                 	db	65	;'A'
  4858   00F220  3D                 	db	61	;'='
  4859   00F221  24                 	db	36
  4860   00F222  25                 	db	37
  4861   00F223  30                 	db	48	;'0'
  4862   00F224  32                 	db	50	;'2'
  4863   00F225  58                 	db	88	;'X'
  4864   00F226  20                 	db	32
  4865   00F227  58                 	db	88	;'X'
  4866   00F228  3D                 	db	61	;'='
  4867   00F229  24                 	db	36
  4868   00F22A  25                 	db	37
  4869   00F22B  30                 	db	48	;'0'
  4870   00F22C  32                 	db	50	;'2'
  4871   00F22D  58                 	db	88	;'X'
  4872   00F22E  20                 	db	32
  4873   00F22F  59                 	db	89	;'Y'
  4874   00F230  3D                 	db	61	;'='
  4875   00F231  24                 	db	36
  4876   00F232  25                 	db	37
  4877   00F233  30                 	db	48	;'0'
  4878   00F234  32                 	db	50	;'2'
  4879   00F235  58                 	db	88	;'X'
  4880   00F236  20                 	db	32
  4881   00F237  53                 	db	83	;'S'
  4882   00F238  50                 	db	80	;'P'
  4883   00F239  3D                 	db	61	;'='
  4884   00F23A  24                 	db	36
  4885   00F23B  30                 	db	48	;'0'
  4886   00F23C  31                 	db	49	;'1'
  4887   00F23D  25                 	db	37
  4888   00F23E  30                 	db	48	;'0'
  4889   00F23F  32                 	db	50	;'2'
  4890   00F240  58                 	db	88	;'X'
  4891   00F241  20                 	db	32
  4892   00F242  50                 	db	80	;'P'
  4893   00F243  43                 	db	67	;'C'
  4894   00F244  3D                 	db	61	;'='
  4895   00F245  24                 	db	36
  4896   00F246  25                 	db	37
  4897   00F247  30                 	db	48	;'0'
  4898   00F248  34                 	db	52	;'4'
  4899   00F249  58                 	db	88	;'X'
  4900   00F24A  20                 	db	32
  4901   00F24B  50                 	db	80	;'P'
  4902   00F24C  53                 	db	83	;'S'
  4903   00F24D  52                 	db	82	;'R'
  4904   00F24E  3D                 	db	61	;'='
  4905   00F24F  24                 	db	36
  4906   00F250  25                 	db	37
  4907   00F251  30                 	db	48	;'0'
  4908   00F252  32                 	db	50	;'2'
  4909   00F253  58                 	db	88	;'X'
  4910   00F254  0D                 	db	13
  4911   00F255  0A                 	db	10
  4912   00F256  00                 	db	0
  4913   00F257                     STR_27:
  4914                           
  4915                           ; BSR set to: 7
  4916   00F257  53                 	db	83	;'S'
  4917   00F258  44                 	db	68	;'D'
  4918   00F259  20                 	db	32
  4919   00F25A  43                 	db	67	;'C'
  4920   00F25B  61                 	db	97	;'a'
  4921   00F25C  72                 	db	114	;'r'
  4922   00F25D  64                 	db	100	;'d'
  4923   00F25E  3A                 	db	58	;':'
  4924   00F25F  20                 	db	32
  4925   00F260  72                 	db	114	;'r'
  4926   00F261  65                 	db	101	;'e'
  4927   00F262  61                 	db	97	;'a'
  4928   00F263  64                 	db	100	;'d'
  4929   00F264  35                 	db	53	;'5'
  4930   00F265  31                 	db	49	;'1'
  4931   00F266  32                 	db	50	;'2'
  4932   00F267  3A                 	db	58	;':'
  4933   00F268  20                 	db	32
  4934   00F269  43                 	db	67	;'C'
  4935   00F26A  52                 	db	82	;'R'
  4936   00F26B  43                 	db	67	;'C'
  4937   00F26C  20                 	db	32
  4938   00F26D  65                 	db	101	;'e'
  4939   00F26E  72                 	db	114	;'r'
  4940   00F26F  72                 	db	114	;'r'
  4941   00F270  6F                 	db	111	;'o'
  4942   00F271  72                 	db	114	;'r'
  4943   00F272  20                 	db	32
  4944   00F273  28                 	db	40
  4945   00F274  25                 	db	37
  4946   00F275  30                 	db	48	;'0'
  4947   00F276  34                 	db	52	;'4'
  4948   00F277  78                 	db	120	;'x'
  4949   00F278  20                 	db	32
  4950   00F279  21                 	db	33
  4951   00F27A  3D                 	db	61	;'='
  4952   00F27B  20                 	db	32
  4953   00F27C  25                 	db	37
  4954   00F27D  30                 	db	48	;'0'
  4955   00F27E  34                 	db	52	;'4'
  4956   00F27F  78                 	db	120	;'x'
  4957   00F280  2C                 	db	44
  4958   00F281  20                 	db	32
  4959   00F282  72                 	db	114	;'r'
  4960   00F283  65                 	db	101	;'e'
  4961   00F284  74                 	db	116	;'t'
  4962   00F285  72                 	db	114	;'r'
  4963   00F286  79                 	db	121	;'y'
  4964   00F287  3D                 	db	61	;'='
  4965   00F288  25                 	db	37
  4966   00F289  64                 	db	100	;'d'
  4967   00F28A  29                 	db	41
  4968   00F28B  0A                 	db	10
  4969   00F28C  0D                 	db	13
  4970   00F28D  00                 	db	0
  4971   00F28E                     STR_111:
  4972                           
  4973                           ; BSR set to: 7
  4974   00F28E  41                 	db	65	;'A'
  4975   00F28F  3D                 	db	61	;'='
  4976   00F290  24                 	db	36
  4977   00F291  25                 	db	37
  4978   00F292  30                 	db	48	;'0'
  4979   00F293  34                 	db	52	;'4'
  4980   00F294  58                 	db	88	;'X'
  4981   00F295  20                 	db	32
  4982   00F296  58                 	db	88	;'X'
  4983   00F297  3D                 	db	61	;'='
  4984   00F298  24                 	db	36
  4985   00F299  25                 	db	37
  4986   00F29A  30                 	db	48	;'0'
  4987   00F29B  34                 	db	52	;'4'
  4988   00F29C  58                 	db	88	;'X'
  4989   00F29D  20                 	db	32
  4990   00F29E  59                 	db	89	;'Y'
  4991   00F29F  3D                 	db	61	;'='
  4992   00F2A0  24                 	db	36
  4993   00F2A1  25                 	db	37
  4994   00F2A2  30                 	db	48	;'0'
  4995   00F2A3  34                 	db	52	;'4'
  4996   00F2A4  58                 	db	88	;'X'
  4997   00F2A5  20                 	db	32
  4998   00F2A6  53                 	db	83	;'S'
  4999   00F2A7  50                 	db	80	;'P'
  5000   00F2A8  3D                 	db	61	;'='
  5001   00F2A9  24                 	db	36
  5002   00F2AA  25                 	db	37
  5003   00F2AB  30                 	db	48	;'0'
  5004   00F2AC  34                 	db	52	;'4'
  5005   00F2AD  58                 	db	88	;'X'
  5006   00F2AE  20                 	db	32
  5007   00F2AF  50                 	db	80	;'P'
  5008   00F2B0  43                 	db	67	;'C'
  5009   00F2B1  3D                 	db	61	;'='
  5010   00F2B2  24                 	db	36
  5011   00F2B3  25                 	db	37
  5012   00F2B4  30                 	db	48	;'0'
  5013   00F2B5  34                 	db	52	;'4'
  5014   00F2B6  58                 	db	88	;'X'
  5015   00F2B7  20                 	db	32
  5016   00F2B8  50                 	db	80	;'P'
  5017   00F2B9  53                 	db	83	;'S'
  5018   00F2BA  52                 	db	82	;'R'
  5019   00F2BB  3D                 	db	61	;'='
  5020   00F2BC  24                 	db	36
  5021   00F2BD  25                 	db	37
  5022   00F2BE  30                 	db	48	;'0'
  5023   00F2BF  32                 	db	50	;'2'
  5024   00F2C0  58                 	db	88	;'X'
  5025   00F2C1  0D                 	db	13
  5026   00F2C2  0A                 	db	10
  5027   00F2C3  00                 	db	0
  5028   00F2C4                     
  5029                           ; BSR set to: 7
  5030   00F2C4  64                 	db	100	;'d'
  5031   00F2C5  69                 	db	105	;'i'
  5032   00F2C6  73                 	db	115	;'s'
  5033   00F2C7  6B                 	db	107	;'k'
  5034   00F2C8  5F                 	db	95	;'_'
  5035   00F2C9  69                 	db	105	;'i'
  5036   00F2CA  6F                 	db	111	;'o'
  5037   00F2CB  63                 	db	99	;'c'
  5038   00F2CC  74                 	db	116	;'t'
  5039   00F2CD  6C                 	db	108	;'l'
  5040   00F2CE  3A                 	db	58	;':'
  5041   00F2CF  20                 	db	32
  5042   00F2D0  70                 	db	112	;'p'
  5043   00F2D1  64                 	db	100	;'d'
  5044   00F2D2  72                 	db	114	;'r'
  5045   00F2D3  76                 	db	118	;'v'
  5046   00F2D4  3D                 	db	61	;'='
  5047   00F2D5  25                 	db	37
  5048   00F2D6  64                 	db	100	;'d'
  5049   00F2D7  2C                 	db	44
  5050   00F2D8  20                 	db	32
  5051   00F2D9  63                 	db	99	;'c'
  5052   00F2DA  6D                 	db	109	;'m'
  5053   00F2DB  64                 	db	100	;'d'
  5054   00F2DC  3D                 	db	61	;'='
  5055   00F2DD  25                 	db	37
  5056   00F2DE  64                 	db	100	;'d'
  5057   00F2DF  2C                 	db	44
  5058   00F2E0  20                 	db	32
  5059   00F2E1  62                 	db	98	;'b'
  5060   00F2E2  75                 	db	117	;'u'
  5061   00F2E3  66                 	db	102	;'f'
  5062   00F2E4  66                 	db	102	;'f'
  5063   00F2E5  3D                 	db	61	;'='
  5064   00F2E6  30                 	db	48	;'0'
  5065   00F2E7  78                 	db	120	;'x'
  5066   00F2E8  25                 	db	37
  5067   00F2E9  6C                 	db	108	;'l'
  5068   00F2EA  78                 	db	120	;'x'
  5069   00F2EB  3A                 	db	58	;':'
  5070   00F2EC  20                 	db	32
  5071   00F2ED  72                 	db	114	;'r'
  5072   00F2EE  65                 	db	101	;'e'
  5073   00F2EF  73                 	db	115	;'s'
  5074   00F2F0  3D                 	db	61	;'='
  5075   00F2F1  25                 	db	37
  5076   00F2F2  64                 	db	100	;'d'
  5077   00F2F3  0A                 	db	10
  5078   00F2F4  0D                 	db	13
  5079   00F2F5  00                 	db	0
  5080   00F2F6                     
  5081                           ; BSR set to: 7
  5082   00F2F6  53                 	db	83	;'S'
  5083   00F2F7  44                 	db	68	;'D'
  5084   00F2F8  20                 	db	32
  5085   00F2F9  43                 	db	67	;'C'
  5086   00F2FA  61                 	db	97	;'a'
  5087   00F2FB  72                 	db	114	;'r'
  5088   00F2FC  64                 	db	100	;'d'
  5089   00F2FD  3A                 	db	58	;':'
  5090   00F2FE  20                 	db	32
  5091   00F2FF  20                 	db	32
  5092   00F300  72                 	db	114	;'r'
  5093   00F301  65                 	db	101	;'e'
  5094   00F302  61                 	db	97	;'a'
  5095   00F303  64                 	db	100	;'d'
  5096   00F304  35                 	db	53	;'5'
  5097   00F305  31                 	db	49	;'1'
  5098   00F306  32                 	db	50	;'2'
  5099   00F307  3A                 	db	58	;':'
  5100   00F308  20                 	db	32
  5101   00F309  61                 	db	97	;'a'
  5102   00F30A  64                 	db	100	;'d'
  5103   00F30B  64                 	db	100	;'d'
  5104   00F30C  72                 	db	114	;'r'
  5105   00F30D  3D                 	db	61	;'='
  5106   00F30E  25                 	db	37
  5107   00F30F  38                 	db	56	;'8'
  5108   00F310  6C                 	db	108	;'l'
  5109   00F311  64                 	db	100	;'d'
  5110   00F312  2C                 	db	44
  5111   00F313  20                 	db	32
  5112   00F314  6F                 	db	111	;'o'
  5113   00F315  66                 	db	102	;'f'
  5114   00F316  66                 	db	102	;'f'
  5115   00F317  73                 	db	115	;'s'
  5116   00F318  3D                 	db	61	;'='
  5117   00F319  25                 	db	37
  5118   00F31A  64                 	db	100	;'d'
  5119   00F31B  2C                 	db	44
  5120   00F31C  20                 	db	32
  5121   00F31D  63                 	db	99	;'c'
  5122   00F31E  6F                 	db	111	;'o'
  5123   00F31F  75                 	db	117	;'u'
  5124   00F320  6E                 	db	110	;'n'
  5125   00F321  74                 	db	116	;'t'
  5126   00F322  3D                 	db	61	;'='
  5127   00F323  25                 	db	37
  5128   00F324  64                 	db	100	;'d'
  5129   00F325  0A                 	db	10
  5130   00F326  0D                 	db	13
  5131   00F327  00                 	db	0
  5132   00F328                     
  5133                           ; BSR set to: 7
  5134   00F328  53                 	db	83	;'S'
  5135   00F329  44                 	db	68	;'D'
  5136   00F32A  20                 	db	32
  5137   00F32B  43                 	db	67	;'C'
  5138   00F32C  61                 	db	97	;'a'
  5139   00F32D  72                 	db	114	;'r'
  5140   00F32E  64                 	db	100	;'d'
  5141   00F32F  3A                 	db	58	;':'
  5142   00F330  20                 	db	32
  5143   00F331  77                 	db	119	;'w'
  5144   00F332  72                 	db	114	;'r'
  5145   00F333  69                 	db	105	;'i'
  5146   00F334  74                 	db	116	;'t'
  5147   00F335  65                 	db	101	;'e'
  5148   00F336  35                 	db	53	;'5'
  5149   00F337  31                 	db	49	;'1'
  5150   00F338  32                 	db	50	;'2'
  5151   00F339  3A                 	db	58	;':'
  5152   00F33A  20                 	db	32
  5153   00F33B  61                 	db	97	;'a'
  5154   00F33C  64                 	db	100	;'d'
  5155   00F33D  64                 	db	100	;'d'
  5156   00F33E  72                 	db	114	;'r'
  5157   00F33F  3D                 	db	61	;'='
  5158   00F340  25                 	db	37
  5159   00F341  38                 	db	56	;'8'
  5160   00F342  6C                 	db	108	;'l'
  5161   00F343  64                 	db	100	;'d'
  5162   00F344  2C                 	db	44
  5163   00F345  20                 	db	32
  5164   00F346  6F                 	db	111	;'o'
  5165   00F347  66                 	db	102	;'f'
  5166   00F348  66                 	db	102	;'f'
  5167   00F349  73                 	db	115	;'s'
  5168   00F34A  3D                 	db	61	;'='
  5169   00F34B  25                 	db	37
  5170   00F34C  64                 	db	100	;'d'
  5171   00F34D  2C                 	db	44
  5172   00F34E  20                 	db	32
  5173   00F34F  63                 	db	99	;'c'
  5174   00F350  6F                 	db	111	;'o'
  5175   00F351  75                 	db	117	;'u'
  5176   00F352  6E                 	db	110	;'n'
  5177   00F353  74                 	db	116	;'t'
  5178   00F354  3D                 	db	61	;'='
  5179   00F355  25                 	db	37
  5180   00F356  64                 	db	100	;'d'
  5181   00F357  0A                 	db	10
  5182   00F358  0D                 	db	13
  5183   00F359  00                 	db	0
  5184   00F35A                     
  5185                           ; BSR set to: 7
  5186   00F35A  53                 	db	83	;'S'
  5187   00F35B  44                 	db	68	;'D'
  5188   00F35C  20                 	db	32
  5189   00F35D  43                 	db	67	;'C'
  5190   00F35E  61                 	db	97	;'a'
  5191   00F35F  72                 	db	114	;'r'
  5192   00F360  64                 	db	100	;'d'
  5193   00F361  3A                 	db	58	;':'
  5194   00F362  20                 	db	32
  5195   00F363  77                 	db	119	;'w'
  5196   00F364  72                 	db	114	;'r'
  5197   00F365  69                 	db	105	;'i'
  5198   00F366  74                 	db	116	;'t'
  5199   00F367  65                 	db	101	;'e'
  5200   00F368  35                 	db	53	;'5'
  5201   00F369  31                 	db	49	;'1'
  5202   00F36A  32                 	db	50	;'2'
  5203   00F36B  3A                 	db	58	;':'
  5204   00F36C  20                 	db	32
  5205   00F36D  66                 	db	102	;'f'
  5206   00F36E  61                 	db	97	;'a'
  5207   00F36F  69                 	db	105	;'i'
  5208   00F370  6C                 	db	108	;'l'
  5209   00F371  65                 	db	101	;'e'
  5210   00F372  64                 	db	100	;'d'
  5211   00F373  20                 	db	32
  5212   00F374  74                 	db	116	;'t'
  5213   00F375  6F                 	db	111	;'o'
  5214   00F376  20                 	db	32
  5215   00F377  67                 	db	103	;'g'
  5216   00F378  65                 	db	101	;'e'
  5217   00F379  74                 	db	116	;'t'
  5218   00F37A  20                 	db	32
  5219   00F37B  74                 	db	116	;'t'
  5220   00F37C  6F                 	db	111	;'o'
  5221   00F37D  6B                 	db	107	;'k'
  5222   00F37E  65                 	db	101	;'e'
  5223   00F37F  6E                 	db	110	;'n'
  5224   00F380  2C                 	db	44
  5225   00F381  20                 	db	32
  5226   00F382  74                 	db	116	;'t'
  5227   00F383  69                 	db	105	;'i'
  5228   00F384  6D                 	db	109	;'m'
  5229   00F385  65                 	db	101	;'e'
  5230   00F386  6F                 	db	111	;'o'
  5231   00F387  75                 	db	117	;'u'
  5232   00F388  74                 	db	116	;'t'
  5233   00F389  0A                 	db	10
  5234   00F38A  0D                 	db	13
  5235   00F38B  00                 	db	0
  5236   00F38C                     STR_114:
  5237                           
  5238                           ; BSR set to: 7
  5239   00F38C  0D                 	db	13
  5240   00F38D  0A                 	db	10
  5241   00F38E  3C                 	db	60	;'<'
  5242   00F38F  3C                 	db	60	;'<'
  5243   00F390  20                 	db	32
  5244   00F391  4D                 	db	77	;'M'
  5245   00F392  45                 	db	69	;'E'
  5246   00F393  5A                 	db	90	;'Z'
  5247   00F394  57                 	db	87	;'W'
  5248   00F395  36                 	db	54	;'6'
  5249   00F396  35                 	db	53	;'5'
  5250   00F397  43                 	db	67	;'C'
  5251   00F398  5F                 	db	95	;'_'
  5252   00F399  52                 	db	82	;'R'
  5253   00F39A  41                 	db	65	;'A'
  5254   00F39B  4D                 	db	77	;'M'
  5255   00F39C  20                 	db	32
  5256   00F39D  46                 	db	70	;'F'
  5257   00F39E  69                 	db	105	;'i'
  5258   00F39F  72                 	db	114	;'r'
  5259   00F3A0  6D                 	db	109	;'m'
  5260   00F3A1  77                 	db	119	;'w'
  5261   00F3A2  61                 	db	97	;'a'
  5262   00F3A3  72                 	db	114	;'r'
  5263   00F3A4  65                 	db	101	;'e'
  5264   00F3A5  20                 	db	32
  5265   00F3A6  42                 	db	66	;'B'
  5266   00F3A7  75                 	db	117	;'u'
  5267   00F3A8  69                 	db	105	;'i'
  5268   00F3A9  6C                 	db	108	;'l'
  5269   00F3AA  74                 	db	116	;'t'
  5270   00F3AB  2D                 	db	45
  5271   00F3AC  69                 	db	105	;'i'
  5272   00F3AD  6E                 	db	110	;'n'
  5273   00F3AE  20                 	db	32
  5274   00F3AF  63                 	db	99	;'c'
  5275   00F3B0  6F                 	db	111	;'o'
  5276   00F3B1  6D                 	db	109	;'m'
  5277   00F3B2  6D                 	db	109	;'m'
  5278   00F3B3  61                 	db	97	;'a'
  5279   00F3B4  6E                 	db	110	;'n'
  5280   00F3B5  64                 	db	100	;'d'
  5281   00F3B6  20                 	db	32
  5282   00F3B7  3E                 	db	62	;'>'
  5283   00F3B8  3E                 	db	62	;'>'
  5284   00F3B9  0D                 	db	13
  5285   00F3BA  0A                 	db	10
  5286   00F3BB  00                 	db	0
  5287   00F3BC                     
  5288                           ; BSR set to: 7
  5289   00F3BC  53                 	db	83	;'S'
  5290   00F3BD  44                 	db	68	;'D'
  5291   00F3BE  20                 	db	32
  5292   00F3BF  43                 	db	67	;'C'
  5293   00F3C0  61                 	db	97	;'a'
  5294   00F3C1  72                 	db	114	;'r'
  5295   00F3C2  64                 	db	100	;'d'
  5296   00F3C3  3A                 	db	58	;':'
  5297   00F3C4  20                 	db	32
  5298   00F3C5  77                 	db	119	;'w'
  5299   00F3C6  72                 	db	114	;'r'
  5300   00F3C7  69                 	db	105	;'i'
  5301   00F3C8  74                 	db	116	;'t'
  5302   00F3C9  65                 	db	101	;'e'
  5303   00F3CA  35                 	db	53	;'5'
  5304   00F3CB  31                 	db	49	;'1'
  5305   00F3CC  32                 	db	50	;'2'
  5306   00F3CD  3A                 	db	58	;':'
  5307   00F3CE  20                 	db	32
  5308   00F3CF  74                 	db	116	;'t'
  5309   00F3D0  69                 	db	105	;'i'
  5310   00F3D1  6D                 	db	109	;'m'
  5311   00F3D2  65                 	db	101	;'e'
  5312   00F3D3  6F                 	db	111	;'o'
  5313   00F3D4  75                 	db	117	;'u'
  5314   00F3D5  74                 	db	116	;'t'
  5315   00F3D6  2C                 	db	44
  5316   00F3D7  20                 	db	32
  5317   00F3D8  72                 	db	114	;'r'
  5318   00F3D9  65                 	db	101	;'e'
  5319   00F3DA  73                 	db	115	;'s'
  5320   00F3DB  70                 	db	112	;'p'
  5321   00F3DC  6F                 	db	111	;'o'
  5322   00F3DD  6E                 	db	110	;'n'
  5323   00F3DE  73                 	db	115	;'s'
  5324   00F3DF  65                 	db	101	;'e'
  5325   00F3E0  20                 	db	32
  5326   00F3E1  69                 	db	105	;'i'
  5327   00F3E2  73                 	db	115	;'s'
  5328   00F3E3  20                 	db	32
  5329   00F3E4  25                 	db	37
  5330   00F3E5  30                 	db	48	;'0'
  5331   00F3E6  32                 	db	50	;'2'
  5332   00F3E7  78                 	db	120	;'x'
  5333   00F3E8  0A                 	db	10
  5334   00F3E9  0D                 	db	13
  5335   00F3EA  00                 	db	0
  5336   00F3EB                     
  5337                           ; BSR set to: 7
  5338   00F3EB  53                 	db	83	;'S'
  5339   00F3EC  44                 	db	68	;'D'
  5340   00F3ED  20                 	db	32
  5341   00F3EE  43                 	db	67	;'C'
  5342   00F3EF  61                 	db	97	;'a'
  5343   00F3F0  72                 	db	114	;'r'
  5344   00F3F1  64                 	db	100	;'d'
  5345   00F3F2  3A                 	db	58	;':'
  5346   00F3F3  20                 	db	32
  5347   00F3F4  43                 	db	67	;'C'
  5348   00F3F5  4D                 	db	77	;'M'
  5349   00F3F6  44                 	db	68	;'D'
  5350   00F3F7  35                 	db	53	;'5'
  5351   00F3F8  38                 	db	56	;'8'
  5352   00F3F9  2C                 	db	44
  5353   00F3FA  20                 	db	32
  5354   00F3FB  52                 	db	82	;'R'
  5355   00F3FC  33                 	db	51	;'3'
  5356   00F3FD  3D                 	db	61	;'='
  5357   00F3FE  25                 	db	37
  5358   00F3FF  30                 	db	48	;'0'
  5359   00F400  32                 	db	50	;'2'
  5360   00F401  78                 	db	120	;'x'
  5361   00F402  20                 	db	32
  5362   00F403  25                 	db	37
  5363   00F404  30                 	db	48	;'0'
  5364   00F405  32                 	db	50	;'2'
  5365   00F406  78                 	db	120	;'x'
  5366   00F407  20                 	db	32
  5367   00F408  25                 	db	37
  5368   00F409  30                 	db	48	;'0'
  5369   00F40A  32                 	db	50	;'2'
  5370   00F40B  78                 	db	120	;'x'
  5371   00F40C  20                 	db	32
  5372   00F40D  25                 	db	37
  5373   00F40E  30                 	db	48	;'0'
  5374   00F40F  32                 	db	50	;'2'
  5375   00F410  78                 	db	120	;'x'
  5376   00F411  20                 	db	32
  5377   00F412  25                 	db	37
  5378   00F413  30                 	db	48	;'0'
  5379   00F414  32                 	db	50	;'2'
  5380   00F415  78                 	db	120	;'x'
  5381   00F416  0A                 	db	10
  5382   00F417  0D                 	db	13
  5383   00F418  00                 	db	0
  5384   00F419                     STR_8:
  5385                           
  5386                           ; BSR set to: 7
  5387   00F419  25                 	db	37
  5388   00F41A  73                 	db	115	;'s'
  5389   00F41B  3A                 	db	58	;':'
  5390   00F41C  20                 	db	32
  5391   00F41D  45                 	db	69	;'E'
  5392   00F41E  52                 	db	82	;'R'
  5393   00F41F  52                 	db	82	;'R'
  5394   00F420  4F                 	db	79	;'O'
  5395   00F421  52                 	db	82	;'R'
  5396   00F422  3A                 	db	58	;':'
  5397   00F423  20                 	db	32
  5398   00F424  63                 	db	99	;'c'
  5399   00F425  6C                 	db	108	;'l'
  5400   00F426  6F                 	db	111	;'o'
  5401   00F427  63                 	db	99	;'c'
  5402   00F428  6B                 	db	107	;'k'
  5403   00F429  20                 	db	32
  5404   00F42A  73                 	db	115	;'s'
  5405   00F42B  70                 	db	112	;'p'
  5406   00F42C  65                 	db	101	;'e'
  5407   00F42D  65                 	db	101	;'e'
  5408   00F42E  64                 	db	100	;'d'
  5409   00F42F  20                 	db	32
  5410   00F430  25                 	db	37
  5411   00F431  64                 	db	100	;'d'
  5412   00F432  20                 	db	32
  5413   00F433  69                 	db	105	;'i'
  5414   00F434  73                 	db	115	;'s'
  5415   00F435  20                 	db	32
  5416   00F436  6E                 	db	110	;'n'
  5417   00F437  6F                 	db	111	;'o'
  5418   00F438  74                 	db	116	;'t'
  5419   00F439  20                 	db	32
  5420   00F43A  73                 	db	115	;'s'
  5421   00F43B  75                 	db	117	;'u'
  5422   00F43C  70                 	db	112	;'p'
  5423   00F43D  70                 	db	112	;'p'
  5424   00F43E  6F                 	db	111	;'o'
  5425   00F43F  72                 	db	114	;'r'
  5426   00F440  74                 	db	116	;'t'
  5427   00F441  65                 	db	101	;'e'
  5428   00F442  64                 	db	100	;'d'
  5429   00F443  0A                 	db	10
  5430   00F444  0D                 	db	13
  5431   00F445  00                 	db	0
  5432   00F446                     
  5433                           ; BSR set to: 7
  5434   00F446  53                 	db	83	;'S'
  5435   00F447  44                 	db	68	;'D'
  5436   00F448  20                 	db	32
  5437   00F449  43                 	db	67	;'C'
  5438   00F44A  61                 	db	97	;'a'
  5439   00F44B  72                 	db	114	;'r'
  5440   00F44C  64                 	db	100	;'d'
  5441   00F44D  3A                 	db	58	;':'
  5442   00F44E  20                 	db	32
  5443   00F44F  43                 	db	67	;'C'
  5444   00F450  4D                 	db	77	;'M'
  5445   00F451  44                 	db	68	;'D'
  5446   00F452  38                 	db	56	;'8'
  5447   00F453  2C                 	db	44
  5448   00F454  20                 	db	32
  5449   00F455  52                 	db	82	;'R'
  5450   00F456  37                 	db	55	;'7'
  5451   00F457  3D                 	db	61	;'='
  5452   00F458  25                 	db	37
  5453   00F459  30                 	db	48	;'0'
  5454   00F45A  32                 	db	50	;'2'
  5455   00F45B  78                 	db	120	;'x'
  5456   00F45C  20                 	db	32
  5457   00F45D  25                 	db	37
  5458   00F45E  30                 	db	48	;'0'
  5459   00F45F  32                 	db	50	;'2'
  5460   00F460  78                 	db	120	;'x'
  5461   00F461  20                 	db	32
  5462   00F462  25                 	db	37
  5463   00F463  30                 	db	48	;'0'
  5464   00F464  32                 	db	50	;'2'
  5465   00F465  78                 	db	120	;'x'
  5466   00F466  20                 	db	32
  5467   00F467  25                 	db	37
  5468   00F468  30                 	db	48	;'0'
  5469   00F469  32                 	db	50	;'2'
  5470   00F46A  78                 	db	120	;'x'
  5471   00F46B  20                 	db	32
  5472   00F46C  25                 	db	37
  5473   00F46D  30                 	db	48	;'0'
  5474   00F46E  32                 	db	50	;'2'
  5475   00F46F  78                 	db	120	;'x'
  5476   00F470  0A                 	db	10
  5477   00F471  0D                 	db	13
  5478   00F472  00                 	db	0
  5479   00F473                     STR_190:
  5480                           
  5481                           ; BSR set to: 7
  5482   00F473  64                 	db	100	;'d'
  5483   00F474  69                 	db	105	;'i'
  5484   00F475  73                 	db	115	;'s'
  5485   00F476  6B                 	db	107	;'k'
  5486   00F477  5F                 	db	95	;'_'
  5487   00F478  69                 	db	105	;'i'
  5488   00F479  6F                 	db	111	;'o'
  5489   00F47A  63                 	db	99	;'c'
  5490   00F47B  74                 	db	116	;'t'
  5491   00F47C  6C                 	db	108	;'l'
  5492   00F47D  3A                 	db	58	;':'
  5493   00F47E  20                 	db	32
  5494   00F47F  70                 	db	112	;'p'
  5495   00F480  64                 	db	100	;'d'
  5496   00F481  72                 	db	114	;'r'
  5497   00F482  76                 	db	118	;'v'
  5498   00F483  3D                 	db	61	;'='
  5499   00F484  25                 	db	37
  5500   00F485  64                 	db	100	;'d'
  5501   00F486  2C                 	db	44
  5502   00F487  20                 	db	32
  5503   00F488  63                 	db	99	;'c'
  5504   00F489  6D                 	db	109	;'m'
  5505   00F48A  64                 	db	100	;'d'
  5506   00F48B  3D                 	db	61	;'='
  5507   00F48C  25                 	db	37
  5508   00F48D  64                 	db	100	;'d'
  5509   00F48E  3A                 	db	58	;':'
  5510   00F48F  20                 	db	32
  5511   00F490  4E                 	db	78	;'N'
  5512   00F491  6F                 	db	111	;'o'
  5513   00F492  74                 	db	116	;'t'
  5514   00F493  20                 	db	32
  5515   00F494  68                 	db	104	;'h'
  5516   00F495  61                 	db	97	;'a'
  5517   00F496  6E                 	db	110	;'n'
  5518   00F497  64                 	db	100	;'d'
  5519   00F498  6C                 	db	108	;'l'
  5520   00F499  65                 	db	101	;'e'
  5521   00F49A  64                 	db	100	;'d'
  5522   00F49B  2E                 	db	46
  5523   00F49C  0A                 	db	10
  5524   00F49D  0D                 	db	13
  5525   00F49E  00                 	db	0
  5526   00F49F                     
  5527                           ; BSR set to: 7
  5528   00F49F  64                 	db	100	;'d'
  5529   00F4A0  69                 	db	105	;'i'
  5530   00F4A1  73                 	db	115	;'s'
  5531   00F4A2  6B                 	db	107	;'k'
  5532   00F4A3  5F                 	db	95	;'_'
  5533   00F4A4  72                 	db	114	;'r'
  5534   00F4A5  65                 	db	101	;'e'
  5535   00F4A6  61                 	db	97	;'a'
  5536   00F4A7  64                 	db	100	;'d'
  5537   00F4A8  3A                 	db	58	;':'
  5538   00F4A9  20                 	db	32
  5539   00F4AA  20                 	db	32
  5540   00F4AB  70                 	db	112	;'p'
  5541   00F4AC  64                 	db	100	;'d'
  5542   00F4AD  72                 	db	114	;'r'
  5543   00F4AE  76                 	db	118	;'v'
  5544   00F4AF  3D                 	db	61	;'='
  5545   00F4B0  25                 	db	37
  5546   00F4B1  64                 	db	100	;'d'
  5547   00F4B2  2C                 	db	44
  5548   00F4B3  20                 	db	32
  5549   00F4B4  73                 	db	115	;'s'
  5550   00F4B5  65                 	db	101	;'e'
  5551   00F4B6  63                 	db	99	;'c'
  5552   00F4B7  74                 	db	116	;'t'
  5553   00F4B8  6F                 	db	111	;'o'
  5554   00F4B9  72                 	db	114	;'r'
  5555   00F4BA  3D                 	db	61	;'='
  5556   00F4BB  25                 	db	37
  5557   00F4BC  6C                 	db	108	;'l'
  5558   00F4BD  64                 	db	100	;'d'
  5559   00F4BE  2C                 	db	44
  5560   00F4BF  20                 	db	32
  5561   00F4C0  63                 	db	99	;'c'
  5562   00F4C1  6F                 	db	111	;'o'
  5563   00F4C2  75                 	db	117	;'u'
  5564   00F4C3  6E                 	db	110	;'n'
  5565   00F4C4  74                 	db	116	;'t'
  5566   00F4C5  3D                 	db	61	;'='
  5567   00F4C6  25                 	db	37
  5568   00F4C7  64                 	db	100	;'d'
  5569   00F4C8  0A                 	db	10
  5570   00F4C9  0D                 	db	13
  5571   00F4CA  00                 	db	0
  5572   00F4CB                     
  5573                           ; BSR set to: 7
  5574   00F4CB  64                 	db	100	;'d'
  5575   00F4CC  69                 	db	105	;'i'
  5576   00F4CD  73                 	db	115	;'s'
  5577   00F4CE  6B                 	db	107	;'k'
  5578   00F4CF  5F                 	db	95	;'_'
  5579   00F4D0  77                 	db	119	;'w'
  5580   00F4D1  72                 	db	114	;'r'
  5581   00F4D2  69                 	db	105	;'i'
  5582   00F4D3  74                 	db	116	;'t'
  5583   00F4D4  65                 	db	101	;'e'
  5584   00F4D5  3A                 	db	58	;':'
  5585   00F4D6  20                 	db	32
  5586   00F4D7  70                 	db	112	;'p'
  5587   00F4D8  64                 	db	100	;'d'
  5588   00F4D9  72                 	db	114	;'r'
  5589   00F4DA  76                 	db	118	;'v'
  5590   00F4DB  3D                 	db	61	;'='
  5591   00F4DC  25                 	db	37
  5592   00F4DD  64                 	db	100	;'d'
  5593   00F4DE  2C                 	db	44
  5594   00F4DF  20                 	db	32
  5595   00F4E0  73                 	db	115	;'s'
  5596   00F4E1  65                 	db	101	;'e'
  5597   00F4E2  63                 	db	99	;'c'
  5598   00F4E3  74                 	db	116	;'t'
  5599   00F4E4  6F                 	db	111	;'o'
  5600   00F4E5  72                 	db	114	;'r'
  5601   00F4E6  3D                 	db	61	;'='
  5602   00F4E7  25                 	db	37
  5603   00F4E8  6C                 	db	108	;'l'
  5604   00F4E9  64                 	db	100	;'d'
  5605   00F4EA  2C                 	db	44
  5606   00F4EB  20                 	db	32
  5607   00F4EC  63                 	db	99	;'c'
  5608   00F4ED  6F                 	db	111	;'o'
  5609   00F4EE  75                 	db	117	;'u'
  5610   00F4EF  6E                 	db	110	;'n'
  5611   00F4F0  74                 	db	116	;'t'
  5612   00F4F1  3D                 	db	61	;'='
  5613   00F4F2  25                 	db	37
  5614   00F4F3  64                 	db	100	;'d'
  5615   00F4F4  0A                 	db	10
  5616   00F4F5  0D                 	db	13
  5617   00F4F6  00                 	db	0
  5618   00F4F7                     STR_47:
  5619                           
  5620                           ; BSR set to: 7
  5621   00F4F7  4D                 	db	77	;'M'
  5622   00F4F8  65                 	db	101	;'e'
  5623   00F4F9  7A                 	db	122	;'z'
  5624   00F4FA  7A                 	db	122	;'z'
  5625   00F4FB  61                 	db	97	;'a'
  5626   00F4FC  6E                 	db	110	;'n'
  5627   00F4FD  69                 	db	105	;'i'
  5628   00F4FE  6E                 	db	110	;'n'
  5629   00F4FF  65                 	db	101	;'e'
  5630   00F500  20                 	db	32
  5631   00F501  43                 	db	67	;'C'
  5632   00F502  61                 	db	97	;'a'
  5633   00F503  72                 	db	114	;'r'
  5634   00F504  64                 	db	100	;'d'
  5635   00F505  20                 	db	32
  5636   00F506  4D                 	db	77	;'M'
  5637   00F507  45                 	db	69	;'E'
  5638   00F508  5A                 	db	90	;'Z'
  5639   00F509  57                 	db	87	;'W'
  5640   00F50A  36                 	db	54	;'6'
  5641   00F50B  35                 	db	53	;'5'
  5642   00F50C  43                 	db	67	;'C'
  5643   00F50D  5F                 	db	95	;'_'
  5644   00F50E  52                 	db	82	;'R'
  5645   00F50F  41                 	db	65	;'A'
  5646   00F510  4D                 	db	77	;'M'
  5647   00F511  20                 	db	32
  5648   00F512  66                 	db	102	;'f'
  5649   00F513  69                 	db	105	;'i'
  5650   00F514  72                 	db	114	;'r'
  5651   00F515  6D                 	db	109	;'m'
  5652   00F516  77                 	db	119	;'w'
  5653   00F517  61                 	db	97	;'a'
  5654   00F518  72                 	db	114	;'r'
  5655   00F519  65                 	db	101	;'e'
  5656   00F51A  20                 	db	32
  5657   00F51B  52                 	db	82	;'R'
  5658   00F51C  65                 	db	101	;'e'
  5659   00F51D  76                 	db	118	;'v'
  5660   00F51E  32                 	db	50	;'2'
  5661   00F51F  2E                 	db	46
  5662   00F520  30                 	db	48	;'0'
  5663   00F521  00                 	db	0
  5664   00F522                     
  5665                           ; BSR set to: 7
  5666   00F522  53                 	db	83	;'S'
  5667   00F523  44                 	db	68	;'D'
  5668   00F524  20                 	db	32
  5669   00F525  43                 	db	67	;'C'
  5670   00F526  61                 	db	97	;'a'
  5671   00F527  72                 	db	114	;'r'
  5672   00F528  64                 	db	100	;'d'
  5673   00F529  3A                 	db	58	;':'
  5674   00F52A  20                 	db	32
  5675   00F52B  43                 	db	67	;'C'
  5676   00F52C  43                 	db	67	;'C'
  5677   00F52D  53                 	db	83	;'S'
  5678   00F52E  20                 	db	32
  5679   00F52F  28                 	db	40
  5680   00F530  43                 	db	67	;'C'
  5681   00F531  61                 	db	97	;'a'
  5682   00F532  72                 	db	114	;'r'
  5683   00F533  64                 	db	100	;'d'
  5684   00F534  20                 	db	32
  5685   00F535  43                 	db	67	;'C'
  5686   00F536  61                 	db	97	;'a'
  5687   00F537  70                 	db	112	;'p'
  5688   00F538  61                 	db	97	;'a'
  5689   00F539  63                 	db	99	;'c'
  5690   00F53A  69                 	db	105	;'i'
  5691   00F53B  74                 	db	116	;'t'
  5692   00F53C  79                 	db	121	;'y'
  5693   00F53D  20                 	db	32
  5694   00F53E  53                 	db	83	;'S'
  5695   00F53F  74                 	db	116	;'t'
  5696   00F540  61                 	db	97	;'a'
  5697   00F541  74                 	db	116	;'t'
  5698   00F542  75                 	db	117	;'u'
  5699   00F543  73                 	db	115	;'s'
  5700   00F544  29                 	db	41
  5701   00F545  20                 	db	32
  5702   00F546  69                 	db	105	;'i'
  5703   00F547  73                 	db	115	;'s'
  5704   00F548  20                 	db	32
  5705   00F549  30                 	db	48	;'0'
  5706   00F54A  0A                 	db	10
  5707   00F54B  0D                 	db	13
  5708   00F54C  00                 	db	0
  5709   00F54D                     
  5710                           ; BSR set to: 7
  5711   00F54D  53                 	db	83	;'S'
  5712   00F54E  44                 	db	68	;'D'
  5713   00F54F  20                 	db	32
  5714   00F550  43                 	db	67	;'C'
  5715   00F551  61                 	db	97	;'a'
  5716   00F552  72                 	db	114	;'r'
  5717   00F553  64                 	db	100	;'d'
  5718   00F554  3A                 	db	58	;':'
  5719   00F555  20                 	db	32
  5720   00F556  77                 	db	119	;'w'
  5721   00F557  72                 	db	114	;'r'
  5722   00F558  69                 	db	105	;'i'
  5723   00F559  74                 	db	116	;'t'
  5724   00F55A  65                 	db	101	;'e'
  5725   00F55B  35                 	db	53	;'5'
  5726   00F55C  31                 	db	49	;'1'
  5727   00F55D  32                 	db	50	;'2'
  5728   00F55E  3A                 	db	58	;':'
  5729   00F55F  20                 	db	32
  5730   00F560  43                 	db	67	;'C'
  5731   00F561  52                 	db	82	;'R'
  5732   00F562  43                 	db	67	;'C'
  5733   00F563  20                 	db	32
  5734   00F564  65                 	db	101	;'e'
  5735   00F565  72                 	db	114	;'r'
  5736   00F566  72                 	db	114	;'r'
  5737   00F567  6F                 	db	111	;'o'
  5738   00F568  72                 	db	114	;'r'
  5739   00F569  20                 	db	32
  5740   00F56A  28                 	db	40
  5741   00F56B  72                 	db	114	;'r'
  5742   00F56C  65                 	db	101	;'e'
  5743   00F56D  74                 	db	116	;'t'
  5744   00F56E  72                 	db	114	;'r'
  5745   00F56F  79                 	db	121	;'y'
  5746   00F570  3D                 	db	61	;'='
  5747   00F571  25                 	db	37
  5748   00F572  64                 	db	100	;'d'
  5749   00F573  29                 	db	41
  5750   00F574  0A                 	db	10
  5751   00F575  0D                 	db	13
  5752   00F576  00                 	db	0
  5753   00F577                     STR_117:
  5754                           
  5755                           ; BSR set to: 7
  5756   00F577  20                 	db	32
  5757   00F578  20                 	db	32
  5758   00F579  4C                 	db	76	;'L'
  5759   00F57A  4F                 	db	79	;'O'
  5760   00F57B  41                 	db	65	;'A'
  5761   00F57C  44                 	db	68	;'D'
  5762   00F57D  20                 	db	32
  5763   00F57E  5B                 	db	91	;'['
  5764   00F57F  4C                 	db	76	;'L'
  5765   00F580  3D                 	db	61	;'='
  5766   00F581  6C                 	db	108	;'l'
  5767   00F582  6F                 	db	111	;'o'
  5768   00F583  61                 	db	97	;'a'
  5769   00F584  64                 	db	100	;'d'
  5770   00F585  20                 	db	32
  5771   00F586  61                 	db	97	;'a'
  5772   00F587  64                 	db	100	;'d'
  5773   00F588  64                 	db	100	;'d'
  5774   00F589  72                 	db	114	;'r'
  5775   00F58A  65                 	db	101	;'e'
  5776   00F58B  73                 	db	115	;'s'
  5777   00F58C  73                 	db	115	;'s'
  5778   00F58D  28                 	db	40
  5779   00F58E  48                 	db	72	;'H'
  5780   00F58F  65                 	db	101	;'e'
  5781   00F590  78                 	db	120	;'x'
  5782   00F591  29                 	db	41
  5783   00F592  5D                 	db	93	;']'
  5784   00F593  20                 	db	32
  5785   00F594  66                 	db	102	;'f'
  5786   00F595  69                 	db	105	;'i'
  5787   00F596  6C                 	db	108	;'l'
  5788   00F597  65                 	db	101	;'e'
  5789   00F598  20                 	db	32
  5790   00F599  6E                 	db	110	;'n'
  5791   00F59A  61                 	db	97	;'a'
  5792   00F59B  6D                 	db	109	;'m'
  5793   00F59C  65                 	db	101	;'e'
  5794   00F59D  0D                 	db	13
  5795   00F59E  0A                 	db	10
  5796   00F59F  00                 	db	0
  5797   00F5A0                     STR_115:
  5798                           
  5799                           ; BSR set to: 7
  5800   00F5A0  20                 	db	32
  5801   00F5A1  20                 	db	32
  5802   00F5A2  4C                 	db	76	;'L'
  5803   00F5A3  53                 	db	83	;'S'
  5804   00F5A4  20                 	db	32
  5805   00F5A5  7C                 	db	124
  5806   00F5A6  20                 	db	32
  5807   00F5A7  44                 	db	68	;'D'
  5808   00F5A8  49                 	db	73	;'I'
  5809   00F5A9  52                 	db	82	;'R'
  5810   00F5AA  20                 	db	32
  5811   00F5AB  5B                 	db	91	;'['
  5812   00F5AC  66                 	db	102	;'f'
  5813   00F5AD  69                 	db	105	;'i'
  5814   00F5AE  6C                 	db	108	;'l'
  5815   00F5AF  65                 	db	101	;'e'
  5816   00F5B0  20                 	db	32
  5817   00F5B1  6E                 	db	110	;'n'
  5818   00F5B2  61                 	db	97	;'a'
  5819   00F5B3  6D                 	db	109	;'m'
  5820   00F5B4  65                 	db	101	;'e'
  5821   00F5B5  20                 	db	32
  5822   00F5B6  7C                 	db	124
  5823   00F5B7  20                 	db	32
  5824   00F5B8  64                 	db	100	;'d'
  5825   00F5B9  69                 	db	105	;'i'
  5826   00F5BA  72                 	db	114	;'r'
  5827   00F5BB  65                 	db	101	;'e'
  5828   00F5BC  63                 	db	99	;'c'
  5829   00F5BD  74                 	db	116	;'t'
  5830   00F5BE  6F                 	db	111	;'o'
  5831   00F5BF  72                 	db	114	;'r'
  5832   00F5C0  79                 	db	121	;'y'
  5833   00F5C1  20                 	db	32
  5834   00F5C2  6E                 	db	110	;'n'
  5835   00F5C3  61                 	db	97	;'a'
  5836   00F5C4  6D                 	db	109	;'m'
  5837   00F5C5  65                 	db	101	;'e'
  5838   00F5C6  0D                 	db	13
  5839   00F5C7  0A                 	db	10
  5840   00F5C8  00                 	db	0
  5841   00F5C9                     
  5842                           ; BSR set to: 7
  5843   00F5C9  53                 	db	83	;'S'
  5844   00F5CA  44                 	db	68	;'D'
  5845   00F5CB  20                 	db	32
  5846   00F5CC  43                 	db	67	;'C'
  5847   00F5CD  61                 	db	97	;'a'
  5848   00F5CE  72                 	db	114	;'r'
  5849   00F5CF  64                 	db	100	;'d'
  5850   00F5D0  3A                 	db	58	;':'
  5851   00F5D1  20                 	db	32
  5852   00F5D2  43                 	db	67	;'C'
  5853   00F5D3  61                 	db	97	;'a'
  5854   00F5D4  72                 	db	114	;'r'
  5855   00F5D5  64                 	db	100	;'d'
  5856   00F5D6  20                 	db	32
  5857   00F5D7  70                 	db	112	;'p'
  5858   00F5D8  6F                 	db	111	;'o'
  5859   00F5D9  77                 	db	119	;'w'
  5860   00F5DA  65                 	db	101	;'e'
  5861   00F5DB  72                 	db	114	;'r'
  5862   00F5DC  20                 	db	32
  5863   00F5DD  75                 	db	117	;'u'
  5864   00F5DE  70                 	db	112	;'p'
  5865   00F5DF  20                 	db	32
  5866   00F5E0  73                 	db	115	;'s'
  5867   00F5E1  74                 	db	116	;'t'
  5868   00F5E2  61                 	db	97	;'a'
  5869   00F5E3  74                 	db	116	;'t'
  5870   00F5E4  75                 	db	117	;'u'
  5871   00F5E5  73                 	db	115	;'s'
  5872   00F5E6  20                 	db	32
  5873   00F5E7  62                 	db	98	;'b'
  5874   00F5E8  69                 	db	105	;'i'
  5875   00F5E9  73                 	db	115	;'s'
  5876   00F5EA  20                 	db	32
  5877   00F5EB  69                 	db	105	;'i'
  5878   00F5EC  73                 	db	115	;'s'
  5879   00F5ED  20                 	db	32
  5880   00F5EE  30                 	db	48	;'0'
  5881   00F5EF  0A                 	db	10
  5882   00F5F0  0D                 	db	13
  5883   00F5F1  00                 	db	0
  5884   00F5F2                     STR_76:
  5885                           
  5886                           ; BSR set to: 7
  5887   00F5F2  49                 	db	73	;'I'
  5888   00F5F3  6E                 	db	110	;'n'
  5889   00F5F4  76                 	db	118	;'v'
  5890   00F5F5  61                 	db	97	;'a'
  5891   00F5F6  6C                 	db	108	;'l'
  5892   00F5F7  69                 	db	105	;'i'
  5893   00F5F8  64                 	db	100	;'d'
  5894   00F5F9  28                 	db	40
  5895   00F5FA  20                 	db	32
  5896   00F5FB  63                 	db	99	;'c'
  5897   00F5FC  6F                 	db	111	;'o'
  5898   00F5FD  6D                 	db	109	;'m'
  5899   00F5FE  6D                 	db	109	;'m'
  5900   00F5FF  61                 	db	97	;'a'
  5901   00F600  6E                 	db	110	;'n'
  5902   00F601  64                 	db	100	;'d'
  5903   00F602  20                 	db	32
  5904   00F603  7C                 	db	124
  5905   00F604  20                 	db	32
  5906   00F605  66                 	db	102	;'f'
  5907   00F606  69                 	db	105	;'i'
  5908   00F607  6C                 	db	108	;'l'
  5909   00F608  65                 	db	101	;'e'
  5910   00F609  20                 	db	32
  5911   00F60A  7C                 	db	124
  5912   00F60B  20                 	db	32
  5913   00F60C  64                 	db	100	;'d'
  5914   00F60D  69                 	db	105	;'i'
  5915   00F60E  72                 	db	114	;'r'
  5916   00F60F  65                 	db	101	;'e'
  5917   00F610  63                 	db	99	;'c'
  5918   00F611  74                 	db	116	;'t'
  5919   00F612  6F                 	db	111	;'o'
  5920   00F613  72                 	db	114	;'r'
  5921   00F614  79                 	db	121	;'y'
  5922   00F615  20                 	db	32
  5923   00F616  29                 	db	41
  5924   00F617  0D                 	db	13
  5925   00F618  0A                 	db	10
  5926   00F619  00                 	db	0
  5927   00F61A                     
  5928                           ; BSR set to: 7
  5929   00F61A  72                 	db	114	;'r'
  5930   00F61B  65                 	db	101	;'e'
  5931   00F61C  61                 	db	97	;'a'
  5932   00F61D  64                 	db	100	;'d'
  5933   00F61E  20                 	db	32
  5934   00F61F  4D                 	db	77	;'M'
  5935   00F620  42                 	db	66	;'B'
  5936   00F621  52                 	db	82	;'R'
  5937   00F622  20                 	db	32
  5938   00F623  70                 	db	112	;'p'
  5939   00F624  61                 	db	97	;'a'
  5940   00F625  72                 	db	114	;'r'
  5941   00F626  74                 	db	116	;'t'
  5942   00F627  69                 	db	105	;'i'
  5943   00F628  74                 	db	116	;'t'
  5944   00F629  69                 	db	105	;'i'
  5945   00F62A  6F                 	db	111	;'o'
  5946   00F62B  6E                 	db	110	;'n'
  5947   00F62C  20                 	db	32
  5948   00F62D  74                 	db	116	;'t'
  5949   00F62E  61                 	db	97	;'a'
  5950   00F62F  62                 	db	98	;'b'
  5951   00F630  6C                 	db	108	;'l'
  5952   00F631  65                 	db	101	;'e'
  5953   00F632  20                 	db	32
  5954   00F633  61                 	db	97	;'a'
  5955   00F634  74                 	db	116	;'t'
  5956   00F635  20                 	db	32
  5957   00F636  73                 	db	115	;'s'
  5958   00F637  65                 	db	101	;'e'
  5959   00F638  63                 	db	99	;'c'
  5960   00F639  74                 	db	116	;'t'
  5961   00F63A  6F                 	db	111	;'o'
  5962   00F63B  72                 	db	114	;'r'
  5963   00F63C  20                 	db	32
  5964   00F63D  30                 	db	48	;'0'
  5965   00F63E  0A                 	db	10
  5966   00F63F  0D                 	db	13
  5967   00F640  00                 	db	0
  5968   00F641                     STR_82:
  5969                           
  5970                           ; BSR set to: 7
  5971   00F641  4C                 	db	76	;'L'
  5972   00F642  6F                 	db	111	;'o'
  5973   00F643  61                 	db	97	;'a'
  5974   00F644  64                 	db	100	;'d'
  5975   00F645  20                 	db	32
  5976   00F646  25                 	db	37
  5977   00F647  73                 	db	115	;'s'
  5978   00F648  20                 	db	32
  5979   00F649  3A                 	db	58	;':'
  5980   00F64A  20                 	db	32
  5981   00F64B  41                 	db	65	;'A'
  5982   00F64C  64                 	db	100	;'d'
  5983   00F64D  72                 	db	114	;'r'
  5984   00F64E  20                 	db	32
  5985   00F64F  3D                 	db	61	;'='
  5986   00F650  20                 	db	32
  5987   00F651  24                 	db	36
  5988   00F652  25                 	db	37
  5989   00F653  30                 	db	48	;'0'
  5990   00F654  36                 	db	54	;'6'
  5991   00F655  6C                 	db	108	;'l'
  5992   00F656  58                 	db	88	;'X'
  5993   00F657  2C                 	db	44
  5994   00F658  20                 	db	32
  5995   00F659  53                 	db	83	;'S'
  5996   00F65A  69                 	db	105	;'i'
  5997   00F65B  7A                 	db	122	;'z'
  5998   00F65C  65                 	db	101	;'e'
  5999   00F65D  20                 	db	32
  6000   00F65E  3D                 	db	61	;'='
  6001   00F65F  20                 	db	32
  6002   00F660  24                 	db	36
  6003   00F661  25                 	db	37
  6004   00F662  30                 	db	48	;'0'
  6005   00F663  34                 	db	52	;'4'
  6006   00F664  58                 	db	88	;'X'
  6007   00F665  0D                 	db	13
  6008   00F666  0A                 	db	10
  6009   00F667  00                 	db	0
  6010   00F668                     STR_158:
  6011                           
  6012                           ; BSR set to: 7
  6013   00F668  44                 	db	68	;'D'
  6014   00F669  50                 	db	80	;'P'
  6015   00F66A  52                 	db	82	;'R'
  6016   00F66B  20                 	db	32
  6017   00F66C  3A                 	db	58	;':'
  6018   00F66D  20                 	db	32
  6019   00F66E  24                 	db	36
  6020   00F66F  25                 	db	37
  6021   00F670  30                 	db	48	;'0'
  6022   00F671  34                 	db	52	;'4'
  6023   00F672  58                 	db	88	;'X'
  6024   00F673  20                 	db	32
  6025   00F674  50                 	db	80	;'P'
  6026   00F675  42                 	db	66	;'B'
  6027   00F676  52                 	db	82	;'R'
  6028   00F677  20                 	db	32
  6029   00F678  3A                 	db	58	;':'
  6030   00F679  20                 	db	32
  6031   00F67A  24                 	db	36
  6032   00F67B  25                 	db	37
  6033   00F67C  30                 	db	48	;'0'
  6034   00F67D  32                 	db	50	;'2'
  6035   00F67E  58                 	db	88	;'X'
  6036   00F67F  20                 	db	32
  6037   00F680  44                 	db	68	;'D'
  6038   00F681  42                 	db	66	;'B'
  6039   00F682  52                 	db	82	;'R'
  6040   00F683  20                 	db	32
  6041   00F684  3A                 	db	58	;':'
  6042   00F685  20                 	db	32
  6043   00F686  24                 	db	36
  6044   00F687  25                 	db	37
  6045   00F688  30                 	db	48	;'0'
  6046   00F689  32                 	db	50	;'2'
  6047   00F68A  58                 	db	88	;'X'
  6048   00F68B  0D                 	db	13
  6049   00F68C  0A                 	db	10
  6050   00F68D  00                 	db	0
  6051   00F68E                     
  6052                           ; BSR set to: 7
  6053   00F68E  53                 	db	83	;'S'
  6054   00F68F  44                 	db	68	;'D'
  6055   00F690  20                 	db	32
  6056   00F691  43                 	db	67	;'C'
  6057   00F692  61                 	db	97	;'a'
  6058   00F693  72                 	db	114	;'r'
  6059   00F694  64                 	db	100	;'d'
  6060   00F695  3A                 	db	58	;':'
  6061   00F696  20                 	db	32
  6062   00F697  53                 	db	83	;'S'
  6063   00F698  44                 	db	68	;'D'
  6064   00F699  48                 	db	72	;'H'
  6065   00F69A  43                 	db	67	;'C'
  6066   00F69B  20                 	db	32
  6067   00F69C  6F                 	db	111	;'o'
  6068   00F69D  72                 	db	114	;'r'
  6069   00F69E  20                 	db	32
  6070   00F69F  53                 	db	83	;'S'
  6071   00F6A0  44                 	db	68	;'D'
  6072   00F6A1  58                 	db	88	;'X'
  6073   00F6A2  43                 	db	67	;'C'
  6074   00F6A3  20                 	db	32
  6075   00F6A4  63                 	db	99	;'c'
  6076   00F6A5  61                 	db	97	;'a'
  6077   00F6A6  72                 	db	114	;'r'
  6078   00F6A7  64                 	db	100	;'d'
  6079   00F6A8  20                 	db	32
  6080   00F6A9  64                 	db	100	;'d'
  6081   00F6AA  65                 	db	101	;'e'
  6082   00F6AB  74                 	db	116	;'t'
  6083   00F6AC  65                 	db	101	;'e'
  6084   00F6AD  63                 	db	99	;'c'
  6085   00F6AE  74                 	db	116	;'t'
  6086   00F6AF  65                 	db	101	;'e'
  6087   00F6B0  64                 	db	100	;'d'
  6088   00F6B1  0A                 	db	10
  6089   00F6B2  0D                 	db	13
  6090   00F6B3  00                 	db	0
  6091   00F6B4                     STR_6:
  6092                           
  6093                           ; BSR set to: 7
  6094   00F6B4  25                 	db	37
  6095   00F6B5  73                 	db	115	;'s'
  6096   00F6B6  3A                 	db	58	;':'
  6097   00F6B7  20                 	db	32
  6098   00F6B8  45                 	db	69	;'E'
  6099   00F6B9  52                 	db	82	;'R'
  6100   00F6BA  52                 	db	82	;'R'
  6101   00F6BB  4F                 	db	79	;'O'
  6102   00F6BC  52                 	db	82	;'R'
  6103   00F6BD  3A                 	db	58	;':'
  6104   00F6BE  20                 	db	32
  6105   00F6BF  6D                 	db	109	;'m'
  6106   00F6C0  6F                 	db	111	;'o'
  6107   00F6C1  64                 	db	100	;'d'
  6108   00F6C2  65                 	db	101	;'e'
  6109   00F6C3  20                 	db	32
  6110   00F6C4  25                 	db	37
  6111   00F6C5  64                 	db	100	;'d'
  6112   00F6C6  20                 	db	32
  6113   00F6C7  69                 	db	105	;'i'
  6114   00F6C8  73                 	db	115	;'s'
  6115   00F6C9  20                 	db	32
  6116   00F6CA  6E                 	db	110	;'n'
  6117   00F6CB  6F                 	db	111	;'o'
  6118   00F6CC  74                 	db	116	;'t'
  6119   00F6CD  20                 	db	32
  6120   00F6CE  73                 	db	115	;'s'
  6121   00F6CF  75                 	db	117	;'u'
  6122   00F6D0  70                 	db	112	;'p'
  6123   00F6D1  70                 	db	112	;'p'
  6124   00F6D2  6F                 	db	111	;'o'
  6125   00F6D3  72                 	db	114	;'r'
  6126   00F6D4  74                 	db	116	;'t'
  6127   00F6D5  65                 	db	101	;'e'
  6128   00F6D6  64                 	db	100	;'d'
  6129   00F6D7  0A                 	db	10
  6130   00F6D8  0D                 	db	13
  6131   00F6D9  00                 	db	0
  6132   00F6DA                     STR_77:
  6133                           
  6134                           ; BSR set to: 7
  6135   00F6DA  49                 	db	73	;'I'
  6136   00F6DB  6E                 	db	110	;'n'
  6137   00F6DC  73                 	db	115	;'s'
  6138   00F6DD  74                 	db	116	;'t'
  6139   00F6DE  61                 	db	97	;'a'
  6140   00F6DF  6C                 	db	108	;'l'
  6141   00F6E0  6C                 	db	108	;'l'
  6142   00F6E1  20                 	db	32
  6143   00F6E2  4D                 	db	77	;'M'
  6144   00F6E3  6F                 	db	111	;'o'
  6145   00F6E4  6E                 	db	110	;'n'
  6146   00F6E5  69                 	db	105	;'i'
  6147   00F6E6  74                 	db	116	;'t'
  6148   00F6E7  6F                 	db	111	;'o'
  6149   00F6E8  72                 	db	114	;'r'
  6150   00F6E9  20                 	db	32
  6151   00F6EA  50                 	db	80	;'P'
  6152   00F6EB  72                 	db	114	;'r'
  6153   00F6EC  6F                 	db	111	;'o'
  6154   00F6ED  67                 	db	103	;'g'
  6155   00F6EE  72                 	db	114	;'r'
  6156   00F6EF  61                 	db	97	;'a'
  6157   00F6F0  6D                 	db	109	;'m'
  6158   00F6F1  2E                 	db	46
  6159   00F6F2  2E                 	db	46
  6160   00F6F3  2E                 	db	46
  6161   00F6F4  2E                 	db	46
  6162   00F6F5  2E                 	db	46
  6163   00F6F6  2E                 	db	46
  6164   00F6F7  2E                 	db	46
  6165   00F6F8  2E                 	db	46
  6166   00F6F9  2E                 	db	46
  6167   00F6FA  2E                 	db	46
  6168   00F6FB  0D                 	db	13
  6169   00F6FC  0A                 	db	10
  6170   00F6FD  00                 	db	0
  6171   00F6FE                     
  6172                           ; BSR set to: 7
  6173   00F6FE  53                 	db	83	;'S'
  6174   00F6FF  44                 	db	68	;'D'
  6175   00F700  20                 	db	32
  6176   00F701  43                 	db	67	;'C'
  6177   00F702  61                 	db	97	;'a'
  6178   00F703  72                 	db	114	;'r'
  6179   00F704  64                 	db	100	;'d'
  6180   00F705  3A                 	db	58	;':'
  6181   00F706  20                 	db	32
  6182   00F707  69                 	db	105	;'i'
  6183   00F708  6E                 	db	110	;'n'
  6184   00F709  69                 	db	105	;'i'
  6185   00F70A  74                 	db	116	;'t'
  6186   00F70B  69                 	db	105	;'i'
  6187   00F70C  61                 	db	97	;'a'
  6188   00F70D  6C                 	db	108	;'l'
  6189   00F70E  69                 	db	105	;'i'
  6190   00F70F  7A                 	db	122	;'z'
  6191   00F710  65                 	db	101	;'e'
  6192   00F711  20                 	db	32
  6193   00F712  2E                 	db	46
  6194   00F713  2E                 	db	46
  6195   00F714  2E                 	db	46
  6196   00F715  20                 	db	32
  6197   00F716  73                 	db	115	;'s'
  6198   00F717  75                 	db	117	;'u'
  6199   00F718  63                 	db	99	;'c'
  6200   00F719  63                 	db	99	;'c'
  6201   00F71A  65                 	db	101	;'e'
  6202   00F71B  65                 	db	101	;'e'
  6203   00F71C  64                 	db	100	;'d'
  6204   00F71D  65                 	db	101	;'e'
  6205   00F71E  64                 	db	100	;'d'
  6206   00F71F  0A                 	db	10
  6207   00F720  0D                 	db	13
  6208   00F721  00                 	db	0
  6209   00F722                     
  6210                           ; BSR set to: 7
  6211   00F722  53                 	db	83	;'S'
  6212   00F723  44                 	db	68	;'D'
  6213   00F724  20                 	db	32
  6214   00F725  43                 	db	67	;'C'
  6215   00F726  61                 	db	97	;'a'
  6216   00F727  72                 	db	114	;'r'
  6217   00F728  64                 	db	100	;'d'
  6218   00F729  3A                 	db	58	;':'
  6219   00F72A  20                 	db	32
  6220   00F72B  75                 	db	117	;'u'
  6221   00F72C  6E                 	db	110	;'n'
  6222   00F72D  65                 	db	101	;'e'
  6223   00F72E  78                 	db	120	;'x'
  6224   00F72F  70                 	db	112	;'p'
  6225   00F730  65                 	db	101	;'e'
  6226   00F731  63                 	db	99	;'c'
  6227   00F732  74                 	db	116	;'t'
  6228   00F733  65                 	db	101	;'e'
  6229   00F734  64                 	db	100	;'d'
  6230   00F735  20                 	db	32
  6231   00F736  72                 	db	114	;'r'
  6232   00F737  65                 	db	101	;'e'
  6233   00F738  73                 	db	115	;'s'
  6234   00F739  70                 	db	112	;'p'
  6235   00F73A  6F                 	db	111	;'o'
  6236   00F73B  6E                 	db	110	;'n'
  6237   00F73C  73                 	db	115	;'s'
  6238   00F73D  65                 	db	101	;'e'
  6239   00F73E  20                 	db	32
  6240   00F73F  25                 	db	37
  6241   00F740  30                 	db	48	;'0'
  6242   00F741  32                 	db	50	;'2'
  6243   00F742  78                 	db	120	;'x'
  6244   00F743  0A                 	db	10
  6245   00F744  0D                 	db	13
  6246   00F745  00                 	db	0
  6247   00F746                     STR_45:
  6248                           
  6249                           ; BSR set to: 7
  6250   00F746  4D                 	db	77	;'M'
  6251   00F747  65                 	db	101	;'e'
  6252   00F748  6D                 	db	109	;'m'
  6253   00F749  6F                 	db	111	;'o'
  6254   00F74A  72                 	db	114	;'r'
  6255   00F74B  79                 	db	121	;'y'
  6256   00F74C  20                 	db	32
  6257   00F74D  24                 	db	36
  6258   00F74E  30                 	db	48	;'0'
  6259   00F74F  30                 	db	48	;'0'
  6260   00F750  30                 	db	48	;'0'
  6261   00F751  30                 	db	48	;'0'
  6262   00F752  30                 	db	48	;'0'
  6263   00F753  30                 	db	48	;'0'
  6264   00F754  20                 	db	32
  6265   00F755  2D                 	db	45
  6266   00F756  20                 	db	32
  6267   00F757  24                 	db	36
  6268   00F758  25                 	db	37
  6269   00F759  30                 	db	48	;'0'
  6270   00F75A  36                 	db	54	;'6'
  6271   00F75B  6C                 	db	108	;'l'
  6272   00F75C  58                 	db	88	;'X'
  6273   00F75D  20                 	db	32
  6274   00F75E  25                 	db	37
  6275   00F75F  64                 	db	100	;'d'
  6276   00F760  20                 	db	32
  6277   00F761  4B                 	db	75	;'K'
  6278   00F762  42                 	db	66	;'B'
  6279   00F763  20                 	db	32
  6280   00F764  4F                 	db	79	;'O'
  6281   00F765  4B                 	db	75	;'K'
  6282   00F766  0D                 	db	13
  6283   00F767  0A                 	db	10
  6284   00F768  00                 	db	0
  6285   00F769                     
  6286                           ; BSR set to: 7
  6287   00F769  53                 	db	83	;'S'
  6288   00F76A  44                 	db	68	;'D'
  6289   00F76B  20                 	db	32
  6290   00F76C  43                 	db	67	;'C'
  6291   00F76D  61                 	db	97	;'a'
  6292   00F76E  72                 	db	114	;'r'
  6293   00F76F  64                 	db	100	;'d'
  6294   00F770  3A                 	db	58	;':'
  6295   00F771  20                 	db	32
  6296   00F772  41                 	db	65	;'A'
  6297   00F773  43                 	db	67	;'C'
  6298   00F774  4D                 	db	77	;'M'
  6299   00F775  44                 	db	68	;'D'
  6300   00F776  34                 	db	52	;'4'
  6301   00F777  31                 	db	49	;'1'
  6302   00F778  20                 	db	32
  6303   00F779  72                 	db	114	;'r'
  6304   00F77A  65                 	db	101	;'e'
  6305   00F77B  73                 	db	115	;'s'
  6306   00F77C  70                 	db	112	;'p'
  6307   00F77D  6F                 	db	111	;'o'
  6308   00F77E  6E                 	db	110	;'n'
  6309   00F77F  73                 	db	115	;'s'
  6310   00F780  65                 	db	101	;'e'
  6311   00F781  20                 	db	32
  6312   00F782  69                 	db	105	;'i'
  6313   00F783  73                 	db	115	;'s'
  6314   00F784  20                 	db	32
  6315   00F785  25                 	db	37
  6316   00F786  30                 	db	48	;'0'
  6317   00F787  32                 	db	50	;'2'
  6318   00F788  78                 	db	120	;'x'
  6319   00F789  0A                 	db	10
  6320   00F78A  0D                 	db	13
  6321   00F78B  00                 	db	0
  6322   00F78C                     
  6323                           ; BSR set to: 7
  6324   00F78C  53                 	db	83	;'S'
  6325   00F78D  44                 	db	68	;'D'
  6326   00F78E  20                 	db	32
  6327   00F78F  43                 	db	67	;'C'
  6328   00F790  61                 	db	97	;'a'
  6329   00F791  72                 	db	114	;'r'
  6330   00F792  64                 	db	100	;'d'
  6331   00F793  3A                 	db	58	;':'
  6332   00F794  20                 	db	32
  6333   00F795  77                 	db	119	;'w'
  6334   00F796  72                 	db	114	;'r'
  6335   00F797  69                 	db	105	;'i'
  6336   00F798  74                 	db	116	;'t'
  6337   00F799  65                 	db	101	;'e'
  6338   00F79A  35                 	db	53	;'5'
  6339   00F79B  31                 	db	49	;'1'
  6340   00F79C  32                 	db	50	;'2'
  6341   00F79D  3A                 	db	58	;':'
  6342   00F79E  20                 	db	32
  6343   00F79F  74                 	db	116	;'t'
  6344   00F7A0  6F                 	db	111	;'o'
  6345   00F7A1  6B                 	db	107	;'k'
  6346   00F7A2  65                 	db	101	;'e'
  6347   00F7A3  6E                 	db	110	;'n'
  6348   00F7A4  20                 	db	32
  6349   00F7A5  69                 	db	105	;'i'
  6350   00F7A6  73                 	db	115	;'s'
  6351   00F7A7  20                 	db	32
  6352   00F7A8  25                 	db	37
  6353   00F7A9  30                 	db	48	;'0'
  6354   00F7AA  32                 	db	50	;'2'
  6355   00F7AB  78                 	db	120	;'x'
  6356   00F7AC  0A                 	db	10
  6357   00F7AD  0D                 	db	13
  6358   00F7AE  00                 	db	0
  6359   00F7AF                     STR_109:
  6360                           
  6361                           ; BSR set to: 7
  6362   00F7AF  52                 	db	82	;'R'
  6363   00F7B0  65                 	db	101	;'e'
  6364   00F7B1  6C                 	db	108	;'l'
  6365   00F7B2  6F                 	db	111	;'o'
  6366   00F7B3  61                 	db	97	;'a'
  6367   00F7B4  64                 	db	100	;'d'
  6368   00F7B5  20                 	db	32
  6369   00F7B6  25                 	db	37
  6370   00F7B7  73                 	db	115	;'s'
  6371   00F7B8  20                 	db	32
  6372   00F7B9  66                 	db	102	;'f'
  6373   00F7BA  6F                 	db	111	;'o'
  6374   00F7BB  72                 	db	114	;'r'
  6375   00F7BC  20                 	db	32
  6376   00F7BD  45                 	db	69	;'E'
  6377   00F7BE  6D                 	db	109	;'m'
  6378   00F7BF  75                 	db	117	;'u'
  6379   00F7C0  6C                 	db	108	;'l'
  6380   00F7C1  61                 	db	97	;'a'
  6381   00F7C2  74                 	db	116	;'t'
  6382   00F7C3  69                 	db	105	;'i'
  6383   00F7C4  6F                 	db	111	;'o'
  6384   00F7C5  6E                 	db	110	;'n'
  6385   00F7C6  20                 	db	32
  6386   00F7C7  4D                 	db	77	;'M'
  6387   00F7C8  6F                 	db	111	;'o'
  6388   00F7C9  64                 	db	100	;'d'
  6389   00F7CA  65                 	db	101	;'e'
  6390   00F7CB  2E                 	db	46
  6391   00F7CC  2E                 	db	46
  6392   00F7CD  2E                 	db	46
  6393   00F7CE  0D                 	db	13
  6394   00F7CF  0A                 	db	10
  6395   00F7D0  00                 	db	0
  6396   00F7D1                     STR_145:
  6397                           
  6398                           ; BSR set to: 7
  6399   00F7D1  44                 	db	68	;'D'
  6400   00F7D2  50                 	db	80	;'P'
  6401   00F7D3  52                 	db	82	;'R'
  6402   00F7D4  20                 	db	32
  6403   00F7D5  3A                 	db	58	;':'
  6404   00F7D6  20                 	db	32
  6405   00F7D7  24                 	db	36
  6406   00F7D8  25                 	db	37
  6407   00F7D9  30                 	db	48	;'0'
  6408   00F7DA  34                 	db	52	;'4'
  6409   00F7DB  58                 	db	88	;'X'
  6410   00F7DC  20                 	db	32
  6411   00F7DD  50                 	db	80	;'P'
  6412   00F7DE  42                 	db	66	;'B'
  6413   00F7DF  52                 	db	82	;'R'
  6414   00F7E0  20                 	db	32
  6415   00F7E1  3A                 	db	58	;':'
  6416   00F7E2  20                 	db	32
  6417   00F7E3  24                 	db	36
  6418   00F7E4  30                 	db	48	;'0'
  6419   00F7E5  30                 	db	48	;'0'
  6420   00F7E6  20                 	db	32
  6421   00F7E7  44                 	db	68	;'D'
  6422   00F7E8  42                 	db	66	;'B'
  6423   00F7E9  52                 	db	82	;'R'
  6424   00F7EA  20                 	db	32
  6425   00F7EB  3A                 	db	58	;':'
  6426   00F7EC  20                 	db	32
  6427   00F7ED  24                 	db	36
  6428   00F7EE  30                 	db	48	;'0'
  6429   00F7EF  30                 	db	48	;'0'
  6430   00F7F0  0D                 	db	13
  6431   00F7F1  0A                 	db	10
  6432   00F7F2  00                 	db	0
  6433   00F7F3                     
  6434                           ; BSR set to: 7
  6435   00F7F3  53                 	db	83	;'S'
  6436   00F7F4  44                 	db	68	;'D'
  6437   00F7F5  20                 	db	32
  6438   00F7F6  43                 	db	67	;'C'
  6439   00F7F7  61                 	db	97	;'a'
  6440   00F7F8  72                 	db	114	;'r'
  6441   00F7F9  64                 	db	100	;'d'
  6442   00F7FA  3A                 	db	58	;':'
  6443   00F7FB  20                 	db	32
  6444   00F7FC  43                 	db	67	;'C'
  6445   00F7FD  4D                 	db	77	;'M'
  6446   00F7FE  44                 	db	68	;'D'
  6447   00F7FF  35                 	db	53	;'5'
  6448   00F800  39                 	db	57	;'9'
  6449   00F801  20                 	db	32
  6450   00F802  72                 	db	114	;'r'
  6451   00F803  65                 	db	101	;'e'
  6452   00F804  73                 	db	115	;'s'
  6453   00F805  70                 	db	112	;'p'
  6454   00F806  6F                 	db	111	;'o'
  6455   00F807  6E                 	db	110	;'n'
  6456   00F808  73                 	db	115	;'s'
  6457   00F809  65                 	db	101	;'e'
  6458   00F80A  20                 	db	32
  6459   00F80B  69                 	db	105	;'i'
  6460   00F80C  73                 	db	115	;'s'
  6461   00F80D  20                 	db	32
  6462   00F80E  25                 	db	37
  6463   00F80F  30                 	db	48	;'0'
  6464   00F810  32                 	db	50	;'2'
  6465   00F811  78                 	db	120	;'x'
  6466   00F812  0A                 	db	10
  6467   00F813  0D                 	db	13
  6468   00F814  00                 	db	0
  6469   00F815                     
  6470                           ; BSR set to: 7
  6471   00F815  70                 	db	112	;'p'
  6472   00F816  61                 	db	97	;'a'
  6473   00F817  72                 	db	114	;'r'
  6474   00F818  74                 	db	116	;'t'
  6475   00F819  69                 	db	105	;'i'
  6476   00F81A  74                 	db	116	;'t'
  6477   00F81B  69                 	db	105	;'i'
  6478   00F81C  6F                 	db	111	;'o'
  6479   00F81D  6E                 	db	110	;'n'
  6480   00F81E  20                 	db	32
  6481   00F81F  73                 	db	115	;'s'
  6482   00F820  74                 	db	116	;'t'
  6483   00F821  61                 	db	97	;'a'
  6484   00F822  72                 	db	114	;'r'
  6485   00F823  74                 	db	116	;'t'
  6486   00F824  73                 	db	115	;'s'
  6487   00F825  20                 	db	32
  6488   00F826  61                 	db	97	;'a'
  6489   00F827  74                 	db	116	;'t'
  6490   00F828  20                 	db	32
  6491   00F829  73                 	db	115	;'s'
  6492   00F82A  65                 	db	101	;'e'
  6493   00F82B  63                 	db	99	;'c'
  6494   00F82C  74                 	db	116	;'t'
  6495   00F82D  6F                 	db	111	;'o'
  6496   00F82E  72                 	db	114	;'r'
  6497   00F82F  20                 	db	32
  6498   00F830  25                 	db	37
  6499   00F831  6C                 	db	108	;'l'
  6500   00F832  64                 	db	100	;'d'
  6501   00F833  0A                 	db	10
  6502   00F834  0D                 	db	13
  6503   00F835  00                 	db	0
  6504   00F836                     STR_146:
  6505                           
  6506                           ; BSR set to: 7
  6507   00F836  50                 	db	80	;'P'
  6508   00F837  49                 	db	73	;'I'
  6509   00F838  43                 	db	67	;'C'
  6510   00F839  20                 	db	32
  6511   00F83A  49                 	db	73	;'I'
  6512   00F83B  2F                 	db	47
  6513   00F83C  46                 	db	70	;'F'
  6514   00F83D  20                 	db	32
  6515   00F83E  53                 	db	83	;'S'
  6516   00F83F  68                 	db	104	;'h'
  6517   00F840  61                 	db	97	;'a'
  6518   00F841  72                 	db	114	;'r'
  6519   00F842  65                 	db	101	;'e'
  6520   00F843  64                 	db	100	;'d'
  6521   00F844  20                 	db	32
  6522   00F845  6D                 	db	109	;'m'
  6523   00F846  65                 	db	101	;'e'
  6524   00F847  6D                 	db	109	;'m'
  6525   00F848  6F                 	db	111	;'o'
  6526   00F849  72                 	db	114	;'r'
  6527   00F84A  79                 	db	121	;'y'
  6528   00F84B  20                 	db	32
  6529   00F84C  3A                 	db	58	;':'
  6530   00F84D  20                 	db	32
  6531   00F84E  24                 	db	36
  6532   00F84F  25                 	db	37
  6533   00F850  30                 	db	48	;'0'
  6534   00F851  36                 	db	54	;'6'
  6535   00F852  6C                 	db	108	;'l'
  6536   00F853  58                 	db	88	;'X'
  6537   00F854  0D                 	db	13
  6538   00F855  0A                 	db	10
  6539   00F856  00                 	db	0
  6540   00F857                     STR_112:
  6541                           
  6542                           ; BSR set to: 7
  6543   00F857  50                 	db	80	;'P'
  6544   00F858  42                 	db	66	;'B'
  6545   00F859  52                 	db	82	;'R'
  6546   00F85A  3D                 	db	61	;'='
  6547   00F85B  24                 	db	36
  6548   00F85C  25                 	db	37
  6549   00F85D  30                 	db	48	;'0'
  6550   00F85E  32                 	db	50	;'2'
  6551   00F85F  58                 	db	88	;'X'
  6552   00F860  20                 	db	32
  6553   00F861  44                 	db	68	;'D'
  6554   00F862  42                 	db	66	;'B'
  6555   00F863  52                 	db	82	;'R'
  6556   00F864  3D                 	db	61	;'='
  6557   00F865  24                 	db	36
  6558   00F866  25                 	db	37
  6559   00F867  30                 	db	48	;'0'
  6560   00F868  32                 	db	50	;'2'
  6561   00F869  58                 	db	88	;'X'
  6562   00F86A  20                 	db	32
  6563   00F86B  44                 	db	68	;'D'
  6564   00F86C  50                 	db	80	;'P'
  6565   00F86D  52                 	db	82	;'R'
  6566   00F86E  3D                 	db	61	;'='
  6567   00F86F  24                 	db	36
  6568   00F870  25                 	db	37
  6569   00F871  30                 	db	48	;'0'
  6570   00F872  34                 	db	52	;'4'
  6571   00F873  58                 	db	88	;'X'
  6572   00F874  0D                 	db	13
  6573   00F875  0A                 	db	10
  6574   00F876  00                 	db	0
  6575   00F877                     STR_36:
  6576                           
  6577                           ; BSR set to: 7
  6578   00F877  66                 	db	102	;'f'
  6579   00F878  5F                 	db	95	;'_'
  6580   00F879  77                 	db	119	;'w'
  6581   00F87A  72                 	db	114	;'r'
  6582   00F87B  69                 	db	105	;'i'
  6583   00F87C  74                 	db	116	;'t'
  6584   00F87D  65                 	db	101	;'e'
  6585   00F87E  28                 	db	40
  6586   00F87F  29                 	db	41
  6587   00F880  3A                 	db	58	;':'
  6588   00F881  20                 	db	32
  6589   00F882  45                 	db	69	;'E'
  6590   00F883  52                 	db	82	;'R'
  6591   00F884  52                 	db	82	;'R'
  6592   00F885  4F                 	db	79	;'O'
  6593   00F886  52                 	db	82	;'R'
  6594   00F887  20                 	db	32
  6595   00F888  72                 	db	114	;'r'
  6596   00F889  65                 	db	101	;'e'
  6597   00F88A  73                 	db	115	;'s'
  6598   00F88B  3D                 	db	61	;'='
  6599   00F88C  25                 	db	37
  6600   00F88D  64                 	db	100	;'d'
  6601   00F88E  2C                 	db	44
  6602   00F88F  20                 	db	32
  6603   00F890  6E                 	db	110	;'n'
  6604   00F891  3D                 	db	61	;'='
  6605   00F892  25                 	db	37
  6606   00F893  64                 	db	100	;'d'
  6607   00F894  0A                 	db	10
  6608   00F895  0D                 	db	13
  6609   00F896  00                 	db	0
  6610   00F897                     STR_110:
  6611                           
  6612                           ; BSR set to: 7
  6613   00F897  52                 	db	82	;'R'
  6614   00F898  65                 	db	101	;'e'
  6615   00F899  6C                 	db	108	;'l'
  6616   00F89A  6F                 	db	111	;'o'
  6617   00F89B  61                 	db	97	;'a'
  6618   00F89C  64                 	db	100	;'d'
  6619   00F89D  20                 	db	32
  6620   00F89E  25                 	db	37
  6621   00F89F  73                 	db	115	;'s'
  6622   00F8A0  20                 	db	32
  6623   00F8A1  66                 	db	102	;'f'
  6624   00F8A2  6F                 	db	111	;'o'
  6625   00F8A3  72                 	db	114	;'r'
  6626   00F8A4  20                 	db	32
  6627   00F8A5  4E                 	db	78	;'N'
  6628   00F8A6  61                 	db	97	;'a'
  6629   00F8A7  74                 	db	116	;'t'
  6630   00F8A8  69                 	db	105	;'i'
  6631   00F8A9  76                 	db	118	;'v'
  6632   00F8AA  65                 	db	101	;'e'
  6633   00F8AB  20                 	db	32
  6634   00F8AC  4D                 	db	77	;'M'
  6635   00F8AD  6F                 	db	111	;'o'
  6636   00F8AE  64                 	db	100	;'d'
  6637   00F8AF  65                 	db	101	;'e'
  6638   00F8B0  2E                 	db	46
  6639   00F8B1  2E                 	db	46
  6640   00F8B2  2E                 	db	46
  6641   00F8B3  0D                 	db	13
  6642   00F8B4  0A                 	db	10
  6643   00F8B5  00                 	db	0
  6644   00F8B6                     STR_135:
  6645                           
  6646                           ; BSR set to: 7
  6647   00F8B6  4E                 	db	78	;'N'
  6648   00F8B7  6F                 	db	111	;'o'
  6649   00F8B8  74                 	db	116	;'t'
  6650   00F8B9  20                 	db	32
  6651   00F8BA  4D                 	db	77	;'M'
  6652   00F8BB  45                 	db	69	;'E'
  6653   00F8BC  5A                 	db	90	;'Z'
  6654   00F8BD  57                 	db	87	;'W'
  6655   00F8BE  36                 	db	54	;'6'
  6656   00F8BF  35                 	db	53	;'5'
  6657   00F8C0  43                 	db	67	;'C'
  6658   00F8C1  5F                 	db	95	;'_'
  6659   00F8C2  52                 	db	82	;'R'
  6660   00F8C3  41                 	db	65	;'A'
  6661   00F8C4  4D                 	db	77	;'M'
  6662   00F8C5  20                 	db	32
  6663   00F8C6  66                 	db	102	;'f'
  6664   00F8C7  6F                 	db	111	;'o'
  6665   00F8C8  72                 	db	114	;'r'
  6666   00F8C9  6D                 	db	109	;'m'
  6667   00F8CA  61                 	db	97	;'a'
  6668   00F8CB  74                 	db	116	;'t'
  6669   00F8CC  20                 	db	32
  6670   00F8CD  66                 	db	102	;'f'
  6671   00F8CE  69                 	db	105	;'i'
  6672   00F8CF  6C                 	db	108	;'l'
  6673   00F8D0  65                 	db	101	;'e'
  6674   00F8D1  2E                 	db	46
  6675   00F8D2  0D                 	db	13
  6676   00F8D3  0A                 	db	10
  6677   00F8D4  00                 	db	0
  6678   00F8D5                     STR_38:
  6679                           
  6680                           ; BSR set to: 7
  6681   00F8D5  66                 	db	102	;'f'
  6682   00F8D6  5F                 	db	95	;'_'
  6683   00F8D7  72                 	db	114	;'r'
  6684   00F8D8  65                 	db	101	;'e'
  6685   00F8D9  61                 	db	97	;'a'
  6686   00F8DA  64                 	db	100	;'d'
  6687   00F8DB  28                 	db	40
  6688   00F8DC  29                 	db	41
  6689   00F8DD  3A                 	db	58	;':'
  6690   00F8DE  20                 	db	32
  6691   00F8DF  45                 	db	69	;'E'
  6692   00F8E0  52                 	db	82	;'R'
  6693   00F8E1  52                 	db	82	;'R'
  6694   00F8E2  4F                 	db	79	;'O'
  6695   00F8E3  52                 	db	82	;'R'
  6696   00F8E4  20                 	db	32
  6697   00F8E5  72                 	db	114	;'r'
  6698   00F8E6  65                 	db	101	;'e'
  6699   00F8E7  73                 	db	115	;'s'
  6700   00F8E8  3D                 	db	61	;'='
  6701   00F8E9  25                 	db	37
  6702   00F8EA  64                 	db	100	;'d'
  6703   00F8EB  2C                 	db	44
  6704   00F8EC  20                 	db	32
  6705   00F8ED  6E                 	db	110	;'n'
  6706   00F8EE  3D                 	db	61	;'='
  6707   00F8EF  25                 	db	37
  6708   00F8F0  64                 	db	100	;'d'
  6709   00F8F1  0A                 	db	10
  6710   00F8F2  0D                 	db	13
  6711   00F8F3  00                 	db	0
  6712   00F8F4                     
  6713                           ; BSR set to: 7
  6714   00F8F4  66                 	db	102	;'f'
  6715   00F8F5  61                 	db	97	;'a'
  6716   00F8F6  69                 	db	105	;'i'
  6717   00F8F7  6C                 	db	108	;'l'
  6718   00F8F8  65                 	db	101	;'e'
  6719   00F8F9  64                 	db	100	;'d'
  6720   00F8FA  20                 	db	32
  6721   00F8FB  74                 	db	116	;'t'
  6722   00F8FC  6F                 	db	111	;'o'
  6723   00F8FD  20                 	db	32
  6724   00F8FE  77                 	db	119	;'w'
  6725   00F8FF  72                 	db	114	;'r'
  6726   00F900  69                 	db	105	;'i'
  6727   00F901  74                 	db	116	;'t'
  6728   00F902  65                 	db	101	;'e'
  6729   00F903  20                 	db	32
  6730   00F904  73                 	db	115	;'s'
  6731   00F905  65                 	db	101	;'e'
  6732   00F906  63                 	db	99	;'c'
  6733   00F907  74                 	db	116	;'t'
  6734   00F908  6F                 	db	111	;'o'
  6735   00F909  72                 	db	114	;'r'
  6736   00F90A  20                 	db	32
  6737   00F90B  25                 	db	37
  6738   00F90C  6C                 	db	108	;'l'
  6739   00F90D  64                 	db	100	;'d'
  6740   00F90E  0A                 	db	10
  6741   00F90F  0D                 	db	13
  6742   00F910  00                 	db	0
  6743   00F911                     STR_134:
  6744                           
  6745                           ; BSR set to: 7
  6746   00F911  0D                 	db	13
  6747   00F912  0A                 	db	10
  6748   00F913  25                 	db	37
  6749   00F914  73                 	db	115	;'s'
  6750   00F915  20                 	db	32
  6751   00F916  3A                 	db	58	;':'
  6752   00F917  20                 	db	32
  6753   00F918  53                 	db	83	;'S'
  6754   00F919  69                 	db	105	;'i'
  6755   00F91A  7A                 	db	122	;'z'
  6756   00F91B  65                 	db	101	;'e'
  6757   00F91C  20                 	db	32
  6758   00F91D  3D                 	db	61	;'='
  6759   00F91E  20                 	db	32
  6760   00F91F  24                 	db	36
  6761   00F920  25                 	db	37
  6762   00F921  30                 	db	48	;'0'
  6763   00F922  34                 	db	52	;'4'
  6764   00F923  58                 	db	88	;'X'
  6765   00F924  20                 	db	32
  6766   00F925  62                 	db	98	;'b'
  6767   00F926  79                 	db	121	;'y'
  6768   00F927  74                 	db	116	;'t'
  6769   00F928  65                 	db	101	;'e'
  6770   00F929  73                 	db	115	;'s'
  6771   00F92A  2E                 	db	46
  6772   00F92B  0D                 	db	13
  6773   00F92C  0A                 	db	10
  6774   00F92D  00                 	db	0
  6775   00F92E                     STR_136:
  6776                           
  6777                           ; BSR set to: 7
  6778   00F92E  46                 	db	70	;'F'
  6779   00F92F  49                 	db	73	;'I'
  6780   00F930  6C                 	db	108	;'l'
  6781   00F931  65                 	db	101	;'e'
  6782   00F932  20                 	db	32
  6783   00F933  6C                 	db	108	;'l'
  6784   00F934  6F                 	db	111	;'o'
  6785   00F935  61                 	db	97	;'a'
  6786   00F936  64                 	db	100	;'d'
  6787   00F937  20                 	db	32
  6788   00F938  61                 	db	97	;'a'
  6789   00F939  64                 	db	100	;'d'
  6790   00F93A  64                 	db	100	;'d'
  6791   00F93B  72                 	db	114	;'r'
  6792   00F93C  65                 	db	101	;'e'
  6793   00F93D  73                 	db	115	;'s'
  6794   00F93E  73                 	db	115	;'s'
  6795   00F93F  20                 	db	32
  6796   00F940  3A                 	db	58	;':'
  6797   00F941  20                 	db	32
  6798   00F942  24                 	db	36
  6799   00F943  25                 	db	37
  6800   00F944  30                 	db	48	;'0'
  6801   00F945  36                 	db	54	;'6'
  6802   00F946  6C                 	db	108	;'l'
  6803   00F947  58                 	db	88	;'X'
  6804   00F948  0D                 	db	13
  6805   00F949  0A                 	db	10
  6806   00F94A  00                 	db	0
  6807   00F94B                     
  6808                           ; BSR set to: 7
  6809   00F94B  66                 	db	102	;'f'
  6810   00F94C  61                 	db	97	;'a'
  6811   00F94D  69                 	db	105	;'i'
  6812   00F94E  6C                 	db	108	;'l'
  6813   00F94F  65                 	db	101	;'e'
  6814   00F950  64                 	db	100	;'d'
  6815   00F951  20                 	db	32
  6816   00F952  74                 	db	116	;'t'
  6817   00F953  6F                 	db	111	;'o'
  6818   00F954  20                 	db	32
  6819   00F955  72                 	db	114	;'r'
  6820   00F956  65                 	db	101	;'e'
  6821   00F957  61                 	db	97	;'a'
  6822   00F958  64                 	db	100	;'d'
  6823   00F959  20                 	db	32
  6824   00F95A  73                 	db	115	;'s'
  6825   00F95B  65                 	db	101	;'e'
  6826   00F95C  63                 	db	99	;'c'
  6827   00F95D  74                 	db	116	;'t'
  6828   00F95E  6F                 	db	111	;'o'
  6829   00F95F  72                 	db	114	;'r'
  6830   00F960  20                 	db	32
  6831   00F961  25                 	db	37
  6832   00F962  6C                 	db	108	;'l'
  6833   00F963  64                 	db	100	;'d'
  6834   00F964  0A                 	db	10
  6835   00F965  0D                 	db	13
  6836   00F966  00                 	db	0
  6837   00F967                     
  6838                           ; BSR set to: 7
  6839   00F967  0A                 	db	10
  6840   00F968  0D                 	db	13
  6841   00F969  53                 	db	83	;'S'
  6842   00F96A  44                 	db	68	;'D'
  6843   00F96B  20                 	db	32
  6844   00F96C  43                 	db	67	;'C'
  6845   00F96D  61                 	db	97	;'a'
  6846   00F96E  72                 	db	114	;'r'
  6847   00F96F  64                 	db	100	;'d'
  6848   00F970  3A                 	db	58	;':'
  6849   00F971  20                 	db	32
  6850   00F972  69                 	db	105	;'i'
  6851   00F973  6E                 	db	110	;'n'
  6852   00F974  69                 	db	105	;'i'
  6853   00F975  74                 	db	116	;'t'
  6854   00F976  69                 	db	105	;'i'
  6855   00F977  61                 	db	97	;'a'
  6856   00F978  6C                 	db	108	;'l'
  6857   00F979  69                 	db	105	;'i'
  6858   00F97A  7A                 	db	122	;'z'
  6859   00F97B  65                 	db	101	;'e'
  6860   00F97C  20                 	db	32
  6861   00F97D  2E                 	db	46
  6862   00F97E  2E                 	db	46
  6863   00F97F  2E                 	db	46
  6864   00F980  0A                 	db	10
  6865   00F981  0D                 	db	13
  6866   00F982  00                 	db	0
  6867   00F983                     STR_161:
  6868                           
  6869                           ; BSR set to: 7
  6870   00F983  4E                 	db	78	;'N'
  6871   00F984  6F                 	db	111	;'o'
  6872   00F985  20                 	db	32
  6873   00F986  50                 	db	80	;'P'
  6874   00F987  72                 	db	114	;'r'
  6875   00F988  6F                 	db	111	;'o'
  6876   00F989  67                 	db	103	;'g'
  6877   00F98A  72                 	db	114	;'r'
  6878   00F98B  61                 	db	97	;'a'
  6879   00F98C  6D                 	db	109	;'m'
  6880   00F98D  20                 	db	32
  6881   00F98E  74                 	db	116	;'t'
  6882   00F98F  6F                 	db	111	;'o'
  6883   00F990  20                 	db	32
  6884   00F991  74                 	db	116	;'t'
  6885   00F992  65                 	db	101	;'e'
  6886   00F993  72                 	db	114	;'r'
  6887   00F994  6D                 	db	109	;'m'
  6888   00F995  69                 	db	105	;'i'
  6889   00F996  6E                 	db	110	;'n'
  6890   00F997  61                 	db	97	;'a'
  6891   00F998  74                 	db	116	;'t'
  6892   00F999  65                 	db	101	;'e'
  6893   00F99A  2E                 	db	46
  6894   00F99B  0D                 	db	13
  6895   00F99C  0A                 	db	10
  6896   00F99D  00                 	db	0
  6897   00F99E                     STR_85:
  6898                           
  6899                           ; BSR set to: 7
  6900   00F99E  46                 	db	70	;'F'
  6901   00F99F  61                 	db	97	;'a'
  6902   00F9A0  69                 	db	105	;'i'
  6903   00F9A1  6C                 	db	108	;'l'
  6904   00F9A2  65                 	db	101	;'e'
  6905   00F9A3  64                 	db	100	;'d'
  6906   00F9A4  20                 	db	32
  6907   00F9A5  74                 	db	116	;'t'
  6908   00F9A6  6F                 	db	111	;'o'
  6909   00F9A7  20                 	db	32
  6910   00F9A8  6D                 	db	109	;'m'
  6911   00F9A9  6F                 	db	111	;'o'
  6912   00F9AA  75                 	db	117	;'u'
  6913   00F9AB  6E                 	db	110	;'n'
  6914   00F9AC  74                 	db	116	;'t'
  6915   00F9AD  20                 	db	32
  6916   00F9AE  53                 	db	83	;'S'
  6917   00F9AF  44                 	db	68	;'D'
  6918   00F9B0  20                 	db	32
  6919   00F9B1  43                 	db	67	;'C'
  6920   00F9B2  61                 	db	97	;'a'
  6921   00F9B3  72                 	db	114	;'r'
  6922   00F9B4  64                 	db	100	;'d'
  6923   00F9B5  2E                 	db	46
  6924   00F9B6  0A                 	db	10
  6925   00F9B7  0D                 	db	13
  6926   00F9B8  00                 	db	0
  6927   00F9B9                     
  6928                           ; BSR set to: 7
  6929   00F9B9  53                 	db	83	;'S'
  6930   00F9BA  44                 	db	68	;'D'
  6931   00F9BB  20                 	db	32
  6932   00F9BC  43                 	db	67	;'C'
  6933   00F9BD  61                 	db	97	;'a'
  6934   00F9BE  72                 	db	114	;'r'
  6935   00F9BF  64                 	db	100	;'d'
  6936   00F9C0  3A                 	db	58	;':'
  6937   00F9C1  20                 	db	32
  6938   00F9C2  41                 	db	65	;'A'
  6939   00F9C3  43                 	db	67	;'C'
  6940   00F9C4  4D                 	db	77	;'M'
  6941   00F9C5  44                 	db	68	;'D'
  6942   00F9C6  34                 	db	52	;'4'
  6943   00F9C7  31                 	db	49	;'1'
  6944   00F9C8  2C                 	db	44
  6945   00F9C9  20                 	db	32
  6946   00F9CA  52                 	db	82	;'R'
  6947   00F9CB  31                 	db	49	;'1'
  6948   00F9CC  3D                 	db	61	;'='
  6949   00F9CD  25                 	db	37
  6950   00F9CE  30                 	db	48	;'0'
  6951   00F9CF  32                 	db	50	;'2'
  6952   00F9D0  78                 	db	120	;'x'
  6953   00F9D1  0A                 	db	10
  6954   00F9D2  0D                 	db	13
  6955   00F9D3  00                 	db	0
  6956   00F9D4                     
  6957                           ; BSR set to: 7
  6958   00F9D4  66                 	db	102	;'f'
  6959   00F9D5  61                 	db	97	;'a'
  6960   00F9D6  69                 	db	105	;'i'
  6961   00F9D7  6C                 	db	108	;'l'
  6962   00F9D8  65                 	db	101	;'e'
  6963   00F9D9  64                 	db	100	;'d'
  6964   00F9DA  20                 	db	32
  6965   00F9DB  74                 	db	116	;'t'
  6966   00F9DC  6F                 	db	111	;'o'
  6967   00F9DD  20                 	db	32
  6968   00F9DE  72                 	db	114	;'r'
  6969   00F9DF  65                 	db	101	;'e'
  6970   00F9E0  61                 	db	97	;'a'
  6971   00F9E1  64                 	db	100	;'d'
  6972   00F9E2  20                 	db	32
  6973   00F9E3  73                 	db	115	;'s'
  6974   00F9E4  65                 	db	101	;'e'
  6975   00F9E5  63                 	db	99	;'c'
  6976   00F9E6  74                 	db	116	;'t'
  6977   00F9E7  6F                 	db	111	;'o'
  6978   00F9E8  72                 	db	114	;'r'
  6979   00F9E9  20                 	db	32
  6980   00F9EA  30                 	db	48	;'0'
  6981   00F9EB  0A                 	db	10
  6982   00F9EC  0D                 	db	13
  6983   00F9ED  00                 	db	0
  6984   00F9EE                     STR_75:
  6985                           
  6986                           ; BSR set to: 7
  6987   00F9EE  0D                 	db	13
  6988   00F9EF  0A                 	db	10
  6989   00F9F0  41                 	db	65	;'A'
  6990   00F9F1  73                 	db	115	;'s'
  6991   00F9F2  73                 	db	115	;'s'
  6992   00F9F3  65                 	db	101	;'e'
  6993   00F9F4  72                 	db	114	;'r'
  6994   00F9F5  74                 	db	116	;'t'
  6995   00F9F6  20                 	db	32
  6996   00F9F7  4E                 	db	78	;'N'
  6997   00F9F8  4D                 	db	77	;'M'
  6998   00F9F9  49                 	db	73	;'I'
  6999   00F9FA  20                 	db	32
  7000   00F9FB  69                 	db	105	;'i'
  7001   00F9FC  6E                 	db	110	;'n'
  7002   00F9FD  74                 	db	116	;'t'
  7003   00F9FE  65                 	db	101	;'e'
  7004   00F9FF  72                 	db	114	;'r'
  7005   00FA00  72                 	db	114	;'r'
  7006   00FA01  75                 	db	117	;'u'
  7007   00FA02  70                 	db	112	;'p'
  7008   00FA03  74                 	db	116	;'t'
  7009   00FA04  2E                 	db	46
  7010   00FA05  0D                 	db	13
  7011   00FA06  0A                 	db	10
  7012   00FA07  00                 	db	0
  7013   00FA08                     STR_141:
  7014                           
  7015                           ; BSR set to: 7
  7016   00FA08  57                 	db	87	;'W'
  7017   00FA09  36                 	db	54	;'6'
  7018   00FA0A  35                 	db	53	;'5'
  7019   00FA0B  43                 	db	67	;'C'
  7020   00FA0C  30                 	db	48	;'0'
  7021   00FA0D  32                 	db	50	;'2'
  7022   00FA0E  20                 	db	32
  7023   00FA0F  28                 	db	40
  7024   00FA10  45                 	db	69	;'E'
  7025   00FA11  6D                 	db	109	;'m'
  7026   00FA12  75                 	db	117	;'u'
  7027   00FA13  6C                 	db	108	;'l'
  7028   00FA14  61                 	db	97	;'a'
  7029   00FA15  74                 	db	116	;'t'
  7030   00FA16  69                 	db	105	;'i'
  7031   00FA17  6F                 	db	111	;'o'
  7032   00FA18  6E                 	db	110	;'n'
  7033   00FA19  20                 	db	32
  7034   00FA1A  4D                 	db	77	;'M'
  7035   00FA1B  6F                 	db	111	;'o'
  7036   00FA1C  64                 	db	100	;'d'
  7037   00FA1D  65                 	db	101	;'e'
  7038   00FA1E  29                 	db	41
  7039   00FA1F  0A                 	db	10
  7040   00FA20  0D                 	db	13
  7041   00FA21  00                 	db	0
  7042   00FA22                     STR_155:
  7043                           
  7044                           ; BSR set to: 7
  7045   00FA22  42                 	db	66	;'B'
  7046   00FA23  6F                 	db	111	;'o'
  7047   00FA24  74                 	db	116	;'t'
  7048   00FA25  68                 	db	104	;'h'
  7049   00FA26  20                 	db	32
  7050   00FA27  57                 	db	87	;'W'
  7051   00FA28  36                 	db	54	;'6'
  7052   00FA29  35                 	db	53	;'5'
  7053   00FA2A  43                 	db	67	;'C'
  7054   00FA2B  30                 	db	48	;'0'
  7055   00FA2C  32                 	db	50	;'2'
  7056   00FA2D  20                 	db	32
  7057   00FA2E  61                 	db	97	;'a'
  7058   00FA2F  6E                 	db	110	;'n'
  7059   00FA30  64                 	db	100	;'d'
  7060   00FA31  20                 	db	32
  7061   00FA32  57                 	db	87	;'W'
  7062   00FA33  36                 	db	54	;'6'
  7063   00FA34  35                 	db	53	;'5'
  7064   00FA35  43                 	db	67	;'C'
  7065   00FA36  38                 	db	56	;'8'
  7066   00FA37  31                 	db	49	;'1'
  7067   00FA38  36                 	db	54	;'6'
  7068   00FA39  0A                 	db	10
  7069   00FA3A  0D                 	db	13
  7070   00FA3B  00                 	db	0
  7071   00FA3C                     STR_41:
  7072                           
  7073                           ; BSR set to: 7
  7074   00FA3C  0A                 	db	10
  7075   00FA3D  4D                 	db	77	;'M'
  7076   00FA3E  65                 	db	101	;'e'
  7077   00FA3F  6D                 	db	109	;'m'
  7078   00FA40  6F                 	db	111	;'o'
  7079   00FA41  72                 	db	114	;'r'
  7080   00FA42  79                 	db	121	;'y'
  7081   00FA43  20                 	db	32
  7082   00FA44  65                 	db	101	;'e'
  7083   00FA45  72                 	db	114	;'r'
  7084   00FA46  72                 	db	114	;'r'
  7085   00FA47  6F                 	db	111	;'o'
  7086   00FA48  72                 	db	114	;'r'
  7087   00FA49  20                 	db	32
  7088   00FA4A  61                 	db	97	;'a'
  7089   00FA4B  74                 	db	116	;'t'
  7090   00FA4C  20                 	db	32
  7091   00FA4D  24                 	db	36
  7092   00FA4E  25                 	db	37
  7093   00FA4F  30                 	db	48	;'0'
  7094   00FA50  36                 	db	54	;'6'
  7095   00FA51  6C                 	db	108	;'l'
  7096   00FA52  58                 	db	88	;'X'
  7097   00FA53  0A                 	db	10
  7098   00FA54  0D                 	db	13
  7099   00FA55  00                 	db	0
  7100   00FA56                     STR_2:
  7101                           
  7102                           ; BSR set to: 7
  7103   00FA56  77                 	db	119	;'w'
  7104   00FA57  61                 	db	97	;'a'
  7105   00FA58  69                 	db	105	;'i'
  7106   00FA59  74                 	db	116	;'t'
  7107   00FA5A  20                 	db	32
  7108   00FA5B  66                 	db	102	;'f'
  7109   00FA5C  6F                 	db	111	;'o'
  7110   00FA5D  72                 	db	114	;'r'
  7111   00FA5E  20                 	db	32
  7112   00FA5F  70                 	db	112	;'p'
  7113   00FA60  72                 	db	114	;'r'
  7114   00FA61  6F                 	db	111	;'o'
  7115   00FA62  67                 	db	103	;'g'
  7116   00FA63  72                 	db	114	;'r'
  7117   00FA64  61                 	db	97	;'a'
  7118   00FA65  6D                 	db	109	;'m'
  7119   00FA66  6D                 	db	109	;'m'
  7120   00FA67  65                 	db	101	;'e'
  7121   00FA68  72                 	db	114	;'r'
  7122   00FA69  20                 	db	32
  7123   00FA6A  2E                 	db	46
  7124   00FA6B  2E                 	db	46
  7125   00FA6C  2E                 	db	46
  7126   00FA6D  0D                 	db	13
  7127   00FA6E  0A                 	db	10
  7128   00FA6F  00                 	db	0
  7129   00FA70                     
  7130                           ; BSR set to: 7
  7131   00FA70  64                 	db	100	;'d'
  7132   00FA71  69                 	db	105	;'i'
  7133   00FA72  73                 	db	115	;'s'
  7134   00FA73  6B                 	db	107	;'k'
  7135   00FA74  5F                 	db	95	;'_'
  7136   00FA75  69                 	db	105	;'i'
  7137   00FA76  6E                 	db	110	;'n'
  7138   00FA77  69                 	db	105	;'i'
  7139   00FA78  74                 	db	116	;'t'
  7140   00FA79  69                 	db	105	;'i'
  7141   00FA7A  61                 	db	97	;'a'
  7142   00FA7B  6C                 	db	108	;'l'
  7143   00FA7C  69                 	db	105	;'i'
  7144   00FA7D  7A                 	db	122	;'z'
  7145   00FA7E  65                 	db	101	;'e'
  7146   00FA7F  28                 	db	40
  7147   00FA80  25                 	db	37
  7148   00FA81  64                 	db	100	;'d'
  7149   00FA82  29                 	db	41
  7150   00FA83  2E                 	db	46
  7151   00FA84  2E                 	db	46
  7152   00FA85  2E                 	db	46
  7153   00FA86  0A                 	db	10
  7154   00FA87  0D                 	db	13
  7155   00FA88  00                 	db	0
  7156   00FA89                     STR_80:
  7157                           
  7158                           ; BSR set to: 7
  7159   00FA89  57                 	db	87	;'W'
  7160   00FA8A  6F                 	db	111	;'o'
  7161   00FA8B  72                 	db	114	;'r'
  7162   00FA8C  6B                 	db	107	;'k'
  7163   00FA8D  20                 	db	32
  7164   00FA8E  6F                 	db	111	;'o'
  7165   00FA8F  6E                 	db	110	;'n'
  7166   00FA90  20                 	db	32
  7167   00FA91  6F                 	db	111	;'o'
  7168   00FA92  6E                 	db	110	;'n'
  7169   00FA93  6C                 	db	108	;'l'
  7170   00FA94  79                 	db	121	;'y'
  7171   00FA95  20                 	db	32
  7172   00FA96  57                 	db	87	;'W'
  7173   00FA97  36                 	db	54	;'6'
  7174   00FA98  35                 	db	53	;'5'
  7175   00FA99  43                 	db	67	;'C'
  7176   00FA9A  38                 	db	56	;'8'
  7177   00FA9B  31                 	db	49	;'1'
  7178   00FA9C  36                 	db	54	;'6'
  7179   00FA9D  2E                 	db	46
  7180   00FA9E  2E                 	db	46
  7181   00FA9F  0D                 	db	13
  7182   00FAA0  0A                 	db	10
  7183   00FAA1  00                 	db	0
  7184   00FAA2                     STR_87:
  7185                           
  7186                           ; BSR set to: 7
  7187   00FAA2  25                 	db	37
  7188   00FAA3  73                 	db	115	;'s'
  7189   00FAA4  20                 	db	32
  7190   00FAA5  66                 	db	102	;'f'
  7191   00FAA6  69                 	db	105	;'i'
  7192   00FAA7  6C                 	db	108	;'l'
  7193   00FAA8  65                 	db	101	;'e'
  7194   00FAA9  20                 	db	32
  7195   00FAAA  69                 	db	105	;'i'
  7196   00FAAB  73                 	db	115	;'s'
  7197   00FAAC  20                 	db	32
  7198   00FAAD  6E                 	db	110	;'n'
  7199   00FAAE  6F                 	db	111	;'o'
  7200   00FAAF  74                 	db	116	;'t'
  7201   00FAB0  20                 	db	32
  7202   00FAB1  66                 	db	102	;'f'
  7203   00FAB2  6F                 	db	111	;'o'
  7204   00FAB3  75                 	db	117	;'u'
  7205   00FAB4  6E                 	db	110	;'n'
  7206   00FAB5  64                 	db	100	;'d'
  7207   00FAB6  2E                 	db	46
  7208   00FAB7  2E                 	db	46
  7209   00FAB8  0D                 	db	13
  7210   00FAB9  0A                 	db	10
  7211   00FABA  00                 	db	0
  7212   00FABB                     STR_40:
  7213                           
  7214                           ; BSR set to: 7
  7215   00FABB  4D                 	db	77	;'M'
  7216   00FABC  65                 	db	101	;'e'
  7217   00FABD  6D                 	db	109	;'m'
  7218   00FABE  6F                 	db	111	;'o'
  7219   00FABF  72                 	db	114	;'r'
  7220   00FAC0  79                 	db	121	;'y'
  7221   00FAC1  20                 	db	32
  7222   00FAC2  24                 	db	36
  7223   00FAC3  30                 	db	48	;'0'
  7224   00FAC4  30                 	db	48	;'0'
  7225   00FAC5  30                 	db	48	;'0'
  7226   00FAC6  30                 	db	48	;'0'
  7227   00FAC7  30                 	db	48	;'0'
  7228   00FAC8  30                 	db	48	;'0'
  7229   00FAC9  20                 	db	32
  7230   00FACA  2D                 	db	45
  7231   00FACB  20                 	db	32
  7232   00FACC  24                 	db	36
  7233   00FACD  25                 	db	37
  7234   00FACE  30                 	db	48	;'0'
  7235   00FACF  36                 	db	54	;'6'
  7236   00FAD0  6C                 	db	108	;'l'
  7237   00FAD1  58                 	db	88	;'X'
  7238   00FAD2  0D                 	db	13
  7239   00FAD3  00                 	db	0
  7240   00FAD4                     
  7241                           ; BSR set to: 7
  7242   00FAD4  53                 	db	83	;'S'
  7243   00FAD5  44                 	db	68	;'D'
  7244   00FAD6  20                 	db	32
  7245   00FAD7  43                 	db	67	;'C'
  7246   00FAD8  61                 	db	97	;'a'
  7247   00FAD9  72                 	db	114	;'r'
  7248   00FADA  64                 	db	100	;'d'
  7249   00FADB  3A                 	db	58	;':'
  7250   00FADC  20                 	db	32
  7251   00FADD  6E                 	db	110	;'n'
  7252   00FADE  6F                 	db	111	;'o'
  7253   00FADF  74                 	db	116	;'t'
  7254   00FAE0  20                 	db	32
  7255   00FAE1  73                 	db	115	;'s'
  7256   00FAE2  75                 	db	117	;'u'
  7257   00FAE3  70                 	db	112	;'p'
  7258   00FAE4  6F                 	db	111	;'o'
  7259   00FAE5  70                 	db	112	;'p'
  7260   00FAE6  72                 	db	114	;'r'
  7261   00FAE7  74                 	db	116	;'t'
  7262   00FAE8  65                 	db	101	;'e'
  7263   00FAE9  64                 	db	100	;'d'
  7264   00FAEA  0A                 	db	10
  7265   00FAEB  0D                 	db	13
  7266   00FAEC  00                 	db	0
  7267   00FAED                     
  7268                           ; BSR set to: 7
  7269   00FAED  53                 	db	83	;'S'
  7270   00FAEE  44                 	db	68	;'D'
  7271   00FAEF  20                 	db	32
  7272   00FAF0  43                 	db	67	;'C'
  7273   00FAF1  61                 	db	97	;'a'
  7274   00FAF2  72                 	db	114	;'r'
  7275   00FAF3  64                 	db	100	;'d'
  7276   00FAF4  3A                 	db	58	;':'
  7277   00FAF5  20                 	db	32
  7278   00FAF6  43                 	db	67	;'C'
  7279   00FAF7  4D                 	db	77	;'M'
  7280   00FAF8  44                 	db	68	;'D'
  7281   00FAF9  30                 	db	48	;'0'
  7282   00FAFA  2C                 	db	44
  7283   00FAFB  20                 	db	32
  7284   00FAFC  52                 	db	82	;'R'
  7285   00FAFD  31                 	db	49	;'1'
  7286   00FAFE  3D                 	db	61	;'='
  7287   00FAFF  25                 	db	37
  7288   00FB00  30                 	db	48	;'0'
  7289   00FB01  32                 	db	50	;'2'
  7290   00FB02  78                 	db	120	;'x'
  7291   00FB03  0A                 	db	10
  7292   00FB04  0D                 	db	13
  7293   00FB05  00                 	db	0
  7294   00FB06                     STR_198:
  7295                           
  7296                           ; BSR set to: 7
  7297   00FB06  25                 	db	37
  7298   00FB07  73                 	db	115	;'s'
  7299   00FB08  25                 	db	37
  7300   00FB09  35                 	db	53	;'5'
  7301   00FB0A  33                 	db	51	;'3'
  7302   00FB0B  73                 	db	115	;'s'
  7303   00FB0C  20                 	db	32
  7304   00FB0D  43                 	db	67	;'C'
  7305   00FB0E  48                 	db	72	;'H'
  7306   00FB0F  45                 	db	69	;'E'
  7307   00FB10  43                 	db	67	;'C'
  7308   00FB11  4B                 	db	75	;'K'
  7309   00FB12  53                 	db	83	;'S'
  7310   00FB13  55                 	db	85	;'U'
  7311   00FB14  4D                 	db	77	;'M'
  7312   00FB15  3A                 	db	58	;':'
  7313   00FB16  20                 	db	32
  7314   00FB17  25                 	db	37
  7315   00FB18  30                 	db	48	;'0'
  7316   00FB19  32                 	db	50	;'2'
  7317   00FB1A  78                 	db	120	;'x'
  7318   00FB1B  0A                 	db	10
  7319   00FB1C  0D                 	db	13
  7320   00FB1D  00                 	db	0
  7321   00FB1E                     STR_79:
  7322                           
  7323                           ; BSR set to: 7
  7324   00FB1E  49                 	db	73	;'I'
  7325   00FB1F  6E                 	db	110	;'n'
  7326   00FB20  76                 	db	118	;'v'
  7327   00FB21  61                 	db	97	;'a'
  7328   00FB22  6C                 	db	108	;'l'
  7329   00FB23  69                 	db	105	;'i'
  7330   00FB24  64                 	db	100	;'d'
  7331   00FB25  20                 	db	32
  7332   00FB26  4D                 	db	77	;'M'
  7333   00FB27  45                 	db	69	;'E'
  7334   00FB28  5A                 	db	90	;'Z'
  7335   00FB29  57                 	db	87	;'W'
  7336   00FB2A  36                 	db	54	;'6'
  7337   00FB2B  35                 	db	53	;'5'
  7338   00FB2C  43                 	db	67	;'C'
  7339   00FB2D  20                 	db	32
  7340   00FB2E  66                 	db	102	;'f'
  7341   00FB2F  69                 	db	105	;'i'
  7342   00FB30  6C                 	db	108	;'l'
  7343   00FB31  65                 	db	101	;'e'
  7344   00FB32  2E                 	db	46
  7345   00FB33  0D                 	db	13
  7346   00FB34  0A                 	db	10
  7347   00FB35  00                 	db	0
  7348   00FB36                     STR_116:
  7349                           
  7350                           ; BSR set to: 7
  7351   00FB36  20                 	db	32
  7352   00FB37  20                 	db	32
  7353   00FB38  43                 	db	67	;'C'
  7354   00FB39  44                 	db	68	;'D'
  7355   00FB3A  20                 	db	32
  7356   00FB3B  5B                 	db	91	;'['
  7357   00FB3C  64                 	db	100	;'d'
  7358   00FB3D  69                 	db	105	;'i'
  7359   00FB3E  72                 	db	114	;'r'
  7360   00FB3F  65                 	db	101	;'e'
  7361   00FB40  63                 	db	99	;'c'
  7362   00FB41  74                 	db	116	;'t'
  7363   00FB42  6F                 	db	111	;'o'
  7364   00FB43  72                 	db	114	;'r'
  7365   00FB44  79                 	db	121	;'y'
  7366   00FB45  20                 	db	32
  7367   00FB46  6E                 	db	110	;'n'
  7368   00FB47  61                 	db	97	;'a'
  7369   00FB48  6D                 	db	109	;'m'
  7370   00FB49  65                 	db	101	;'e'
  7371   00FB4A  5D                 	db	93	;']'
  7372   00FB4B  0A                 	db	10
  7373   00FB4C  0D                 	db	13
  7374   00FB4D  00                 	db	0
  7375   00FB4E                     STR_175:
  7376                           
  7377                           ; BSR set to: 7
  7378   00FB4E  70                 	db	112	;'p'
  7379   00FB4F  68                 	db	104	;'h'
  7380   00FB50  79                 	db	121	;'y'
  7381   00FB51  73                 	db	115	;'s'
  7382   00FB52  69                 	db	105	;'i'
  7383   00FB53  63                 	db	99	;'c'
  7384   00FB54  61                 	db	97	;'a'
  7385   00FB55  6C                 	db	108	;'l'
  7386   00FB56  20                 	db	32
  7387   00FB57  64                 	db	100	;'d'
  7388   00FB58  72                 	db	114	;'r'
  7389   00FB59  69                 	db	105	;'i'
  7390   00FB5A  76                 	db	118	;'v'
  7391   00FB5B  65                 	db	101	;'e'
  7392   00FB5C  72                 	db	114	;'r'
  7393   00FB5D  20                 	db	32
  7394   00FB5E  21                 	db	33
  7395   00FB5F  3D                 	db	61	;'='
  7396   00FB60  20                 	db	32
  7397   00FB61  30                 	db	48	;'0'
  7398   00FB62  0A                 	db	10
  7399   00FB63  0D                 	db	13
  7400   00FB64  00                 	db	0
  7401   00FB65                     STR_71:
  7402                           
  7403                           ; BSR set to: 7
  7404   00FB65  0D                 	db	13
  7405   00FB66  0A                 	db	10
  7406   00FB67  55                 	db	85	;'U'
  7407   00FB68  73                 	db	115	;'s'
  7408   00FB69  65                 	db	101	;'e'
  7409   00FB6A  20                 	db	32
  7410   00FB6B  4E                 	db	78	;'N'
  7411   00FB6C  43                 	db	67	;'C'
  7412   00FB6D  4F                 	db	79	;'O'
  7413   00FB6E  31                 	db	49	;'1'
  7414   00FB6F  20                 	db	32
  7415   00FB70  25                 	db	37
  7416   00FB71  32                 	db	50	;'2'
  7417   00FB72  2E                 	db	46
  7418   00FB73  33                 	db	51	;'3'
  7419   00FB74  66                 	db	102	;'f'
  7420   00FB75  4D                 	db	77	;'M'
  7421   00FB76  48                 	db	72	;'H'
  7422   00FB77  7A                 	db	122	;'z'
  7423   00FB78  0D                 	db	13
  7424   00FB79  0A                 	db	10
  7425   00FB7A  0A                 	db	10
  7426   00FB7B  00                 	db	0
  7427   00FB7C                     STR_88:
  7428                           
  7429                           ; BSR set to: 7
  7430   00FB7C  25                 	db	37
  7431   00FB7D  73                 	db	115	;'s'
  7432   00FB7E  20                 	db	32
  7433   00FB7F  3A                 	db	58	;':'
  7434   00FB80  20                 	db	32
  7435   00FB81  69                 	db	105	;'i'
  7436   00FB82  6E                 	db	110	;'n'
  7437   00FB83  76                 	db	118	;'v'
  7438   00FB84  61                 	db	97	;'a'
  7439   00FB85  6C                 	db	108	;'l'
  7440   00FB86  69                 	db	105	;'i'
  7441   00FB87  64                 	db	100	;'d'
  7442   00FB88  20                 	db	32
  7443   00FB89  76                 	db	118	;'v'
  7444   00FB8A  61                 	db	97	;'a'
  7445   00FB8B  6C                 	db	108	;'l'
  7446   00FB8C  75                 	db	117	;'u'
  7447   00FB8D  65                 	db	101	;'e'
  7448   00FB8E  21                 	db	33
  7449   00FB8F  21                 	db	33
  7450   00FB90  0D                 	db	13
  7451   00FB91  0A                 	db	10
  7452   00FB92  00                 	db	0
  7453   00FB93                     STR_118:
  7454                           
  7455                           ; BSR set to: 7
  7456   00FB93  20                 	db	32
  7457   00FB94  20                 	db	32
  7458   00FB95  4D                 	db	77	;'M'
  7459   00FB96  44                 	db	68	;'D'
  7460   00FB97  55                 	db	85	;'U'
  7461   00FB98  4D                 	db	77	;'M'
  7462   00FB99  50                 	db	80	;'P'
  7463   00FB9A  20                 	db	32
  7464   00FB9B  61                 	db	97	;'a'
  7465   00FB9C  64                 	db	100	;'d'
  7466   00FB9D  64                 	db	100	;'d'
  7467   00FB9E  72                 	db	114	;'r'
  7468   00FB9F  65                 	db	101	;'e'
  7469   00FBA0  73                 	db	115	;'s'
  7470   00FBA1  73                 	db	115	;'s'
  7471   00FBA2  28                 	db	40
  7472   00FBA3  48                 	db	72	;'H'
  7473   00FBA4  65                 	db	101	;'e'
  7474   00FBA5  78                 	db	120	;'x'
  7475   00FBA6  29                 	db	41
  7476   00FBA7  0D                 	db	13
  7477   00FBA8  0A                 	db	10
  7478   00FBA9  00                 	db	0
  7479   00FBAA                     STR_70:
  7480                           
  7481                           ; BSR set to: 7
  7482   00FBAA  43                 	db	67	;'C'
  7483   00FBAB  50                 	db	80	;'P'
  7484   00FBAC  55                 	db	85	;'U'
  7485   00FBAD  20                 	db	32
  7486   00FBAE  53                 	db	83	;'S'
  7487   00FBAF  65                 	db	101	;'e'
  7488   00FBB0  74                 	db	116	;'t'
  7489   00FBB1  74                 	db	116	;'t'
  7490   00FBB2  69                 	db	105	;'i'
  7491   00FBB3  6E                 	db	110	;'n'
  7492   00FBB4  67                 	db	103	;'g'
  7493   00FBB5  3A                 	db	58	;':'
  7494   00FBB6  20                 	db	32
  7495   00FBB7  57                 	db	87	;'W'
  7496   00FBB8  36                 	db	54	;'6'
  7497   00FBB9  35                 	db	53	;'5'
  7498   00FBBA  43                 	db	67	;'C'
  7499   00FBBB  38                 	db	56	;'8'
  7500   00FBBC  31                 	db	49	;'1'
  7501   00FBBD  36                 	db	54	;'6'
  7502   00FBBE  0D                 	db	13
  7503   00FBBF  0A                 	db	10
  7504   00FBC0  00                 	db	0
  7505   00FBC1                     STR_44:
  7506                           
  7507                           ; BSR set to: 7
  7508   00FBC1  0A                 	db	10
  7509   00FBC2  4D                 	db	77	;'M'
  7510   00FBC3  65                 	db	101	;'e'
  7511   00FBC4  6D                 	db	109	;'m'
  7512   00FBC5  6F                 	db	111	;'o'
  7513   00FBC6  72                 	db	114	;'r'
  7514   00FBC7  79                 	db	121	;'y'
  7515   00FBC8  20                 	db	32
  7516   00FBC9  77                 	db	119	;'w'
  7517   00FBCA  72                 	db	114	;'r'
  7518   00FBCB  61                 	db	97	;'a'
  7519   00FBCC  70                 	db	112	;'p'
  7520   00FBCD  20                 	db	32
  7521   00FBCE  61                 	db	97	;'a'
  7522   00FBCF  72                 	db	114	;'r'
  7523   00FBD0  6F                 	db	111	;'o'
  7524   00FBD1  75                 	db	117	;'u'
  7525   00FBD2  6E                 	db	110	;'n'
  7526   00FBD3  64                 	db	100	;'d'
  7527   00FBD4  2E                 	db	46
  7528   00FBD5  0A                 	db	10
  7529   00FBD6  0D                 	db	13
  7530   00FBD7  00                 	db	0
  7531   00FBD8                     STR_108:
  7532                           
  7533                           ; BSR set to: 7
  7534   00FBD8  46                 	db	70	;'F'
  7535   00FBD9  6C                 	db	108	;'l'
  7536   00FBDA  69                 	db	105	;'i'
  7537   00FBDB  65                 	db	101	;'e'
  7538   00FBDC  28                 	db	40
  7539   00FBDD  25                 	db	37
  7540   00FBDE  73                 	db	115	;'s'
  7541   00FBDF  29                 	db	41
  7542   00FBE0  20                 	db	32
  7543   00FBE1  6C                 	db	108	;'l'
  7544   00FBE2  6F                 	db	111	;'o'
  7545   00FBE3  61                 	db	97	;'a'
  7546   00FBE4  64                 	db	100	;'d'
  7547   00FBE5  69                 	db	105	;'i'
  7548   00FBE6  6E                 	db	110	;'n'
  7549   00FBE7  67                 	db	103	;'g'
  7550   00FBE8  2E                 	db	46
  7551   00FBE9  2E                 	db	46
  7552   00FBEA  2E                 	db	46
  7553   00FBEB  0D                 	db	13
  7554   00FBEC  0A                 	db	10
  7555   00FBED  00                 	db	0
  7556   00FBEE                     STR_69:
  7557                           
  7558                           ; BSR set to: 7
  7559   00FBEE  43                 	db	67	;'C'
  7560   00FBEF  50                 	db	80	;'P'
  7561   00FBF0  55                 	db	85	;'U'
  7562   00FBF1  20                 	db	32
  7563   00FBF2  53                 	db	83	;'S'
  7564   00FBF3  65                 	db	101	;'e'
  7565   00FBF4  74                 	db	116	;'t'
  7566   00FBF5  74                 	db	116	;'t'
  7567   00FBF6  69                 	db	105	;'i'
  7568   00FBF7  6E                 	db	110	;'n'
  7569   00FBF8  67                 	db	103	;'g'
  7570   00FBF9  3A                 	db	58	;':'
  7571   00FBFA  20                 	db	32
  7572   00FBFB  57                 	db	87	;'W'
  7573   00FBFC  36                 	db	54	;'6'
  7574   00FBFD  35                 	db	53	;'5'
  7575   00FBFE  43                 	db	67	;'C'
  7576   00FBFF  30                 	db	48	;'0'
  7577   00FC00  32                 	db	50	;'2'
  7578   00FC01  0D                 	db	13
  7579   00FC02  0A                 	db	10
  7580   00FC03  00                 	db	0
  7581   00FC04                     STR_162:
  7582                           
  7583                           ; BSR set to: 7
  7584   00FC04  46                 	db	70	;'F'
  7585   00FC05  69                 	db	105	;'i'
  7586   00FC06  6C                 	db	108	;'l'
  7587   00FC07  65                 	db	101	;'e'
  7588   00FC08  20                 	db	32
  7589   00FC09  4F                 	db	79	;'O'
  7590   00FC0A  70                 	db	112	;'p'
  7591   00FC0B  65                 	db	101	;'e'
  7592   00FC0C  6E                 	db	110	;'n'
  7593   00FC0D  20                 	db	32
  7594   00FC0E  45                 	db	69	;'E'
  7595   00FC0F  72                 	db	114	;'r'
  7596   00FC10  72                 	db	114	;'r'
  7597   00FC11  6F                 	db	111	;'o'
  7598   00FC12  72                 	db	114	;'r'
  7599   00FC13  2E                 	db	46
  7600   00FC14  20                 	db	32
  7601   00FC15  25                 	db	37
  7602   00FC16  73                 	db	115	;'s'
  7603   00FC17  0D                 	db	13
  7604   00FC18  0A                 	db	10
  7605   00FC19  00                 	db	0
  7606   00FC1A                     STR_142:
  7607                           
  7608                           ; BSR set to: 7
  7609   00FC1A  57                 	db	87	;'W'
  7610   00FC1B  36                 	db	54	;'6'
  7611   00FC1C  35                 	db	53	;'5'
  7612   00FC1D  43                 	db	67	;'C'
  7613   00FC1E  38                 	db	56	;'8'
  7614   00FC1F  31                 	db	49	;'1'
  7615   00FC20  36                 	db	54	;'6'
  7616   00FC21  20                 	db	32
  7617   00FC22  4E                 	db	78	;'N'
  7618   00FC23  61                 	db	97	;'a'
  7619   00FC24  74                 	db	116	;'t'
  7620   00FC25  69                 	db	105	;'i'
  7621   00FC26  76                 	db	118	;'v'
  7622   00FC27  65                 	db	101	;'e'
  7623   00FC28  20                 	db	32
  7624   00FC29  6D                 	db	109	;'m'
  7625   00FC2A  6F                 	db	111	;'o'
  7626   00FC2B  64                 	db	100	;'d'
  7627   00FC2C  65                 	db	101	;'e'
  7628   00FC2D  0A                 	db	10
  7629   00FC2E  0D                 	db	13
  7630   00FC2F  00                 	db	0
  7631   00FC30                     STR_34:
  7632                           
  7633                           ; BSR set to: 7
  7634   00FC30  66                 	db	102	;'f'
  7635   00FC31  5F                 	db	95	;'_'
  7636   00FC32  6C                 	db	108	;'l'
  7637   00FC33  73                 	db	115	;'s'
  7638   00FC34  65                 	db	101	;'e'
  7639   00FC35  65                 	db	101	;'e'
  7640   00FC36  6B                 	db	107	;'k'
  7641   00FC37  28                 	db	40
  7642   00FC38  29                 	db	41
  7643   00FC39  3A                 	db	58	;':'
  7644   00FC3A  20                 	db	32
  7645   00FC3B  45                 	db	69	;'E'
  7646   00FC3C  52                 	db	82	;'R'
  7647   00FC3D  52                 	db	82	;'R'
  7648   00FC3E  4F                 	db	79	;'O'
  7649   00FC3F  52                 	db	82	;'R'
  7650   00FC40  20                 	db	32
  7651   00FC41  25                 	db	37
  7652   00FC42  64                 	db	100	;'d'
  7653   00FC43  0A                 	db	10
  7654   00FC44  0D                 	db	13
  7655   00FC45  00                 	db	0
  7656   00FC46                     
  7657                           ; BSR set to: 7
  7658   00FC46  6E                 	db	110	;'n'
  7659   00FC47  6F                 	db	111	;'o'
  7660   00FC48  20                 	db	32
  7661   00FC49  46                 	db	70	;'F'
  7662   00FC4A  41                 	db	65	;'A'
  7663   00FC4B  54                 	db	84	;'T'
  7664   00FC4C  33                 	db	51	;'3'
  7665   00FC4D  32                 	db	50	;'2'
  7666   00FC4E  20                 	db	32
  7667   00FC4F  70                 	db	112	;'p'
  7668   00FC50  61                 	db	97	;'a'
  7669   00FC51  72                 	db	114	;'r'
  7670   00FC52  74                 	db	116	;'t'
  7671   00FC53  69                 	db	105	;'i'
  7672   00FC54  74                 	db	116	;'t'
  7673   00FC55  69                 	db	105	;'i'
  7674   00FC56  6F                 	db	111	;'o'
  7675   00FC57  6E                 	db	110	;'n'
  7676   00FC58  0A                 	db	10
  7677   00FC59  0D                 	db	13
  7678   00FC5A  00                 	db	0
  7679   00FC5B                     STR_133:
  7680                           
  7681                           ; BSR set to: 7
  7682   00FC5B  0D                 	db	13
  7683   00FC5C  0A                 	db	10
  7684   00FC5D  46                 	db	70	;'F'
  7685   00FC5E  69                 	db	105	;'i'
  7686   00FC5F  6C                 	db	108	;'l'
  7687   00FC60  65                 	db	101	;'e'
  7688   00FC61  20                 	db	32
  7689   00FC62  4F                 	db	79	;'O'
  7690   00FC63  70                 	db	112	;'p'
  7691   00FC64  65                 	db	101	;'e'
  7692   00FC65  6E                 	db	110	;'n'
  7693   00FC66  20                 	db	32
  7694   00FC67  45                 	db	69	;'E'
  7695   00FC68  72                 	db	114	;'r'
  7696   00FC69  72                 	db	114	;'r'
  7697   00FC6A  6F                 	db	111	;'o'
  7698   00FC6B  72                 	db	114	;'r'
  7699   00FC6C  2E                 	db	46
  7700   00FC6D  0D                 	db	13
  7701   00FC6E  0A                 	db	10
  7702   00FC6F  00                 	db	0
  7703   00FC70                     STR_37:
  7704                           
  7705                           ; BSR set to: 7
  7706   00FC70  66                 	db	102	;'f'
  7707   00FC71  5F                 	db	95	;'_'
  7708   00FC72  73                 	db	115	;'s'
  7709   00FC73  79                 	db	121	;'y'
  7710   00FC74  6E                 	db	110	;'n'
  7711   00FC75  63                 	db	99	;'c'
  7712   00FC76  28                 	db	40
  7713   00FC77  29                 	db	41
  7714   00FC78  3A                 	db	58	;':'
  7715   00FC79  20                 	db	32
  7716   00FC7A  45                 	db	69	;'E'
  7717   00FC7B  52                 	db	82	;'R'
  7718   00FC7C  52                 	db	82	;'R'
  7719   00FC7D  4F                 	db	79	;'O'
  7720   00FC7E  52                 	db	82	;'R'
  7721   00FC7F  20                 	db	32
  7722   00FC80  25                 	db	37
  7723   00FC81  64                 	db	100	;'d'
  7724   00FC82  0A                 	db	10
  7725   00FC83  0D                 	db	13
  7726   00FC84  00                 	db	0
  7727   00FC85                     STR_4:
  7728                           
  7729                           ; BSR set to: 7
  7730   00FC85  4D                 	db	77	;'M'
  7731   00FC86  65                 	db	101	;'e'
  7732   00FC87  6D                 	db	109	;'m'
  7733   00FC88  6F                 	db	111	;'o'
  7734   00FC89  72                 	db	114	;'r'
  7735   00FC8A  79                 	db	121	;'y'
  7736   00FC8B  20                 	db	32
  7737   00FC8C  57                 	db	87	;'W'
  7738   00FC8D  72                 	db	114	;'r'
  7739   00FC8E  69                 	db	105	;'i'
  7740   00FC8F  74                 	db	116	;'t'
  7741   00FC90  65                 	db	101	;'e'
  7742   00FC91  20                 	db	32
  7743   00FC92  45                 	db	69	;'E'
  7744   00FC93  72                 	db	114	;'r'
  7745   00FC94  72                 	db	114	;'r'
  7746   00FC95  6F                 	db	111	;'o'
  7747   00FC96  72                 	db	114	;'r'
  7748   00FC97  0D                 	db	13
  7749   00FC98  0A                 	db	10
  7750   00FC99  00                 	db	0
  7751   00FC9A                     STR_96:
  7752                           
  7753                           ; BSR set to: 7
  7754   00FC9A  20                 	db	32
  7755   00FC9B  20                 	db	32
  7756   00FC9C  25                 	db	37
  7757   00FC9D  31                 	db	49	;'1'
  7758   00FC9E  32                 	db	50	;'2'
  7759   00FC9F  73                 	db	115	;'s'
  7760   00FCA0  09                 	db	9
  7761   00FCA1  25                 	db	37
  7762   00FCA2  6C                 	db	108	;'l'
  7763   00FCA3  64                 	db	100	;'d'
  7764   00FCA4  20                 	db	32
  7765   00FCA5  62                 	db	98	;'b'
  7766   00FCA6  79                 	db	121	;'y'
  7767   00FCA7  74                 	db	116	;'t'
  7768   00FCA8  65                 	db	101	;'e'
  7769   00FCA9  73                 	db	115	;'s'
  7770   00FCAA  2E                 	db	46
  7771   00FCAB  0D                 	db	13
  7772   00FCAC  0A                 	db	10
  7773   00FCAD  00                 	db	0
  7774   00FCAE                     STR_106:
  7775                           
  7776                           ; BSR set to: 7
  7777   00FCAE  52                 	db	82	;'R'
  7778   00FCAF  65                 	db	101	;'e'
  7779   00FCB0  6C                 	db	108	;'l'
  7780   00FCB1  6F                 	db	111	;'o'
  7781   00FCB2  61                 	db	97	;'a'
  7782   00FCB3  64                 	db	100	;'d'
  7783   00FCB4  20                 	db	32
  7784   00FCB5  6D                 	db	109	;'m'
  7785   00FCB6  6F                 	db	111	;'o'
  7786   00FCB7  6E                 	db	110	;'n'
  7787   00FCB8  69                 	db	105	;'i'
  7788   00FCB9  74                 	db	116	;'t'
  7789   00FCBA  6F                 	db	111	;'o'
  7790   00FCBB  72                 	db	114	;'r'
  7791   00FCBC  20                 	db	32
  7792   00FCBD  25                 	db	37
  7793   00FCBE  73                 	db	115	;'s'
  7794   00FCBF  0D                 	db	13
  7795   00FCC0  0A                 	db	10
  7796   00FCC1  00                 	db	0
  7797   00FCC2                     STR_140:
  7798                           
  7799                           ; BSR set to: 7
  7800   00FCC2  4F                 	db	79	;'O'
  7801   00FCC3  70                 	db	112	;'p'
  7802   00FCC4  65                 	db	101	;'e'
  7803   00FCC5  72                 	db	114	;'r'
  7804   00FCC6  61                 	db	97	;'a'
  7805   00FCC7  74                 	db	116	;'t'
  7806   00FCC8  69                 	db	105	;'i'
  7807   00FCC9  6F                 	db	111	;'o'
  7808   00FCCA  6E                 	db	110	;'n'
  7809   00FCCB  61                 	db	97	;'a'
  7810   00FCCC  6C                 	db	108	;'l'
  7811   00FCCD  20                 	db	32
  7812   00FCCE  4D                 	db	77	;'M'
  7813   00FCCF  6F                 	db	111	;'o'
  7814   00FCD0  64                 	db	100	;'d'
  7815   00FCD1  65                 	db	101	;'e'
  7816   00FCD2  20                 	db	32
  7817   00FCD3  3A                 	db	58	;':'
  7818   00FCD4  20                 	db	32
  7819   00FCD5  00                 	db	0
  7820   00FCD6                     
  7821                           ; BSR set to: 7
  7822   00FCD6  6E                 	db	110	;'n'
  7823   00FCD7  6F                 	db	111	;'o'
  7824   00FCD8  20                 	db	32
  7825   00FCD9  4D                 	db	77	;'M'
  7826   00FCDA  42                 	db	66	;'B'
  7827   00FCDB  52                 	db	82	;'R'
  7828   00FCDC  20                 	db	32
  7829   00FCDD  73                 	db	115	;'s'
  7830   00FCDE  69                 	db	105	;'i'
  7831   00FCDF  67                 	db	103	;'g'
  7832   00FCE0  6E                 	db	110	;'n'
  7833   00FCE1  61                 	db	97	;'a'
  7834   00FCE2  74                 	db	116	;'t'
  7835   00FCE3  75                 	db	117	;'u'
  7836   00FCE4  72                 	db	114	;'r'
  7837   00FCE5  65                 	db	101	;'e'
  7838   00FCE6  0A                 	db	10
  7839   00FCE7  0D                 	db	13
  7840   00FCE8  00                 	db	0
  7841   00FCE9                     STR_90:
  7842                           
  7843                           ; BSR set to: 7
  7844   00FCE9  46                 	db	70	;'F'
  7845   00FCEA  69                 	db	105	;'i'
  7846   00FCEB  6C                 	db	108	;'l'
  7847   00FCEC  65                 	db	101	;'e'
  7848   00FCED  20                 	db	32
  7849   00FCEE  72                 	db	114	;'r'
  7850   00FCEF  65                 	db	101	;'e'
  7851   00FCF0  61                 	db	97	;'a'
  7852   00FCF1  64                 	db	100	;'d'
  7853   00FCF2  20                 	db	32
  7854   00FCF3  65                 	db	101	;'e'
  7855   00FCF4  72                 	db	114	;'r'
  7856   00FCF5  72                 	db	114	;'r'
  7857   00FCF6  6F                 	db	111	;'o'
  7858   00FCF7  72                 	db	114	;'r'
  7859   00FCF8  21                 	db	33
  7860   00FCF9  0D                 	db	13
  7861   00FCFA  0A                 	db	10
  7862   00FCFB  00                 	db	0
  7863   00FCFC                     STR_83:
  7864                           
  7865                           ; BSR set to: 7
  7866   00FCFC  46                 	db	70	;'F'
  7867   00FCFD  69                 	db	105	;'i'
  7868   00FCFE  6C                 	db	108	;'l'
  7869   00FCFF  65                 	db	101	;'e'
  7870   00FD00  20                 	db	32
  7871   00FD01  4C                 	db	76	;'L'
  7872   00FD02  6F                 	db	111	;'o'
  7873   00FD03  61                 	db	97	;'a'
  7874   00FD04  64                 	db	100	;'d'
  7875   00FD05  20                 	db	32
  7876   00FD06  45                 	db	69	;'E'
  7877   00FD07  72                 	db	114	;'r'
  7878   00FD08  72                 	db	114	;'r'
  7879   00FD09  6F                 	db	111	;'o'
  7880   00FD0A  72                 	db	114	;'r'
  7881   00FD0B  2E                 	db	46
  7882   00FD0C  0D                 	db	13
  7883   00FD0D  0A                 	db	10
  7884   00FD0E  00                 	db	0
  7885   00FD0F                     STR_163:
  7886                           
  7887                           ; BSR set to: 7
  7888   00FD0F  46                 	db	70	;'F'
  7889   00FD10  69                 	db	105	;'i'
  7890   00FD11  6C                 	db	108	;'l'
  7891   00FD12  65                 	db	101	;'e'
  7892   00FD13  20                 	db	32
  7893   00FD14  72                 	db	114	;'r'
  7894   00FD15  65                 	db	101	;'e'
  7895   00FD16  61                 	db	97	;'a'
  7896   00FD17  64                 	db	100	;'d'
  7897   00FD18  20                 	db	32
  7898   00FD19  65                 	db	101	;'e'
  7899   00FD1A  72                 	db	114	;'r'
  7900   00FD1B  72                 	db	114	;'r'
  7901   00FD1C  6F                 	db	111	;'o'
  7902   00FD1D  72                 	db	114	;'r'
  7903   00FD1E  2E                 	db	46
  7904   00FD1F  0D                 	db	13
  7905   00FD20  0A                 	db	10
  7906   00FD21  00                 	db	0
  7907   00FD22                     STR_124:
  7908                           
  7909                           ; BSR set to: 7
  7910   00FD22  20                 	db	32
  7911   00FD23  20                 	db	32
  7912   00FD24  53                 	db	83	;'S'
  7913   00FD25  48                 	db	72	;'H'
  7914   00FD26  4F                 	db	79	;'O'
  7915   00FD27  57                 	db	87	;'W'
  7916   00FD28  20                 	db	32
  7917   00FD29  66                 	db	102	;'f'
  7918   00FD2A  69                 	db	105	;'i'
  7919   00FD2B  6C                 	db	108	;'l'
  7920   00FD2C  65                 	db	101	;'e'
  7921   00FD2D  20                 	db	32
  7922   00FD2E  6E                 	db	110	;'n'
  7923   00FD2F  61                 	db	97	;'a'
  7924   00FD30  6D                 	db	109	;'m'
  7925   00FD31  65                 	db	101	;'e'
  7926   00FD32  0D                 	db	13
  7927   00FD33  0A                 	db	10
  7928   00FD34  00                 	db	0
  7929   00FD35                     STR_150:
  7930                           
  7931                           ; BSR set to: 7
  7932   00FD35  4D                 	db	77	;'M'
  7933   00FD36  4E                 	db	78	;'N'
  7934   00FD37  49                 	db	73	;'I'
  7935   00FD38  20                 	db	32
  7936   00FD39  3A                 	db	58	;':'
  7937   00FD3A  20                 	db	32
  7938   00FD3B  4E                 	db	78	;'N'
  7939   00FD3C  6F                 	db	111	;'o'
  7940   00FD3D  20                 	db	32
  7941   00FD3E  73                 	db	115	;'s'
  7942   00FD3F  75                 	db	117	;'u'
  7943   00FD40  70                 	db	112	;'p'
  7944   00FD41  70                 	db	112	;'p'
  7945   00FD42  6F                 	db	111	;'o'
  7946   00FD43  72                 	db	114	;'r'
  7947   00FD44  74                 	db	116	;'t'
  7948   00FD45  0D                 	db	13
  7949   00FD46  0A                 	db	10
  7950   00FD47  00                 	db	0
  7951   00FD48                     STR_148:
  7952                           
  7953                           ; BSR set to: 7
  7954   00FD48  49                 	db	73	;'I'
  7955   00FD49  52                 	db	82	;'R'
  7956   00FD4A  51                 	db	81	;'Q'
  7957   00FD4B  20                 	db	32
  7958   00FD4C  3A                 	db	58	;':'
  7959   00FD4D  20                 	db	32
  7960   00FD4E  4E                 	db	78	;'N'
  7961   00FD4F  6F                 	db	111	;'o'
  7962   00FD50  20                 	db	32
  7963   00FD51  73                 	db	115	;'s'
  7964   00FD52  75                 	db	117	;'u'
  7965   00FD53  70                 	db	112	;'p'
  7966   00FD54  70                 	db	112	;'p'
  7967   00FD55  6F                 	db	111	;'o'
  7968   00FD56  72                 	db	114	;'r'
  7969   00FD57  74                 	db	116	;'t'
  7970   00FD58  2C                 	db	44
  7971   00FD59  20                 	db	32
  7972   00FD5A  00                 	db	0
  7973   00FD5B                     
  7974                           ; BSR set to: 7
  7975   00FD5B  53                 	db	83	;'S'
  7976   00FD5C  44                 	db	68	;'D'
  7977   00FD5D  20                 	db	32
  7978   00FD5E  43                 	db	67	;'C'
  7979   00FD5F  61                 	db	97	;'a'
  7980   00FD60  72                 	db	114	;'r'
  7981   00FD61  64                 	db	100	;'d'
  7982   00FD62  3A                 	db	58	;':'
  7983   00FD63  20                 	db	32
  7984   00FD64  74                 	db	116	;'t'
  7985   00FD65  69                 	db	105	;'i'
  7986   00FD66  6D                 	db	109	;'m'
  7987   00FD67  65                 	db	101	;'e'
  7988   00FD68  6F                 	db	111	;'o'
  7989   00FD69  75                 	db	117	;'u'
  7990   00FD6A  74                 	db	116	;'t'
  7991   00FD6B  0A                 	db	10
  7992   00FD6C  0D                 	db	13
  7993   00FD6D  00                 	db	0
  7994   00FD6E                     
  7995                           ; BSR set to: 7
  7996   00FD6E  6E                 	db	110	;'n'
  7997   00FD6F  6F                 	db	111	;'o'
  7998   00FD70  20                 	db	32
  7999   00FD71  76                 	db	118	;'v'
  8000   00FD72  61                 	db	97	;'a'
  8001   00FD73  6C                 	db	108	;'l'
  8002   00FD74  69                 	db	105	;'i'
  8003   00FD75  64                 	db	100	;'d'
  8004   00FD76  20                 	db	32
  8005   00FD77  76                 	db	118	;'v'
  8006   00FD78  6F                 	db	111	;'o'
  8007   00FD79  6C                 	db	108	;'l'
  8008   00FD7A  75                 	db	117	;'u'
  8009   00FD7B  6D                 	db	109	;'m'
  8010   00FD7C  65                 	db	101	;'e'
  8011   00FD7D  0A                 	db	10
  8012   00FD7E  0D                 	db	13
  8013   00FD7F  00                 	db	0
  8014   00FD80                     STR_151:
  8015                           
  8016                           ; BSR set to: 7
  8017   00FD80  55                 	db	85	;'U'
  8018   00FD81  73                 	db	115	;'s'
  8019   00FD82  69                 	db	105	;'i'
  8020   00FD83  6E                 	db	110	;'n'
  8021   00FD84  67                 	db	103	;'g'
  8022   00FD85  20                 	db	32
  8023   00FD86  42                 	db	66	;'B'
  8024   00FD87  49                 	db	73	;'I'
  8025   00FD88  4F                 	db	79	;'O'
  8026   00FD89  53                 	db	83	;'S'
  8027   00FD8A  20                 	db	32
  8028   00FD8B  43                 	db	67	;'C'
  8029   00FD8C  41                 	db	65	;'A'
  8030   00FD8D  4C                 	db	76	;'L'
  8031   00FD8E  4C                 	db	76	;'L'
  8032   00FD8F  0A                 	db	10
  8033   00FD90  0D                 	db	13
  8034   00FD91  00                 	db	0
  8035   00FD92                     
  8036                           ; BSR set to: 7
  8037   00FD92  53                 	db	83	;'S'
  8038   00FD93  44                 	db	68	;'D'
  8039   00FD94  20                 	db	32
  8040   00FD95  43                 	db	67	;'C'
  8041   00FD96  61                 	db	97	;'a'
  8042   00FD97  72                 	db	114	;'r'
  8043   00FD98  64                 	db	100	;'d'
  8044   00FD99  3A                 	db	58	;':'
  8045   00FD9A  20                 	db	32
  8046   00FD9B  72                 	db	114	;'r'
  8047   00FD9C  65                 	db	101	;'e'
  8048   00FD9D  61                 	db	97	;'a'
  8049   00FD9E  64                 	db	100	;'d'
  8050   00FD9F  79                 	db	121	;'y'
  8051   00FDA0  2E                 	db	46
  8052   00FDA1  0A                 	db	10
  8053   00FDA2  0D                 	db	13
  8054   00FDA3  00                 	db	0
  8055   00FDA4                     STR_143:
  8056                           
  8057                           ; BSR set to: 7
  8058   00FDA4  43                 	db	67	;'C'
  8059   00FDA5  53                 	db	83	;'S'
  8060   00FDA6  54                 	db	84	;'T'
  8061   00FDA7  41                 	db	65	;'A'
  8062   00FDA8  52                 	db	82	;'R'
  8063   00FDA9  54                 	db	84	;'T'
  8064   00FDAA  20                 	db	32
  8065   00FDAB  3A                 	db	58	;':'
  8066   00FDAC  20                 	db	32
  8067   00FDAD  24                 	db	36
  8068   00FDAE  25                 	db	37
  8069   00FDAF  30                 	db	48	;'0'
  8070   00FDB0  34                 	db	52	;'4'
  8071   00FDB1  58                 	db	88	;'X'
  8072   00FDB2  0D                 	db	13
  8073   00FDB3  0A                 	db	10
  8074   00FDB4  00                 	db	0
  8075   00FDB5                     STR_144:
  8076                           
  8077                           ; BSR set to: 7
  8078   00FDB5  57                 	db	87	;'W'
  8079   00FDB6  53                 	db	83	;'S'
  8080   00FDB7  54                 	db	84	;'T'
  8081   00FDB8  41                 	db	65	;'A'
  8082   00FDB9  52                 	db	82	;'R'
  8083   00FDBA  54                 	db	84	;'T'
  8084   00FDBB  20                 	db	32
  8085   00FDBC  3A                 	db	58	;':'
  8086   00FDBD  20                 	db	32
  8087   00FDBE  24                 	db	36
  8088   00FDBF  25                 	db	37
  8089   00FDC0  30                 	db	48	;'0'
  8090   00FDC1  34                 	db	52	;'4'
  8091   00FDC2  58                 	db	88	;'X'
  8092   00FDC3  0D                 	db	13
  8093   00FDC4  0A                 	db	10
  8094   00FDC5  00                 	db	0
  8095   00FDC6                     STR_7:
  8096                           
  8097                           ; BSR set to: 7
  8098   00FDC6  53                 	db	83	;'S'
  8099   00FDC7  50                 	db	80	;'P'
  8100   00FDC8  49                 	db	73	;'I'
  8101   00FDC9  5F                 	db	95	;'_'
  8102   00FDCA  53                 	db	83	;'S'
  8103   00FDCB  44                 	db	68	;'D'
  8104   00FDCC  5F                 	db	95	;'_'
  8105   00FDCD  63                 	db	99	;'c'
  8106   00FDCE  6F                 	db	111	;'o'
  8107   00FDCF  6E                 	db	110	;'n'
  8108   00FDD0  66                 	db	102	;'f'
  8109   00FDD1  69                 	db	105	;'i'
  8110   00FDD2  67                 	db	103	;'g'
  8111   00FDD3  75                 	db	117	;'u'
  8112   00FDD4  72                 	db	114	;'r'
  8113   00FDD5  65                 	db	101	;'e'
  8114   00FDD6  00                 	db	0
  8115   00FDD7                     STR_119:
  8116                           
  8117                           ; BSR set to: 7
  8118   00FDD7  20                 	db	32
  8119   00FDD8  20                 	db	32
  8120   00FDD9  4D                 	db	77	;'M'
  8121   00FDDA  4F                 	db	79	;'O'
  8122   00FDDB  4E                 	db	78	;'N'
  8123   00FDDC  49                 	db	73	;'I'
  8124   00FDDD  54                 	db	84	;'T'
  8125   00FDDE  4F                 	db	79	;'O'
  8126   00FDDF  52                 	db	82	;'R'
  8127   00FDE0  20                 	db	32
  8128   00FDE1  5B                 	db	91	;'['
  8129   00FDE2  57                 	db	87	;'W'
  8130   00FDE3  5D                 	db	93	;']'
  8131   00FDE4  0D                 	db	13
  8132   00FDE5  0A                 	db	10
  8133   00FDE6  00                 	db	0
  8134   00FDE7                     STR_149:
  8135                           
  8136                           ; BSR set to: 7
  8137   00FDE7  4D                 	db	77	;'M'
  8138   00FDE8  4E                 	db	78	;'N'
  8139   00FDE9  49                 	db	73	;'I'
  8140   00FDEA  20                 	db	32
  8141   00FDEB  3A                 	db	58	;':'
  8142   00FDEC  20                 	db	32
  8143   00FDED  53                 	db	83	;'S'
  8144   00FDEE  75                 	db	117	;'u'
  8145   00FDEF  70                 	db	112	;'p'
  8146   00FDF0  70                 	db	112	;'p'
  8147   00FDF1  6F                 	db	111	;'o'
  8148   00FDF2  72                 	db	114	;'r'
  8149   00FDF3  74                 	db	116	;'t'
  8150   00FDF4  0D                 	db	13
  8151   00FDF5  0A                 	db	10
  8152   00FDF6  00                 	db	0
  8153   00FDF7                     STR_147:
  8154                           
  8155                           ; BSR set to: 7
  8156   00FDF7  49                 	db	73	;'I'
  8157   00FDF8  52                 	db	82	;'R'
  8158   00FDF9  51                 	db	81	;'Q'
  8159   00FDFA  20                 	db	32
  8160   00FDFB  3A                 	db	58	;':'
  8161   00FDFC  20                 	db	32
  8162   00FDFD  53                 	db	83	;'S'
  8163   00FDFE  75                 	db	117	;'u'
  8164   00FDFF  70                 	db	112	;'p'
  8165   00FE00  70                 	db	112	;'p'
  8166   00FE01  6F                 	db	111	;'o'
  8167   00FE02  72                 	db	114	;'r'
  8168   00FE03  74                 	db	116	;'t'
  8169   00FE04  2C                 	db	44
  8170   00FE05  20                 	db	32
  8171   00FE06  00                 	db	0
  8172   00FE07                     STR_166:
  8173                           
  8174                           ; BSR set to: 7
  8175   00FE07  2A                 	db	42
  8176   00FE08  2B                 	db	43
  8177   00FE09  2C                 	db	44
  8178   00FE0A  3A                 	db	58	;':'
  8179   00FE0B  3B                 	db	59	;';'
  8180   00FE0C  3C                 	db	60	;'<'
  8181   00FE0D  3D                 	db	61	;'='
  8182   00FE0E  3E                 	db	62	;'>'
  8183   00FE0F  5B                 	db	91	;'['
  8184   00FE10  5D                 	db	93	;']'
  8185   00FE11  7C                 	db	124
  8186   00FE12  22                 	db	34
  8187   00FE13  3F                 	db	63	;'?'
  8188   00FE14  7F                 	db	127
  8189   00FE15  00                 	db	0
  8190   00FE16                     STR_95:
  8191                           
  8192                           ; BSR set to: 7
  8193   00FE16  20                 	db	32
  8194   00FE17  20                 	db	32
  8195   00FE18  25                 	db	37
  8196   00FE19  31                 	db	49	;'1'
  8197   00FE1A  32                 	db	50	;'2'
  8198   00FE1B  73                 	db	115	;'s'
  8199   00FE1C  09                 	db	9
  8200   00FE1D  3C                 	db	60	;'<'
  8201   00FE1E  44                 	db	68	;'D'
  8202   00FE1F  49                 	db	73	;'I'
  8203   00FE20  52                 	db	82	;'R'
  8204   00FE21  3E                 	db	62	;'>'
  8205   00FE22  0D                 	db	13
  8206   00FE23  0A                 	db	10
  8207   00FE24  00                 	db	0
  8208   00FE25                     STR_160:
  8209                           
  8210                           ; BSR set to: 7
  8211   00FE25  54                 	db	84	;'T'
  8212   00FE26  65                 	db	101	;'e'
  8213   00FE27  72                 	db	114	;'r'
  8214   00FE28  6D                 	db	109	;'m'
  8215   00FE29  69                 	db	105	;'i'
  8216   00FE2A  6E                 	db	110	;'n'
  8217   00FE2B  61                 	db	97	;'a'
  8218   00FE2C  74                 	db	116	;'t'
  8219   00FE2D  65                 	db	101	;'e'
  8220   00FE2E  20                 	db	32
  8221   00FE2F  25                 	db	37
  8222   00FE30  73                 	db	115	;'s'
  8223   00FE31  0D                 	db	13
  8224   00FE32  0A                 	db	10
  8225   00FE33  00                 	db	0
  8226   00FE34                     STR_89:
  8227                           
  8228                           ; BSR set to: 7
  8229   00FE34  25                 	db	37
  8230   00FE35  73                 	db	115	;'s'
  8231   00FE36  20                 	db	32
  8232   00FE37  3A                 	db	58	;':'
  8233   00FE38  20                 	db	32
  8234   00FE39  24                 	db	36
  8235   00FE3A  25                 	db	37
  8236   00FE3B  30                 	db	48	;'0'
  8237   00FE3C  36                 	db	54	;'6'
  8238   00FE3D  6C                 	db	108	;'l'
  8239   00FE3E  78                 	db	120	;'x'
  8240   00FE3F  0D                 	db	13
  8241   00FE40  0A                 	db	10
  8242   00FE41  00                 	db	0
  8243   00FE42                     STR_138:
  8244                           
  8245                           ; BSR set to: 7
  8246   00FE42  53                 	db	83	;'S'
  8247   00FE43  74                 	db	116	;'t'
  8248   00FE44  61                 	db	97	;'a'
  8249   00FE45  6E                 	db	110	;'n'
  8250   00FE46  64                 	db	100	;'d'
  8251   00FE47  2D                 	db	45
  8252   00FE48  61                 	db	97	;'a'
  8253   00FE49  6C                 	db	108	;'l'
  8254   00FE4A  6F                 	db	111	;'o'
  8255   00FE4B  6E                 	db	110	;'n'
  8256   00FE4C  65                 	db	101	;'e'
  8257   00FE4D  0A                 	db	10
  8258   00FE4E  0D                 	db	13
  8259   00FE4F  00                 	db	0
  8260   00FE50                     STR_73:
  8261                           
  8262                           ; BSR set to: 7
  8263   00FE50  0D                 	db	13
  8264   00FE51  0A                 	db	10
  8265   00FE52  42                 	db	66	;'B'
  8266   00FE53  6F                 	db	111	;'o'
  8267   00FE54  61                 	db	97	;'a'
  8268   00FE55  72                 	db	114	;'r'
  8269   00FE56  64                 	db	100	;'d'
  8270   00FE57  3A                 	db	58	;':'
  8271   00FE58  20                 	db	32
  8272   00FE59  25                 	db	37
  8273   00FE5A  73                 	db	115	;'s'
  8274   00FE5B  0A                 	db	10
  8275   00FE5C  0D                 	db	13
  8276   00FE5D  00                 	db	0
  8277   00FE5E                     STR_72:
  8278                           
  8279                           ; BSR set to: 7
  8280   00FE5E  53                 	db	83	;'S'
  8281   00FE5F  79                 	db	121	;'y'
  8282   00FE60  73                 	db	115	;'s'
  8283   00FE61  74                 	db	116	;'t'
  8284   00FE62  65                 	db	101	;'e'
  8285   00FE63  6D                 	db	109	;'m'
  8286   00FE64  20                 	db	32
  8287   00FE65  73                 	db	115	;'s'
  8288   00FE66  74                 	db	116	;'t'
  8289   00FE67  6F                 	db	111	;'o'
  8290   00FE68  70                 	db	112	;'p'
  8291   00FE69  21                 	db	33
  8292   00FE6A  21                 	db	33
  8293   00FE6B  00                 	db	0
  8294   00FE6C                     STR_5:
  8295                           
  8296                           ; BSR set to: 7
  8297   00FE6C  4E                 	db	78	;'N'
  8298   00FE6D  6F                 	db	111	;'o'
  8299   00FE6E  20                 	db	32
  8300   00FE6F  53                 	db	83	;'S'
  8301   00FE70  44                 	db	68	;'D'
  8302   00FE71  20                 	db	32
  8303   00FE72  43                 	db	67	;'C'
  8304   00FE73  61                 	db	97	;'a'
  8305   00FE74  72                 	db	114	;'r'
  8306   00FE75  64                 	db	100	;'d'
  8307   00FE76  3F                 	db	63	;'?'
  8308   00FE77  0A                 	db	10
  8309   00FE78  0D                 	db	13
  8310   00FE79  00                 	db	0
  8311   00FE7A                     STR_126:
  8312                           
  8313                           ; BSR set to: 7
  8314   00FE7A  20                 	db	32
  8315   00FE7B  20                 	db	32
  8316   00FE7C  48                 	db	72	;'H'
  8317   00FE7D  45                 	db	69	;'E'
  8318   00FE7E  4C                 	db	76	;'L'
  8319   00FE7F  50                 	db	80	;'P'
  8320   00FE80  20                 	db	32
  8321   00FE81  7C                 	db	124
  8322   00FE82  20                 	db	32
  8323   00FE83  3F                 	db	63	;'?'
  8324   00FE84  0D                 	db	13
  8325   00FE85  0A                 	db	10
  8326   00FE86  00                 	db	0
  8327   00FE87                     STR_137:
  8328                           
  8329                           ; BSR set to: 7
  8330   00FE87  46                 	db	70	;'F'
  8331   00FE88  69                 	db	105	;'i'
  8332   00FE89  6C                 	db	108	;'l'
  8333   00FE8A  65                 	db	101	;'e'
  8334   00FE8B  20                 	db	32
  8335   00FE8C  54                 	db	84	;'T'
  8336   00FE8D  79                 	db	121	;'y'
  8337   00FE8E  70                 	db	112	;'p'
  8338   00FE8F  65                 	db	101	;'e'
  8339   00FE90  20                 	db	32
  8340   00FE91  3A                 	db	58	;':'
  8341   00FE92  20                 	db	32
  8342   00FE93  00                 	db	0
  8343   00FE94                     STR_94:
  8344                           
  8345                           ; BSR set to: 7
  8346   00FE94  3C                 	db	60	;'<'
  8347   00FE95  20                 	db	32
  8348   00FE96  25                 	db	37
  8349   00FE97  73                 	db	115	;'s'
  8350   00FE98  2F                 	db	47
  8351   00FE99  25                 	db	37
  8352   00FE9A  73                 	db	115	;'s'
  8353   00FE9B  20                 	db	32
  8354   00FE9C  3E                 	db	62	;'>'
  8355   00FE9D  0D                 	db	13
  8356   00FE9E  0A                 	db	10
  8357   00FE9F  00                 	db	0
  8358   00FEA0                     STR_86:
  8359                           
  8360                           ; BSR set to: 7
  8361   00FEA0  0D                 	db	13
  8362   00FEA1  0A                 	db	10
  8363   00FEA2  4C                 	db	76	;'L'
  8364   00FEA3  6F                 	db	111	;'o'
  8365   00FEA4  61                 	db	97	;'a'
  8366   00FEA5  64                 	db	100	;'d'
  8367   00FEA6  20                 	db	32
  8368   00FEA7  25                 	db	37
  8369   00FEA8  73                 	db	115	;'s'
  8370   00FEA9  0D                 	db	13
  8371   00FEAA  0A                 	db	10
  8372   00FEAB  00                 	db	0
  8373   00FEAC                     STR_120:
  8374                           
  8375                           ; BSR set to: 7
  8376   00FEAC  20                 	db	32
  8377   00FEAD  20                 	db	32
  8378   00FEAE  43                 	db	67	;'C'
  8379   00FEAF  53                 	db	83	;'S'
  8380   00FEB0  54                 	db	84	;'T'
  8381   00FEB1  41                 	db	65	;'A'
  8382   00FEB2  52                 	db	82	;'R'
  8383   00FEB3  54                 	db	84	;'T'
  8384   00FEB4  0D                 	db	13
  8385   00FEB5  0A                 	db	10
  8386   00FEB6  00                 	db	0
  8387   00FEB7                     STR_121:
  8388                           
  8389                           ; BSR set to: 7
  8390   00FEB7  20                 	db	32
  8391   00FEB8  20                 	db	32
  8392   00FEB9  57                 	db	87	;'W'
  8393   00FEBA  53                 	db	83	;'S'
  8394   00FEBB  54                 	db	84	;'T'
  8395   00FEBC  41                 	db	65	;'A'
  8396   00FEBD  52                 	db	82	;'R'
  8397   00FEBE  54                 	db	84	;'T'
  8398   00FEBF  0D                 	db	13
  8399   00FEC0  0A                 	db	10
  8400   00FEC1  00                 	db	0
  8401   00FEC2                     STR_48:
  8402                           
  8403                           ; BSR set to: 7
  8404   00FEC2  4D                 	db	77	;'M'
  8405   00FEC3  45                 	db	69	;'E'
  8406   00FEC4  5A                 	db	90	;'Z'
  8407   00FEC5  57                 	db	87	;'W'
  8408   00FEC6  30                 	db	48	;'0'
  8409   00FEC7  32                 	db	50	;'2'
  8410   00FEC8  2E                 	db	46
  8411   00FEC9  43                 	db	67	;'C'
  8412   00FECA  46                 	db	70	;'F'
  8413   00FECB  47                 	db	71	;'G'
  8414   00FECC  00                 	db	0
  8415   00FECD                     STR_49:
  8416                           
  8417                           ; BSR set to: 7
  8418   00FECD  4D                 	db	77	;'M'
  8419   00FECE  45                 	db	69	;'E'
  8420   00FECF  5A                 	db	90	;'Z'
  8421   00FED0  57                 	db	87	;'W'
  8422   00FED1  31                 	db	49	;'1'
  8423   00FED2  36                 	db	54	;'6'
  8424   00FED3  2E                 	db	46
  8425   00FED4  43                 	db	67	;'C'
  8426   00FED5  46                 	db	70	;'F'
  8427   00FED6  47                 	db	71	;'G'
  8428   00FED7  00                 	db	0
  8429   00FED8                     STR_50:
  8430                           
  8431                           ; BSR set to: 7
  8432   00FED8  2F                 	db	47
  8433   00FED9  4D                 	db	77	;'M'
  8434   00FEDA  4F                 	db	79	;'O'
  8435   00FEDB  4E                 	db	78	;'N'
  8436   00FEDC  30                 	db	48	;'0'
  8437   00FEDD  32                 	db	50	;'2'
  8438   00FEDE  2E                 	db	46
  8439   00FEDF  53                 	db	83	;'S'
  8440   00FEE0  59                 	db	89	;'Y'
  8441   00FEE1  53                 	db	83	;'S'
  8442   00FEE2  00                 	db	0
  8443   00FEE3                     STR_51:
  8444                           
  8445                           ; BSR set to: 7
  8446   00FEE3  2F                 	db	47
  8447   00FEE4  4D                 	db	77	;'M'
  8448   00FEE5  4F                 	db	79	;'O'
  8449   00FEE6  4E                 	db	78	;'N'
  8450   00FEE7  31                 	db	49	;'1'
  8451   00FEE8  36                 	db	54	;'6'
  8452   00FEE9  2E                 	db	46
  8453   00FEEA  53                 	db	83	;'S'
  8454   00FEEB  59                 	db	89	;'Y'
  8455   00FEEC  53                 	db	83	;'S'
  8456   00FEED  00                 	db	0
  8457   00FEEE                     STR_93:
  8458                           
  8459                           ; BSR set to: 7
  8460   00FEEE  3C                 	db	60	;'<'
  8461   00FEEF  20                 	db	32
  8462   00FEF0  2F                 	db	47
  8463   00FEF1  25                 	db	37
  8464   00FEF2  73                 	db	115	;'s'
  8465   00FEF3  20                 	db	32
  8466   00FEF4  3E                 	db	62	;'>'
  8467   00FEF5  0D                 	db	13
  8468   00FEF6  0A                 	db	10
  8469   00FEF7  00                 	db	0
  8470   00FEF8                     STR_125:
  8471                           
  8472                           ; BSR set to: 7
  8473   00FEF8  20                 	db	32
  8474   00FEF9  20                 	db	32
  8475   00FEFA  46                 	db	70	;'F'
  8476   00FEFB  4C                 	db	76	;'L'
  8477   00FEFC  41                 	db	65	;'A'
  8478   00FEFD  53                 	db	83	;'S'
  8479   00FEFE  48                 	db	72	;'H'
  8480   00FEFF  0D                 	db	13
  8481   00FF00  0A                 	db	10
  8482   00FF01  00                 	db	0
  8483   00FF02                     STR_139:
  8484                           
  8485                           ; BSR set to: 7
  8486   00FF02  4D                 	db	77	;'M'
  8487   00FF03  4F                 	db	79	;'O'
  8488   00FF04  4E                 	db	78	;'N'
  8489   00FF05  49                 	db	73	;'I'
  8490   00FF06  54                 	db	84	;'T'
  8491   00FF07  4F                 	db	79	;'O'
  8492   00FF08  52                 	db	82	;'R'
  8493   00FF09  0A                 	db	10
  8494   00FF0A  0D                 	db	13
  8495   00FF0B  00                 	db	0
  8496   00FF0C                     STR_195:
  8497                           
  8498                           ; BSR set to: 7
  8499   00FF0C  25                 	db	37
  8500   00FF0D  73                 	db	115	;'s'
  8501   00FF0E  25                 	db	37
  8502   00FF0F  30                 	db	48	;'0'
  8503   00FF10  36                 	db	54	;'6'
  8504   00FF11  6C                 	db	108	;'l'
  8505   00FF12  78                 	db	120	;'x'
  8506   00FF13  3A                 	db	58	;':'
  8507   00FF14  00                 	db	0
  8508   00FF15                     STR_168:
  8509                           
  8510                           ; BSR set to: 7
  8511   00FF15  46                 	db	70	;'F'
  8512   00FF16  41                 	db	65	;'A'
  8513   00FF17  54                 	db	84	;'T'
  8514   00FF18  33                 	db	51	;'3'
  8515   00FF19  32                 	db	50	;'2'
  8516   00FF1A  20                 	db	32
  8517   00FF1B  20                 	db	32
  8518   00FF1C  20                 	db	32
  8519   00FF1D  00                 	db	0
  8520   00FF1E                     STR_92:
  8521                           
  8522                           ; BSR set to: 7
  8523   00FF1E  3C                 	db	60	;'<'
  8524   00FF1F  20                 	db	32
  8525   00FF20  25                 	db	37
  8526   00FF21  73                 	db	115	;'s'
  8527   00FF22  20                 	db	32
  8528   00FF23  3E                 	db	62	;'>'
  8529   00FF24  0D                 	db	13
  8530   00FF25  0A                 	db	10
  8531   00FF26  00                 	db	0
  8532   00FF27                     STR_122:
  8533                           
  8534                           ; BSR set to: 7
  8535   00FF27  20                 	db	32
  8536   00FF28  20                 	db	32
  8537   00FF29  52                 	db	82	;'R'
  8538   00FF2A  45                 	db	69	;'E'
  8539   00FF2B  54                 	db	84	;'T'
  8540   00FF2C  49                 	db	73	;'I'
  8541   00FF2D  0D                 	db	13
  8542   00FF2E  0A                 	db	10
  8543   00FF2F  00                 	db	0
  8544   00FF30                     STR_192:
  8545                           
  8546                           ; BSR set to: 7
  8547   00FF30  25                 	db	37
  8548   00FF31  73                 	db	115	;'s'
  8549   00FF32  25                 	db	37
  8550   00FF33  30                 	db	48	;'0'
  8551   00FF34  34                 	db	52	;'4'
  8552   00FF35  78                 	db	120	;'x'
  8553   00FF36  3A                 	db	58	;':'
  8554   00FF37  00                 	db	0
  8555   00FF38                     STR_123:
  8556                           
  8557                           ; BSR set to: 7
  8558   00FF38  20                 	db	32
  8559   00FF39  20                 	db	32
  8560   00FF3A  52                 	db	82	;'R'
  8561   00FF3B  45                 	db	69	;'E'
  8562   00FF3C  47                 	db	71	;'G'
  8563   00FF3D  0D                 	db	13
  8564   00FF3E  0A                 	db	10
  8565   00FF3F  00                 	db	0
  8566   00FF40                     STR_103:
  8567                           
  8568                           ; BSR set to: 7
  8569   00FF40  20                 	db	32
  8570   00FF41  25                 	db	37
  8571   00FF42  31                 	db	49	;'1'
  8572   00FF43  32                 	db	50	;'2'
  8573   00FF44  73                 	db	115	;'s'
  8574   00FF45  20                 	db	32
  8575   00FF46  20                 	db	32
  8576   00FF47  00                 	db	0
  8577   00FF48                     STR_102:
  8578                           
  8579                           ; BSR set to: 7
  8580   00FF48  5B                 	db	91	;'['
  8581   00FF49  25                 	db	37
  8582   00FF4A  31                 	db	49	;'1'
  8583   00FF4B  32                 	db	50	;'2'
  8584   00FF4C  73                 	db	115	;'s'
  8585   00FF4D  5D                 	db	93	;']'
  8586   00FF4E  20                 	db	32
  8587   00FF4F  00                 	db	0
  8588   00FF50                     STR_46:
  8589                           
  8590                           ; BSR set to: 7
  8591   00FF50  4D                 	db	77	;'M'
  8592   00FF51  45                 	db	69	;'E'
  8593   00FF52  5A                 	db	90	;'Z'
  8594   00FF53  57                 	db	87	;'W'
  8595   00FF54  36                 	db	54	;'6'
  8596   00FF55  35                 	db	53	;'5'
  8597   00FF56  43                 	db	67	;'C'
  8598   00FF57  00                 	db	0
  8599   00FF58                     STR_52:
  8600                           
  8601                           ; BSR set to: 7
  8602   00FF58  43                 	db	67	;'C'
  8603   00FF59  4C                 	db	76	;'L'
  8604   00FF5A  4B                 	db	75	;'K'
  8605   00FF5B  5F                 	db	95	;'_'
  8606   00FF5C  49                 	db	73	;'I'
  8607   00FF5D  4E                 	db	78	;'N'
  8608   00FF5E  43                 	db	67	;'C'
  8609   00FF5F  00                 	db	0
  8610   00FF60                     STR_53:
  8611                           
  8612                           ; BSR set to: 7
  8613   00FF60  52                 	db	82	;'R'
  8614   00FF61  45                 	db	69	;'E'
  8615   00FF62  51                 	db	81	;'Q'
  8616   00FF63  5F                 	db	95	;'_'
  8617   00FF64  48                 	db	72	;'H'
  8618   00FF65  44                 	db	68	;'D'
  8619   00FF66  52                 	db	82	;'R'
  8620   00FF67  00                 	db	0
  8621   00FF68                     STR_62:
  8622                           
  8623                           ; BSR set to: 7
  8624   00FF68  4D                 	db	77	;'M'
  8625   00FF69  4F                 	db	79	;'O'
  8626   00FF6A  4E                 	db	78	;'N'
  8627   00FF6B  49                 	db	73	;'I'
  8628   00FF6C  54                 	db	84	;'T'
  8629   00FF6D  4F                 	db	79	;'O'
  8630   00FF6E  52                 	db	82	;'R'
  8631   00FF6F  00                 	db	0
  8632   00FF70                     STR_206:
  8633                           
  8634                           ; BSR set to: 7
  8635   00FF70  28                 	db	40
  8636   00FF71  6E                 	db	110	;'n'
  8637   00FF72  75                 	db	117	;'u'
  8638   00FF73  6C                 	db	108	;'l'
  8639   00FF74  6C                 	db	108	;'l'
  8640   00FF75  29                 	db	41
  8641   00FF76  00                 	db	0
  8642   00FF77                     STR_58:
  8643                           
  8644                           ; BSR set to: 7
  8645   00FF77  43                 	db	67	;'C'
  8646   00FF78  53                 	db	83	;'S'
  8647   00FF79  54                 	db	84	;'T'
  8648   00FF7A  41                 	db	65	;'A'
  8649   00FF7B  52                 	db	82	;'R'
  8650   00FF7C  54                 	db	84	;'T'
  8651   00FF7D  00                 	db	0
  8652   00FF7E                     STR_59:
  8653                           
  8654                           ; BSR set to: 7
  8655   00FF7E  57                 	db	87	;'W'
  8656   00FF7F  53                 	db	83	;'S'
  8657   00FF80  54                 	db	84	;'T'
  8658   00FF81  41                 	db	65	;'A'
  8659   00FF82  52                 	db	82	;'R'
  8660   00FF83  54                 	db	84	;'T'
  8661   00FF84  00                 	db	0
  8662   00FF85                     STR_193:
  8663                           
  8664                           ; BSR set to: 7
  8665   00FF85  20                 	db	32
  8666   00FF86  25                 	db	37
  8667   00FF87  30                 	db	48	;'0'
  8668   00FF88  32                 	db	50	;'2'
  8669   00FF89  78                 	db	120	;'x'
  8670   00FF8A  00                 	db	0
  8671   00FF8B                     STR_186:
  8672                           
  8673                           ; BSR set to: 7
  8674   00FF8B  66                 	db	102	;'f'
  8675   00FF8C  61                 	db	97	;'a'
  8676   00FF8D  74                 	db	116	;'t'
  8677   00FF8E  3A                 	db	58	;':'
  8678   00FF8F  20                 	db	32
  8679   00FF90  00                 	db	0
  8680   00FF91                     STR_65:
  8681                           
  8682                           ; BSR set to: 7
  8683   00FF91  46                 	db	70	;'F'
  8684   00FF92  4C                 	db	76	;'L'
  8685   00FF93  41                 	db	65	;'A'
  8686   00FF94  53                 	db	83	;'S'
  8687   00FF95  48                 	db	72	;'H'
  8688   00FF96  00                 	db	0
  8689   00FF97                     STR_63:
  8690                           
  8691                           ; BSR set to: 7
  8692   00FF97  4D                 	db	77	;'M'
  8693   00FF98  44                 	db	68	;'D'
  8694   00FF99  55                 	db	85	;'U'
  8695   00FF9A  4D                 	db	77	;'M'
  8696   00FF9B  50                 	db	80	;'P'
  8697   00FF9C  00                 	db	0
  8698   00FF9D                     STR_35:
  8699                           
  8700                           ; BSR set to: 7
  8701   00FF9D  62                 	db	98	;'b'
  8702   00FF9E  75                 	db	117	;'u'
  8703   00FF9F  66                 	db	102	;'f'
  8704   00FFA0  3A                 	db	58	;':'
  8705   00FFA1  20                 	db	32
  8706   00FFA2  00                 	db	0
  8707   00FFA3                     STR_74:
  8708                           
  8709                           ; BSR set to: 7
  8710   00FFA3  25                 	db	37
  8711   00FFA4  73                 	db	115	;'s'
  8712   00FFA5  3E                 	db	62	;'>'
  8713   00FFA6  20                 	db	32
  8714   00FFA7  00                 	db	0
  8715   00FFA8                     STR_132:
  8716                           
  8717                           ; BSR set to: 7
  8718   00FFA8  4D                 	db	77	;'M'
  8719   00FFA9  65                 	db	101	;'e'
  8720   00FFAA  6D                 	db	109	;'m'
  8721   00FFAB  20                 	db	32
  8722   00FFAC  00                 	db	0
  8723   00FFAD                     STR_84:
  8724                           
  8725                           ; BSR set to: 7
  8726   00FFAD  30                 	db	48	;'0'
  8727   00FFAE  3A                 	db	58	;':'
  8728   00FFAF  2F                 	db	47
  8729   00FFB0  2F                 	db	47
  8730   00FFB1  00                 	db	0
  8731   00FFB2                     STR_57:
  8732                           
  8733                           ; BSR set to: 7
  8734   00FFB2  4C                 	db	76	;'L'
  8735   00FFB3  4F                 	db	79	;'O'
  8736   00FFB4  41                 	db	65	;'A'
  8737   00FFB5  44                 	db	68	;'D'
  8738   00FFB6  00                 	db	0
  8739   00FFB7                     STR_60:
  8740                           
  8741                           ; BSR set to: 7
  8742   00FFB7  52                 	db	82	;'R'
  8743   00FFB8  45                 	db	69	;'E'
  8744   00FFB9  54                 	db	84	;'T'
  8745   00FFBA  49                 	db	73	;'I'
  8746   00FFBB  00                 	db	0
  8747   00FFBC                     STR_66:
  8748                           
  8749                           ; BSR set to: 7
  8750   00FFBC  48                 	db	72	;'H'
  8751   00FFBD  45                 	db	69	;'E'
  8752   00FFBE  4C                 	db	76	;'L'
  8753   00FFBF  50                 	db	80	;'P'
  8754   00FFC0  00                 	db	0
  8755   00FFC1                     STR_64:
  8756                           
  8757                           ; BSR set to: 7
  8758   00FFC1  53                 	db	83	;'S'
  8759   00FFC2  48                 	db	72	;'H'
  8760   00FFC3  4F                 	db	79	;'O'
  8761   00FFC4  57                 	db	87	;'W'
  8762   00FFC5  00                 	db	0
  8763   00FFC6                     STR_43:
  8764                           
  8765                           ; BSR set to: 7
  8766   00FFC6  52                 	db	82	;'R'
  8767   00FFC7  44                 	db	68	;'D'
  8768   00FFC8  3A                 	db	58	;':'
  8769   00FFC9  20                 	db	32
  8770   00FFCA  00                 	db	0
  8771   00FFCB                     STR_42:
  8772                           
  8773                           ; BSR set to: 7
  8774   00FFCB  57                 	db	87	;'W'
  8775   00FFCC  52                 	db	82	;'R'
  8776   00FFCD  3A                 	db	58	;':'
  8777   00FFCE  20                 	db	32
  8778   00FFCF  00                 	db	0
  8779   00FFD0                     STR_26:
  8780                           
  8781                           ; BSR set to: 7
  8782   00FFD0  53                 	db	83	;'S'
  8783   00FFD1  44                 	db	68	;'D'
  8784   00FFD2  3A                 	db	58	;':'
  8785   00FFD3  20                 	db	32
  8786   00FFD4  00                 	db	0
  8787   00FFD5                     STR_200:
  8788                           
  8789                           ; BSR set to: 7
  8790   00FFD5  69                 	db	105	;'i'
  8791   00FFD6  6E                 	db	110	;'n'
  8792   00FFD7  66                 	db	102	;'f'
  8793   00FFD8  00                 	db	0
  8794   00FFD9                     STR_203:
  8795                           
  8796                           ; BSR set to: 7
  8797   00FFD9  6E                 	db	110	;'n'
  8798   00FFDA  61                 	db	97	;'a'
  8799   00FFDB  6E                 	db	110	;'n'
  8800   00FFDC  00                 	db	0
  8801   00FFDD                     
  8802                           ; BSR set to: 7
  8803   00FFDD  49                 	db	73	;'I'
  8804   00FFDE  4E                 	db	78	;'N'
  8805   00FFDF  46                 	db	70	;'F'
  8806   00FFE0  00                 	db	0
  8807   00FFE1                     
  8808                           ; BSR set to: 7
  8809   00FFE1  4E                 	db	78	;'N'
  8810   00FFE2  61                 	db	97	;'a'
  8811   00FFE3  4E                 	db	78	;'N'
  8812   00FFE4  00                 	db	0
  8813   00FFE5                     STR_61:
  8814                           
  8815                           ; BSR set to: 7
  8816   00FFE5  52                 	db	82	;'R'
  8817   00FFE6  45                 	db	69	;'E'
  8818   00FFE7  47                 	db	71	;'G'
  8819   00FFE8  00                 	db	0
  8820   00FFE9                     STR_55:
  8821                           
  8822                           ; BSR set to: 7
  8823   00FFE9  44                 	db	68	;'D'
  8824   00FFEA  49                 	db	73	;'I'
  8825   00FFEB  52                 	db	82	;'R'
  8826   00FFEC  00                 	db	0
  8827   00FFED                     STR_172:
  8828                           
  8829                           ; BSR set to: 7
  8830   00FFED  4F                 	db	79	;'O'
  8831   00FFEE  56                 	db	86	;'V'
  8832   00FFEF  00                 	db	0
  8833   00FFF0                     STR_127:
  8834                           
  8835                           ; BSR set to: 7
  8836   00FFF0  4C                 	db	76	;'L'
  8837   00FFF1  3D                 	db	61	;'='
  8838   00FFF2  00                 	db	0
  8839   00FFF3                     STR_56:
  8840                           
  8841                           ; BSR set to: 7
  8842   00FFF3  43                 	db	67	;'C'
  8843   00FFF4  44                 	db	68	;'D'
  8844   00FFF5  00                 	db	0
  8845   00FFF6                     STR_54:
  8846                           
  8847                           ; BSR set to: 7
  8848   00FFF6  4C                 	db	76	;'L'
  8849   00FFF7  53                 	db	83	;'S'
  8850   00FFF8  00                 	db	0
  8851   00FFF9                     STR_81:
  8852                           
  8853                           ; BSR set to: 7
  8854   00FFF9  25                 	db	37
  8855   00FFFA  73                 	db	115	;'s'
  8856   00FFFB  00                 	db	0
  8857   00FFFC                     STR_67:
  8858                           
  8859                           ; BSR set to: 7
  8860   00FFFC  3F                 	db	63	;'?'
  8861   00FFFD  00                 	db	0
  8862   00FE07                     STR_167         equ	STR_166
  8863   00FF85                     STR_196         equ	STR_193
  8864   00FFF9                     STR_107         equ	STR_81
  8865   00FFD9                     STR_204         equ	STR_203
  8866   00FFD9                     STR_205         equ	STR_203
  8867   00FFD5                     STR_201         equ	STR_200
  8868   00FFD5                     STR_202         equ	STR_200
  8869   00FDC6                     STR_9           equ	STR_7
  8870   00FFC4                     STR_129         equ	STR_64+3
  8871   00FFC4                     STR_130         equ	STR_64+3
  8872   00FFED                     STR_173         equ	STR_172
  8873   00FFF0                     STR_128         equ	STR_127
  8874   00FF8B                     STR_189         equ	STR_186
  8875   00FF9D                     STR_39          equ	STR_35
  8876   00FFD0                     STR_29          equ	STR_26
  8877   00FCC2                     STR_152         equ	STR_140
  8878   00FF15                     STR_169         equ	STR_168
  8879   00FE58                     STR_194         equ	STR_73+8
  8880   00FE58                     STR_197         equ	STR_73+8
  8881   00FC1A                     STR_154         equ	STR_142
  8882   00FB4E                     STR_182         equ	STR_175
  8883   00FA08                     STR_153         equ	STR_141
  8884   00F28B                     STR_1           equ	STR_27+52
  8885   00F28B                     STR_3           equ	STR_27+52
  8886   00FC04                     STR_164         equ	STR_162
  8887   00FDB5                     STR_157         equ	STR_144
  8888   00FDA4                     STR_156         equ	STR_143
  8889   00FE94                     STR_100         equ	STR_94
  8890   00FEEE                     STR_99          equ	STR_93
  8891   00FF1E                     STR_98          equ	STR_92
  8892   00FC9A                     STR_97          equ	STR_96
  8893   00FC9A                     STR_105         equ	STR_96
  8894   00FD0F                     STR_165         equ	STR_163
  8895   00FC5D                     STR_78          equ	STR_133+2
  8896   00FB90                     STR_91          equ	STR_88+20
  8897   00FB90                     STR_101         equ	STR_88+20
  8898   00FB90                     STR_104         equ	STR_88+20
  8899   00FB90                     STR_131         equ	STR_88+20
  8900   00FB90                     STR_159         equ	STR_88+20
  8901   00FB7B                     STR_68          equ	STR_71+22
  8902   00FB7B                     STR_178         equ	STR_71+22
  8903   00FB7B                     STR_199         equ	STR_71+22
  8904   00FFFE  00                 	db	0	; dummy byte at the end
  8905   000003                     __activetblptr  equ	3
  8906                           
  8907                           ; #config settings
  8908                           
  8909                           	psect	cinit
  8910   01E1C0                     __pcinit:
  8911                           	callstack 0
  8912   01E1C0                     start_initialization:
  8913                           	callstack 0
  8914   01E1C0                     __initialization:
  8915                           	callstack 0
  8916                           
  8917                           ; Initialize objects allocated to BANK9 (139 bytes)
  8918                           ; load TBLPTR registers with __pidataBANK9
  8919   01E1C0  0E5E               	movlw	low __pidataBANK9
  8920   01E1C2  6EF6               	movwf	tblptrl,c
  8921   01E1C4  0EF0               	movlw	high __pidataBANK9
  8922   01E1C6  6EF7               	movwf	tblptrh,c
  8923   01E1C8  0E01               	movlw	low (__pidataBANK9 shr (0+16))
  8924   01E1CA  6EF8               	movwf	tblptru,c
  8925   01E1CC  EE02  F100         	lfsr	0,__pdataBANK9
  8926   01E1D0  EE10 F08B          	lfsr	1,139
  8927   01E1D4                     copy_data0:
  8928   01E1D4  0009               	tblrd		*+
  8929   01E1D6  C4F5 F4EE          	movff	tablat,postinc0
  8930   01E1DA  50E5               	movf	postdec1,w,c
  8931   01E1DC  50E1               	movf	fsr1l,w,c
  8932   01E1DE  E1FA               	bnz	copy_data0
  8933                           
  8934                           ; Initialize objects allocated to BANK8 (12 bytes)
  8935                           ; load TBLPTR registers with __pidataBANK8
  8936   01E1E0  0E4C               	movlw	low __pidataBANK8
  8937   01E1E2  6EF6               	movwf	tblptrl,c
  8938   01E1E4  0E02               	movlw	high __pidataBANK8
  8939   01E1E6  6EF7               	movwf	tblptrh,c
  8940   01E1E8  0E00               	movlw	low (__pidataBANK8 shr (0+16))
  8941   01E1EA  6EF8               	movwf	tblptru,c
  8942   01E1EC  EE02  F0D3         	lfsr	0,__pdataBANK8
  8943   01E1F0  EE10 F00C          	lfsr	1,12
  8944   01E1F4                     copy_data1:
  8945   01E1F4  0009               	tblrd		*+
  8946   01E1F6  C4F5 F4EE          	movff	tablat,postinc0
  8947   01E1FA  50E5               	movf	postdec1,w,c
  8948   01E1FC  50E1               	movf	fsr1l,w,c
  8949   01E1FE  E1FA               	bnz	copy_data1
  8950                           
  8951                           ; Initialize objects allocated to BANK7 (26 bytes)
  8952                           ; load TBLPTR registers with __pidataBANK7
  8953   01E200  0E8A               	movlw	low __pidataBANK7
  8954   01E202  6EF6               	movwf	tblptrl,c
  8955   01E204  0E01               	movlw	high __pidataBANK7
  8956   01E206  6EF7               	movwf	tblptrh,c
  8957   01E208  0E00               	movlw	low (__pidataBANK7 shr (0+16))
  8958   01E20A  6EF8               	movwf	tblptru,c
  8959   01E20C  EE01  F3E6         	lfsr	0,__pdataBANK7
  8960   01E210  EE10 F01A          	lfsr	1,26
  8961   01E214                     copy_data2:
  8962   01E214  0009               	tblrd		*+
  8963   01E216  C4F5 F4EE          	movff	tablat,postinc0
  8964   01E21A  50E5               	movf	postdec1,w,c
  8965   01E21C  50E1               	movf	fsr1l,w,c
  8966   01E21E  E1FA               	bnz	copy_data2
  8967                           
  8968                           ; Clear objects allocated to BIGRAM (2680 bytes)
  8969   01E220  EE02  F380         	lfsr	0,__pbssBIGRAM
  8970   01E224  EE12 F278          	lfsr	1,2680
  8971   01E228                     clear_0:
  8972   01E228  6AEE               	clrf	postinc0,c
  8973   01E22A  50E5               	movf	postdec1,w,c
  8974   01E22C  50E1               	movf	fsr1l,w,c
  8975   01E22E  E1FC               	bnz	clear_0
  8976   01E230  50E2               	movf	fsr1h,w,c
  8977   01E232  E1FA               	bnz	clear_0
  8978                           
  8979                           ; Clear objects allocated to BANK11 (128 bytes)
  8980   01E234  EE02  F300         	lfsr	0,__pbssBANK11
  8981   01E238  0E80               	movlw	128
  8982   01E23A                     clear_1:
  8983   01E23A  6AEE               	clrf	postinc0,c
  8984   01E23C  06E8               	decf	wreg,f,c
  8985   01E23E  E1FD               	bnz	clear_1
  8986                           
  8987                           ; Clear objects allocated to BANK10 (209 bytes)
  8988   01E240  EE02  F200         	lfsr	0,__pbssBANK10
  8989   01E244  0ED1               	movlw	209
  8990   01E246                     clear_2:
  8991   01E246  6AEE               	clrf	postinc0,c
  8992   01E248  06E8               	decf	wreg,f,c
  8993   01E24A  E1FD               	bnz	clear_2
  8994                           
  8995                           ; Clear objects allocated to BANK9 (40 bytes)
  8996   01E24C  EE02  F18B         	lfsr	0,__pbssBANK9
  8997   01E250  0E28               	movlw	40
  8998   01E252                     clear_3:
  8999   01E252  6AEE               	clrf	postinc0,c
  9000   01E254  06E8               	decf	wreg,f,c
  9001   01E256  E1FD               	bnz	clear_3
  9002                           
  9003                           ; Clear objects allocated to BANK8 (211 bytes)
  9004   01E258  EE02  F000         	lfsr	0,__pbssBANK8
  9005   01E25C  0ED3               	movlw	211
  9006   01E25E                     clear_4:
  9007   01E25E  6AEE               	clrf	postinc0,c
  9008   01E260  06E8               	decf	wreg,f,c
  9009   01E262  E1FD               	bnz	clear_4
  9010                           
  9011                           ; Clear objects allocated to BANK7 (72 bytes)
  9012   01E264  EE01  F39E         	lfsr	0,__pbssBANK7
  9013   01E268  0E48               	movlw	72
  9014   01E26A                     clear_5:
  9015   01E26A  6AEE               	clrf	postinc0,c
  9016   01E26C  06E8               	decf	wreg,f,c
  9017   01E26E  E1FD               	bnz	clear_5
  9018                           
  9019                           ; Clear objects allocated to COMRAM (3 bytes)
  9020   01E270  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  9021   01E272  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  9022   01E274  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  9023                           
  9024                           ;
  9025                           ; Setup IVTBASE
  9026                           ;
  9027   00045D                     IVTBASEL        equ	1117
  9028   00045E                     IVTBASEH        equ	1118
  9029   00045F                     IVTBASEU        equ	1119
  9030   01E276  0104               	movlb	4
  9031   01E278  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  9032   01E27A  6F5D               	movwf	93,b
  9033   01E27C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  9034   01E27E  6F5E               	movwf	94,b
  9035   01E280  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  9036   01E282  6F5F               	movwf	95,b
  9037   01E284                     end_of_initialization:
  9038                           	callstack 0
  9039   01E284                     __end_of__initialization:
  9040                           	callstack 0
  9041   01E284  0100               	movlb	0
  9042   01E286  EFD0  F0B8         	goto	_main	;jump to C main() function
  9043                           
  9044                           	psect	bssCOMRAM
  9045   00055A                     __pbssCOMRAM:
  9046                           	callstack 0
  9047   00055A                     _prec:
  9048                           	callstack 0
  9049   00055A                     	ds	2
  9050   00055C                     _flags:
  9051                           	callstack 0
  9052   00055C                     	ds	1
  9053                           
  9054                           	psect	bssBANK7
  9055   00079E                     __pbssBANK7:
  9056                           	callstack 0
  9057   00079E                     _arg:
  9058                           	callstack 0
  9059   00079E                     	ds	10
  9060   0007A8                     _ctx_:
  9061                           	callstack 0
  9062   0007A8                     	ds	5
  9063   0007AD                     _raw_addr:
  9064                           	callstack 0
  9065   0007AD                     	ds	4
  9066   0007B1                     _width:
  9067                           	callstack 0
  9068   0007B1                     	ds	2
  9069   0007B3                     _errno:
  9070                           	callstack 0
  9071   0007B3                     	ds	2
  9072   0007B5                     _Fsid:
  9073                           	callstack 0
  9074   0007B5                     	ds	2
  9075   0007B7                     _FatFs:
  9076                           	callstack 0
  9077   0007B7                     	ds	2
  9078   0007B9                     _file_size:
  9079                           	callstack 0
  9080   0007B9                     	ds	2
  9081   0007BB                     _fin_size:
  9082                           	callstack 0
  9083   0007BB                     	ds	2
  9084   0007BD                     _frd_ptr:
  9085                           	callstack 0
  9086   0007BD                     	ds	2
  9087   0007BF                     setup_sd@retry:
  9088                           	callstack 0
  9089   0007BF                     	ds	2
  9090   0007C1                     _rx_cnt:
  9091                           	callstack 0
  9092   0007C1                     	ds	2
  9093   0007C3                     _rx_rp:
  9094                           	callstack 0
  9095   0007C3                     	ds	2
  9096   0007C5                     _rx_wp:
  9097                           	callstack 0
  9098   0007C5                     	ds	2
  9099   0007C7                     _CurrVol:
  9100                           	callstack 0
  9101   0007C7                     	ds	1
  9102   0007C8                     _mon:
  9103                           	callstack 0
  9104   0007C8                     	ds	1
  9105   0007C9                     _load_flg:
  9106                           	callstack 0
  9107   0007C9                     	ds	1
  9108   0007CA                     _cin_no:
  9109                           	callstack 0
  9110   0007CA                     	ds	1
  9111   0007CB                     _irq_flg:
  9112                           	callstack 0
  9113   0007CB                     	ds	1
  9114   0007CC                     _wup_flg:
  9115                           	callstack 0
  9116   0007CC                     	ds	1
  9117   0007CD                     _nmi_sig:
  9118                           	callstack 0
  9119   0007CD                     	ds	1
  9120   0007CE                     _req_tbl:
  9121                           	callstack 0
  9122   0007CE                     	ds	13
  9123   0007DB                     _bioreq_ubuffadr:
  9124                           	callstack 0
  9125   0007DB                     	ds	4
  9126   0007DF                     _clk_fs:
  9127                           	callstack 0
  9128   0007DF                     	ds	4
  9129   0007E3                     _fin_cnt:
  9130                           	callstack 0
  9131   0007E3                     	ds	2
  9132   0007E5                     _cpu_flg:
  9133                           	callstack 0
  9134   0007E5                     	ds	1
  9135                           
  9136                           	psect	dataBANK7
  9137   0007E6                     __pdataBANK7:
  9138                           	callstack 0
  9139   0007E6                     _t_conf:
  9140                           	callstack 0
  9141   0007E6                     	ds	8
  9142   0007EE                     _start_lba:
  9143                           	callstack 0
  9144   0007EE                     	ds	4
  9145   0007F2                     	ds	2
  9146   0007F4                     	ds	2
  9147   0007F6                     	ds	2
  9148   0007F8                     	ds	2
  9149   0007FA                     	ds	2
  9150   0007FC                     	ds	2
  9151   0007FE                     _SPI_SD_ctx:
  9152                           	callstack 0
  9153   0007FE                     	ds	2
  9154                           
  9155                           	psect	bssBANK8
  9156   000800                     __pbssBANK8:
  9157                           	callstack 0
  9158   000800                     	ds	22
  9159   000816                     _debug:
  9160                           	callstack 0
  9161   000816                     	ds	6
  9162   00081C                     floorf@F521:
  9163                           	callstack 0
  9164   00081C                     	ds	4
  9165   000820                     ___fpclassifyf@F465:
  9166                           	callstack 0
  9167   000820                     	ds	4
  9168   000824                     _bioreq_cbuffadr:
  9169                           	callstack 0
  9170   000824                     	ds	4
  9171   000828                     _dbuf:
  9172                           	callstack 0
  9173   000828                     	ds	80
  9174   000878                     _binv:
  9175                           	callstack 0
  9176   000878                     	ds	42
  9177   0008A2                     _fh:
  9178                           	callstack 0
  9179   0008A2                     	ds	32
  9180   0008C2                     _fin_name:
  9181                           	callstack 0
  9182   0008C2                     	ds	13
  9183   0008CF                     _pic18f47q43_spi_ctx:
  9184                           	callstack 0
  9185   0008CF                     	ds	4
  9186                           
  9187                           	psect	dataBANK8
  9188   0008D3                     __pdataBANK8:
  9189                           	callstack 0
  9190   0008D3                     _strin_func:
  9191                           	callstack 0
  9192   0008D3                     	ds	6
  9193   0008D9                     _get_char:
  9194                           	callstack 0
  9195   0008D9                     	ds	6
  9196                           
  9197                           	psect	bssBANK9
  9198   00098B                     __pbssBANK9:
  9199                           	callstack 0
  9200   00098B                     	ds	40
  9201                           
  9202                           	psect	dataBANK9
  9203   000900                     __pdataBANK9:
  9204                           	callstack 0
  9205   000900                     _cmd:
  9206                           	callstack 0
  9207   000900                     	ds	75
  9208   00094B                     _cpm_drives:
  9209                           	callstack 0
  9210   00094B                     	ds	64
  9211                           
  9212                           	psect	bssBANK10
  9213   000A00                     __pbssBANK10:
  9214                           	callstack 0
  9215   000A00                     _disk_buf:
  9216                           	callstack 0
  9217   000A00                     	ds	128
  9218   000A80                     _line_buf:
  9219                           	callstack 0
  9220   000A80                     	ds	81
  9221                           
  9222                           	psect	bssBANK11
  9223   000B00                     __pbssBANK11:
  9224                           	callstack 0
  9225   000B00                     _rx_buf:
  9226                           	callstack 0
  9227   000B00                     	ds	128
  9228                           
  9229                           	psect	bssBIGRAM
  9230   000B80                     __pbssBIGRAM:
  9231                           	callstack 0
  9232   000B80                     _fs:
  9233                           	callstack 0
  9234   000B80                     	ds	564
  9235   000DB4                     _in_fl:
  9236                           	callstack 0
  9237   000DB4                     	ds	546
  9238   000FD6                     _rom_fl:
  9239                           	callstack 0
  9240   000FD6                     	ds	546
  9241   0011F8                     _cin_file:
  9242                           	callstack 0
  9243   0011F8                     	ds	512
  9244   0013F8                     _tmp_buf:
  9245                           	callstack 0
  9246   0013F8                     	ds	512
  9247                           
  9248                           	psect	cstackBANK7
  9249   000700                     __pcstackBANK7:
  9250                           	callstack 0
  9251   000700                     ?_in_file:
  9252                           	callstack 0
  9253   000700                     ?_str_inf:
  9254                           	callstack 0
  9255   000700                     ?_load_config:
  9256                           	callstack 0
  9257   000700                     ?_load_program:
  9258                           	callstack 0
  9259   000700                     ?_u_getch:
  9260                           	callstack 0
  9261   000700                     ?_get_str:
  9262                           	callstack 0
  9263   000700                     get_str@buf:
  9264                           	callstack 0
  9265   000700                     load_program@fname:
  9266                           	callstack 0
  9267   000700                     str_inf@buf:
  9268                           	callstack 0
  9269   000700                     f_getcwd@ccl:
  9270                           	callstack 0
  9271   000700                     ??_see_file:
  9272                           
  9273                           ; 1 bytes @ 0x0
  9274   000700                     	ds	2
  9275   000702                     get_str@cnt:
  9276                           	callstack 0
  9277   000702                     str_inf@cnt:
  9278                           	callstack 0
  9279   000702                     see_file@rdbuf:
  9280                           	callstack 0
  9281   000702                     load_program@adr0:
  9282                           	callstack 0
  9283   000702                     ??_load_config:
  9284   000702                     ??_u_getch:
  9285                           
  9286                           ; 1 bytes @ 0x2
  9287   000702                     	ds	1
  9288   000703                     ??_str_inf:
  9289   000703                     ??_get_str:
  9290                           
  9291                           ; 1 bytes @ 0x3
  9292   000703                     	ds	1
  9293   000704                     see_file@br:
  9294                           	callstack 0
  9295   000704                     f_getcwd@tp:
  9296                           	callstack 0
  9297                           
  9298                           ; 2 bytes @ 0x4
  9299   000704                     	ds	1
  9300   000705                     get_str@c:
  9301                           	callstack 0
  9302   000705                     str_inf@c:
  9303                           	callstack 0
  9304                           
  9305                           ; 2 bytes @ 0x5
  9306   000705                     	ds	1
  9307   000706                     see_file@fr:
  9308                           	callstack 0
  9309   000706                     load_program@rdbuf:
  9310                           	callstack 0
  9311   000706                     f_getcwd@n:
  9312                           	callstack 0
  9313                           
  9314                           ; 2 bytes @ 0x6
  9315   000706                     	ds	1
  9316   000707                     str_inf@a:
  9317                           	callstack 0
  9318   000707                     get_str@i:
  9319                           	callstack 0
  9320   000707                     see_file@header:
  9321                           	callstack 0
  9322                           
  9323                           ; 2 bytes @ 0x7
  9324   000707                     	ds	1
  9325   000708                     load_program@btr:
  9326                           	callstack 0
  9327   000708                     str_inf@i:
  9328                           	callstack 0
  9329   000708                     f_getcwd@i:
  9330                           	callstack 0
  9331                           
  9332                           ; 2 bytes @ 0x8
  9333   000708                     	ds	2
  9334   00070A                     _unimon_console$1038:
  9335                           	callstack 0
  9336   00070A                     load_config@buf:
  9337                           	callstack 0
  9338   00070A                     load_program@adr:
  9339                           	callstack 0
  9340   00070A                     f_getcwd@fno:
  9341                           	callstack 0
  9342                           
  9343                           ; 22 bytes @ 0xA
  9344   00070A                     	ds	2
  9345   00070C                     load_config@fr:
  9346                           	callstack 0
  9347   00070C                     unimon_console@buf:
  9348                           	callstack 0
  9349                           
  9350                           ; 2 bytes @ 0xC
  9351   00070C                     	ds	1
  9352   00070D                     load_config@a:
  9353                           	callstack 0
  9354                           
  9355                           ; 2 bytes @ 0xD
  9356   00070D                     	ds	1
  9357   00070E                     unimon_console@cnt:
  9358                           	callstack 0
  9359   00070E                     load_program@cnt:
  9360                           	callstack 0
  9361                           
  9362                           ; 2 bytes @ 0xE
  9363   00070E                     	ds	1
  9364   00070F                     load_config@conf:
  9365                           	callstack 0
  9366                           
  9367                           ; 2 bytes @ 0xF
  9368   00070F                     	ds	1
  9369   000710                     _bus_master_operation$1043:
  9370                           	callstack 0
  9371   000710                     load_program@br:
  9372                           	callstack 0
  9373                           
  9374                           ; 2 bytes @ 0x10
  9375   000710                     	ds	1
  9376   000711                     load_config@str:
  9377                           	callstack 0
  9378                           
  9379                           ; 2 bytes @ 0x11
  9380   000711                     	ds	1
  9381   000712                     load_program@fr:
  9382                           	callstack 0
  9383   000712                     bus_master_operation@buf:
  9384                           	callstack 0
  9385                           
  9386                           ; 2 bytes @ 0x12
  9387   000712                     	ds	1
  9388   000713                     load_program@header:
  9389                           	callstack 0
  9390   000713                     load_config@i:
  9391                           	callstack 0
  9392                           
  9393                           ; 2 bytes @ 0x13
  9394   000713                     	ds	1
  9395   000714                     bus_master_operation@cnt:
  9396                           	callstack 0
  9397                           
  9398                           ; 2 bytes @ 0x14
  9399   000714                     	ds	1
  9400   000715                     load_file@p:
  9401                           	callstack 0
  9402                           
  9403                           ; 2 bytes @ 0x15
  9404   000715                     	ds	1
  9405   000716                     ?_setup_monitor:
  9406                           	callstack 0
  9407   000716                     boot_file@flag:
  9408                           	callstack 0
  9409   000716                     return_cpu@rs:
  9410                           	callstack 0
  9411   000716                     wstart_prog@rs:
  9412                           	callstack 0
  9413   000716                     restart_prog@rs:
  9414                           	callstack 0
  9415   000716                     mon_prog@p:
  9416                           	callstack 0
  9417                           
  9418                           ; 2 bytes @ 0x16
  9419   000716                     	ds	1
  9420   000717                     boot_file@m:
  9421                           	callstack 0
  9422                           
  9423                           ; 1 bytes @ 0x17
  9424   000717                     	ds	1
  9425   000718                     boot_file@rs:
  9426                           	callstack 0
  9427   000718                     mon_prog@rs:
  9428                           	callstack 0
  9429   000718                     setup_monitor@rs:
  9430                           	callstack 0
  9431                           
  9432                           ; 2 bytes @ 0x18
  9433   000718                     	ds	1
  9434   000719                     mon_prog@sw:
  9435                           	callstack 0
  9436                           
  9437                           ; 1 bytes @ 0x19
  9438   000719                     	ds	7
  9439   000720                     f_getcwd@fs:
  9440                           	callstack 0
  9441                           
  9442                           ; 2 bytes @ 0x20
  9443   000720                     	ds	2
  9444   000722                     f_getcwd@res:
  9445                           	callstack 0
  9446                           
  9447                           ; 1 bytes @ 0x22
  9448   000722                     	ds	1
  9449   000723                     f_getcwd@dj:
  9450                           	callstack 0
  9451                           
  9452                           ; 40 bytes @ 0x23
  9453   000723                     	ds	40
  9454   00074B                     scan_files@fn:
  9455                           	callstack 0
  9456   00074B                     scan_files1@fn:
  9457                           	callstack 0
  9458                           
  9459                           ; 2 bytes @ 0x4B
  9460   00074B                     	ds	2
  9461   00074D                     scan_files1@fcnt:
  9462                           	callstack 0
  9463   00074D                     scan_files@p:
  9464                           	callstack 0
  9465                           
  9466                           ; 2 bytes @ 0x4D
  9467   00074D                     	ds	1
  9468   00074E                     scan_files1@p:
  9469                           	callstack 0
  9470                           
  9471                           ; 2 bytes @ 0x4E
  9472   00074E                     	ds	1
  9473   00074F                     scan_files@res:
  9474                           	callstack 0
  9475                           
  9476                           ; 1 bytes @ 0x4F
  9477   00074F                     	ds	1
  9478   000750                     scan_files1@res:
  9479                           	callstack 0
  9480   000750                     scan_files@path:
  9481                           	callstack 0
  9482                           
  9483                           ; 2 bytes @ 0x50
  9484   000750                     	ds	1
  9485   000751                     scan_files1@path:
  9486                           	callstack 0
  9487                           
  9488                           ; 2 bytes @ 0x51
  9489   000751                     	ds	1
  9490   000752                     scan_files@fno:
  9491                           	callstack 0
  9492                           
  9493                           ; 22 bytes @ 0x52
  9494   000752                     	ds	1
  9495   000753                     scan_files1@fno:
  9496                           	callstack 0
  9497                           
  9498                           ; 22 bytes @ 0x53
  9499   000753                     	ds	21
  9500   000768                     scan_files@dir:
  9501                           	callstack 0
  9502                           
  9503                           ; 40 bytes @ 0x68
  9504   000768                     	ds	1
  9505   000769                     scan_files1@dir:
  9506                           	callstack 0
  9507                           
  9508                           ; 40 bytes @ 0x69
  9509   000769                     	ds	40
  9510   000791                     ??_main:
  9511                           
  9512                           ; 1 bytes @ 0x91
  9513   000791                     	ds	2
  9514   000793                     _main$5421:
  9515                           	callstack 0
  9516                           
  9517                           ; 4 bytes @ 0x93
  9518   000793                     	ds	4
  9519   000797                     main@res:
  9520                           	callstack 0
  9521                           
  9522                           ; 2 bytes @ 0x97
  9523   000797                     	ds	2
  9524   000799                     main@rs:
  9525                           	callstack 0
  9526                           
  9527                           ; 1 bytes @ 0x99
  9528   000799                     	ds	1
  9529   00079A                     main@buf:
  9530                           	callstack 0
  9531                           
  9532                           ; 2 bytes @ 0x9A
  9533   00079A                     	ds	2
  9534   00079C                     main@c:
  9535                           	callstack 0
  9536                           
  9537                           ; 2 bytes @ 0x9C
  9538   00079C                     	ds	2
  9539                           
  9540                           	psect	cstackBANK6
  9541   000600                     __pcstackBANK6:
  9542                           	callstack 0
  9543   000600                     disk_read@buff:
  9544                           	callstack 0
  9545   000600                     disk_write@buff:
  9546                           	callstack 0
  9547   000600                     disk_initialize@buf:
  9548                           	callstack 0
  9549                           
  9550                           ; 128 bytes @ 0x0
  9551   000600                     	ds	2
  9552   000602                     disk_read@sector:
  9553                           	callstack 0
  9554   000602                     disk_write@sector:
  9555                           	callstack 0
  9556                           
  9557                           ; 4 bytes @ 0x2
  9558   000602                     	ds	4
  9559   000606                     disk_read@count:
  9560                           	callstack 0
  9561   000606                     disk_write@count:
  9562                           	callstack 0
  9563                           
  9564                           ; 2 bytes @ 0x6
  9565   000606                     	ds	2
  9566   000608                     sync_window@fs:
  9567                           	callstack 0
  9568                           
  9569                           ; 2 bytes @ 0x8
  9570   000608                     	ds	2
  9571   00060A                     ??_sync_window:
  9572                           
  9573                           ; 1 bytes @ 0xA
  9574   00060A                     	ds	16
  9575   00061A                     move_window@fs:
  9576                           	callstack 0
  9577   00061A                     sync_fs@fs:
  9578                           	callstack 0
  9579   00061A                     dir_clear@fs:
  9580                           	callstack 0
  9581                           
  9582                           ; 2 bytes @ 0x1A
  9583   00061A                     	ds	2
  9584   00061C                     move_window@sect:
  9585                           	callstack 0
  9586   00061C                     dir_clear@clst:
  9587                           	callstack 0
  9588   00061C                     ??_sync_fs:
  9589                           
  9590                           ; 1 bytes @ 0x1C
  9591   00061C                     	ds	4
  9592   000620                     dir_clear@ibuf:
  9593                           	callstack 0
  9594   000620                     
  9595                           ; 1 bytes @ 0x20
  9596   000620                     	ds	2
  9597   000622                     dir_clear@sect:
  9598                           	callstack 0
  9599                           
  9600                           ; 4 bytes @ 0x22
  9601   000622                     	ds	2
  9602   000624                     ?_check_fs:
  9603                           	callstack 0
  9604   000624                     ?_get_fat:
  9605                           	callstack 0
  9606   000624                     get_fat@obj:
  9607                           	callstack 0
  9608   000624                     put_fat@fs:
  9609                           	callstack 0
  9610   000624                     check_fs@fs:
  9611                           	callstack 0
  9612   000624                     f_sync@fp:
  9613                           	callstack 0
  9614                           
  9615                           ; 2 bytes @ 0x24
  9616   000624                     	ds	2
  9617   000626                     dir_clear@szb:
  9618                           	callstack 0
  9619   000626                     get_fat@clst:
  9620                           	callstack 0
  9621   000626                     put_fat@clst:
  9622                           	callstack 0
  9623   000626                     check_fs@sect:
  9624                           	callstack 0
  9625   000626                     f_sync@tm:
  9626                           	callstack 0
  9627                           
  9628                           ; 4 bytes @ 0x26
  9629   000626                     	ds	2
  9630   000628                     dir_clear@n:
  9631                           	callstack 0
  9632                           
  9633                           ; 2 bytes @ 0x28
  9634   000628                     	ds	2
  9635   00062A                     f_sync@res:
  9636                           	callstack 0
  9637   00062A                     put_fat@val:
  9638                           	callstack 0
  9639   00062A                     ??_get_fat:
  9640   00062A                     ??_check_fs:
  9641                           
  9642                           ; 1 bytes @ 0x2A
  9643   00062A                     	ds	1
  9644   00062B                     f_sync@dir:
  9645                           	callstack 0
  9646                           
  9647                           ; 2 bytes @ 0x2B
  9648   00062B                     	ds	2
  9649   00062D                     check_fs@sign:
  9650                           	callstack 0
  9651   00062D                     f_sync@fs:
  9652                           	callstack 0
  9653                           
  9654                           ; 2 bytes @ 0x2D
  9655   00062D                     	ds	1
  9656   00062E                     ??_put_fat:
  9657                           
  9658                           ; 1 bytes @ 0x2E
  9659   00062E                     	ds	1
  9660   00062F                     check_fs@w:
  9661                           	callstack 0
  9662   00062F                     f_close@fp:
  9663                           	callstack 0
  9664                           
  9665                           ; 2 bytes @ 0x2F
  9666   00062F                     	ds	2
  9667   000631                     check_fs@b:
  9668                           	callstack 0
  9669   000631                     f_close@fs:
  9670                           	callstack 0
  9671                           
  9672                           ; 2 bytes @ 0x31
  9673   000631                     	ds	1
  9674   000632                     ?_find_volume:
  9675                           	callstack 0
  9676   000632                     _get_fat$2170:
  9677                           	callstack 0
  9678   000632                     find_volume@fs:
  9679                           	callstack 0
  9680                           
  9681                           ; 2 bytes @ 0x32
  9682   000632                     	ds	1
  9683   000633                     f_close@res:
  9684                           	callstack 0
  9685                           
  9686                           ; 1 bytes @ 0x33
  9687   000633                     	ds	1
  9688   000634                     get_fat@wc:
  9689                           	callstack 0
  9690   000634                     find_volume@part:
  9691                           	callstack 0
  9692                           
  9693                           ; 2 bytes @ 0x34
  9694   000634                     	ds	2
  9695   000636                     get_fat@val:
  9696                           	callstack 0
  9697   000636                     ??_find_volume:
  9698                           
  9699                           ; 1 bytes @ 0x36
  9700   000636                     	ds	4
  9701   00063A                     get_fat@bc:
  9702                           	callstack 0
  9703                           
  9704                           ; 2 bytes @ 0x3A
  9705   00063A                     	ds	2
  9706   00063C                     get_fat@fs:
  9707                           	callstack 0
  9708   00063C                     _put_fat$2200:
  9709                           	callstack 0
  9710   00063C                     find_volume@mbr_pt:
  9711                           	callstack 0
  9712                           
  9713                           ; 16 bytes @ 0x3C
  9714   00063C                     	ds	2
  9715   00063E                     _put_fat$2201:
  9716                           	callstack 0
  9717   00063E                     dir_sdi@dp:
  9718                           	callstack 0
  9719   00063E                     f_read@fp:
  9720                           	callstack 0
  9721                           
  9722                           ; 2 bytes @ 0x3E
  9723   00063E                     	ds	2
  9724   000640                     put_fat@p:
  9725                           	callstack 0
  9726   000640                     f_read@buff:
  9727                           	callstack 0
  9728   000640                     dir_sdi@ofs:
  9729                           	callstack 0
  9730                           
  9731                           ; 4 bytes @ 0x40
  9732   000640                     	ds	2
  9733   000642                     put_fat@bc:
  9734                           	callstack 0
  9735   000642                     f_read@btr:
  9736                           	callstack 0
  9737                           
  9738                           ; 2 bytes @ 0x42
  9739   000642                     	ds	2
  9740   000644                     put_fat@res:
  9741                           	callstack 0
  9742   000644                     f_read@br:
  9743                           	callstack 0
  9744   000644                     ??_dir_sdi:
  9745                           
  9746                           ; 1 bytes @ 0x44
  9747   000644                     	ds	1
  9748   000645                     ?_create_chain:
  9749                           	callstack 0
  9750   000645                     remove_chain@obj:
  9751                           	callstack 0
  9752   000645                     create_chain@obj:
  9753                           	callstack 0
  9754                           
  9755                           ; 2 bytes @ 0x45
  9756   000645                     	ds	1
  9757   000646                     ??_f_read:
  9758                           
  9759                           ; 1 bytes @ 0x46
  9760   000646                     	ds	1
  9761   000647                     remove_chain@clst:
  9762                           	callstack 0
  9763   000647                     create_chain@clst:
  9764                           	callstack 0
  9765                           
  9766                           ; 4 bytes @ 0x47
  9767   000647                     	ds	4
  9768   00064B                     remove_chain@pclst:
  9769                           	callstack 0
  9770   00064B                     ??_create_chain:
  9771                           
  9772                           ; 1 bytes @ 0x4B
  9773   00064B                     	ds	1
  9774   00064C                     find_volume@fmt:
  9775                           	callstack 0
  9776                           
  9777                           ; 2 bytes @ 0x4C
  9778   00064C                     	ds	2
  9779   00064E                     find_volume@i:
  9780                           	callstack 0
  9781   00064E                     dir_sdi@csz:
  9782                           	callstack 0
  9783                           
  9784                           ; 4 bytes @ 0x4E
  9785   00064E                     	ds	1
  9786   00064F                     ??_remove_chain:
  9787                           
  9788                           ; 1 bytes @ 0x4F
  9789   00064F                     	ds	3
  9790   000652                     dir_sdi@clst:
  9791                           	callstack 0
  9792   000652                     f_read@remain:
  9793                           	callstack 0
  9794                           
  9795                           ; 4 bytes @ 0x52
  9796   000652                     	ds	1
  9797   000653                     create_chain@res:
  9798                           	callstack 0
  9799                           
  9800                           ; 1 bytes @ 0x53
  9801   000653                     	ds	1
  9802   000654                     create_chain@scl:
  9803                           	callstack 0
  9804                           
  9805                           ; 4 bytes @ 0x54
  9806   000654                     	ds	2
  9807   000656                     f_read@res:
  9808                           	callstack 0
  9809   000656                     dir_sdi@fs:
  9810                           	callstack 0
  9811                           
  9812                           ; 2 bytes @ 0x56
  9813   000656                     	ds	1
  9814   000657                     remove_chain@nxt:
  9815                           	callstack 0
  9816   000657                     f_read@clst:
  9817                           	callstack 0
  9818                           
  9819                           ; 4 bytes @ 0x57
  9820   000657                     	ds	1
  9821   000658                     create_chain@ncl:
  9822                           	callstack 0
  9823                           
  9824                           ; 4 bytes @ 0x58
  9825   000658                     	ds	3
  9826   00065B                     remove_chain@res:
  9827                           	callstack 0
  9828   00065B                     f_read@rbuff:
  9829                           	callstack 0
  9830                           
  9831                           ; 2 bytes @ 0x5B
  9832   00065B                     	ds	1
  9833   00065C                     remove_chain@fs:
  9834                           	callstack 0
  9835   00065C                     create_chain@fs:
  9836                           	callstack 0
  9837                           
  9838                           ; 2 bytes @ 0x5C
  9839   00065C                     	ds	1
  9840   00065D                     f_read@csect:
  9841                           	callstack 0
  9842                           
  9843                           ; 2 bytes @ 0x5D
  9844   00065D                     	ds	1
  9845   00065E                     create_chain@cs:
  9846                           	callstack 0
  9847                           
  9848                           ; 4 bytes @ 0x5E
  9849   00065E                     	ds	1
  9850   00065F                     f_read@cc:
  9851                           	callstack 0
  9852                           
  9853                           ; 2 bytes @ 0x5F
  9854   00065F                     	ds	2
  9855   000661                     f_read@rcnt:
  9856                           	callstack 0
  9857                           
  9858                           ; 2 bytes @ 0x61
  9859   000661                     	ds	1
  9860   000662                     dir_next@dp:
  9861                           	callstack 0
  9862   000662                     f_write@fp:
  9863                           	callstack 0
  9864   000662                     f_lseek@fp:
  9865                           	callstack 0
  9866                           
  9867                           ; 2 bytes @ 0x62
  9868   000662                     	ds	1
  9869   000663                     f_read@sect:
  9870                           	callstack 0
  9871                           
  9872                           ; 4 bytes @ 0x63
  9873   000663                     	ds	1
  9874   000664                     dir_next@stretch:
  9875                           	callstack 0
  9876   000664                     f_write@buff:
  9877                           	callstack 0
  9878   000664                     f_lseek@ofs:
  9879                           	callstack 0
  9880                           
  9881                           ; 4 bytes @ 0x64
  9882   000664                     	ds	2
  9883   000666                     f_write@btw:
  9884                           	callstack 0
  9885   000666                     ??_dir_next:
  9886                           
  9887                           ; 1 bytes @ 0x66
  9888   000666                     	ds	1
  9889   000667                     f_read@fs:
  9890                           	callstack 0
  9891                           
  9892                           ; 2 bytes @ 0x67
  9893   000667                     	ds	1
  9894   000668                     f_write@bw:
  9895                           	callstack 0
  9896   000668                     ??_f_lseek:
  9897                           
  9898                           ; 1 bytes @ 0x68
  9899   000668                     	ds	1
  9900   000669                     ?_f_gets:
  9901                           	callstack 0
  9902   000669                     f_gets@buff:
  9903                           	callstack 0
  9904                           
  9905                           ; 2 bytes @ 0x69
  9906   000669                     	ds	1
  9907   00066A                     ??_f_write:
  9908                           
  9909                           ; 1 bytes @ 0x6A
  9910   00066A                     	ds	1
  9911   00066B                     f_gets@len:
  9912                           	callstack 0
  9913                           
  9914                           ; 2 bytes @ 0x6B
  9915   00066B                     	ds	2
  9916   00066D                     f_gets@fp:
  9917                           	callstack 0
  9918                           
  9919                           ; 2 bytes @ 0x6D
  9920   00066D                     	ds	2
  9921   00066F                     f_gets@nc:
  9922                           	callstack 0
  9923                           
  9924                           ; 2 bytes @ 0x6F
  9925   00066F                     	ds	2
  9926   000671                     f_gets@p:
  9927                           	callstack 0
  9928                           
  9929                           ; 2 bytes @ 0x71
  9930   000671                     	ds	1
  9931   000672                     dir_next@ofs:
  9932                           	callstack 0
  9933                           
  9934                           ; 4 bytes @ 0x72
  9935   000672                     	ds	1
  9936   000673                     f_gets@dc:
  9937                           	callstack 0
  9938                           
  9939                           ; 4 bytes @ 0x73
  9940   000673                     	ds	3
  9941   000676                     dir_next@fs:
  9942                           	callstack 0
  9943   000676                     _f_write$3223:
  9944                           	callstack 0
  9945                           
  9946                           ; 4 bytes @ 0x76
  9947   000676                     	ds	1
  9948   000677                     f_gets@rc:
  9949                           	callstack 0
  9950                           
  9951                           ; 2 bytes @ 0x77
  9952   000677                     	ds	1
  9953   000678                     dir_next@clst:
  9954                           	callstack 0
  9955   000678                     f_lseek@ifptr:
  9956                           	callstack 0
  9957                           
  9958                           ; 4 bytes @ 0x78
  9959   000678                     	ds	1
  9960   000679                     f_gets@s:
  9961                           	callstack 0
  9962                           
  9963                           ; 4 bytes @ 0x79
  9964   000679                     	ds	1
  9965   00067A                     f_write@res:
  9966                           	callstack 0
  9967                           
  9968                           ; 1 bytes @ 0x7A
  9969   00067A                     	ds	1
  9970   00067B                     f_write@wbuff:
  9971                           	callstack 0
  9972                           
  9973                           ; 2 bytes @ 0x7B
  9974   00067B                     	ds	1
  9975   00067C                     dir_alloc@dp:
  9976                           	callstack 0
  9977   00067C                     dir_read@dp:
  9978                           	callstack 0
  9979   00067C                     dir_find@dp:
  9980                           	callstack 0
  9981   00067C                     f_lseek@nsect:
  9982                           	callstack 0
  9983                           
  9984                           ; 4 bytes @ 0x7C
  9985   00067C                     	ds	1
  9986   00067D                     f_write@csect:
  9987                           	callstack 0
  9988                           
  9989                           ; 2 bytes @ 0x7D
  9990   00067D                     	ds	1
  9991   00067E                     dir_alloc@n_ent:
  9992                           	callstack 0
  9993   00067E                     dir_read@vol:
  9994                           	callstack 0
  9995   00067E                     ??_dir_find:
  9996                           
  9997                           ; 1 bytes @ 0x7E
  9998   00067E                     	ds	1
  9999   00067F                     f_write@cc:
 10000                           	callstack 0
 10001                           
 10002                           ; 2 bytes @ 0x7F
 10003   00067F                     	ds	1
 10004   000680                     f_lseek@res:
 10005                           	callstack 0
 10006   000680                     disk_initialize@pdrv:
 10007                           	callstack 0
 10008   000680                     dir_find@fs:
 10009                           	callstack 0
 10010   000680                     ??_dir_alloc:
 10011   000680                     ??_dir_read:
 10012                           
 10013                           ; 1 bytes @ 0x80
 10014   000680                     	ds	1
 10015   000681                     mount_volume@path:
 10016                           	callstack 0
 10017   000681                     f_write@clst:
 10018                           	callstack 0
 10019   000681                     f_lseek@bcs:
 10020                           	callstack 0
 10021                           
 10022                           ; 4 bytes @ 0x81
 10023   000681                     	ds	1
 10024   000682                     dir_find@c:
 10025                           	callstack 0
 10026                           
 10027                           ; 1 bytes @ 0x82
 10028   000682                     	ds	1
 10029   000683                     dir_find@res:
 10030                           	callstack 0
 10031   000683                     dir_alloc@fs:
 10032                           	callstack 0
 10033   000683                     mount_volume@rfs:
 10034                           	callstack 0
 10035                           
 10036                           ; 2 bytes @ 0x83
 10037   000683                     	ds	1
 10038   000684                     dir_read@fs:
 10039                           	callstack 0
 10040   000684                     follow_path@dp:
 10041                           	callstack 0
 10042                           
 10043                           ; 2 bytes @ 0x84
 10044   000684                     	ds	1
 10045   000685                     mount_volume@mode:
 10046                           	callstack 0
 10047   000685                     dir_alloc@n:
 10048                           	callstack 0
 10049   000685                     f_write@wcnt:
 10050                           	callstack 0
 10051   000685                     f_lseek@fs:
 10052                           	callstack 0
 10053                           
 10054                           ; 2 bytes @ 0x85
 10055   000685                     	ds	1
 10056   000686                     dir_read@attr:
 10057                           	callstack 0
 10058   000686                     follow_path@path:
 10059                           	callstack 0
 10060   000686                     ??_mount_volume:
 10061                           
 10062                           ; 1 bytes @ 0x86
 10063   000686                     	ds	1
 10064   000687                     dir_alloc@res:
 10065                           	callstack 0
 10066   000687                     dir_read@b:
 10067                           	callstack 0
 10068   000687                     f_write@sect:
 10069                           	callstack 0
 10070   000687                     f_lseek@clst:
 10071                           	callstack 0
 10072                           
 10073                           ; 4 bytes @ 0x87
 10074   000687                     	ds	1
 10075   000688                     dir_read@res:
 10076                           	callstack 0
 10077   000688                     dir_register@dp:
 10078                           	callstack 0
 10079   000688                     ??_follow_path:
 10080                           
 10081                           ; 1 bytes @ 0x88
 10082   000688                     	ds	1
 10083   000689                     f_readdir@dp:
 10084                           	callstack 0
 10085                           
 10086                           ; 2 bytes @ 0x89
 10087   000689                     	ds	1
 10088   00068A                     dir_register@fs:
 10089                           	callstack 0
 10090                           
 10091                           ; 2 bytes @ 0x8A
 10092   00068A                     	ds	1
 10093   00068B                     ?_seek_disk:
 10094                           	callstack 0
 10095   00068B                     f_write@fs:
 10096                           	callstack 0
 10097   00068B                     f_readdir@fno:
 10098                           	callstack 0
 10099                           
 10100                           ; 2 bytes @ 0x8B
 10101   00068B                     	ds	1
 10102   00068C                     dir_register@res:
 10103                           	callstack 0
 10104                           
 10105                           ; 1 bytes @ 0x8C
 10106   00068C                     	ds	1
 10107   00068D                     f_readdir@fs:
 10108                           	callstack 0
 10109   00068D                     ??_seek_disk:
 10110                           
 10111                           ; 1 bytes @ 0x8D
 10112   00068D                     	ds	1
 10113   00068E                     follow_path@fs:
 10114                           	callstack 0
 10115   00068E                     mount_volume@szbfat:
 10116                           	callstack 0
 10117                           
 10118                           ; 4 bytes @ 0x8E
 10119   00068E                     	ds	1
 10120   00068F                     f_readdir@res:
 10121                           	callstack 0
 10122                           
 10123                           ; 1 bytes @ 0x8F
 10124   00068F                     	ds	1
 10125   000690                     follow_path@ns:
 10126                           	callstack 0
 10127                           
 10128                           ; 1 bytes @ 0x90
 10129   000690                     	ds	1
 10130   000691                     follow_path@res:
 10131                           	callstack 0
 10132                           
 10133                           ; 1 bytes @ 0x91
 10134   000691                     	ds	1
 10135   000692                     mount_volume@vol:
 10136                           	callstack 0
 10137                           
 10138                           ; 2 bytes @ 0x92
 10139   000692                     	ds	1
 10140   000693                     seek_disk@sector:
 10141                           	callstack 0
 10142                           
 10143                           ; 4 bytes @ 0x93
 10144   000693                     	ds	1
 10145   000694                     mount_volume@sysect:
 10146                           	callstack 0
 10147                           
 10148                           ; 4 bytes @ 0x94
 10149   000694                     	ds	3
 10150   000697                     seek_disk@filep:
 10151                           	callstack 0
 10152                           
 10153                           ; 2 bytes @ 0x97
 10154   000697                     	ds	1
 10155   000698                     mount_volume@nrsv:
 10156                           	callstack 0
 10157                           
 10158                           ; 2 bytes @ 0x98
 10159   000698                     	ds	1
 10160   000699                     seek_disk@fres:
 10161                           	callstack 0
 10162                           
 10163                           ; 1 bytes @ 0x99
 10164   000699                     	ds	1
 10165   00069A                     ?_write_sector:
 10166                           	callstack 0
 10167   00069A                     ?_read_sector:
 10168                           	callstack 0
 10169   00069A                     mount_volume@tsect:
 10170                           	callstack 0
 10171                           
 10172                           ; 4 bytes @ 0x9A
 10173   00069A                     	ds	2
 10174   00069C                     ??_write_sector:
 10175   00069C                     ??_read_sector:
 10176                           
 10177                           ; 1 bytes @ 0x9C
 10178   00069C                     	ds	2
 10179   00069E                     mount_volume@bsect:
 10180                           	callstack 0
 10181                           
 10182                           ; 4 bytes @ 0x9E
 10183   00069E                     	ds	1
 10184   00069F                     write_sector@filep:
 10185                           	callstack 0
 10186   00069F                     read_sector@filep:
 10187                           	callstack 0
 10188                           
 10189                           ; 2 bytes @ 0x9F
 10190   00069F                     	ds	2
 10191   0006A1                     write_sector@fres:
 10192                           	callstack 0
 10193   0006A1                     read_sector@fres:
 10194                           	callstack 0
 10195                           
 10196                           ; 1 bytes @ 0xA1
 10197   0006A1                     	ds	1
 10198   0006A2                     mount_volume@stat:
 10199                           	callstack 0
 10200   0006A2                     write_sector@n:
 10201                           	callstack 0
 10202   0006A2                     read_sector@n:
 10203                           	callstack 0
 10204                           
 10205                           ; 2 bytes @ 0xA2
 10206   0006A2                     	ds	1
 10207   0006A3                     mount_volume@nclst:
 10208                           	callstack 0
 10209                           
 10210                           ; 4 bytes @ 0xA3
 10211   0006A3                     	ds	4
 10212   0006A7                     mount_volume@fasize:
 10213                           	callstack 0
 10214                           
 10215                           ; 4 bytes @ 0xA7
 10216   0006A7                     	ds	4
 10217   0006AB                     mount_volume@fmt:
 10218                           	callstack 0
 10219                           
 10220                           ; 2 bytes @ 0xAB
 10221   0006AB                     	ds	2
 10222   0006AD                     mount_volume@fs:
 10223                           	callstack 0
 10224                           
 10225                           ; 2 bytes @ 0xAD
 10226   0006AD                     	ds	2
 10227   0006AF                     f_mount@fs:
 10228                           	callstack 0
 10229   0006AF                     f_open@fp:
 10230                           	callstack 0
 10231   0006AF                     f_chdir@path:
 10232                           	callstack 0
 10233   0006AF                     f_getcwd@buff:
 10234                           	callstack 0
 10235   0006AF                     f_opendir@dp:
 10236                           	callstack 0
 10237                           
 10238                           ; 2 bytes @ 0xAF
 10239   0006AF                     	ds	2
 10240   0006B1                     f_chdir@res:
 10241                           	callstack 0
 10242   0006B1                     f_mount@path:
 10243                           	callstack 0
 10244   0006B1                     f_open@path:
 10245                           	callstack 0
 10246   0006B1                     f_getcwd@len:
 10247                           	callstack 0
 10248   0006B1                     f_opendir@path:
 10249                           	callstack 0
 10250                           
 10251                           ; 2 bytes @ 0xB1
 10252   0006B1                     	ds	1
 10253   0006B2                     f_chdir@fs:
 10254                           	callstack 0
 10255                           
 10256                           ; 2 bytes @ 0xB2
 10257   0006B2                     	ds	1
 10258   0006B3                     f_mount@opt:
 10259                           	callstack 0
 10260   0006B3                     f_open@mode:
 10261                           	callstack 0
 10262   0006B3                     f_opendir@fs:
 10263                           	callstack 0
 10264   0006B3                     ??_f_getcwd:
 10265                           
 10266                           ; 1 bytes @ 0xB3
 10267   0006B3                     	ds	1
 10268   0006B4                     f_mount@res:
 10269                           	callstack 0
 10270   0006B4                     f_chdir@dj:
 10271                           	callstack 0
 10272   0006B4                     ??_f_open:
 10273                           
 10274                           ; 1 bytes @ 0xB4
 10275   0006B4                     	ds	1
 10276   0006B5                     f_opendir@res:
 10277                           	callstack 0
 10278   0006B5                     f_mount@rp:
 10279                           	callstack 0
 10280                           
 10281                           ; 2 bytes @ 0xB5
 10282   0006B5                     	ds	2
 10283   0006B7                     f_mount@cfs:
 10284                           	callstack 0
 10285                           
 10286                           ; 2 bytes @ 0xB7
 10287   0006B7                     	ds	2
 10288   0006B9                     f_mount@vol:
 10289                           	callstack 0
 10290                           
 10291                           ; 2 bytes @ 0xB9
 10292   0006B9                     	ds	2
 10293   0006BB                     ?_disk_init:
 10294                           	callstack 0
 10295                           
 10296                           ; 2 bytes @ 0xBB
 10297   0006BB                     	ds	1
 10298   0006BC                     f_open@bcs:
 10299                           	callstack 0
 10300                           
 10301                           ; 4 bytes @ 0xBC
 10302   0006BC                     	ds	4
 10303   0006C0                     f_open@tm:
 10304                           	callstack 0
 10305                           
 10306                           ; 4 bytes @ 0xC0
 10307   0006C0                     	ds	4
 10308   0006C4                     f_open@cl:
 10309                           	callstack 0
 10310                           
 10311                           ; 4 bytes @ 0xC4
 10312   0006C4                     	ds	4
 10313   0006C8                     f_open@sc:
 10314                           	callstack 0
 10315                           
 10316                           ; 4 bytes @ 0xC8
 10317   0006C8                     	ds	4
 10318   0006CC                     f_open@ofs:
 10319                           	callstack 0
 10320                           
 10321                           ; 4 bytes @ 0xCC
 10322   0006CC                     	ds	4
 10323   0006D0                     f_open@clst:
 10324                           	callstack 0
 10325                           
 10326                           ; 4 bytes @ 0xD0
 10327   0006D0                     	ds	4
 10328   0006D4                     f_open@fs:
 10329                           	callstack 0
 10330                           
 10331                           ; 2 bytes @ 0xD4
 10332   0006D4                     	ds	2
 10333   0006D6                     f_open@res:
 10334                           	callstack 0
 10335                           
 10336                           ; 1 bytes @ 0xD6
 10337   0006D6                     	ds	1
 10338   0006D7                     f_open@dj:
 10339                           	callstack 0
 10340                           
 10341                           ; 40 bytes @ 0xD7
 10342   0006D7                     	ds	40
 10343   0006FF                     drive_cpu@rs:
 10344                           	callstack 0
 10345                           
 10346                           ; 1 bytes @ 0xFF
 10347   0006FF                     	ds	1
 10348                           
 10349                           	psect	cstackBANK5
 10350   000560                     __pcstackBANK5:
 10351                           	callstack 0
 10352   000560                     efgtoa@fp:
 10353                           	callstack 0
 10354                           
 10355                           ; 2 bytes @ 0x0
 10356   000560                     	ds	2
 10357   000562                     efgtoa@f:
 10358                           	callstack 0
 10359                           
 10360                           ; 4 bytes @ 0x2
 10361   000562                     	ds	4
 10362   000566                     efgtoa@c:
 10363                           	callstack 0
 10364                           
 10365                           ; 1 bytes @ 0x6
 10366   000566                     	ds	1
 10367   000567                     efgtoa@ne:
 10368                           	callstack 0
 10369                           
 10370                           ; 2 bytes @ 0x7
 10371   000567                     	ds	2
 10372   000569                     efgtoa@p:
 10373                           	callstack 0
 10374                           
 10375                           ; 2 bytes @ 0x9
 10376   000569                     	ds	2
 10377   00056B                     efgtoa@t:
 10378                           	callstack 0
 10379                           
 10380                           ; 2 bytes @ 0xB
 10381   00056B                     	ds	2
 10382   00056D                     _efgtoa$4827:
 10383                           	callstack 0
 10384                           
 10385                           ; 2 bytes @ 0xD
 10386   00056D                     	ds	2
 10387   00056F                     efgtoa@pp:
 10388                           	callstack 0
 10389                           
 10390                           ; 1 bytes @ 0xF
 10391   00056F                     	ds	1
 10392   000570                     efgtoa@mode:
 10393                           	callstack 0
 10394                           
 10395                           ; 1 bytes @ 0x10
 10396   000570                     	ds	1
 10397   000571                     efgtoa@nmode:
 10398                           	callstack 0
 10399                           
 10400                           ; 1 bytes @ 0x11
 10401   000571                     	ds	1
 10402   000572                     efgtoa@d:
 10403                           	callstack 0
 10404                           
 10405                           ; 2 bytes @ 0x12
 10406   000572                     	ds	2
 10407   000574                     efgtoa@m:
 10408                           	callstack 0
 10409                           
 10410                           ; 2 bytes @ 0x14
 10411   000574                     	ds	2
 10412   000576                     efgtoa@e:
 10413                           	callstack 0
 10414                           
 10415                           ; 2 bytes @ 0x16
 10416   000576                     	ds	2
 10417   000578                     efgtoa@ou:
 10418                           	callstack 0
 10419                           
 10420                           ; 4 bytes @ 0x18
 10421   000578                     	ds	4
 10422   00057C                     efgtoa@w:
 10423                           	callstack 0
 10424                           
 10425                           ; 2 bytes @ 0x1C
 10426   00057C                     	ds	2
 10427   00057E                     efgtoa@h:
 10428                           	callstack 0
 10429                           
 10430                           ; 4 bytes @ 0x1E
 10431   00057E                     	ds	4
 10432   000582                     efgtoa@l:
 10433                           	callstack 0
 10434                           
 10435                           ; 4 bytes @ 0x22
 10436   000582                     	ds	4
 10437   000586                     efgtoa@i:
 10438                           	callstack 0
 10439                           
 10440                           ; 2 bytes @ 0x26
 10441   000586                     	ds	2
 10442   000588                     efgtoa@sign:
 10443                           	callstack 0
 10444                           
 10445                           ; 1 bytes @ 0x28
 10446   000588                     	ds	1
 10447   000589                     efgtoa@g:
 10448                           	callstack 0
 10449                           
 10450                           ; 4 bytes @ 0x29
 10451   000589                     	ds	4
 10452   00058D                     efgtoa@n:
 10453                           	callstack 0
 10454                           
 10455                           ; 2 bytes @ 0x2D
 10456   00058D                     	ds	2
 10457   00058F                     efgtoa@u:
 10458                           	callstack 0
 10459                           
 10460                           ; 4 bytes @ 0x2F
 10461   00058F                     	ds	4
 10462   000593                     vfpfcnvrt@fp:
 10463                           	callstack 0
 10464                           
 10465                           ; 2 bytes @ 0x33
 10466   000593                     	ds	2
 10467   000595                     vfpfcnvrt@fmt:
 10468                           	callstack 0
 10469                           
 10470                           ; 2 bytes @ 0x35
 10471   000595                     	ds	2
 10472   000597                     vfpfcnvrt@ap:
 10473                           	callstack 0
 10474                           
 10475                           ; 2 bytes @ 0x37
 10476   000597                     	ds	2
 10477   000599                     ??_vfpfcnvrt:
 10478                           
 10479                           ; 1 bytes @ 0x39
 10480   000599                     	ds	4
 10481   00059D                     vfpfcnvrt@done:
 10482                           	callstack 0
 10483                           
 10484                           ; 1 bytes @ 0x3D
 10485   00059D                     	ds	1
 10486   00059E                     vfpfcnvrt@convarg:
 10487                           	callstack 0
 10488                           
 10489                           ; 4 bytes @ 0x3E
 10490   00059E                     	ds	4
 10491   0005A2                     vfpfcnvrt@c:
 10492                           	callstack 0
 10493                           
 10494                           ; 1 bytes @ 0x42
 10495   0005A2                     	ds	1
 10496   0005A3                     vfpfcnvrt@cp:
 10497                           	callstack 0
 10498                           
 10499                           ; 2 bytes @ 0x43
 10500   0005A3                     	ds	2
 10501   0005A5                     ?_vfprintf:
 10502                           	callstack 0
 10503   0005A5                     vfprintf@fp:
 10504                           	callstack 0
 10505                           
 10506                           ; 2 bytes @ 0x45
 10507   0005A5                     	ds	2
 10508   0005A7                     vfprintf@fmt:
 10509                           	callstack 0
 10510                           
 10511                           ; 2 bytes @ 0x47
 10512   0005A7                     	ds	2
 10513   0005A9                     vfprintf@ap:
 10514                           	callstack 0
 10515                           
 10516                           ; 2 bytes @ 0x49
 10517   0005A9                     	ds	2
 10518   0005AB                     vfprintf@cfmt:
 10519                           	callstack 0
 10520                           
 10521                           ; 2 bytes @ 0x4B
 10522   0005AB                     	ds	2
 10523   0005AD                     ?_printf:
 10524                           	callstack 0
 10525   0005AD                     ?_sprintf:
 10526                           	callstack 0
 10527   0005AD                     sprintf@s:
 10528                           	callstack 0
 10529   0005AD                     printf@fmt:
 10530                           	callstack 0
 10531                           
 10532                           ; 2 bytes @ 0x4D
 10533   0005AD                     	ds	2
 10534   0005AF                     sprintf@fmt:
 10535                           	callstack 0
 10536                           
 10537                           ; 2 bytes @ 0x4F
 10538   0005AF                     	ds	4
 10539   0005B3                     sprintf@ap:
 10540                           	callstack 0
 10541                           
 10542                           ; 2 bytes @ 0x53
 10543   0005B3                     	ds	2
 10544   0005B5                     sprintf@f:
 10545                           	callstack 0
 10546                           
 10547                           ; 11 bytes @ 0x55
 10548   0005B5                     	ds	6
 10549   0005BB                     printf@ap:
 10550                           	callstack 0
 10551                           
 10552                           ; 2 bytes @ 0x5B
 10553   0005BB                     	ds	2
 10554   0005BD                     ?_get_line:
 10555                           	callstack 0
 10556   0005BD                     disk_status@pdrv:
 10557                           	callstack 0
 10558   0005BD                     disk_ioctl@cmd:
 10559                           	callstack 0
 10560   0005BD                     SPI_SD_configure@ctx_:
 10561                           	callstack 0
 10562   0005BD                     get_line@s:
 10563                           	callstack 0
 10564   0005BD                     util_hexdump@header:
 10565                           	callstack 0
 10566   0005BD                     util_addrdump@header:
 10567                           	callstack 0
 10568   0005BD                     ??_print_reg:
 10569   0005BD                     ??_wait_for_programmer:
 10570   0005BD                     ??_reset_cpu:
 10571                           
 10572                           ; 1 bytes @ 0x5D
 10573   0005BD                     	ds	1
 10574   0005BE                     validate@obj:
 10575                           	callstack 0
 10576   0005BE                     disk_ioctl@buff:
 10577                           	callstack 0
 10578                           
 10579                           ; 2 bytes @ 0x5E
 10580   0005BE                     	ds	1
 10581   0005BF                     SPI_SD_configure@clock_speed:
 10582                           	callstack 0
 10583   0005BF                     get_line@length:
 10584                           	callstack 0
 10585   0005BF                     util_hexdump@addr:
 10586                           	callstack 0
 10587   0005BF                     util_addrdump@addr_offs:
 10588                           	callstack 0
 10589                           
 10590                           ; 4 bytes @ 0x5F
 10591   0005BF                     	ds	1
 10592   0005C0                     disk_ioctl@pdrv:
 10593                           	callstack 0
 10594   0005C0                     validate@rfs:
 10595                           	callstack 0
 10596                           
 10597                           ; 2 bytes @ 0x60
 10598   0005C0                     	ds	1
 10599   0005C1                     SPI_SD_configure@bit_order:
 10600                           	callstack 0
 10601   0005C1                     disk_ioctl@res:
 10602                           	callstack 0
 10603   0005C1                     get_line@c:
 10604                           	callstack 0
 10605   0005C1                     util_hexdump@size:
 10606                           	callstack 0
 10607                           
 10608                           ; 2 bytes @ 0x61
 10609   0005C1                     	ds	1
 10610   0005C2                     SPI_SD_configure@data_mode:
 10611                           	callstack 0
 10612   0005C2                     print_reg@reg_02:
 10613                           	callstack 0
 10614   0005C2                     ??_validate:
 10615                           
 10616                           ; 1 bytes @ 0x62
 10617   0005C2                     	ds	1
 10618   0005C3                     get_line@n:
 10619                           	callstack 0
 10620   0005C3                     util_addrdump@addr:
 10621                           	callstack 0
 10622   0005C3                     ??_util_hexdump:
 10623   0005C3                     ??_SPI_SD_configure:
 10624                           
 10625                           ; 1 bytes @ 0x63
 10626   0005C3                     	ds	1
 10627   0005C4                     print_reg@reg_816:
 10628                           	callstack 0
 10629                           
 10630                           ; 2 bytes @ 0x64
 10631   0005C4                     	ds	1
 10632   0005C5                     ?_SDCard_init:
 10633                           	callstack 0
 10634   0005C5                     SDCard_init@initial_clock_speed:
 10635                           	callstack 0
 10636   0005C5                     util_addrdump@size:
 10637                           	callstack 0
 10638   0005C5                     util_hexdump@chars:
 10639                           	callstack 0
 10640                           
 10641                           ; 17 bytes @ 0x65
 10642   0005C5                     	ds	1
 10643   0005C6                     _validate$2906:
 10644                           	callstack 0
 10645                           
 10646                           ; 2 bytes @ 0x66
 10647   0005C6                     	ds	1
 10648   0005C7                     SDCard_init@clock_speed:
 10649                           	callstack 0
 10650   0005C7                     ??_util_addrdump:
 10651                           
 10652                           ; 1 bytes @ 0x67
 10653   0005C7                     	ds	1
 10654   0005C8                     validate@res:
 10655                           	callstack 0
 10656                           
 10657                           ; 1 bytes @ 0x68
 10658   0005C8                     	ds	1
 10659   0005C9                     SDCard_init@timeout:
 10660                           	callstack 0
 10661   0005C9                     f_closedir@dp:
 10662                           	callstack 0
 10663   0005C9                     util_addrdump@chars:
 10664                           	callstack 0
 10665                           
 10666                           ; 17 bytes @ 0x69
 10667   0005C9                     	ds	2
 10668   0005CB                     f_closedir@fs:
 10669                           	callstack 0
 10670   0005CB                     ??_SDCard_init:
 10671                           
 10672                           ; 1 bytes @ 0x6B
 10673   0005CB                     	ds	1
 10674   0005CC                     SDCard_init@i:
 10675                           	callstack 0
 10676                           
 10677                           ; 2 bytes @ 0x6C
 10678   0005CC                     	ds	1
 10679   0005CD                     f_closedir@res:
 10680                           	callstack 0
 10681                           
 10682                           ; 1 bytes @ 0x6D
 10683   0005CD                     	ds	1
 10684   0005CE                     SDCard_init@spi:
 10685                           	callstack 0
 10686                           
 10687                           ; 2 bytes @ 0x6E
 10688   0005CE                     	ds	2
 10689   0005D0                     SDCard_init@buf:
 10690                           	callstack 0
 10691                           
 10692                           ; 5 bytes @ 0x70
 10693   0005D0                     	ds	5
 10694   0005D5                     ??_setup_sd:
 10695                           
 10696                           ; 1 bytes @ 0x75
 10697   0005D5                     	ds	1
 10698   0005D6                     util_hexdump@buf:
 10699                           	callstack 0
 10700                           
 10701                           ; 2 bytes @ 0x76
 10702   0005D6                     	ds	2
 10703   0005D8                     util_hexdump@i:
 10704                           	callstack 0
 10705                           
 10706                           ; 2 bytes @ 0x78
 10707   0005D8                     	ds	2
 10708   0005DA                     util_addrdump@buf:
 10709                           	callstack 0
 10710   0005DA                     util_hexdump_sum@header:
 10711                           	callstack 0
 10712                           
 10713                           ; 2 bytes @ 0x7A
 10714   0005DA                     	ds	2
 10715   0005DC                     util_addrdump@i:
 10716                           	callstack 0
 10717   0005DC                     util_hexdump_sum@addr:
 10718                           	callstack 0
 10719                           
 10720                           ; 2 bytes @ 0x7C
 10721   0005DC                     	ds	2
 10722   0005DE                     ?_SDCard_read512:
 10723                           	callstack 0
 10724   0005DE                     ?_SDCard_write512:
 10725                           	callstack 0
 10726   0005DE                     ?_mem_init:
 10727                           	callstack 0
 10728   0005DE                     mem_dump@p:
 10729                           	callstack 0
 10730   0005DE                     util_hexdump_sum@size:
 10731                           	callstack 0
 10732   0005DE                     SDCard_read512@addr:
 10733                           	callstack 0
 10734   0005DE                     SDCard_write512@addr:
 10735                           	callstack 0
 10736                           
 10737                           ; 4 bytes @ 0x7E
 10738   0005DE                     	ds	2
 10739   0005E0                     util_hexdump_sum@p:
 10740                           	callstack 0
 10741   0005E0                     mem_dump@addr:
 10742                           	callstack 0
 10743                           
 10744                           ; 4 bytes @ 0x80
 10745   0005E0                     	ds	2
 10746   0005E2                     SDCard_read512@offs:
 10747                           	callstack 0
 10748   0005E2                     SDCard_write512@offs:
 10749                           	callstack 0
 10750   0005E2                     util_hexdump_sum@i:
 10751                           	callstack 0
 10752   0005E2                     ??_mem_init:
 10753                           
 10754                           ; 1 bytes @ 0x82
 10755   0005E2                     	ds	2
 10756   0005E4                     util_hexdump_sum@sum:
 10757                           	callstack 0
 10758   0005E4                     SDCard_read512@buf:
 10759                           	callstack 0
 10760   0005E4                     SDCard_write512@buf:
 10761                           	callstack 0
 10762                           
 10763                           ; 2 bytes @ 0x84
 10764   0005E4                     	ds	2
 10765   0005E6                     SDCard_read512@count:
 10766                           	callstack 0
 10767   0005E6                     SDCard_write512@count:
 10768                           	callstack 0
 10769   0005E6                     mem_init@i:
 10770                           	callstack 0
 10771                           
 10772                           ; 2 bytes @ 0x86
 10773   0005E6                     	ds	2
 10774   0005E8                     mem_init@addr:
 10775                           	callstack 0
 10776   0005E8                     ??_SDCard_read512:
 10777   0005E8                     ??_SDCard_write512:
 10778                           
 10779                           ; 1 bytes @ 0x88
 10780   0005E8                     	ds	4
 10781   0005EC                     SDCard_read512@i:
 10782                           	callstack 0
 10783   0005EC                     SDCard_write512@i:
 10784                           	callstack 0
 10785                           
 10786                           ; 2 bytes @ 0x8C
 10787   0005EC                     	ds	2
 10788   0005EE                     SDCard_read512@i_684:
 10789                           	callstack 0
 10790   0005EE                     SDCard_write512@i_701:
 10791                           	callstack 0
 10792                           
 10793                           ; 2 bytes @ 0x8E
 10794   0005EE                     	ds	2
 10795   0005F0                     SDCard_read512@retry:
 10796                           	callstack 0
 10797   0005F0                     SDCard_write512@retry:
 10798                           	callstack 0
 10799                           
 10800                           ; 2 bytes @ 0x90
 10801   0005F0                     	ds	2
 10802   0005F2                     SDCard_read512@resp_crc:
 10803                           	callstack 0
 10804   0005F2                     SDCard_write512@result:
 10805                           	callstack 0
 10806                           
 10807                           ; 2 bytes @ 0x92
 10808   0005F2                     	ds	2
 10809   0005F4                     SDCard_read512@result:
 10810                           	callstack 0
 10811   0005F4                     SDCard_write512@crc:
 10812                           	callstack 0
 10813                           
 10814                           ; 2 bytes @ 0x94
 10815   0005F4                     	ds	2
 10816   0005F6                     SDCard_read512@spi:
 10817                           	callstack 0
 10818   0005F6                     SDCard_write512@spi:
 10819                           	callstack 0
 10820                           
 10821                           ; 2 bytes @ 0x96
 10822   0005F6                     	ds	2
 10823   0005F8                     SDCard_write512@response:
 10824                           	callstack 0
 10825   0005F8                     SDCard_read512@crc:
 10826                           	callstack 0
 10827                           
 10828                           ; 2 bytes @ 0x98
 10829   0005F8                     	ds	1
 10830   0005F9                     disk_write@pdrv:
 10831                           	callstack 0
 10832                           
 10833                           ; 1 bytes @ 0x99
 10834   0005F9                     	ds	1
 10835   0005FA                     SDCard_read512@response:
 10836                           	callstack 0
 10837   0005FA                     disk_write@i:
 10838                           	callstack 0
 10839                           
 10840                           ; 2 bytes @ 0x9A
 10841   0005FA                     	ds	1
 10842   0005FB                     disk_read@pdrv:
 10843                           	callstack 0
 10844   0005FB                     ??_disk_initialize:
 10845                           
 10846                           ; 1 bytes @ 0x9B
 10847   0005FB                     	ds	1
 10848   0005FC                     sync_window@res:
 10849                           	callstack 0
 10850   0005FC                     disk_read@i:
 10851                           	callstack 0
 10852                           
 10853                           ; 2 bytes @ 0x9C
 10854   0005FC                     	ds	1
 10855   0005FD                     sync_fs@res:
 10856                           	callstack 0
 10857   0005FD                     
 10858                           ; 1 bytes @ 0x9D
 10859   0005FD                     	ds	1
 10860   0005FE                     move_window@res:
 10861                           	callstack 0
 10862                           
 10863                           ; 1 bytes @ 0x9E
 10864   0005FE                     	ds	1
 10865   0005FF                     u_getch@c:
 10866                           	callstack 0
 10867   0005FF                     in_file@chr:
 10868                           	callstack 0
 10869   0005FF                     ??_f_gets:
 10870                           
 10871                           ; 1 bytes @ 0x9F
 10872   0005FF                     	ds	1
 10873                           
 10874                           	psect	cstackCOMRAM
 10875   000501                     __pcstackCOMRAM:
 10876                           	callstack 0
 10877   000501                     ??_URT3Rx_ISR:
 10878                           
 10879                           ; 1 bytes @ 0x0
 10880   000501                     	ds	2
 10881   000503                     URT3Rx_ISR@rx_data:
 10882                           	callstack 0
 10883                           
 10884                           ; 1 bytes @ 0x2
 10885   000503                     	ds	1
 10886   000504                     ?_memcmp:
 10887                           	callstack 0
 10888   000504                     ?___SDCard_crc16:
 10889                           	callstack 0
 10890   000504                     ?_strlen:
 10891                           	callstack 0
 10892   000504                     ?_strchr:
 10893                           	callstack 0
 10894   000504                     ?___fpclassifyf:
 10895                           	callstack 0
 10896   000504                     ?_strncmp:
 10897                           	callstack 0
 10898   000504                     ?_getch:
 10899                           	callstack 0
 10900   000504                     ?_setup_drive:
 10901                           	callstack 0
 10902   000504                     ?_ld_word:
 10903                           	callstack 0
 10904   000504                     ?_dbc_1st:
 10905                           	callstack 0
 10906   000504                     ?_dbc_2nd:
 10907                           	callstack 0
 10908   000504                     ?_get_ldnumber:
 10909                           	callstack 0
 10910   000504                     ?_read_prec_or_width:
 10911                           	callstack 0
 10912   000504                     ?_get_hex:
 10913                           	callstack 0
 10914   000504                     ?_get_fattime:
 10915                           	callstack 0
 10916   000504                     ?___fladd:
 10917                           	callstack 0
 10918   000504                     ?_labs:
 10919                           	callstack 0
 10920   000504                     ?_ld_dword:
 10921                           	callstack 0
 10922   000504                     ?___lmul:
 10923                           	callstack 0
 10924   000504                     ?___lldiv:
 10925                           	callstack 0
 10926   000504                     ?___aldiv:
 10927                           	callstack 0
 10928   000504                     ?___almod:
 10929                           	callstack 0
 10930   000504                     ?___flneg:
 10931                           	callstack 0
 10932   000504                     ?___fltol:
 10933                           	callstack 0
 10934   000504                     ?___xxtofl:
 10935                           	callstack 0
 10936   000504                     putch@c:
 10937                           	callstack 0
 10938   000504                     acquire_bus@ctx_:
 10939                           	callstack 0
 10940   000504                     release_bus@ctx_:
 10941                           	callstack 0
 10942   000504                     SPI_SD_begin@ctx_:
 10943                           	callstack 0
 10944   000504                     SPI_SD_send@ctx_:
 10945                           	callstack 0
 10946   000504                     SPI_SD_receive@ctx_:
 10947                           	callstack 0
 10948   000504                     SPI_SD_select@ctx_:
 10949                           	callstack 0
 10950   000504                     SDCard_crc@buf:
 10951                           	callstack 0
 10952   000504                     ___SDCard_crc16@crc:
 10953                           	callstack 0
 10954   000504                     del_space@bytes:
 10955                           	callstack 0
 10956   000504                     set_arg@buf:
 10957                           	callstack 0
 10958   000504                     ld_word@ptr:
 10959                           	callstack 0
 10960   000504                     ld_dword@ptr:
 10961                           	callstack 0
 10962   000504                     st_word@ptr:
 10963                           	callstack 0
 10964   000504                     st_dword@ptr:
 10965                           	callstack 0
 10966   000504                     get_ldnumber@path:
 10967                           	callstack 0
 10968   000504                     get_hex@buf:
 10969                           	callstack 0
 10970   000504                     memcmp@vl:
 10971                           	callstack 0
 10972   000504                     memcpy@d1:
 10973                           	callstack 0
 10974   000504                     memset@dest:
 10975                           	callstack 0
 10976   000504                     read_prec_or_width@fmt:
 10977                           	callstack 0
 10978   000504                     strchr@s:
 10979                           	callstack 0
 10980   000504                     strcpy@dest:
 10981                           	callstack 0
 10982   000504                     strlen@s:
 10983                           	callstack 0
 10984   000504                     strncmp@l:
 10985                           	callstack 0
 10986   000504                     write_sram@addr:
 10987                           	callstack 0
 10988   000504                     read_sram@addr:
 10989                           	callstack 0
 10990   000504                     ___lmul@multiplier:
 10991                           	callstack 0
 10992   000504                     ___lldiv@dividend:
 10993                           	callstack 0
 10994   000504                     ___aldiv@dividend:
 10995                           	callstack 0
 10996   000504                     ___almod@dividend:
 10997                           	callstack 0
 10998   000504                     ___fleq@ff1:
 10999                           	callstack 0
 11000   000504                     ___flneg@f1:
 11001                           	callstack 0
 11002   000504                     ___fltol@f1:
 11003                           	callstack 0
 11004   000504                     ___fladd@b:
 11005                           	callstack 0
 11006   000504                     ___xxtofl@val:
 11007                           	callstack 0
 11008   000504                     ___fpclassifyf@x:
 11009                           	callstack 0
 11010   000504                     labs@a:
 11011                           	callstack 0
 11012   000504                     ??_start_cpu:
 11013   000504                     
 11014                           ; 1 bytes @ 0x3
 11015   000504                     	ds	1
 11016   000505                     fputc@c:
 11017                           	callstack 0
 11018                           
 11019                           ; 2 bytes @ 0x4
 11020   000505                     	ds	1
 11021   000506                     dbc_1st@c:
 11022                           	callstack 0
 11023   000506                     dbc_2nd@c:
 11024                           	callstack 0
 11025   000506                     acquire_bus@ctx:
 11026                           	callstack 0
 11027   000506                     release_bus@ctx:
 11028                           	callstack 0
 11029   000506                     SPI_SD_begin@ctx:
 11030                           	callstack 0
 11031   000506                     SPI_SD_send@buf:
 11032                           	callstack 0
 11033   000506                     SPI_SD_receive@buf:
 11034                           	callstack 0
 11035   000506                     SPI_SD_select@select:
 11036                           	callstack 0
 11037   000506                     SDCard_crc@count:
 11038                           	callstack 0
 11039   000506                     ___SDCard_crc16@buf:
 11040                           	callstack 0
 11041   000506                     set_arg@i:
 11042                           	callstack 0
 11043   000506                     st_word@val:
 11044                           	callstack 0
 11045   000506                     memcmp@vr:
 11046                           	callstack 0
 11047   000506                     memcpy@s1:
 11048                           	callstack 0
 11049   000506                     memset@c:
 11050                           	callstack 0
 11051   000506                     read_prec_or_width@ap:
 11052                           	callstack 0
 11053   000506                     strchr@c:
 11054                           	callstack 0
 11055   000506                     strcpy@src:
 11056                           	callstack 0
 11057   000506                     strlen@a:
 11058                           	callstack 0
 11059   000506                     strncmp@r:
 11060                           	callstack 0
 11061   000506                     st_dword@val:
 11062                           	callstack 0
 11063   000506                     ??_getch:
 11064   000506                     ??_del_space:
 11065   000506                     ??_ld_word:
 11066   000506                     ??_get_ldnumber:
 11067                           
 11068                           ; 1 bytes @ 0x5
 11069   000506                     	ds	1
 11070   000507                     del_space@i:
 11071                           	callstack 0
 11072   000507                     fputc@fp:
 11073                           	callstack 0
 11074                           
 11075                           ; 2 bytes @ 0x6
 11076   000507                     	ds	1
 11077   000508                     getch@c:
 11078                           	callstack 0
 11079   000508                     del_space@pos:
 11080                           	callstack 0
 11081   000508                     write_sram@buf:
 11082                           	callstack 0
 11083   000508                     read_sram@buf:
 11084                           	callstack 0
 11085   000508                     SPI_SD_begin_transaction@ctx_:
 11086                           	callstack 0
 11087   000508                     SPI_SD_end_transaction@ctx_:
 11088                           	callstack 0
 11089   000508                     SPI_SD_send@count:
 11090                           	callstack 0
 11091   000508                     SPI_SD_receive@count:
 11092                           	callstack 0
 11093   000508                     SDCard_crc@endp:
 11094                           	callstack 0
 11095   000508                     ___SDCard_crc16@count:
 11096                           	callstack 0
 11097   000508                     st_clust@fs:
 11098                           	callstack 0
 11099   000508                     get_ldnumber@i:
 11100                           	callstack 0
 11101   000508                     memcmp@n:
 11102                           	callstack 0
 11103   000508                     memcpy@n:
 11104                           	callstack 0
 11105   000508                     memset@n:
 11106                           	callstack 0
 11107   000508                     strcpy@d:
 11108                           	callstack 0
 11109   000508                     strncmp@n:
 11110                           	callstack 0
 11111   000508                     ___lmul@multiplicand:
 11112                           	callstack 0
 11113   000508                     ___lldiv@divisor:
 11114                           	callstack 0
 11115   000508                     ___aldiv@divisor:
 11116                           	callstack 0
 11117   000508                     ___almod@divisor:
 11118                           	callstack 0
 11119   000508                     ___fleq@ff2:
 11120                           	callstack 0
 11121   000508                     ___fladd@a:
 11122                           	callstack 0
 11123   000508                     ??_get_hex:
 11124   000508                     ??_strchr:
 11125   000508                     ??___fpclassifyf:
 11126   000508                     ??_labs:
 11127   000508                     ??_ld_dword:
 11128   000508                     ??___fltol:
 11129   000508                     ??___xxtofl:
 11130   000508                     ??_read_prec_or_width:
 11131                           
 11132                           ; 1 bytes @ 0x7
 11133   000508                     	ds	1
 11134   000509                     del_space@c:
 11135                           	callstack 0
 11136   000509                     ld_word@rv:
 11137                           	callstack 0
 11138   000509                     ??_fputc:
 11139                           
 11140                           ; 1 bytes @ 0x8
 11141   000509                     	ds	1
 11142   00050A                     get_ldnumber@tc:
 11143                           	callstack 0
 11144   00050A                     memcpy@tmp:
 11145                           	callstack 0
 11146   00050A                     read_prec_or_width@c:
 11147                           	callstack 0
 11148   00050A                     write_sram@len:
 11149                           	callstack 0
 11150   00050A                     read_sram@len:
 11151                           	callstack 0
 11152   00050A                     SPI_SD_send@i:
 11153                           	callstack 0
 11154   00050A                     SDCard_crc@i:
 11155                           	callstack 0
 11156   00050A                     st_clust@dir:
 11157                           	callstack 0
 11158   00050A                     memset@p:
 11159                           	callstack 0
 11160   00050A                     ??_memcmp:
 11161   00050A                     ??___SDCard_crc16:
 11162   00050A                     ??_strncmp:
 11163   00050A                     ??_SPI_SD_receive:
 11164   00050A                     
 11165                           ; 1 bytes @ 0x9
 11166   00050A                     	ds	1
 11167   00050B                     ?_strstr:
 11168                           	callstack 0
 11169   00050B                     ?_ld_clust:
 11170                           	callstack 0
 11171   00050B                     ld_clust@fs:
 11172                           	callstack 0
 11173   00050B                     get_ldnumber@tt:
 11174                           	callstack 0
 11175   00050B                     memcpy@d:
 11176                           	callstack 0
 11177   00050B                     read_prec_or_width@n:
 11178                           	callstack 0
 11179   00050B                     strstr@h:
 11180                           	callstack 0
 11181                           
 11182                           ; 2 bytes @ 0xA
 11183   00050B                     	ds	1
 11184   00050C                     SPI_SD_receive@repeat:
 11185                           	callstack 0
 11186   00050C                     SDCard_crc@crc:
 11187                           	callstack 0
 11188   00050C                     ___aldiv@counter:
 11189                           	callstack 0
 11190   00050C                     ___almod@counter:
 11191                           	callstack 0
 11192   00050C                     ___fltol@sign1:
 11193                           	callstack 0
 11194   00050C                     ___xxtofl@sign:
 11195                           	callstack 0
 11196   00050C                     read_sram@i:
 11197                           	callstack 0
 11198   00050C                     SPI_SD_send@p:
 11199                           	callstack 0
 11200   00050C                     create_name@dp:
 11201                           	callstack 0
 11202   00050C                     get_hex@c:
 11203                           	callstack 0
 11204   00050C                     ___fpclassifyf@e:
 11205                           	callstack 0
 11206   00050C                     memcmp@l:
 11207                           	callstack 0
 11208   00050C                     st_clust@cl:
 11209                           	callstack 0
 11210   00050C                     ___lmul@product:
 11211                           	callstack 0
 11212   00050C                     ___lldiv@quotient:
 11213                           	callstack 0
 11214   00050C                     ??_write_sram:
 11215   00050C                     ??___fladd:
 11216   00050C                     ??___fleq:
 11217                           
 11218                           ; 1 bytes @ 0xB
 11219   00050C                     	ds	1
 11220   00050D                     ___aldiv@sign:
 11221                           	callstack 0
 11222   00050D                     ___almod@sign:
 11223                           	callstack 0
 11224   00050D                     ___fltol@exp1:
 11225                           	callstack 0
 11226   00050D                     ___xxtofl@exp:
 11227                           	callstack 0
 11228   00050D                     SPI_SD_receive@i:
 11229                           	callstack 0
 11230   00050D                     SDCard_crc@p:
 11231                           	callstack 0
 11232   00050D                     ___SDCard_crc16@endp:
 11233                           	callstack 0
 11234   00050D                     ld_clust@dir:
 11235                           	callstack 0
 11236   00050D                     get_ldnumber@vol:
 11237                           	callstack 0
 11238   00050D                     memcpy@s:
 11239                           	callstack 0
 11240   00050D                     strstr@n:
 11241                           	callstack 0
 11242   00050D                     ld_dword@rv:
 11243                           	callstack 0
 11244                           
 11245                           ; 4 bytes @ 0xC
 11246   00050D                     	ds	1
 11247   00050E                     ?_abs:
 11248                           	callstack 0
 11249   00050E                     write_sram@i:
 11250                           	callstack 0
 11251   00050E                     SPI_SD_dummy_clocks@ctx_:
 11252                           	callstack 0
 11253   00050E                     create_name@path:
 11254                           	callstack 0
 11255   00050E                     memcmp@r:
 11256                           	callstack 0
 11257   00050E                     stoa@fp:
 11258                           	callstack 0
 11259   00050E                     abs@a:
 11260                           	callstack 0
 11261   00050E                     fputs@s:
 11262                           	callstack 0
 11263   00050E                     read_sram@ab:
 11264                           	callstack 0
 11265   00050E                     get_hex@d:
 11266                           	callstack 0
 11267   00050E                     ___aldiv@quotient:
 11268                           	callstack 0
 11269   00050E                     ___xxtofl@arg:
 11270                           	callstack 0
 11271   00050E                     ___fpclassifyf@u:
 11272                           	callstack 0
 11273                           
 11274                           ; 4 bytes @ 0xD
 11275   00050E                     	ds	1
 11276   00050F                     SPI_SD_receive@i_600:
 11277                           	callstack 0
 11278   00050F                     ___SDCard_crc16@p:
 11279                           	callstack 0
 11280   00050F                     get_ldnumber@tp:
 11281                           	callstack 0
 11282   00050F                     strstr@nl:
 11283                           	callstack 0
 11284   00050F                     ??_ld_clust:
 11285                           
 11286                           ; 1 bytes @ 0xE
 11287   00050F                     	ds	1
 11288   000510                     ?___strtoxl:
 11289                           	callstack 0
 11290   000510                     ?_clst2sect:
 11291                           	callstack 0
 11292   000510                     ___lldiv@counter:
 11293                           	callstack 0
 11294   000510                     ___fladd@signs:
 11295                           	callstack 0
 11296   000510                     SPI_SD_receive@p:
 11297                           	callstack 0
 11298   000510                     SPI_SD_dummy_clocks@clocks:
 11299                           	callstack 0
 11300   000510                     clst2sect@fs:
 11301                           	callstack 0
 11302   000510                     ___strtoxl@s:
 11303                           	callstack 0
 11304   000510                     stoa@s:
 11305                           	callstack 0
 11306   000510                     fputs@fp:
 11307                           	callstack 0
 11308   000510                     write_sram@ab:
 11309                           	callstack 0
 11310   000510                     ??_abs:
 11311   000510                     ??_create_name:
 11312                           
 11313                           ; 1 bytes @ 0xF
 11314   000510                     	ds	1
 11315   000511                     ___fladd@aexp:
 11316                           	callstack 0
 11317   000511                     get_fileinfo@dp:
 11318                           	callstack 0
 11319                           
 11320                           ; 2 bytes @ 0x10
 11321   000511                     	ds	1
 11322   000512                     ?___flmul:
 11323                           	callstack 0
 11324   000512                     ___fladd@bexp:
 11325                           	callstack 0
 11326   000512                     fputs@c:
 11327                           	callstack 0
 11328   000512                     SPI_SD_dummy_clocks@i:
 11329                           	callstack 0
 11330   000512                     SPI_SD_receive_byte@ctx_:
 11331                           	callstack 0
 11332   000512                     ___strtoxl@endptr:
 11333                           	callstack 0
 11334   000512                     clst2sect@clst:
 11335                           	callstack 0
 11336   000512                     get_hex@hexval:
 11337                           	callstack 0
 11338   000512                     ___flmul@b:
 11339                           	callstack 0
 11340   000512                     ??_stoa:
 11341                           
 11342                           ; 1 bytes @ 0x11
 11343   000512                     	ds	1
 11344   000513                     ___fladd@grs:
 11345                           	callstack 0
 11346   000513                     get_fileinfo@fno:
 11347                           	callstack 0
 11348   000513                     _create_name$2703:
 11349                           	callstack 0
 11350   000513                     fputs@i:
 11351                           	callstack 0
 11352   000513                     ld_clust@cl:
 11353                           	callstack 0
 11354                           
 11355                           ; 4 bytes @ 0x12
 11356   000513                     	ds	1
 11357   000514                     SPI_SD_dummy_clocks@dummy:
 11358                           	callstack 0
 11359   000514                     SPI_SD_receive_byte@dummy:
 11360                           	callstack 0
 11361   000514                     ___strtoxl@base:
 11362                           	callstack 0
 11363   000514                     stoa@p:
 11364                           	callstack 0
 11365   000514                     
 11366                           ; 1 bytes @ 0x13
 11367   000514                     	ds	1
 11368   000515                     SDCard_end_transaction@spi:
 11369                           	callstack 0
 11370   000515                     ___SDCard_wait_response@attempts:
 11371                           	callstack 0
 11372   000515                     _create_name$2707:
 11373                           	callstack 0
 11374   000515                     pad@fp:
 11375                           	callstack 0
 11376   000515                     ??_get_fileinfo:
 11377                           
 11378                           ; 1 bytes @ 0x14
 11379   000515                     	ds	1
 11380   000516                     get_hex@ch:
 11381                           	callstack 0
 11382   000516                     ___strtoxl@is_signed:
 11383                           	callstack 0
 11384   000516                     stoa@w:
 11385                           	callstack 0
 11386   000516                     ___flmul@a:
 11387                           	callstack 0
 11388   000516                     ??_clst2sect:
 11389                           
 11390                           ; 1 bytes @ 0x15
 11391   000516                     	ds	1
 11392   000517                     ___SDCard_wait_response@no_response:
 11393                           	callstack 0
 11394   000517                     create_name@d:
 11395                           	callstack 0
 11396   000517                     pad@buf:
 11397                           	callstack 0
 11398   000517                     ??___strtoxl:
 11399   000517                     
 11400                           ; 1 bytes @ 0x16
 11401   000517                     	ds	1
 11402   000518                     ___SDCard_wait_response@spi:
 11403                           	callstack 0
 11404   000518                     create_name@ni:
 11405                           	callstack 0
 11406   000518                     stoa@cp:
 11407                           	callstack 0
 11408                           
 11409                           ; 2 bytes @ 0x17
 11410   000518                     	ds	1
 11411   000519                     get_fileinfo@si:
 11412                           	callstack 0
 11413   000519                     pad@p:
 11414                           	callstack 0
 11415                           
 11416                           ; 2 bytes @ 0x18
 11417   000519                     	ds	1
 11418   00051A                     ___SDCard_wait_response@response:
 11419                           	callstack 0
 11420   00051A                     create_name@i:
 11421                           	callstack 0
 11422   00051A                     stoa@l:
 11423                           	callstack 0
 11424   00051A                     ___strtoxl@prev_a:
 11425                           	callstack 0
 11426   00051A                     ??___flmul:
 11427                           
 11428                           ; 1 bytes @ 0x19
 11429   00051A                     	ds	1
 11430   00051B                     ?___SDCard_command_r1:
 11431                           	callstack 0
 11432   00051B                     get_fileinfo@c:
 11433                           	callstack 0
 11434   00051B                     ___SDCard_command_r1@argument:
 11435                           	callstack 0
 11436   00051B                     ??_pad:
 11437                           
 11438                           ; 1 bytes @ 0x1A
 11439   00051B                     	ds	1
 11440   00051C                     get_fileinfo@di:
 11441                           	callstack 0
 11442   00051C                     create_name@sfn:
 11443                           	callstack 0
 11444   00051C                     pad@i:
 11445                           	callstack 0
 11446                           
 11447                           ; 2 bytes @ 0x1B
 11448   00051C                     	ds	2
 11449   00051E                     ___flmul@sign:
 11450                           	callstack 0
 11451   00051E                     create_name@p:
 11452                           	callstack 0
 11453   00051E                     ___strtoxl$4682:
 11454                           	callstack 0
 11455   00051E                     dtoa@fp:
 11456                           	callstack 0
 11457   00051E                     xtoa@fp:
 11458                           	callstack 0
 11459                           
 11460                           ; 2 bytes @ 0x1D
 11461   00051E                     	ds	1
 11462   00051F                     ___flmul@aexp:
 11463                           	callstack 0
 11464   00051F                     ___SDCard_command_r1@r1:
 11465                           	callstack 0
 11466                           
 11467                           ; 2 bytes @ 0x1E
 11468   00051F                     	ds	1
 11469   000520                     create_name@si:
 11470                           	callstack 0
 11471   000520                     ___strtoxl$4683:
 11472                           	callstack 0
 11473   000520                     ___flmul@grs:
 11474                           	callstack 0
 11475   000520                     dtoa@d:
 11476                           	callstack 0
 11477   000520                     xtoa@d:
 11478                           	callstack 0
 11479                           
 11480                           ; 4 bytes @ 0x1F
 11481   000520                     	ds	1
 11482   000521                     ___SDCard_command_r1@command:
 11483                           	callstack 0
 11484   000521                     
 11485                           ; 1 bytes @ 0x20
 11486   000521                     	ds	1
 11487   000522                     create_name@c:
 11488                           	callstack 0
 11489   000522                     ___strtoxl@limit:
 11490                           	callstack 0
 11491   000522                     ___SDCard_command_r1@buf:
 11492                           	callstack 0
 11493                           
 11494                           ; 6 bytes @ 0x21
 11495   000522                     	ds	2
 11496   000524                     ___flmul@bexp:
 11497                           	callstack 0
 11498   000524                     xtoa@x:
 11499                           	callstack 0
 11500   000524                     _dtoa$4796:
 11501                           	callstack 0
 11502   000524                     
 11503                           ; 1 bytes @ 0x23
 11504   000524                     	ds	1
 11505   000525                     ___flmul@prod:
 11506                           	callstack 0
 11507   000525                     ??_xtoa:
 11508                           
 11509                           ; 1 bytes @ 0x24
 11510   000525                     	ds	1
 11511   000526                     ___strtoxl@flags:
 11512                           	callstack 0
 11513   000526                     dtoa@p:
 11514                           	callstack 0
 11515                           
 11516                           ; 2 bytes @ 0x25
 11517   000526                     	ds	1
 11518   000527                     ___strtoxl@a:
 11519                           	callstack 0
 11520                           
 11521                           ; 4 bytes @ 0x26
 11522   000527                     	ds	1
 11523   000528                     ___SDCard_command_r1@response:
 11524                           	callstack 0
 11525   000528                     dtoa@w:
 11526                           	callstack 0
 11527                           
 11528                           ; 2 bytes @ 0x27
 11529   000528                     	ds	1
 11530   000529                     xtoa@a:
 11531                           	callstack 0
 11532   000529                     ___SDCard_command_r1@spi:
 11533                           	callstack 0
 11534   000529                     ___flmul@temp:
 11535                           	callstack 0
 11536                           
 11537                           ; 2 bytes @ 0x28
 11538   000529                     	ds	1
 11539   00052A                     dtoa@s:
 11540                           	callstack 0
 11541   00052A                     _xtoa$4849:
 11542                           	callstack 0
 11543                           
 11544                           ; 2 bytes @ 0x29
 11545   00052A                     	ds	1
 11546   00052B                     ?___fldiv:
 11547                           	callstack 0
 11548   00052B                     ?___flsub:
 11549                           	callstack 0
 11550   00052B                     ___strtoxl@cp:
 11551                           	callstack 0
 11552   00052B                     dtoa@i:
 11553                           	callstack 0
 11554   00052B                     SDCard_command@argument:
 11555                           	callstack 0
 11556   00052B                     ___flge@ff1:
 11557                           	callstack 0
 11558   00052B                     ___flsub@b:
 11559                           	callstack 0
 11560   00052B                     ___fldiv@b:
 11561                           	callstack 0
 11562                           
 11563                           ; 4 bytes @ 0x2A
 11564   00052B                     	ds	1
 11565   00052C                     xtoa@p:
 11566                           	callstack 0
 11567                           
 11568                           ; 2 bytes @ 0x2B
 11569   00052C                     	ds	1
 11570   00052D                     ___strtoxl@c:
 11571                           	callstack 0
 11572                           
 11573                           ; 1 bytes @ 0x2C
 11574   00052D                     	ds	1
 11575   00052E                     xtoa@w:
 11576                           	callstack 0
 11577                           
 11578                           ; 2 bytes @ 0x2D
 11579   00052E                     	ds	1
 11580   00052F                     SDCard_command@response_buffer:
 11581                           	callstack 0
 11582   00052F                     ___flge@ff2:
 11583                           	callstack 0
 11584   00052F                     ___flsub@a:
 11585                           	callstack 0
 11586   00052F                     ___fldiv@a:
 11587                           	callstack 0
 11588                           
 11589                           ; 4 bytes @ 0x2E
 11590   00052F                     	ds	1
 11591   000530                     xtoa@c:
 11592                           	callstack 0
 11593                           
 11594                           ; 1 bytes @ 0x2F
 11595   000530                     	ds	1
 11596   000531                     SDCard_command@length:
 11597                           	callstack 0
 11598   000531                     xtoa@i:
 11599                           	callstack 0
 11600                           
 11601                           ; 2 bytes @ 0x30
 11602   000531                     	ds	2
 11603   000533                     SDCard_command@command:
 11604                           	callstack 0
 11605   000533                     ??___fldiv:
 11606   000533                     ??___flge:
 11607                           
 11608                           ; 1 bytes @ 0x32
 11609   000533                     	ds	1
 11610   000534                     SDCard_command@spi:
 11611                           	callstack 0
 11612                           
 11613                           ; 2 bytes @ 0x33
 11614   000534                     	ds	2
 11615   000536                     SDCard_command@result:
 11616                           	callstack 0
 11617                           
 11618                           ; 2 bytes @ 0x35
 11619   000536                     	ds	1
 11620   000537                     ___fldiv@rem:
 11621                           	callstack 0
 11622                           
 11623                           ; 4 bytes @ 0x36
 11624   000537                     	ds	1
 11625   000538                     SDCard_command@responsep:
 11626                           	callstack 0
 11627                           
 11628                           ; 2 bytes @ 0x37
 11629   000538                     	ds	3
 11630   00053B                     ___fldiv@sign:
 11631                           	callstack 0
 11632                           
 11633                           ; 1 bytes @ 0x3A
 11634   00053B                     	ds	1
 11635   00053C                     ___fldiv@new_exp:
 11636                           	callstack 0
 11637                           
 11638                           ; 2 bytes @ 0x3B
 11639   00053C                     	ds	2
 11640   00053E                     ___fldiv@grs:
 11641                           	callstack 0
 11642                           
 11643                           ; 4 bytes @ 0x3D
 11644   00053E                     	ds	4
 11645   000542                     ___fldiv@bexp:
 11646                           	callstack 0
 11647                           
 11648                           ; 1 bytes @ 0x41
 11649   000542                     	ds	1
 11650   000543                     ___fldiv@aexp:
 11651                           	callstack 0
 11652                           
 11653                           ; 1 bytes @ 0x42
 11654   000543                     	ds	1
 11655   000544                     ?_floorf:
 11656                           	callstack 0
 11657   000544                     floorf@x:
 11658                           	callstack 0
 11659                           
 11660                           ; 4 bytes @ 0x43
 11661   000544                     	ds	4
 11662   000548                     ??_floorf:
 11663                           
 11664                           ; 1 bytes @ 0x47
 11665   000548                     	ds	6
 11666   00054E                     floorf@m:
 11667                           	callstack 0
 11668                           
 11669                           ; 4 bytes @ 0x4D
 11670   00054E                     	ds	4
 11671   000552                     floorf@e:
 11672                           	callstack 0
 11673                           
 11674                           ; 2 bytes @ 0x51
 11675   000552                     	ds	2
 11676   000554                     floorf@u:
 11677                           	callstack 0
 11678                           
 11679                           ; 4 bytes @ 0x53
 11680   000554                     	ds	4
 11681   000558                     ??_efgtoa:
 11682                           
 11683                           ; 1 bytes @ 0x57
 11684   000558                     	ds	2
 11685   00055A                     
 11686                           ; 1 bytes @ 0x59
 11687 ;;
 11688 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11689 ;;
 11690 ;; *************** function _main *****************
 11691 ;; Defined at:
 11692 ;;		line 183 in file "../src/w65_main.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;		None
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;  c               2  156[BANK7 ] int 
 11697 ;;  buf             2  154[BANK7 ] PTR unsigned char 
 11698 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 11699 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 11700 ;;  res             2  151[BANK7 ] PTR unsigned char 
 11701 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 11702 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 11703 ;;  fr              2    0        int 
 11704 ;;  rs              1  153[BANK7 ] enum E17409
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11717 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;Total ram usage:       13 bytes
 11719 ;; Hardware stack levels required when called: 26
 11720 ;; This function calls:
 11721 ;;		___fldiv
 11722 ;;		___flmul
 11723 ;;		___xxtofl
 11724 ;;		_boot_file
 11725 ;;		_change_directory
 11726 ;;		_clc_init
 11727 ;;		_clk_init
 11728 ;;		_disk_init
 11729 ;;		_f_getcwd
 11730 ;;		_flash_apl
 11731 ;;		_get_line
 11732 ;;		_load_config
 11733 ;;		_load_file
 11734 ;;		_mem_dump
 11735 ;;		_mem_init
 11736 ;;		_mon_prog
 11737 ;;		_port_init
 11738 ;;		_print_com
 11739 ;;		_print_reg
 11740 ;;		_printf
 11741 ;;		_reset_clk
 11742 ;;		_reset_cpu
 11743 ;;		_restart_prog
 11744 ;;		_return_cpu
 11745 ;;		_scan_files
 11746 ;;		_scan_files1
 11747 ;;		_see_file
 11748 ;;		_set_arg
 11749 ;;		_setup_monitor
 11750 ;;		_setup_sd
 11751 ;;		_strlen
 11752 ;;		_strstr
 11753 ;;		_uart_init
 11754 ;;		_wait_for_programmer
 11755 ;;		_wstart_prog
 11756 ;; This function is called by:
 11757 ;;		Startup code after reset
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           	psect	text0
 11762   0171A0                     __ptext0:
 11763                           	callstack 0
 11764   0171A0                     _main:
 11765                           	callstack 101
 11766   0171A0                     
 11767                           ;../src/w65_main.c: 185:  int c, fr;;../src/w65_main.c: 186:  char *buf, *res;;../src/w6
      +                          5_main.c: 187:  FRESULT rs;;../src/w65_main.c: 189:  cin_no = 0;
 11768   0171A0  0107               	movlb	7	; () banked
 11769   0171A2  6BCA               	clrf	_cin_no& (0+255),b
 11770                           
 11771                           ;../src/w65_main.c: 190:  wup_flg = 0;
 11772   0171A4  6BCC               	clrf	_wup_flg& (0+255),b
 11773                           
 11774                           ;../src/w65_main.c: 191:  nmi_sig = 0;
 11775   0171A6  6BCD               	clrf	_nmi_sig& (0+255),b
 11776                           
 11777                           ;../src/w65_main.c: 192:  fh.nmi_sw = 0;
 11778   0171A8  0108               	movlb	8	; () banked
 11779   0171AA  6BC0               	clrf	(_fh+30)& (0+255),b
 11780   0171AC                     
 11781                           ; BSR set to: 8
 11782                           ;../src/w65_main.c: 193:  raw_addr = 0;
 11783   0171AC  0E00               	movlw	0
 11784   0171AE  0107               	movlb	7	; () banked
 11785   0171B0  6FAD               	movwf	_raw_addr& (0+255),b
 11786   0171B2  0E00               	movlw	0
 11787   0171B4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 11788   0171B6  0E00               	movlw	0
 11789   0171B8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 11790   0171BA  0E00               	movlw	0
 11791   0171BC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 11792   0171BE                     
 11793                           ; BSR set to: 7
 11794                           ;../src/w65_main.c: 194:  load_flg = 0;
 11795   0171BE  6BC9               	clrf	_load_flg& (0+255),b
 11796   0171C0                     
 11797                           ; BSR set to: 7
 11798                           ;../src/w65_main.c: 195:  binv.sw = 0;
 11799   0171C0  0108               	movlb	8	; () banked
 11800   0171C2  6B78               	clrf	_binv& (0+255),b
 11801   0171C4                     
 11802                           ; BSR set to: 8
 11803                           ;../src/w65_main.c: 197:  port_init();
 11804   0171C4  EC48  F0FB         	call	_port_init	;wreg free
 11805   0171C8                     
 11806                           ;../src/w65_main.c: 198:  uart_init();
 11807   0171C8  EC82  F0FE         	call	_uart_init	;wreg free
 11808   0171CC                     
 11809                           ;../src/w65_main.c: 199:  wait_for_programmer();
 11810   0171CC  EC73  F0FD         	call	_wait_for_programmer	;wreg free
 11811   0171D0                     
 11812                           ;../src/w65_main.c: 201:  clk_init();
 11813   0171D0  ECB6  F000         	call	_clk_init	;wreg free
 11814   0171D4                     
 11815                           ;../src/w65_main.c: 202:  reset_cpu();
 11816   0171D4  EC3E  F0EF         	call	_reset_cpu	;wreg free
 11817   0171D8                     
 11818                           ;../src/w65_main.c: 204:  setup_sd();
 11819   0171D8  ECA0  F0F7         	call	_setup_sd	;wreg free
 11820   0171DC                     
 11821                           ;../src/w65_main.c: 205:  if (disk_init() < 0) while (1);
 11822   0171DC  EC87  F0FC         	call	_disk_init	;wreg free
 11823   0171E0  0106               	movlb	6	; () banked
 11824   0171E2  BFBC               	btfsc	(?_disk_init+1)& (0+255),7,b
 11825   0171E4  EFF8  F0B8         	goto	u35700
 11826   0171E8  EFF6  F0B8         	goto	u35701
 11827   0171EC                     u35701:
 11828   0171EC  EFFA  F0B8         	goto	l25821
 11829   0171F0                     u35700:
 11830   0171F0                     l1116:
 11831   0171F0  EFF8  F0B8         	goto	l1116
 11832   0171F4                     l25821:
 11833                           
 11834                           ; BSR set to: 6
 11835                           ;../src/w65_main.c: 208:  cpu_flg = 1;
 11836   0171F4  0E01               	movlw	1
 11837   0171F6  0107               	movlb	7	; () banked
 11838   0171F8  6FE5               	movwf	_cpu_flg& (0+255),b
 11839   0171FA                     
 11840                           ; BSR set to: 7
 11841                           ;../src/w65_main.c: 209:  if ( mem_init() <= 0x10000 ) {
 11842   0171FA  EC7C  F0C8         	call	_mem_init	;wreg free
 11843   0171FE  0105               	movlb	5	; () banked
 11844   017200  51E1               	movf	(?_mem_init+3)& (0+255),w,b
 11845   017202  E10A               	bnz	u35711
 11846   017204  05DE               	decf	?_mem_init& (0+255),w,b
 11847   017206  0E00               	movlw	0
 11848   017208  59DF               	subwfb	(?_mem_init+1)& (0+255),w,b
 11849   01720A  0E01               	movlw	1
 11850   01720C  59E0               	subwfb	(?_mem_init+2)& (0+255),w,b
 11851   01720E  B0D8               	btfsc	status,0,c
 11852   017210  EF0C  F0B9         	goto	u35711
 11853   017214  EF0E  F0B9         	goto	u35710
 11854   017218                     u35711:
 11855   017218  EF19  F0B9         	goto	l25829
 11856   01721C                     u35710:
 11857   01721C                     
 11858                           ; BSR set to: 5
 11859                           ;../src/w65_main.c: 210:   cpu_flg = 0;
 11860   01721C  0107               	movlb	7	; () banked
 11861   01721E  6BE5               	clrf	_cpu_flg& (0+255),b
 11862   017220                     
 11863                           ; BSR set to: 7
 11864                           ;../src/w65_main.c: 211:   printf("CPU Setting: W65C02\r\n");
 11865   017220  0EEE               	movlw	low STR_69
 11866   017222  0105               	movlb	5	; () banked
 11867   017224  6FAD               	movwf	printf@fmt& (0+255),b
 11868   017226  0EFB               	movlw	high STR_69
 11869   017228  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11870   01722A  ECDA  F0FF         	call	_printf	;wreg free
 11871                           
 11872                           ;../src/w65_main.c: 212:  }
 11873   01722E  EF23  F0B9         	goto	l25833
 11874   017232                     l25829:
 11875                           
 11876                           ; BSR set to: 5
 11877                           ;../src/w65_main.c: 214:   cpu_flg = 1;
 11878   017232  0E01               	movlw	1
 11879   017234  0107               	movlb	7	; () banked
 11880   017236  6FE5               	movwf	_cpu_flg& (0+255),b
 11881   017238                     
 11882                           ; BSR set to: 7
 11883                           ;../src/w65_main.c: 215:   printf("CPU Setting: W65C816\r\n");
 11884   017238  0EAA               	movlw	low STR_70
 11885   01723A  0105               	movlb	5	; () banked
 11886   01723C  6FAD               	movwf	printf@fmt& (0+255),b
 11887   01723E  0EFB               	movlw	high STR_70
 11888   017240  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11889   017242  ECDA  F0FF         	call	_printf	;wreg free
 11890   017246                     l25833:
 11891                           
 11892                           ;../src/w65_main.c: 218:  if( load_config() < 0) while (1);
 11893   017246  ECED  F0B6         	call	_load_config	;wreg free
 11894   01724A  0107               	movlb	7	; () banked
 11895   01724C  BF01               	btfsc	(?_load_config+1)& (0+255),7,b
 11896   01724E  EF2D  F0B9         	goto	u35720
 11897   017252  EF2B  F0B9         	goto	u35721
 11898   017256                     u35721:
 11899   017256  EF2F  F0B9         	goto	l25835
 11900   01725A                     u35720:
 11901   01725A                     l1122:
 11902   01725A  EF2D  F0B9         	goto	l1122
 11903   01725E                     l25835:
 11904                           
 11905                           ; BSR set to: 7
 11906                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 11907   01725E  0E00               	movlw	0
 11908   017260  6E16               	movwf	___flmul@a^(0+1280),c
 11909   017262  0E24               	movlw	36
 11910   017264  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 11911   017266  0EF4               	movlw	244
 11912   017268  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 11913   01726A  0E41               	movlw	65
 11914   01726C  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 11915   01726E  C7DF  F504         	movff	_clk_fs,___xxtofl@val
 11916   017272  C7E0  F505         	movff	_clk_fs+1,___xxtofl@val+1
 11917   017276  C7E1  F506         	movff	_clk_fs+2,___xxtofl@val+2
 11918   01727A  C7E2  F507         	movff	_clk_fs+3,___xxtofl@val+3
 11919   01727E  0E00               	movlw	0
 11920   017280  EC53  F0D5         	call	___xxtofl
 11921   017284  C504  F512         	movff	?___xxtofl,___flmul@b
 11922   017288  C505  F513         	movff	?___xxtofl+1,___flmul@b+1
 11923   01728C  C506  F514         	movff	?___xxtofl+2,___flmul@b+2
 11924   017290  C507  F515         	movff	?___xxtofl+3,___flmul@b+3
 11925   017294  ECE4  F0B2         	call	___flmul	;wreg free
 11926   017298  C512  F52B         	movff	?___flmul,___fldiv@b
 11927   01729C  C513  F52C         	movff	?___flmul+1,___fldiv@b+1
 11928   0172A0  C514  F52D         	movff	?___flmul+2,___fldiv@b+2
 11929   0172A4  C515  F52E         	movff	?___flmul+3,___fldiv@b+3
 11930   0172A8  0E00               	movlw	0
 11931   0172AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 11932   0172AC  0E24               	movlw	36
 11933   0172AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 11934   0172B0  0E74               	movlw	116
 11935   0172B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 11936   0172B4  0E49               	movlw	73
 11937   0172B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 11938   0172B8  ECAA  F0BA         	call	___fldiv	;wreg free
 11939   0172BC  C52B  F793         	movff	?___fldiv,_main$5421
 11940   0172C0  C52C  F794         	movff	?___fldiv+1,_main$5421+1
 11941   0172C4  C52D  F795         	movff	?___fldiv+2,_main$5421+2
 11942   0172C8  C52E  F796         	movff	?___fldiv+3,_main$5421+3
 11943   0172CC                     
 11944                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 11945   0172CC  0E65               	movlw	low STR_71
 11946   0172CE  0105               	movlb	5	; () banked
 11947   0172D0  6FAD               	movwf	printf@fmt& (0+255),b
 11948   0172D2  0EFB               	movlw	high STR_71
 11949   0172D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11950   0172D6  C793  F5AF         	movff	_main$5421,?_printf+2
 11951   0172DA  C794  F5B0         	movff	_main$5421+1,?_printf+3
 11952   0172DE  C795  F5B1         	movff	_main$5421+2,?_printf+4
 11953   0172E2  C796  F5B2         	movff	_main$5421+3,?_printf+5
 11954   0172E6  ECDA  F0FF         	call	_printf	;wreg free
 11955   0172EA                     
 11956                           ;../src/w65_main.c: 221:  reset_clk();
 11957   0172EA  ECDF  F000         	call	_reset_clk	;wreg free
 11958   0172EE                     
 11959                           ;../src/w65_main.c: 222:  clc_init();
 11960   0172EE  EC90  F0E0         	call	_clc_init	;wreg free
 11961   0172F2                     
 11962                           ;../src/w65_main.c: 225:  GIE = 1;
 11963   0172F2  8ED6               	bsf	1238,7,c	;volatile
 11964   0172F4                     
 11965                           ;../src/w65_main.c: 228:  if ( setup_monitor() ) {
 11966   0172F4  EC2C  F0F4         	call	_setup_monitor	;wreg free
 11967   0172F8  0107               	movlb	7	; () banked
 11968   0172FA  5116               	movf	?_setup_monitor& (0+255),w,b
 11969   0172FC  1117               	iorwf	(?_setup_monitor+1)& (0+255),w,b
 11970   0172FE  B4D8               	btfsc	status,2,c
 11971   017300  EF84  F0B9         	goto	u35731
 11972   017304  EF86  F0B9         	goto	u35730
 11973   017308                     u35731:
 11974   017308  EF8F  F0B9         	goto	l25849
 11975   01730C                     u35730:
 11976   01730C                     
 11977                           ; BSR set to: 7
 11978                           ;../src/w65_main.c: 229:   printf("System stop!!");
 11979   01730C  0E5E               	movlw	low STR_72
 11980   01730E  0105               	movlb	5	; () banked
 11981   017310  6FAD               	movwf	printf@fmt& (0+255),b
 11982   017312  0EFE               	movlw	high STR_72
 11983   017314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11984   017316  ECDA  F0FF         	call	_printf	;wreg free
 11985   01731A                     l1126:
 11986   01731A  EF8D  F0B9         	goto	l1126
 11987   01731E                     l25849:
 11988                           
 11989                           ; BSR set to: 7
 11990                           ;../src/w65_main.c: 233:  printf("\r\nBoard: %s\n\r", board_name);
 11991   01731E  0E50               	movlw	low STR_73
 11992   017320  0105               	movlb	5	; () banked
 11993   017322  6FAD               	movwf	printf@fmt& (0+255),b
 11994   017324  0EFE               	movlw	high STR_73
 11995   017326  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 11996   017328  0EF7               	movlw	low STR_47
 11997   01732A  6FAF               	movwf	(?_printf+2)& (0+255),b
 11998   01732C  0EF4               	movlw	high STR_47
 11999   01732E  6FB0               	movwf	(?_printf+3)& (0+255),b
 12000   017330  ECDA  F0FF         	call	_printf	;wreg free
 12001   017334                     
 12002                           ;../src/w65_main.c: 236:  line_buf[0] = '\0';
 12003   017334  010A               	movlb	10	; () banked
 12004   017336  6B80               	clrf	_line_buf& (0+255),b
 12005   017338                     
 12006                           ; BSR set to: 10
 12007                           ;../src/w65_main.c: 237:  arg[0] = &line_buf[0];
 12008   017338  0E80               	movlw	low _line_buf
 12009   01733A  0107               	movlb	7	; () banked
 12010   01733C  6F9E               	movwf	_arg& (0+255),b
 12011   01733E  0E0A               	movlw	high _line_buf
 12012   017340  6F9F               	movwf	(_arg+1)& (0+255),b
 12013   017342                     
 12014                           ; BSR set to: 7
 12015                           ;../src/w65_main.c: 238:  scan_files();
 12016   017342  EC3A  F0CC         	call	_scan_files	;wreg free
 12017   017346                     l1129:
 12018                           
 12019                           ;../src/w65_main.c: 241:   buf = (char *)&tmp_buf[0][0];
 12020   017346  0EF8               	movlw	low _tmp_buf
 12021   017348  0107               	movlb	7	; () banked
 12022   01734A  6F9A               	movwf	main@buf& (0+255),b
 12023   01734C  0E13               	movlw	high _tmp_buf
 12024   01734E  6F9B               	movwf	(main@buf+1)& (0+255),b
 12025   017350                     
 12026                           ; BSR set to: 7
 12027                           ;../src/w65_main.c: 242:   f_getcwd(buf, 256);
 12028   017350  C79A  F6AF         	movff	main@buf,f_getcwd@buff
 12029   017354  C79B  F6B0         	movff	main@buf+1,f_getcwd@buff+1
 12030   017358  0E01               	movlw	1
 12031   01735A  0106               	movlb	6	; () banked
 12032   01735C  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 12033   01735E  0E00               	movlw	0
 12034   017360  6FB1               	movwf	f_getcwd@len& (0+255),b
 12035   017362  EC93  F0A7         	call	_f_getcwd	;wreg free
 12036   017366                     
 12037                           ;../src/w65_main.c: 243:   printf("%s> ", buf);
 12038   017366  0EA3               	movlw	low STR_74
 12039   017368  0105               	movlb	5	; () banked
 12040   01736A  6FAD               	movwf	printf@fmt& (0+255),b
 12041   01736C  0EFF               	movlw	high STR_74
 12042   01736E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12043   017370  C79A  F5AF         	movff	main@buf,?_printf+2
 12044   017374  C79B  F5B0         	movff	main@buf+1,?_printf+3
 12045   017378  ECDA  F0FF         	call	_printf	;wreg free
 12046   01737C                     
 12047                           ;../src/w65_main.c: 244:   for(c = 0; c < 5; c++) arg[c] = 0;
 12048   01737C  0E00               	movlw	0
 12049   01737E  0107               	movlb	7	; () banked
 12050   017380  6F9D               	movwf	(main@c+1)& (0+255),b
 12051   017382  0E00               	movlw	0
 12052   017384  6F9C               	movwf	main@c& (0+255),b
 12053   017386                     l25867:
 12054                           
 12055                           ; BSR set to: 7
 12056   017386  90D8               	bcf	status,0,c
 12057   017388  359C               	rlcf	main@c& (0+255),w,b
 12058   01738A  6ED9               	movwf	fsr2l,c
 12059   01738C  359D               	rlcf	(main@c+1)& (0+255),w,b
 12060   01738E  6EDA               	movwf	fsr2h,c
 12061   017390  0E9E               	movlw	low _arg
 12062   017392  26D9               	addwf	fsr2l,f,c
 12063   017394  0E07               	movlw	high _arg
 12064   017396  22DA               	addwfc	fsr2h,f,c
 12065   017398  6ADE               	clrf	postinc2,c
 12066   01739A  6ADD               	clrf	postdec2,c
 12067   01739C                     
 12068                           ; BSR set to: 7
 12069   01739C  4B9C               	infsnz	main@c& (0+255),f,b
 12070   01739E  2B9D               	incf	(main@c+1)& (0+255),f,b
 12071   0173A0                     
 12072                           ; BSR set to: 7
 12073   0173A0  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 12074   0173A2  EFDC  F0B9         	goto	u35741
 12075   0173A6  519D               	movf	(main@c+1)& (0+255),w,b
 12076   0173A8  E109               	bnz	u35740
 12077   0173AA  0E05               	movlw	5
 12078   0173AC  5D9C               	subwf	main@c& (0+255),w,b
 12079   0173AE  A0D8               	btfss	status,0,c
 12080   0173B0  EFDC  F0B9         	goto	u35741
 12081   0173B4  EFDE  F0B9         	goto	u35740
 12082   0173B8                     u35741:
 12083   0173B8  EFC3  F0B9         	goto	l25867
 12084   0173BC                     u35740:
 12085   0173BC                     
 12086                           ; BSR set to: 7
 12087                           ;../src/w65_main.c: 246:   if (!get_line(&line_buf[0], 81)) continue;
 12088   0173BC  0E80               	movlw	low _line_buf
 12089   0173BE  0105               	movlb	5	; () banked
 12090   0173C0  6FBD               	movwf	get_line@s& (0+255),b
 12091   0173C2  0E0A               	movlw	high _line_buf
 12092   0173C4  6FBE               	movwf	(get_line@s+1)& (0+255),b
 12093   0173C6  0E00               	movlw	0
 12094   0173C8  6FC0               	movwf	(get_line@length+1)& (0+255),b
 12095   0173CA  0E51               	movlw	81
 12096   0173CC  6FBF               	movwf	get_line@length& (0+255),b
 12097   0173CE  EC11  F0E7         	call	_get_line	;wreg free
 12098   0173D2  0105               	movlb	5	; () banked
 12099   0173D4  51BD               	movf	?_get_line& (0+255),w,b
 12100   0173D6  11BE               	iorwf	(?_get_line+1)& (0+255),w,b
 12101   0173D8  A4D8               	btfss	status,2,c
 12102   0173DA  EFF1  F0B9         	goto	u35751
 12103   0173DE  EFF3  F0B9         	goto	u35750
 12104   0173E2                     u35751:
 12105   0173E2  EFF5  F0B9         	goto	l25877
 12106   0173E6                     u35750:
 12107   0173E6  EFA3  F0B9         	goto	l1129
 12108   0173EA                     l25877:
 12109                           
 12110                           ; BSR set to: 5
 12111                           ;../src/w65_main.c: 248:   for( c=0; c < 14; c++ ) {
 12112   0173EA  0E00               	movlw	0
 12113   0173EC  0107               	movlb	7	; () banked
 12114   0173EE  6F9D               	movwf	(main@c+1)& (0+255),b
 12115   0173F0  0E00               	movlw	0
 12116   0173F2  6F9C               	movwf	main@c& (0+255),b
 12117   0173F4                     l25883:
 12118                           
 12119                           ; BSR set to: 7
 12120                           ;../src/w65_main.c: 249:    if ((res = strstr(&line_buf[0], cmd[c].cmd_name ))) {
 12121   0173F4  0E80               	movlw	low _line_buf
 12122   0173F6  6E0B               	movwf	strstr@h^(0+1280),c
 12123   0173F8  0E0A               	movlw	high _line_buf
 12124   0173FA  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 12125   0173FC  0E05               	movlw	5
 12126   0173FE  039C               	mulwf	main@c& (0+255),b
 12127   017400  C4F3 F791          	movff	prodl,??_main
 12128   017404  C4F4 F792          	movff	prodh,??_main+1
 12129   017408  039D               	mulwf	(main@c+1)& (0+255),b
 12130   01740A  50F3               	movf	prodl,w,c
 12131   01740C  2792               	addwf	(??_main+1)& (0+255),f,b
 12132   01740E  0E00               	movlw	low _cmd
 12133   017410  2591               	addwf	??_main& (0+255),w,b
 12134   017412  6ED9               	movwf	fsr2l,c
 12135   017414  0E09               	movlw	high _cmd
 12136   017416  2192               	addwfc	(??_main+1)& (0+255),w,b
 12137   017418  6EDA               	movwf	fsr2h,c
 12138   01741A  C4DE F50D          	movff	postinc2,strstr@n
 12139   01741E  C4DD F50E          	movff	postdec2,strstr@n+1
 12140   017422  ECCF  F0EE         	call	_strstr	;wreg free
 12141   017426  C50B  F797         	movff	?_strstr,main@res
 12142   01742A  C50C  F798         	movff	?_strstr+1,main@res+1
 12143   01742E  0107               	movlb	7	; () banked
 12144   017430  5197               	movf	main@res& (0+255),w,b
 12145   017432  1198               	iorwf	(main@res+1)& (0+255),w,b
 12146   017434  B4D8               	btfsc	status,2,c
 12147   017436  EF1F  F0BA         	goto	u35761
 12148   01743A  EF21  F0BA         	goto	u35760
 12149   01743E                     u35761:
 12150   01743E  EF45  F0BA         	goto	l25889
 12151   017442                     u35760:
 12152   017442                     
 12153                           ; BSR set to: 7
 12154                           ;../src/w65_main.c: 250:     buf = (char *)(res+strlen(cmd[c].cmd_name));
 12155   017442  0E05               	movlw	5
 12156   017444  039C               	mulwf	main@c& (0+255),b
 12157   017446  C4F3 F791          	movff	prodl,??_main
 12158   01744A  C4F4 F792          	movff	prodh,??_main+1
 12159   01744E  039D               	mulwf	(main@c+1)& (0+255),b
 12160   017450  50F3               	movf	prodl,w,c
 12161   017452  2792               	addwf	(??_main+1)& (0+255),f,b
 12162   017454  0E00               	movlw	low _cmd
 12163   017456  2591               	addwf	??_main& (0+255),w,b
 12164   017458  6ED9               	movwf	fsr2l,c
 12165   01745A  0E09               	movlw	high _cmd
 12166   01745C  2192               	addwfc	(??_main+1)& (0+255),w,b
 12167   01745E  6EDA               	movwf	fsr2h,c
 12168   017460  C4DE F504          	movff	postinc2,strlen@s
 12169   017464  C4DD F505          	movff	postdec2,strlen@s+1
 12170   017468  ECB0  F0FC         	call	_strlen	;wreg free
 12171   01746C  5004               	movf	?_strlen^(0+1280),w,c
 12172   01746E  0107               	movlb	7	; () banked
 12173   017470  2597               	addwf	main@res& (0+255),w,b
 12174   017472  6F9A               	movwf	main@buf& (0+255),b
 12175   017474  5005               	movf	(?_strlen+1)^(0+1280),w,c
 12176   017476  2198               	addwfc	(main@res+1)& (0+255),w,b
 12177   017478  6F9B               	movwf	(main@buf+1)& (0+255),b
 12178   01747A                     
 12179                           ; BSR set to: 7
 12180                           ;../src/w65_main.c: 251:     set_arg(buf);
 12181   01747A  C79A  F504         	movff	main@buf,set_arg@buf
 12182   01747E  C79B  F505         	movff	main@buf+1,set_arg@buf+1
 12183   017482  EC05  F0D7         	call	_set_arg	;wreg free
 12184                           
 12185                           ;../src/w65_main.c: 252:     break;
 12186   017486  EF55  F0BA         	goto	l25893
 12187   01748A                     l25889:
 12188                           
 12189                           ; BSR set to: 7
 12190                           ;../src/w65_main.c: 254:   }
 12191   01748A  4B9C               	infsnz	main@c& (0+255),f,b
 12192   01748C  2B9D               	incf	(main@c+1)& (0+255),f,b
 12193   01748E                     
 12194                           ; BSR set to: 7
 12195   01748E  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 12196   017490  EF53  F0BA         	goto	u35771
 12197   017494  519D               	movf	(main@c+1)& (0+255),w,b
 12198   017496  E109               	bnz	u35770
 12199   017498  0E0E               	movlw	14
 12200   01749A  5D9C               	subwf	main@c& (0+255),w,b
 12201   01749C  A0D8               	btfss	status,0,c
 12202   01749E  EF53  F0BA         	goto	u35771
 12203   0174A2  EF55  F0BA         	goto	u35770
 12204   0174A6                     u35771:
 12205   0174A6  EFFA  F0B9         	goto	l25883
 12206   0174AA                     u35770:
 12207   0174AA                     l25893:
 12208                           
 12209                           ;../src/w65_main.c: 256:   if ( c == 14 ) set_arg(&line_buf[0]);
 12210   0174AA  0E0E               	movlw	14
 12211   0174AC  0107               	movlb	7	; () banked
 12212   0174AE  199C               	xorwf	main@c& (0+255),w,b
 12213   0174B0  119D               	iorwf	(main@c+1)& (0+255),w,b
 12214   0174B2  A4D8               	btfss	status,2,c
 12215   0174B4  EF5E  F0BA         	goto	u35781
 12216   0174B8  EF60  F0BA         	goto	u35780
 12217   0174BC                     u35781:
 12218   0174BC  EF66  F0BA         	goto	l25897
 12219   0174C0                     u35780:
 12220   0174C0                     
 12221                           ; BSR set to: 7
 12222   0174C0  0E80               	movlw	low _line_buf
 12223   0174C2  6E04               	movwf	set_arg@buf^(0+1280),c
 12224   0174C4  0E0A               	movlw	high _line_buf
 12225   0174C6  6E05               	movwf	(set_arg@buf+1)^(0+1280),c
 12226   0174C8  EC05  F0D7         	call	_set_arg	;wreg free
 12227   0174CC                     l25897:
 12228                           
 12229                           ;../src/w65_main.c: 257:   rs = (*cmd[c].func)();
 12230   0174CC  0E05               	movlw	5
 12231   0174CE  0107               	movlb	7	; () banked
 12232   0174D0  039C               	mulwf	main@c& (0+255),b
 12233   0174D2  C4F3 F791          	movff	prodl,??_main
 12234   0174D6  C4F4 F792          	movff	prodh,??_main+1
 12235   0174DA  039D               	mulwf	(main@c+1)& (0+255),b
 12236   0174DC  50F3               	movf	prodl,w,c
 12237   0174DE  2792               	addwf	(??_main+1)& (0+255),f,b
 12238   0174E0  0E02               	movlw	low (_cmd+2)
 12239   0174E2  2591               	addwf	??_main& (0+255),w,b
 12240   0174E4  6ED9               	movwf	fsr2l,c
 12241   0174E6  0E09               	movlw	high (_cmd+2)
 12242   0174E8  2192               	addwfc	(??_main+1)& (0+255),w,b
 12243   0174EA  6EDA               	movwf	fsr2h,c
 12244   0174EC  D802               	call	u35798
 12245   0174EE  EF83  F0BA         	goto	u35799
 12246   0174F2                     u35798:
 12247   0174F2  0005               	push	
 12248   0174F4  6EFA               	movwf	pclath,c
 12249   0174F6  50DE               	movf	postinc2,w,c
 12250   0174F8  6EFD               	movwf	tosl,c
 12251   0174FA  50DE               	movf	postinc2,w,c
 12252   0174FC  6EFE               	movwf	tosh,c
 12253   0174FE  50DE               	movf	postinc2,w,c
 12254   017500  6EFF               	movwf	tosu,c
 12255   017502  50FA               	movf	pclath,w,c
 12256   017504  0012               	return		;indir
 12257   017506                     u35799:
 12258   017506  0107               	movlb	7	; () banked
 12259   017508  6F99               	movwf	main@rs& (0+255),b
 12260   01750A                     
 12261                           ; BSR set to: 7
 12262                           ;../src/w65_main.c: 259:   if( rs == (FRESULT)-2 ) printf("\r\nAssert NMI interrupt.\r\n
      +                          ");
 12263   01750A  0EFE               	movlw	254
 12264   01750C  1999               	xorwf	main@rs& (0+255),w,b
 12265   01750E  A4D8               	btfss	status,2,c
 12266   017510  EF8C  F0BA         	goto	u35801
 12267   017514  EF8E  F0BA         	goto	u35800
 12268   017518                     u35801:
 12269   017518  EF97  F0BA         	goto	l25903
 12270   01751C                     u35800:
 12271   01751C                     
 12272                           ; BSR set to: 7
 12273   01751C  0EEE               	movlw	low STR_75
 12274   01751E  0105               	movlb	5	; () banked
 12275   017520  6FAD               	movwf	printf@fmt& (0+255),b
 12276   017522  0EF9               	movlw	high STR_75
 12277   017524  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12278   017526  ECDA  F0FF         	call	_printf	;wreg free
 12279   01752A  EFA3  F0B9         	goto	l1129
 12280   01752E                     l25903:
 12281                           
 12282                           ; BSR set to: 7
 12283   01752E  5199               	movf	main@rs& (0+255),w,b
 12284   017530  B4D8               	btfsc	status,2,c
 12285   017532  EF9D  F0BA         	goto	u35811
 12286   017536  EF9F  F0BA         	goto	u35810
 12287   01753A                     u35811:
 12288   01753A  EFA3  F0B9         	goto	l1129
 12289   01753E                     u35810:
 12290   01753E                     
 12291                           ; BSR set to: 7
 12292   01753E  0EF2               	movlw	low STR_76
 12293   017540  0105               	movlb	5	; () banked
 12294   017542  6FAD               	movwf	printf@fmt& (0+255),b
 12295   017544  0EF5               	movlw	high STR_76
 12296   017546  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12297   017548  ECDA  F0FF         	call	_printf	;wreg free
 12298   01754C  EFA3  F0B9         	goto	l1129
 12299   017550  EF81  F000         	goto	start
 12300   017554                     __end_of_main:
 12301                           	callstack 0
 12302                           
 12303 ;; *************** function _boot_file *****************
 12304 ;; Defined at:
 12305 ;;		line 639 in file "../src/w65_main.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;		None
 12308 ;; Auto vars:     Size  Location     Type
 12309 ;;  cnt             2    0        unsigned int 
 12310 ;;  rs              1   24[BANK7 ] enum E17409
 12311 ;;  m               1   23[BANK7 ] unsigned char 
 12312 ;;  flag            1   22[BANK7 ] unsigned char 
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      enum E17409
 12315 ;; Registers used:
 12316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12323 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12325 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;Total ram usage:        3 bytes
 12327 ;; Hardware stack levels used: 1
 12328 ;; Hardware stack levels required when called: 25
 12329 ;; This function calls:
 12330 ;;		_drive_cpu
 12331 ;;		_load_program
 12332 ;;		_printf
 12333 ;;		_prt_reload
 12334 ;;		_sprintf
 12335 ;;		_start_cpu
 12336 ;;		_strstr
 12337 ;;		_write_sram
 12338 ;; This function is called by:
 12339 ;;		_main
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text1
 12344   017C6E                     __ptext1:
 12345                           	callstack 0
 12346   017C6E                     _boot_file:
 12347                           	callstack 101
 12348   017C6E                     
 12349                           ;../src/w65_main.c: 641:  FRESULT rs;;../src/w65_main.c: 642:  uint8_t flag, m;;../src/w
      +                          65_main.c: 643:  UINT cnt;;../src/w65_main.c: 645:  if ( *arg[1] == '<' ) {
 12350   017C6E  C7A0  F4F6         	movff	_arg+2,tblptrl
 12351   017C72  C7A1  F4F7         	movff	_arg+3,tblptrh
 12352   017C76  0E00               	movlw	low (__mediumconst shr (0+16))
 12353   017C78  6EF8               	movwf	tblptru,c
 12354   017C7A  0E25               	movlw	(high __ramtop+-1)
 12355   017C7C  64F7               	cpfsgt	tblptrh,c
 12356   017C7E  D003               	bra	u35127
 12357   017C80  0008               	tblrd		*
 12358   017C82  50F5               	movf	tablat,w,c
 12359   017C84  D005               	bra	u35120
 12360   017C86                     u35127:
 12361   017C86  C4F6 F4E9          	movff	tblptrl,fsr0l
 12362   017C8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 12363   017C8E  50EF               	movf	indf0,w,c
 12364   017C90                     u35120:
 12365   017C90  0A3C               	xorlw	60
 12366   017C92  A4D8               	btfss	status,2,c
 12367   017C94  EF4E  F0BE         	goto	u35131
 12368   017C98  EF50  F0BE         	goto	u35130
 12369   017C9C                     u35131:
 12370   017C9C  EF64  F0BE         	goto	l25305
 12371   017CA0                     u35130:
 12372   017CA0                     
 12373                           ;../src/w65_main.c: 646:   sprintf(&fin_name[0], "%s", arg[2]);
 12374   017CA0  0EC2               	movlw	low _fin_name
 12375   017CA2  0105               	movlb	5	; () banked
 12376   017CA4  6FAD               	movwf	sprintf@s& (0+255),b
 12377   017CA6  0E08               	movlw	high _fin_name
 12378   017CA8  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 12379   017CAA  0EF9               	movlw	low STR_81
 12380   017CAC  6FAF               	movwf	sprintf@fmt& (0+255),b
 12381   017CAE  0EFF               	movlw	high STR_81
 12382   017CB0  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 12383   017CB2  C7A2  F5B1         	movff	_arg+4,?_sprintf+4
 12384   017CB6  C7A3  F5B2         	movff	_arg+5,?_sprintf+5
 12385   017CBA  ECD8  F0FC         	call	_sprintf	;wreg free
 12386   017CBE                     
 12387                           ;../src/w65_main.c: 647:   fin_cnt = 0xffff;
 12388   017CBE  0107               	movlb	7	; () banked
 12389   017CC0  69E3               	setf	_fin_cnt& (0+255),b
 12390   017CC2  69E4               	setf	(_fin_cnt+1)& (0+255),b
 12391   017CC4                     
 12392                           ; BSR set to: 7
 12393                           ;../src/w65_main.c: 648:   cin_no = 1;
 12394   017CC4  0E01               	movlw	1
 12395   017CC6  6FCA               	movwf	_cin_no& (0+255),b
 12396   017CC8                     l25305:
 12397                           
 12398                           ;../src/w65_main.c: 650:  if ( strstr((const char *)arg[0], mon02+1) ) m = 0;
 12399   017CC8  C79E  F50B         	movff	_arg,strstr@h
 12400   017CCC  C79F  F50C         	movff	_arg+1,strstr@h+1
 12401   017CD0  0ED9               	movlw	low (STR_50+1)
 12402   017CD2  6E0D               	movwf	strstr@n^(0+1280),c
 12403   017CD4  0EFE               	movlw	high (STR_50+1)
 12404   017CD6  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 12405   017CD8  ECCF  F0EE         	call	_strstr	;wreg free
 12406   017CDC  500B               	movf	?_strstr^(0+1280),w,c
 12407   017CDE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 12408   017CE0  B4D8               	btfsc	status,2,c
 12409   017CE2  EF75  F0BE         	goto	u35141
 12410   017CE6  EF77  F0BE         	goto	u35140
 12411   017CEA                     u35141:
 12412   017CEA  EF7B  F0BE         	goto	l25309
 12413   017CEE                     u35140:
 12414   017CEE  0107               	movlb	7	; () banked
 12415   017CF0  6B17               	clrf	boot_file@m& (0+255),b
 12416   017CF2  EF96  F0BE         	goto	l25315
 12417   017CF6                     l25309:
 12418   017CF6  C79E  F50B         	movff	_arg,strstr@h
 12419   017CFA  C79F  F50C         	movff	_arg+1,strstr@h+1
 12420   017CFE  0EE4               	movlw	low (STR_51+1)
 12421   017D00  6E0D               	movwf	strstr@n^(0+1280),c
 12422   017D02  0EFE               	movlw	high (STR_51+1)
 12423   017D04  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 12424   017D06  ECCF  F0EE         	call	_strstr	;wreg free
 12425   017D0A  500B               	movf	?_strstr^(0+1280),w,c
 12426   017D0C  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 12427   017D0E  B4D8               	btfsc	status,2,c
 12428   017D10  EF8C  F0BE         	goto	u35151
 12429   017D14  EF8E  F0BE         	goto	u35150
 12430   017D18                     u35151:
 12431   017D18  EF93  F0BE         	goto	l25313
 12432   017D1C                     u35150:
 12433   017D1C  0E01               	movlw	1
 12434   017D1E  0107               	movlb	7	; () banked
 12435   017D20  6F17               	movwf	boot_file@m& (0+255),b
 12436   017D22  EF96  F0BE         	goto	l25315
 12437   017D26                     l25313:
 12438   017D26  0E02               	movlw	2
 12439   017D28  0107               	movlb	7	; () banked
 12440   017D2A  6F17               	movwf	boot_file@m& (0+255),b
 12441   017D2C                     l25315:
 12442                           
 12443                           ; BSR set to: 7
 12444                           ;../src/w65_main.c: 653:  if ( m != 2) {
 12445   017D2C  0E02               	movlw	2
 12446   017D2E  1917               	xorwf	boot_file@m& (0+255),w,b
 12447   017D30  B4D8               	btfsc	status,2,c
 12448   017D32  EF9D  F0BE         	goto	u35161
 12449   017D36  EF9F  F0BE         	goto	u35160
 12450   017D3A                     u35161:
 12451   017D3A  EFD5  F0BE         	goto	l1292
 12452   017D3E                     u35160:
 12453   017D3E                     
 12454                           ; BSR set to: 7
 12455                           ;../src/w65_main.c: 654:   mon = m;
 12456   017D3E  C717  F7C8         	movff	boot_file@m,_mon
 12457   017D42                     
 12458                           ; BSR set to: 7
 12459                           ;../src/w65_main.c: 655:   prt_reload();
 12460   017D42  ECEB  F000         	call	_prt_reload	;wreg free
 12461   017D46                     
 12462                           ;../src/w65_main.c: 656:   binv.sw = 0;
 12463   017D46  0108               	movlb	8	; () banked
 12464   017D48  6B78               	clrf	_binv& (0+255),b
 12465                           
 12466                           ;../src/w65_main.c: 657:   rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12467   017D4A  C79E  F700         	movff	_arg,load_program@fname
 12468   017D4E  C79F  F701         	movff	_arg+1,load_program@fname+1
 12469   017D52  EC86  F0AE         	call	_load_program	;wreg free
 12470   017D56  0107               	movlb	7	; () banked
 12471   017D58  5100               	movf	?_load_program& (0+255),w,b
 12472   017D5A  6F18               	movwf	boot_file@rs& (0+255),b
 12473   017D5C                     
 12474                           ; BSR set to: 7
 12475                           ;../src/w65_main.c: 658:   if ( rs ) return 0;
 12476   017D5C  5118               	movf	boot_file@rs& (0+255),w,b
 12477   017D5E  B4D8               	btfsc	status,2,c
 12478   017D60  EFB4  F0BE         	goto	u35171
 12479   017D64  EFB6  F0BE         	goto	u35170
 12480   017D68                     u35171:
 12481   017D68  EFB9  F0BE         	goto	l25329
 12482   017D6C                     u35170:
 12483   017D6C                     l25325:
 12484                           
 12485                           ; BSR set to: 7
 12486   017D6C  0E00               	movlw	0
 12487   017D6E  EFDE  F0BF         	goto	l1294
 12488   017D72                     l25329:
 12489                           
 12490                           ; BSR set to: 7
 12491                           ;../src/w65_main.c: 661:   write_sram(0, &cpu_flg, 1);
 12492   017D72  0E00               	movlw	0
 12493   017D74  6E04               	movwf	write_sram@addr^(0+1280),c
 12494   017D76  0E00               	movlw	0
 12495   017D78  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12496   017D7A  0E00               	movlw	0
 12497   017D7C  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12498   017D7E  0E00               	movlw	0
 12499   017D80  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12500   017D82  0EE5               	movlw	low _cpu_flg
 12501   017D84  6E08               	movwf	write_sram@buf^(0+1280),c
 12502   017D86  0E07               	movlw	high _cpu_flg
 12503   017D88  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12504   017D8A  0E00               	movlw	0
 12505   017D8C  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12506   017D8E  0E01               	movlw	1
 12507   017D90  6E0A               	movwf	write_sram@len^(0+1280),c
 12508   017D92  EC9F  F0E8         	call	_write_sram	;wreg free
 12509   017D96                     
 12510                           ;../src/w65_main.c: 663:   start_cpu();
 12511   017D96  ECF8  F0FE         	call	_start_cpu	;wreg free
 12512   017D9A                     
 12513                           ;../src/w65_main.c: 664:   rs = drive_cpu();
 12514   017D9A  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12515   017D9E  0107               	movlb	7	; () banked
 12516   017DA0  6F18               	movwf	boot_file@rs& (0+255),b
 12517   017DA2                     l25335:
 12518                           
 12519                           ;../src/w65_main.c: 665:   return rs;
 12520   017DA2  0107               	movlb	7	; () banked
 12521   017DA4  5118               	movf	boot_file@rs& (0+255),w,b
 12522   017DA6  EFDE  F0BF         	goto	l1294
 12523   017DAA                     l1292:
 12524                           
 12525                           ; BSR set to: 7
 12526                           ;../src/w65_main.c: 668:  flag = 0;
 12527   017DAA  6B16               	clrf	boot_file@flag& (0+255),b
 12528   017DAC                     
 12529                           ; BSR set to: 7
 12530                           ;../src/w65_main.c: 669:  printf("Flie(%s) loading...\r\n", arg[0]);
 12531   017DAC  0ED8               	movlw	low STR_108
 12532   017DAE  0105               	movlb	5	; () banked
 12533   017DB0  6FAD               	movwf	printf@fmt& (0+255),b
 12534   017DB2  0EFB               	movlw	high STR_108
 12535   017DB4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12536   017DB6  C79E  F5AF         	movff	_arg,?_printf+2
 12537   017DBA  C79F  F5B0         	movff	_arg+1,?_printf+3
 12538   017DBE  ECDA  F0FF         	call	_printf	;wreg free
 12539                           
 12540                           ;../src/w65_main.c: 671:  rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12541   017DC2  C79E  F700         	movff	_arg,load_program@fname
 12542   017DC6  C79F  F701         	movff	_arg+1,load_program@fname+1
 12543   017DCA  EC86  F0AE         	call	_load_program	;wreg free
 12544   017DCE  0107               	movlb	7	; () banked
 12545   017DD0  5100               	movf	?_load_program& (0+255),w,b
 12546   017DD2  6F18               	movwf	boot_file@rs& (0+255),b
 12547   017DD4                     
 12548                           ; BSR set to: 7
 12549                           ;../src/w65_main.c: 672:  if ( rs ) return 0;
 12550   017DD4  5118               	movf	boot_file@rs& (0+255),w,b
 12551   017DD6  B4D8               	btfsc	status,2,c
 12552   017DD8  EFF0  F0BE         	goto	u35181
 12553   017DDC  EFF2  F0BE         	goto	u35180
 12554   017DE0                     u35181:
 12555   017DE0  EFF4  F0BE         	goto	l25347
 12556   017DE4                     u35180:
 12557   017DE4  EFB6  F0BE         	goto	l25325
 12558   017DE8                     l25347:
 12559                           
 12560                           ; BSR set to: 7
 12561                           ;../src/w65_main.c: 674:  if ( binv.sw ) {
 12562   017DE8  0108               	movlb	8	; () banked
 12563   017DEA  5178               	movf	_binv& (0+255),w,b
 12564   017DEC  B4D8               	btfsc	status,2,c
 12565   017DEE  EFFB  F0BE         	goto	u35191
 12566   017DF2  EFFD  F0BE         	goto	u35190
 12567   017DF6                     u35191:
 12568   017DF6  EF80  F0BF         	goto	l1296
 12569   017DFA                     u35190:
 12570   017DFA                     
 12571                           ; BSR set to: 8
 12572                           ;../src/w65_main.c: 675:   if ( cpu_flg ) {
 12573   017DFA  0107               	movlb	7	; () banked
 12574   017DFC  51E5               	movf	_cpu_flg& (0+255),w,b
 12575   017DFE  B4D8               	btfsc	status,2,c
 12576   017E00  EF04  F0BF         	goto	u35201
 12577   017E04  EF06  F0BF         	goto	u35200
 12578   017E08                     u35201:
 12579   017E08  EF65  F0BF         	goto	l1297
 12580   017E0C                     u35200:
 12581   017E0C                     
 12582                           ; BSR set to: 7
 12583                           ;../src/w65_main.c: 676:    if ( mon ) {
 12584   017E0C  51C8               	movf	_mon& (0+255),w,b
 12585   017E0E  B4D8               	btfsc	status,2,c
 12586   017E10  EF0C  F0BF         	goto	u35211
 12587   017E14  EF0E  F0BF         	goto	u35210
 12588   017E18                     u35211:
 12589   017E18  EF2C  F0BF         	goto	l25363
 12590   017E1C                     u35210:
 12591   017E1C                     
 12592                           ; BSR set to: 7
 12593                           ;../src/w65_main.c: 677:     if ( !binv.sw_816 ) {
 12594   017E1C  0108               	movlb	8	; () banked
 12595   017E1E  5183               	movf	(_binv+11)& (0+255),w,b
 12596   017E20  A4D8               	btfss	status,2,c
 12597   017E22  EF15  F0BF         	goto	u35221
 12598   017E26  EF17  F0BF         	goto	u35220
 12599   017E2A                     u35221:
 12600   017E2A  EF49  F0BF         	goto	l25373
 12601   017E2E                     u35220:
 12602   017E2E                     
 12603                           ; BSR set to: 8
 12604                           ;../src/w65_main.c: 678:      arg[0] = mon02;
 12605   017E2E  0ED8               	movlw	low STR_50
 12606   017E30  0107               	movlb	7	; () banked
 12607   017E32  6F9E               	movwf	_arg& (0+255),b
 12608   017E34  0EFE               	movlw	high STR_50
 12609   017E36  6F9F               	movwf	(_arg+1)& (0+255),b
 12610   017E38                     
 12611                           ; BSR set to: 7
 12612                           ;../src/w65_main.c: 679:      mon = 0;
 12613   017E38  6BC8               	clrf	_mon& (0+255),b
 12614   017E3A                     
 12615                           ; BSR set to: 7
 12616                           ;../src/w65_main.c: 680:      flag = 1;
 12617   017E3A  0E01               	movlw	1
 12618   017E3C  6F16               	movwf	boot_file@flag& (0+255),b
 12619   017E3E                     
 12620                           ; BSR set to: 7
 12621                           ;../src/w65_main.c: 681:      printf("Reload %s for Emulation Mode...\r\n", arg[0]);
 12622   017E3E  0EAF               	movlw	low STR_109
 12623   017E40  0105               	movlb	5	; () banked
 12624   017E42  6FAD               	movwf	printf@fmt& (0+255),b
 12625   017E44  0EF7               	movlw	high STR_109
 12626   017E46  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12627   017E48  C79E  F5AF         	movff	_arg,?_printf+2
 12628   017E4C  C79F  F5B0         	movff	_arg+1,?_printf+3
 12629   017E50  ECDA  F0FF         	call	_printf	;wreg free
 12630   017E54  EF49  F0BF         	goto	l25373
 12631   017E58                     l25363:
 12632                           
 12633                           ; BSR set to: 7
 12634                           ;../src/w65_main.c: 685:     if ( binv.sw_816 ) {
 12635   017E58  0108               	movlb	8	; () banked
 12636   017E5A  5183               	movf	(_binv+11)& (0+255),w,b
 12637   017E5C  B4D8               	btfsc	status,2,c
 12638   017E5E  EF33  F0BF         	goto	u35231
 12639   017E62  EF35  F0BF         	goto	u35230
 12640   017E66                     u35231:
 12641   017E66  EF49  F0BF         	goto	l25373
 12642   017E6A                     u35230:
 12643   017E6A                     
 12644                           ; BSR set to: 8
 12645                           ;../src/w65_main.c: 686:      arg[0] = mon16;
 12646   017E6A  0EE3               	movlw	low STR_51
 12647   017E6C  0107               	movlb	7	; () banked
 12648   017E6E  6F9E               	movwf	_arg& (0+255),b
 12649   017E70  0EFE               	movlw	high STR_51
 12650   017E72  6F9F               	movwf	(_arg+1)& (0+255),b
 12651   017E74                     
 12652                           ; BSR set to: 7
 12653                           ;../src/w65_main.c: 687:      mon = 1;
 12654   017E74  0E01               	movlw	1
 12655   017E76  6FC8               	movwf	_mon& (0+255),b
 12656   017E78                     
 12657                           ; BSR set to: 7
 12658                           ;../src/w65_main.c: 688:      flag = 1;
 12659   017E78  0E01               	movlw	1
 12660   017E7A  6F16               	movwf	boot_file@flag& (0+255),b
 12661   017E7C                     
 12662                           ; BSR set to: 7
 12663                           ;../src/w65_main.c: 689:      printf("Reload %s for Native Mode...\r\n", arg[0]);
 12664   017E7C  0E97               	movlw	low STR_110
 12665   017E7E  0105               	movlb	5	; () banked
 12666   017E80  6FAD               	movwf	printf@fmt& (0+255),b
 12667   017E82  0EF8               	movlw	high STR_110
 12668   017E84  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12669   017E86  C79E  F5AF         	movff	_arg,?_printf+2
 12670   017E8A  C79F  F5B0         	movff	_arg+1,?_printf+3
 12671   017E8E  ECDA  F0FF         	call	_printf	;wreg free
 12672   017E92                     l25373:
 12673                           
 12674                           ;../src/w65_main.c: 692:    if ( flag ) {
 12675   017E92  0107               	movlb	7	; () banked
 12676   017E94  5116               	movf	boot_file@flag& (0+255),w,b
 12677   017E96  B4D8               	btfsc	status,2,c
 12678   017E98  EF50  F0BF         	goto	u35241
 12679   017E9C  EF52  F0BF         	goto	u35240
 12680   017EA0                     u35241:
 12681   017EA0  EF65  F0BF         	goto	l1297
 12682   017EA4                     u35240:
 12683   017EA4                     
 12684                           ; BSR set to: 7
 12685                           ;../src/w65_main.c: 693:     rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12686   017EA4  C79E  F700         	movff	_arg,load_program@fname
 12687   017EA8  C79F  F701         	movff	_arg+1,load_program@fname+1
 12688   017EAC  EC86  F0AE         	call	_load_program	;wreg free
 12689   017EB0  0107               	movlb	7	; () banked
 12690   017EB2  5100               	movf	?_load_program& (0+255),w,b
 12691   017EB4  6F18               	movwf	boot_file@rs& (0+255),b
 12692   017EB6                     
 12693                           ; BSR set to: 7
 12694                           ;../src/w65_main.c: 694:     if ( rs ) return 0;
 12695   017EB6  5118               	movf	boot_file@rs& (0+255),w,b
 12696   017EB8  B4D8               	btfsc	status,2,c
 12697   017EBA  EF61  F0BF         	goto	u35251
 12698   017EBE  EF63  F0BF         	goto	u35250
 12699   017EC2                     u35251:
 12700   017EC2  EF65  F0BF         	goto	l1297
 12701   017EC6                     u35250:
 12702   017EC6  EFB6  F0BE         	goto	l25325
 12703   017ECA                     l1297:
 12704                           
 12705                           ; BSR set to: 7
 12706                           ;../src/w65_main.c: 697:   binv.addr = binv.caddr;
 12707   017ECA  C87F  F879         	movff	_binv+7,_binv+1
 12708   017ECE  C880  F87A         	movff	_binv+8,_binv+2
 12709   017ED2                     
 12710                           ; BSR set to: 7
 12711                           ;../src/w65_main.c: 698:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 12712   017ED2  0E08               	movlw	8
 12713   017ED4  0108               	movlb	8	; () banked
 12714   017ED6  25B2               	addwf	(_fh+16)& (0+255),w,b
 12715   017ED8  6E04               	movwf	write_sram@addr^(0+1280),c
 12716   017EDA  0E00               	movlw	0
 12717   017EDC  21B3               	addwfc	(_fh+17)& (0+255),w,b
 12718   017EDE  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12719   017EE0  0E00               	movlw	0
 12720   017EE2  21B4               	addwfc	(_fh+18)& (0+255),w,b
 12721   017EE4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12722   017EE6  0E00               	movlw	0
 12723   017EE8  21B5               	addwfc	(_fh+19)& (0+255),w,b
 12724   017EEA  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12725   017EEC  0E78               	movlw	low _binv
 12726   017EEE  6E08               	movwf	write_sram@buf^(0+1280),c
 12727   017EF0  0E08               	movlw	high _binv
 12728   017EF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12729   017EF4  0E00               	movlw	0
 12730   017EF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12731   017EF8  0E07               	movlw	7
 12732   017EFA  6E0A               	movwf	write_sram@len^(0+1280),c
 12733   017EFC  EC9F  F0E8         	call	_write_sram	;wreg free
 12734   017F00                     l1296:
 12735                           
 12736                           ;../src/w65_main.c: 702:  write_sram(0, &cpu_flg, 1);
 12737   017F00  0E00               	movlw	0
 12738   017F02  6E04               	movwf	write_sram@addr^(0+1280),c
 12739   017F04  0E00               	movlw	0
 12740   017F06  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 12741   017F08  0E00               	movlw	0
 12742   017F0A  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 12743   017F0C  0E00               	movlw	0
 12744   017F0E  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 12745   017F10  0EE5               	movlw	low _cpu_flg
 12746   017F12  6E08               	movwf	write_sram@buf^(0+1280),c
 12747   017F14  0E07               	movlw	high _cpu_flg
 12748   017F16  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 12749   017F18  0E00               	movlw	0
 12750   017F1A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 12751   017F1C  0E01               	movlw	1
 12752   017F1E  6E0A               	movwf	write_sram@len^(0+1280),c
 12753   017F20  EC9F  F0E8         	call	_write_sram	;wreg free
 12754   017F24                     
 12755                           ;../src/w65_main.c: 704:  start_cpu();
 12756   017F24  ECF8  F0FE         	call	_start_cpu	;wreg free
 12757   017F28                     
 12758                           ;../src/w65_main.c: 705:  rs = drive_cpu();
 12759   017F28  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12760   017F2C  0107               	movlb	7	; () banked
 12761   017F2E  6F18               	movwf	boot_file@rs& (0+255),b
 12762   017F30                     
 12763                           ; BSR set to: 7
 12764                           ;../src/w65_main.c: 706:  if ( !rs ) {
 12765   017F30  5118               	movf	boot_file@rs& (0+255),w,b
 12766   017F32  A4D8               	btfss	status,2,c
 12767   017F34  EF9E  F0BF         	goto	u35261
 12768   017F38  EFA0  F0BF         	goto	u35260
 12769   017F3C                     u35261:
 12770   017F3C  EFD1  F0BE         	goto	l25335
 12771   017F40                     u35260:
 12772   017F40                     
 12773                           ; BSR set to: 7
 12774                           ;../src/w65_main.c: 707:   if ( !fh.bios_sw ) {
 12775   017F40  0108               	movlb	8	; () banked
 12776   017F42  51C1               	movf	(_fh+31)& (0+255),w,b
 12777   017F44  A4D8               	btfss	status,2,c
 12778   017F46  EFA7  F0BF         	goto	u35271
 12779   017F4A  EFA9  F0BF         	goto	u35270
 12780   017F4E                     u35271:
 12781   017F4E  EFDA  F0BF         	goto	l25417
 12782   017F52                     u35270:
 12783   017F52                     
 12784                           ; BSR set to: 8
 12785                           ;../src/w65_main.c: 708:    if (cpu_flg) {
 12786   017F52  0107               	movlb	7	; () banked
 12787   017F54  51E5               	movf	_cpu_flg& (0+255),w,b
 12788   017F56  B4D8               	btfsc	status,2,c
 12789   017F58  EFB0  F0BF         	goto	u35281
 12790   017F5C  EFB2  F0BF         	goto	u35280
 12791   017F60                     u35281:
 12792   017F60  EFBA  F0BF         	goto	l25399
 12793   017F64                     u35280:
 12794   017F64                     
 12795                           ; BSR set to: 7
 12796                           ;../src/w65_main.c: 709:     arg[0] = mon16;
 12797   017F64  0EE3               	movlw	low STR_51
 12798   017F66  6F9E               	movwf	_arg& (0+255),b
 12799   017F68  0EFE               	movlw	high STR_51
 12800   017F6A  6F9F               	movwf	(_arg+1)& (0+255),b
 12801   017F6C                     
 12802                           ; BSR set to: 7
 12803                           ;../src/w65_main.c: 710:     mon = 1;
 12804   017F6C  0E01               	movlw	1
 12805   017F6E  6FC8               	movwf	_mon& (0+255),b
 12806                           
 12807                           ;../src/w65_main.c: 711:    }
 12808   017F70  EFBF  F0BF         	goto	l25403
 12809   017F74                     l25399:
 12810                           
 12811                           ; BSR set to: 7
 12812                           ;../src/w65_main.c: 713:     arg[0] = mon02;
 12813   017F74  0ED8               	movlw	low STR_50
 12814   017F76  6F9E               	movwf	_arg& (0+255),b
 12815   017F78  0EFE               	movlw	high STR_50
 12816   017F7A  6F9F               	movwf	(_arg+1)& (0+255),b
 12817   017F7C                     
 12818                           ; BSR set to: 7
 12819                           ;../src/w65_main.c: 714:     mon = 0;
 12820   017F7C  6BC8               	clrf	_mon& (0+255),b
 12821   017F7E                     l25403:
 12822                           
 12823                           ; BSR set to: 7
 12824                           ;../src/w65_main.c: 716:    prt_reload();
 12825   017F7E  ECEB  F000         	call	_prt_reload	;wreg free
 12826   017F82                     
 12827                           ;../src/w65_main.c: 717:    rs = (FRESULT)load_program((uint8_t *)arg[0]);
 12828   017F82  C79E  F700         	movff	_arg,load_program@fname
 12829   017F86  C79F  F701         	movff	_arg+1,load_program@fname+1
 12830   017F8A  EC86  F0AE         	call	_load_program	;wreg free
 12831   017F8E  0107               	movlb	7	; () banked
 12832   017F90  5100               	movf	?_load_program& (0+255),w,b
 12833   017F92  6F18               	movwf	boot_file@rs& (0+255),b
 12834   017F94                     
 12835                           ; BSR set to: 7
 12836                           ;../src/w65_main.c: 718:    if ( rs ) return 0;
 12837   017F94  5118               	movf	boot_file@rs& (0+255),w,b
 12838   017F96  B4D8               	btfsc	status,2,c
 12839   017F98  EFD0  F0BF         	goto	u35291
 12840   017F9C  EFD2  F0BF         	goto	u35290
 12841   017FA0                     u35291:
 12842   017FA0  EFD4  F0BF         	goto	l25413
 12843   017FA4                     u35290:
 12844   017FA4  EFB6  F0BE         	goto	l25325
 12845   017FA8                     l25413:
 12846                           
 12847                           ; BSR set to: 7
 12848                           ;../src/w65_main.c: 719:    start_cpu();
 12849   017FA8  ECF8  F0FE         	call	_start_cpu	;wreg free
 12850   017FAC                     
 12851                           ;../src/w65_main.c: 720:    rs = drive_cpu();
 12852   017FAC  ECA0  F0FE         	call	_drive_cpu	;wreg free
 12853   017FB0  0107               	movlb	7	; () banked
 12854   017FB2  6F18               	movwf	boot_file@rs& (0+255),b
 12855   017FB4                     l25417:
 12856                           
 12857                           ;../src/w65_main.c: 722:   binv.sw = 0;
 12858   017FB4  0108               	movlb	8	; () banked
 12859   017FB6  6B78               	clrf	_binv& (0+255),b
 12860   017FB8  EFD1  F0BE         	goto	l25335
 12861   017FBC                     l1294:
 12862                           
 12863                           ; BSR set to: 7
 12864   017FBC  0012               	return		;funcret
 12865   017FBE                     __end_of_boot_file:
 12866                           	callstack 0
 12867                           
 12868 ;; *************** function _print_com *****************
 12869 ;; Defined at:
 12870 ;;		line 758 in file "../src/w65_main.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1    wreg      enum E17409
 12877 ;; Registers used:
 12878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used: 1
 12890 ;; Hardware stack levels required when called: 9
 12891 ;; This function calls:
 12892 ;;		_printf
 12893 ;; This function is called by:
 12894 ;;		_main
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text2
 12899   01E4D4                     __ptext2:
 12900                           	callstack 0
 12901   01E4D4                     _print_com:
 12902                           	callstack 117
 12903   01E4D4                     
 12904                           ;../src/w65_main.c: 760:  printf("\r\n<< MEZW65C_RAM Firmware Built-in command >>\r\n");
 12905   01E4D4  0E8C               	movlw	low STR_114
 12906   01E4D6  0105               	movlb	5	; () banked
 12907   01E4D8  6FAD               	movwf	printf@fmt& (0+255),b
 12908   01E4DA  0EF3               	movlw	high STR_114
 12909   01E4DC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12910   01E4DE  ECDA  F0FF         	call	_printf	;wreg free
 12911                           
 12912                           ;../src/w65_main.c: 761:  printf("  LS | DIR [file name | directory name\r\n");
 12913   01E4E2  0EA0               	movlw	low STR_115
 12914   01E4E4  0105               	movlb	5	; () banked
 12915   01E4E6  6FAD               	movwf	printf@fmt& (0+255),b
 12916   01E4E8  0EF5               	movlw	high STR_115
 12917   01E4EA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12918   01E4EC  ECDA  F0FF         	call	_printf	;wreg free
 12919                           
 12920                           ;../src/w65_main.c: 762:  printf("  CD [directory name]\n\r");
 12921   01E4F0  0E36               	movlw	low STR_116
 12922   01E4F2  0105               	movlb	5	; () banked
 12923   01E4F4  6FAD               	movwf	printf@fmt& (0+255),b
 12924   01E4F6  0EFB               	movlw	high STR_116
 12925   01E4F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12926   01E4FA  ECDA  F0FF         	call	_printf	;wreg free
 12927                           
 12928                           ;../src/w65_main.c: 763:  printf("  LOAD [L=load address(Hex)] file name\r\n");
 12929   01E4FE  0E77               	movlw	low STR_117
 12930   01E500  0105               	movlb	5	; () banked
 12931   01E502  6FAD               	movwf	printf@fmt& (0+255),b
 12932   01E504  0EF5               	movlw	high STR_117
 12933   01E506  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12934   01E508  ECDA  F0FF         	call	_printf	;wreg free
 12935                           
 12936                           ;../src/w65_main.c: 764:  printf("  MDUMP address(Hex)\r\n");
 12937   01E50C  0E93               	movlw	low STR_118
 12938   01E50E  0105               	movlb	5	; () banked
 12939   01E510  6FAD               	movwf	printf@fmt& (0+255),b
 12940   01E512  0EFB               	movlw	high STR_118
 12941   01E514  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12942   01E516  ECDA  F0FF         	call	_printf	;wreg free
 12943                           
 12944                           ;../src/w65_main.c: 765:  printf("  MONITOR [W]\r\n");
 12945   01E51A  0ED7               	movlw	low STR_119
 12946   01E51C  0105               	movlb	5	; () banked
 12947   01E51E  6FAD               	movwf	printf@fmt& (0+255),b
 12948   01E520  0EFD               	movlw	high STR_119
 12949   01E522  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12950   01E524  ECDA  F0FF         	call	_printf	;wreg free
 12951                           
 12952                           ;../src/w65_main.c: 766:  printf("  CSTART\r\n");
 12953   01E528  0EAC               	movlw	low STR_120
 12954   01E52A  0105               	movlb	5	; () banked
 12955   01E52C  6FAD               	movwf	printf@fmt& (0+255),b
 12956   01E52E  0EFE               	movlw	high STR_120
 12957   01E530  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12958   01E532  ECDA  F0FF         	call	_printf	;wreg free
 12959                           
 12960                           ;../src/w65_main.c: 767:  printf("  WSTART\r\n");
 12961   01E536  0EB7               	movlw	low STR_121
 12962   01E538  0105               	movlb	5	; () banked
 12963   01E53A  6FAD               	movwf	printf@fmt& (0+255),b
 12964   01E53C  0EFE               	movlw	high STR_121
 12965   01E53E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12966   01E540  ECDA  F0FF         	call	_printf	;wreg free
 12967                           
 12968                           ;../src/w65_main.c: 768:  printf("  RETI\r\n");
 12969   01E544  0E27               	movlw	low STR_122
 12970   01E546  0105               	movlb	5	; () banked
 12971   01E548  6FAD               	movwf	printf@fmt& (0+255),b
 12972   01E54A  0EFF               	movlw	high STR_122
 12973   01E54C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12974   01E54E  ECDA  F0FF         	call	_printf	;wreg free
 12975                           
 12976                           ;../src/w65_main.c: 769:  printf("  REG\r\n");
 12977   01E552  0E38               	movlw	low STR_123
 12978   01E554  0105               	movlb	5	; () banked
 12979   01E556  6FAD               	movwf	printf@fmt& (0+255),b
 12980   01E558  0EFF               	movlw	high STR_123
 12981   01E55A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12982   01E55C  ECDA  F0FF         	call	_printf	;wreg free
 12983                           
 12984                           ;../src/w65_main.c: 770:  printf("  SHOW file name\r\n");
 12985   01E560  0E22               	movlw	low STR_124
 12986   01E562  0105               	movlb	5	; () banked
 12987   01E564  6FAD               	movwf	printf@fmt& (0+255),b
 12988   01E566  0EFD               	movlw	high STR_124
 12989   01E568  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12990   01E56A  ECDA  F0FF         	call	_printf	;wreg free
 12991                           
 12992                           ;../src/w65_main.c: 771:  printf("  FLASH\r\n");
 12993   01E56E  0EF8               	movlw	low STR_125
 12994   01E570  0105               	movlb	5	; () banked
 12995   01E572  6FAD               	movwf	printf@fmt& (0+255),b
 12996   01E574  0EFE               	movlw	high STR_125
 12997   01E576  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 12998   01E578  ECDA  F0FF         	call	_printf	;wreg free
 12999                           
 13000                           ;../src/w65_main.c: 772:  printf("  HELP | ?\r\n");
 13001   01E57C  0E7A               	movlw	low STR_126
 13002   01E57E  0105               	movlb	5	; () banked
 13003   01E580  6FAD               	movwf	printf@fmt& (0+255),b
 13004   01E582  0EFE               	movlw	high STR_126
 13005   01E584  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13006   01E586  ECDA  F0FF         	call	_printf	;wreg free
 13007   01E58A                     
 13008                           ;../src/w65_main.c: 773:  return FR_OK;
 13009   01E58A  0E00               	movlw	0
 13010   01E58C  0012               	return		;funcret
 13011   01E58E                     __end_of_print_com:
 13012                           	callstack 0
 13013                           
 13014 ;; *************** function _flash_apl *****************
 13015 ;; Defined at:
 13016 ;;		line 933 in file "../src/w65_main.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;		None
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      enum E17409
 13023 ;; Registers used:
 13024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13034 ;;Total ram usage:        0 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 9
 13037 ;; This function calls:
 13038 ;;		_printf
 13039 ;; This function is called by:
 13040 ;;		_main
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           	psect	text3
 13045   01FC42                     __ptext3:
 13046                           	callstack 0
 13047   01FC42                     _flash_apl:
 13048                           	callstack 117
 13049   01FC42                     
 13050                           ;../src/w65_main.c: 934:  if ( binv.sw ) {
 13051   01FC42  0108               	movlb	8	; () banked
 13052   01FC44  5178               	movf	_binv& (0+255),w,b
 13053   01FC46  B4D8               	btfsc	status,2,c
 13054   01FC48  EF28  F0FE         	goto	u35451
 13055   01FC4C  EF2A  F0FE         	goto	u35450
 13056   01FC50                     u35451:
 13057   01FC50  EF39  F0FE         	goto	l25627
 13058   01FC54                     u35450:
 13059   01FC54                     
 13060                           ; BSR set to: 8
 13061                           ;../src/w65_main.c: 935:   printf("Terminate %s\r\n",binv.fname);
 13062   01FC54  0E25               	movlw	low STR_160
 13063   01FC56  0105               	movlb	5	; () banked
 13064   01FC58  6FAD               	movwf	printf@fmt& (0+255),b
 13065   01FC5A  0EFE               	movlw	high STR_160
 13066   01FC5C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13067   01FC5E  0E84               	movlw	low (_binv+12)
 13068   01FC60  6FAF               	movwf	(?_printf+2)& (0+255),b
 13069   01FC62  0E08               	movlw	high (_binv+12)
 13070   01FC64  6FB0               	movwf	(?_printf+3)& (0+255),b
 13071   01FC66  ECDA  F0FF         	call	_printf	;wreg free
 13072   01FC6A                     
 13073                           ;../src/w65_main.c: 936:   binv.sw = 0;
 13074   01FC6A  0108               	movlb	8	; () banked
 13075   01FC6C  6B78               	clrf	_binv& (0+255),b
 13076                           
 13077                           ;../src/w65_main.c: 937:  }
 13078   01FC6E  EF40  F0FE         	goto	l25629
 13079   01FC72                     l25627:
 13080                           
 13081                           ; BSR set to: 8
 13082   01FC72  0E83               	movlw	low STR_161
 13083   01FC74  0105               	movlb	5	; () banked
 13084   01FC76  6FAD               	movwf	printf@fmt& (0+255),b
 13085   01FC78  0EF9               	movlw	high STR_161
 13086   01FC7A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13087   01FC7C  ECDA  F0FF         	call	_printf	;wreg free
 13088   01FC80                     l25629:
 13089                           
 13090                           ;../src/w65_main.c: 940:  return FR_OK;
 13091   01FC80  0E00               	movlw	0
 13092   01FC82  0012               	return		;funcret
 13093   01FC84                     __end_of_flash_apl:
 13094                           	callstack 0
 13095                           
 13096 ;; *************** function _see_file *****************
 13097 ;; Defined at:
 13098 ;;		line 863 in file "../src/w65_main.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;		None
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;  header          2    7[BANK7 ] PTR struct .
 13103 ;;		 -> tmp_buf(512), 
 13104 ;;  br              2    4[BANK7 ] unsigned int 
 13105 ;;  rdbuf           2    2[BANK7 ] PTR void 
 13106 ;;		 -> tmp_buf(512), 
 13107 ;;  fr              1    6[BANK7 ] enum E17409
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      enum E17409
 13110 ;; Registers used:
 13111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13119 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;Total ram usage:        9 bytes
 13122 ;; Hardware stack levels used: 1
 13123 ;; Hardware stack levels required when called: 20
 13124 ;; This function calls:
 13125 ;;		_f_close
 13126 ;;		_f_open
 13127 ;;		_f_read
 13128 ;;		_printf
 13129 ;;		_strstr
 13130 ;; This function is called by:
 13131 ;;		_main
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135                           	psect	text4
 13136   0153D4                     __ptext4:
 13137                           	callstack 0
 13138   0153D4                     _see_file:
 13139                           	callstack 106
 13140   0153D4                     
 13141                           ;../src/w65_main.c: 865:  FRESULT fr;;../src/w65_main.c: 866:  void *rdbuf;;../src/w65_m
      +                          ain.c: 867:  UINT br;;../src/w65_main.c: 868:  file_header *header;;../src/w65_main.c: 8
      +                          70:  rdbuf = (void *)&tmp_buf[0][0];
 13142   0153D4  0EF8               	movlw	low _tmp_buf
 13143   0153D6  0107               	movlb	7	; () banked
 13144   0153D8  6F02               	movwf	see_file@rdbuf& (0+255),b
 13145   0153DA  0E13               	movlw	high _tmp_buf
 13146   0153DC  6F03               	movwf	(see_file@rdbuf+1)& (0+255),b
 13147                           
 13148                           ;../src/w65_main.c: 871:  header = (file_header *)&tmp_buf[0][0];
 13149   0153DE  0EF8               	movlw	low _tmp_buf
 13150   0153E0  6F07               	movwf	see_file@header& (0+255),b
 13151   0153E2  0E13               	movlw	high _tmp_buf
 13152   0153E4  6F08               	movwf	(see_file@header+1)& (0+255),b
 13153   0153E6                     
 13154                           ; BSR set to: 7
 13155                           ;../src/w65_main.c: 873:  fr = f_open(&rom_fl, (TCHAR *)arg[0], 0x01);
 13156   0153E6  0ED6               	movlw	low _rom_fl
 13157   0153E8  0106               	movlb	6	; () banked
 13158   0153EA  6FAF               	movwf	f_open@fp& (0+255),b
 13159   0153EC  0E0F               	movlw	high _rom_fl
 13160   0153EE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 13161   0153F0  C79E  F6B1         	movff	_arg,f_open@path
 13162   0153F4  C79F  F6B2         	movff	_arg+1,f_open@path+1
 13163   0153F8  0E01               	movlw	1
 13164   0153FA  6FB3               	movwf	f_open@mode& (0+255),b
 13165   0153FC  ECDB  F092         	call	_f_open	;wreg free
 13166   015400  0107               	movlb	7	; () banked
 13167   015402  6F06               	movwf	see_file@fr& (0+255),b
 13168   015404                     
 13169                           ; BSR set to: 7
 13170                           ;../src/w65_main.c: 874:  if ( fr != FR_OK ) {
 13171   015404  5106               	movf	see_file@fr& (0+255),w,b
 13172   015406  B4D8               	btfsc	status,2,c
 13173   015408  EF08  F0AA         	goto	u35351
 13174   01540C  EF0A  F0AA         	goto	u35350
 13175   015410                     u35351:
 13176   015410  EF14  F0AA         	goto	l1346
 13177   015414                     u35350:
 13178   015414                     
 13179                           ; BSR set to: 7
 13180                           ;../src/w65_main.c: 875:   printf("\r\nFile Open Error.\r\n");
 13181   015414  0E5B               	movlw	low STR_133
 13182   015416  0105               	movlb	5	; () banked
 13183   015418  6FAD               	movwf	printf@fmt& (0+255),b
 13184   01541A  0EFC               	movlw	high STR_133
 13185   01541C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13186   01541E  ECDA  F0FF         	call	_printf	;wreg free
 13187   015422                     l25551:
 13188                           
 13189                           ;../src/w65_main.c: 876:   return 0;
 13190   015422  0E00               	movlw	0
 13191   015424  EF37  F0AC         	goto	l1347
 13192   015428                     l1346:
 13193                           
 13194                           ; BSR set to: 7
 13195                           ;../src/w65_main.c: 879:  file_size = (uint16_t)((&rom_fl)->obj.objsize);
 13196   015428  0063  FF80  F7B9   	movff	_rom_fl+10,_file_size
 13197   01542E  0063  FF84  F7BA   	movff	_rom_fl+11,_file_size+1
 13198   015434                     
 13199                           ; BSR set to: 7
 13200                           ;../src/w65_main.c: 880:  fr = f_read(&rom_fl, rdbuf, 256 * 2, &br);
 13201   015434  0ED6               	movlw	low _rom_fl
 13202   015436  0106               	movlb	6	; () banked
 13203   015438  6F3E               	movwf	f_read@fp& (0+255),b
 13204   01543A  0E0F               	movlw	high _rom_fl
 13205   01543C  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 13206   01543E  C702  F640         	movff	see_file@rdbuf,f_read@buff
 13207   015442  C703  F641         	movff	see_file@rdbuf+1,f_read@buff+1
 13208   015446  0E02               	movlw	2
 13209   015448  6F43               	movwf	(f_read@btr+1)& (0+255),b
 13210   01544A  0E00               	movlw	0
 13211   01544C  6F42               	movwf	f_read@btr& (0+255),b
 13212   01544E  0E04               	movlw	low see_file@br
 13213   015450  6F44               	movwf	f_read@br& (0+255),b
 13214   015452  0E07               	movlw	high see_file@br
 13215   015454  6F45               	movwf	(f_read@br+1)& (0+255),b
 13216   015456  EC9B  F096         	call	_f_read	;wreg free
 13217   01545A  0107               	movlb	7	; () banked
 13218   01545C  6F06               	movwf	see_file@fr& (0+255),b
 13219   01545E                     
 13220                           ; BSR set to: 7
 13221                           ;../src/w65_main.c: 881:  if (fr == FR_OK) {
 13222   01545E  5106               	movf	see_file@fr& (0+255),w,b
 13223   015460  A4D8               	btfss	status,2,c
 13224   015462  EF35  F0AA         	goto	u35361
 13225   015466  EF37  F0AA         	goto	u35360
 13226   01546A                     u35361:
 13227   01546A  EF27  F0AC         	goto	l25615
 13228   01546E                     u35360:
 13229   01546E                     
 13230                           ; BSR set to: 7
 13231                           ;../src/w65_main.c: 883:   printf("\r\n%s : Size = $%04X bytes.\r\n", arg[0], file_size)
      +                          ;
 13232   01546E  0E11               	movlw	low STR_134
 13233   015470  0105               	movlb	5	; () banked
 13234   015472  6FAD               	movwf	printf@fmt& (0+255),b
 13235   015474  0EF9               	movlw	high STR_134
 13236   015476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13237   015478  C79E  F5AF         	movff	_arg,?_printf+2
 13238   01547C  C79F  F5B0         	movff	_arg+1,?_printf+3
 13239   015480  C7B9  F5B1         	movff	_file_size,?_printf+4
 13240   015484  C7BA  F5B2         	movff	_file_size+1,?_printf+5
 13241   015488  ECDA  F0FF         	call	_printf	;wreg free
 13242   01548C                     
 13243                           ;../src/w65_main.c: 884:   if (!strstr((const char *)header->mezID, mezID)) {
 13244   01548C  0E08               	movlw	8
 13245   01548E  0107               	movlb	7	; () banked
 13246   015490  2507               	addwf	see_file@header& (0+255),w,b
 13247   015492  6E0B               	movwf	strstr@h^(0+1280),c
 13248   015494  0E00               	movlw	0
 13249   015496  2108               	addwfc	(see_file@header+1)& (0+255),w,b
 13250   015498  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 13251   01549A  0E50               	movlw	low STR_46
 13252   01549C  6E0D               	movwf	strstr@n^(0+1280),c
 13253   01549E  0EFF               	movlw	high STR_46
 13254   0154A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 13255   0154A2  ECCF  F0EE         	call	_strstr	;wreg free
 13256   0154A6  500B               	movf	?_strstr^(0+1280),w,c
 13257   0154A8  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 13258   0154AA  A4D8               	btfss	status,2,c
 13259   0154AC  EF5A  F0AA         	goto	u35371
 13260   0154B0  EF5C  F0AA         	goto	u35370
 13261   0154B4                     u35371:
 13262   0154B4  EF65  F0AA         	goto	l25565
 13263   0154B8                     u35370:
 13264   0154B8                     
 13265                           ;../src/w65_main.c: 885:    printf("Not MEZW65C_RAM format file.\r\n");
 13266   0154B8  0EB6               	movlw	low STR_135
 13267   0154BA  0105               	movlb	5	; () banked
 13268   0154BC  6FAD               	movwf	printf@fmt& (0+255),b
 13269   0154BE  0EF8               	movlw	high STR_135
 13270   0154C0  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13271   0154C2  ECDA  F0FF         	call	_printf	;wreg free
 13272                           
 13273                           ;../src/w65_main.c: 886:   }
 13274   0154C6  EF27  F0AC         	goto	l25615
 13275   0154CA                     l25565:
 13276                           
 13277                           ;../src/w65_main.c: 888:    printf("FIle load address : $%06lX\r\n", (unsigned long)head
      +                          er->load_p );
 13278   0154CA  0E2E               	movlw	low STR_136
 13279   0154CC  0105               	movlb	5	; () banked
 13280   0154CE  6FAD               	movwf	printf@fmt& (0+255),b
 13281   0154D0  0EF9               	movlw	high STR_136
 13282   0154D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13283   0154D4  0107               	movlb	7	; () banked
 13284   0154D6  EE20 F010          	lfsr	2,16
 13285   0154DA  5107               	movf	see_file@header& (0+255),w,b
 13286   0154DC  26D9               	addwf	fsr2l,f,c
 13287   0154DE  5108               	movf	(see_file@header+1)& (0+255),w,b
 13288   0154E0  22DA               	addwfc	fsr2h,f,c
 13289   0154E2  C4DE F5AF          	movff	postinc2,?_printf+2
 13290   0154E6  C4DE F5B0          	movff	postinc2,?_printf+3
 13291   0154EA  C4DE F5B1          	movff	postinc2,?_printf+4
 13292   0154EE  C4DE F5B2          	movff	postinc2,?_printf+5
 13293   0154F2  ECDA  F0FF         	call	_printf	;wreg free
 13294                           
 13295                           ;../src/w65_main.c: 889:    printf("File Type : ");
 13296   0154F6  0E87               	movlw	low STR_137
 13297   0154F8  0105               	movlb	5	; () banked
 13298   0154FA  6FAD               	movwf	printf@fmt& (0+255),b
 13299   0154FC  0EFE               	movlw	high STR_137
 13300   0154FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13301   015500  ECDA  F0FF         	call	_printf	;wreg free
 13302                           
 13303                           ;../src/w65_main.c: 890:    switch (header->bios_sw) {
 13304   015504  EF11  F0AC         	goto	l25613
 13305   015508                     l25567:
 13306                           
 13307                           ; BSR set to: 7
 13308                           ;../src/w65_main.c: 893:      if ( !header->bios_sw ) printf("Stand-alone\n\r");
 13309   015508  EE20 F01F          	lfsr	2,31
 13310   01550C  5107               	movf	see_file@header& (0+255),w,b
 13311   01550E  26D9               	addwf	fsr2l,f,c
 13312   015510  5108               	movf	(see_file@header+1)& (0+255),w,b
 13313   015512  22DA               	addwfc	fsr2h,f,c
 13314   015514  50DF               	movf	indf2,w,c
 13315   015516  A4D8               	btfss	status,2,c
 13316   015518  EF90  F0AA         	goto	u35381
 13317   01551C  EF92  F0AA         	goto	u35380
 13318   015520                     u35381:
 13319   015520  EF9B  F0AA         	goto	l25571
 13320   015524                     u35380:
 13321   015524                     
 13322                           ; BSR set to: 7
 13323   015524  0E42               	movlw	low STR_138
 13324   015526  0105               	movlb	5	; () banked
 13325   015528  6FAD               	movwf	printf@fmt& (0+255),b
 13326   01552A  0EFE               	movlw	high STR_138
 13327   01552C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13328   01552E  ECDA  F0FF         	call	_printf	;wreg free
 13329   015532  EFA2  F0AA         	goto	l1355
 13330   015536                     l25571:
 13331                           
 13332                           ; BSR set to: 7
 13333   015536  0E02               	movlw	low STR_139
 13334   015538  0105               	movlb	5	; () banked
 13335   01553A  6FAD               	movwf	printf@fmt& (0+255),b
 13336   01553C  0EFF               	movlw	high STR_139
 13337   01553E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13338   015540  ECDA  F0FF         	call	_printf	;wreg free
 13339   015544                     l1355:
 13340                           
 13341                           ;../src/w65_main.c: 895:      printf("Operational Mode : ");
 13342   015544  0EC2               	movlw	low STR_140
 13343   015546  0105               	movlb	5	; () banked
 13344   015548  6FAD               	movwf	printf@fmt& (0+255),b
 13345   01554A  0EFC               	movlw	high STR_140
 13346   01554C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13347   01554E  ECDA  F0FF         	call	_printf	;wreg free
 13348   015552                     
 13349                           ;../src/w65_main.c: 896:      if (!header->sw_816) printf("W65C02 (Emulation Mode)\n\r")
      +                          ;
 13350   015552  0107               	movlb	7	; () banked
 13351   015554  EE20 F018          	lfsr	2,24
 13352   015558  5107               	movf	see_file@header& (0+255),w,b
 13353   01555A  26D9               	addwf	fsr2l,f,c
 13354   01555C  5108               	movf	(see_file@header+1)& (0+255),w,b
 13355   01555E  22DA               	addwfc	fsr2h,f,c
 13356   015560  50DF               	movf	indf2,w,c
 13357   015562  A4D8               	btfss	status,2,c
 13358   015564  EFB6  F0AA         	goto	u35391
 13359   015568  EFB8  F0AA         	goto	u35390
 13360   01556C                     u35391:
 13361   01556C  EFC1  F0AA         	goto	l25577
 13362   015570                     u35390:
 13363   015570                     
 13364                           ; BSR set to: 7
 13365   015570  0E08               	movlw	low STR_141
 13366   015572  0105               	movlb	5	; () banked
 13367   015574  6FAD               	movwf	printf@fmt& (0+255),b
 13368   015576  0EFA               	movlw	high STR_141
 13369   015578  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13370   01557A  ECDA  F0FF         	call	_printf	;wreg free
 13371   01557E  EFC8  F0AA         	goto	l1357
 13372   015582                     l25577:
 13373                           
 13374                           ; BSR set to: 7
 13375   015582  0E1A               	movlw	low STR_142
 13376   015584  0105               	movlb	5	; () banked
 13377   015586  6FAD               	movwf	printf@fmt& (0+255),b
 13378   015588  0EFC               	movlw	high STR_142
 13379   01558A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13380   01558C  ECDA  F0FF         	call	_printf	;wreg free
 13381   015590                     l1357:
 13382                           
 13383                           ;../src/w65_main.c: 898:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 13384   015590  0EA4               	movlw	low STR_143
 13385   015592  0105               	movlb	5	; () banked
 13386   015594  6FAD               	movwf	printf@fmt& (0+255),b
 13387   015596  0EFD               	movlw	high STR_143
 13388   015598  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13389   01559A  0107               	movlb	7	; () banked
 13390   01559C  EE20 F001          	lfsr	2,1
 13391   0155A0  5107               	movf	see_file@header& (0+255),w,b
 13392   0155A2  26D9               	addwf	fsr2l,f,c
 13393   0155A4  5108               	movf	(see_file@header+1)& (0+255),w,b
 13394   0155A6  22DA               	addwfc	fsr2h,f,c
 13395   0155A8  C4DE F5AF          	movff	postinc2,?_printf+2
 13396   0155AC  C4DD F5B0          	movff	postdec2,?_printf+3
 13397   0155B0  ECDA  F0FF         	call	_printf	;wreg free
 13398                           
 13399                           ;../src/w65_main.c: 899:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 13400   0155B4  0EB5               	movlw	low STR_144
 13401   0155B6  0105               	movlb	5	; () banked
 13402   0155B8  6FAD               	movwf	printf@fmt& (0+255),b
 13403   0155BA  0EFD               	movlw	high STR_144
 13404   0155BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13405   0155BE  0107               	movlb	7	; () banked
 13406   0155C0  EE20 F004          	lfsr	2,4
 13407   0155C4  5107               	movf	see_file@header& (0+255),w,b
 13408   0155C6  26D9               	addwf	fsr2l,f,c
 13409   0155C8  5108               	movf	(see_file@header+1)& (0+255),w,b
 13410   0155CA  22DA               	addwfc	fsr2h,f,c
 13411   0155CC  C4DE F5AF          	movff	postinc2,?_printf+2
 13412   0155D0  C4DD F5B0          	movff	postdec2,?_printf+3
 13413   0155D4  ECDA  F0FF         	call	_printf	;wreg free
 13414   0155D8                     
 13415                           ;../src/w65_main.c: 900:      if (header->sw_816 == 1) printf("DPR : $%04X PBR : $00 DBR
      +                           : $00\r\n",header->direct_page);
 13416   0155D8  0107               	movlb	7	; () banked
 13417   0155DA  EE20 F018          	lfsr	2,24
 13418   0155DE  5107               	movf	see_file@header& (0+255),w,b
 13419   0155E0  26D9               	addwf	fsr2l,f,c
 13420   0155E2  5108               	movf	(see_file@header+1)& (0+255),w,b
 13421   0155E4  22DA               	addwfc	fsr2h,f,c
 13422   0155E6  04DE               	decf	postinc2,w,c
 13423   0155E8  A4D8               	btfss	status,2,c
 13424   0155EA  EFF9  F0AA         	goto	u35401
 13425   0155EE  EFFB  F0AA         	goto	u35400
 13426   0155F2                     u35401:
 13427   0155F2  EF0D  F0AB         	goto	l1358
 13428   0155F6                     u35400:
 13429   0155F6                     
 13430                           ; BSR set to: 7
 13431   0155F6  0ED1               	movlw	low STR_145
 13432   0155F8  0105               	movlb	5	; () banked
 13433   0155FA  6FAD               	movwf	printf@fmt& (0+255),b
 13434   0155FC  0EF7               	movlw	high STR_145
 13435   0155FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13436   015600  0107               	movlb	7	; () banked
 13437   015602  EE20 F006          	lfsr	2,6
 13438   015606  5107               	movf	see_file@header& (0+255),w,b
 13439   015608  26D9               	addwf	fsr2l,f,c
 13440   01560A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13441   01560C  22DA               	addwfc	fsr2h,f,c
 13442   01560E  C4DE F5AF          	movff	postinc2,?_printf+2
 13443   015612  C4DD F5B0          	movff	postdec2,?_printf+3
 13444   015616  ECDA  F0FF         	call	_printf	;wreg free
 13445   01561A                     l1358:
 13446                           
 13447                           ;../src/w65_main.c: 901:      printf("PIC I/F Shared memory : $%06lX\r\n",(unsigned long
      +                          )header->picif_p);
 13448   01561A  0E36               	movlw	low STR_146
 13449   01561C  0105               	movlb	5	; () banked
 13450   01561E  6FAD               	movwf	printf@fmt& (0+255),b
 13451   015620  0EF8               	movlw	high STR_146
 13452   015622  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13453   015624  0107               	movlb	7	; () banked
 13454   015626  EE20 F014          	lfsr	2,20
 13455   01562A  5107               	movf	see_file@header& (0+255),w,b
 13456   01562C  26D9               	addwf	fsr2l,f,c
 13457   01562E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13458   015630  22DA               	addwfc	fsr2h,f,c
 13459   015632  C4DE F5AF          	movff	postinc2,?_printf+2
 13460   015636  C4DE F5B0          	movff	postinc2,?_printf+3
 13461   01563A  C4DE F5B1          	movff	postinc2,?_printf+4
 13462   01563E  C4DE F5B2          	movff	postinc2,?_printf+5
 13463   015642  ECDA  F0FF         	call	_printf	;wreg free
 13464   015646                     
 13465                           ;../src/w65_main.c: 902:      if ( header->bios_sw == 2 ) {
 13466   015646  0107               	movlb	7	; () banked
 13467   015648  EE20 F01F          	lfsr	2,31
 13468   01564C  5107               	movf	see_file@header& (0+255),w,b
 13469   01564E  26D9               	addwf	fsr2l,f,c
 13470   015650  5108               	movf	(see_file@header+1)& (0+255),w,b
 13471   015652  22DA               	addwfc	fsr2h,f,c
 13472   015654  0E02               	movlw	2
 13473   015656  18DE               	xorwf	postinc2,w,c
 13474   015658  A4D8               	btfss	status,2,c
 13475   01565A  EF31  F0AB         	goto	u35411
 13476   01565E  EF33  F0AB         	goto	u35410
 13477   015662                     u35411:
 13478   015662  EF27  F0AC         	goto	l25615
 13479   015666                     u35410:
 13480   015666                     
 13481                           ; BSR set to: 7
 13482                           ;../src/w65_main.c: 903:       if( header->irq_sw ) printf("IRQ : Support, ");
 13483   015666  EE20 F019          	lfsr	2,25
 13484   01566A  5107               	movf	see_file@header& (0+255),w,b
 13485   01566C  26D9               	addwf	fsr2l,f,c
 13486   01566E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13487   015670  22DA               	addwfc	fsr2h,f,c
 13488   015672  50DF               	movf	indf2,w,c
 13489   015674  B4D8               	btfsc	status,2,c
 13490   015676  EF3F  F0AB         	goto	u35421
 13491   01567A  EF41  F0AB         	goto	u35420
 13492   01567E                     u35421:
 13493   01567E  EF4A  F0AB         	goto	l25589
 13494   015682                     u35420:
 13495   015682                     
 13496                           ; BSR set to: 7
 13497   015682  0EF7               	movlw	low STR_147
 13498   015684  0105               	movlb	5	; () banked
 13499   015686  6FAD               	movwf	printf@fmt& (0+255),b
 13500   015688  0EFD               	movlw	high STR_147
 13501   01568A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13502   01568C  ECDA  F0FF         	call	_printf	;wreg free
 13503   015690  EF51  F0AB         	goto	l25591
 13504   015694                     l25589:
 13505                           
 13506                           ; BSR set to: 7
 13507   015694  0E48               	movlw	low STR_148
 13508   015696  0105               	movlb	5	; () banked
 13509   015698  6FAD               	movwf	printf@fmt& (0+255),b
 13510   01569A  0EFD               	movlw	high STR_148
 13511   01569C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13512   01569E  ECDA  F0FF         	call	_printf	;wreg free
 13513   0156A2                     l25591:
 13514                           
 13515                           ;../src/w65_main.c: 905:       if( header->nmi_sw ) printf("MNI : Support\r\n");
 13516   0156A2  0107               	movlb	7	; () banked
 13517   0156A4  EE20 F01E          	lfsr	2,30
 13518   0156A8  5107               	movf	see_file@header& (0+255),w,b
 13519   0156AA  26D9               	addwf	fsr2l,f,c
 13520   0156AC  5108               	movf	(see_file@header+1)& (0+255),w,b
 13521   0156AE  22DA               	addwfc	fsr2h,f,c
 13522   0156B0  50DF               	movf	indf2,w,c
 13523   0156B2  B4D8               	btfsc	status,2,c
 13524   0156B4  EF5E  F0AB         	goto	u35431
 13525   0156B8  EF60  F0AB         	goto	u35430
 13526   0156BC                     u35431:
 13527   0156BC  EF69  F0AB         	goto	l25595
 13528   0156C0                     u35430:
 13529   0156C0                     
 13530                           ; BSR set to: 7
 13531   0156C0  0EE7               	movlw	low STR_149
 13532   0156C2  0105               	movlb	5	; () banked
 13533   0156C4  6FAD               	movwf	printf@fmt& (0+255),b
 13534   0156C6  0EFD               	movlw	high STR_149
 13535   0156C8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13536   0156CA  ECDA  F0FF         	call	_printf	;wreg free
 13537   0156CE  EF27  F0AC         	goto	l25615
 13538   0156D2                     l25595:
 13539                           
 13540                           ; BSR set to: 7
 13541   0156D2  0E35               	movlw	low STR_150
 13542   0156D4  0105               	movlb	5	; () banked
 13543   0156D6  6FAD               	movwf	printf@fmt& (0+255),b
 13544   0156D8  0EFD               	movlw	high STR_150
 13545   0156DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13546   0156DC  ECDA  F0FF         	call	_printf	;wreg free
 13547   0156E0  EF27  F0AC         	goto	l25615
 13548   0156E4                     l25597:
 13549                           
 13550                           ; BSR set to: 7
 13551                           ;../src/w65_main.c: 910:      printf("Using BIOS CALL\n\r");
 13552   0156E4  0E80               	movlw	low STR_151
 13553   0156E6  0105               	movlb	5	; () banked
 13554   0156E8  6FAD               	movwf	printf@fmt& (0+255),b
 13555   0156EA  0EFD               	movlw	high STR_151
 13556   0156EC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13557   0156EE  ECDA  F0FF         	call	_printf	;wreg free
 13558                           
 13559                           ;../src/w65_main.c: 911:      printf("Operational Mode : ");
 13560   0156F2  0EC2               	movlw	low STR_140
 13561   0156F4  0105               	movlb	5	; () banked
 13562   0156F6  6FAD               	movwf	printf@fmt& (0+255),b
 13563   0156F8  0EFC               	movlw	high STR_140
 13564   0156FA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13565   0156FC  ECDA  F0FF         	call	_printf	;wreg free
 13566                           
 13567                           ;../src/w65_main.c: 912:      switch (header->sw_816) {
 13568   015700  EF9D  F0AB         	goto	l25605
 13569   015704                     l25599:
 13570                           
 13571                           ; BSR set to: 7
 13572                           ;../src/w65_main.c: 914:        printf("W65C02 (Emulation Mode)\n\r");
 13573   015704  0E08               	movlw	low STR_141
 13574   015706  0105               	movlb	5	; () banked
 13575   015708  6FAD               	movwf	printf@fmt& (0+255),b
 13576   01570A  0EFA               	movlw	high STR_141
 13577   01570C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13578   01570E  ECDA  F0FF         	call	_printf	;wreg free
 13579                           
 13580                           ;../src/w65_main.c: 915:        break;
 13581   015712  EFB3  F0AB         	goto	l25607
 13582   015716                     l25601:
 13583                           
 13584                           ; BSR set to: 7
 13585                           ;../src/w65_main.c: 917:        printf("W65C816 Native mode\n\r");
 13586   015716  0E1A               	movlw	low STR_142
 13587   015718  0105               	movlb	5	; () banked
 13588   01571A  6FAD               	movwf	printf@fmt& (0+255),b
 13589   01571C  0EFC               	movlw	high STR_142
 13590   01571E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13591   015720  ECDA  F0FF         	call	_printf	;wreg free
 13592                           
 13593                           ;../src/w65_main.c: 918:        break;
 13594   015724  EFB3  F0AB         	goto	l25607
 13595   015728                     l25603:
 13596                           
 13597                           ; BSR set to: 7
 13598                           ;../src/w65_main.c: 920:        printf("Both W65C02 and W65C816\n\r");
 13599   015728  0E22               	movlw	low STR_155
 13600   01572A  0105               	movlb	5	; () banked
 13601   01572C  6FAD               	movwf	printf@fmt& (0+255),b
 13602   01572E  0EFA               	movlw	high STR_155
 13603   015730  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13604   015732  ECDA  F0FF         	call	_printf	;wreg free
 13605                           
 13606                           ;../src/w65_main.c: 921:      }
 13607   015736  EFB3  F0AB         	goto	l25607
 13608   01573A                     l25605:
 13609   01573A  0107               	movlb	7	; () banked
 13610   01573C  EE20 F018          	lfsr	2,24
 13611   015740  5107               	movf	see_file@header& (0+255),w,b
 13612   015742  26D9               	addwf	fsr2l,f,c
 13613   015744  5108               	movf	(see_file@header+1)& (0+255),w,b
 13614   015746  22DA               	addwfc	fsr2h,f,c
 13615   015748  50DF               	movf	indf2,w,c
 13616                           
 13617                           ; Switch size 1, requested type "simple"
 13618                           ; Number of cases is 3, Range of values is 0 to 2
 13619                           ; switch strategies available:
 13620                           ; Name         Instructions Cycles
 13621                           ; simple_byte           10     6 (average)
 13622                           ;	Chosen strategy is simple_byte
 13623   01574A  0A00               	xorlw	0	; case 0
 13624   01574C  B4D8               	btfsc	status,2,c
 13625   01574E  EF82  F0AB         	goto	l25599
 13626   015752  0A01               	xorlw	1	; case 1
 13627   015754  B4D8               	btfsc	status,2,c
 13628   015756  EF8B  F0AB         	goto	l25601
 13629   01575A  0A03               	xorlw	3	; case 2
 13630   01575C  B4D8               	btfsc	status,2,c
 13631   01575E  EF94  F0AB         	goto	l25603
 13632   015762  EFB3  F0AB         	goto	l25607
 13633   015766                     l25607:
 13634                           
 13635                           ;../src/w65_main.c: 922:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 13636   015766  0EA4               	movlw	low STR_143
 13637   015768  0105               	movlb	5	; () banked
 13638   01576A  6FAD               	movwf	printf@fmt& (0+255),b
 13639   01576C  0EFD               	movlw	high STR_143
 13640   01576E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13641   015770  0107               	movlb	7	; () banked
 13642   015772  EE20 F001          	lfsr	2,1
 13643   015776  5107               	movf	see_file@header& (0+255),w,b
 13644   015778  26D9               	addwf	fsr2l,f,c
 13645   01577A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13646   01577C  22DA               	addwfc	fsr2h,f,c
 13647   01577E  C4DE F5AF          	movff	postinc2,?_printf+2
 13648   015782  C4DD F5B0          	movff	postdec2,?_printf+3
 13649   015786  ECDA  F0FF         	call	_printf	;wreg free
 13650                           
 13651                           ;../src/w65_main.c: 923:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 13652   01578A  0EB5               	movlw	low STR_144
 13653   01578C  0105               	movlb	5	; () banked
 13654   01578E  6FAD               	movwf	printf@fmt& (0+255),b
 13655   015790  0EFD               	movlw	high STR_144
 13656   015792  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13657   015794  0107               	movlb	7	; () banked
 13658   015796  EE20 F004          	lfsr	2,4
 13659   01579A  5107               	movf	see_file@header& (0+255),w,b
 13660   01579C  26D9               	addwf	fsr2l,f,c
 13661   01579E  5108               	movf	(see_file@header+1)& (0+255),w,b
 13662   0157A0  22DA               	addwfc	fsr2h,f,c
 13663   0157A2  C4DE F5AF          	movff	postinc2,?_printf+2
 13664   0157A6  C4DD F5B0          	movff	postdec2,?_printf+3
 13665   0157AA  ECDA  F0FF         	call	_printf	;wreg free
 13666   0157AE                     
 13667                           ;../src/w65_main.c: 924:      if (header->sw_816) printf("DPR : $%04X PBR : $%02X DBR : 
      +                          $%02X\r\n",header->direct_page, header->op1, header->op2);
 13668   0157AE  0107               	movlb	7	; () banked
 13669   0157B0  EE20 F018          	lfsr	2,24
 13670   0157B4  5107               	movf	see_file@header& (0+255),w,b
 13671   0157B6  26D9               	addwf	fsr2l,f,c
 13672   0157B8  5108               	movf	(see_file@header+1)& (0+255),w,b
 13673   0157BA  22DA               	addwfc	fsr2h,f,c
 13674   0157BC  50DF               	movf	indf2,w,c
 13675   0157BE  B4D8               	btfsc	status,2,c
 13676   0157C0  EFE4  F0AB         	goto	u35441
 13677   0157C4  EFE6  F0AB         	goto	u35440
 13678   0157C8                     u35441:
 13679   0157C8  EF27  F0AC         	goto	l1350
 13680   0157CC                     u35440:
 13681   0157CC                     
 13682                           ; BSR set to: 7
 13683   0157CC  0E68               	movlw	low STR_158
 13684   0157CE  0105               	movlb	5	; () banked
 13685   0157D0  6FAD               	movwf	printf@fmt& (0+255),b
 13686   0157D2  0EF6               	movlw	high STR_158
 13687   0157D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13688   0157D6  0107               	movlb	7	; () banked
 13689   0157D8  EE20 F006          	lfsr	2,6
 13690   0157DC  5107               	movf	see_file@header& (0+255),w,b
 13691   0157DE  26D9               	addwf	fsr2l,f,c
 13692   0157E0  5108               	movf	(see_file@header+1)& (0+255),w,b
 13693   0157E2  22DA               	addwfc	fsr2h,f,c
 13694   0157E4  C4DE F5AF          	movff	postinc2,?_printf+2
 13695   0157E8  C4DD F5B0          	movff	postdec2,?_printf+3
 13696   0157EC  C707  F4D9         	movff	see_file@header,fsr2l
 13697   0157F0  C708  F4DA         	movff	see_file@header+1,fsr2h
 13698   0157F4  50DF               	movf	indf2,w,c
 13699   0157F6  6F00               	movwf	??_see_file& (0+255),b
 13700   0157F8  5100               	movf	??_see_file& (0+255),w,b
 13701   0157FA  0105               	movlb	5	; () banked
 13702   0157FC  6FB1               	movwf	(?_printf+4)& (0+255),b
 13703   0157FE  6BB2               	clrf	(?_printf+5)& (0+255),b
 13704   015800  0107               	movlb	7	; () banked
 13705   015802  EE20 F003          	lfsr	2,3
 13706   015806  5107               	movf	see_file@header& (0+255),w,b
 13707   015808  26D9               	addwf	fsr2l,f,c
 13708   01580A  5108               	movf	(see_file@header+1)& (0+255),w,b
 13709   01580C  22DA               	addwfc	fsr2h,f,c
 13710   01580E  50DF               	movf	indf2,w,c
 13711   015810  6F01               	movwf	(??_see_file+1)& (0+255),b
 13712   015812  5101               	movf	(??_see_file+1)& (0+255),w,b
 13713   015814  0105               	movlb	5	; () banked
 13714   015816  6FB3               	movwf	(?_printf+6)& (0+255),b
 13715   015818  6BB4               	clrf	(?_printf+7)& (0+255),b
 13716   01581A  ECDA  F0FF         	call	_printf	;wreg free
 13717   01581E  EF27  F0AC         	goto	l25615
 13718   015822                     l25613:
 13719   015822  0107               	movlb	7	; () banked
 13720   015824  EE20 F01F          	lfsr	2,31
 13721   015828  5107               	movf	see_file@header& (0+255),w,b
 13722   01582A  26D9               	addwf	fsr2l,f,c
 13723   01582C  5108               	movf	(see_file@header+1)& (0+255),w,b
 13724   01582E  22DA               	addwfc	fsr2h,f,c
 13725   015830  50DF               	movf	indf2,w,c
 13726                           
 13727                           ; Switch size 1, requested type "simple"
 13728                           ; Number of cases is 3, Range of values is 0 to 2
 13729                           ; switch strategies available:
 13730                           ; Name         Instructions Cycles
 13731                           ; simple_byte           10     6 (average)
 13732                           ;	Chosen strategy is simple_byte
 13733   015832  0A00               	xorlw	0	; case 0
 13734   015834  B4D8               	btfsc	status,2,c
 13735   015836  EF84  F0AA         	goto	l25567
 13736   01583A  0A01               	xorlw	1	; case 1
 13737   01583C  B4D8               	btfsc	status,2,c
 13738   01583E  EF72  F0AB         	goto	l25597
 13739   015842  0A03               	xorlw	3	; case 2
 13740   015844  B4D8               	btfsc	status,2,c
 13741   015846  EF84  F0AA         	goto	l25567
 13742   01584A  EF27  F0AC         	goto	l25615
 13743   01584E                     l1350:
 13744   01584E                     l25615:
 13745                           
 13746                           ;../src/w65_main.c: 928:  printf("\r\n");
 13747   01584E  0E90               	movlw	low (STR_88+20)
 13748   015850  0105               	movlb	5	; () banked
 13749   015852  6FAD               	movwf	printf@fmt& (0+255),b
 13750   015854  0EFB               	movlw	high (STR_88+20)
 13751   015856  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13752   015858  ECDA  F0FF         	call	_printf	;wreg free
 13753                           
 13754                           ;../src/w65_main.c: 929:  f_close(&rom_fl);
 13755   01585C  0ED6               	movlw	low _rom_fl
 13756   01585E  0106               	movlb	6	; () banked
 13757   015860  6F2F               	movwf	f_close@fp& (0+255),b
 13758   015862  0E0F               	movlw	high _rom_fl
 13759   015864  6F30               	movwf	(f_close@fp+1)& (0+255),b
 13760   015866  ECDB  F0FB         	call	_f_close	;wreg free
 13761   01586A  EF11  F0AA         	goto	l25551
 13762   01586E                     l1347:
 13763   01586E  0012               	return		;funcret
 13764   015870                     __end_of_see_file:
 13765                           	callstack 0
 13766                           
 13767 ;; *************** function _mem_dump *****************
 13768 ;; Defined at:
 13769 ;;		line 850 in file "../src/w65_main.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;		None
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;  addr            4  128[BANK5 ] unsigned long 
 13774 ;;  p               2  126[BANK5 ] PTR unsigned char 
 13775 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 13776 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  1    wreg      enum E17409
 13779 ;; Registers used:
 13780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13787 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13790 ;;Total ram usage:        6 bytes
 13791 ;; Hardware stack levels used: 1
 13792 ;; Hardware stack levels required when called: 10
 13793 ;; This function calls:
 13794 ;;		_get_hex
 13795 ;;		_read_sram
 13796 ;;		_util_addrdump
 13797 ;; This function is called by:
 13798 ;;		_main
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           	psect	text5
 13803   01F370                     __ptext5:
 13804                           	callstack 0
 13805   01F370                     _mem_dump:
 13806                           	callstack 116
 13807   01F370                     
 13808                           ;../src/w65_main.c: 852:  uint32_t addr;;../src/w65_main.c: 853:  char *p;;../src/w65_ma
      +                          in.c: 855:  p = arg[0];
 13809   01F370  C79E  F5DE         	movff	_arg,mem_dump@p
 13810   01F374  C79F  F5DF         	movff	_arg+1,mem_dump@p+1
 13811   01F378                     
 13812                           ;../src/w65_main.c: 856:  addr = get_hex( p );
 13813   01F378  C5DE  F504         	movff	mem_dump@p,get_hex@buf
 13814   01F37C  C5DF  F505         	movff	mem_dump@p+1,get_hex@buf+1
 13815   01F380  EC63  F0E3         	call	_get_hex	;wreg free
 13816   01F384  C504  F5E0         	movff	?_get_hex,mem_dump@addr
 13817   01F388  C505  F5E1         	movff	?_get_hex+1,mem_dump@addr+1
 13818   01F38C  C506  F5E2         	movff	?_get_hex+2,mem_dump@addr+2
 13819   01F390  C507  F5E3         	movff	?_get_hex+3,mem_dump@addr+3
 13820   01F394                     
 13821                           ;../src/w65_main.c: 858:  read_sram(addr, (uint8_t *)&tmp_buf[0][0], 128);
 13822   01F394  C5E0  F504         	movff	mem_dump@addr,read_sram@addr
 13823   01F398  C5E1  F505         	movff	mem_dump@addr+1,read_sram@addr+1
 13824   01F39C  C5E2  F506         	movff	mem_dump@addr+2,read_sram@addr+2
 13825   01F3A0  C5E3  F507         	movff	mem_dump@addr+3,read_sram@addr+3
 13826   01F3A4  0EF8               	movlw	low _tmp_buf
 13827   01F3A6  6E08               	movwf	read_sram@buf^(0+1280),c
 13828   01F3A8  0E13               	movlw	high _tmp_buf
 13829   01F3AA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 13830   01F3AC  0E00               	movlw	0
 13831   01F3AE  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 13832   01F3B0  0E80               	movlw	128
 13833   01F3B2  6E0A               	movwf	read_sram@len^(0+1280),c
 13834   01F3B4  EC0C  F0F2         	call	_read_sram	;wreg free
 13835   01F3B8                     
 13836                           ;../src/w65_main.c: 859:  util_addrdump("Mem ", addr, (const void *)&tmp_buf[0][0], 128)
      +                          ;
 13837   01F3B8  0EA8               	movlw	low STR_132
 13838   01F3BA  0105               	movlb	5	; () banked
 13839   01F3BC  6FBD               	movwf	util_addrdump@header& (0+255),b
 13840   01F3BE  0EFF               	movlw	high STR_132
 13841   01F3C0  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 13842   01F3C2  C5E0  F5BF         	movff	mem_dump@addr,util_addrdump@addr_offs
 13843   01F3C6  C5E1  F5C0         	movff	mem_dump@addr+1,util_addrdump@addr_offs+1
 13844   01F3CA  C5E2  F5C1         	movff	mem_dump@addr+2,util_addrdump@addr_offs+2
 13845   01F3CE  C5E3  F5C2         	movff	mem_dump@addr+3,util_addrdump@addr_offs+3
 13846   01F3D2  0EF8               	movlw	low _tmp_buf
 13847   01F3D4  6FC3               	movwf	util_addrdump@addr& (0+255),b
 13848   01F3D6  0E13               	movlw	high _tmp_buf
 13849   01F3D8  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 13850   01F3DA  0E00               	movlw	0
 13851   01F3DC  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 13852   01F3DE  0E80               	movlw	128
 13853   01F3E0  6FC5               	movwf	util_addrdump@size& (0+255),b
 13854   01F3E2  EC4A  F0E1         	call	_util_addrdump	;wreg free
 13855   01F3E6                     
 13856                           ;../src/w65_main.c: 860:  return FR_OK;
 13857   01F3E6  0E00               	movlw	0
 13858   01F3E8  0012               	return		;funcret
 13859   01F3EA                     __end_of_mem_dump:
 13860                           	callstack 0
 13861                           
 13862 ;; *************** function _mon_prog *****************
 13863 ;; Defined at:
 13864 ;;		line 829 in file "../src/w65_main.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;  p               2   22[BANK7 ] PTR unsigned char 
 13869 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 13870 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 13871 ;;  sw              1   25[BANK7 ] unsigned char 
 13872 ;;  rs              1   24[BANK7 ] enum E17409
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      enum E17409
 13875 ;; Registers used:
 13876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/0
 13879 ;;		On exit  : 0/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13883 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13885 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13886 ;;Total ram usage:        4 bytes
 13887 ;; Hardware stack levels used: 1
 13888 ;; Hardware stack levels required when called: 25
 13889 ;; This function calls:
 13890 ;;		_drive_cpu
 13891 ;;		_printf
 13892 ;;		_start_cpu
 13893 ;;		_strstr
 13894 ;;		_write_sram
 13895 ;; This function is called by:
 13896 ;;		_main
 13897 ;; This function uses a non-reentrant model
 13898 ;;
 13899                           
 13900                           	psect	text6
 13901   01D73C                     __ptext6:
 13902                           	callstack 0
 13903   01D73C                     _mon_prog:
 13904                           	callstack 101
 13905   01D73C                     
 13906                           ;../src/w65_main.c: 837:  write_sram(0, &cpu_flg, 1);
 13907   01D73C  0E00               	movlw	0
 13908   01D73E  6E04               	movwf	write_sram@addr^(0+1280),c
 13909   01D740  0E00               	movlw	0
 13910   01D742  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13911   01D744  0E00               	movlw	0
 13912   01D746  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13913   01D748  0E00               	movlw	0
 13914   01D74A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13915   01D74C  0EE5               	movlw	low _cpu_flg
 13916   01D74E  6E08               	movwf	write_sram@buf^(0+1280),c
 13917   01D750  0E07               	movlw	high _cpu_flg
 13918   01D752  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13919   01D754  0E00               	movlw	0
 13920   01D756  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13921   01D758  0E01               	movlw	1
 13922   01D75A  6E0A               	movwf	write_sram@len^(0+1280),c
 13923   01D75C  EC9F  F0E8         	call	_write_sram	;wreg free
 13924   01D760                     
 13925                           ;../src/w65_main.c: 838:  sw = 0;
 13926   01D760  0107               	movlb	7	; () banked
 13927   01D762  6B19               	clrf	mon_prog@sw& (0+255),b
 13928                           
 13929                           ;../src/w65_main.c: 839:  write_sram( fh.load_p+8, &sw, 1 );
 13930   01D764  0E08               	movlw	8
 13931   01D766  0108               	movlb	8	; () banked
 13932   01D768  25B2               	addwf	(_fh+16)& (0+255),w,b
 13933   01D76A  6E04               	movwf	write_sram@addr^(0+1280),c
 13934   01D76C  0E00               	movlw	0
 13935   01D76E  21B3               	addwfc	(_fh+17)& (0+255),w,b
 13936   01D770  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13937   01D772  0E00               	movlw	0
 13938   01D774  21B4               	addwfc	(_fh+18)& (0+255),w,b
 13939   01D776  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13940   01D778  0E00               	movlw	0
 13941   01D77A  21B5               	addwfc	(_fh+19)& (0+255),w,b
 13942   01D77C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13943   01D77E  0E19               	movlw	low mon_prog@sw
 13944   01D780  6E08               	movwf	write_sram@buf^(0+1280),c
 13945   01D782  0E07               	movlw	high mon_prog@sw
 13946   01D784  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13947   01D786  0E00               	movlw	0
 13948   01D788  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13949   01D78A  0E01               	movlw	1
 13950   01D78C  6E0A               	movwf	write_sram@len^(0+1280),c
 13951   01D78E  EC9F  F0E8         	call	_write_sram	;wreg free
 13952                           
 13953                           ;../src/w65_main.c: 841:  if ((p = strstr(arg[0], "W" ))) write_sram(0xFFFC, (uint8_t *)
      +                          &fh.wstart_addr, 2);
 13954   01D792  C79E  F50B         	movff	_arg,strstr@h
 13955   01D796  C79F  F50C         	movff	_arg+1,strstr@h+1
 13956   01D79A  0EC4               	movlw	low (STR_64+3)
 13957   01D79C  6E0D               	movwf	strstr@n^(0+1280),c
 13958   01D79E  0EFF               	movlw	high (STR_64+3)
 13959   01D7A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 13960   01D7A2  ECCF  F0EE         	call	_strstr	;wreg free
 13961   01D7A6  C50B  F716         	movff	?_strstr,mon_prog@p
 13962   01D7AA  C50C  F717         	movff	?_strstr+1,mon_prog@p+1
 13963   01D7AE  0107               	movlb	7	; () banked
 13964   01D7B0  5116               	movf	mon_prog@p& (0+255),w,b
 13965   01D7B2  1117               	iorwf	(mon_prog@p+1)& (0+255),w,b
 13966   01D7B4  B4D8               	btfsc	status,2,c
 13967   01D7B6  EFDF  F0EB         	goto	u35341
 13968   01D7BA  EFE1  F0EB         	goto	u35340
 13969   01D7BE                     u35341:
 13970   01D7BE  EFF5  F0EB         	goto	l25519
 13971   01D7C2                     u35340:
 13972   01D7C2                     
 13973                           ; BSR set to: 7
 13974   01D7C2  0EFC               	movlw	252
 13975   01D7C4  6E04               	movwf	write_sram@addr^(0+1280),c
 13976   01D7C6  0EFF               	movlw	255
 13977   01D7C8  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13978   01D7CA  0E00               	movlw	0
 13979   01D7CC  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 13980   01D7CE  0E00               	movlw	0
 13981   01D7D0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 13982   01D7D2  0EA6               	movlw	low (_fh+4)
 13983   01D7D4  6E08               	movwf	write_sram@buf^(0+1280),c
 13984   01D7D6  0E08               	movlw	high (_fh+4)
 13985   01D7D8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 13986   01D7DA  0E00               	movlw	0
 13987   01D7DC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 13988   01D7DE  0E02               	movlw	2
 13989   01D7E0  6E0A               	movwf	write_sram@len^(0+1280),c
 13990   01D7E2  EC9F  F0E8         	call	_write_sram	;wreg free
 13991   01D7E6  EF07  F0EC         	goto	l25521
 13992   01D7EA                     l25519:
 13993                           
 13994                           ; BSR set to: 7
 13995   01D7EA  0EFC               	movlw	252
 13996   01D7EC  6E04               	movwf	write_sram@addr^(0+1280),c
 13997   01D7EE  0EFF               	movlw	255
 13998   01D7F0  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 13999   01D7F2  0E00               	movlw	0
 14000   01D7F4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14001   01D7F6  0E00               	movlw	0
 14002   01D7F8  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14003   01D7FA  0EA3               	movlw	low (_fh+1)
 14004   01D7FC  6E08               	movwf	write_sram@buf^(0+1280),c
 14005   01D7FE  0E08               	movlw	high (_fh+1)
 14006   01D800  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14007   01D802  0E00               	movlw	0
 14008   01D804  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14009   01D806  0E02               	movlw	2
 14010   01D808  6E0A               	movwf	write_sram@len^(0+1280),c
 14011   01D80A  EC9F  F0E8         	call	_write_sram	;wreg free
 14012   01D80E                     l25521:
 14013                           
 14014                           ;../src/w65_main.c: 844:  start_cpu();
 14015   01D80E  ECF8  F0FE         	call	_start_cpu	;wreg free
 14016   01D812                     
 14017                           ;../src/w65_main.c: 845:  rs = drive_cpu();
 14018   01D812  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14019   01D816  0107               	movlb	7	; () banked
 14020   01D818  6F18               	movwf	mon_prog@rs& (0+255),b
 14021   01D81A                     
 14022                           ; BSR set to: 7
 14023                           ;../src/w65_main.c: 846:  printf("\r\n");
 14024   01D81A  0E90               	movlw	low (STR_88+20)
 14025   01D81C  0105               	movlb	5	; () banked
 14026   01D81E  6FAD               	movwf	printf@fmt& (0+255),b
 14027   01D820  0EFB               	movlw	high (STR_88+20)
 14028   01D822  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14029   01D824  ECDA  F0FF         	call	_printf	;wreg free
 14030   01D828                     
 14031                           ;../src/w65_main.c: 847:  return rs;
 14032   01D828  0107               	movlb	7	; () banked
 14033   01D82A  5118               	movf	mon_prog@rs& (0+255),w,b
 14034   01D82C                     
 14035                           ; BSR set to: 7
 14036   01D82C  0012               	return		;funcret
 14037   01D82E                     __end_of_mon_prog:
 14038                           	callstack 0
 14039                           
 14040 ;; *************** function _print_reg *****************
 14041 ;; Defined at:
 14042 ;;		line 738 in file "../src/w65_main.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;		None
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;  reg_816         2  100[BANK5 ] PTR struct .
 14047 ;;		 -> tmp_buf(512), 
 14048 ;;  reg_02          2   98[BANK5 ] PTR struct .
 14049 ;;		 -> tmp_buf(512), 
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      enum E17409
 14052 ;; Registers used:
 14053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14060 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14061 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14062 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14063 ;;Total ram usage:        9 bytes
 14064 ;; Hardware stack levels used: 1
 14065 ;; Hardware stack levels required when called: 9
 14066 ;; This function calls:
 14067 ;;		_printf
 14068 ;;		_read_sram
 14069 ;; This function is called by:
 14070 ;;		_main
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text7
 14075   01AFB8                     __ptext7:
 14076                           	callstack 0
 14077   01AFB8                     _print_reg:
 14078                           	callstack 117
 14079   01AFB8                     
 14080                           ;../src/w65_main.c: 739:  reg816 *reg_816;;../src/w65_main.c: 740:  reg02 *reg_02;;../sr
      +                          c/w65_main.c: 742:  read_sram((uint32_t)fh.reg_tblp, &tmp_buf[0][0], (unsigned int)fh.re
      +                          g_tsize);
 14081   01AFB8  C8BC  F504         	movff	_fh+26,read_sram@addr
 14082   01AFBC  C8BD  F505         	movff	_fh+27,read_sram@addr+1
 14083   01AFC0  6A06               	clrf	(read_sram@addr+2)^(0+1280),c
 14084   01AFC2  6A07               	clrf	(read_sram@addr+3)^(0+1280),c
 14085   01AFC4  0EF8               	movlw	low _tmp_buf
 14086   01AFC6  6E08               	movwf	read_sram@buf^(0+1280),c
 14087   01AFC8  0E13               	movlw	high _tmp_buf
 14088   01AFCA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 14089   01AFCC  C8BE  F50A         	movff	_fh+28,read_sram@len
 14090   01AFD0  C8BF  F50B         	movff	_fh+29,read_sram@len+1
 14091   01AFD4  EC0C  F0F2         	call	_read_sram	;wreg free
 14092   01AFD8                     
 14093                           ;../src/w65_main.c: 744:  if (fh.sw_816) {
 14094   01AFD8  0108               	movlb	8	; () banked
 14095   01AFDA  51BA               	movf	(_fh+24)& (0+255),w,b
 14096   01AFDC  B4D8               	btfsc	status,2,c
 14097   01AFDE  EFF3  F0D7         	goto	u35301
 14098   01AFE2  EFF5  F0D7         	goto	u35300
 14099   01AFE6                     u35301:
 14100   01AFE6  EF64  F0D8         	goto	l25445
 14101   01AFEA                     u35300:
 14102   01AFEA                     
 14103                           ; BSR set to: 8
 14104                           ;../src/w65_main.c: 745:   reg_816 = (reg816 *)&tmp_buf[0][0];
 14105   01AFEA  0EF8               	movlw	low _tmp_buf
 14106   01AFEC  0105               	movlb	5	; () banked
 14107   01AFEE  6FC4               	movwf	print_reg@reg_816& (0+255),b
 14108   01AFF0  0E13               	movlw	high _tmp_buf
 14109   01AFF2  6FC5               	movwf	(print_reg@reg_816+1)& (0+255),b
 14110   01AFF4                     
 14111                           ; BSR set to: 5
 14112                           ;../src/w65_main.c: 746:   printf("A=$%04X X=$%04X Y=$%04X SP=$%04X PC=$%04X PSR=$%02X\r
      +                          \n",
 14113   01AFF4  0E8E               	movlw	low STR_111
 14114   01AFF6  6FAD               	movwf	printf@fmt& (0+255),b
 14115   01AFF8  0EF2               	movlw	high STR_111
 14116   01AFFA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14117   01AFFC  C5C4  F4D9         	movff	print_reg@reg_816,fsr2l
 14118   01B000  C5C5  F4DA         	movff	print_reg@reg_816+1,fsr2h
 14119   01B004  C4DE F5AF          	movff	postinc2,?_printf+2
 14120   01B008  C4DD F5B0          	movff	postdec2,?_printf+3
 14121   01B00C  EE20 F002          	lfsr	2,2
 14122   01B010  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14123   01B012  26D9               	addwf	fsr2l,f,c
 14124   01B014  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14125   01B016  22DA               	addwfc	fsr2h,f,c
 14126   01B018  C4DE F5B1          	movff	postinc2,?_printf+4
 14127   01B01C  C4DD F5B2          	movff	postdec2,?_printf+5
 14128   01B020  EE20 F004          	lfsr	2,4
 14129   01B024  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14130   01B026  26D9               	addwf	fsr2l,f,c
 14131   01B028  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14132   01B02A  22DA               	addwfc	fsr2h,f,c
 14133   01B02C  C4DE F5B3          	movff	postinc2,?_printf+6
 14134   01B030  C4DD F5B4          	movff	postdec2,?_printf+7
 14135   01B034  EE20 F006          	lfsr	2,6
 14136   01B038  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14137   01B03A  26D9               	addwf	fsr2l,f,c
 14138   01B03C  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14139   01B03E  22DA               	addwfc	fsr2h,f,c
 14140   01B040  C4DE F5B5          	movff	postinc2,?_printf+8
 14141   01B044  C4DD F5B6          	movff	postdec2,?_printf+9
 14142   01B048  EE20 F008          	lfsr	2,8
 14143   01B04C  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14144   01B04E  26D9               	addwf	fsr2l,f,c
 14145   01B050  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14146   01B052  22DA               	addwfc	fsr2h,f,c
 14147   01B054  C4DE F5B7          	movff	postinc2,?_printf+10
 14148   01B058  C4DD F5B8          	movff	postdec2,?_printf+11
 14149   01B05C  EE20 F00A          	lfsr	2,10
 14150   01B060  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14151   01B062  26D9               	addwf	fsr2l,f,c
 14152   01B064  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14153   01B066  22DA               	addwfc	fsr2h,f,c
 14154   01B068  50DF               	movf	indf2,w,c
 14155   01B06A  6FBD               	movwf	??_print_reg& (0+255),b
 14156   01B06C  51BD               	movf	??_print_reg& (0+255),w,b
 14157   01B06E  6FB9               	movwf	(?_printf+12)& (0+255),b
 14158   01B070  6BBA               	clrf	(?_printf+13)& (0+255),b
 14159   01B072  ECDA  F0FF         	call	_printf	;wreg free
 14160   01B076                     
 14161                           ;../src/w65_main.c: 748:   printf("PBR=$%02X DBR=$%02X DPR=$%04X\r\n",reg_816->REGPB, re
      +                          g_816->REGDB, reg_816->REGDP);
 14162   01B076  0E57               	movlw	low STR_112
 14163   01B078  0105               	movlb	5	; () banked
 14164   01B07A  6FAD               	movwf	printf@fmt& (0+255),b
 14165   01B07C  0EF8               	movlw	high STR_112
 14166   01B07E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14167   01B080  EE20 F00B          	lfsr	2,11
 14168   01B084  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14169   01B086  26D9               	addwf	fsr2l,f,c
 14170   01B088  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14171   01B08A  22DA               	addwfc	fsr2h,f,c
 14172   01B08C  50DF               	movf	indf2,w,c
 14173   01B08E  6FBD               	movwf	??_print_reg& (0+255),b
 14174   01B090  51BD               	movf	??_print_reg& (0+255),w,b
 14175   01B092  6FAF               	movwf	(?_printf+2)& (0+255),b
 14176   01B094  6BB0               	clrf	(?_printf+3)& (0+255),b
 14177   01B096  EE20 F00C          	lfsr	2,12
 14178   01B09A  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14179   01B09C  26D9               	addwf	fsr2l,f,c
 14180   01B09E  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14181   01B0A0  22DA               	addwfc	fsr2h,f,c
 14182   01B0A2  50DF               	movf	indf2,w,c
 14183   01B0A4  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 14184   01B0A6  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 14185   01B0A8  6FB1               	movwf	(?_printf+4)& (0+255),b
 14186   01B0AA  6BB2               	clrf	(?_printf+5)& (0+255),b
 14187   01B0AC  EE20 F00D          	lfsr	2,13
 14188   01B0B0  51C4               	movf	print_reg@reg_816& (0+255),w,b
 14189   01B0B2  26D9               	addwf	fsr2l,f,c
 14190   01B0B4  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 14191   01B0B6  22DA               	addwfc	fsr2h,f,c
 14192   01B0B8  C4DE F5B3          	movff	postinc2,?_printf+6
 14193   01B0BC  C4DD F5B4          	movff	postdec2,?_printf+7
 14194   01B0C0  ECDA  F0FF         	call	_printf	;wreg free
 14195                           
 14196                           ;../src/w65_main.c: 749:  }
 14197   01B0C4  EFAE  F0D8         	goto	l25449
 14198   01B0C8                     l25445:
 14199                           
 14200                           ; BSR set to: 8
 14201                           ;../src/w65_main.c: 751:   reg_02 = (reg02 *)&tmp_buf[0][0];
 14202   01B0C8  0EF8               	movlw	low _tmp_buf
 14203   01B0CA  0105               	movlb	5	; () banked
 14204   01B0CC  6FC2               	movwf	print_reg@reg_02& (0+255),b
 14205   01B0CE  0E13               	movlw	high _tmp_buf
 14206   01B0D0  6FC3               	movwf	(print_reg@reg_02+1)& (0+255),b
 14207   01B0D2                     
 14208                           ; BSR set to: 5
 14209                           ;../src/w65_main.c: 752:   printf("A=$%02X X=$%02X Y=$%02X SP=$01%02X PC=$%04X PSR=$%02X
      +                          \r\n",
 14210   01B0D2  0E1F               	movlw	low STR_113
 14211   01B0D4  6FAD               	movwf	printf@fmt& (0+255),b
 14212   01B0D6  0EF2               	movlw	high STR_113
 14213   01B0D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14214   01B0DA  C5C2  F4D9         	movff	print_reg@reg_02,fsr2l
 14215   01B0DE  C5C3  F4DA         	movff	print_reg@reg_02+1,fsr2h
 14216   01B0E2  50DF               	movf	indf2,w,c
 14217   01B0E4  6FBD               	movwf	??_print_reg& (0+255),b
 14218   01B0E6  51BD               	movf	??_print_reg& (0+255),w,b
 14219   01B0E8  6FAF               	movwf	(?_printf+2)& (0+255),b
 14220   01B0EA  6BB0               	clrf	(?_printf+3)& (0+255),b
 14221   01B0EC  EE20 F001          	lfsr	2,1
 14222   01B0F0  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14223   01B0F2  26D9               	addwf	fsr2l,f,c
 14224   01B0F4  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14225   01B0F6  22DA               	addwfc	fsr2h,f,c
 14226   01B0F8  50DF               	movf	indf2,w,c
 14227   01B0FA  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 14228   01B0FC  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 14229   01B0FE  6FB1               	movwf	(?_printf+4)& (0+255),b
 14230   01B100  6BB2               	clrf	(?_printf+5)& (0+255),b
 14231   01B102  EE20 F002          	lfsr	2,2
 14232   01B106  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14233   01B108  26D9               	addwf	fsr2l,f,c
 14234   01B10A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14235   01B10C  22DA               	addwfc	fsr2h,f,c
 14236   01B10E  50DF               	movf	indf2,w,c
 14237   01B110  6FBF               	movwf	(??_print_reg+2)& (0+255),b
 14238   01B112  51BF               	movf	(??_print_reg+2)& (0+255),w,b
 14239   01B114  6FB3               	movwf	(?_printf+6)& (0+255),b
 14240   01B116  6BB4               	clrf	(?_printf+7)& (0+255),b
 14241   01B118  EE20 F003          	lfsr	2,3
 14242   01B11C  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14243   01B11E  26D9               	addwf	fsr2l,f,c
 14244   01B120  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14245   01B122  22DA               	addwfc	fsr2h,f,c
 14246   01B124  50DF               	movf	indf2,w,c
 14247   01B126  6FC0               	movwf	(??_print_reg+3)& (0+255),b
 14248   01B128  51C0               	movf	(??_print_reg+3)& (0+255),w,b
 14249   01B12A  6FB5               	movwf	(?_printf+8)& (0+255),b
 14250   01B12C  6BB6               	clrf	(?_printf+9)& (0+255),b
 14251   01B12E  EE20 F004          	lfsr	2,4
 14252   01B132  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14253   01B134  26D9               	addwf	fsr2l,f,c
 14254   01B136  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14255   01B138  22DA               	addwfc	fsr2h,f,c
 14256   01B13A  C4DE F5B7          	movff	postinc2,?_printf+10
 14257   01B13E  C4DD F5B8          	movff	postdec2,?_printf+11
 14258   01B142  EE20 F006          	lfsr	2,6
 14259   01B146  51C2               	movf	print_reg@reg_02& (0+255),w,b
 14260   01B148  26D9               	addwf	fsr2l,f,c
 14261   01B14A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 14262   01B14C  22DA               	addwfc	fsr2h,f,c
 14263   01B14E  50DF               	movf	indf2,w,c
 14264   01B150  6FC1               	movwf	(??_print_reg+4)& (0+255),b
 14265   01B152  51C1               	movf	(??_print_reg+4)& (0+255),w,b
 14266   01B154  6FB9               	movwf	(?_printf+12)& (0+255),b
 14267   01B156  6BBA               	clrf	(?_printf+13)& (0+255),b
 14268   01B158  ECDA  F0FF         	call	_printf	;wreg free
 14269   01B15C                     l25449:
 14270                           
 14271                           ;../src/w65_main.c: 755:  return FR_OK;
 14272   01B15C  0E00               	movlw	0
 14273   01B15E  0012               	return		;funcret
 14274   01B160                     __end_of_print_reg:
 14275                           	callstack 0
 14276                           
 14277 ;; *************** function _return_cpu *****************
 14278 ;; Defined at:
 14279 ;;		line 727 in file "../src/w65_main.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;  rs              1   22[BANK7 ] enum E17409
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  1    wreg      enum E17409
 14286 ;; Registers used:
 14287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14294 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14296 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14297 ;;Total ram usage:        1 bytes
 14298 ;; Hardware stack levels used: 1
 14299 ;; Hardware stack levels required when called: 25
 14300 ;; This function calls:
 14301 ;;		_continue_action
 14302 ;;		_drive_cpu
 14303 ;; This function is called by:
 14304 ;;		_main
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text8
 14309   00022E                     __ptext8:
 14310                           	callstack 0
 14311   00022E                     _return_cpu:
 14312                           	callstack 101
 14313   00022E                     
 14314                           ;../src/w65_main.c: 729:  FRESULT rs;;../src/w65_main.c: 731:  continue_action();
 14315   00022E  EC96  F0FD         	call	_continue_action	;wreg free
 14316   000232                     
 14317                           ;../src/w65_main.c: 732:  rs = drive_cpu();
 14318   000232  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14319   000236  0107               	movlb	7	; () banked
 14320   000238  6F16               	movwf	return_cpu@rs& (0+255),b
 14321   00023A                     
 14322                           ; BSR set to: 7
 14323                           ;../src/w65_main.c: 733:  return rs;
 14324   00023A  5116               	movf	return_cpu@rs& (0+255),w,b
 14325   00023C                     
 14326                           ; BSR set to: 7
 14327   00023C  0012               	return		;funcret
 14328   00023E                     __end_of_return_cpu:
 14329                           	callstack 0
 14330                           
 14331 ;; *************** function _restart_prog *****************
 14332 ;; Defined at:
 14333 ;;		line 811 in file "../src/w65_main.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;		None
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  rs              1   22[BANK7 ] enum E17409
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      enum E17409
 14340 ;; Registers used:
 14341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14348 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;Total ram usage:        1 bytes
 14352 ;; Hardware stack levels used: 1
 14353 ;; Hardware stack levels required when called: 25
 14354 ;; This function calls:
 14355 ;;		_drive_cpu
 14356 ;;		_start_cpu
 14357 ;;		_write_sram
 14358 ;; This function is called by:
 14359 ;;		_main
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text9
 14364   01E9AC                     __ptext9:
 14365                           	callstack 0
 14366   01E9AC                     _restart_prog:
 14367                           	callstack 101
 14368   01E9AC                     
 14369                           ;../src/w65_main.c: 812:  FRESULT rs;;../src/w65_main.c: 814:  rs = FR_NO_FILE;
 14370   01E9AC  0E04               	movlw	4
 14371   01E9AE  0107               	movlb	7	; () banked
 14372   01E9B0  6F16               	movwf	restart_prog@rs& (0+255),b
 14373   01E9B2                     
 14374                           ; BSR set to: 7
 14375                           ;../src/w65_main.c: 815:  if ( binv.sw ==1 ) {
 14376   01E9B2  0108               	movlb	8	; () banked
 14377   01E9B4  0578               	decf	_binv& (0+255),w,b
 14378   01E9B6  A4D8               	btfss	status,2,c
 14379   01E9B8  EFE0  F0F4         	goto	u35331
 14380   01E9BC  EFE2  F0F4         	goto	u35330
 14381   01E9C0                     u35331:
 14382   01E9C0  EF27  F0F5         	goto	l25507
 14383   01E9C4                     u35330:
 14384   01E9C4                     
 14385                           ; BSR set to: 8
 14386                           ;../src/w65_main.c: 817:   write_sram(0, &cpu_flg, 1);
 14387   01E9C4  0E00               	movlw	0
 14388   01E9C6  6E04               	movwf	write_sram@addr^(0+1280),c
 14389   01E9C8  0E00               	movlw	0
 14390   01E9CA  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14391   01E9CC  0E00               	movlw	0
 14392   01E9CE  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14393   01E9D0  0E00               	movlw	0
 14394   01E9D2  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14395   01E9D4  0EE5               	movlw	low _cpu_flg
 14396   01E9D6  6E08               	movwf	write_sram@buf^(0+1280),c
 14397   01E9D8  0E07               	movlw	high _cpu_flg
 14398   01E9DA  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14399   01E9DC  0E00               	movlw	0
 14400   01E9DE  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14401   01E9E0  0E01               	movlw	1
 14402   01E9E2  6E0A               	movwf	write_sram@len^(0+1280),c
 14403   01E9E4  EC9F  F0E8         	call	_write_sram	;wreg free
 14404   01E9E8                     
 14405                           ;../src/w65_main.c: 819:   binv.addr = binv.caddr;
 14406   01E9E8  C87F  F879         	movff	_binv+7,_binv+1
 14407   01E9EC  C880  F87A         	movff	_binv+8,_binv+2
 14408                           
 14409                           ;../src/w65_main.c: 820:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 14410   01E9F0  0E08               	movlw	8
 14411   01E9F2  0108               	movlb	8	; () banked
 14412   01E9F4  25B2               	addwf	(_fh+16)& (0+255),w,b
 14413   01E9F6  6E04               	movwf	write_sram@addr^(0+1280),c
 14414   01E9F8  0E00               	movlw	0
 14415   01E9FA  21B3               	addwfc	(_fh+17)& (0+255),w,b
 14416   01E9FC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14417   01E9FE  0E00               	movlw	0
 14418   01EA00  21B4               	addwfc	(_fh+18)& (0+255),w,b
 14419   01EA02  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14420   01EA04  0E00               	movlw	0
 14421   01EA06  21B5               	addwfc	(_fh+19)& (0+255),w,b
 14422   01EA08  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14423   01EA0A  0E78               	movlw	low _binv
 14424   01EA0C  6E08               	movwf	write_sram@buf^(0+1280),c
 14425   01EA0E  0E08               	movlw	high _binv
 14426   01EA10  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14427   01EA12  0E00               	movlw	0
 14428   01EA14  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14429   01EA16  0E07               	movlw	7
 14430   01EA18  6E0A               	movwf	write_sram@len^(0+1280),c
 14431   01EA1A  EC9F  F0E8         	call	_write_sram	;wreg free
 14432                           
 14433                           ;../src/w65_main.c: 822:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 14434   01EA1E  0EFC               	movlw	252
 14435   01EA20  6E04               	movwf	write_sram@addr^(0+1280),c
 14436   01EA22  0EFF               	movlw	255
 14437   01EA24  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14438   01EA26  0E00               	movlw	0
 14439   01EA28  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14440   01EA2A  0E00               	movlw	0
 14441   01EA2C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14442   01EA2E  0EA3               	movlw	low (_fh+1)
 14443   01EA30  6E08               	movwf	write_sram@buf^(0+1280),c
 14444   01EA32  0E08               	movlw	high (_fh+1)
 14445   01EA34  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14446   01EA36  0E00               	movlw	0
 14447   01EA38  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14448   01EA3A  0E02               	movlw	2
 14449   01EA3C  6E0A               	movwf	write_sram@len^(0+1280),c
 14450   01EA3E  EC9F  F0E8         	call	_write_sram	;wreg free
 14451   01EA42                     
 14452                           ;../src/w65_main.c: 823:   start_cpu();
 14453   01EA42  ECF8  F0FE         	call	_start_cpu	;wreg free
 14454   01EA46                     
 14455                           ;../src/w65_main.c: 824:   rs = drive_cpu();
 14456   01EA46  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14457   01EA4A  0107               	movlb	7	; () banked
 14458   01EA4C  6F16               	movwf	restart_prog@rs& (0+255),b
 14459   01EA4E                     l25507:
 14460                           
 14461                           ;../src/w65_main.c: 826:  return rs;
 14462   01EA4E  0107               	movlb	7	; () banked
 14463   01EA50  5116               	movf	restart_prog@rs& (0+255),w,b
 14464   01EA52                     
 14465                           ; BSR set to: 7
 14466   01EA52  0012               	return		;funcret
 14467   01EA54                     __end_of_restart_prog:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _load_file *****************
 14471 ;; Defined at:
 14472 ;;		line 776 in file "../src/w65_main.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;		None
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  p               2   21[BANK7 ] PTR unsigned char 
 14477 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 14478 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1    wreg      enum E17409
 14481 ;; Registers used:
 14482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;Total ram usage:        2 bytes
 14493 ;; Hardware stack levels used: 1
 14494 ;; Hardware stack levels required when called: 21
 14495 ;; This function calls:
 14496 ;;		_get_hex
 14497 ;;		_load_program
 14498 ;;		_strstr
 14499 ;; This function is called by:
 14500 ;;		_main
 14501 ;; This function uses a non-reentrant model
 14502 ;;
 14503                           
 14504                           	psect	text10
 14505   01ED78                     __ptext10:
 14506                           	callstack 0
 14507   01ED78                     _load_file:
 14508                           	callstack 105
 14509   01ED78                     
 14510                           ;../src/w65_main.c: 777:  char *p;;../src/w65_main.c: 779:  load_flg = 1;
 14511   01ED78  0E01               	movlw	1
 14512   01ED7A  0107               	movlb	7	; () banked
 14513   01ED7C  6FC9               	movwf	_load_flg& (0+255),b
 14514   01ED7E                     
 14515                           ; BSR set to: 7
 14516                           ;../src/w65_main.c: 780:  if ((p = strstr(arg[0], "L=" ))) {
 14517   01ED7E  C79E  F50B         	movff	_arg,strstr@h
 14518   01ED82  C79F  F50C         	movff	_arg+1,strstr@h+1
 14519   01ED86  0EF0               	movlw	low STR_127
 14520   01ED88  6E0D               	movwf	strstr@n^(0+1280),c
 14521   01ED8A  0EFF               	movlw	high STR_127
 14522   01ED8C  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 14523   01ED8E  ECCF  F0EE         	call	_strstr	;wreg free
 14524   01ED92  C50B  F715         	movff	?_strstr,load_file@p
 14525   01ED96  C50C  F716         	movff	?_strstr+1,load_file@p+1
 14526   01ED9A  0107               	movlb	7	; () banked
 14527   01ED9C  5115               	movf	load_file@p& (0+255),w,b
 14528   01ED9E  1116               	iorwf	(load_file@p+1)& (0+255),w,b
 14529   01EDA0  B4D8               	btfsc	status,2,c
 14530   01EDA2  EFD5  F0F6         	goto	u35311
 14531   01EDA6  EFD7  F0F6         	goto	u35310
 14532   01EDAA                     u35311:
 14533   01EDAA  EFEF  F0F6         	goto	l25467
 14534   01EDAE                     u35310:
 14535   01EDAE                     
 14536                           ; BSR set to: 7
 14537                           ;../src/w65_main.c: 781:   raw_addr = get_hex((char *)(p+2));
 14538   01EDAE  0E02               	movlw	2
 14539   01EDB0  2515               	addwf	load_file@p& (0+255),w,b
 14540   01EDB2  6E04               	movwf	get_hex@buf^(0+1280),c
 14541   01EDB4  0E00               	movlw	0
 14542   01EDB6  2116               	addwfc	(load_file@p+1)& (0+255),w,b
 14543   01EDB8  6E05               	movwf	(get_hex@buf+1)^(0+1280),c
 14544   01EDBA  EC63  F0E3         	call	_get_hex	;wreg free
 14545   01EDBE  C504  F7AD         	movff	?_get_hex,_raw_addr
 14546   01EDC2  C505  F7AE         	movff	?_get_hex+1,_raw_addr+1
 14547   01EDC6  C506  F7AF         	movff	?_get_hex+2,_raw_addr+2
 14548   01EDCA  C507  F7B0         	movff	?_get_hex+3,_raw_addr+3
 14549   01EDCE                     
 14550                           ;../src/w65_main.c: 782:   load_program((uint8_t *)arg[1]);
 14551   01EDCE  C7A0  F700         	movff	_arg+2,load_program@fname
 14552   01EDD2  C7A1  F701         	movff	_arg+3,load_program@fname+1
 14553   01EDD6  EC86  F0AE         	call	_load_program	;wreg free
 14554                           
 14555                           ;../src/w65_main.c: 783:  }
 14556   01EDDA  EFFD  F0F6         	goto	l25471
 14557   01EDDE                     l25467:
 14558                           
 14559                           ; BSR set to: 7
 14560                           ;../src/w65_main.c: 785:   raw_addr = 0;
 14561   01EDDE  0E00               	movlw	0
 14562   01EDE0  6FAD               	movwf	_raw_addr& (0+255),b
 14563   01EDE2  0E00               	movlw	0
 14564   01EDE4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 14565   01EDE6  0E00               	movlw	0
 14566   01EDE8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 14567   01EDEA  0E00               	movlw	0
 14568   01EDEC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 14569   01EDEE                     
 14570                           ; BSR set to: 7
 14571                           ;../src/w65_main.c: 786:   load_program((uint8_t *)arg[0]);
 14572   01EDEE  C79E  F700         	movff	_arg,load_program@fname
 14573   01EDF2  C79F  F701         	movff	_arg+1,load_program@fname+1
 14574   01EDF6  EC86  F0AE         	call	_load_program	;wreg free
 14575   01EDFA                     l25471:
 14576                           
 14577                           ;../src/w65_main.c: 788:  load_flg = 0;
 14578   01EDFA  0107               	movlb	7	; () banked
 14579   01EDFC  6BC9               	clrf	_load_flg& (0+255),b
 14580   01EDFE                     
 14581                           ; BSR set to: 7
 14582                           ;../src/w65_main.c: 789:  raw_addr = 0;
 14583   01EDFE  0E00               	movlw	0
 14584   01EE00  6FAD               	movwf	_raw_addr& (0+255),b
 14585   01EE02  0E00               	movlw	0
 14586   01EE04  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 14587   01EE06  0E00               	movlw	0
 14588   01EE08  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 14589   01EE0A  0E00               	movlw	0
 14590   01EE0C  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 14591   01EE0E                     
 14592                           ; BSR set to: 7
 14593                           ;../src/w65_main.c: 790:  return FR_OK;
 14594   01EE0E  0E00               	movlw	0
 14595   01EE10                     
 14596                           ; BSR set to: 7
 14597   01EE10  0012               	return		;funcret
 14598   01EE12                     __end_of_load_file:
 14599                           	callstack 0
 14600                           
 14601 ;; *************** function _change_directory *****************
 14602 ;; Defined at:
 14603 ;;		line 736 in file "../src/w65_main.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;		None
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;		None
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  1    wreg      enum E17409
 14610 ;; Registers used:
 14611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/0
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14621 ;;Total ram usage:        0 bytes
 14622 ;; Hardware stack levels used: 1
 14623 ;; Hardware stack levels required when called: 20
 14624 ;; This function calls:
 14625 ;;		_f_chdir
 14626 ;; This function is called by:
 14627 ;;		_main
 14628 ;; This function uses a non-reentrant model
 14629 ;;
 14630                           
 14631                           	psect	text11
 14632   00023E                     __ptext11:
 14633                           	callstack 0
 14634   00023E                     _change_directory:
 14635                           	callstack 106
 14636   00023E  C79E  F6AF         	movff	_arg,f_chdir@path
 14637   000242  C79F  F6B0         	movff	_arg+1,f_chdir@path+1
 14638   000246  EC17  F0EC         	call	_f_chdir	;wreg free
 14639   00024A  0012               	return		;funcret
 14640   00024C                     __end_of_change_directory:
 14641                           	callstack 0
 14642                           
 14643 ;; *************** function _scan_files1 *****************
 14644 ;; Defined at:
 14645 ;;		line 542 in file "../src/w65_main.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;		None
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;  dir            40  105[BANK7 ] struct .
 14650 ;;  fno            22   83[BANK7 ] struct .
 14651 ;;  path            2   81[BANK7 ] PTR unsigned char 
 14652 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 14653 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 14654 ;;  p               2   78[BANK7 ] PTR unsigned char 
 14655 ;;		 -> tmp_buf(512), 
 14656 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 14657 ;;		 -> fno$fname(13), scan_files@fno(22), 
 14658 ;;  res             1   80[BANK7 ] enum E17409
 14659 ;;  fcnt            1   77[BANK7 ] unsigned char 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      enum E17409
 14662 ;; Registers used:
 14663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Locals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14672 ;;      Totals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14673 ;;Total ram usage:       70 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 20
 14676 ;; This function calls:
 14677 ;;		_f_close
 14678 ;;		_f_closedir
 14679 ;;		_f_getcwd
 14680 ;;		_f_open
 14681 ;;		_f_opendir
 14682 ;;		_f_readdir
 14683 ;;		_printf
 14684 ;; This function is called by:
 14685 ;;		_main
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text12
 14690   019606                     __ptext12:
 14691                           	callstack 0
 14692   019606                     _scan_files1:
 14693                           	callstack 106
 14694   019606                     
 14695                           ;../src/w65_main.c: 543:  FRESULT res;;../src/w65_main.c: 544:  FILINFO fno;;../src/w65_
      +                          main.c: 545:  DIR dir;;../src/w65_main.c: 546:  uint8_t fcnt;;../src/w65_main.c: 548:  c
      +                          har *fn, *p, *path;;../src/w65_main.c: 550:  path = arg[0];
 14696   019606  C79E  F751         	movff	_arg,scan_files1@path
 14697   01960A  C79F  F752         	movff	_arg+1,scan_files1@path+1
 14698   01960E                     
 14699                           ;../src/w65_main.c: 551:  fcnt = 0;
 14700   01960E  0107               	movlb	7	; () banked
 14701   019610  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 14702   019612                     
 14703                           ; BSR set to: 7
 14704                           ;../src/w65_main.c: 553:  res = f_opendir(&dir, path);
 14705   019612  0E69               	movlw	low scan_files1@dir
 14706   019614  0106               	movlb	6	; () banked
 14707   019616  6FAF               	movwf	f_opendir@dp& (0+255),b
 14708   019618  0E07               	movlw	high scan_files1@dir
 14709   01961A  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 14710   01961C  C751  F6B1         	movff	scan_files1@path,f_opendir@path
 14711   019620  C752  F6B2         	movff	scan_files1@path+1,f_opendir@path+1
 14712   019624  EC14  F0DF         	call	_f_opendir	;wreg free
 14713   019628  0107               	movlb	7	; () banked
 14714   01962A  6F50               	movwf	scan_files1@res& (0+255),b
 14715   01962C                     
 14716                           ; BSR set to: 7
 14717                           ;../src/w65_main.c: 554:  if (res == FR_OK) {
 14718   01962C  5150               	movf	scan_files1@res& (0+255),w,b
 14719   01962E  A4D8               	btfss	status,2,c
 14720   019630  EF1C  F0CB         	goto	u35001
 14721   019634  EF1E  F0CB         	goto	u35000
 14722   019638                     u35001:
 14723   019638  EFF9  F0CB         	goto	l25285
 14724   01963C                     u35000:
 14725   01963C                     
 14726                           ; BSR set to: 7
 14727                           ;../src/w65_main.c: 555:   p = (char *)&tmp_buf[0][0];
 14728   01963C  0EF8               	movlw	low _tmp_buf
 14729   01963E  6F4E               	movwf	scan_files1@p& (0+255),b
 14730   019640  0E13               	movlw	high _tmp_buf
 14731   019642  6F4F               	movwf	(scan_files1@p+1)& (0+255),b
 14732   019644                     
 14733                           ; BSR set to: 7
 14734                           ;../src/w65_main.c: 556:   f_getcwd( p, 256);
 14735   019644  C74E  F6AF         	movff	scan_files1@p,f_getcwd@buff
 14736   019648  C74F  F6B0         	movff	scan_files1@p+1,f_getcwd@buff+1
 14737   01964C  0E01               	movlw	1
 14738   01964E  0106               	movlb	6	; () banked
 14739   019650  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 14740   019652  0E00               	movlw	0
 14741   019654  6FB1               	movwf	f_getcwd@len& (0+255),b
 14742   019656  EC93  F0A7         	call	_f_getcwd	;wreg free
 14743   01965A                     
 14744                           ;../src/w65_main.c: 557:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 14745   01965A  C751  F4F6         	movff	scan_files1@path,tblptrl
 14746   01965E  C752  F4F7         	movff	scan_files1@path+1,tblptrh
 14747   019662  0E00               	movlw	low (__mediumconst shr (0+16))
 14748   019664  6EF8               	movwf	tblptru,c
 14749   019666  0E25               	movlw	(high __ramtop+-1)
 14750   019668  64F7               	cpfsgt	tblptrh,c
 14751   01966A  D003               	bra	u35017
 14752   01966C  0008               	tblrd		*
 14753   01966E  50F5               	movf	tablat,w,c
 14754   019670  D005               	bra	u35010
 14755   019672                     u35017:
 14756   019672  C4F6 F4E9          	movff	tblptrl,fsr0l
 14757   019676  C4F7 F4EA          	movff	tblptrh,fsr0h
 14758   01967A  50EF               	movf	indf0,w,c
 14759   01967C                     u35010:
 14760   01967C  0900               	iorlw	0
 14761   01967E  A4D8               	btfss	status,2,c
 14762   019680  EF44  F0CB         	goto	u35021
 14763   019684  EF46  F0CB         	goto	u35020
 14764   019688                     u35021:
 14765   019688  EF53  F0CB         	goto	l25247
 14766   01968C                     u35020:
 14767   01968C  0E1E               	movlw	low STR_92
 14768   01968E  0105               	movlb	5	; () banked
 14769   019690  6FAD               	movwf	printf@fmt& (0+255),b
 14770   019692  0EFF               	movlw	high STR_92
 14771   019694  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14772   019696  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 14773   01969A  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 14774   01969E  ECDA  F0FF         	call	_printf	;wreg free
 14775   0196A2  EF7E  F0CB         	goto	l25253
 14776   0196A6                     l25247:
 14777   0196A6  0107               	movlb	7	; () banked
 14778   0196A8  EE20 F001          	lfsr	2,1
 14779   0196AC  514E               	movf	scan_files1@p& (0+255),w,b
 14780   0196AE  26D9               	addwf	fsr2l,f,c
 14781   0196B0  514F               	movf	(scan_files1@p+1)& (0+255),w,b
 14782   0196B2  22DA               	addwfc	fsr2h,f,c
 14783   0196B4  50DF               	movf	indf2,w,c
 14784   0196B6  A4D8               	btfss	status,2,c
 14785   0196B8  EF60  F0CB         	goto	u35031
 14786   0196BC  EF62  F0CB         	goto	u35030
 14787   0196C0                     u35031:
 14788   0196C0  EF6F  F0CB         	goto	l25251
 14789   0196C4                     u35030:
 14790   0196C4                     
 14791                           ; BSR set to: 7
 14792   0196C4  0EEE               	movlw	low STR_93
 14793   0196C6  0105               	movlb	5	; () banked
 14794   0196C8  6FAD               	movwf	printf@fmt& (0+255),b
 14795   0196CA  0EFE               	movlw	high STR_93
 14796   0196CC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14797   0196CE  C751  F5AF         	movff	scan_files1@path,?_printf+2
 14798   0196D2  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 14799   0196D6  ECDA  F0FF         	call	_printf	;wreg free
 14800   0196DA  EF7E  F0CB         	goto	l25253
 14801   0196DE                     l25251:
 14802                           
 14803                           ; BSR set to: 7
 14804   0196DE  0E94               	movlw	low STR_94
 14805   0196E0  0105               	movlb	5	; () banked
 14806   0196E2  6FAD               	movwf	printf@fmt& (0+255),b
 14807   0196E4  0EFE               	movlw	high STR_94
 14808   0196E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14809   0196E8  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 14810   0196EC  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 14811   0196F0  C751  F5B1         	movff	scan_files1@path,?_printf+4
 14812   0196F4  C752  F5B2         	movff	scan_files1@path+1,?_printf+5
 14813   0196F8  ECDA  F0FF         	call	_printf	;wreg free
 14814   0196FC                     l25253:
 14815                           
 14816                           ;../src/w65_main.c: 562:    res = f_readdir(&dir, &fno);
 14817   0196FC  0E69               	movlw	low scan_files1@dir
 14818   0196FE  0106               	movlb	6	; () banked
 14819   019700  6F89               	movwf	f_readdir@dp& (0+255),b
 14820   019702  0E07               	movlw	high scan_files1@dir
 14821   019704  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 14822   019706  0E53               	movlw	low scan_files1@fno
 14823   019708  6F8B               	movwf	f_readdir@fno& (0+255),b
 14824   01970A  0E07               	movlw	high scan_files1@fno
 14825   01970C  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 14826   01970E  EC7B  F0ED         	call	_f_readdir	;wreg free
 14827   019712  0107               	movlb	7	; () banked
 14828   019714  6F50               	movwf	scan_files1@res& (0+255),b
 14829   019716                     
 14830                           ; BSR set to: 7
 14831                           ;../src/w65_main.c: 563:    if (res != FR_OK || fno.fname[0] == 0) {
 14832   019716  5150               	movf	scan_files1@res& (0+255),w,b
 14833   019718  A4D8               	btfss	status,2,c
 14834   01971A  EF91  F0CB         	goto	u35041
 14835   01971E  EF93  F0CB         	goto	u35040
 14836   019722                     u35041:
 14837   019722  EF9B  F0CB         	goto	l25259
 14838   019726                     u35040:
 14839   019726                     
 14840                           ; BSR set to: 7
 14841   019726  515C               	movf	(scan_files1@fno+9)& (0+255),w,b
 14842   019728  A4D8               	btfss	status,2,c
 14843   01972A  EF99  F0CB         	goto	u35051
 14844   01972E  EF9B  F0CB         	goto	u35050
 14845   019732                     u35051:
 14846   019732  EFAC  F0CB         	goto	l25263
 14847   019736                     u35050:
 14848   019736                     l25259:
 14849                           
 14850                           ; BSR set to: 7
 14851                           ;../src/w65_main.c: 564:     if ( fcnt ) {
 14852   019736  514D               	movf	scan_files1@fcnt& (0+255),w,b
 14853   019738  B4D8               	btfsc	status,2,c
 14854   01973A  EFA1  F0CB         	goto	u35061
 14855   01973E  EFA3  F0CB         	goto	u35060
 14856   019742                     u35061:
 14857   019742  EFAC  F0CB         	goto	l25263
 14858   019746                     u35060:
 14859   019746                     
 14860                           ; BSR set to: 7
 14861                           ;../src/w65_main.c: 565:      printf("\r\n");
 14862   019746  0E90               	movlw	low (STR_88+20)
 14863   019748  0105               	movlb	5	; () banked
 14864   01974A  6FAD               	movwf	printf@fmt& (0+255),b
 14865   01974C  0EFB               	movlw	high (STR_88+20)
 14866   01974E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14867   019750  ECDA  F0FF         	call	_printf	;wreg free
 14868                           
 14869                           ;../src/w65_main.c: 566:      break;
 14870   019754  EFF0  F0CB         	goto	l25283
 14871   019758                     l25263:
 14872                           
 14873                           ; BSR set to: 7
 14874                           ;../src/w65_main.c: 569:    if (fno.fname[0] == '.') continue;
 14875   019758  0E2E               	movlw	46
 14876   01975A  195C               	xorwf	(scan_files1@fno+9)& (0+255),w,b
 14877   01975C  A4D8               	btfss	status,2,c
 14878   01975E  EFB3  F0CB         	goto	u35071
 14879   019762  EFB5  F0CB         	goto	u35070
 14880   019766                     u35071:
 14881   019766  EFB7  F0CB         	goto	l25267
 14882   01976A                     u35070:
 14883   01976A  EF7E  F0CB         	goto	l25253
 14884   01976E                     l25267:
 14885                           
 14886                           ; BSR set to: 7
 14887                           ;../src/w65_main.c: 570:    fn = fno.fname;
 14888   01976E  0E5C               	movlw	low (scan_files1@fno+9)
 14889   019770  6F4B               	movwf	scan_files1@fn& (0+255),b
 14890   019772  0E07               	movlw	high (scan_files1@fno+9)
 14891   019774  6F4C               	movwf	(scan_files1@fn+1)& (0+255),b
 14892   019776                     
 14893                           ; BSR set to: 7
 14894                           ;../src/w65_main.c: 571:    if (fno.fattrib & 0x10) {
 14895   019776  A95B               	btfss	(scan_files1@fno+8)& (0+255),4,b
 14896   019778  EFC0  F0CB         	goto	u35081
 14897   01977C  EFC2  F0CB         	goto	u35080
 14898   019780                     u35081:
 14899   019780  EFCF  F0CB         	goto	l25273
 14900   019784                     u35080:
 14901   019784                     
 14902                           ; BSR set to: 7
 14903                           ;../src/w65_main.c: 572:     printf("[%12s] ", fn);
 14904   019784  0E48               	movlw	low STR_102
 14905   019786  0105               	movlb	5	; () banked
 14906   019788  6FAD               	movwf	printf@fmt& (0+255),b
 14907   01978A  0EFF               	movlw	high STR_102
 14908   01978C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14909   01978E  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 14910   019792  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 14911   019796  ECDA  F0FF         	call	_printf	;wreg free
 14912                           
 14913                           ;../src/w65_main.c: 573:    }
 14914   01979A  EFDA  F0CB         	goto	l25275
 14915   01979E                     l25273:
 14916                           
 14917                           ; BSR set to: 7
 14918                           ;../src/w65_main.c: 575:     printf(" %12s  ", fn);
 14919   01979E  0E40               	movlw	low STR_103
 14920   0197A0  0105               	movlb	5	; () banked
 14921   0197A2  6FAD               	movwf	printf@fmt& (0+255),b
 14922   0197A4  0EFF               	movlw	high STR_103
 14923   0197A6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14924   0197A8  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 14925   0197AC  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 14926   0197B0  ECDA  F0FF         	call	_printf	;wreg free
 14927   0197B4                     l25275:
 14928                           
 14929                           ;../src/w65_main.c: 577:    fcnt += 1;
 14930   0197B4  0107               	movlb	7	; () banked
 14931   0197B6  2B4D               	incf	scan_files1@fcnt& (0+255),f,b
 14932   0197B8                     
 14933                           ; BSR set to: 7
 14934                           ;../src/w65_main.c: 578:    if (fcnt == 5 ) {
 14935   0197B8  0E05               	movlw	5
 14936   0197BA  194D               	xorwf	scan_files1@fcnt& (0+255),w,b
 14937   0197BC  A4D8               	btfss	status,2,c
 14938   0197BE  EFE3  F0CB         	goto	u35091
 14939   0197C2  EFE5  F0CB         	goto	u35090
 14940   0197C6                     u35091:
 14941   0197C6  EF7E  F0CB         	goto	l25253
 14942   0197CA                     u35090:
 14943   0197CA                     
 14944                           ; BSR set to: 7
 14945                           ;../src/w65_main.c: 579:     printf("\r\n");
 14946   0197CA  0E90               	movlw	low (STR_88+20)
 14947   0197CC  0105               	movlb	5	; () banked
 14948   0197CE  6FAD               	movwf	printf@fmt& (0+255),b
 14949   0197D0  0EFB               	movlw	high (STR_88+20)
 14950   0197D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14951   0197D4  ECDA  F0FF         	call	_printf	;wreg free
 14952   0197D8                     
 14953                           ;../src/w65_main.c: 580:     fcnt = 0;
 14954   0197D8  0107               	movlb	7	; () banked
 14955   0197DA  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 14956   0197DC  EF7E  F0CB         	goto	l25253
 14957   0197E0                     l25283:
 14958                           
 14959                           ;../src/w65_main.c: 583:   f_closedir(&dir);
 14960   0197E0  0E69               	movlw	low scan_files1@dir
 14961   0197E2  0105               	movlb	5	; () banked
 14962   0197E4  6FC9               	movwf	f_closedir@dp& (0+255),b
 14963   0197E6  0E07               	movlw	high scan_files1@dir
 14964   0197E8  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 14965   0197EA  ECDC  F0FE         	call	_f_closedir	;wreg free
 14966                           
 14967                           ;../src/w65_main.c: 584:  }
 14968   0197EE  EF37  F0CC         	goto	l25293
 14969   0197F2                     l25285:
 14970                           
 14971                           ; BSR set to: 7
 14972                           ;../src/w65_main.c: 586:   if (res == FR_NO_PATH) {
 14973   0197F2  0E05               	movlw	5
 14974   0197F4  1950               	xorwf	scan_files1@res& (0+255),w,b
 14975   0197F6  A4D8               	btfss	status,2,c
 14976   0197F8  EF00  F0CC         	goto	u35101
 14977   0197FC  EF02  F0CC         	goto	u35100
 14978   019800                     u35101:
 14979   019800  EF37  F0CC         	goto	l25293
 14980   019804                     u35100:
 14981   019804                     
 14982                           ; BSR set to: 7
 14983                           ;../src/w65_main.c: 587:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 14984   019804  0ED6               	movlw	low _rom_fl
 14985   019806  0106               	movlb	6	; () banked
 14986   019808  6FAF               	movwf	f_open@fp& (0+255),b
 14987   01980A  0E0F               	movlw	high _rom_fl
 14988   01980C  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 14989   01980E  C751  F6B1         	movff	scan_files1@path,f_open@path
 14990   019812  C752  F6B2         	movff	scan_files1@path+1,f_open@path+1
 14991   019816  0E01               	movlw	1
 14992   019818  6FB3               	movwf	f_open@mode& (0+255),b
 14993   01981A  ECDB  F092         	call	_f_open	;wreg free
 14994   01981E  0107               	movlb	7	; () banked
 14995   019820  6F50               	movwf	scan_files1@res& (0+255),b
 14996   019822                     
 14997                           ; BSR set to: 7
 14998                           ;../src/w65_main.c: 588:    if ( res == FR_OK ) {
 14999   019822  5150               	movf	scan_files1@res& (0+255),w,b
 15000   019824  A4D8               	btfss	status,2,c
 15001   019826  EF17  F0CC         	goto	u35111
 15002   01982A  EF19  F0CC         	goto	u35110
 15003   01982E                     u35111:
 15004   01982E  EF37  F0CC         	goto	l25293
 15005   019832                     u35110:
 15006   019832                     
 15007                           ; BSR set to: 7
 15008                           ;../src/w65_main.c: 589:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 15009   019832  0E9A               	movlw	low STR_96
 15010   019834  0105               	movlb	5	; () banked
 15011   019836  6FAD               	movwf	printf@fmt& (0+255),b
 15012   019838  0EFC               	movlw	high STR_96
 15013   01983A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15014   01983C  C751  F5AF         	movff	scan_files1@path,?_printf+2
 15015   019840  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 15016   019844  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 15017   01984A  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 15018   019850  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 15019   019856  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 15020   01985C  ECDA  F0FF         	call	_printf	;wreg free
 15021                           
 15022                           ;../src/w65_main.c: 590:     f_close( &rom_fl );
 15023   019860  0ED6               	movlw	low _rom_fl
 15024   019862  0106               	movlb	6	; () banked
 15025   019864  6F2F               	movwf	f_close@fp& (0+255),b
 15026   019866  0E0F               	movlw	high _rom_fl
 15027   019868  6F30               	movwf	(f_close@fp+1)& (0+255),b
 15028   01986A  ECDB  F0FB         	call	_f_close	;wreg free
 15029   01986E                     l25293:
 15030                           
 15031                           ;../src/w65_main.c: 594:  return res;
 15032   01986E  0107               	movlb	7	; () banked
 15033   019870  5150               	movf	scan_files1@res& (0+255),w,b
 15034   019872                     
 15035                           ; BSR set to: 7
 15036   019872  0012               	return		;funcret
 15037   019874                     __end_of_scan_files1:
 15038                           	callstack 0
 15039                           
 15040 ;; *************** function _scan_files *****************
 15041 ;; Defined at:
 15042 ;;		line 500 in file "../src/w65_main.c"
 15043 ;; Parameters:    Size  Location     Type
 15044 ;;		None
 15045 ;; Auto vars:     Size  Location     Type
 15046 ;;  dir            40  104[BANK7 ] struct .
 15047 ;;  fno            22   82[BANK7 ] struct .
 15048 ;;  path            2   80[BANK7 ] PTR unsigned char 
 15049 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 15050 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 15051 ;;  p               2   77[BANK7 ] PTR unsigned char 
 15052 ;;		 -> tmp_buf(512), 
 15053 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 15054 ;;		 -> fno$fname(13), scan_files@fno(22), 
 15055 ;;  res             1   79[BANK7 ] enum E17409
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      enum E17409
 15058 ;; Registers used:
 15059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15066 ;;      Locals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;      Totals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;Total ram usage:       69 bytes
 15070 ;; Hardware stack levels used: 1
 15071 ;; Hardware stack levels required when called: 20
 15072 ;; This function calls:
 15073 ;;		_f_close
 15074 ;;		_f_closedir
 15075 ;;		_f_getcwd
 15076 ;;		_f_open
 15077 ;;		_f_opendir
 15078 ;;		_f_readdir
 15079 ;;		_printf
 15080 ;; This function is called by:
 15081 ;;		_main
 15082 ;; This function uses a non-reentrant model
 15083 ;;
 15084                           
 15085                           	psect	text13
 15086   019874                     __ptext13:
 15087                           	callstack 0
 15088   019874                     _scan_files:
 15089                           	callstack 106
 15090   019874                     
 15091                           ;../src/w65_main.c: 501:  FRESULT res;;../src/w65_main.c: 502:  FILINFO fno;;../src/w65_
      +                          main.c: 503:  DIR dir;;../src/w65_main.c: 504:  char *fn, *p, *path;;../src/w65_main.c: 
      +                          506:  path = arg[0];
 15092   019874  C79E  F750         	movff	_arg,scan_files@path
 15093   019878  C79F  F751         	movff	_arg+1,scan_files@path+1
 15094   01987C                     
 15095                           ;../src/w65_main.c: 508:  res = f_opendir(&dir, path);
 15096   01987C  0E68               	movlw	low scan_files@dir
 15097   01987E  0106               	movlb	6	; () banked
 15098   019880  6FAF               	movwf	f_opendir@dp& (0+255),b
 15099   019882  0E07               	movlw	high scan_files@dir
 15100   019884  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 15101   019886  C750  F6B1         	movff	scan_files@path,f_opendir@path
 15102   01988A  C751  F6B2         	movff	scan_files@path+1,f_opendir@path+1
 15103   01988E  EC14  F0DF         	call	_f_opendir	;wreg free
 15104   019892  0107               	movlb	7	; () banked
 15105   019894  6F4F               	movwf	scan_files@res& (0+255),b
 15106   019896                     
 15107                           ; BSR set to: 7
 15108                           ;../src/w65_main.c: 509:  if (res == FR_OK) {
 15109   019896  514F               	movf	scan_files@res& (0+255),w,b
 15110   019898  A4D8               	btfss	status,2,c
 15111   01989A  EF51  F0CC         	goto	u34831
 15112   01989E  EF53  F0CC         	goto	u34830
 15113   0198A2                     u34831:
 15114   0198A2  EF13  F0CD         	goto	l25177
 15115   0198A6                     u34830:
 15116   0198A6                     
 15117                           ; BSR set to: 7
 15118                           ;../src/w65_main.c: 510:   p = (char *)&tmp_buf[0][0];
 15119   0198A6  0EF8               	movlw	low _tmp_buf
 15120   0198A8  6F4D               	movwf	scan_files@p& (0+255),b
 15121   0198AA  0E13               	movlw	high _tmp_buf
 15122   0198AC  6F4E               	movwf	(scan_files@p+1)& (0+255),b
 15123   0198AE                     
 15124                           ; BSR set to: 7
 15125                           ;../src/w65_main.c: 511:   f_getcwd( p, 256);
 15126   0198AE  C74D  F6AF         	movff	scan_files@p,f_getcwd@buff
 15127   0198B2  C74E  F6B0         	movff	scan_files@p+1,f_getcwd@buff+1
 15128   0198B6  0E01               	movlw	1
 15129   0198B8  0106               	movlb	6	; () banked
 15130   0198BA  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 15131   0198BC  0E00               	movlw	0
 15132   0198BE  6FB1               	movwf	f_getcwd@len& (0+255),b
 15133   0198C0  EC93  F0A7         	call	_f_getcwd	;wreg free
 15134   0198C4                     
 15135                           ;../src/w65_main.c: 512:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 15136   0198C4  C750  F4F6         	movff	scan_files@path,tblptrl
 15137   0198C8  C751  F4F7         	movff	scan_files@path+1,tblptrh
 15138   0198CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15139   0198CE  6EF8               	movwf	tblptru,c
 15140   0198D0  0E25               	movlw	(high __ramtop+-1)
 15141   0198D2  64F7               	cpfsgt	tblptrh,c
 15142   0198D4  D003               	bra	u34847
 15143   0198D6  0008               	tblrd		*
 15144   0198D8  50F5               	movf	tablat,w,c
 15145   0198DA  D005               	bra	u34840
 15146   0198DC                     u34847:
 15147   0198DC  C4F6 F4E9          	movff	tblptrl,fsr0l
 15148   0198E0  C4F7 F4EA          	movff	tblptrh,fsr0h
 15149   0198E4  50EF               	movf	indf0,w,c
 15150   0198E6                     u34840:
 15151   0198E6  0900               	iorlw	0
 15152   0198E8  A4D8               	btfss	status,2,c
 15153   0198EA  EF79  F0CC         	goto	u34851
 15154   0198EE  EF7B  F0CC         	goto	u34850
 15155   0198F2                     u34851:
 15156   0198F2  EF88  F0CC         	goto	l25151
 15157   0198F6                     u34850:
 15158   0198F6  0E1E               	movlw	low STR_92
 15159   0198F8  0105               	movlb	5	; () banked
 15160   0198FA  6FAD               	movwf	printf@fmt& (0+255),b
 15161   0198FC  0EFF               	movlw	high STR_92
 15162   0198FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15163   019900  C74D  F5AF         	movff	scan_files@p,?_printf+2
 15164   019904  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 15165   019908  ECDA  F0FF         	call	_printf	;wreg free
 15166   01990C  EFB3  F0CC         	goto	l25157
 15167   019910                     l25151:
 15168   019910  0107               	movlb	7	; () banked
 15169   019912  EE20 F001          	lfsr	2,1
 15170   019916  514D               	movf	scan_files@p& (0+255),w,b
 15171   019918  26D9               	addwf	fsr2l,f,c
 15172   01991A  514E               	movf	(scan_files@p+1)& (0+255),w,b
 15173   01991C  22DA               	addwfc	fsr2h,f,c
 15174   01991E  50DF               	movf	indf2,w,c
 15175   019920  A4D8               	btfss	status,2,c
 15176   019922  EF95  F0CC         	goto	u34861
 15177   019926  EF97  F0CC         	goto	u34860
 15178   01992A                     u34861:
 15179   01992A  EFA4  F0CC         	goto	l25155
 15180   01992E                     u34860:
 15181   01992E                     
 15182                           ; BSR set to: 7
 15183   01992E  0EEE               	movlw	low STR_93
 15184   019930  0105               	movlb	5	; () banked
 15185   019932  6FAD               	movwf	printf@fmt& (0+255),b
 15186   019934  0EFE               	movlw	high STR_93
 15187   019936  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15188   019938  C750  F5AF         	movff	scan_files@path,?_printf+2
 15189   01993C  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 15190   019940  ECDA  F0FF         	call	_printf	;wreg free
 15191   019944  EFB3  F0CC         	goto	l25157
 15192   019948                     l25155:
 15193                           
 15194                           ; BSR set to: 7
 15195   019948  0E94               	movlw	low STR_94
 15196   01994A  0105               	movlb	5	; () banked
 15197   01994C  6FAD               	movwf	printf@fmt& (0+255),b
 15198   01994E  0EFE               	movlw	high STR_94
 15199   019950  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15200   019952  C74D  F5AF         	movff	scan_files@p,?_printf+2
 15201   019956  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 15202   01995A  C750  F5B1         	movff	scan_files@path,?_printf+4
 15203   01995E  C751  F5B2         	movff	scan_files@path+1,?_printf+5
 15204   019962  ECDA  F0FF         	call	_printf	;wreg free
 15205   019966                     l25157:
 15206                           
 15207                           ;../src/w65_main.c: 517:    res = f_readdir(&dir, &fno);
 15208   019966  0E68               	movlw	low scan_files@dir
 15209   019968  0106               	movlb	6	; () banked
 15210   01996A  6F89               	movwf	f_readdir@dp& (0+255),b
 15211   01996C  0E07               	movlw	high scan_files@dir
 15212   01996E  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 15213   019970  0E52               	movlw	low scan_files@fno
 15214   019972  6F8B               	movwf	f_readdir@fno& (0+255),b
 15215   019974  0E07               	movlw	high scan_files@fno
 15216   019976  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 15217   019978  EC7B  F0ED         	call	_f_readdir	;wreg free
 15218   01997C  0107               	movlb	7	; () banked
 15219   01997E  6F4F               	movwf	scan_files@res& (0+255),b
 15220   019980                     
 15221                           ; BSR set to: 7
 15222                           ;../src/w65_main.c: 518:    if (res != FR_OK || fno.fname[0] == 0) break;
 15223   019980  514F               	movf	scan_files@res& (0+255),w,b
 15224   019982  A4D8               	btfss	status,2,c
 15225   019984  EFC6  F0CC         	goto	u34871
 15226   019988  EFC8  F0CC         	goto	u34870
 15227   01998C                     u34871:
 15228   01998C  EF0A  F0CD         	goto	l25175
 15229   019990                     u34870:
 15230   019990                     
 15231                           ; BSR set to: 7
 15232   019990  515B               	movf	(scan_files@fno+9)& (0+255),w,b
 15233   019992  A4D8               	btfss	status,2,c
 15234   019994  EFCE  F0CC         	goto	u34881
 15235   019998  EFD0  F0CC         	goto	u34880
 15236   01999C                     u34881:
 15237   01999C  EFD2  F0CC         	goto	l25163
 15238   0199A0                     u34880:
 15239   0199A0  EF0A  F0CD         	goto	l25175
 15240   0199A4                     l25163:
 15241                           
 15242                           ; BSR set to: 7
 15243                           ;../src/w65_main.c: 519:    if (fno.fname[0] == '.') continue;
 15244   0199A4  0E2E               	movlw	46
 15245   0199A6  195B               	xorwf	(scan_files@fno+9)& (0+255),w,b
 15246   0199A8  A4D8               	btfss	status,2,c
 15247   0199AA  EFD9  F0CC         	goto	u34891
 15248   0199AE  EFDB  F0CC         	goto	u34890
 15249   0199B2                     u34891:
 15250   0199B2  EFDD  F0CC         	goto	l25167
 15251   0199B6                     u34890:
 15252   0199B6  EFB3  F0CC         	goto	l25157
 15253   0199BA                     l25167:
 15254                           
 15255                           ; BSR set to: 7
 15256                           ;../src/w65_main.c: 520:    fn = fno.fname;
 15257   0199BA  0E5B               	movlw	low (scan_files@fno+9)
 15258   0199BC  6F4B               	movwf	scan_files@fn& (0+255),b
 15259   0199BE  0E07               	movlw	high (scan_files@fno+9)
 15260   0199C0  6F4C               	movwf	(scan_files@fn+1)& (0+255),b
 15261   0199C2                     
 15262                           ; BSR set to: 7
 15263                           ;../src/w65_main.c: 521:    if (fno.fattrib & 0x10) {
 15264   0199C2  A95A               	btfss	(scan_files@fno+8)& (0+255),4,b
 15265   0199C4  EFE6  F0CC         	goto	u34901
 15266   0199C8  EFE8  F0CC         	goto	u34900
 15267   0199CC                     u34901:
 15268   0199CC  EFF5  F0CC         	goto	l25173
 15269   0199D0                     u34900:
 15270   0199D0                     
 15271                           ; BSR set to: 7
 15272                           ;../src/w65_main.c: 522:     printf("  %12s\t<DIR>\r\n", fno.fname);
 15273   0199D0  0E16               	movlw	low STR_95
 15274   0199D2  0105               	movlb	5	; () banked
 15275   0199D4  6FAD               	movwf	printf@fmt& (0+255),b
 15276   0199D6  0EFE               	movlw	high STR_95
 15277   0199D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15278   0199DA  0E5B               	movlw	low (scan_files@fno+9)
 15279   0199DC  6FAF               	movwf	(?_printf+2)& (0+255),b
 15280   0199DE  0E07               	movlw	high (scan_files@fno+9)
 15281   0199E0  6FB0               	movwf	(?_printf+3)& (0+255),b
 15282   0199E2  ECDA  F0FF         	call	_printf	;wreg free
 15283                           
 15284                           ;../src/w65_main.c: 523:    }
 15285   0199E6  EFB3  F0CC         	goto	l25157
 15286   0199EA                     l25173:
 15287                           
 15288                           ; BSR set to: 7
 15289                           ;../src/w65_main.c: 525:     printf("  %12s\t%ld bytes.\r\n", fn, fno.fsize);
 15290   0199EA  0E9A               	movlw	low STR_96
 15291   0199EC  0105               	movlb	5	; () banked
 15292   0199EE  6FAD               	movwf	printf@fmt& (0+255),b
 15293   0199F0  0EFC               	movlw	high STR_96
 15294   0199F2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15295   0199F4  C74B  F5AF         	movff	scan_files@fn,?_printf+2
 15296   0199F8  C74C  F5B0         	movff	scan_files@fn+1,?_printf+3
 15297   0199FC  C752  F5B1         	movff	scan_files@fno,?_printf+4
 15298   019A00  C753  F5B2         	movff	scan_files@fno+1,?_printf+5
 15299   019A04  C754  F5B3         	movff	scan_files@fno+2,?_printf+6
 15300   019A08  C755  F5B4         	movff	scan_files@fno+3,?_printf+7
 15301   019A0C  ECDA  F0FF         	call	_printf	;wreg free
 15302   019A10  EFB3  F0CC         	goto	l25157
 15303   019A14                     l25175:
 15304                           
 15305                           ; BSR set to: 7
 15306                           ;../src/w65_main.c: 528:   f_closedir(&dir);
 15307   019A14  0E68               	movlw	low scan_files@dir
 15308   019A16  0105               	movlb	5	; () banked
 15309   019A18  6FC9               	movwf	f_closedir@dp& (0+255),b
 15310   019A1A  0E07               	movlw	high scan_files@dir
 15311   019A1C  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 15312   019A1E  ECDC  F0FE         	call	_f_closedir	;wreg free
 15313                           
 15314                           ;../src/w65_main.c: 529:  }
 15315   019A22  EF51  F0CD         	goto	l25185
 15316   019A26                     l25177:
 15317                           
 15318                           ; BSR set to: 7
 15319                           ;../src/w65_main.c: 531:   if (res == FR_NO_PATH) {
 15320   019A26  0E05               	movlw	5
 15321   019A28  194F               	xorwf	scan_files@res& (0+255),w,b
 15322   019A2A  A4D8               	btfss	status,2,c
 15323   019A2C  EF1A  F0CD         	goto	u34911
 15324   019A30  EF1C  F0CD         	goto	u34910
 15325   019A34                     u34911:
 15326   019A34  EF51  F0CD         	goto	l25185
 15327   019A38                     u34910:
 15328   019A38                     
 15329                           ; BSR set to: 7
 15330                           ;../src/w65_main.c: 532:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 15331   019A38  0ED6               	movlw	low _rom_fl
 15332   019A3A  0106               	movlb	6	; () banked
 15333   019A3C  6FAF               	movwf	f_open@fp& (0+255),b
 15334   019A3E  0E0F               	movlw	high _rom_fl
 15335   019A40  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 15336   019A42  C750  F6B1         	movff	scan_files@path,f_open@path
 15337   019A46  C751  F6B2         	movff	scan_files@path+1,f_open@path+1
 15338   019A4A  0E01               	movlw	1
 15339   019A4C  6FB3               	movwf	f_open@mode& (0+255),b
 15340   019A4E  ECDB  F092         	call	_f_open	;wreg free
 15341   019A52  0107               	movlb	7	; () banked
 15342   019A54  6F4F               	movwf	scan_files@res& (0+255),b
 15343   019A56                     
 15344                           ; BSR set to: 7
 15345                           ;../src/w65_main.c: 533:    if ( res == FR_OK ) {
 15346   019A56  514F               	movf	scan_files@res& (0+255),w,b
 15347   019A58  A4D8               	btfss	status,2,c
 15348   019A5A  EF31  F0CD         	goto	u34921
 15349   019A5E  EF33  F0CD         	goto	u34920
 15350   019A62                     u34921:
 15351   019A62  EF51  F0CD         	goto	l25185
 15352   019A66                     u34920:
 15353   019A66                     
 15354                           ; BSR set to: 7
 15355                           ;../src/w65_main.c: 534:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 15356   019A66  0E9A               	movlw	low STR_96
 15357   019A68  0105               	movlb	5	; () banked
 15358   019A6A  6FAD               	movwf	printf@fmt& (0+255),b
 15359   019A6C  0EFC               	movlw	high STR_96
 15360   019A6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15361   019A70  C750  F5AF         	movff	scan_files@path,?_printf+2
 15362   019A74  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 15363   019A78  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 15364   019A7E  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 15365   019A84  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 15366   019A8A  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 15367   019A90  ECDA  F0FF         	call	_printf	;wreg free
 15368                           
 15369                           ;../src/w65_main.c: 535:     f_close( &rom_fl );
 15370   019A94  0ED6               	movlw	low _rom_fl
 15371   019A96  0106               	movlb	6	; () banked
 15372   019A98  6F2F               	movwf	f_close@fp& (0+255),b
 15373   019A9A  0E0F               	movlw	high _rom_fl
 15374   019A9C  6F30               	movwf	(f_close@fp+1)& (0+255),b
 15375   019A9E  ECDB  F0FB         	call	_f_close	;wreg free
 15376   019AA2                     l25185:
 15377                           
 15378                           ;../src/w65_main.c: 539:  return res;
 15379   019AA2  0107               	movlb	7	; () banked
 15380   019AA4  514F               	movf	scan_files@res& (0+255),w,b
 15381   019AA6                     
 15382                           ; BSR set to: 7
 15383   019AA6  0012               	return		;funcret
 15384   019AA8                     __end_of_scan_files:
 15385                           	callstack 0
 15386                           
 15387 ;; *************** function _wstart_prog *****************
 15388 ;; Defined at:
 15389 ;;		line 793 in file "../src/w65_main.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;		None
 15392 ;; Auto vars:     Size  Location     Type
 15393 ;;  rs              1   22[BANK7 ] enum E17409
 15394 ;; Return value:  Size  Location     Type
 15395 ;;                  1    wreg      enum E17409
 15396 ;; Registers used:
 15397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15398 ;; Tracked objects:
 15399 ;;		On entry : 0/0
 15400 ;;		On exit  : 0/0
 15401 ;;		Unchanged: 0/0
 15402 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15404 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15406 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15407 ;;Total ram usage:        1 bytes
 15408 ;; Hardware stack levels used: 1
 15409 ;; Hardware stack levels required when called: 25
 15410 ;; This function calls:
 15411 ;;		_drive_cpu
 15412 ;;		_start_cpu
 15413 ;;		_write_sram
 15414 ;; This function is called by:
 15415 ;;		_main
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text14
 15420   01EA54                     __ptext14:
 15421                           	callstack 0
 15422   01EA54                     _wstart_prog:
 15423                           	callstack 101
 15424   01EA54                     
 15425                           ;../src/w65_main.c: 794:  FRESULT rs;;../src/w65_main.c: 796:  rs = FR_NO_FILE;
 15426   01EA54  0E04               	movlw	4
 15427   01EA56  0107               	movlb	7	; () banked
 15428   01EA58  6F16               	movwf	wstart_prog@rs& (0+255),b
 15429   01EA5A                     
 15430                           ; BSR set to: 7
 15431                           ;../src/w65_main.c: 797:  if ( binv.sw == 1) {
 15432   01EA5A  0108               	movlb	8	; () banked
 15433   01EA5C  0578               	decf	_binv& (0+255),w,b
 15434   01EA5E  A4D8               	btfss	status,2,c
 15435   01EA60  EF34  F0F5         	goto	u35321
 15436   01EA64  EF36  F0F5         	goto	u35320
 15437   01EA68                     u35321:
 15438   01EA68  EF7B  F0F5         	goto	l25491
 15439   01EA6C                     u35320:
 15440   01EA6C                     
 15441                           ; BSR set to: 8
 15442                           ;../src/w65_main.c: 799:   write_sram(0, &cpu_flg, 1);
 15443   01EA6C  0E00               	movlw	0
 15444   01EA6E  6E04               	movwf	write_sram@addr^(0+1280),c
 15445   01EA70  0E00               	movlw	0
 15446   01EA72  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15447   01EA74  0E00               	movlw	0
 15448   01EA76  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15449   01EA78  0E00               	movlw	0
 15450   01EA7A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15451   01EA7C  0EE5               	movlw	low _cpu_flg
 15452   01EA7E  6E08               	movwf	write_sram@buf^(0+1280),c
 15453   01EA80  0E07               	movlw	high _cpu_flg
 15454   01EA82  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15455   01EA84  0E00               	movlw	0
 15456   01EA86  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15457   01EA88  0E01               	movlw	1
 15458   01EA8A  6E0A               	movwf	write_sram@len^(0+1280),c
 15459   01EA8C  EC9F  F0E8         	call	_write_sram	;wreg free
 15460   01EA90                     
 15461                           ;../src/w65_main.c: 801:   binv.addr = binv.waddr;
 15462   01EA90  C881  F879         	movff	_binv+9,_binv+1
 15463   01EA94  C882  F87A         	movff	_binv+10,_binv+2
 15464                           
 15465                           ;../src/w65_main.c: 802:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 15466   01EA98  0E08               	movlw	8
 15467   01EA9A  0108               	movlb	8	; () banked
 15468   01EA9C  25B2               	addwf	(_fh+16)& (0+255),w,b
 15469   01EA9E  6E04               	movwf	write_sram@addr^(0+1280),c
 15470   01EAA0  0E00               	movlw	0
 15471   01EAA2  21B3               	addwfc	(_fh+17)& (0+255),w,b
 15472   01EAA4  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15473   01EAA6  0E00               	movlw	0
 15474   01EAA8  21B4               	addwfc	(_fh+18)& (0+255),w,b
 15475   01EAAA  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15476   01EAAC  0E00               	movlw	0
 15477   01EAAE  21B5               	addwfc	(_fh+19)& (0+255),w,b
 15478   01EAB0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15479   01EAB2  0E78               	movlw	low _binv
 15480   01EAB4  6E08               	movwf	write_sram@buf^(0+1280),c
 15481   01EAB6  0E08               	movlw	high _binv
 15482   01EAB8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15483   01EABA  0E00               	movlw	0
 15484   01EABC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15485   01EABE  0E07               	movlw	7
 15486   01EAC0  6E0A               	movwf	write_sram@len^(0+1280),c
 15487   01EAC2  EC9F  F0E8         	call	_write_sram	;wreg free
 15488                           
 15489                           ;../src/w65_main.c: 804:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 15490   01EAC6  0EFC               	movlw	252
 15491   01EAC8  6E04               	movwf	write_sram@addr^(0+1280),c
 15492   01EACA  0EFF               	movlw	255
 15493   01EACC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15494   01EACE  0E00               	movlw	0
 15495   01EAD0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15496   01EAD2  0E00               	movlw	0
 15497   01EAD4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15498   01EAD6  0EA3               	movlw	low (_fh+1)
 15499   01EAD8  6E08               	movwf	write_sram@buf^(0+1280),c
 15500   01EADA  0E08               	movlw	high (_fh+1)
 15501   01EADC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15502   01EADE  0E00               	movlw	0
 15503   01EAE0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15504   01EAE2  0E02               	movlw	2
 15505   01EAE4  6E0A               	movwf	write_sram@len^(0+1280),c
 15506   01EAE6  EC9F  F0E8         	call	_write_sram	;wreg free
 15507   01EAEA                     
 15508                           ;../src/w65_main.c: 805:   start_cpu();
 15509   01EAEA  ECF8  F0FE         	call	_start_cpu	;wreg free
 15510   01EAEE                     
 15511                           ;../src/w65_main.c: 806:   rs = drive_cpu();
 15512   01EAEE  ECA0  F0FE         	call	_drive_cpu	;wreg free
 15513   01EAF2  0107               	movlb	7	; () banked
 15514   01EAF4  6F16               	movwf	wstart_prog@rs& (0+255),b
 15515   01EAF6                     l25491:
 15516                           
 15517                           ;../src/w65_main.c: 808:  return rs;
 15518   01EAF6  0107               	movlb	7	; () banked
 15519   01EAF8  5116               	movf	wstart_prog@rs& (0+255),w,b
 15520   01EAFA                     
 15521                           ; BSR set to: 7
 15522   01EAFA  0012               	return		;funcret
 15523   01EAFC                     __end_of_wstart_prog:
 15524                           	callstack 0
 15525                           
 15526 ;; *************** function _wait_for_programmer *****************
 15527 ;; Defined at:
 15528 ;;		line 119 in file "../src/boards/w65_cmn.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      void 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;Total ram usage:        2 bytes
 15547 ;; Hardware stack levels used: 1
 15548 ;; Hardware stack levels required when called: 9
 15549 ;; This function calls:
 15550 ;;		_printf
 15551 ;; This function is called by:
 15552 ;;		_main
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text15
 15557   01FAE6                     __ptext15:
 15558                           	callstack 0
 15559   01FAE6                     _wait_for_programmer:
 15560                           	callstack 117
 15561   01FAE6                     
 15562                           ;../src/boards/w65_cmn.c: 124:     printf("\n\r");
 15563   01FAE6  0E8B               	movlw	low (STR_27+52)
 15564   01FAE8  0105               	movlb	5	; () banked
 15565   01FAEA  6FAD               	movwf	printf@fmt& (0+255),b
 15566   01FAEC  0EF2               	movlw	high (STR_27+52)
 15567   01FAEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15568   01FAF0  ECDA  F0FF         	call	_printf	;wreg free
 15569                           
 15570                           ;../src/boards/w65_cmn.c: 125:     printf("wait for programmer ...\r\n");
 15571   01FAF4  0E56               	movlw	low STR_2
 15572   01FAF6  0105               	movlb	5	; () banked
 15573   01FAF8  6FAD               	movwf	printf@fmt& (0+255),b
 15574   01FAFA  0EFA               	movlw	high STR_2
 15575   01FAFC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15576   01FAFE  ECDA  F0FF         	call	_printf	;wreg free
 15577   01FB02                     
 15578                           ;../src/boards/w65_cmn.c: 126:     _delay((unsigned long)((1000)*(64000000UL/4000.0)));
 15579   01FB02  0E52               	movlw	82
 15580   01FB04  0105               	movlb	5	; () banked
 15581   01FB06  6FBE               	movwf	(??_wait_for_programmer+1)& (0+255),b
 15582   01FB08  0E2B               	movlw	43
 15583   01FB0A  6FBD               	movwf	??_wait_for_programmer& (0+255),b
 15584   01FB0C  0E00               	movlw	0
 15585   01FB0E                     u37057:
 15586   01FB0E  2EE8               	decfsz	wreg,f,c
 15587   01FB10  D7FE               	bra	u37057
 15588   01FB12  2FBD               	decfsz	??_wait_for_programmer& (0+255),f,b
 15589   01FB14  D7FC               	bra	u37057
 15590   01FB16  2FBE               	decfsz	(??_wait_for_programmer+1)& (0+255),f,b
 15591   01FB18  D7FA               	bra	u37057
 15592   01FB1A  0000               	nop	
 15593   01FB1C                     
 15594                           ;../src/boards/w65_cmn.c: 128:     printf("\n\r");
 15595   01FB1C  0E8B               	movlw	low (STR_27+52)
 15596   01FB1E  0105               	movlb	5	; () banked
 15597   01FB20  6FAD               	movwf	printf@fmt& (0+255),b
 15598   01FB22  0EF2               	movlw	high (STR_27+52)
 15599   01FB24  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15600   01FB26  ECDA  F0FF         	call	_printf	;wreg free
 15601   01FB2A  0012               	return		;funcret
 15602   01FB2C                     __end_of_wait_for_programmer:
 15603                           	callstack 0
 15604                           
 15605 ;; *************** function _uart_init *****************
 15606 ;; Defined at:
 15607 ;;		line 288 in file "../src/boards/w65_cmn.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;		None
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  1    wreg      void 
 15614 ;; Registers used:
 15615 ;;		wreg, status,2
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15625 ;;Total ram usage:        0 bytes
 15626 ;; Hardware stack levels used: 1
 15627 ;; Hardware stack levels required when called: 1
 15628 ;; This function calls:
 15629 ;;		Nothing
 15630 ;; This function is called by:
 15631 ;;		_main
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text16
 15636   01FD04                     __ptext16:
 15637                           	callstack 0
 15638   01FD04                     _uart_init:
 15639                           	callstack 125
 15640   01FD04                     
 15641                           ;../src/boards/w65_cmn.c: 294:  U3BRG = 34;
 15642   01FD04  0E00               	movlw	0
 15643   01FD06  0102               	movlb	2	; () banked
 15644   01FD08  6FD5               	movwf	213,b	;volatile
 15645   01FD0A  0E22               	movlw	34
 15646   01FD0C  6FD4               	movwf	212,b	;volatile
 15647   01FD0E                     
 15648                           ; BSR set to: 2
 15649                           ;../src/boards/w65_cmn.c: 295:  U3RXEN = 1;
 15650   01FD0E  89D1               	bsf	209,4,b	;volatile
 15651   01FD10                     
 15652                           ; BSR set to: 2
 15653                           ;../src/boards/w65_cmn.c: 296:  U3TXEN = 1;
 15654   01FD10  8BD1               	bsf	209,5,b	;volatile
 15655   01FD12                     
 15656                           ; BSR set to: 2
 15657                           ;../src/boards/w65_cmn.c: 299:  TRISA7 = 1;
 15658   01FD12  8EC6               	bsf	1222,7,c	;volatile
 15659                           
 15660                           ;../src/boards/w65_cmn.c: 300:  U3RXPPS = 0x07;
 15661   01FD14  0E07               	movlw	7
 15662   01FD16  6F76               	movwf	118,b	;volatile
 15663   01FD18                     
 15664                           ; BSR set to: 2
 15665                           ;../src/boards/w65_cmn.c: 303:  LATA6 = 1;
 15666   01FD18  8CBE               	bsf	1214,6,c	;volatile
 15667   01FD1A                     
 15668                           ; BSR set to: 2
 15669                           ;../src/boards/w65_cmn.c: 304:  TRISA6 = 0;
 15670   01FD1A  9CC6               	bcf	1222,6,c	;volatile
 15671                           
 15672                           ;../src/boards/w65_cmn.c: 305:  RA6PPS = 0x26;
 15673   01FD1C  0E26               	movlw	38
 15674   01FD1E  6F07               	movwf	7,b	;volatile
 15675   01FD20                     
 15676                           ; BSR set to: 2
 15677                           ;../src/boards/w65_cmn.c: 307:  U3ON = 1;
 15678   01FD20  8FD2               	bsf	210,7,b	;volatile
 15679                           
 15680                           ;../src/boards/w65_cmn.c: 309:  rx_wp = 0;
 15681   01FD22  0E00               	movlw	0
 15682   01FD24  0107               	movlb	7	; () banked
 15683   01FD26  6FC6               	movwf	(_rx_wp+1)& (0+255),b
 15684   01FD28  0E00               	movlw	0
 15685   01FD2A  6FC5               	movwf	_rx_wp& (0+255),b
 15686                           
 15687                           ;../src/boards/w65_cmn.c: 310:  rx_rp = 0;
 15688   01FD2C  0E00               	movlw	0
 15689   01FD2E  6FC4               	movwf	(_rx_rp+1)& (0+255),b
 15690   01FD30  0E00               	movlw	0
 15691   01FD32  6FC3               	movwf	_rx_rp& (0+255),b
 15692                           
 15693                           ;../src/boards/w65_cmn.c: 311:  rx_cnt = 0;
 15694   01FD34  0E00               	movlw	0
 15695   01FD36  6FC2               	movwf	(_rx_cnt+1)& (0+255),b
 15696   01FD38  0E00               	movlw	0
 15697   01FD3A  6FC1               	movwf	_rx_cnt& (0+255),b
 15698   01FD3C                     
 15699                           ; BSR set to: 7
 15700                           ;../src/boards/w65_cmn.c: 312:  U3RXIE = 1;
 15701   01FD3C  80A7               	bsf	1191,0,c	;volatile
 15702   01FD3E                     
 15703                           ; BSR set to: 7
 15704   01FD3E  0012               	return		;funcret
 15705   01FD40                     __end_of_uart_init:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _setup_sd *****************
 15709 ;; Defined at:
 15710 ;;		line 241 in file "../src/boards/w65_bd.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15728 ;;Total ram usage:        2 bytes
 15729 ;; Hardware stack levels used: 1
 15730 ;; Hardware stack levels required when called: 11
 15731 ;; This function calls:
 15732 ;;		_SDCard_init
 15733 ;;		_printf
 15734 ;; This function is called by:
 15735 ;;		_main
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text17
 15740   01EF40                     __ptext17:
 15741                           	callstack 0
 15742   01EF40                     _setup_sd:
 15743                           	callstack 115
 15744   01EF40                     
 15745                           ;../src/boards/w65_bd.c: 245:     static int retry;;../src/boards/w65_bd.c: 246:     for
      +                           (retry = 0; 1; retry++) {
 15746   01EF40  0E00               	movlw	0
 15747   01EF42  0107               	movlb	7	; () banked
 15748   01EF44  6FC0               	movwf	(setup_sd@retry+1)& (0+255),b
 15749   01EF46  0E00               	movlw	0
 15750   01EF48  6FBF               	movwf	setup_sd@retry& (0+255),b
 15751   01EF4A                     l24959:
 15752                           
 15753                           ; BSR set to: 7
 15754                           ;../src/boards/w65_bd.c: 247:         if (20 <= retry) {
 15755   01EF4A  BFC0               	btfsc	(setup_sd@retry+1)& (0+255),7,b
 15756   01EF4C  EFB1  F0F7         	goto	u34621
 15757   01EF50  51C0               	movf	(setup_sd@retry+1)& (0+255),w,b
 15758   01EF52  E109               	bnz	u34620
 15759   01EF54  0E14               	movlw	20
 15760   01EF56  5DBF               	subwf	setup_sd@retry& (0+255),w,b
 15761   01EF58  A0D8               	btfss	status,0,c
 15762   01EF5A  EFB1  F0F7         	goto	u34621
 15763   01EF5E  EFB3  F0F7         	goto	u34620
 15764   01EF62                     u34621:
 15765   01EF62  EFBC  F0F7         	goto	l24963
 15766   01EF66                     u34620:
 15767   01EF66                     
 15768                           ; BSR set to: 7
 15769                           ;../src/boards/w65_bd.c: 248:             printf("No SD Card?\n\r");
 15770   01EF66  0E6C               	movlw	low STR_5
 15771   01EF68  0105               	movlb	5	; () banked
 15772   01EF6A  6FAD               	movwf	printf@fmt& (0+255),b
 15773   01EF6C  0EFE               	movlw	high STR_5
 15774   01EF6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15775   01EF70  ECDA  F0FF         	call	_printf	;wreg free
 15776   01EF74                     l398:
 15777   01EF74  EFBA  F0F7         	goto	l398
 15778   01EF78                     l24963:
 15779                           
 15780                           ; BSR set to: 7
 15781                           ;../src/boards/w65_bd.c: 252:         if (SDCard_init(SPI_CLOCK_100KHZ, SPI_CLOCK_4MHZ, 
      +                          100) == 0)
 15782   01EF78  0E00               	movlw	0
 15783   01EF7A  0105               	movlb	5	; () banked
 15784   01EF7C  6FC6               	movwf	(SDCard_init@initial_clock_speed+1)& (0+255),b
 15785   01EF7E  0E00               	movlw	0
 15786   01EF80  6FC5               	movwf	SDCard_init@initial_clock_speed& (0+255),b
 15787   01EF82  0E00               	movlw	0
 15788   01EF84  6FC8               	movwf	(SDCard_init@clock_speed+1)& (0+255),b
 15789   01EF86  0E02               	movlw	2
 15790   01EF88  6FC7               	movwf	SDCard_init@clock_speed& (0+255),b
 15791   01EF8A  0E00               	movlw	0
 15792   01EF8C  6FCA               	movwf	(SDCard_init@timeout+1)& (0+255),b
 15793   01EF8E  0E64               	movlw	100
 15794   01EF90  6FC9               	movwf	SDCard_init@timeout& (0+255),b
 15795   01EF92  ECC0  F0C9         	call	_SDCard_init	;wreg free
 15796   01EF96  0105               	movlb	5	; () banked
 15797   01EF98  51C5               	movf	?_SDCard_init& (0+255),w,b
 15798   01EF9A  11C6               	iorwf	(?_SDCard_init+1)& (0+255),w,b
 15799   01EF9C  A4D8               	btfss	status,2,c
 15800   01EF9E  EFD3  F0F7         	goto	u34631
 15801   01EFA2  EFD5  F0F7         	goto	u34630
 15802   01EFA6                     u34631:
 15803   01EFA6  EFD7  F0F7         	goto	l24967
 15804   01EFAA                     u34630:
 15805   01EFAA  EFE8  F0F7         	goto	l403
 15806   01EFAE                     l24967:
 15807                           
 15808                           ; BSR set to: 5
 15809                           ;../src/boards/w65_bd.c: 255:         _delay((unsigned long)((200)*(64000000UL/4000.0)))
      +                          ;
 15810   01EFAE  0E11               	movlw	17
 15811   01EFB0  0105               	movlb	5	; () banked
 15812   01EFB2  6FD6               	movwf	(??_setup_sd+1)& (0+255),b
 15813   01EFB4  0E3C               	movlw	60
 15814   01EFB6  6FD5               	movwf	??_setup_sd& (0+255),b
 15815   01EFB8  0ECB               	movlw	203
 15816   01EFBA                     u37067:
 15817   01EFBA  2EE8               	decfsz	wreg,f,c
 15818   01EFBC  D7FE               	bra	u37067
 15819   01EFBE  2FD5               	decfsz	??_setup_sd& (0+255),f,b
 15820   01EFC0  D7FC               	bra	u37067
 15821   01EFC2  2FD6               	decfsz	(??_setup_sd+1)& (0+255),f,b
 15822   01EFC4  D7FA               	bra	u37067
 15823   01EFC6                     
 15824                           ;../src/boards/w65_bd.c: 256:     }
 15825   01EFC6  0107               	movlb	7	; () banked
 15826   01EFC8  4BBF               	infsnz	setup_sd@retry& (0+255),f,b
 15827   01EFCA  2BC0               	incf	(setup_sd@retry+1)& (0+255),f,b
 15828   01EFCC  EFA5  F0F7         	goto	l24959
 15829   01EFD0                     l403:
 15830                           
 15831                           ; BSR set to: 5
 15832   01EFD0  0012               	return		;funcret
 15833   01EFD2                     __end_of_setup_sd:
 15834                           	callstack 0
 15835                           
 15836 ;; *************** function _SDCard_init *****************
 15837 ;; Defined at:
 15838 ;;		line 53 in file "../src/boards/../../drivers/SDCard.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  initial_cloc    2  101[BANK5 ] int 
 15841 ;;  clock_speed     2  103[BANK5 ] int 
 15842 ;;  timeout         2  105[BANK5 ] unsigned short 
 15843 ;; Auto vars:     Size  Location     Type
 15844 ;;  i               2  108[BANK5 ] int 
 15845 ;;  buf             5  112[BANK5 ] unsigned char [5]
 15846 ;;  spi             2  110[BANK5 ] PTR struct SPI
 15847 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 15848 ;; Return value:  Size  Location     Type
 15849 ;;                  2  101[BANK5 ] int 
 15850 ;; Registers used:
 15851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15852 ;; Tracked objects:
 15853 ;;		On entry : 0/0
 15854 ;;		On exit  : 0/0
 15855 ;;		Unchanged: 0/0
 15856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15857 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15858 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15860 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15861 ;;Total ram usage:       16 bytes
 15862 ;; Hardware stack levels used: 1
 15863 ;; Hardware stack levels required when called: 10
 15864 ;; This function calls:
 15865 ;;		_SDCard_command
 15866 ;;		_SDCard_end_transaction
 15867 ;;		_SPI_SD_begin
 15868 ;;		_SPI_SD_begin_transaction
 15869 ;;		_SPI_SD_configure
 15870 ;;		_SPI_SD_dummy_clocks
 15871 ;;		_printf
 15872 ;; This function is called by:
 15873 ;;		_setup_sd
 15874 ;; This function uses a non-reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text18
 15878   019380                     __ptext18:
 15879                           	callstack 0
 15880   019380                     _SDCard_init:
 15881                           	callstack 115
 15882   019380                     
 15883                           ;../src/boards/../../drivers/SDCard.c: 53: int SDCard_init(int initial_clock_speed, int 
      +                          clock_speed, uint16_t timeout);../src/boards/../../drivers/SDCard.c: 54: {;../src/boards
      +                          /../../drivers/SDCard.c: 55:     ctx_.spi = SPI_SD_ctx;
 15884   019380  0ECF               	movlw	low _pic18f47q43_spi_ctx
 15885   019382  0107               	movlb	7	; () banked
 15886   019384  6FA8               	movwf	_ctx_& (0+255),b
 15887   019386  0E08               	movlw	high _pic18f47q43_spi_ctx
 15888   019388  6FA9               	movwf	(_ctx_+1)& (0+255),b
 15889   01938A                     
 15890                           ; BSR set to: 7
 15891                           ;../src/boards/../../drivers/SDCard.c: 56:     ctx_.timeout = timeout;
 15892   01938A  C5C9  F7AA         	movff	SDCard_init@timeout,_ctx_+2
 15893   01938E  C5CA  F7AB         	movff	SDCard_init@timeout+1,_ctx_+3
 15894   019392                     
 15895                           ; BSR set to: 7
 15896                           ;../src/boards/../../drivers/SDCard.c: 57:     ctx_.calc_read_crc = 0;
 15897   019392  91AC               	bcf	(_ctx_+4)& (0+255),0,b
 15898                           
 15899                           ;../src/boards/../../drivers/SDCard.c: 58:     struct SPI *spi = ctx_.spi;
 15900   019394  C7A8  F5CE         	movff	_ctx_,SDCard_init@spi
 15901   019398  C7A9  F5CF         	movff	_ctx_+1,SDCard_init@spi+1
 15902   01939C                     
 15903                           ; BSR set to: 7
 15904                           ;../src/boards/../../drivers/SDCard.c: 59:     SPI_SD_begin(spi);
 15905   01939C  C5CE  F504         	movff	SDCard_init@spi,SPI_SD_begin@ctx_
 15906   0193A0  C5CF  F505         	movff	SDCard_init@spi+1,SPI_SD_begin@ctx_+1
 15907   0193A4  EC9A  F0FF         	call	_SPI_SD_begin	;wreg free
 15908   0193A8                     
 15909                           ;../src/boards/../../drivers/SDCard.c: 64:     SPI_SD_configure(spi, initial_clock_speed
      +                          , 1, 0);
 15910   0193A8  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 15911   0193AC  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 15912   0193B0  C5C5  F5BF         	movff	SDCard_init@initial_clock_speed,SPI_SD_configure@clock_speed
 15913   0193B4  C5C6  F5C0         	movff	SDCard_init@initial_clock_speed+1,SPI_SD_configure@clock_speed+1
 15914   0193B8  0E01               	movlw	1
 15915   0193BA  0105               	movlb	5	; () banked
 15916   0193BC  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 15917   0193BE  0E00               	movlw	0
 15918   0193C0  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 15919   0193C2  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 15920   0193C6                     
 15921                           ;../src/boards/../../drivers/SDCard.c: 65:     SPI_SD_begin_transaction(spi);
 15922   0193C6  C5CE  F508         	movff	SDCard_init@spi,SPI_SD_begin_transaction@ctx_
 15923   0193CA  C5CF  F509         	movff	SDCard_init@spi+1,SPI_SD_begin_transaction@ctx_+1
 15924   0193CE  EC94  F000         	call	_SPI_SD_begin_transaction	;wreg free
 15925   0193D2                     
 15926                           ;../src/boards/../../drivers/SDCard.c: 66:     SPI_SD_dummy_clocks(spi, 10);
 15927   0193D2  C5CE  F50E         	movff	SDCard_init@spi,SPI_SD_dummy_clocks@ctx_
 15928   0193D6  C5CF  F50F         	movff	SDCard_init@spi+1,SPI_SD_dummy_clocks@ctx_+1
 15929   0193DA  0E00               	movlw	0
 15930   0193DC  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 15931   0193DE  0E0A               	movlw	10
 15932   0193E0  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 15933   0193E2  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 15934   0193E6                     
 15935                           ;../src/boards/../../drivers/SDCard.c: 67:     SDCard_end_transaction();
 15936   0193E6  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 15937   0193EA                     
 15938                           ;../src/boards/../../drivers/SDCard.c: 70:     SDCard_command(0, 0, buf, 1);
 15939   0193EA  0E00               	movlw	0
 15940   0193EC  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 15941   0193EE  0E00               	movlw	0
 15942   0193F0  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 15943   0193F2  0E00               	movlw	0
 15944   0193F4  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 15945   0193F6  0E00               	movlw	0
 15946   0193F8  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 15947   0193FA  0ED0               	movlw	low SDCard_init@buf
 15948   0193FC  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 15949   0193FE  0E05               	movlw	high SDCard_init@buf
 15950   019400  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 15951   019402  0E00               	movlw	0
 15952   019404  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 15953   019406  0E01               	movlw	1
 15954   019408  6E31               	movwf	SDCard_command@length^(0+1280),c
 15955   01940A  0E00               	movlw	0
 15956   01940C  EC7A  F0F9         	call	_SDCard_command
 15957   019410                     
 15958                           ;../src/boards/../../drivers/SDCard.c: 72:     if (buf[0] != 0x01) {
 15959   019410  0105               	movlb	5	; () banked
 15960   019412  05D0               	decf	SDCard_init@buf& (0+255),w,b
 15961   019414  B4D8               	btfsc	status,2,c
 15962   019416  EF0F  F0CA         	goto	u33381
 15963   01941A  EF11  F0CA         	goto	u33380
 15964   01941E                     u33381:
 15965   01941E  EF17  F0CA         	goto	l24195
 15966   019422                     u33380:
 15967   019422                     l24191:
 15968                           
 15969                           ; BSR set to: 5
 15970                           ;../src/boards/../../drivers/SDCard.c: 74:         return 1;
 15971   019422  0E00               	movlw	0
 15972   019424  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 15973   019426  0E01               	movlw	1
 15974   019428  6FC5               	movwf	?_SDCard_init& (0+255),b
 15975   01942A  EF02  F0CB         	goto	l612
 15976   01942E                     l24195:
 15977                           
 15978                           ; BSR set to: 5
 15979                           ;../src/boards/../../drivers/SDCard.c: 78:     SDCard_command(8, 0x000001aa, buf, 5);
 15980   01942E  0EAA               	movlw	170
 15981   019430  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 15982   019432  0E01               	movlw	1
 15983   019434  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 15984   019436  0E00               	movlw	0
 15985   019438  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 15986   01943A  0E00               	movlw	0
 15987   01943C  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 15988   01943E  0ED0               	movlw	low SDCard_init@buf
 15989   019440  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 15990   019442  0E05               	movlw	high SDCard_init@buf
 15991   019444  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 15992   019446  0E00               	movlw	0
 15993   019448  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 15994   01944A  0E05               	movlw	5
 15995   01944C  6E31               	movwf	SDCard_command@length^(0+1280),c
 15996   01944E  0E08               	movlw	8
 15997   019450  EC7A  F0F9         	call	_SDCard_command
 15998   019454                     
 15999                           ;../src/boards/../../drivers/SDCard.c: 81:     if (buf[0] != 0x01 || (buf[3] & 0x01) != 
      +                          0x01 || buf[4] != 0xaa) {
 16000   019454  0105               	movlb	5	; () banked
 16001   019456  05D0               	decf	SDCard_init@buf& (0+255),w,b
 16002   019458  A4D8               	btfss	status,2,c
 16003   01945A  EF31  F0CA         	goto	u33391
 16004   01945E  EF33  F0CA         	goto	u33390
 16005   019462                     u33391:
 16006   019462  EF45  F0CA         	goto	l620
 16007   019466                     u33390:
 16008   019466                     
 16009                           ; BSR set to: 5
 16010   019466  A1D3               	btfss	(SDCard_init@buf+3)& (0+255),0,b
 16011   019468  EF38  F0CA         	goto	u33401
 16012   01946C  EF3A  F0CA         	goto	u33400
 16013   019470                     u33401:
 16014   019470  EF45  F0CA         	goto	l620
 16015   019474                     u33400:
 16016   019474                     
 16017                           ; BSR set to: 5
 16018   019474  0EAA               	movlw	170
 16019   019476  19D4               	xorwf	(SDCard_init@buf+4)& (0+255),w,b
 16020   019478  B4D8               	btfsc	status,2,c
 16021   01947A  EF41  F0CA         	goto	u33411
 16022   01947E  EF43  F0CA         	goto	u33410
 16023   019482                     u33411:
 16024   019482  EF4B  F0CA         	goto	l24211
 16025   019486                     u33410:
 16026   019486  EF45  F0CA         	goto	l24207
 16027   01948A                     l620:
 16028   01948A                     l24207:
 16029                           
 16030                           ; BSR set to: 5
 16031                           ;../src/boards/../../drivers/SDCard.c: 83:         return 2;
 16032   01948A  0E00               	movlw	0
 16033   01948C  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16034   01948E  0E02               	movlw	2
 16035   019490  6FC5               	movwf	?_SDCard_init& (0+255),b
 16036   019492  EF02  F0CB         	goto	l612
 16037   019496                     l24211:
 16038                           
 16039                           ; BSR set to: 5
 16040                           ;../src/boards/../../drivers/SDCard.c: 87:     for (int i = 0; i < 3000; i++) {
 16041   019496  0E00               	movlw	0
 16042   019498  6FCD               	movwf	(SDCard_init@i+1)& (0+255),b
 16043   01949A  0E00               	movlw	0
 16044   01949C  6FCC               	movwf	SDCard_init@i& (0+255),b
 16045   01949E                     l24217:
 16046                           
 16047                           ; BSR set to: 5
 16048                           ;../src/boards/../../drivers/SDCard.c: 88:         SDCard_command(55, 0, buf, 1);
 16049   01949E  0E00               	movlw	0
 16050   0194A0  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16051   0194A2  0E00               	movlw	0
 16052   0194A4  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16053   0194A6  0E00               	movlw	0
 16054   0194A8  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16055   0194AA  0E00               	movlw	0
 16056   0194AC  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16057   0194AE  0ED0               	movlw	low SDCard_init@buf
 16058   0194B0  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16059   0194B2  0E05               	movlw	high SDCard_init@buf
 16060   0194B4  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16061   0194B6  0E00               	movlw	0
 16062   0194B8  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16063   0194BA  0E01               	movlw	1
 16064   0194BC  6E31               	movwf	SDCard_command@length^(0+1280),c
 16065   0194BE  0E37               	movlw	55
 16066   0194C0  EC7A  F0F9         	call	_SDCard_command
 16067                           
 16068                           ;../src/boards/../../drivers/SDCard.c: 89:         SDCard_command(41, 1UL << 30 , buf, 5
      +                          );
 16069   0194C4  0E00               	movlw	0
 16070   0194C6  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16071   0194C8  0E00               	movlw	0
 16072   0194CA  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16073   0194CC  0E00               	movlw	0
 16074   0194CE  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16075   0194D0  0E40               	movlw	64
 16076   0194D2  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16077   0194D4  0ED0               	movlw	low SDCard_init@buf
 16078   0194D6  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16079   0194D8  0E05               	movlw	high SDCard_init@buf
 16080   0194DA  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16081   0194DC  0E00               	movlw	0
 16082   0194DE  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16083   0194E0  0E05               	movlw	5
 16084   0194E2  6E31               	movwf	SDCard_command@length^(0+1280),c
 16085   0194E4  0E29               	movlw	41
 16086   0194E6  EC7A  F0F9         	call	_SDCard_command
 16087   0194EA                     
 16088                           ;../src/boards/../../drivers/SDCard.c: 90:         if (buf[0] == 0x00)
 16089   0194EA  0105               	movlb	5	; () banked
 16090   0194EC  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16091   0194EE  A4D8               	btfss	status,2,c
 16092   0194F0  EF7C  F0CA         	goto	u33421
 16093   0194F4  EF7E  F0CA         	goto	u33420
 16094   0194F8                     u33421:
 16095   0194F8  EF80  F0CA         	goto	l24223
 16096   0194FC                     u33420:
 16097   0194FC  EF90  F0CA         	goto	l24229
 16098   019500                     l24223:
 16099                           
 16100                           ; BSR set to: 5
 16101                           ;../src/boards/../../drivers/SDCard.c: 92:     }
 16102   019500  4BCC               	infsnz	SDCard_init@i& (0+255),f,b
 16103   019502  2BCD               	incf	(SDCard_init@i+1)& (0+255),f,b
 16104   019504                     
 16105                           ; BSR set to: 5
 16106   019504  BFCD               	btfsc	(SDCard_init@i+1)& (0+255),7,b
 16107   019506  EF8E  F0CA         	goto	u33431
 16108   01950A  0EB8               	movlw	184
 16109   01950C  5DCC               	subwf	SDCard_init@i& (0+255),w,b
 16110   01950E  0E0B               	movlw	11
 16111   019510  59CD               	subwfb	(SDCard_init@i+1)& (0+255),w,b
 16112   019512  A0D8               	btfss	status,0,c
 16113   019514  EF8E  F0CA         	goto	u33431
 16114   019518  EF90  F0CA         	goto	u33430
 16115   01951C                     u33431:
 16116   01951C  EF4F  F0CA         	goto	l24217
 16117   019520                     u33430:
 16118   019520                     l24229:
 16119                           
 16120                           ; BSR set to: 5
 16121                           ;../src/boards/../../drivers/SDCard.c: 94:     if (buf[0] != 0x00) {
 16122   019520  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16123   019522  B4D8               	btfsc	status,2,c
 16124   019524  EF96  F0CA         	goto	u33441
 16125   019528  EF98  F0CA         	goto	u33440
 16126   01952C                     u33441:
 16127   01952C  EF9A  F0CA         	goto	l24237
 16128   019530                     u33440:
 16129   019530  EF11  F0CA         	goto	l24191
 16130   019534                     l24237:
 16131                           
 16132                           ; BSR set to: 5
 16133                           ;../src/boards/../../drivers/SDCard.c: 100:     SDCard_command(58, 0, buf, 5);
 16134   019534  0E00               	movlw	0
 16135   019536  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16136   019538  0E00               	movlw	0
 16137   01953A  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16138   01953C  0E00               	movlw	0
 16139   01953E  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16140   019540  0E00               	movlw	0
 16141   019542  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16142   019544  0ED0               	movlw	low SDCard_init@buf
 16143   019546  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16144   019548  0E05               	movlw	high SDCard_init@buf
 16145   01954A  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16146   01954C  0E00               	movlw	0
 16147   01954E  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16148   019550  0E05               	movlw	5
 16149   019552  6E31               	movwf	SDCard_command@length^(0+1280),c
 16150   019554  0E3A               	movlw	58
 16151   019556  EC7A  F0F9         	call	_SDCard_command
 16152   01955A                     
 16153                           ;../src/boards/../../drivers/SDCard.c: 103:     if (buf[0] & 0xfe) {
 16154   01955A  C5D0  F5CB         	movff	SDCard_init@buf,??_SDCard_init
 16155   01955E  0EFE               	movlw	254
 16156   019560  0105               	movlb	5	; () banked
 16157   019562  17CB               	andwf	??_SDCard_init& (0+255),f,b
 16158   019564  B4D8               	btfsc	status,2,c
 16159   019566  EFB7  F0CA         	goto	u33451
 16160   01956A  EFB9  F0CA         	goto	u33450
 16161   01956E                     u33451:
 16162   01956E  EFBF  F0CA         	goto	l635
 16163   019572                     u33450:
 16164   019572                     l24245:
 16165                           
 16166                           ; BSR set to: 5
 16167                           ;../src/boards/../../drivers/SDCard.c: 105:         return 3;
 16168   019572  0E00               	movlw	0
 16169   019574  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16170   019576  0E03               	movlw	3
 16171   019578  6FC5               	movwf	?_SDCard_init& (0+255),b
 16172   01957A  EF02  F0CB         	goto	l612
 16173   01957E                     l635:
 16174                           
 16175                           ; BSR set to: 5
 16176                           ;../src/boards/../../drivers/SDCard.c: 107:     if (!(buf[1] & 0x40)) {
 16177   01957E  BDD1               	btfsc	(SDCard_init@buf+1)& (0+255),6,b
 16178   019580  EFC4  F0CA         	goto	u33461
 16179   019584  EFC6  F0CA         	goto	u33460
 16180   019588                     u33461:
 16181   019588  EFC8  F0CA         	goto	l644
 16182   01958C                     u33460:
 16183   01958C  EF45  F0CA         	goto	l24207
 16184   019590                     l644:
 16185   019590                     
 16186                           ; BSR set to: 5
 16187                           ;../src/boards/../../drivers/SDCard.c: 113:     if (!(buf[1] & 0x80)) {
 16188   019590  BFD1               	btfsc	(SDCard_init@buf+1)& (0+255),7,b
 16189   019592  EFCD  F0CA         	goto	u33471
 16190   019596  EFCF  F0CA         	goto	u33470
 16191   01959A                     u33471:
 16192   01959A  EFD1  F0CA         	goto	l651
 16193   01959E                     u33470:
 16194   01959E  EFB9  F0CA         	goto	l24245
 16195   0195A2                     l651:
 16196   0195A2                     
 16197                           ; BSR set to: 5
 16198                           ;../src/boards/../../drivers/SDCard.c: 120:     SDCard_command(59, 1, buf, 1);
 16199   0195A2  0E01               	movlw	1
 16200   0195A4  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 16201   0195A6  0E00               	movlw	0
 16202   0195A8  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 16203   0195AA  0E00               	movlw	0
 16204   0195AC  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 16205   0195AE  0E00               	movlw	0
 16206   0195B0  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 16207   0195B2  0ED0               	movlw	low SDCard_init@buf
 16208   0195B4  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 16209   0195B6  0E05               	movlw	high SDCard_init@buf
 16210   0195B8  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 16211   0195BA  0E00               	movlw	0
 16212   0195BC  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 16213   0195BE  0E01               	movlw	1
 16214   0195C0  6E31               	movwf	SDCard_command@length^(0+1280),c
 16215   0195C2  0E3B               	movlw	59
 16216   0195C4  EC7A  F0F9         	call	_SDCard_command
 16217   0195C8                     
 16218                           ;../src/boards/../../drivers/SDCard.c: 121:     if (buf[0] != 0x00) {
 16219   0195C8  0105               	movlb	5	; () banked
 16220   0195CA  51D0               	movf	SDCard_init@buf& (0+255),w,b
 16221   0195CC  B4D8               	btfsc	status,2,c
 16222   0195CE  EFEB  F0CA         	goto	u33481
 16223   0195D2  EFED  F0CA         	goto	u33480
 16224   0195D6                     u33481:
 16225   0195D6  EFEF  F0CA         	goto	l24277
 16226   0195DA                     u33480:
 16227   0195DA  EFB9  F0CA         	goto	l24245
 16228   0195DE                     l24277:
 16229                           
 16230                           ; BSR set to: 5
 16231                           ;../src/boards/../../drivers/SDCard.c: 126:     SPI_SD_configure(spi, clock_speed, 1, 0)
      +                          ;
 16232   0195DE  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 16233   0195E2  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 16234   0195E6  C5C7  F5BF         	movff	SDCard_init@clock_speed,SPI_SD_configure@clock_speed
 16235   0195EA  C5C8  F5C0         	movff	SDCard_init@clock_speed+1,SPI_SD_configure@clock_speed+1
 16236   0195EE  0E01               	movlw	1
 16237   0195F0  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 16238   0195F2  0E00               	movlw	0
 16239   0195F4  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 16240   0195F6  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 16241   0195FA                     
 16242                           ;../src/boards/../../drivers/SDCard.c: 130:     return 0;
 16243   0195FA  0E00               	movlw	0
 16244   0195FC  0105               	movlb	5	; () banked
 16245   0195FE  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 16246   019600  0E00               	movlw	0
 16247   019602  6FC5               	movwf	?_SDCard_init& (0+255),b
 16248   019604                     l612:
 16249                           
 16250                           ; BSR set to: 5
 16251   019604  0012               	return		;funcret
 16252   019606                     __end_of_SDCard_init:
 16253                           	callstack 0
 16254                           
 16255 ;; *************** function _SPI_SD_configure *****************
 16256 ;; Defined at:
 16257 ;;		line 78 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 16258 ;; Parameters:    Size  Location     Type
 16259 ;;  ctx_            2   93[BANK5 ] PTR struct SPI
 16260 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16261 ;;  clock_speed     2   95[BANK5 ] int 
 16262 ;;  bit_order       1   97[BANK5 ] unsigned char 
 16263 ;;  data_mode       1   98[BANK5 ] unsigned char 
 16264 ;; Auto vars:     Size  Location     Type
 16265 ;;  ctx             2    0        PTR struct SPI_HW
 16266 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16267 ;; Return value:  Size  Location     Type
 16268 ;;                  1    wreg      void 
 16269 ;; Registers used:
 16270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16276 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16280 ;;Total ram usage:        8 bytes
 16281 ;; Hardware stack levels used: 1
 16282 ;; Hardware stack levels required when called: 9
 16283 ;; This function calls:
 16284 ;;		_printf
 16285 ;; This function is called by:
 16286 ;;		_SDCard_init
 16287 ;; This function uses a non-reentrant model
 16288 ;;
 16289                           
 16290                           	psect	text19
 16291   01CAB6                     __ptext19:
 16292                           	callstack 0
 16293   01CAB6                     _SPI_SD_configure:
 16294                           	callstack 115
 16295   01CAB6                     
 16296                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 82:     SPI1CON0bits.MST = 1;
 16297   01CAB6  0100               	movlb	0	; () banked
 16298   01CAB8  8384               	bsf	132,1,b	;volatile
 16299   01CABA                     
 16300                           ; BSR set to: 0
 16301                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 83:     SPI1CON0bits.BMODE = 1;
 16302   01CABA  8184               	bsf	132,0,b	;volatile
 16303   01CABC                     
 16304                           ; BSR set to: 0
 16305                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 84:     SPI1TWIDTH = 0;
 16306   01CABC  6B88               	clrf	136,b	;volatile
 16307   01CABE                     
 16308                           ; BSR set to: 0
 16309                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 85:     SPI1INTE = 0;
 16310   01CABE  6B8B               	clrf	139,b	;volatile
 16311   01CAC0                     
 16312                           ; BSR set to: 0
 16313                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 86:     SPI1CON1bits.FST = 0;
 16314   01CAC0  9985               	bcf	133,4,b	;volatile
 16315   01CAC2                     
 16316                           ; BSR set to: 0
 16317                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 87:     SPI1CON2bits.TXR = 1;
 16318   01CAC2  8386               	bsf	134,1,b	;volatile
 16319   01CAC4                     
 16320                           ; BSR set to: 0
 16321                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 88:     SPI1CON2bits.RXR = 1;
 16322   01CAC4  8186               	bsf	134,0,b	;volatile
 16323                           
 16324                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 90:     if (bit_order == 1)
 16325   01CAC6  0105               	movlb	5	; () banked
 16326   01CAC8  05C1               	decf	SPI_SD_configure@bit_order& (0+255),w,b
 16327   01CACA  A4D8               	btfss	status,2,c
 16328   01CACC  EF6A  F0E5         	goto	u33141
 16329   01CAD0  EF6C  F0E5         	goto	u33140
 16330   01CAD4                     u33141:
 16331   01CAD4  EF70  F0E5         	goto	l464
 16332   01CAD8                     u33140:
 16333   01CAD8                     
 16334                           ; BSR set to: 5
 16335                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 91:         SPI1CON0bits.LSBF = 0;
 16336   01CAD8  0100               	movlb	0	; () banked
 16337   01CADA  9584               	bcf	132,2,b	;volatile
 16338   01CADC  EF72  F0E5         	goto	l23985
 16339   01CAE0                     l464:
 16340                           
 16341                           ; BSR set to: 5
 16342                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 93:         SPI1CON0bits.LSBF = 1;
 16343   01CAE0  0100               	movlb	0	; () banked
 16344   01CAE2  8584               	bsf	132,2,b	;volatile
 16345   01CAE4                     l23985:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 95:     if (data_mode == 0) {
 16349   01CAE4  0105               	movlb	5	; () banked
 16350   01CAE6  51C2               	movf	SPI_SD_configure@data_mode& (0+255),w,b
 16351   01CAE8  A4D8               	btfss	status,2,c
 16352   01CAEA  EF79  F0E5         	goto	u33151
 16353   01CAEE  EF7B  F0E5         	goto	u33150
 16354   01CAF2                     u33151:
 16355   01CAF2  EF81  F0E5         	goto	l23989
 16356   01CAF6                     u33150:
 16357   01CAF6                     
 16358                           ; BSR set to: 5
 16359                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 96:         SPI1CON1bits.SMP = 0;
 16360   01CAF6  0100               	movlb	0	; () banked
 16361   01CAF8  9F85               	bcf	133,7,b	;volatile
 16362                           
 16363                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 97:         SPI1CON1bits.CKE = 1;
 16364   01CAFA  8D85               	bsf	133,6,b	;volatile
 16365                           
 16366                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 98:         SPI1CON1bits.CKP = 0;
 16367   01CAFC  9B85               	bcf	133,5,b	;volatile
 16368                           
 16369                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 99:     } else {
 16370   01CAFE  EF90  F0E5         	goto	l467
 16371   01CB02                     l23989:
 16372                           
 16373                           ; BSR set to: 5
 16374                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 100:         printf("%s: ERROR: mode %d 
      +                          is not supported\n\r", __func__, data_mode);
 16375   01CB02  0EB4               	movlw	low STR_6
 16376   01CB04  6FAD               	movwf	printf@fmt& (0+255),b
 16377   01CB06  0EF6               	movlw	high STR_6
 16378   01CB08  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16379   01CB0A  0EC6               	movlw	low STR_7
 16380   01CB0C  6FAF               	movwf	(?_printf+2)& (0+255),b
 16381   01CB0E  0EFD               	movlw	high STR_7
 16382   01CB10  6FB0               	movwf	(?_printf+3)& (0+255),b
 16383   01CB12  C5C2  F5B1         	movff	SPI_SD_configure@data_mode,?_printf+4
 16384   01CB16  6BB2               	clrf	(?_printf+5)& (0+255),b
 16385   01CB18  ECDA  F0FF         	call	_printf	;wreg free
 16386   01CB1C                     l468:
 16387   01CB1C  EF8E  F0E5         	goto	l468
 16388   01CB20                     l467:
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 104:     SPI1CLK = 0;
 16392   01CB20  6B8C               	clrf	140,b	;volatile
 16393                           
 16394                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 105:     switch (clock_speed) {
 16395   01CB22  EFC8  F0E5         	goto	l24009
 16396   01CB26                     l23991:
 16397                           
 16398                           ; BSR set to: 5
 16399                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 107:         SPI1CLK = 2;
 16400   01CB26  0E02               	movlw	2
 16401   01CB28  0100               	movlb	0	; () banked
 16402   01CB2A  6F8C               	movwf	140,b	;volatile
 16403                           
 16404                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 108:         SPI1BAUD = 2;
 16405   01CB2C  0E02               	movlw	2
 16406   01CB2E  6F89               	movwf	137,b	;volatile
 16407                           
 16408                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 109:         break;
 16409   01CB30  EFF3  F0E5         	goto	l481
 16410   01CB34                     l23993:
 16411                           
 16412                           ; BSR set to: 5
 16413                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 111:         SPI1BAUD = 15;
 16414   01CB34  0E0F               	movlw	15
 16415   01CB36  0100               	movlb	0	; () banked
 16416   01CB38  6F89               	movwf	137,b	;volatile
 16417                           
 16418                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 112:         break;
 16419   01CB3A  EFF3  F0E5         	goto	l481
 16420   01CB3E                     l23995:
 16421                           
 16422                           ; BSR set to: 5
 16423                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 114:         SPI1BAUD = 7;
 16424   01CB3E  0E07               	movlw	7
 16425   01CB40  0100               	movlb	0	; () banked
 16426   01CB42  6F89               	movwf	137,b	;volatile
 16427                           
 16428                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 115:         break;
 16429   01CB44  EFF3  F0E5         	goto	l481
 16430   01CB48                     l23997:
 16431                           
 16432                           ; BSR set to: 5
 16433                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 117:         SPI1BAUD = 5;
 16434   01CB48  0E05               	movlw	5
 16435   01CB4A  0100               	movlb	0	; () banked
 16436   01CB4C  6F89               	movwf	137,b	;volatile
 16437                           
 16438                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 118:         break;
 16439   01CB4E  EFF3  F0E5         	goto	l481
 16440   01CB52                     l23999:
 16441                           
 16442                           ; BSR set to: 5
 16443                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 120:         SPI1BAUD = 4;
 16444   01CB52  0E04               	movlw	4
 16445   01CB54  0100               	movlb	0	; () banked
 16446   01CB56  6F89               	movwf	137,b	;volatile
 16447                           
 16448                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 121:         break;
 16449   01CB58  EFF3  F0E5         	goto	l481
 16450   01CB5C                     l24001:
 16451                           
 16452                           ; BSR set to: 5
 16453                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 123:         SPI1BAUD = 3;
 16454   01CB5C  0E03               	movlw	3
 16455   01CB5E  0100               	movlb	0	; () banked
 16456   01CB60  6F89               	movwf	137,b	;volatile
 16457                           
 16458                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 124:         break;
 16459   01CB62  EFF3  F0E5         	goto	l481
 16460   01CB66                     l24003:
 16461                           
 16462                           ; BSR set to: 5
 16463                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 126:         SPI1BAUD = 2;
 16464   01CB66  0E02               	movlw	2
 16465   01CB68  0100               	movlb	0	; () banked
 16466   01CB6A  6F89               	movwf	137,b	;volatile
 16467                           
 16468                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 127:         break;
 16469   01CB6C  EFF3  F0E5         	goto	l481
 16470   01CB70                     l24005:
 16471                           
 16472                           ; BSR set to: 5
 16473                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 129:         printf("%s: ERROR: clock sp
      +                          eed %d is not supported\n\r", __func__, clock_speed);
 16474   01CB70  0E19               	movlw	low STR_8
 16475   01CB72  6FAD               	movwf	printf@fmt& (0+255),b
 16476   01CB74  0EF4               	movlw	high STR_8
 16477   01CB76  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16478   01CB78  0EC6               	movlw	low STR_7
 16479   01CB7A  6FAF               	movwf	(?_printf+2)& (0+255),b
 16480   01CB7C  0EFD               	movlw	high STR_7
 16481   01CB7E  6FB0               	movwf	(?_printf+3)& (0+255),b
 16482   01CB80  C5BF  F5B1         	movff	SPI_SD_configure@clock_speed,?_printf+4
 16483   01CB84  C5C0  F5B2         	movff	SPI_SD_configure@clock_speed+1,?_printf+5
 16484   01CB88  ECDA  F0FF         	call	_printf	;wreg free
 16485                           
 16486                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 130:         break;
 16487   01CB8C  EFF3  F0E5         	goto	l481
 16488   01CB90                     l24009:
 16489                           
 16490                           ; BSR set to: 0
 16491   01CB90  C5BF  F5C3         	movff	SPI_SD_configure@clock_speed,??_SPI_SD_configure
 16492   01CB94  C5C0  F5C4         	movff	SPI_SD_configure@clock_speed+1,??_SPI_SD_configure+1
 16493                           
 16494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16495                           ; Switch size 1, requested type "simple"
 16496                           ; Number of cases is 1, Range of values is 0 to 0
 16497                           ; switch strategies available:
 16498                           ; Name         Instructions Cycles
 16499                           ; simple_byte            4     3 (average)
 16500                           ;	Chosen strategy is simple_byte
 16501   01CB98  0105               	movlb	5	; () banked
 16502   01CB9A  51C4               	movf	(??_SPI_SD_configure+1)& (0+255),w,b
 16503   01CB9C  0A00               	xorlw	0	; case 0
 16504   01CB9E  B4D8               	btfsc	status,2,c
 16505   01CBA0  EFD4  F0E5         	goto	l26595
 16506   01CBA4  EFB8  F0E5         	goto	l24005
 16507   01CBA8                     l26595:
 16508                           
 16509                           ; BSR set to: 5
 16510                           ; Switch size 1, requested type "simple"
 16511                           ; Number of cases is 7, Range of values is 0 to 6
 16512                           ; switch strategies available:
 16513                           ; Name         Instructions Cycles
 16514                           ; simple_byte           22    12 (average)
 16515                           ;	Chosen strategy is simple_byte
 16516   01CBA8  51C3               	movf	??_SPI_SD_configure& (0+255),w,b
 16517   01CBAA  0A00               	xorlw	0	; case 0
 16518   01CBAC  B4D8               	btfsc	status,2,c
 16519   01CBAE  EF93  F0E5         	goto	l23991
 16520   01CBB2  0A01               	xorlw	1	; case 1
 16521   01CBB4  B4D8               	btfsc	status,2,c
 16522   01CBB6  EF9A  F0E5         	goto	l23993
 16523   01CBBA  0A03               	xorlw	3	; case 2
 16524   01CBBC  B4D8               	btfsc	status,2,c
 16525   01CBBE  EF9F  F0E5         	goto	l23995
 16526   01CBC2  0A01               	xorlw	1	; case 3
 16527   01CBC4  B4D8               	btfsc	status,2,c
 16528   01CBC6  EFA4  F0E5         	goto	l23997
 16529   01CBCA  0A07               	xorlw	7	; case 4
 16530   01CBCC  B4D8               	btfsc	status,2,c
 16531   01CBCE  EFA9  F0E5         	goto	l23999
 16532   01CBD2  0A01               	xorlw	1	; case 5
 16533   01CBD4  B4D8               	btfsc	status,2,c
 16534   01CBD6  EFAE  F0E5         	goto	l24001
 16535   01CBDA  0A03               	xorlw	3	; case 6
 16536   01CBDC  B4D8               	btfsc	status,2,c
 16537   01CBDE  EFB3  F0E5         	goto	l24003
 16538   01CBE2  EFB8  F0E5         	goto	l24005
 16539   01CBE6                     l481:
 16540   01CBE6  0012               	return		;funcret
 16541   01CBE8                     __end_of_SPI_SD_configure:
 16542                           	callstack 0
 16543                           
 16544 ;; *************** function _SPI_SD_begin *****************
 16545 ;; Defined at:
 16546 ;;		line 65 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 16549 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 16552 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16553 ;; Return value:  Size  Location     Type
 16554 ;;                  1    wreg      void 
 16555 ;; Registers used:
 16556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16557 ;; Tracked objects:
 16558 ;;		On entry : 0/0
 16559 ;;		On exit  : 0/0
 16560 ;;		Unchanged: 0/0
 16561 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16566 ;;Total ram usage:        4 bytes
 16567 ;; Hardware stack levels used: 1
 16568 ;; Hardware stack levels required when called: 1
 16569 ;; This function calls:
 16570 ;;		Nothing
 16571 ;; This function is called by:
 16572 ;;		_SDCard_init
 16573 ;; This function uses a non-reentrant model
 16574 ;;
 16575                           
 16576                           	psect	text20
 16577   01FF34                     __ptext20:
 16578                           	callstack 0
 16579   01FF34                     _SPI_SD_begin:
 16580                           	callstack 123
 16581   01FF34                     
 16582                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 65: void SPI_SD_begin(struct SPI *ctx_);
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 66: {;../src/boards/../../drivers/pic18f5
      +                          7q43_spi.c: 67:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 16583   01FF34  C504  F506         	movff	SPI_SD_begin@ctx_,SPI_SD_begin@ctx
 16584   01FF38  C505  F507         	movff	SPI_SD_begin@ctx_+1,SPI_SD_begin@ctx+1
 16585   01FF3C                     
 16586                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 68:     ctx->bus_acquired = 0;
 16587   01FF3C  EE20 F002          	lfsr	2,2
 16588   01FF40  5006               	movf	SPI_SD_begin@ctx^(0+1280),w,c
 16589   01FF42  26D9               	addwf	fsr2l,f,c
 16590   01FF44  5007               	movf	(SPI_SD_begin@ctx+1)^(0+1280),w,c
 16591   01FF46  22DA               	addwfc	fsr2h,f,c
 16592   01FF48  6ADF               	clrf	indf2,c
 16593   01FF4A                     
 16594                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 70:     SPI1CON0 = 0;
 16595   01FF4A  0100               	movlb	0	; () banked
 16596   01FF4C  6B84               	clrf	132,b	;volatile
 16597   01FF4E                     
 16598                           ; BSR set to: 0
 16599                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 71:     SPI1CON1 = 0;
 16600   01FF4E  6B85               	clrf	133,b	;volatile
 16601   01FF50                     
 16602                           ; BSR set to: 0
 16603                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 72:     SPI1SCKPPS = ((1 << 3) | 1);
 16604   01FF50  0E09               	movlw	9
 16605   01FF52  0102               	movlb	2	; () banked
 16606   01FF54  6F6A               	movwf	106,b	;volatile
 16607   01FF56                     
 16608                           ; BSR set to: 2
 16609                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 73:     SPI1SDIPPS = ((1 << 3) | 2);
 16610   01FF56  0E0A               	movlw	10
 16611   01FF58  6F6B               	movwf	107,b	;volatile
 16612   01FF5A                     
 16613                           ; BSR set to: 2
 16614                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 74:     TRISE2 = 0;
 16615   01FF5A  94CA               	bcf	1226,2,c	;volatile
 16616   01FF5C                     
 16617                           ; BSR set to: 2
 16618                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 75:     SPI1CON0bits.EN = 1;
 16619   01FF5C  0100               	movlb	0	; () banked
 16620   01FF5E  8F84               	bsf	132,7,b	;volatile
 16621   01FF60                     
 16622                           ; BSR set to: 0
 16623   01FF60  0012               	return		;funcret
 16624   01FF62                     __end_of_SPI_SD_begin:
 16625                           	callstack 0
 16626                           
 16627 ;; *************** function _SDCard_command *****************
 16628 ;; Defined at:
 16629 ;;		line 316 in file "../src/boards/../../drivers/SDCard.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;  command         1    wreg     unsigned char 
 16632 ;;  argument        4   42[COMRAM] unsigned long 
 16633 ;;  response_buf    2   46[COMRAM] PTR void 
 16634 ;;		 -> SDCard_init@buf(5), 
 16635 ;;  length          2   48[COMRAM] unsigned int 
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;  command         1   50[COMRAM] unsigned char 
 16638 ;;  responsep       2   55[COMRAM] PTR unsigned char 
 16639 ;;		 -> SDCard_init@buf(5), 
 16640 ;;  result          2   53[COMRAM] int 
 16641 ;;  spi             2   51[COMRAM] PTR struct SPI
 16642 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  2   42[COMRAM] int 
 16645 ;; Registers used:
 16646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16653 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16655 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16656 ;;Total ram usage:       15 bytes
 16657 ;; Hardware stack levels used: 1
 16658 ;; Hardware stack levels required when called: 5
 16659 ;; This function calls:
 16660 ;;		_SDCard_end_transaction
 16661 ;;		_SPI_SD_receive
 16662 ;;		___SDCard_command_r1
 16663 ;; This function is called by:
 16664 ;;		_SDCard_init
 16665 ;; This function uses a non-reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text21
 16669   01F2F4                     __ptext21:
 16670                           	callstack 0
 16671   01F2F4                     _SDCard_command:
 16672                           	callstack 119
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;incstack = 0
 16676                           ;SDCard_command@command stored from wreg
 16677   01F2F4  6E33               	movwf	SDCard_command@command^(0+1280),c
 16678   01F2F6                     
 16679                           ;../src/boards/../../drivers/SDCard.c: 316: int SDCard_command(uint8_t command, uint32_t
      +                           argument, void *response_buffer, unsigned int length);../src/boards/../../drivers/SDCar
      +                          d.c: 317: {;../src/boards/../../drivers/SDCard.c: 318:     struct SPI *spi = ctx_.spi;
 16680   01F2F6  C7A8  F534         	movff	_ctx_,SDCard_command@spi
 16681   01F2FA  C7A9  F535         	movff	_ctx_+1,SDCard_command@spi+1
 16682                           
 16683                           ;../src/boards/../../drivers/SDCard.c: 319:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 320:     uint8_t *responsep = (uint8_t*)response_buffer;
 16684   01F2FE  C52F  F538         	movff	SDCard_command@response_buffer,SDCard_command@responsep
 16685   01F302  C530  F539         	movff	SDCard_command@response_buffer+1,SDCard_command@responsep+1
 16686   01F306                     
 16687                           ;../src/boards/../../drivers/SDCard.c: 322:     result = __SDCard_command_r1(command, ar
      +                          gument, responsep);
 16688   01F306  C52B  F51B         	movff	SDCard_command@argument,___SDCard_command_r1@argument
 16689   01F30A  C52C  F51C         	movff	SDCard_command@argument+1,___SDCard_command_r1@argument+1
 16690   01F30E  C52D  F51D         	movff	SDCard_command@argument+2,___SDCard_command_r1@argument+2
 16691   01F312  C52E  F51E         	movff	SDCard_command@argument+3,___SDCard_command_r1@argument+3
 16692   01F316  C538  F51F         	movff	SDCard_command@responsep,___SDCard_command_r1@r1
 16693   01F31A  C539  F520         	movff	SDCard_command@responsep+1,___SDCard_command_r1@r1+1
 16694   01F31E  5033               	movf	SDCard_command@command^(0+1280),w,c
 16695   01F320  EC23  F0F3         	call	___SDCard_command_r1
 16696   01F324  C51B  F536         	movff	?___SDCard_command_r1,SDCard_command@result
 16697   01F328  C51C  F537         	movff	?___SDCard_command_r1+1,SDCard_command@result+1
 16698   01F32C                     
 16699                           ;../src/boards/../../drivers/SDCard.c: 323:     if (result != 0) {
 16700   01F32C  5036               	movf	SDCard_command@result^(0+1280),w,c
 16701   01F32E  1037               	iorwf	(SDCard_command@result+1)^(0+1280),w,c
 16702   01F330  B4D8               	btfsc	status,2,c
 16703   01F332  EF9D  F0F9         	goto	u33161
 16704   01F336  EF9F  F0F9         	goto	u33160
 16705   01F33A                     u33161:
 16706   01F33A  EFA3  F0F9         	goto	l24027
 16707   01F33E                     u33160:
 16708   01F33E                     
 16709                           ;../src/boards/../../drivers/SDCard.c: 324:         SDCard_end_transaction();
 16710   01F33E  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 16711   01F342  EFB7  F0F9         	goto	l735
 16712   01F346                     l24027:
 16713                           
 16714                           ;../src/boards/../../drivers/SDCard.c: 328:     SPI_SD_receive(spi, &responsep[1], lengt
      +                          h - 1);
 16715   01F346  C534  F504         	movff	SDCard_command@spi,SPI_SD_receive@ctx_
 16716   01F34A  C535  F505         	movff	SDCard_command@spi+1,SPI_SD_receive@ctx_+1
 16717   01F34E  0E01               	movlw	1
 16718   01F350  2438               	addwf	SDCard_command@responsep^(0+1280),w,c
 16719   01F352  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 16720   01F354  0E00               	movlw	0
 16721   01F356  2039               	addwfc	(SDCard_command@responsep+1)^(0+1280),w,c
 16722   01F358  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 16723   01F35A  0EFF               	movlw	255
 16724   01F35C  2431               	addwf	SDCard_command@length^(0+1280),w,c
 16725   01F35E  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 16726   01F360  0EFF               	movlw	255
 16727   01F362  2032               	addwfc	(SDCard_command@length+1)^(0+1280),w,c
 16728   01F364  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 16729   01F366  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 16730                           
 16731                           ;../src/boards/../../drivers/SDCard.c: 329:     SDCard_end_transaction();
 16732   01F36A  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 16733   01F36E                     l735:
 16734   01F36E  0012               	return		;funcret
 16735   01F370                     __end_of_SDCard_command:
 16736                           	callstack 0
 16737                           
 16738 ;; *************** function _setup_monitor *****************
 16739 ;; Defined at:
 16740 ;;		line 268 in file "../src/w65_main.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;		None
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;  rs              2   24[BANK7 ] int 
 16745 ;;  dat             1    0        unsigned char 
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  2   22[BANK7 ] int 
 16748 ;; Registers used:
 16749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16755 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16756 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16758 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16759 ;;Total ram usage:        4 bytes
 16760 ;; Hardware stack levels used: 1
 16761 ;; Hardware stack levels required when called: 25
 16762 ;; This function calls:
 16763 ;;		_drive_cpu
 16764 ;;		_load_program
 16765 ;;		_printf
 16766 ;;		_setup_tomer0
 16767 ;;		_start_W65
 16768 ;;		_write_sram
 16769 ;; This function is called by:
 16770 ;;		_main
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text22
 16775   01E858                     __ptext22:
 16776                           	callstack 0
 16777   01E858                     _setup_monitor:
 16778                           	callstack 101
 16779   01E858                     
 16780                           ;../src/w65_main.c: 270:  int rs;;../src/w65_main.c: 271:  uint8_t dat;;../src/w65_main.
      +                          c: 273:  printf("Install Monitor Program..........\r\n");
 16781   01E858  0EDA               	movlw	low STR_77
 16782   01E85A  0105               	movlb	5	; () banked
 16783   01E85C  6FAD               	movwf	printf@fmt& (0+255),b
 16784   01E85E  0EF6               	movlw	high STR_77
 16785   01E860  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16786   01E862  ECDA  F0FF         	call	_printf	;wreg free
 16787   01E866                     
 16788                           ;../src/w65_main.c: 275:  if (cpu_flg) {
 16789   01E866  0107               	movlb	7	; () banked
 16790   01E868  51E5               	movf	_cpu_flg& (0+255),w,b
 16791   01E86A  B4D8               	btfsc	status,2,c
 16792   01E86C  EF3A  F0F4         	goto	u34811
 16793   01E870  EF3C  F0F4         	goto	u34810
 16794   01E874                     u34811:
 16795   01E874  EF44  F0F4         	goto	l25115
 16796   01E878                     u34810:
 16797   01E878                     
 16798                           ; BSR set to: 7
 16799                           ;../src/w65_main.c: 276:   arg[0] = mon16;
 16800   01E878  0EE3               	movlw	low STR_51
 16801   01E87A  6F9E               	movwf	_arg& (0+255),b
 16802   01E87C  0EFE               	movlw	high STR_51
 16803   01E87E  6F9F               	movwf	(_arg+1)& (0+255),b
 16804   01E880                     
 16805                           ; BSR set to: 7
 16806                           ;../src/w65_main.c: 277:   mon = 1;
 16807   01E880  0E01               	movlw	1
 16808   01E882  6FC8               	movwf	_mon& (0+255),b
 16809                           
 16810                           ;../src/w65_main.c: 278:  }
 16811   01E884  EF49  F0F4         	goto	l25119
 16812   01E888                     l25115:
 16813                           
 16814                           ; BSR set to: 7
 16815                           ;../src/w65_main.c: 280:   arg[0] = mon02;
 16816   01E888  0ED8               	movlw	low STR_50
 16817   01E88A  6F9E               	movwf	_arg& (0+255),b
 16818   01E88C  0EFE               	movlw	high STR_50
 16819   01E88E  6F9F               	movwf	(_arg+1)& (0+255),b
 16820   01E890                     
 16821                           ; BSR set to: 7
 16822                           ;../src/w65_main.c: 281:   mon = 0;
 16823   01E890  6BC8               	clrf	_mon& (0+255),b
 16824   01E892                     l25119:
 16825                           
 16826                           ; BSR set to: 7
 16827                           ;../src/w65_main.c: 283:  rs = load_program((uint8_t *)arg[0]);
 16828   01E892  C79E  F700         	movff	_arg,load_program@fname
 16829   01E896  C79F  F701         	movff	_arg+1,load_program@fname+1
 16830   01E89A  EC86  F0AE         	call	_load_program	;wreg free
 16831   01E89E  C700  F718         	movff	?_load_program,setup_monitor@rs
 16832   01E8A2  C701  F719         	movff	?_load_program+1,setup_monitor@rs+1
 16833   01E8A6                     
 16834                           ;../src/w65_main.c: 284:  if ( rs ) return rs;
 16835   01E8A6  0107               	movlb	7	; () banked
 16836   01E8A8  5118               	movf	setup_monitor@rs& (0+255),w,b
 16837   01E8AA  1119               	iorwf	(setup_monitor@rs+1)& (0+255),w,b
 16838   01E8AC  B4D8               	btfsc	status,2,c
 16839   01E8AE  EF5B  F0F4         	goto	u34821
 16840   01E8B2  EF5D  F0F4         	goto	u34820
 16841   01E8B6                     u34821:
 16842   01E8B6  EF63  F0F4         	goto	l25125
 16843   01E8BA                     u34820:
 16844   01E8BA                     
 16845                           ; BSR set to: 7
 16846   01E8BA  C718  F716         	movff	setup_monitor@rs,?_setup_monitor
 16847   01E8BE  C719  F717         	movff	setup_monitor@rs+1,?_setup_monitor+1
 16848   01E8C2  EF80  F0F4         	goto	l1148
 16849   01E8C6                     l25125:
 16850                           
 16851                           ; BSR set to: 7
 16852                           ;../src/w65_main.c: 287:  write_sram(0, &cpu_flg, 1);
 16853   01E8C6  0E00               	movlw	0
 16854   01E8C8  6E04               	movwf	write_sram@addr^(0+1280),c
 16855   01E8CA  0E00               	movlw	0
 16856   01E8CC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 16857   01E8CE  0E00               	movlw	0
 16858   01E8D0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 16859   01E8D2  0E00               	movlw	0
 16860   01E8D4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 16861   01E8D6  0EE5               	movlw	low _cpu_flg
 16862   01E8D8  6E08               	movwf	write_sram@buf^(0+1280),c
 16863   01E8DA  0E07               	movlw	high _cpu_flg
 16864   01E8DC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 16865   01E8DE  0E00               	movlw	0
 16866   01E8E0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 16867   01E8E2  0E01               	movlw	1
 16868   01E8E4  6E0A               	movwf	write_sram@len^(0+1280),c
 16869   01E8E6  EC9F  F0E8         	call	_write_sram	;wreg free
 16870   01E8EA                     
 16871                           ;../src/w65_main.c: 292:  start_W65();
 16872   01E8EA  EC82  F0FF         	call	_start_W65	;wreg free
 16873   01E8EE                     
 16874                           ;../src/w65_main.c: 293:  setup_tomer0();
 16875   01E8EE  ECD2  F000         	call	_setup_tomer0	;wreg free
 16876   01E8F2                     
 16877                           ;../src/w65_main.c: 294:  drive_cpu();
 16878   01E8F2  ECA0  F0FE         	call	_drive_cpu	;wreg free
 16879   01E8F6                     
 16880                           ;../src/w65_main.c: 295:  return 0;
 16881   01E8F6  0E00               	movlw	0
 16882   01E8F8  0107               	movlb	7	; () banked
 16883   01E8FA  6F17               	movwf	(?_setup_monitor+1)& (0+255),b
 16884   01E8FC  0E00               	movlw	0
 16885   01E8FE  6F16               	movwf	?_setup_monitor& (0+255),b
 16886   01E900                     l1148:
 16887                           
 16888                           ; BSR set to: 7
 16889   01E900  0012               	return		;funcret
 16890   01E902                     __end_of_setup_monitor:
 16891                           	callstack 0
 16892                           
 16893 ;; *************** function _start_W65 *****************
 16894 ;; Defined at:
 16895 ;;		line 259 in file "../src/boards/w65_bd.c"
 16896 ;; Parameters:    Size  Location     Type
 16897 ;;		None
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;		None
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      void 
 16902 ;; Registers used:
 16903 ;;		wreg, status,2, cstack
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16913 ;;Total ram usage:        0 bytes
 16914 ;; Hardware stack levels used: 1
 16915 ;; Hardware stack levels required when called: 2
 16916 ;; This function calls:
 16917 ;;		_bus_release_req
 16918 ;; This function is called by:
 16919 ;;		_setup_monitor
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text23
 16924   01FF04                     __ptext23:
 16925                           	callstack 0
 16926   01FF04                     _start_W65:
 16927                           	callstack 123
 16928   01FF04                     
 16929                           ;../src/boards/w65_bd.c: 261:  bus_release_req();
 16930   01FF04  EC32  F001         	call	_bus_release_req	;wreg free
 16931   01FF08                     
 16932                           ;../src/boards/w65_bd.c: 264:  IVTLOCK = 0x55;
 16933   01FF08  0E55               	movlw	85
 16934   01FF0A  0104               	movlb	4	; () banked
 16935   01FF0C  6F59               	movwf	89,b	;volatile
 16936   01FF0E                     
 16937                           ; BSR set to: 4
 16938                           ;../src/boards/w65_bd.c: 265:  IVTLOCK = 0xAA;
 16939   01FF0E  0EAA               	movlw	170
 16940   01FF10  6F59               	movwf	89,b	;volatile
 16941   01FF12                     
 16942                           ; BSR set to: 4
 16943                           ;../src/boards/w65_bd.c: 266:  IVTLOCKbits.IVTLOCKED = 0x00;
 16944   01FF12  9159               	bcf	89,0,b	;volatile
 16945   01FF14                     
 16946                           ; BSR set to: 4
 16947                           ;../src/boards/w65_bd.c: 269:  IVTBASE = 0x000008;
 16948   01FF14  0E08               	movlw	8
 16949   01FF16  6F5D               	movwf	93,b	;volatile
 16950   01FF18  0E00               	movlw	0
 16951   01FF1A  6F5E               	movwf	94,b	;volatile
 16952   01FF1C  0E00               	movlw	0
 16953   01FF1E  6F5F               	movwf	95,b	;volatile
 16954   01FF20                     
 16955                           ; BSR set to: 4
 16956                           ;../src/boards/w65_bd.c: 272:  IVTLOCK = 0x55;
 16957   01FF20  0E55               	movlw	85
 16958   01FF22  6F59               	movwf	89,b	;volatile
 16959   01FF24                     
 16960                           ; BSR set to: 4
 16961                           ;../src/boards/w65_bd.c: 273:  IVTLOCK = 0xAA;
 16962   01FF24  0EAA               	movlw	170
 16963   01FF26  6F59               	movwf	89,b	;volatile
 16964   01FF28                     
 16965                           ; BSR set to: 4
 16966                           ;../src/boards/w65_bd.c: 274:  IVTLOCKbits.IVTLOCKED = 0x01;
 16967   01FF28  8159               	bsf	89,0,b	;volatile
 16968   01FF2A                     
 16969                           ; BSR set to: 4
 16970                           ;../src/boards/w65_bd.c: 277:  CLCSELECT = 0;
 16971   01FF2A  0100               	movlb	0	; () banked
 16972   01FF2C  6BD5               	clrf	213,b	;volatile
 16973   01FF2E                     
 16974                           ; BSR set to: 0
 16975                           ;../src/boards/w65_bd.c: 278:  G2POL = 1;
 16976   01FF2E  83D7               	bsf	215,1,b	;volatile
 16977   01FF30                     
 16978                           ; BSR set to: 0
 16979                           ;../src/boards/w65_bd.c: 281:  LATE0 = 1;
 16980   01FF30  80C2               	bsf	1218,0,c	;volatile
 16981   01FF32                     
 16982                           ; BSR set to: 0
 16983   01FF32  0012               	return		;funcret
 16984   01FF34                     __end_of_start_W65:
 16985                           	callstack 0
 16986                           
 16987 ;; *************** function _setup_tomer0 *****************
 16988 ;; Defined at:
 16989 ;;		line 62 in file "../src/boards/w65_cmn.c"
 16990 ;; Parameters:    Size  Location     Type
 16991 ;;		None
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;		None
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  1    wreg      void 
 16996 ;; Registers used:
 16997 ;;		wreg, status,2
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17007 ;;Total ram usage:        0 bytes
 17008 ;; Hardware stack levels used: 1
 17009 ;; Hardware stack levels required when called: 1
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		_setup_monitor
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           	psect	text24
 17018   0001A4                     __ptext24:
 17019                           	callstack 0
 17020   0001A4                     _setup_tomer0:
 17021                           	callstack 124
 17022   0001A4                     
 17023                           ;../src/boards/w65_cmn.c: 66:  T0CON0 = 0x84;
 17024   0001A4  0E84               	movlw	132
 17025   0001A6  0103               	movlb	3	; () banked
 17026   0001A8  6F1A               	movwf	26,b	;volatile
 17027                           
 17028                           ;../src/boards/w65_cmn.c: 70:  T0CON1 = 0xa1;
 17029   0001AA  0EA1               	movlw	161
 17030   0001AC  6F1B               	movwf	27,b	;volatile
 17031   0001AE                     
 17032                           ; BSR set to: 3
 17033                           ;../src/boards/w65_cmn.c: 71:  MFOEN = 1;
 17034   0001AE  0100               	movlb	0	; () banked
 17035   0001B0  8BB3               	bsf	179,5,b	;volatile
 17036   0001B2                     
 17037                           ; BSR set to: 0
 17038                           ;../src/boards/w65_cmn.c: 72:  TMR0H = 0xff;
 17039   0001B2  0103               	movlb	3	; () banked
 17040   0001B4  6919               	setf	25,b	;volatile
 17041   0001B6                     
 17042                           ; BSR set to: 3
 17043                           ;../src/boards/w65_cmn.c: 73:  TMR0L = 0x00;
 17044   0001B6  6B18               	clrf	24,b	;volatile
 17045   0001B8                     
 17046                           ; BSR set to: 3
 17047                           ;../src/boards/w65_cmn.c: 74:  TMR0IF =0;
 17048   0001B8  9EB1               	bcf	1201,7,c	;volatile
 17049   0001BA                     
 17050                           ; BSR set to: 3
 17051                           ;../src/boards/w65_cmn.c: 75:  TMR0IE = 1;
 17052   0001BA  8EA1               	bsf	1185,7,c	;volatile
 17053   0001BC                     
 17054                           ; BSR set to: 3
 17055   0001BC  0012               	return		;funcret
 17056   0001BE                     __end_of_setup_tomer0:
 17057                           	callstack 0
 17058                           
 17059 ;; *************** function _set_arg *****************
 17060 ;; Defined at:
 17061 ;;		line 597 in file "../src/w65_main.c"
 17062 ;; Parameters:    Size  Location     Type
 17063 ;;  buf             2    3[COMRAM] PTR unsigned char 
 17064 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 17065 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 17066 ;; Auto vars:     Size  Location     Type
 17067 ;;  i               2    5[COMRAM] int 
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  1    wreg      void 
 17070 ;; Registers used:
 17071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 0/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17081 ;;Total ram usage:        4 bytes
 17082 ;; Hardware stack levels used: 1
 17083 ;; Hardware stack levels required when called: 1
 17084 ;; This function calls:
 17085 ;;		Nothing
 17086 ;; This function is called by:
 17087 ;;		_main
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           	psect	text25
 17092   01AE0A                     __ptext25:
 17093                           	callstack 0
 17094   01AE0A                     _set_arg:
 17095                           	callstack 125
 17096   01AE0A                     
 17097                           ;../src/w65_main.c: 599:  int i;;../src/w65_main.c: 601:  i=0;
 17098   01AE0A  0E00               	movlw	0
 17099   01AE0C  6E07               	movwf	(set_arg@i+1)^(0+1280),c
 17100   01AE0E  0E00               	movlw	0
 17101   01AE10  6E06               	movwf	set_arg@i^(0+1280),c
 17102                           
 17103                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 17104   01AE12  EFCD  F0D7         	goto	l17791
 17105   01AE16                     l17763:
 17106   01AE16  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17107   01AE18  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17108   01AE1A                     l17765:
 17109   01AE1A  C504  F4F6         	movff	set_arg@buf,tblptrl
 17110   01AE1E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17111   01AE22  0E00               	movlw	low (__mediumconst shr (0+16))
 17112   01AE24  6EF8               	movwf	tblptru,c
 17113   01AE26  0E25               	movlw	(high __ramtop+-1)
 17114   01AE28  64F7               	cpfsgt	tblptrh,c
 17115   01AE2A  D003               	bra	u22667
 17116   01AE2C  0008               	tblrd		*
 17117   01AE2E  50F5               	movf	tablat,w,c
 17118   01AE30  D005               	bra	u22660
 17119   01AE32                     u22667:
 17120   01AE32  C4F6 F4E9          	movff	tblptrl,fsr0l
 17121   01AE36  C4F7 F4EA          	movff	tblptrh,fsr0h
 17122   01AE3A  50EF               	movf	indf0,w,c
 17123   01AE3C                     u22660:
 17124   01AE3C  0A20               	xorlw	32
 17125   01AE3E  B4D8               	btfsc	status,2,c
 17126   01AE40  EF24  F0D7         	goto	u22671
 17127   01AE44  EF26  F0D7         	goto	u22670
 17128   01AE48                     u22671:
 17129   01AE48  EF0B  F0D7         	goto	l17763
 17130   01AE4C                     u22670:
 17131   01AE4C                     
 17132                           ;../src/w65_main.c: 604:   arg[i] = buf;
 17133   01AE4C  90D8               	bcf	status,0,c
 17134   01AE4E  3406               	rlcf	set_arg@i^(0+1280),w,c
 17135   01AE50  6ED9               	movwf	fsr2l,c
 17136   01AE52  3407               	rlcf	(set_arg@i+1)^(0+1280),w,c
 17137   01AE54  6EDA               	movwf	fsr2h,c
 17138   01AE56  0E9E               	movlw	low _arg
 17139   01AE58  26D9               	addwf	fsr2l,f,c
 17140   01AE5A  0E07               	movlw	high _arg
 17141   01AE5C  22DA               	addwfc	fsr2h,f,c
 17142   01AE5E  C504  F4DE         	movff	set_arg@buf,postinc2
 17143   01AE62  C505  F4DD         	movff	set_arg@buf+1,postdec2
 17144   01AE66                     
 17145                           ;../src/w65_main.c: 605:   if ( !*buf ) break;
 17146   01AE66  C504  F4F6         	movff	set_arg@buf,tblptrl
 17147   01AE6A  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17148   01AE6E  0E00               	movlw	low (__mediumconst shr (0+16))
 17149   01AE70  6EF8               	movwf	tblptru,c
 17150   01AE72  0E25               	movlw	(high __ramtop+-1)
 17151   01AE74  64F7               	cpfsgt	tblptrh,c
 17152   01AE76  D003               	bra	u22687
 17153   01AE78  0008               	tblrd		*
 17154   01AE7A  50F5               	movf	tablat,w,c
 17155   01AE7C  D005               	bra	u22680
 17156   01AE7E                     u22687:
 17157   01AE7E  C4F6 F4E9          	movff	tblptrl,fsr0l
 17158   01AE82  C4F7 F4EA          	movff	tblptrh,fsr0h
 17159   01AE86  50EF               	movf	indf0,w,c
 17160   01AE88                     u22680:
 17161   01AE88  0900               	iorlw	0
 17162   01AE8A  A4D8               	btfss	status,2,c
 17163   01AE8C  EF4A  F0D7         	goto	u22691
 17164   01AE90  EF4C  F0D7         	goto	u22690
 17165   01AE94                     u22691:
 17166   01AE94  EF50  F0D7         	goto	l17775
 17167   01AE98                     u22690:
 17168   01AE98  EFDB  F0D7         	goto	l1276
 17169   01AE9C                     l17773:
 17170   01AE9C  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17171   01AE9E  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17172   01AEA0                     l17775:
 17173   01AEA0  C504  F4F6         	movff	set_arg@buf,tblptrl
 17174   01AEA4  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17175   01AEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 17176   01AEAA  6EF8               	movwf	tblptru,c
 17177   01AEAC  0E25               	movlw	(high __ramtop+-1)
 17178   01AEAE  64F7               	cpfsgt	tblptrh,c
 17179   01AEB0  D003               	bra	u22707
 17180   01AEB2  0008               	tblrd		*
 17181   01AEB4  50F5               	movf	tablat,w,c
 17182   01AEB6  D005               	bra	u22700
 17183   01AEB8                     u22707:
 17184   01AEB8  C4F6 F4E9          	movff	tblptrl,fsr0l
 17185   01AEBC  C4F7 F4EA          	movff	tblptrh,fsr0h
 17186   01AEC0  50EF               	movf	indf0,w,c
 17187   01AEC2                     u22700:
 17188   01AEC2  0900               	iorlw	0
 17189   01AEC4  B4D8               	btfsc	status,2,c
 17190   01AEC6  EF67  F0D7         	goto	u22711
 17191   01AECA  EF69  F0D7         	goto	u22710
 17192   01AECE                     u22711:
 17193   01AECE  EF82  F0D7         	goto	l17779
 17194   01AED2                     u22710:
 17195   01AED2  C504  F4F6         	movff	set_arg@buf,tblptrl
 17196   01AED6  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17197   01AEDA  0E00               	movlw	low (__mediumconst shr (0+16))
 17198   01AEDC  6EF8               	movwf	tblptru,c
 17199   01AEDE  0E25               	movlw	(high __ramtop+-1)
 17200   01AEE0  64F7               	cpfsgt	tblptrh,c
 17201   01AEE2  D003               	bra	u22727
 17202   01AEE4  0008               	tblrd		*
 17203   01AEE6  50F5               	movf	tablat,w,c
 17204   01AEE8  D005               	bra	u22720
 17205   01AEEA                     u22727:
 17206   01AEEA  C4F6 F4E9          	movff	tblptrl,fsr0l
 17207   01AEEE  C4F7 F4EA          	movff	tblptrh,fsr0h
 17208   01AEF2  50EF               	movf	indf0,w,c
 17209   01AEF4                     u22720:
 17210   01AEF4  0A20               	xorlw	32
 17211   01AEF6  A4D8               	btfss	status,2,c
 17212   01AEF8  EF80  F0D7         	goto	u22731
 17213   01AEFC  EF82  F0D7         	goto	u22730
 17214   01AF00                     u22731:
 17215   01AF00  EF4E  F0D7         	goto	l17773
 17216   01AF04                     u22730:
 17217   01AF04                     l17779:
 17218                           
 17219                           ;../src/w65_main.c: 607:   if ( !*buf ) break;
 17220   01AF04  C504  F4F6         	movff	set_arg@buf,tblptrl
 17221   01AF08  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17222   01AF0C  0E00               	movlw	low (__mediumconst shr (0+16))
 17223   01AF0E  6EF8               	movwf	tblptru,c
 17224   01AF10  0E25               	movlw	(high __ramtop+-1)
 17225   01AF12  64F7               	cpfsgt	tblptrh,c
 17226   01AF14  D003               	bra	u22747
 17227   01AF16  0008               	tblrd		*
 17228   01AF18  50F5               	movf	tablat,w,c
 17229   01AF1A  D005               	bra	u22740
 17230   01AF1C                     u22747:
 17231   01AF1C  C4F6 F4E9          	movff	tblptrl,fsr0l
 17232   01AF20  C4F7 F4EA          	movff	tblptrh,fsr0h
 17233   01AF24  50EF               	movf	indf0,w,c
 17234   01AF26                     u22740:
 17235   01AF26  0900               	iorlw	0
 17236   01AF28  A4D8               	btfss	status,2,c
 17237   01AF2A  EF99  F0D7         	goto	u22751
 17238   01AF2E  EF9B  F0D7         	goto	u22750
 17239   01AF32                     u22751:
 17240   01AF32  EF9D  F0D7         	goto	l17783
 17241   01AF36                     u22750:
 17242   01AF36  EFDB  F0D7         	goto	l1276
 17243   01AF3A                     l17783:
 17244                           
 17245                           ;../src/w65_main.c: 608:   if ( *buf == ' ' ) *buf++ = 0;
 17246   01AF3A  C504  F4F6         	movff	set_arg@buf,tblptrl
 17247   01AF3E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17248   01AF42  0E00               	movlw	low (__mediumconst shr (0+16))
 17249   01AF44  6EF8               	movwf	tblptru,c
 17250   01AF46  0E25               	movlw	(high __ramtop+-1)
 17251   01AF48  64F7               	cpfsgt	tblptrh,c
 17252   01AF4A  D003               	bra	u22767
 17253   01AF4C  0008               	tblrd		*
 17254   01AF4E  50F5               	movf	tablat,w,c
 17255   01AF50  D005               	bra	u22760
 17256   01AF52                     u22767:
 17257   01AF52  C4F6 F4E9          	movff	tblptrl,fsr0l
 17258   01AF56  C4F7 F4EA          	movff	tblptrh,fsr0h
 17259   01AF5A  50EF               	movf	indf0,w,c
 17260   01AF5C                     u22760:
 17261   01AF5C  0A20               	xorlw	32
 17262   01AF5E  A4D8               	btfss	status,2,c
 17263   01AF60  EFB4  F0D7         	goto	u22771
 17264   01AF64  EFB6  F0D7         	goto	u22770
 17265   01AF68                     u22771:
 17266   01AF68  EFCB  F0D7         	goto	l17789
 17267   01AF6C                     u22770:
 17268   01AF6C  C504  F4F6         	movff	set_arg@buf,tblptrl
 17269   01AF70  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 17270   01AF74  0E00               	movlw	low (__mediumconst shr (0+16))
 17271   01AF76  6EF8               	movwf	tblptru,c
 17272   01AF78  0E25               	movlw	(high __ramtop+-1)
 17273   01AF7A  64F7               	cpfsgt	tblptrh,c
 17274   01AF7C  D004               	bra	u22787
 17275   01AF7E  0E00               	movlw	0
 17276   01AF80  6EF5               	movwf	tablat,c
 17277   01AF82  000C               	tblwt		*
 17278   01AF84  D006               	bra	u22780
 17279   01AF86                     u22787:
 17280   01AF86  C4F6 F4E9          	movff	tblptrl,fsr0l
 17281   01AF8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 17282   01AF8E  0E00               	movlw	0
 17283   01AF90  6EEF               	movwf	indf0,c
 17284   01AF92                     u22780:
 17285   01AF92  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 17286   01AF94  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 17287   01AF96                     l17789:
 17288                           
 17289                           ;../src/w65_main.c: 609:   i++;
 17290   01AF96  4A06               	infsnz	set_arg@i^(0+1280),f,c
 17291   01AF98  2A07               	incf	(set_arg@i+1)^(0+1280),f,c
 17292   01AF9A                     l17791:
 17293                           
 17294                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 17295   01AF9A  BE07               	btfsc	(set_arg@i+1)^(0+1280),7,c
 17296   01AF9C  EFD9  F0D7         	goto	u22791
 17297   01AFA0  5007               	movf	(set_arg@i+1)^(0+1280),w,c
 17298   01AFA2  E109               	bnz	u22790
 17299   01AFA4  0E05               	movlw	5
 17300   01AFA6  5C06               	subwf	set_arg@i^(0+1280),w,c
 17301   01AFA8  A0D8               	btfss	status,0,c
 17302   01AFAA  EFD9  F0D7         	goto	u22791
 17303   01AFAE  EFDB  F0D7         	goto	u22790
 17304   01AFB2                     u22791:
 17305   01AFB2  EF0D  F0D7         	goto	l17765
 17306   01AFB6                     u22790:
 17307   01AFB6                     l1276:
 17308   01AFB6  0012               	return		;funcret
 17309   01AFB8                     __end_of_set_arg:
 17310                           	callstack 0
 17311                           
 17312 ;; *************** function _f_readdir *****************
 17313 ;; Defined at:
 17314 ;;		line 4695 in file "../fatfs/ff.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;  dp              2  137[BANK6 ] PTR struct .
 17317 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 17318 ;;  fno             2  139[BANK6 ] PTR struct .
 17319 ;;		 -> scan_files1@fno(22), scan_files@fno(22), 
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;  fs              2  141[BANK6 ] PTR struct .
 17322 ;;		 -> fs(564), NULL(0), 
 17323 ;;  res             1  143[BANK6 ] enum E597
 17324 ;; Return value:  Size  Location     Type
 17325 ;;                  1    wreg      enum E17409
 17326 ;; Registers used:
 17327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17328 ;; Tracked objects:
 17329 ;;		On entry : 0/0
 17330 ;;		On exit  : 0/0
 17331 ;;		Unchanged: 0/0
 17332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17333 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17334 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17336 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17337 ;;Total ram usage:        7 bytes
 17338 ;; Hardware stack levels used: 1
 17339 ;; Hardware stack levels required when called: 18
 17340 ;; This function calls:
 17341 ;;		_dir_next
 17342 ;;		_dir_read
 17343 ;;		_dir_sdi
 17344 ;;		_get_fileinfo
 17345 ;;		_validate
 17346 ;; This function is called by:
 17347 ;;		_scan_files
 17348 ;;		_scan_files1
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text26
 17353   01DAF6                     __ptext26:
 17354                           	callstack 0
 17355   01DAF6                     _f_readdir:
 17356                           	callstack 107
 17357   01DAF6                     
 17358                           ;../fatfs/ff.c: 4696:  DIR* dp,;../fatfs/ff.c: 4697:  FILINFO* fno;../fatfs/ff.c: 4699: 
      +                          {;../fatfs/ff.c: 4700:  FRESULT res;;../fatfs/ff.c: 4701:  FATFS *fs;;../fatfs/ff.c: 470
      +                          5:  res = validate(&dp->obj, &fs);
 17359   01DAF6  C689  F5BE         	movff	f_readdir@dp,validate@obj
 17360   01DAFA  C68A  F5BF         	movff	f_readdir@dp+1,validate@obj+1
 17361   01DAFE  0E8D               	movlw	low f_readdir@fs
 17362   01DB00  0105               	movlb	5	; () banked
 17363   01DB02  6FC0               	movwf	validate@rfs& (0+255),b
 17364   01DB04  0E06               	movlw	high f_readdir@fs
 17365   01DB06  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 17366   01DB08  ECA3  F0E9         	call	_validate	;wreg free
 17367   01DB0C  0106               	movlb	6	; () banked
 17368   01DB0E  6F8F               	movwf	f_readdir@res& (0+255),b
 17369   01DB10                     
 17370                           ; BSR set to: 6
 17371                           ;../fatfs/ff.c: 4706:  if (res == FR_OK) {
 17372   01DB10  518F               	movf	f_readdir@res& (0+255),w,b
 17373   01DB12  A4D8               	btfss	status,2,c
 17374   01DB14  EF8E  F0ED         	goto	u34391
 17375   01DB18  EF90  F0ED         	goto	u34390
 17376   01DB1C                     u34391:
 17377   01DB1C  EFEC  F0ED         	goto	l24803
 17378   01DB20                     u34390:
 17379   01DB20                     
 17380                           ; BSR set to: 6
 17381                           ;../fatfs/ff.c: 4707:   if (!fno) {
 17382   01DB20  518B               	movf	f_readdir@fno& (0+255),w,b
 17383   01DB22  118C               	iorwf	(f_readdir@fno+1)& (0+255),w,b
 17384   01DB24  A4D8               	btfss	status,2,c
 17385   01DB26  EF97  F0ED         	goto	u34401
 17386   01DB2A  EF99  F0ED         	goto	u34400
 17387   01DB2E                     u34401:
 17388   01DB2E  EFAB  F0ED         	goto	l24787
 17389   01DB32                     u34400:
 17390   01DB32                     
 17391                           ; BSR set to: 6
 17392                           ;../fatfs/ff.c: 4708:    res = dir_sdi(dp, 0);
 17393   01DB32  C689  F63E         	movff	f_readdir@dp,dir_sdi@dp
 17394   01DB36  C68A  F63F         	movff	f_readdir@dp+1,dir_sdi@dp+1
 17395   01DB3A  0E00               	movlw	0
 17396   01DB3C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17397   01DB3E  0E00               	movlw	0
 17398   01DB40  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17399   01DB42  0E00               	movlw	0
 17400   01DB44  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17401   01DB46  0E00               	movlw	0
 17402   01DB48  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17403   01DB4A  EC72  F0BC         	call	_dir_sdi	;wreg free
 17404   01DB4E  0106               	movlb	6	; () banked
 17405   01DB50  6F8F               	movwf	f_readdir@res& (0+255),b
 17406                           
 17407                           ;../fatfs/ff.c: 4709:   } else {
 17408   01DB52  EFEC  F0ED         	goto	l24803
 17409   01DB56                     l24787:
 17410                           
 17411                           ; BSR set to: 6
 17412                           ;../fatfs/ff.c: 4711:    res = dir_read(dp, 0);
 17413   01DB56  C689  F67C         	movff	f_readdir@dp,dir_read@dp
 17414   01DB5A  C68A  F67D         	movff	f_readdir@dp+1,dir_read@dp+1
 17415   01DB5E  0E00               	movlw	0
 17416   01DB60  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 17417   01DB62  0E00               	movlw	0
 17418   01DB64  6F7E               	movwf	dir_read@vol& (0+255),b
 17419   01DB66  ECB0  F0D8         	call	_dir_read	;wreg free
 17420   01DB6A  0106               	movlb	6	; () banked
 17421   01DB6C  6F8F               	movwf	f_readdir@res& (0+255),b
 17422   01DB6E                     
 17423                           ; BSR set to: 6
 17424                           ;../fatfs/ff.c: 4712:    if (res == FR_NO_FILE) res = FR_OK;
 17425   01DB6E  0E04               	movlw	4
 17426   01DB70  198F               	xorwf	f_readdir@res& (0+255),w,b
 17427   01DB72  A4D8               	btfss	status,2,c
 17428   01DB74  EFBE  F0ED         	goto	u34411
 17429   01DB78  EFC0  F0ED         	goto	u34410
 17430   01DB7C                     u34411:
 17431   01DB7C  EFC1  F0ED         	goto	l24793
 17432   01DB80                     u34410:
 17433   01DB80                     
 17434                           ; BSR set to: 6
 17435   01DB80  6B8F               	clrf	f_readdir@res& (0+255),b
 17436   01DB82                     l24793:
 17437                           
 17438                           ; BSR set to: 6
 17439                           ;../fatfs/ff.c: 4713:    if (res == FR_OK) {
 17440   01DB82  518F               	movf	f_readdir@res& (0+255),w,b
 17441   01DB84  A4D8               	btfss	status,2,c
 17442   01DB86  EFC7  F0ED         	goto	u34421
 17443   01DB8A  EFC9  F0ED         	goto	u34420
 17444   01DB8E                     u34421:
 17445   01DB8E  EFEC  F0ED         	goto	l24803
 17446   01DB92                     u34420:
 17447   01DB92                     
 17448                           ; BSR set to: 6
 17449                           ;../fatfs/ff.c: 4714:     get_fileinfo(dp, fno);
 17450   01DB92  C689  F511         	movff	f_readdir@dp,get_fileinfo@dp
 17451   01DB96  C68A  F512         	movff	f_readdir@dp+1,get_fileinfo@dp+1
 17452   01DB9A  C68B  F513         	movff	f_readdir@fno,get_fileinfo@fno
 17453   01DB9E  C68C  F514         	movff	f_readdir@fno+1,get_fileinfo@fno+1
 17454   01DBA2  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 17455   01DBA6                     
 17456                           ;../fatfs/ff.c: 4715:     res = dir_next(dp, 0);
 17457   01DBA6  C689  F662         	movff	f_readdir@dp,dir_next@dp
 17458   01DBAA  C68A  F663         	movff	f_readdir@dp+1,dir_next@dp+1
 17459   01DBAE  0E00               	movlw	0
 17460   01DBB0  0106               	movlb	6	; () banked
 17461   01DBB2  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 17462   01DBB4  0E00               	movlw	0
 17463   01DBB6  6F64               	movwf	dir_next@stretch& (0+255),b
 17464   01DBB8  ECCF  F0B0         	call	_dir_next	;wreg free
 17465   01DBBC  0106               	movlb	6	; () banked
 17466   01DBBE  6F8F               	movwf	f_readdir@res& (0+255),b
 17467   01DBC0                     
 17468                           ; BSR set to: 6
 17469                           ;../fatfs/ff.c: 4716:     if (res == FR_NO_FILE) res = FR_OK;
 17470   01DBC0  0E04               	movlw	4
 17471   01DBC2  198F               	xorwf	f_readdir@res& (0+255),w,b
 17472   01DBC4  A4D8               	btfss	status,2,c
 17473   01DBC6  EFE7  F0ED         	goto	u34431
 17474   01DBCA  EFE9  F0ED         	goto	u34430
 17475   01DBCE                     u34431:
 17476   01DBCE  EFEC  F0ED         	goto	l2103
 17477   01DBD2                     u34430:
 17478   01DBD2                     
 17479                           ; BSR set to: 6
 17480   01DBD2  6B8F               	clrf	f_readdir@res& (0+255),b
 17481   01DBD4  EFEC  F0ED         	goto	l24803
 17482   01DBD8                     l2103:
 17483   01DBD8                     l24803:
 17484                           
 17485                           ; BSR set to: 6
 17486                           ;../fatfs/ff.c: 4721:  return res;
 17487   01DBD8  518F               	movf	f_readdir@res& (0+255),w,b
 17488   01DBDA                     
 17489                           ; BSR set to: 6
 17490   01DBDA  0012               	return		;funcret
 17491   01DBDC                     __end_of_f_readdir:
 17492                           	callstack 0
 17493                           
 17494 ;; *************** function _f_opendir *****************
 17495 ;; Defined at:
 17496 ;;		line 4599 in file "../fatfs/ff.c"
 17497 ;; Parameters:    Size  Location     Type
 17498 ;;  dp              2  175[BANK6 ] PTR struct .
 17499 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 17500 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 17501 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17502 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17503 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;  fs              2  179[BANK6 ] PTR struct .
 17506 ;;		 -> fs(564), NULL(0), 
 17507 ;;  res             1  181[BANK6 ] enum E597
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  1    wreg      enum E17409
 17510 ;; Registers used:
 17511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17517 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17518 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17520 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17521 ;;Total ram usage:        7 bytes
 17522 ;; Hardware stack levels used: 1
 17523 ;; Hardware stack levels required when called: 19
 17524 ;; This function calls:
 17525 ;;		_dir_sdi
 17526 ;;		_follow_path
 17527 ;;		_ld_clust
 17528 ;;		_mount_volume
 17529 ;; This function is called by:
 17530 ;;		_scan_files
 17531 ;;		_scan_files1
 17532 ;; This function uses a non-reentrant model
 17533 ;;
 17534                           
 17535                           	psect	text27
 17536   01BE28                     __ptext27:
 17537                           	callstack 0
 17538   01BE28                     _f_opendir:
 17539                           	callstack 106
 17540   01BE28                     
 17541                           ;../fatfs/ff.c: 4600:  DIR* dp,;../fatfs/ff.c: 4601:  const TCHAR* path;../fatfs/ff.c: 4
      +                          603: {;../fatfs/ff.c: 4604:  FRESULT res;;../fatfs/ff.c: 4605:  FATFS *fs;;../fatfs/ff.c
      +                          : 4609:  if (!dp) return FR_INVALID_OBJECT;
 17542   01BE28  0106               	movlb	6	; () banked
 17543   01BE2A  51AF               	movf	f_opendir@dp& (0+255),w,b
 17544   01BE2C  11B0               	iorwf	(f_opendir@dp+1)& (0+255),w,b
 17545   01BE2E  A4D8               	btfss	status,2,c
 17546   01BE30  EF1C  F0DF         	goto	u34311
 17547   01BE34  EF1E  F0DF         	goto	u34310
 17548   01BE38                     u34311:
 17549   01BE38  EF21  F0DF         	goto	l24747
 17550   01BE3C                     u34310:
 17551   01BE3C                     
 17552                           ; BSR set to: 6
 17553   01BE3C  0E09               	movlw	9
 17554   01BE3E  EFD2  F0DF         	goto	l2086
 17555   01BE42                     l24747:
 17556                           
 17557                           ; BSR set to: 6
 17558                           ;../fatfs/ff.c: 4612:  res = mount_volume(&path, &fs, 0);
 17559   01BE42  0EB1               	movlw	low f_opendir@path
 17560   01BE44  6F81               	movwf	mount_volume@path& (0+255),b
 17561   01BE46  0E06               	movlw	high f_opendir@path
 17562   01BE48  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 17563   01BE4A  0EB3               	movlw	low f_opendir@fs
 17564   01BE4C  6F83               	movwf	mount_volume@rfs& (0+255),b
 17565   01BE4E  0E06               	movlw	high f_opendir@fs
 17566   01BE50  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 17567   01BE52  0E00               	movlw	0
 17568   01BE54  6F85               	movwf	mount_volume@mode& (0+255),b
 17569   01BE56  EC00  F080         	call	_mount_volume	;wreg free
 17570   01BE5A  0106               	movlb	6	; () banked
 17571   01BE5C  6FB5               	movwf	f_opendir@res& (0+255),b
 17572   01BE5E                     
 17573                           ; BSR set to: 6
 17574                           ;../fatfs/ff.c: 4613:  if (res == FR_OK) {
 17575   01BE5E  51B5               	movf	f_opendir@res& (0+255),w,b
 17576   01BE60  A4D8               	btfss	status,2,c
 17577   01BE62  EF35  F0DF         	goto	u34321
 17578   01BE66  EF37  F0DF         	goto	u34320
 17579   01BE6A                     u34321:
 17580   01BE6A  EFC3  F0DF         	goto	l2087
 17581   01BE6E                     u34320:
 17582   01BE6E                     
 17583                           ; BSR set to: 6
 17584                           ;../fatfs/ff.c: 4614:   dp->obj.fs = fs;
 17585   01BE6E  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 17586   01BE72  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 17587   01BE76  C6B3  F4DE         	movff	f_opendir@fs,postinc2
 17588   01BE7A  C6B4  F4DD         	movff	f_opendir@fs+1,postdec2
 17589   01BE7E                     
 17590                           ; BSR set to: 6
 17591                           ;../fatfs/ff.c: 4616:   res = follow_path(dp, path);
 17592   01BE7E  C6AF  F684         	movff	f_opendir@dp,follow_path@dp
 17593   01BE82  C6B0  F685         	movff	f_opendir@dp+1,follow_path@dp+1
 17594   01BE86  C6B1  F686         	movff	f_opendir@path,follow_path@path
 17595   01BE8A  C6B2  F687         	movff	f_opendir@path+1,follow_path@path+1
 17596   01BE8E  EC61  F0C4         	call	_follow_path	;wreg free
 17597   01BE92  0106               	movlb	6	; () banked
 17598   01BE94  6FB5               	movwf	f_opendir@res& (0+255),b
 17599   01BE96                     
 17600                           ; BSR set to: 6
 17601                           ;../fatfs/ff.c: 4617:   if (res == FR_OK) {
 17602   01BE96  51B5               	movf	f_opendir@res& (0+255),w,b
 17603   01BE98  A4D8               	btfss	status,2,c
 17604   01BE9A  EF51  F0DF         	goto	u34331
 17605   01BE9E  EF53  F0DF         	goto	u34330
 17606   01BEA2                     u34331:
 17607   01BEA2  EFB8  F0DF         	goto	l24769
 17608   01BEA6                     u34330:
 17609   01BEA6                     
 17610                           ; BSR set to: 6
 17611                           ;../fatfs/ff.c: 4618:    if (!(dp->fn[11] & 0x80)) {
 17612   01BEA6  EE20 F027          	lfsr	2,39
 17613   01BEAA  51AF               	movf	f_opendir@dp& (0+255),w,b
 17614   01BEAC  26D9               	addwf	fsr2l,f,c
 17615   01BEAE  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17616   01BEB0  22DA               	addwfc	fsr2h,f,c
 17617   01BEB2  BEDF               	btfsc	indf2,7,c
 17618   01BEB4  EF5E  F0DF         	goto	u34341
 17619   01BEB8  EF60  F0DF         	goto	u34340
 17620   01BEBC                     u34341:
 17621   01BEBC  EF90  F0DF         	goto	l2089
 17622   01BEC0                     u34340:
 17623   01BEC0                     
 17624                           ; BSR set to: 6
 17625                           ;../fatfs/ff.c: 4619:     if (dp->obj.attr & 0x10) {
 17626   01BEC0  EE20 F004          	lfsr	2,4
 17627   01BEC4  51AF               	movf	f_opendir@dp& (0+255),w,b
 17628   01BEC6  26D9               	addwf	fsr2l,f,c
 17629   01BEC8  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17630   01BECA  22DA               	addwfc	fsr2h,f,c
 17631   01BECC  A8DF               	btfss	indf2,4,c
 17632   01BECE  EF6B  F0DF         	goto	u34351
 17633   01BED2  EF6D  F0DF         	goto	u34350
 17634   01BED6                     u34351:
 17635   01BED6  EF8E  F0DF         	goto	l24763
 17636   01BEDA                     u34350:
 17637   01BEDA                     
 17638                           ; BSR set to: 6
 17639                           ;../fatfs/ff.c: 4628:      {;../fatfs/ff.c: 4629:       dp->obj.sclust = ld_clust(fs, dp
      +                          ->dir);
 17640   01BEDA  C6B3  F50B         	movff	f_opendir@fs,ld_clust@fs
 17641   01BEDE  C6B4  F50C         	movff	f_opendir@fs+1,ld_clust@fs+1
 17642   01BEE2  EE20 F01A          	lfsr	2,26
 17643   01BEE6  51AF               	movf	f_opendir@dp& (0+255),w,b
 17644   01BEE8  26D9               	addwf	fsr2l,f,c
 17645   01BEEA  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17646   01BEEC  22DA               	addwfc	fsr2h,f,c
 17647   01BEEE  C4DE F50D          	movff	postinc2,ld_clust@dir
 17648   01BEF2  C4DD F50E          	movff	postdec2,ld_clust@dir+1
 17649   01BEF6  EC3A  F0F9         	call	_ld_clust	;wreg free
 17650   01BEFA  0106               	movlb	6	; () banked
 17651   01BEFC  EE20 F006          	lfsr	2,6
 17652   01BF00  51AF               	movf	f_opendir@dp& (0+255),w,b
 17653   01BF02  26D9               	addwf	fsr2l,f,c
 17654   01BF04  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17655   01BF06  22DA               	addwfc	fsr2h,f,c
 17656   01BF08  C50B  F4DE         	movff	?_ld_clust,postinc2
 17657   01BF0C  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 17658   01BF10  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 17659   01BF14  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 17660                           
 17661                           ;../fatfs/ff.c: 4630:      };../fatfs/ff.c: 4631:     } else {
 17662   01BF18  EF90  F0DF         	goto	l2089
 17663   01BF1C                     l24763:
 17664                           
 17665                           ; BSR set to: 6
 17666                           ;../fatfs/ff.c: 4632:      res = FR_NO_PATH;
 17667   01BF1C  0E05               	movlw	5
 17668   01BF1E  6FB5               	movwf	f_opendir@res& (0+255),b
 17669   01BF20                     l2089:
 17670                           
 17671                           ; BSR set to: 6
 17672                           ;../fatfs/ff.c: 4635:    if (res == FR_OK) {
 17673   01BF20  51B5               	movf	f_opendir@res& (0+255),w,b
 17674   01BF22  A4D8               	btfss	status,2,c
 17675   01BF24  EF96  F0DF         	goto	u34361
 17676   01BF28  EF98  F0DF         	goto	u34360
 17677   01BF2C                     u34361:
 17678   01BF2C  EFB8  F0DF         	goto	l24769
 17679   01BF30                     u34360:
 17680   01BF30                     
 17681                           ; BSR set to: 6
 17682                           ;../fatfs/ff.c: 4636:     dp->obj.id = fs->id;
 17683   01BF30  EE20 F006          	lfsr	2,6
 17684   01BF34  51B3               	movf	f_opendir@fs& (0+255),w,b
 17685   01BF36  26D9               	addwf	fsr2l,f,c
 17686   01BF38  51B4               	movf	(f_opendir@fs+1)& (0+255),w,b
 17687   01BF3A  22DA               	addwfc	fsr2h,f,c
 17688   01BF3C  EE10 F002          	lfsr	1,2
 17689   01BF40  51AF               	movf	f_opendir@dp& (0+255),w,b
 17690   01BF42  26E1               	addwf	fsr1l,f,c
 17691   01BF44  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 17692   01BF46  22E2               	addwfc	fsr1h,f,c
 17693   01BF48  C4DE F4E6          	movff	postinc2,postinc1
 17694   01BF4C  C4DD F4E5          	movff	postdec2,postdec1
 17695   01BF50                     
 17696                           ; BSR set to: 6
 17697                           ;../fatfs/ff.c: 4637:     res = dir_sdi(dp, 0);
 17698   01BF50  C6AF  F63E         	movff	f_opendir@dp,dir_sdi@dp
 17699   01BF54  C6B0  F63F         	movff	f_opendir@dp+1,dir_sdi@dp+1
 17700   01BF58  0E00               	movlw	0
 17701   01BF5A  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17702   01BF5C  0E00               	movlw	0
 17703   01BF5E  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17704   01BF60  0E00               	movlw	0
 17705   01BF62  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17706   01BF64  0E00               	movlw	0
 17707   01BF66  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17708   01BF68  EC72  F0BC         	call	_dir_sdi	;wreg free
 17709   01BF6C  0106               	movlb	6	; () banked
 17710   01BF6E  6FB5               	movwf	f_opendir@res& (0+255),b
 17711   01BF70                     l24769:
 17712                           
 17713                           ; BSR set to: 6
 17714                           ;../fatfs/ff.c: 4651:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 17715   01BF70  0E04               	movlw	4
 17716   01BF72  19B5               	xorwf	f_opendir@res& (0+255),w,b
 17717   01BF74  A4D8               	btfss	status,2,c
 17718   01BF76  EFBF  F0DF         	goto	u34371
 17719   01BF7A  EFC1  F0DF         	goto	u34370
 17720   01BF7E                     u34371:
 17721   01BF7E  EFC3  F0DF         	goto	l2087
 17722   01BF82                     u34370:
 17723   01BF82                     
 17724                           ; BSR set to: 6
 17725   01BF82  0E05               	movlw	5
 17726   01BF84  6FB5               	movwf	f_opendir@res& (0+255),b
 17727   01BF86                     l2087:
 17728                           
 17729                           ; BSR set to: 6
 17730                           ;../fatfs/ff.c: 4653:  if (res != FR_OK) dp->obj.fs = 0;
 17731   01BF86  51B5               	movf	f_opendir@res& (0+255),w,b
 17732   01BF88  B4D8               	btfsc	status,2,c
 17733   01BF8A  EFC9  F0DF         	goto	u34381
 17734   01BF8E  EFCB  F0DF         	goto	u34380
 17735   01BF92                     u34381:
 17736   01BF92  EFD1  F0DF         	goto	l24775
 17737   01BF96                     u34380:
 17738   01BF96                     
 17739                           ; BSR set to: 6
 17740   01BF96  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 17741   01BF9A  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 17742   01BF9E  6ADE               	clrf	postinc2,c
 17743   01BFA0  6ADD               	clrf	postdec2,c
 17744   01BFA2                     l24775:
 17745                           
 17746                           ; BSR set to: 6
 17747                           ;../fatfs/ff.c: 4655:  return res;
 17748   01BFA2  51B5               	movf	f_opendir@res& (0+255),w,b
 17749   01BFA4                     l2086:
 17750                           
 17751                           ; BSR set to: 6
 17752   01BFA4  0012               	return		;funcret
 17753   01BFA6                     __end_of_f_opendir:
 17754                           	callstack 0
 17755                           
 17756 ;; *************** function _f_getcwd *****************
 17757 ;; Defined at:
 17758 ;;		line 4333 in file "../fatfs/ff.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  buff            2  175[BANK6 ] PTR unsigned char 
 17761 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17762 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17763 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17764 ;;  len             2  177[BANK6 ] unsigned int 
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;  dj             40   35[BANK7 ] struct .
 17767 ;;  fno            22   10[BANK7 ] struct .
 17768 ;;  ccl             4    0[BANK7 ] unsigned long 
 17769 ;;  fs              2   32[BANK7 ] PTR struct .
 17770 ;;		 -> fs(564), NULL(0), 
 17771 ;;  i               2    8[BANK7 ] unsigned int 
 17772 ;;  n               2    6[BANK7 ] unsigned int 
 17773 ;;  tp              2    4[BANK7 ] PTR unsigned char 
 17774 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 17775 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 17776 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 17777 ;;  res             1   34[BANK7 ] enum E597
 17778 ;; Return value:  Size  Location     Type
 17779 ;;                  1    wreg      enum E17409
 17780 ;; Registers used:
 17781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17782 ;; Tracked objects:
 17783 ;;		On entry : 0/0
 17784 ;;		On exit  : 0/0
 17785 ;;		Unchanged: 0/0
 17786 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17787 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17788 ;;      Locals:         0       0       0      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17789 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17790 ;;      Totals:         0       0       9      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17791 ;;Total ram usage:       84 bytes
 17792 ;; Hardware stack levels used: 1
 17793 ;; Hardware stack levels required when called: 18
 17794 ;; This function calls:
 17795 ;;		_dir_next
 17796 ;;		_dir_read
 17797 ;;		_dir_sdi
 17798 ;;		_get_fileinfo
 17799 ;;		_ld_clust
 17800 ;;		_mount_volume
 17801 ;;		_move_window
 17802 ;; This function is called by:
 17803 ;;		_main
 17804 ;;		_scan_files
 17805 ;;		_scan_files1
 17806 ;; This function uses a non-reentrant model
 17807 ;;
 17808                           
 17809                           	psect	text28
 17810   014F26                     __ptext28:
 17811                           	callstack 0
 17812   014F26                     _f_getcwd:
 17813                           	callstack 107
 17814   014F26                     
 17815                           ;../fatfs/ff.c: 4334:  TCHAR* buff,;../fatfs/ff.c: 4335:  UINT len;../fatfs/ff.c: 4337: 
      +                          {;../fatfs/ff.c: 4338:  FRESULT res;;../fatfs/ff.c: 4339:  DIR dj;;../fatfs/ff.c: 4340: 
      +                           FATFS *fs;;../fatfs/ff.c: 4341:  UINT i, n;;../fatfs/ff.c: 4342:  DWORD ccl;;../fatfs/f
      +                          f.c: 4343:  TCHAR *tp = buff;
 17816   014F26  C6AF  F704         	movff	f_getcwd@buff,f_getcwd@tp
 17817   014F2A  C6B0  F705         	movff	f_getcwd@buff+1,f_getcwd@tp+1
 17818   014F2E                     
 17819                           ;../fatfs/ff.c: 4350:  FILINFO fno;;../fatfs/ff.c: 4355:  buff[0] = 0;
 17820   014F2E  C6AF  F4F6         	movff	f_getcwd@buff,tblptrl
 17821   014F32  C6B0  F4F7         	movff	f_getcwd@buff+1,tblptrh
 17822   014F36  0E00               	movlw	low (__mediumconst shr (0+16))
 17823   014F38  6EF8               	movwf	tblptru,c
 17824   014F3A  0E25               	movlw	(high __ramtop+-1)
 17825   014F3C  64F7               	cpfsgt	tblptrh,c
 17826   014F3E  D004               	bra	u33517
 17827   014F40  0E00               	movlw	0
 17828   014F42  6EF5               	movwf	tablat,c
 17829   014F44  000C               	tblwt		*
 17830   014F46  D006               	bra	u33510
 17831   014F48                     u33517:
 17832   014F48  C4F6 F4E9          	movff	tblptrl,fsr0l
 17833   014F4C  C4F7 F4EA          	movff	tblptrh,fsr0h
 17834   014F50  0E00               	movlw	0
 17835   014F52  6EEF               	movwf	indf0,c
 17836   014F54                     u33510:
 17837   014F54                     
 17838                           ;../fatfs/ff.c: 4356:  res = mount_volume((const TCHAR**)&buff, &fs, 0);
 17839   014F54  0EAF               	movlw	low f_getcwd@buff
 17840   014F56  0106               	movlb	6	; () banked
 17841   014F58  6F81               	movwf	mount_volume@path& (0+255),b
 17842   014F5A  0E06               	movlw	high f_getcwd@buff
 17843   014F5C  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 17844   014F5E  0E20               	movlw	low f_getcwd@fs
 17845   014F60  6F83               	movwf	mount_volume@rfs& (0+255),b
 17846   014F62  0E07               	movlw	high f_getcwd@fs
 17847   014F64  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 17848   014F66  0E00               	movlw	0
 17849   014F68  6F85               	movwf	mount_volume@mode& (0+255),b
 17850   014F6A  EC00  F080         	call	_mount_volume	;wreg free
 17851   014F6E  0107               	movlb	7	; () banked
 17852   014F70  6F22               	movwf	f_getcwd@res& (0+255),b
 17853   014F72                     
 17854                           ; BSR set to: 7
 17855                           ;../fatfs/ff.c: 4357:  if (res == FR_OK) {
 17856   014F72  5122               	movf	f_getcwd@res& (0+255),w,b
 17857   014F74  A4D8               	btfss	status,2,c
 17858   014F76  EFBF  F0A7         	goto	u33521
 17859   014F7A  EFC1  F0A7         	goto	u33520
 17860   014F7E                     u33521:
 17861   014F7E  EFD6  F0A9         	goto	l24417
 17862   014F82                     u33520:
 17863   014F82                     
 17864                           ; BSR set to: 7
 17865                           ;../fatfs/ff.c: 4358:   dj.obj.fs = fs;
 17866   014F82  C720  F723         	movff	f_getcwd@fs,f_getcwd@dj
 17867   014F86  C721  F724         	movff	f_getcwd@fs+1,f_getcwd@dj+1
 17868   014F8A                     
 17869                           ; BSR set to: 7
 17870                           ;../fatfs/ff.c: 4362:   i = len;
 17871   014F8A  C6B1  F708         	movff	f_getcwd@len,f_getcwd@i
 17872   014F8E  C6B2  F709         	movff	f_getcwd@len+1,f_getcwd@i+1
 17873   014F92                     
 17874                           ; BSR set to: 7
 17875                           ;../fatfs/ff.c: 4364:    dj.obj.sclust = fs->cdir;
 17876   014F92  EE20 F014          	lfsr	2,20
 17877   014F96  5120               	movf	f_getcwd@fs& (0+255),w,b
 17878   014F98  26D9               	addwf	fsr2l,f,c
 17879   014F9A  5121               	movf	(f_getcwd@fs+1)& (0+255),w,b
 17880   014F9C  22DA               	addwfc	fsr2h,f,c
 17881   014F9E  C4DE F729          	movff	postinc2,f_getcwd@dj+6
 17882   014FA2  C4DE F72A          	movff	postinc2,f_getcwd@dj+7
 17883   014FA6  C4DE F72B          	movff	postinc2,f_getcwd@dj+8
 17884   014FAA  C4DE F72C          	movff	postinc2,f_getcwd@dj+9
 17885                           
 17886                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 17887   014FAE  EF3F  F0A9         	goto	l24399
 17888   014FB2                     l24341:
 17889                           
 17890                           ; BSR set to: 7
 17891                           ;../fatfs/ff.c: 4366:     res = dir_sdi(&dj, 1 * 32);
 17892   014FB2  0E23               	movlw	low f_getcwd@dj
 17893   014FB4  0106               	movlb	6	; () banked
 17894   014FB6  6F3E               	movwf	dir_sdi@dp& (0+255),b
 17895   014FB8  0E07               	movlw	high f_getcwd@dj
 17896   014FBA  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 17897   014FBC  0E20               	movlw	32
 17898   014FBE  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17899   014FC0  0E00               	movlw	0
 17900   014FC2  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17901   014FC4  0E00               	movlw	0
 17902   014FC6  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17903   014FC8  0E00               	movlw	0
 17904   014FCA  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17905   014FCC  EC72  F0BC         	call	_dir_sdi	;wreg free
 17906   014FD0  0107               	movlb	7	; () banked
 17907   014FD2  6F22               	movwf	f_getcwd@res& (0+255),b
 17908   014FD4                     
 17909                           ; BSR set to: 7
 17910                           ;../fatfs/ff.c: 4367:     if (res != FR_OK) break;
 17911   014FD4  5122               	movf	f_getcwd@res& (0+255),w,b
 17912   014FD6  B4D8               	btfsc	status,2,c
 17913   014FD8  EFF0  F0A7         	goto	u33531
 17914   014FDC  EFF2  F0A7         	goto	u33530
 17915   014FE0                     u33531:
 17916   014FE0  EFF4  F0A7         	goto	l24347
 17917   014FE4                     u33530:
 17918   014FE4  EF53  F0A9         	goto	l24401
 17919   014FE8                     l24347:
 17920                           
 17921                           ; BSR set to: 7
 17922                           ;../fatfs/ff.c: 4368:     res = move_window(fs, dj.sect);
 17923   014FE8  C720  F61A         	movff	f_getcwd@fs,move_window@fs
 17924   014FEC  C721  F61B         	movff	f_getcwd@fs+1,move_window@fs+1
 17925   014FF0  C739  F61C         	movff	f_getcwd@dj+22,move_window@sect
 17926   014FF4  C73A  F61D         	movff	f_getcwd@dj+23,move_window@sect+1
 17927   014FF8  C73B  F61E         	movff	f_getcwd@dj+24,move_window@sect+2
 17928   014FFC  C73C  F61F         	movff	f_getcwd@dj+25,move_window@sect+3
 17929   015000  ECAB  F0EF         	call	_move_window	;wreg free
 17930   015004  0107               	movlb	7	; () banked
 17931   015006  6F22               	movwf	f_getcwd@res& (0+255),b
 17932   015008                     
 17933                           ; BSR set to: 7
 17934                           ;../fatfs/ff.c: 4369:     if (res != FR_OK) break;
 17935   015008  5122               	movf	f_getcwd@res& (0+255),w,b
 17936   01500A  B4D8               	btfsc	status,2,c
 17937   01500C  EF0A  F0A8         	goto	u33541
 17938   015010  EF0C  F0A8         	goto	u33540
 17939   015014                     u33541:
 17940   015014  EF0E  F0A8         	goto	l24353
 17941   015018                     u33540:
 17942   015018  EF53  F0A9         	goto	l24401
 17943   01501C                     l24353:
 17944                           
 17945                           ; BSR set to: 7
 17946                           ;../fatfs/ff.c: 4370:     dj.obj.sclust = ld_clust(fs, dj.dir);
 17947   01501C  C720  F50B         	movff	f_getcwd@fs,ld_clust@fs
 17948   015020  C721  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 17949   015024  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 17950   015028  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 17951   01502C  EC3A  F0F9         	call	_ld_clust	;wreg free
 17952   015030  C50B  F729         	movff	?_ld_clust,f_getcwd@dj+6
 17953   015034  C50C  F72A         	movff	?_ld_clust+1,f_getcwd@dj+7
 17954   015038  C50D  F72B         	movff	?_ld_clust+2,f_getcwd@dj+8
 17955   01503C  C50E  F72C         	movff	?_ld_clust+3,f_getcwd@dj+9
 17956   015040                     
 17957                           ;../fatfs/ff.c: 4371:     res = dir_sdi(&dj, 0);
 17958   015040  0E23               	movlw	low f_getcwd@dj
 17959   015042  0106               	movlb	6	; () banked
 17960   015044  6F3E               	movwf	dir_sdi@dp& (0+255),b
 17961   015046  0E07               	movlw	high f_getcwd@dj
 17962   015048  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 17963   01504A  0E00               	movlw	0
 17964   01504C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 17965   01504E  0E00               	movlw	0
 17966   015050  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 17967   015052  0E00               	movlw	0
 17968   015054  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 17969   015056  0E00               	movlw	0
 17970   015058  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 17971   01505A  EC72  F0BC         	call	_dir_sdi	;wreg free
 17972   01505E  0107               	movlb	7	; () banked
 17973   015060  6F22               	movwf	f_getcwd@res& (0+255),b
 17974   015062                     
 17975                           ; BSR set to: 7
 17976                           ;../fatfs/ff.c: 4372:     if (res != FR_OK) break;
 17977   015062  5122               	movf	f_getcwd@res& (0+255),w,b
 17978   015064  B4D8               	btfsc	status,2,c
 17979   015066  EF37  F0A8         	goto	u33551
 17980   01506A  EF39  F0A8         	goto	u33550
 17981   01506E                     u33551:
 17982   01506E  EF3B  F0A8         	goto	l24361
 17983   015072                     u33550:
 17984   015072  EF53  F0A9         	goto	l24401
 17985   015076                     l24361:
 17986                           
 17987                           ; BSR set to: 7
 17988                           ;../fatfs/ff.c: 4374:      res = dir_read(&dj, 0);
 17989   015076  0E23               	movlw	low f_getcwd@dj
 17990   015078  0106               	movlb	6	; () banked
 17991   01507A  6F7C               	movwf	dir_read@dp& (0+255),b
 17992   01507C  0E07               	movlw	high f_getcwd@dj
 17993   01507E  6F7D               	movwf	(dir_read@dp+1)& (0+255),b
 17994   015080  0E00               	movlw	0
 17995   015082  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 17996   015084  0E00               	movlw	0
 17997   015086  6F7E               	movwf	dir_read@vol& (0+255),b
 17998   015088  ECB0  F0D8         	call	_dir_read	;wreg free
 17999   01508C  0107               	movlb	7	; () banked
 18000   01508E  6F22               	movwf	f_getcwd@res& (0+255),b
 18001   015090                     
 18002                           ; BSR set to: 7
 18003                           ;../fatfs/ff.c: 4375:      if (res != FR_OK) break;
 18004   015090  5122               	movf	f_getcwd@res& (0+255),w,b
 18005   015092  B4D8               	btfsc	status,2,c
 18006   015094  EF4E  F0A8         	goto	u33561
 18007   015098  EF50  F0A8         	goto	u33560
 18008   01509C                     u33561:
 18009   01509C  EF52  F0A8         	goto	l24367
 18010   0150A0                     u33560:
 18011   0150A0  EF86  F0A8         	goto	l24375
 18012   0150A4                     l24367:
 18013                           
 18014                           ; BSR set to: 7
 18015                           ;../fatfs/ff.c: 4376:      if (ccl == ld_clust(fs, dj.dir)) break;
 18016   0150A4  C720  F50B         	movff	f_getcwd@fs,ld_clust@fs
 18017   0150A8  C721  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 18018   0150AC  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 18019   0150B0  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 18020   0150B4  EC3A  F0F9         	call	_ld_clust	;wreg free
 18021   0150B8  0107               	movlb	7	; () banked
 18022   0150BA  5100               	movf	f_getcwd@ccl& (0+255),w,b
 18023   0150BC  180B               	xorwf	?_ld_clust^(0+1280),w,c
 18024   0150BE  E10D               	bnz	u33571
 18025   0150C0  5101               	movf	(f_getcwd@ccl+1)& (0+255),w,b
 18026   0150C2  180C               	xorwf	(?_ld_clust+1)^(0+1280),w,c
 18027   0150C4  E10A               	bnz	u33571
 18028   0150C6  5102               	movf	(f_getcwd@ccl+2)& (0+255),w,b
 18029   0150C8  180D               	xorwf	(?_ld_clust+2)^(0+1280),w,c
 18030   0150CA  E107               	bnz	u33571
 18031   0150CC  5103               	movf	(f_getcwd@ccl+3)& (0+255),w,b
 18032   0150CE  180E               	xorwf	(?_ld_clust+3)^(0+1280),w,c
 18033   0150D0  A4D8               	btfss	status,2,c
 18034   0150D2  EF6D  F0A8         	goto	u33571
 18035   0150D6  EF6F  F0A8         	goto	u33570
 18036   0150DA                     u33571:
 18037   0150DA  EF71  F0A8         	goto	l24371
 18038   0150DE                     u33570:
 18039   0150DE  EF86  F0A8         	goto	l24375
 18040   0150E2                     l24371:
 18041                           
 18042                           ; BSR set to: 7
 18043                           ;../fatfs/ff.c: 4377:      res = dir_next(&dj, 0);
 18044   0150E2  0E23               	movlw	low f_getcwd@dj
 18045   0150E4  0106               	movlb	6	; () banked
 18046   0150E6  6F62               	movwf	dir_next@dp& (0+255),b
 18047   0150E8  0E07               	movlw	high f_getcwd@dj
 18048   0150EA  6F63               	movwf	(dir_next@dp+1)& (0+255),b
 18049   0150EC  0E00               	movlw	0
 18050   0150EE  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 18051   0150F0  0E00               	movlw	0
 18052   0150F2  6F64               	movwf	dir_next@stretch& (0+255),b
 18053   0150F4  ECCF  F0B0         	call	_dir_next	;wreg free
 18054   0150F8  0107               	movlb	7	; () banked
 18055   0150FA  6F22               	movwf	f_getcwd@res& (0+255),b
 18056   0150FC                     
 18057                           ; BSR set to: 7
 18058                           ;../fatfs/ff.c: 4378:     } while (res == FR_OK);
 18059   0150FC  5122               	movf	f_getcwd@res& (0+255),w,b
 18060   0150FE  B4D8               	btfsc	status,2,c
 18061   015100  EF84  F0A8         	goto	u33581
 18062   015104  EF86  F0A8         	goto	u33580
 18063   015108                     u33581:
 18064   015108  EF3B  F0A8         	goto	l24361
 18065   01510C                     u33580:
 18066   01510C                     l24375:
 18067                           
 18068                           ; BSR set to: 7
 18069                           ;../fatfs/ff.c: 4379:     if (res == FR_NO_FILE) res = FR_INT_ERR;
 18070   01510C  0E04               	movlw	4
 18071   01510E  1922               	xorwf	f_getcwd@res& (0+255),w,b
 18072   015110  A4D8               	btfss	status,2,c
 18073   015112  EF8D  F0A8         	goto	u33591
 18074   015116  EF8F  F0A8         	goto	u33590
 18075   01511A                     u33591:
 18076   01511A  EF91  F0A8         	goto	l2035
 18077   01511E                     u33590:
 18078   01511E                     
 18079                           ; BSR set to: 7
 18080   01511E  0E02               	movlw	2
 18081   015120  6F22               	movwf	f_getcwd@res& (0+255),b
 18082   015122                     l2035:
 18083                           
 18084                           ; BSR set to: 7
 18085                           ;../fatfs/ff.c: 4380:     if (res != FR_OK) break;
 18086   015122  5122               	movf	f_getcwd@res& (0+255),w,b
 18087   015124  B4D8               	btfsc	status,2,c
 18088   015126  EF97  F0A8         	goto	u33601
 18089   01512A  EF99  F0A8         	goto	u33600
 18090   01512E                     u33601:
 18091   01512E  EF9B  F0A8         	goto	l24381
 18092   015132                     u33600:
 18093   015132  EF53  F0A9         	goto	l24401
 18094   015136                     l24381:
 18095                           
 18096                           ; BSR set to: 7
 18097                           ;../fatfs/ff.c: 4381:     get_fileinfo(&dj, &fno);
 18098   015136  0E23               	movlw	low f_getcwd@dj
 18099   015138  6E11               	movwf	get_fileinfo@dp^(0+1280),c
 18100   01513A  0E07               	movlw	high f_getcwd@dj
 18101   01513C  6E12               	movwf	(get_fileinfo@dp+1)^(0+1280),c
 18102   01513E  0E0A               	movlw	low f_getcwd@fno
 18103   015140  6E13               	movwf	get_fileinfo@fno^(0+1280),c
 18104   015142  0E07               	movlw	high f_getcwd@fno
 18105   015144  6E14               	movwf	(get_fileinfo@fno+1)^(0+1280),c
 18106   015146  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 18107   01514A                     
 18108                           ;../fatfs/ff.c: 4382:     for (n = 0; fno.fname[n]; n++) ;
 18109   01514A  0E00               	movlw	0
 18110   01514C  0107               	movlb	7	; () banked
 18111   01514E  6F07               	movwf	(f_getcwd@n+1)& (0+255),b
 18112   015150  0E00               	movlw	0
 18113   015152  6F06               	movwf	f_getcwd@n& (0+255),b
 18114   015154  EFAF  F0A8         	goto	l24387
 18115   015158                     l24385:
 18116                           
 18117                           ; BSR set to: 6
 18118   015158  0107               	movlb	7	; () banked
 18119   01515A  4B06               	infsnz	f_getcwd@n& (0+255),f,b
 18120   01515C  2B07               	incf	(f_getcwd@n+1)& (0+255),f,b
 18121   01515E                     l24387:
 18122                           
 18123                           ; BSR set to: 7
 18124   01515E  0E09               	movlw	9
 18125   015160  2506               	addwf	f_getcwd@n& (0+255),w,b
 18126   015162  0106               	movlb	6	; () banked
 18127   015164  6FB3               	movwf	??_f_getcwd& (0+255),b
 18128   015166  0E00               	movlw	0
 18129   015168  0107               	movlb	7	; () banked
 18130   01516A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18131   01516C  0106               	movlb	6	; () banked
 18132   01516E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18133   015170  0E0A               	movlw	low f_getcwd@fno
 18134   015172  25B3               	addwf	??_f_getcwd& (0+255),w,b
 18135   015174  6ED9               	movwf	fsr2l,c
 18136   015176  0E07               	movlw	high f_getcwd@fno
 18137   015178  21B4               	addwfc	(??_f_getcwd+1)& (0+255),w,b
 18138   01517A  6EDA               	movwf	fsr2h,c
 18139   01517C  50DF               	movf	indf2,w,c
 18140   01517E  A4D8               	btfss	status,2,c
 18141   015180  EFC4  F0A8         	goto	u33611
 18142   015184  EFC6  F0A8         	goto	u33610
 18143   015188                     u33611:
 18144   015188  EFAC  F0A8         	goto	l24385
 18145   01518C                     u33610:
 18146   01518C                     
 18147                           ; BSR set to: 6
 18148                           ;../fatfs/ff.c: 4383:     if (i < n + 1) {
 18149   01518C  0E01               	movlw	1
 18150   01518E  0107               	movlb	7	; () banked
 18151   015190  2506               	addwf	f_getcwd@n& (0+255),w,b
 18152   015192  0106               	movlb	6	; () banked
 18153   015194  6FB3               	movwf	??_f_getcwd& (0+255),b
 18154   015196  0E00               	movlw	0
 18155   015198  0107               	movlb	7	; () banked
 18156   01519A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18157   01519C  0106               	movlb	6	; () banked
 18158   01519E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18159   0151A0  51B3               	movf	??_f_getcwd& (0+255),w,b
 18160   0151A2  0107               	movlb	7	; () banked
 18161   0151A4  5D08               	subwf	f_getcwd@i& (0+255),w,b
 18162   0151A6  0106               	movlb	6	; () banked
 18163   0151A8  51B4               	movf	(??_f_getcwd+1)& (0+255),w,b
 18164   0151AA  0107               	movlb	7	; () banked
 18165   0151AC  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 18166   0151AE  B0D8               	btfsc	status,0,c
 18167   0151B0  EFDC  F0A8         	goto	u33621
 18168   0151B4  EFDE  F0A8         	goto	u33620
 18169   0151B8                     u33621:
 18170   0151B8  EF16  F0A9         	goto	l24395
 18171   0151BC                     u33620:
 18172   0151BC                     
 18173                           ; BSR set to: 7
 18174                           ;../fatfs/ff.c: 4384:      res = FR_NOT_ENOUGH_CORE; break;
 18175   0151BC  0E11               	movlw	17
 18176   0151BE  6F22               	movwf	f_getcwd@res& (0+255),b
 18177   0151C0  EF53  F0A9         	goto	l24401
 18178   0151C4                     l24393:
 18179                           
 18180                           ; BSR set to: 7
 18181   0151C4  0708               	decf	f_getcwd@i& (0+255),f,b
 18182   0151C6  A0D8               	btfss	status,0,c
 18183   0151C8  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18184   0151CA  5108               	movf	f_getcwd@i& (0+255),w,b
 18185   0151CC  0106               	movlb	6	; () banked
 18186   0151CE  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18187   0151D0  6FB3               	movwf	??_f_getcwd& (0+255),b
 18188   0151D2  0107               	movlb	7	; () banked
 18189   0151D4  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18190   0151D6  0106               	movlb	6	; () banked
 18191   0151D8  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18192   0151DA  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18193   0151DC  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18194   0151E0  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18195   0151E4  0E00               	movlw	low (__mediumconst shr (0+16))
 18196   0151E6  6EF8               	movwf	tblptru,c
 18197   0151E8  0E09               	movlw	9
 18198   0151EA  0107               	movlb	7	; () banked
 18199   0151EC  0706               	decf	f_getcwd@n& (0+255),f,b
 18200   0151EE  A0D8               	btfss	status,0,c
 18201   0151F0  0707               	decf	(f_getcwd@n+1)& (0+255),f,b
 18202   0151F2  2506               	addwf	f_getcwd@n& (0+255),w,b
 18203   0151F4  0106               	movlb	6	; () banked
 18204   0151F6  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 18205   0151F8  0E00               	movlw	0
 18206   0151FA  0107               	movlb	7	; () banked
 18207   0151FC  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 18208   0151FE  0106               	movlb	6	; () banked
 18209   015200  6FB6               	movwf	(??_f_getcwd+3)& (0+255),b
 18210   015202  0E0A               	movlw	low f_getcwd@fno
 18211   015204  25B5               	addwf	(??_f_getcwd+2)& (0+255),w,b
 18212   015206  6ED9               	movwf	fsr2l,c
 18213   015208  0E07               	movlw	high f_getcwd@fno
 18214   01520A  21B6               	addwfc	(??_f_getcwd+3)& (0+255),w,b
 18215   01520C  6EDA               	movwf	fsr2h,c
 18216   01520E  50DF               	movf	indf2,w,c
 18217   015210  6FB7               	movwf	(??_f_getcwd+4)& (0+255),b
 18218   015212  0E25               	movlw	(high __ramtop+-1)
 18219   015214  64F7               	cpfsgt	tblptrh,c
 18220   015216  D004               	bra	u33637
 18221   015218  C6B7  F4F5         	movff	??_f_getcwd+4,tablat
 18222   01521C  000C               	tblwt		*
 18223   01521E  D006               	bra	u33630
 18224   015220                     u33637:
 18225   015220  C4F6 F4E9          	movff	tblptrl,fsr0l
 18226   015224  C4F7 F4EA          	movff	tblptrh,fsr0h
 18227   015228  C6B7  F4EF         	movff	??_f_getcwd+4,indf0
 18228   01522C                     u33630:
 18229   01522C                     l24395:
 18230   01522C  0107               	movlb	7	; () banked
 18231   01522E  5106               	movf	f_getcwd@n& (0+255),w,b
 18232   015230  1107               	iorwf	(f_getcwd@n+1)& (0+255),w,b
 18233   015232  A4D8               	btfss	status,2,c
 18234   015234  EF1E  F0A9         	goto	u33641
 18235   015238  EF20  F0A9         	goto	u33640
 18236   01523C                     u33641:
 18237   01523C  EFE2  F0A8         	goto	l24393
 18238   015240                     u33640:
 18239   015240                     
 18240                           ; BSR set to: 7
 18241                           ;../fatfs/ff.c: 4387:     buff[--i] = '/';
 18242   015240  0708               	decf	f_getcwd@i& (0+255),f,b
 18243   015242  A0D8               	btfss	status,0,c
 18244   015244  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18245   015246  5108               	movf	f_getcwd@i& (0+255),w,b
 18246   015248  0106               	movlb	6	; () banked
 18247   01524A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18248   01524C  6FB3               	movwf	??_f_getcwd& (0+255),b
 18249   01524E  0107               	movlb	7	; () banked
 18250   015250  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18251   015252  0106               	movlb	6	; () banked
 18252   015254  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18253   015256  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18254   015258  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18255   01525C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18256   015260  0E00               	movlw	low (__mediumconst shr (0+16))
 18257   015262  6EF8               	movwf	tblptru,c
 18258   015264  0E25               	movlw	(high __ramtop+-1)
 18259   015266  64F7               	cpfsgt	tblptrh,c
 18260   015268  D004               	bra	u33657
 18261   01526A  0E2F               	movlw	47
 18262   01526C  6EF5               	movwf	tablat,c
 18263   01526E  000C               	tblwt		*
 18264   015270  D006               	bra	u33650
 18265   015272                     u33657:
 18266   015272  C4F6 F4E9          	movff	tblptrl,fsr0l
 18267   015276  C4F7 F4EA          	movff	tblptrh,fsr0h
 18268   01527A  0E2F               	movlw	47
 18269   01527C  6EEF               	movwf	indf0,c
 18270   01527E                     u33650:
 18271   01527E                     l24399:
 18272                           
 18273                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 18274   01527E  C729  F700         	movff	f_getcwd@dj+6,f_getcwd@ccl
 18275   015282  C72A  F701         	movff	f_getcwd@dj+7,f_getcwd@ccl+1
 18276   015286  C72B  F702         	movff	f_getcwd@dj+8,f_getcwd@ccl+2
 18277   01528A  C72C  F703         	movff	f_getcwd@dj+9,f_getcwd@ccl+3
 18278   01528E  0107               	movlb	7	; () banked
 18279   015290  5100               	movf	f_getcwd@ccl& (0+255),w,b
 18280   015292  1101               	iorwf	(f_getcwd@ccl+1)& (0+255),w,b
 18281   015294  1102               	iorwf	(f_getcwd@ccl+2)& (0+255),w,b
 18282   015296  1103               	iorwf	(f_getcwd@ccl+3)& (0+255),w,b
 18283   015298  A4D8               	btfss	status,2,c
 18284   01529A  EF51  F0A9         	goto	u33661
 18285   01529E  EF53  F0A9         	goto	u33660
 18286   0152A2                     u33661:
 18287   0152A2  EFD9  F0A7         	goto	l24341
 18288   0152A6                     u33660:
 18289   0152A6                     l24401:
 18290                           
 18291                           ; BSR set to: 7
 18292                           ;../fatfs/ff.c: 4390:   if (res == FR_OK) {
 18293   0152A6  5122               	movf	f_getcwd@res& (0+255),w,b
 18294   0152A8  A4D8               	btfss	status,2,c
 18295   0152AA  EF59  F0A9         	goto	u33671
 18296   0152AE  EF5B  F0A9         	goto	u33670
 18297   0152B2                     u33671:
 18298   0152B2  EFD6  F0A9         	goto	l24417
 18299   0152B6                     u33670:
 18300   0152B6                     
 18301                           ; BSR set to: 7
 18302                           ;../fatfs/ff.c: 4391:    if (i == len) buff[--i] = '/';
 18303   0152B6  0106               	movlb	6	; () banked
 18304   0152B8  51B1               	movf	f_getcwd@len& (0+255),w,b
 18305   0152BA  0107               	movlb	7	; () banked
 18306   0152BC  1908               	xorwf	f_getcwd@i& (0+255),w,b
 18307   0152BE  E109               	bnz	u33681
 18308   0152C0  0106               	movlb	6	; () banked
 18309   0152C2  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 18310   0152C4  0107               	movlb	7	; () banked
 18311   0152C6  1909               	xorwf	(f_getcwd@i+1)& (0+255),w,b
 18312   0152C8  A4D8               	btfss	status,2,c
 18313   0152CA  EF69  F0A9         	goto	u33681
 18314   0152CE  EF6B  F0A9         	goto	u33680
 18315   0152D2                     u33681:
 18316   0152D2  EF8A  F0A9         	goto	l24407
 18317   0152D6                     u33680:
 18318   0152D6                     
 18319                           ; BSR set to: 7
 18320   0152D6  0708               	decf	f_getcwd@i& (0+255),f,b
 18321   0152D8  A0D8               	btfss	status,0,c
 18322   0152DA  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 18323   0152DC  5108               	movf	f_getcwd@i& (0+255),w,b
 18324   0152DE  0106               	movlb	6	; () banked
 18325   0152E0  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18326   0152E2  6FB3               	movwf	??_f_getcwd& (0+255),b
 18327   0152E4  0107               	movlb	7	; () banked
 18328   0152E6  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18329   0152E8  0106               	movlb	6	; () banked
 18330   0152EA  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18331   0152EC  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18332   0152EE  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18333   0152F2  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18334   0152F6  0E00               	movlw	low (__mediumconst shr (0+16))
 18335   0152F8  6EF8               	movwf	tblptru,c
 18336   0152FA  0E25               	movlw	(high __ramtop+-1)
 18337   0152FC  64F7               	cpfsgt	tblptrh,c
 18338   0152FE  D004               	bra	u33697
 18339   015300  0E2F               	movlw	47
 18340   015302  6EF5               	movwf	tablat,c
 18341   015304  000C               	tblwt		*
 18342   015306  D006               	bra	u33690
 18343   015308                     u33697:
 18344   015308  C4F6 F4E9          	movff	tblptrl,fsr0l
 18345   01530C  C4F7 F4EA          	movff	tblptrh,fsr0h
 18346   015310  0E2F               	movlw	47
 18347   015312  6EEF               	movwf	indf0,c
 18348   015314                     u33690:
 18349   015314                     l24407:
 18350                           
 18351                           ;../fatfs/ff.c: 4412:    if (res == FR_OK) {
 18352   015314  0107               	movlb	7	; () banked
 18353   015316  5122               	movf	f_getcwd@res& (0+255),w,b
 18354   015318  A4D8               	btfss	status,2,c
 18355   01531A  EF91  F0A9         	goto	u33701
 18356   01531E  EF93  F0A9         	goto	u33700
 18357   015322                     u33701:
 18358   015322  EFD6  F0A9         	goto	l24417
 18359   015326                     u33700:
 18360   015326                     l24409:
 18361                           
 18362                           ; BSR set to: 7
 18363                           ;../fatfs/ff.c: 4414:      *tp++ = buff[i++];
 18364   015326  5108               	movf	f_getcwd@i& (0+255),w,b
 18365   015328  0106               	movlb	6	; () banked
 18366   01532A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 18367   01532C  6FB3               	movwf	??_f_getcwd& (0+255),b
 18368   01532E  0107               	movlb	7	; () banked
 18369   015330  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 18370   015332  0106               	movlb	6	; () banked
 18371   015334  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 18372   015336  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 18373   015338  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 18374   01533C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 18375   015340  0E00               	movlw	low (__mediumconst shr (0+16))
 18376   015342  6EF8               	movwf	tblptru,c
 18377   015344  0E25               	movlw	(high __ramtop+-1)
 18378   015346  64F7               	cpfsgt	tblptrh,c
 18379   015348  D003               	bra	u33717
 18380   01534A  0008               	tblrd		*
 18381   01534C  50F5               	movf	tablat,w,c
 18382   01534E  D005               	bra	u33710
 18383   015350                     u33717:
 18384   015350  C4F6 F4E9          	movff	tblptrl,fsr0l
 18385   015354  C4F7 F4EA          	movff	tblptrh,fsr0h
 18386   015358  50EF               	movf	indf0,w,c
 18387   01535A                     u33710:
 18388   01535A  0106               	movlb	6	; () banked
 18389   01535C  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 18390   01535E  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 18391   015362  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 18392   015366  0E00               	movlw	low (__mediumconst shr (0+16))
 18393   015368  6EF8               	movwf	tblptru,c
 18394   01536A  0E25               	movlw	(high __ramtop+-1)
 18395   01536C  64F7               	cpfsgt	tblptrh,c
 18396   01536E  D004               	bra	u33727
 18397   015370  C6B5  F4F5         	movff	??_f_getcwd+2,tablat
 18398   015374  000C               	tblwt		*
 18399   015376  D006               	bra	u33720
 18400   015378                     u33727:
 18401   015378  C4F6 F4E9          	movff	tblptrl,fsr0l
 18402   01537C  C4F7 F4EA          	movff	tblptrh,fsr0h
 18403   015380  C6B5  F4EF         	movff	??_f_getcwd+2,indf0
 18404   015384                     u33720:
 18405   015384  0107               	movlb	7	; () banked
 18406   015386  4B08               	infsnz	f_getcwd@i& (0+255),f,b
 18407   015388  2B09               	incf	(f_getcwd@i+1)& (0+255),f,b
 18408   01538A                     
 18409                           ; BSR set to: 7
 18410   01538A  4B04               	infsnz	f_getcwd@tp& (0+255),f,b
 18411   01538C  2B05               	incf	(f_getcwd@tp+1)& (0+255),f,b
 18412   01538E                     
 18413                           ; BSR set to: 7
 18414                           ;../fatfs/ff.c: 4415:     } while (i < len);
 18415   01538E  0106               	movlb	6	; () banked
 18416   015390  51B1               	movf	f_getcwd@len& (0+255),w,b
 18417   015392  0107               	movlb	7	; () banked
 18418   015394  5D08               	subwf	f_getcwd@i& (0+255),w,b
 18419   015396  0106               	movlb	6	; () banked
 18420   015398  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 18421   01539A  0107               	movlb	7	; () banked
 18422   01539C  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 18423   01539E  A0D8               	btfss	status,0,c
 18424   0153A0  EFD4  F0A9         	goto	u33731
 18425   0153A4  EFD6  F0A9         	goto	u33730
 18426   0153A8                     u33731:
 18427   0153A8  EF93  F0A9         	goto	l24409
 18428   0153AC                     u33730:
 18429   0153AC                     l24417:
 18430                           
 18431                           ; BSR set to: 7
 18432                           ;../fatfs/ff.c: 4421:  *tp = 0;
 18433   0153AC  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 18434   0153B0  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 18435   0153B4  0E00               	movlw	low (__mediumconst shr (0+16))
 18436   0153B6  6EF8               	movwf	tblptru,c
 18437   0153B8  0E25               	movlw	(high __ramtop+-1)
 18438   0153BA  64F7               	cpfsgt	tblptrh,c
 18439   0153BC  D004               	bra	u33747
 18440   0153BE  0E00               	movlw	0
 18441   0153C0  6EF5               	movwf	tablat,c
 18442   0153C2  000C               	tblwt		*
 18443   0153C4  D006               	bra	u33740
 18444   0153C6                     u33747:
 18445   0153C6  C4F6 F4E9          	movff	tblptrl,fsr0l
 18446   0153CA  C4F7 F4EA          	movff	tblptrh,fsr0h
 18447   0153CE  0E00               	movlw	0
 18448   0153D0  6EEF               	movwf	indf0,c
 18449   0153D2                     u33740:
 18450   0153D2  0012               	return		;funcret
 18451   0153D4                     __end_of_f_getcwd:
 18452                           	callstack 0
 18453                           
 18454 ;; *************** function _get_fileinfo *****************
 18455 ;; Defined at:
 18456 ;;		line 2618 in file "../fatfs/ff.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;  dp              2   16[COMRAM] PTR struct .
 18459 ;;		 -> f_stat@dj(40), f_getcwd@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 18460 ;;  fno             2   18[COMRAM] PTR struct .
 18461 ;;		 -> f_getcwd@fno(22), scan_files1@fno(22), scan_files@fno(22), 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  di              2   27[COMRAM] unsigned int 
 18464 ;;  si              2   24[COMRAM] unsigned int 
 18465 ;;  c               1   26[COMRAM] unsigned char 
 18466 ;; Return value:  Size  Location     Type
 18467 ;;                  1    wreg      void 
 18468 ;; Registers used:
 18469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18470 ;; Tracked objects:
 18471 ;;		On entry : 0/0
 18472 ;;		On exit  : 0/0
 18473 ;;		Unchanged: 0/0
 18474 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18476 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18478 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18479 ;;Total ram usage:       13 bytes
 18480 ;; Hardware stack levels used: 1
 18481 ;; Hardware stack levels required when called: 2
 18482 ;; This function calls:
 18483 ;;		_ld_dword
 18484 ;;		_ld_word
 18485 ;; This function is called by:
 18486 ;;		_f_getcwd
 18487 ;;		_f_readdir
 18488 ;;		_f_stat
 18489 ;; This function uses a non-reentrant model
 18490 ;;
 18491                           
 18492                           	psect	text29
 18493   01A316                     __ptext29:
 18494                           	callstack 0
 18495   01A316                     _get_fileinfo:
 18496                           	callstack 122
 18497   01A316                     
 18498                           ;../fatfs/ff.c: 2619:  DIR* dp,;../fatfs/ff.c: 2620:  FILINFO* fno;../fatfs/ff.c: 2622: 
      +                          {;../fatfs/ff.c: 2623:  UINT si, di;;../fatfs/ff.c: 2630:  TCHAR c;;../fatfs/ff.c: 2634:
      +                            fno->fname[0] = 0;
 18499   01A316  EE20 F009          	lfsr	2,9
 18500   01A31A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18501   01A31C  26D9               	addwf	fsr2l,f,c
 18502   01A31E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18503   01A320  22DA               	addwfc	fsr2h,f,c
 18504   01A322  6ADF               	clrf	indf2,c
 18505                           
 18506                           ;../fatfs/ff.c: 2635:  if (dp->sect == 0) return;
 18507   01A324  EE20 F016          	lfsr	2,22
 18508   01A328  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18509   01A32A  26D9               	addwf	fsr2l,f,c
 18510   01A32C  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18511   01A32E  22DA               	addwfc	fsr2h,f,c
 18512   01A330  50DE               	movf	postinc2,w,c
 18513   01A332  10DE               	iorwf	postinc2,w,c
 18514   01A334  10DE               	iorwf	postinc2,w,c
 18515   01A336  10DE               	iorwf	postinc2,w,c
 18516   01A338  A4D8               	btfss	status,2,c
 18517   01A33A  EFA1  F0D1         	goto	u33331
 18518   01A33E  EFA3  F0D1         	goto	u33330
 18519   01A342                     u33331:
 18520   01A342  EFA5  F0D1         	goto	l24111
 18521   01A346                     u33330:
 18522   01A346  EF86  F0D2         	goto	l1704
 18523   01A34A                     l24111:
 18524                           
 18525                           ;../fatfs/ff.c: 2734:  si = di = 0;
 18526   01A34A  0E00               	movlw	0
 18527   01A34C  6E1D               	movwf	(get_fileinfo@di+1)^(0+1280),c
 18528   01A34E  0E00               	movlw	0
 18529   01A350  6E1C               	movwf	get_fileinfo@di^(0+1280),c
 18530   01A352  C51C  F519         	movff	get_fileinfo@di,get_fileinfo@si
 18531   01A356  C51D  F51A         	movff	get_fileinfo@di+1,get_fileinfo@si+1
 18532                           
 18533                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 18534   01A35A  EF03  F0D2         	goto	l24133
 18535   01A35E                     l24113:
 18536                           
 18537                           ;../fatfs/ff.c: 2736:   c = (TCHAR)dp->dir[si++];
 18538   01A35E  EE20 F01A          	lfsr	2,26
 18539   01A362  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18540   01A364  26D9               	addwf	fsr2l,f,c
 18541   01A366  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18542   01A368  22DA               	addwfc	fsr2h,f,c
 18543   01A36A  C4DE F515          	movff	postinc2,??_get_fileinfo
 18544   01A36E  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18545   01A372  5019               	movf	get_fileinfo@si^(0+1280),w,c
 18546   01A374  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18547   01A376  6ED9               	movwf	fsr2l,c
 18548   01A378  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 18549   01A37A  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18550   01A37C  6EDA               	movwf	fsr2h,c
 18551   01A37E  50DF               	movf	indf2,w,c
 18552   01A380  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 18553   01A382  4A19               	infsnz	get_fileinfo@si^(0+1280),f,c
 18554   01A384  2A1A               	incf	(get_fileinfo@si+1)^(0+1280),f,c
 18555   01A386                     
 18556                           ;../fatfs/ff.c: 2737:   if (c == ' ') continue;
 18557   01A386  0E20               	movlw	32
 18558   01A388  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 18559   01A38A  A4D8               	btfss	status,2,c
 18560   01A38C  EFCA  F0D1         	goto	u33341
 18561   01A390  EFCC  F0D1         	goto	u33340
 18562   01A394                     u33341:
 18563   01A394  EFCE  F0D1         	goto	l24121
 18564   01A398                     u33340:
 18565   01A398  EF03  F0D2         	goto	l24133
 18566   01A39C                     l24121:
 18567                           
 18568                           ;../fatfs/ff.c: 2738:   if (c == 0x05) c = 0xE5;
 18569   01A39C  0E05               	movlw	5
 18570   01A39E  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 18571   01A3A0  A4D8               	btfss	status,2,c
 18572   01A3A2  EFD5  F0D1         	goto	u33351
 18573   01A3A6  EFD7  F0D1         	goto	u33350
 18574   01A3AA                     u33351:
 18575   01A3AA  EFD9  F0D1         	goto	l24125
 18576   01A3AE                     u33350:
 18577   01A3AE  0EE5               	movlw	229
 18578   01A3B0  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 18579   01A3B2                     l24125:
 18580                           
 18581                           ;../fatfs/ff.c: 2739:   if (si == 9) fno->fname[di++] = '.';
 18582   01A3B2  0E09               	movlw	9
 18583   01A3B4  1819               	xorwf	get_fileinfo@si^(0+1280),w,c
 18584   01A3B6  101A               	iorwf	(get_fileinfo@si+1)^(0+1280),w,c
 18585   01A3B8  A4D8               	btfss	status,2,c
 18586   01A3BA  EFE1  F0D1         	goto	u33361
 18587   01A3BE  EFE3  F0D1         	goto	u33360
 18588   01A3C2                     u33361:
 18589   01A3C2  EFF3  F0D1         	goto	l24131
 18590   01A3C6                     u33360:
 18591   01A3C6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18592   01A3C8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18593   01A3CA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18594   01A3CC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18595   01A3CE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18596   01A3D0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18597   01A3D2  0E09               	movlw	9
 18598   01A3D4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18599   01A3D6  6ED9               	movwf	fsr2l,c
 18600   01A3D8  0E00               	movlw	0
 18601   01A3DA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18602   01A3DC  6EDA               	movwf	fsr2h,c
 18603   01A3DE  0E2E               	movlw	46
 18604   01A3E0  6EDF               	movwf	indf2,c
 18605   01A3E2  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 18606   01A3E4  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 18607   01A3E6                     l24131:
 18608                           
 18609                           ;../fatfs/ff.c: 2740:   fno->fname[di++] = c;
 18610   01A3E6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18611   01A3E8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18612   01A3EA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18613   01A3EC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18614   01A3EE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18615   01A3F0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18616   01A3F2  0E09               	movlw	9
 18617   01A3F4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18618   01A3F6  6ED9               	movwf	fsr2l,c
 18619   01A3F8  0E00               	movlw	0
 18620   01A3FA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18621   01A3FC  6EDA               	movwf	fsr2h,c
 18622   01A3FE  C51B  F4DF         	movff	get_fileinfo@c,indf2
 18623   01A402  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 18624   01A404  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 18625   01A406                     l24133:
 18626                           
 18627                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 18628   01A406  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 18629   01A408  E109               	bnz	u33370
 18630   01A40A  0E0B               	movlw	11
 18631   01A40C  5C19               	subwf	get_fileinfo@si^(0+1280),w,c
 18632   01A40E  A0D8               	btfss	status,0,c
 18633   01A410  EF0C  F0D2         	goto	u33371
 18634   01A414  EF0E  F0D2         	goto	u33370
 18635   01A418                     u33371:
 18636   01A418  EFAF  F0D1         	goto	l24113
 18637   01A41C                     u33370:
 18638   01A41C                     
 18639                           ;../fatfs/ff.c: 2742:  fno->fname[di] = 0;
 18640   01A41C  501C               	movf	get_fileinfo@di^(0+1280),w,c
 18641   01A41E  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 18642   01A420  6E15               	movwf	??_get_fileinfo^(0+1280),c
 18643   01A422  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 18644   01A424  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 18645   01A426  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 18646   01A428  0E09               	movlw	9
 18647   01A42A  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18648   01A42C  6ED9               	movwf	fsr2l,c
 18649   01A42E  0E00               	movlw	0
 18650   01A430  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18651   01A432  6EDA               	movwf	fsr2h,c
 18652   01A434  6ADF               	clrf	indf2,c
 18653   01A436                     
 18654                           ;../fatfs/ff.c: 2745:  fno->fattrib = dp->dir[11] & 0x3F;
 18655   01A436  EE20 F008          	lfsr	2,8
 18656   01A43A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18657   01A43C  26D9               	addwf	fsr2l,f,c
 18658   01A43E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18659   01A440  22DA               	addwfc	fsr2h,f,c
 18660   01A442  EE10 F01A          	lfsr	1,26
 18661   01A446  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18662   01A448  26E1               	addwf	fsr1l,f,c
 18663   01A44A  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18664   01A44C  22E2               	addwfc	fsr1h,f,c
 18665   01A44E  EE00 F00B          	lfsr	0,11
 18666   01A452  50E6               	movf	postinc1,w,c
 18667   01A454  26E9               	addwf	fsr0l,f,c
 18668   01A456  50E5               	movf	postdec1,w,c
 18669   01A458  22EA               	addwfc	fsr0h,f,c
 18670   01A45A  50EF               	movf	indf0,w,c
 18671   01A45C  0B3F               	andlw	63
 18672   01A45E  6EDF               	movwf	indf2,c
 18673   01A460                     
 18674                           ;../fatfs/ff.c: 2746:  fno->fsize = ld_dword(dp->dir + 28);
 18675   01A460  EE20 F01A          	lfsr	2,26
 18676   01A464  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18677   01A466  26D9               	addwf	fsr2l,f,c
 18678   01A468  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18679   01A46A  22DA               	addwfc	fsr2h,f,c
 18680   01A46C  C4DE F515          	movff	postinc2,??_get_fileinfo
 18681   01A470  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18682   01A474  0E1C               	movlw	28
 18683   01A476  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18684   01A478  6E04               	movwf	ld_dword@ptr^(0+1280),c
 18685   01A47A  0E00               	movlw	0
 18686   01A47C  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18687   01A47E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 18688   01A480  ECC7  F0F2         	call	_ld_dword	;wreg free
 18689   01A484  C513  F4D9         	movff	get_fileinfo@fno,fsr2l
 18690   01A488  C514  F4DA         	movff	get_fileinfo@fno+1,fsr2h
 18691   01A48C  C504  F4DE         	movff	?_ld_dword,postinc2
 18692   01A490  C505  F4DE         	movff	?_ld_dword+1,postinc2
 18693   01A494  C506  F4DE         	movff	?_ld_dword+2,postinc2
 18694   01A498  C507  F4DE         	movff	?_ld_dword+3,postinc2
 18695   01A49C                     
 18696                           ;../fatfs/ff.c: 2747:  fno->ftime = ld_word(dp->dir + 22 + 0);
 18697   01A49C  EE20 F01A          	lfsr	2,26
 18698   01A4A0  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18699   01A4A2  26D9               	addwf	fsr2l,f,c
 18700   01A4A4  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18701   01A4A6  22DA               	addwfc	fsr2h,f,c
 18702   01A4A8  C4DE F515          	movff	postinc2,??_get_fileinfo
 18703   01A4AC  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18704   01A4B0  0E16               	movlw	22
 18705   01A4B2  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18706   01A4B4  6E04               	movwf	ld_word@ptr^(0+1280),c
 18707   01A4B6  0E00               	movlw	0
 18708   01A4B8  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18709   01A4BA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 18710   01A4BC  EC4C  F0FF         	call	_ld_word	;wreg free
 18711   01A4C0  EE20 F006          	lfsr	2,6
 18712   01A4C4  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18713   01A4C6  26D9               	addwf	fsr2l,f,c
 18714   01A4C8  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18715   01A4CA  22DA               	addwfc	fsr2h,f,c
 18716   01A4CC  C504  F4DE         	movff	?_ld_word,postinc2
 18717   01A4D0  C505  F4DD         	movff	?_ld_word+1,postdec2
 18718   01A4D4                     
 18719                           ;../fatfs/ff.c: 2748:  fno->fdate = ld_word(dp->dir + 22 + 2);
 18720   01A4D4  EE20 F01A          	lfsr	2,26
 18721   01A4D8  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 18722   01A4DA  26D9               	addwf	fsr2l,f,c
 18723   01A4DC  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 18724   01A4DE  22DA               	addwfc	fsr2h,f,c
 18725   01A4E0  C4DE F515          	movff	postinc2,??_get_fileinfo
 18726   01A4E4  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 18727   01A4E8  0E18               	movlw	24
 18728   01A4EA  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 18729   01A4EC  6E04               	movwf	ld_word@ptr^(0+1280),c
 18730   01A4EE  0E00               	movlw	0
 18731   01A4F0  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 18732   01A4F2  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 18733   01A4F4  EC4C  F0FF         	call	_ld_word	;wreg free
 18734   01A4F8  EE20 F004          	lfsr	2,4
 18735   01A4FC  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 18736   01A4FE  26D9               	addwf	fsr2l,f,c
 18737   01A500  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 18738   01A502  22DA               	addwfc	fsr2h,f,c
 18739   01A504  C504  F4DE         	movff	?_ld_word,postinc2
 18740   01A508  C505  F4DD         	movff	?_ld_word+1,postdec2
 18741   01A50C                     l1704:
 18742   01A50C  0012               	return		;funcret
 18743   01A50E                     __end_of_get_fileinfo:
 18744                           	callstack 0
 18745                           
 18746 ;; *************** function _dir_read *****************
 18747 ;; Defined at:
 18748 ;;		line 2307 in file "../fatfs/ff.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;  dp              2  124[BANK6 ] PTR struct .
 18751 ;;		 -> f_unlink@sdj(40), f_getcwd@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 18752 ;;  vol             2  126[BANK6 ] int 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  fs              2  132[BANK6 ] PTR struct .
 18755 ;;		 -> fs(564), NULL(0), 
 18756 ;;  res             1  136[BANK6 ] enum E597
 18757 ;;  b               1  135[BANK6 ] unsigned char 
 18758 ;;  attr            1  134[BANK6 ] unsigned char 
 18759 ;; Return value:  Size  Location     Type
 18760 ;;                  1    wreg      enum E597
 18761 ;; Registers used:
 18762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18763 ;; Tracked objects:
 18764 ;;		On entry : 0/0
 18765 ;;		On exit  : 0/0
 18766 ;;		Unchanged: 0/0
 18767 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18768 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18769 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18770 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18771 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18772 ;;Total ram usage:       13 bytes
 18773 ;; Hardware stack levels used: 1
 18774 ;; Hardware stack levels required when called: 17
 18775 ;; This function calls:
 18776 ;;		_dir_next
 18777 ;;		_move_window
 18778 ;; This function is called by:
 18779 ;;		_f_getcwd
 18780 ;;		_f_readdir
 18781 ;;		_f_unlink
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text30
 18786   01B160                     __ptext30:
 18787                           	callstack 0
 18788   01B160                     _dir_read:
 18789                           	callstack 107
 18790   01B160                     
 18791                           ;../fatfs/ff.c: 2308:  DIR* dp,;../fatfs/ff.c: 2309:  int vol;../fatfs/ff.c: 2311: {;../
      +                          fatfs/ff.c: 2312:  FRESULT res = FR_NO_FILE;
 18792   01B160  0E04               	movlw	4
 18793   01B162  0106               	movlb	6	; () banked
 18794   01B164  6F88               	movwf	dir_read@res& (0+255),b
 18795   01B166                     
 18796                           ; BSR set to: 6
 18797                           ;../fatfs/ff.c: 2313:  FATFS *fs = dp->obj.fs;
 18798   01B166  C67C  F4D9         	movff	dir_read@dp,fsr2l
 18799   01B16A  C67D  F4DA         	movff	dir_read@dp+1,fsr2h
 18800   01B16E  C4DE F684          	movff	postinc2,dir_read@fs
 18801   01B172  C4DD F685          	movff	postdec2,dir_read@fs+1
 18802                           
 18803                           ;../fatfs/ff.c: 2314:  BYTE attr, b;;../fatfs/ff.c: 2319:  while (dp->sect) {
 18804   01B176  EF5D  F0D9         	goto	l24097
 18805   01B17A                     l24067:
 18806                           
 18807                           ; BSR set to: 6
 18808                           ;../fatfs/ff.c: 2320:   res = move_window(fs, dp->sect);
 18809   01B17A  C684  F61A         	movff	dir_read@fs,move_window@fs
 18810   01B17E  C685  F61B         	movff	dir_read@fs+1,move_window@fs+1
 18811   01B182  EE20 F016          	lfsr	2,22
 18812   01B186  517C               	movf	dir_read@dp& (0+255),w,b
 18813   01B188  26D9               	addwf	fsr2l,f,c
 18814   01B18A  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18815   01B18C  22DA               	addwfc	fsr2h,f,c
 18816   01B18E  C4DE F61C          	movff	postinc2,move_window@sect
 18817   01B192  C4DE F61D          	movff	postinc2,move_window@sect+1
 18818   01B196  C4DE F61E          	movff	postinc2,move_window@sect+2
 18819   01B19A  C4DE F61F          	movff	postinc2,move_window@sect+3
 18820   01B19E  ECAB  F0EF         	call	_move_window	;wreg free
 18821   01B1A2  0106               	movlb	6	; () banked
 18822   01B1A4  6F88               	movwf	dir_read@res& (0+255),b
 18823   01B1A6                     
 18824                           ; BSR set to: 6
 18825                           ;../fatfs/ff.c: 2321:   if (res != FR_OK) break;
 18826   01B1A6  5188               	movf	dir_read@res& (0+255),w,b
 18827   01B1A8  B4D8               	btfsc	status,2,c
 18828   01B1AA  EFD9  F0D8         	goto	u33221
 18829   01B1AE  EFDB  F0D8         	goto	u33220
 18830   01B1B2                     u33221:
 18831   01B1B2  EFDD  F0D8         	goto	l24073
 18832   01B1B6                     u33220:
 18833   01B1B6  EF6E  F0D9         	goto	l24099
 18834   01B1BA                     l24073:
 18835                           
 18836                           ; BSR set to: 6
 18837                           ;../fatfs/ff.c: 2322:   b = dp->dir[0];
 18838   01B1BA  EE20 F01A          	lfsr	2,26
 18839   01B1BE  517C               	movf	dir_read@dp& (0+255),w,b
 18840   01B1C0  26D9               	addwf	fsr2l,f,c
 18841   01B1C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18842   01B1C4  22DA               	addwfc	fsr2h,f,c
 18843   01B1C6  C4DE F680          	movff	postinc2,??_dir_read
 18844   01B1CA  C4DD F681          	movff	postdec2,??_dir_read+1
 18845   01B1CE  C680  F4D9         	movff	??_dir_read,fsr2l
 18846   01B1D2  C681  F4DA         	movff	??_dir_read+1,fsr2h
 18847   01B1D6  50DF               	movf	indf2,w,c
 18848   01B1D8  6F87               	movwf	dir_read@b& (0+255),b
 18849   01B1DA                     
 18850                           ; BSR set to: 6
 18851                           ;../fatfs/ff.c: 2323:   if (b == 0) {
 18852   01B1DA  5187               	movf	dir_read@b& (0+255),w,b
 18853   01B1DC  A4D8               	btfss	status,2,c
 18854   01B1DE  EFF3  F0D8         	goto	u33231
 18855   01B1E2  EFF5  F0D8         	goto	u33230
 18856   01B1E6                     u33231:
 18857   01B1E6  EFF9  F0D8         	goto	l24079
 18858   01B1EA                     u33230:
 18859   01B1EA                     
 18860                           ; BSR set to: 6
 18861                           ;../fatfs/ff.c: 2324:    res = FR_NO_FILE; break;
 18862   01B1EA  0E04               	movlw	4
 18863   01B1EC  6F88               	movwf	dir_read@res& (0+255),b
 18864   01B1EE  EF6E  F0D9         	goto	l24099
 18865   01B1F2                     l24079:
 18866                           
 18867                           ; BSR set to: 6
 18868                           ;../fatfs/ff.c: 2342:   {;../fatfs/ff.c: 2343:    dp->obj.attr = attr = dp->dir[11] & 0x
      +                          3F;
 18869   01B1F2  EE20 F01A          	lfsr	2,26
 18870   01B1F6  517C               	movf	dir_read@dp& (0+255),w,b
 18871   01B1F8  26D9               	addwf	fsr2l,f,c
 18872   01B1FA  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18873   01B1FC  22DA               	addwfc	fsr2h,f,c
 18874   01B1FE  EE10 F00B          	lfsr	1,11
 18875   01B202  50DE               	movf	postinc2,w,c
 18876   01B204  26E1               	addwf	fsr1l,f,c
 18877   01B206  50DD               	movf	postdec2,w,c
 18878   01B208  22E2               	addwfc	fsr1h,f,c
 18879   01B20A  50E7               	movf	indf1,w,c
 18880   01B20C  0B3F               	andlw	63
 18881   01B20E  6F86               	movwf	dir_read@attr& (0+255),b
 18882   01B210  EE20 F004          	lfsr	2,4
 18883   01B214  517C               	movf	dir_read@dp& (0+255),w,b
 18884   01B216  26D9               	addwf	fsr2l,f,c
 18885   01B218  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18886   01B21A  22DA               	addwfc	fsr2h,f,c
 18887   01B21C  C686  F4DF         	movff	dir_read@attr,indf2
 18888   01B220                     
 18889                           ; BSR set to: 6
 18890                           ;../fatfs/ff.c: 2364:    if (b != 0xE5 && b != '.' && attr != 0x0F && (int)((attr & ~0x2
      +                          0) == 0x08) == vol) {
 18891   01B220  0EE5               	movlw	229
 18892   01B222  1987               	xorwf	dir_read@b& (0+255),w,b
 18893   01B224  B4D8               	btfsc	status,2,c
 18894   01B226  EF17  F0D9         	goto	u33241
 18895   01B22A  EF19  F0D9         	goto	u33240
 18896   01B22E                     u33241:
 18897   01B22E  EF47  F0D9         	goto	l24091
 18898   01B232                     u33240:
 18899   01B232                     
 18900                           ; BSR set to: 6
 18901   01B232  0E2E               	movlw	46
 18902   01B234  1987               	xorwf	dir_read@b& (0+255),w,b
 18903   01B236  B4D8               	btfsc	status,2,c
 18904   01B238  EF20  F0D9         	goto	u33251
 18905   01B23C  EF22  F0D9         	goto	u33250
 18906   01B240                     u33251:
 18907   01B240  EF47  F0D9         	goto	l24091
 18908   01B244                     u33250:
 18909   01B244                     
 18910                           ; BSR set to: 6
 18911   01B244  0E0F               	movlw	15
 18912   01B246  1986               	xorwf	dir_read@attr& (0+255),w,b
 18913   01B248  B4D8               	btfsc	status,2,c
 18914   01B24A  EF29  F0D9         	goto	u33261
 18915   01B24E  EF2B  F0D9         	goto	u33260
 18916   01B252                     u33261:
 18917   01B252  EF47  F0D9         	goto	l24091
 18918   01B256                     u33260:
 18919   01B256                     
 18920                           ; BSR set to: 6
 18921   01B256  5186               	movf	dir_read@attr& (0+255),w,b
 18922   01B258  0BDF               	andlw	223
 18923   01B25A  0A08               	xorlw	8
 18924   01B25C  B4D8               	btfsc	status,2,c
 18925   01B25E  EF33  F0D9         	goto	u33271
 18926   01B262  EF36  F0D9         	goto	u33270
 18927   01B266                     u33271:
 18928   01B266  0E01               	movlw	1
 18929   01B268  EF37  F0D9         	goto	u33280
 18930   01B26C                     u33270:
 18931   01B26C  0E00               	movlw	0
 18932   01B26E                     u33280:
 18933   01B26E  6F80               	movwf	??_dir_read& (0+255),b
 18934   01B270  6B81               	clrf	(??_dir_read+1)& (0+255),b
 18935   01B272  517E               	movf	dir_read@vol& (0+255),w,b
 18936   01B274  1980               	xorwf	??_dir_read& (0+255),w,b
 18937   01B276  E107               	bnz	u33291
 18938   01B278  517F               	movf	(dir_read@vol+1)& (0+255),w,b
 18939   01B27A  1981               	xorwf	(??_dir_read+1)& (0+255),w,b
 18940   01B27C  A4D8               	btfss	status,2,c
 18941   01B27E  EF43  F0D9         	goto	u33291
 18942   01B282  EF45  F0D9         	goto	u33290
 18943   01B286                     u33291:
 18944   01B286  EF47  F0D9         	goto	l24091
 18945   01B28A                     u33290:
 18946   01B28A  EF6E  F0D9         	goto	l24099
 18947   01B28E                     l24091:
 18948                           
 18949                           ; BSR set to: 6
 18950                           ;../fatfs/ff.c: 2368:   };../fatfs/ff.c: 2369:   res = dir_next(dp, 0);
 18951   01B28E  C67C  F662         	movff	dir_read@dp,dir_next@dp
 18952   01B292  C67D  F663         	movff	dir_read@dp+1,dir_next@dp+1
 18953   01B296  0E00               	movlw	0
 18954   01B298  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 18955   01B29A  0E00               	movlw	0
 18956   01B29C  6F64               	movwf	dir_next@stretch& (0+255),b
 18957   01B29E  ECCF  F0B0         	call	_dir_next	;wreg free
 18958   01B2A2  0106               	movlb	6	; () banked
 18959   01B2A4  6F88               	movwf	dir_read@res& (0+255),b
 18960   01B2A6                     
 18961                           ; BSR set to: 6
 18962                           ;../fatfs/ff.c: 2370:   if (res != FR_OK) break;
 18963   01B2A6  5188               	movf	dir_read@res& (0+255),w,b
 18964   01B2A8  B4D8               	btfsc	status,2,c
 18965   01B2AA  EF59  F0D9         	goto	u33301
 18966   01B2AE  EF5B  F0D9         	goto	u33300
 18967   01B2B2                     u33301:
 18968   01B2B2  EF5D  F0D9         	goto	l24097
 18969   01B2B6                     u33300:
 18970   01B2B6  EF6E  F0D9         	goto	l24099
 18971   01B2BA                     l24097:
 18972                           
 18973                           ; BSR set to: 6
 18974                           ;../fatfs/ff.c: 2319:  while (dp->sect) {
 18975   01B2BA  EE20 F016          	lfsr	2,22
 18976   01B2BE  517C               	movf	dir_read@dp& (0+255),w,b
 18977   01B2C0  26D9               	addwf	fsr2l,f,c
 18978   01B2C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 18979   01B2C4  22DA               	addwfc	fsr2h,f,c
 18980   01B2C6  50DE               	movf	postinc2,w,c
 18981   01B2C8  10DE               	iorwf	postinc2,w,c
 18982   01B2CA  10DE               	iorwf	postinc2,w,c
 18983   01B2CC  10DE               	iorwf	postinc2,w,c
 18984   01B2CE  A4D8               	btfss	status,2,c
 18985   01B2D0  EF6C  F0D9         	goto	u33311
 18986   01B2D4  EF6E  F0D9         	goto	u33310
 18987   01B2D8                     u33311:
 18988   01B2D8  EFBD  F0D8         	goto	l24067
 18989   01B2DC                     u33310:
 18990   01B2DC                     l24099:
 18991                           
 18992                           ; BSR set to: 6
 18993                           ;../fatfs/ff.c: 2373:  if (res != FR_OK) dp->sect = 0;
 18994   01B2DC  5188               	movf	dir_read@res& (0+255),w,b
 18995   01B2DE  B4D8               	btfsc	status,2,c
 18996   01B2E0  EF74  F0D9         	goto	u33321
 18997   01B2E4  EF76  F0D9         	goto	u33320
 18998   01B2E8                     u33321:
 18999   01B2E8  EF80  F0D9         	goto	l24103
 19000   01B2EC                     u33320:
 19001   01B2EC                     
 19002                           ; BSR set to: 6
 19003   01B2EC  EE20 F016          	lfsr	2,22
 19004   01B2F0  517C               	movf	dir_read@dp& (0+255),w,b
 19005   01B2F2  26D9               	addwf	fsr2l,f,c
 19006   01B2F4  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 19007   01B2F6  22DA               	addwfc	fsr2h,f,c
 19008   01B2F8  6ADE               	clrf	postinc2,c
 19009   01B2FA  6ADE               	clrf	postinc2,c
 19010   01B2FC  6ADE               	clrf	postinc2,c
 19011   01B2FE  6ADD               	clrf	postdec2,c
 19012   01B300                     l24103:
 19013                           
 19014                           ; BSR set to: 6
 19015                           ;../fatfs/ff.c: 2374:  return res;
 19016   01B300  5188               	movf	dir_read@res& (0+255),w,b
 19017   01B302                     
 19018                           ; BSR set to: 6
 19019   01B302  0012               	return		;funcret
 19020   01B304                     __end_of_dir_read:
 19021                           	callstack 0
 19022                           
 19023 ;; *************** function _f_closedir *****************
 19024 ;; Defined at:
 19025 ;;		line 4665 in file "../fatfs/ff.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  dp              2  105[BANK5 ] PTR struct .
 19028 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;  fs              2  107[BANK5 ] PTR struct .
 19031 ;;		 -> fs(564), NULL(0), 
 19032 ;;  res             1  109[BANK5 ] enum E597
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      enum E17409
 19035 ;; Registers used:
 19036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19045 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;Total ram usage:        5 bytes
 19047 ;; Hardware stack levels used: 1
 19048 ;; Hardware stack levels required when called: 11
 19049 ;; This function calls:
 19050 ;;		_validate
 19051 ;; This function is called by:
 19052 ;;		_scan_files
 19053 ;;		_scan_files1
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text31
 19058   01FDB8                     __ptext31:
 19059                           	callstack 0
 19060   01FDB8                     _f_closedir:
 19061                           	callstack 114
 19062   01FDB8                     
 19063                           ;../fatfs/ff.c: 4666:  DIR *dp;../fatfs/ff.c: 4668: {;../fatfs/ff.c: 4669:  FRESULT res;
      +                          ;../fatfs/ff.c: 4670:  FATFS *fs;;../fatfs/ff.c: 4673:  res = validate(&dp->obj, &fs);
 19064   01FDB8  C5C9  F5BE         	movff	f_closedir@dp,validate@obj
 19065   01FDBC  C5CA  F5BF         	movff	f_closedir@dp+1,validate@obj+1
 19066   01FDC0  0ECB               	movlw	low f_closedir@fs
 19067   01FDC2  0105               	movlb	5	; () banked
 19068   01FDC4  6FC0               	movwf	validate@rfs& (0+255),b
 19069   01FDC6  0E05               	movlw	high f_closedir@fs
 19070   01FDC8  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 19071   01FDCA  ECA3  F0E9         	call	_validate	;wreg free
 19072   01FDCE  0105               	movlb	5	; () banked
 19073   01FDD0  6FCD               	movwf	f_closedir@res& (0+255),b
 19074   01FDD2                     
 19075                           ; BSR set to: 5
 19076                           ;../fatfs/ff.c: 4674:  if (res == FR_OK) {
 19077   01FDD2  51CD               	movf	f_closedir@res& (0+255),w,b
 19078   01FDD4  A4D8               	btfss	status,2,c
 19079   01FDD6  EFEF  F0FE         	goto	u34441
 19080   01FDDA  EFF1  F0FE         	goto	u34440
 19081   01FDDE                     u34441:
 19082   01FDDE  EFF7  F0FE         	goto	l2098
 19083   01FDE2                     u34440:
 19084   01FDE2                     
 19085                           ; BSR set to: 5
 19086                           ;../fatfs/ff.c: 4679:   dp->obj.fs = 0;
 19087   01FDE2  C5C9  F4D9         	movff	f_closedir@dp,fsr2l
 19088   01FDE6  C5CA  F4DA         	movff	f_closedir@dp+1,fsr2h
 19089   01FDEA  6ADE               	clrf	postinc2,c
 19090   01FDEC  6ADD               	clrf	postdec2,c
 19091   01FDEE                     l2098:
 19092                           
 19093                           ; BSR set to: 5
 19094   01FDEE  0012               	return		;funcret
 19095   01FDF0                     __end_of_f_closedir:
 19096                           	callstack 0
 19097                           
 19098 ;; *************** function _continue_action *****************
 19099 ;; Defined at:
 19100 ;;		line 377 in file "../src/boards/w65_bd.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;		None
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;		None
 19105 ;; Return value:  Size  Location     Type
 19106 ;;                  1    wreg      void 
 19107 ;; Registers used:
 19108 ;;		wreg, status,2, cstack
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/0
 19111 ;;		On exit  : 0/0
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19118 ;;Total ram usage:        0 bytes
 19119 ;; Hardware stack levels used: 1
 19120 ;; Hardware stack levels required when called: 2
 19121 ;; This function calls:
 19122 ;;		_bus_release_req
 19123 ;; This function is called by:
 19124 ;;		_return_cpu
 19125 ;; This function uses a non-reentrant model
 19126 ;;
 19127                           
 19128                           	psect	text32
 19129   01FB2C                     __ptext32:
 19130                           	callstack 0
 19131   01FB2C                     _continue_action:
 19132                           	callstack 123
 19133   01FB2C                     
 19134                           ;../src/boards/w65_bd.c: 379:  CLCSELECT = 0;
 19135   01FB2C  0100               	movlb	0	; () banked
 19136   01FB2E  6BD5               	clrf	213,b	;volatile
 19137   01FB30                     
 19138                           ; BSR set to: 0
 19139                           ;../src/boards/w65_bd.c: 380:  bus_release_req();
 19140   01FB30  EC32  F001         	call	_bus_release_req	;wreg free
 19141   01FB34                     
 19142                           ;../src/boards/w65_bd.c: 382:  G2POL = 1;
 19143   01FB34  0100               	movlb	0	; () banked
 19144   01FB36  83D7               	bsf	215,1,b	;volatile
 19145   01FB38                     
 19146                           ; BSR set to: 0
 19147                           ;../src/boards/w65_bd.c: 384:  CLCSELECT = 1;
 19148   01FB38  0E01               	movlw	1
 19149   01FB3A  6FD5               	movwf	213,b	;volatile
 19150   01FB3C                     
 19151                           ; BSR set to: 0
 19152                           ;../src/boards/w65_bd.c: 385:  G2POL = 1;
 19153   01FB3C  83D7               	bsf	215,1,b	;volatile
 19154   01FB3E                     l442:
 19155                           
 19156                           ; BSR set to: 0
 19157   01FB3E  AFD4               	btfss	212,7,b	;volatile
 19158   01FB40  EFA4  F0FD         	goto	u33491
 19159   01FB44  EFA6  F0FD         	goto	u33490
 19160   01FB48                     u33491:
 19161   01FB48  EF9F  F0FD         	goto	l442
 19162   01FB4C                     u33490:
 19163   01FB4C                     
 19164                           ; BSR set to: 0
 19165                           ;../src/boards/w65_bd.c: 387:  G2POL = 0;
 19166   01FB4C  93D7               	bcf	215,1,b	;volatile
 19167   01FB4E                     
 19168                           ; BSR set to: 0
 19169                           ;../src/boards/w65_bd.c: 388:  CLCSELECT = 7;
 19170   01FB4E  0E07               	movlw	7
 19171   01FB50  6FD5               	movwf	213,b	;volatile
 19172   01FB52                     
 19173                           ; BSR set to: 0
 19174                           ;../src/boards/w65_bd.c: 389:  G3POL = 1;
 19175   01FB52  85D7               	bsf	215,2,b	;volatile
 19176   01FB54                     
 19177                           ; BSR set to: 0
 19178                           ;../src/boards/w65_bd.c: 390:  G3POL = 0;
 19179   01FB54  95D7               	bcf	215,2,b	;volatile
 19180                           
 19181                           ;../src/boards/w65_bd.c: 392:  if( fh.irq_sw ) {
 19182   01FB56  0108               	movlb	8	; () banked
 19183   01FB58  51BB               	movf	(_fh+25)& (0+255),w,b
 19184   01FB5A  B4D8               	btfsc	status,2,c
 19185   01FB5C  EFB2  F0FD         	goto	u33501
 19186   01FB60  EFB4  F0FD         	goto	u33500
 19187   01FB64                     u33501:
 19188   01FB64  EFB8  F0FD         	goto	l446
 19189   01FB68                     u33500:
 19190   01FB68                     
 19191                           ; BSR set to: 8
 19192                           ;../src/boards/w65_bd.c: 393:   GIE = 0;
 19193   01FB68  9ED6               	bcf	1238,7,c	;volatile
 19194                           
 19195                           ;../src/boards/w65_bd.c: 394:   irq_flg = 0;
 19196   01FB6A  0107               	movlb	7	; () banked
 19197   01FB6C  6BCB               	clrf	_irq_flg& (0+255),b
 19198                           
 19199                           ;../src/boards/w65_bd.c: 395:   GIE = 1;
 19200   01FB6E  8ED6               	bsf	1238,7,c	;volatile
 19201   01FB70                     l446:
 19202   01FB70  0012               	return		;funcret
 19203   01FB72                     __end_of_continue_action:
 19204                           	callstack 0
 19205                           
 19206 ;; *************** function _reset_cpu *****************
 19207 ;; Defined at:
 19208 ;;		line 180 in file "../src/boards/w65_cmn.c"
 19209 ;; Parameters:    Size  Location     Type
 19210 ;;		None
 19211 ;; Auto vars:     Size  Location     Type
 19212 ;;  i               2    0        int 
 19213 ;; Return value:  Size  Location     Type
 19214 ;;                  1    wreg      void 
 19215 ;; Registers used:
 19216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19217 ;; Tracked objects:
 19218 ;;		On entry : 0/0
 19219 ;;		On exit  : 0/0
 19220 ;;		Unchanged: 0/0
 19221 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19226 ;;Total ram usage:        2 bytes
 19227 ;; Hardware stack levels used: 1
 19228 ;; Hardware stack levels required when called: 9
 19229 ;; This function calls:
 19230 ;;		_bus_hold_req
 19231 ;;		_bus_release_req
 19232 ;;		_memcmp
 19233 ;;		_printf
 19234 ;;		_read_sram
 19235 ;;		_write_sram
 19236 ;; This function is called by:
 19237 ;;		_main
 19238 ;; This function uses a non-reentrant model
 19239 ;;
 19240                           
 19241                           	psect	text33
 19242   01DE7C                     __ptext33:
 19243                           	callstack 0
 19244   01DE7C                     _reset_cpu:
 19245                           	callstack 117
 19246   01DE7C                     
 19247                           ;../src/boards/w65_cmn.c: 182:  int i;;../src/boards/w65_cmn.c: 185:  bus_hold_req();
 19248   01DE7C  EC2C  F001         	call	_bus_hold_req	;wreg free
 19249   01DE80                     
 19250                           ;../src/boards/w65_cmn.c: 186:  cpu_flg = 0;
 19251   01DE80  0107               	movlb	7	; () banked
 19252   01DE82  6BE5               	clrf	_cpu_flg& (0+255),b
 19253   01DE84                     
 19254                           ; BSR set to: 7
 19255                           ;../src/boards/w65_cmn.c: 187:  write_sram(0xfff0, (uint8_t *)rom, 16);
 19256   01DE84  0EF0               	movlw	240
 19257   01DE86  6E04               	movwf	write_sram@addr^(0+1280),c
 19258   01DE88  0EFF               	movlw	255
 19259   01DE8A  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 19260   01DE8C  0E00               	movlw	0
 19261   01DE8E  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 19262   01DE90  0E00               	movlw	0
 19263   01DE92  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 19264   01DE94  0E0F               	movlw	low _rom
 19265   01DE96  6E08               	movwf	write_sram@buf^(0+1280),c
 19266   01DE98  0EF2               	movlw	high _rom
 19267   01DE9A  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 19268   01DE9C  0E00               	movlw	0
 19269   01DE9E  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 19270   01DEA0  0E10               	movlw	16
 19271   01DEA2  6E0A               	movwf	write_sram@len^(0+1280),c
 19272   01DEA4  EC9F  F0E8         	call	_write_sram	;wreg free
 19273   01DEA8                     
 19274                           ;../src/boards/w65_cmn.c: 188:  read_sram(0xfff0, tmp_buf[0], 16);
 19275   01DEA8  0EF0               	movlw	240
 19276   01DEAA  6E04               	movwf	read_sram@addr^(0+1280),c
 19277   01DEAC  0EFF               	movlw	255
 19278   01DEAE  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 19279   01DEB0  0E00               	movlw	0
 19280   01DEB2  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 19281   01DEB4  0E00               	movlw	0
 19282   01DEB6  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 19283   01DEB8  0EF8               	movlw	low _tmp_buf
 19284   01DEBA  6E08               	movwf	read_sram@buf^(0+1280),c
 19285   01DEBC  0E13               	movlw	high _tmp_buf
 19286   01DEBE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19287   01DEC0  0E00               	movlw	0
 19288   01DEC2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19289   01DEC4  0E10               	movlw	16
 19290   01DEC6  6E0A               	movwf	read_sram@len^(0+1280),c
 19291   01DEC8  EC0C  F0F2         	call	_read_sram	;wreg free
 19292   01DECC                     
 19293                           ;../src/boards/w65_cmn.c: 189:  if (memcmp(rom, tmp_buf[0], 16) != 0) {
 19294   01DECC  0E0F               	movlw	low _rom
 19295   01DECE  6E04               	movwf	memcmp@vl^(0+1280),c
 19296   01DED0  0EF2               	movlw	high _rom
 19297   01DED2  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19298   01DED4  0EF8               	movlw	low _tmp_buf
 19299   01DED6  6E06               	movwf	memcmp@vr^(0+1280),c
 19300   01DED8  0E13               	movlw	high _tmp_buf
 19301   01DEDA  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19302   01DEDC  0E00               	movlw	0
 19303   01DEDE  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19304   01DEE0  0E10               	movlw	16
 19305   01DEE2  6E08               	movwf	memcmp@n^(0+1280),c
 19306   01DEE4  EC23  F0EA         	call	_memcmp	;wreg free
 19307   01DEE8  5004               	movf	?_memcmp^(0+1280),w,c
 19308   01DEEA  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19309   01DEEC  B4D8               	btfsc	status,2,c
 19310   01DEEE  EF7B  F0EF         	goto	u34611
 19311   01DEF2  EF7D  F0EF         	goto	u34610
 19312   01DEF6                     u34611:
 19313   01DEF6  EF88  F0EF         	goto	l24943
 19314   01DEFA                     u34610:
 19315   01DEFA                     
 19316                           ;../src/boards/w65_cmn.c: 190:   bus_release_req();
 19317   01DEFA  EC32  F001         	call	_bus_release_req	;wreg free
 19318   01DEFE                     
 19319                           ;../src/boards/w65_cmn.c: 191:   printf("Memory Write Error\r\n");
 19320   01DEFE  0E85               	movlw	low STR_4
 19321   01DF00  0105               	movlb	5	; () banked
 19322   01DF02  6FAD               	movwf	printf@fmt& (0+255),b
 19323   01DF04  0EFC               	movlw	high STR_4
 19324   01DF06  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19325   01DF08  ECDA  F0FF         	call	_printf	;wreg free
 19326   01DF0C                     l341:
 19327   01DF0C  EF86  F0EF         	goto	l341
 19328   01DF10                     l24943:
 19329                           
 19330                           ;../src/boards/w65_cmn.c: 194:  bus_release_req();
 19331   01DF10  EC32  F001         	call	_bus_release_req	;wreg free
 19332   01DF14                     
 19333                           ;../src/boards/w65_cmn.c: 196:  LATA0 = 1;
 19334   01DF14  80BE               	bsf	1214,0,c	;volatile
 19335   01DF16                     
 19336                           ;../src/boards/w65_cmn.c: 197:  LATE0 = 1;
 19337   01DF16  80C2               	bsf	1218,0,c	;volatile
 19338   01DF18                     
 19339                           ;../src/boards/w65_cmn.c: 199:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 19340   01DF18  0E09               	movlw	9
 19341   01DF1A  0105               	movlb	5	; () banked
 19342   01DF1C  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 19343   01DF1E  0E1E               	movlw	30
 19344   01DF20  6FBD               	movwf	??_reset_cpu& (0+255),b
 19345   01DF22  0EE4               	movlw	228
 19346   01DF24                     u37077:
 19347   01DF24  2EE8               	decfsz	wreg,f,c
 19348   01DF26  D7FE               	bra	u37077
 19349   01DF28  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 19350   01DF2A  D7FC               	bra	u37077
 19351   01DF2C  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 19352   01DF2E  D7FA               	bra	u37077
 19353   01DF30  0000               	nop	
 19354   01DF32                     
 19355                           ;../src/boards/w65_cmn.c: 201:  LATA0 = 0;
 19356   01DF32  90BE               	bcf	1214,0,c	;volatile
 19357   01DF34                     
 19358                           ;../src/boards/w65_cmn.c: 202:  LATE0 = 0;
 19359   01DF34  90C2               	bcf	1218,0,c	;volatile
 19360   01DF36                     
 19361                           ;../src/boards/w65_cmn.c: 204:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 19362   01DF36  0E09               	movlw	9
 19363   01DF38  0105               	movlb	5	; () banked
 19364   01DF3A  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 19365   01DF3C  0E1E               	movlw	30
 19366   01DF3E  6FBD               	movwf	??_reset_cpu& (0+255),b
 19367   01DF40  0EE4               	movlw	228
 19368   01DF42                     u37087:
 19369   01DF42  2EE8               	decfsz	wreg,f,c
 19370   01DF44  D7FE               	bra	u37087
 19371   01DF46  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 19372   01DF48  D7FC               	bra	u37087
 19373   01DF4A  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 19374   01DF4C  D7FA               	bra	u37087
 19375   01DF4E  0000               	nop	
 19376                           
 19377                           ;../src/boards/w65_cmn.c: 206:  bus_hold_req();
 19378   01DF50  EC2C  F001         	call	_bus_hold_req	;wreg free
 19379   01DF54  0012               	return		;funcret
 19380   01DF56                     __end_of_reset_cpu:
 19381                           	callstack 0
 19382                           
 19383 ;; *************** function _reset_clk *****************
 19384 ;; Defined at:
 19385 ;;		line 328 in file "../src/boards/w65_cmn.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;		None
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;		None
 19390 ;; Return value:  Size  Location     Type
 19391 ;;                  1    wreg      void 
 19392 ;; Registers used:
 19393 ;;		None
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19403 ;;Total ram usage:        0 bytes
 19404 ;; Hardware stack levels used: 1
 19405 ;; Hardware stack levels required when called: 1
 19406 ;; This function calls:
 19407 ;;		Nothing
 19408 ;; This function is called by:
 19409 ;;		_main
 19410 ;; This function uses a non-reentrant model
 19411 ;;
 19412                           
 19413                           	psect	text34
 19414   0001BE                     __ptext34:
 19415                           	callstack 0
 19416   0001BE                     _reset_clk:
 19417                           	callstack 125
 19418   0001BE                     
 19419                           ;../src/boards/w65_cmn.c: 330:  NCO1EN = 0;
 19420   0001BE  0104               	movlb	4	; () banked
 19421   0001C0  9F46               	bcf	70,7,b	;volatile
 19422                           
 19423                           ;../src/boards/w65_cmn.c: 331:  NCO1OUT = 0;
 19424   0001C2  9B46               	bcf	70,5,b	;volatile
 19425                           
 19426                           ;../src/boards/w65_cmn.c: 332:  NCO1INC = (__uint24)clk_fs;
 19427   0001C4  C7DF  F443         	movff	_clk_fs,1091	;volatile
 19428   0001C8  C7E0  F444         	movff	_clk_fs+1,1092	;volatile
 19429   0001CC  C7E1  F445         	movff	_clk_fs+2,1093	;volatile
 19430                           
 19431                           ;../src/boards/w65_cmn.c: 333:  NCO1OUT = 1;
 19432   0001D0  8B46               	bsf	70,5,b	;volatile
 19433                           
 19434                           ;../src/boards/w65_cmn.c: 334:  NCO1EN = 1;
 19435   0001D2  8F46               	bsf	70,7,b	;volatile
 19436   0001D4                     
 19437                           ; BSR set to: 4
 19438   0001D4  0012               	return		;funcret
 19439   0001D6                     __end_of_reset_clk:
 19440                           	callstack 0
 19441                           
 19442 ;; *************** function _port_init *****************
 19443 ;; Defined at:
 19444 ;;		line 209 in file "../src/boards/w65_cmn.c"
 19445 ;; Parameters:    Size  Location     Type
 19446 ;;		None
 19447 ;; Auto vars:     Size  Location     Type
 19448 ;;		None
 19449 ;; Return value:  Size  Location     Type
 19450 ;;                  1    wreg      void 
 19451 ;; Registers used:
 19452 ;;		wreg, status,2
 19453 ;; Tracked objects:
 19454 ;;		On entry : 0/0
 19455 ;;		On exit  : 0/0
 19456 ;;		Unchanged: 0/0
 19457 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19462 ;;Total ram usage:        0 bytes
 19463 ;; Hardware stack levels used: 1
 19464 ;; Hardware stack levels required when called: 1
 19465 ;; This function calls:
 19466 ;;		Nothing
 19467 ;; This function is called by:
 19468 ;;		_main
 19469 ;; This function uses a non-reentrant model
 19470 ;;
 19471                           
 19472                           	psect	text35
 19473   01F690                     __ptext35:
 19474                           	callstack 0
 19475   01F690                     _port_init:
 19476                           	callstack 125
 19477   01F690                     
 19478                           ;../src/boards/w65_cmn.c: 212:     OSCFRQ = 0x08;
 19479   01F690  0E08               	movlw	8
 19480   01F692  0100               	movlb	0	; () banked
 19481   01F694  6FB1               	movwf	177,b	;volatile
 19482   01F696                     
 19483                           ; BSR set to: 0
 19484                           ;../src/boards/w65_cmn.c: 215:     ANSELA = 0x00;
 19485   01F696  0104               	movlb	4	; () banked
 19486   01F698  6B00               	clrf	0,b	;volatile
 19487   01F69A                     
 19488                           ; BSR set to: 4
 19489                           ;../src/boards/w65_cmn.c: 216:     ANSELB = 0x00;
 19490   01F69A  6B08               	clrf	8,b	;volatile
 19491   01F69C                     
 19492                           ; BSR set to: 4
 19493                           ;../src/boards/w65_cmn.c: 217:     ANSELC = 0x00;
 19494   01F69C  6B10               	clrf	16,b	;volatile
 19495   01F69E                     
 19496                           ; BSR set to: 4
 19497                           ;../src/boards/w65_cmn.c: 218:     ANSELD = 0x00;
 19498   01F69E  6B18               	clrf	24,b	;volatile
 19499   01F6A0                     
 19500                           ; BSR set to: 4
 19501                           ;../src/boards/w65_cmn.c: 219:     ANSELE0 = 0;
 19502   01F6A0  9120               	bcf	32,0,b	;volatile
 19503   01F6A2                     
 19504                           ; BSR set to: 4
 19505                           ;../src/boards/w65_cmn.c: 220:     ANSELE1 = 0;
 19506   01F6A2  9320               	bcf	32,1,b	;volatile
 19507   01F6A4                     
 19508                           ; BSR set to: 4
 19509                           ;../src/boards/w65_cmn.c: 221:     ANSELE2 = 0;
 19510   01F6A4  9520               	bcf	32,2,b	;volatile
 19511   01F6A6                     
 19512                           ; BSR set to: 4
 19513                           ;../src/boards/w65_cmn.c: 224:  WPUE0 = 0;
 19514   01F6A6  9121               	bcf	33,0,b	;volatile
 19515   01F6A8                     
 19516                           ; BSR set to: 4
 19517                           ;../src/boards/w65_cmn.c: 225:  LATE0 = 0;
 19518   01F6A8  90C2               	bcf	1218,0,c	;volatile
 19519   01F6AA                     
 19520                           ; BSR set to: 4
 19521                           ;../src/boards/w65_cmn.c: 226:  TRISE0 = 0;
 19522   01F6AA  90CA               	bcf	1226,0,c	;volatile
 19523   01F6AC                     
 19524                           ; BSR set to: 4
 19525                           ;../src/boards/w65_cmn.c: 229:  WPUE1 = 0;
 19526   01F6AC  9321               	bcf	33,1,b	;volatile
 19527   01F6AE                     
 19528                           ; BSR set to: 4
 19529                           ;../src/boards/w65_cmn.c: 230:  LATE1 = 1;
 19530   01F6AE  82C2               	bsf	1218,1,c	;volatile
 19531   01F6B0                     
 19532                           ; BSR set to: 4
 19533                           ;../src/boards/w65_cmn.c: 231:  TRISE1 = 0;
 19534   01F6B0  92CA               	bcf	1226,1,c	;volatile
 19535   01F6B2                     
 19536                           ; BSR set to: 4
 19537                           ;../src/boards/w65_cmn.c: 234:  WPUE2 = 1;
 19538   01F6B2  8521               	bsf	33,2,b	;volatile
 19539   01F6B4                     
 19540                           ; BSR set to: 4
 19541                           ;../src/boards/w65_cmn.c: 235:  LATE2 = 1;
 19542   01F6B4  84C2               	bsf	1218,2,c	;volatile
 19543   01F6B6                     
 19544                           ; BSR set to: 4
 19545                           ;../src/boards/w65_cmn.c: 236:  TRISE2 = 0;
 19546   01F6B6  94CA               	bcf	1226,2,c	;volatile
 19547   01F6B8                     
 19548                           ; BSR set to: 4
 19549                           ;../src/boards/w65_cmn.c: 239:  WPUA0 = 0;
 19550   01F6B8  9101               	bcf	1,0,b	;volatile
 19551   01F6BA                     
 19552                           ; BSR set to: 4
 19553                           ;../src/boards/w65_cmn.c: 240:  LATA0 = 0;
 19554   01F6BA  90BE               	bcf	1214,0,c	;volatile
 19555   01F6BC                     
 19556                           ; BSR set to: 4
 19557                           ;../src/boards/w65_cmn.c: 241:  TRISA0 = 0;
 19558   01F6BC  90C6               	bcf	1222,0,c	;volatile
 19559   01F6BE                     
 19560                           ; BSR set to: 4
 19561                           ;../src/boards/w65_cmn.c: 243:  WPUA3 = 0;
 19562   01F6BE  9701               	bcf	1,3,b	;volatile
 19563   01F6C0                     
 19564                           ; BSR set to: 4
 19565                           ;../src/boards/w65_cmn.c: 244:  LATA3 = 1;
 19566   01F6C0  86BE               	bsf	1214,3,c	;volatile
 19567   01F6C2                     
 19568                           ; BSR set to: 4
 19569                           ;../src/boards/w65_cmn.c: 245:  TRISA3 = 0;
 19570   01F6C2  96C6               	bcf	1222,3,c	;volatile
 19571   01F6C4                     
 19572                           ; BSR set to: 4
 19573                           ;../src/boards/w65_cmn.c: 248:  WPUA2 = 1;
 19574   01F6C4  8501               	bsf	1,2,b	;volatile
 19575   01F6C6                     
 19576                           ; BSR set to: 4
 19577                           ;../src/boards/w65_cmn.c: 249:  TRISA2 = 0;
 19578   01F6C6  94C6               	bcf	1222,2,c	;volatile
 19579   01F6C8                     
 19580                           ; BSR set to: 4
 19581                           ;../src/boards/w65_cmn.c: 250:  LATA2 = 1;
 19582   01F6C8  84BE               	bsf	1214,2,c	;volatile
 19583   01F6CA                     
 19584                           ; BSR set to: 4
 19585                           ;../src/boards/w65_cmn.c: 253:  WPUA5 = 0;
 19586   01F6CA  9B01               	bcf	1,5,b	;volatile
 19587   01F6CC                     
 19588                           ; BSR set to: 4
 19589                           ;../src/boards/w65_cmn.c: 254:  TRISA5 = 1;
 19590   01F6CC  8AC6               	bsf	1222,5,c	;volatile
 19591   01F6CE                     
 19592                           ; BSR set to: 4
 19593                           ;../src/boards/w65_cmn.c: 257:  WPUA1 = 0;
 19594   01F6CE  9301               	bcf	1,1,b	;volatile
 19595   01F6D0                     
 19596                           ; BSR set to: 4
 19597                           ;../src/boards/w65_cmn.c: 258:  LATA1 = 0;
 19598   01F6D0  92BE               	bcf	1214,1,c	;volatile
 19599   01F6D2                     
 19600                           ; BSR set to: 4
 19601                           ;../src/boards/w65_cmn.c: 259:  TRISA1 = 1;
 19602   01F6D2  82C6               	bsf	1222,1,c	;volatile
 19603   01F6D4                     
 19604                           ; BSR set to: 4
 19605                           ;../src/boards/w65_cmn.c: 262:  WPUA4 = 1;
 19606   01F6D4  8901               	bsf	1,4,b	;volatile
 19607   01F6D6                     
 19608                           ; BSR set to: 4
 19609                           ;../src/boards/w65_cmn.c: 263:  LATA4 = 1;
 19610   01F6D6  88BE               	bsf	1214,4,c	;volatile
 19611   01F6D8                     
 19612                           ; BSR set to: 4
 19613                           ;../src/boards/w65_cmn.c: 264:  TRISA4 = 1;
 19614   01F6D8  88C6               	bsf	1222,4,c	;volatile
 19615   01F6DA                     
 19616                           ; BSR set to: 4
 19617                           ;../src/boards/w65_cmn.c: 267:     WPUC = 0xff;
 19618   01F6DA  6911               	setf	17,b	;volatile
 19619   01F6DC                     
 19620                           ; BSR set to: 4
 19621                           ;../src/boards/w65_cmn.c: 268:     LATC = 0x00;
 19622   01F6DC  6AC0               	clrf	192,c	;volatile
 19623   01F6DE                     
 19624                           ; BSR set to: 4
 19625                           ;../src/boards/w65_cmn.c: 269:     TRISC = 0xff;
 19626   01F6DE  68C8               	setf	200,c	;volatile
 19627   01F6E0                     
 19628                           ; BSR set to: 4
 19629                           ;../src/boards/w65_cmn.c: 272:  WPUD = 0xff;
 19630   01F6E0  6919               	setf	25,b	;volatile
 19631   01F6E2                     
 19632                           ; BSR set to: 4
 19633                           ;../src/boards/w65_cmn.c: 273:  LATD = 0x00;
 19634   01F6E2  6AC1               	clrf	193,c	;volatile
 19635   01F6E4                     
 19636                           ; BSR set to: 4
 19637                           ;../src/boards/w65_cmn.c: 274:  TRISD = 0xff;
 19638   01F6E4  68C9               	setf	201,c	;volatile
 19639   01F6E6                     
 19640                           ; BSR set to: 4
 19641                           ;../src/boards/w65_cmn.c: 277:  WPUB = 0xff;
 19642   01F6E6  6909               	setf	9,b	;volatile
 19643   01F6E8                     
 19644                           ; BSR set to: 4
 19645                           ;../src/boards/w65_cmn.c: 278:  LATB = 0x00;
 19646   01F6E8  6ABF               	clrf	191,c	;volatile
 19647   01F6EA                     
 19648                           ; BSR set to: 4
 19649                           ;../src/boards/w65_cmn.c: 279:  TRISB = 0xff;
 19650   01F6EA  68C7               	setf	199,c	;volatile
 19651   01F6EC                     
 19652                           ; BSR set to: 4
 19653                           ;../src/boards/w65_cmn.c: 283:  SLRCONBbits.SLRB0 = 0;
 19654   01F6EC  910B               	bcf	11,0,b	;volatile
 19655   01F6EE                     
 19656                           ; BSR set to: 4
 19657                           ;../src/boards/w65_cmn.c: 284:  SLRCONBbits.SLRB1 = 0;
 19658   01F6EE  930B               	bcf	11,1,b	;volatile
 19659   01F6F0                     
 19660                           ; BSR set to: 4
 19661                           ;../src/boards/w65_cmn.c: 285:  SLRCONBbits.SLRB2 = 0;
 19662   01F6F0  950B               	bcf	11,2,b	;volatile
 19663   01F6F2                     
 19664                           ; BSR set to: 4
 19665   01F6F2  0012               	return		;funcret
 19666   01F6F4                     __end_of_port_init:
 19667                           	callstack 0
 19668                           
 19669 ;; *************** function _mem_init *****************
 19670 ;; Defined at:
 19671 ;;		line 21 in file "../src/memtst.c"
 19672 ;; Parameters:    Size  Location     Type
 19673 ;;		None
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  addr            4  136[BANK5 ] unsigned long 
 19676 ;;  i               2  134[BANK5 ] unsigned int 
 19677 ;; Return value:  Size  Location     Type
 19678 ;;                  4  126[BANK5 ] unsigned long 
 19679 ;; Registers used:
 19680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19681 ;; Tracked objects:
 19682 ;;		On entry : 0/0
 19683 ;;		On exit  : 0/0
 19684 ;;		Unchanged: 0/0
 19685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19687 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19689 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19690 ;;Total ram usage:       14 bytes
 19691 ;; Hardware stack levels used: 1
 19692 ;; Hardware stack levels required when called: 10
 19693 ;; This function calls:
 19694 ;;		_memcmp
 19695 ;;		_printf
 19696 ;;		_read_sram
 19697 ;;		_util_addrdump
 19698 ;;		_write_sram
 19699 ;; This function is called by:
 19700 ;;		_main
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           	psect	text36
 19705   0190F8                     __ptext36:
 19706                           	callstack 0
 19707   0190F8                     _mem_init:
 19708                           	callstack 116
 19709   0190F8                     
 19710                           ;../src/memtst.c: 23:     unsigned int i;;../src/memtst.c: 24:     uint32_t addr;;../src
      +                          /memtst.c: 27:     for (i = 0; i < 256; i += 2) {
 19711   0190F8  0E00               	movlw	0
 19712   0190FA  0105               	movlb	5	; () banked
 19713   0190FC  6FE7               	movwf	(mem_init@i+1)& (0+255),b
 19714   0190FE  0E00               	movlw	0
 19715   019100  6FE6               	movwf	mem_init@i& (0+255),b
 19716   019102                     l24977:
 19717                           
 19718                           ; BSR set to: 5
 19719                           ;../src/memtst.c: 28:         tmp_buf[0][i + 0] = 0xa5;
 19720   019102  0EF8               	movlw	low _tmp_buf
 19721   019104  25E6               	addwf	mem_init@i& (0+255),w,b
 19722   019106  6ED9               	movwf	fsr2l,c
 19723   019108  0E13               	movlw	high _tmp_buf
 19724   01910A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 19725   01910C  6EDA               	movwf	fsr2h,c
 19726   01910E  0EA5               	movlw	165
 19727   019110  6EDF               	movwf	indf2,c
 19728                           
 19729                           ;../src/memtst.c: 29:         tmp_buf[0][i + 1] = 0x5a;
 19730   019112  0EF9               	movlw	low (_tmp_buf+1)
 19731   019114  25E6               	addwf	mem_init@i& (0+255),w,b
 19732   019116  6ED9               	movwf	fsr2l,c
 19733   019118  0E13               	movlw	high (_tmp_buf+1)
 19734   01911A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 19735   01911C  6EDA               	movwf	fsr2h,c
 19736   01911E  0E5A               	movlw	90
 19737   019120  6EDF               	movwf	indf2,c
 19738   019122                     
 19739                           ; BSR set to: 5
 19740                           ;../src/memtst.c: 30:     }
 19741   019122  0E02               	movlw	2
 19742   019124  27E6               	addwf	mem_init@i& (0+255),f,b
 19743   019126  0E00               	movlw	0
 19744   019128  23E7               	addwfc	(mem_init@i+1)& (0+255),f,b
 19745   01912A                     
 19746                           ; BSR set to: 5
 19747   01912A  05E7               	decf	(mem_init@i+1)& (0+255),w,b
 19748   01912C  A0D8               	btfss	status,0,c
 19749   01912E  EF9B  F0C8         	goto	u34641
 19750   019132  EF9D  F0C8         	goto	u34640
 19751   019136                     u34641:
 19752   019136  EF81  F0C8         	goto	l24977
 19753   01913A                     u34640:
 19754   01913A                     
 19755                           ; BSR set to: 5
 19756                           ;../src/memtst.c: 31:     for (addr = 0; addr < 0x00080000; addr += 256 * 16) {
 19757   01913A  0E00               	movlw	0
 19758   01913C  6FE8               	movwf	mem_init@addr& (0+255),b
 19759   01913E  0E00               	movlw	0
 19760   019140  6FE9               	movwf	(mem_init@addr+1)& (0+255),b
 19761   019142  0E00               	movlw	0
 19762   019144  6FEA               	movwf	(mem_init@addr+2)& (0+255),b
 19763   019146  0E00               	movlw	0
 19764   019148  6FEB               	movwf	(mem_init@addr+3)& (0+255),b
 19765   01914A                     l24989:
 19766                           
 19767                           ; BSR set to: 5
 19768                           ;../src/memtst.c: 32:         printf("Memory $000000 - $%06lX\r", addr);
 19769   01914A  0EBB               	movlw	low STR_40
 19770   01914C  6FAD               	movwf	printf@fmt& (0+255),b
 19771   01914E  0EFA               	movlw	high STR_40
 19772   019150  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19773   019152  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 19774   019156  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 19775   01915A  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 19776   01915E  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 19777   019162  ECDA  F0FF         	call	_printf	;wreg free
 19778   019166                     
 19779                           ;../src/memtst.c: 33:         tmp_buf[0][0] = (addr >> 0) & 0xff;
 19780   019166  EE24  F3F8         	lfsr	2,_tmp_buf
 19781   01916A  C5E8  F4DF         	movff	mem_init@addr,indf2
 19782   01916E                     
 19783                           ;../src/memtst.c: 34:         tmp_buf[0][1] = (addr >> 8) & 0xff;
 19784   01916E  EE24  F3F9         	lfsr	2,_tmp_buf+1
 19785   019172  C5E9  F4DF         	movff	mem_init@addr+1,indf2
 19786   019176                     
 19787                           ;../src/memtst.c: 35:         tmp_buf[0][2] = (addr >> 16) & 0xff;
 19788   019176  EE24  F3FA         	lfsr	2,_tmp_buf+2
 19789   01917A  C5EA  F4DF         	movff	mem_init@addr+2,indf2
 19790   01917E                     
 19791                           ;../src/memtst.c: 37:      write_sram(addr, tmp_buf[0], 256);
 19792   01917E  C5E8  F504         	movff	mem_init@addr,write_sram@addr
 19793   019182  C5E9  F505         	movff	mem_init@addr+1,write_sram@addr+1
 19794   019186  C5EA  F506         	movff	mem_init@addr+2,write_sram@addr+2
 19795   01918A  C5EB  F507         	movff	mem_init@addr+3,write_sram@addr+3
 19796   01918E  0EF8               	movlw	low _tmp_buf
 19797   019190  6E08               	movwf	write_sram@buf^(0+1280),c
 19798   019192  0E13               	movlw	high _tmp_buf
 19799   019194  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 19800   019196  0E01               	movlw	1
 19801   019198  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 19802   01919A  0E00               	movlw	0
 19803   01919C  6E0A               	movwf	write_sram@len^(0+1280),c
 19804   01919E  EC9F  F0E8         	call	_write_sram	;wreg free
 19805   0191A2                     
 19806                           ;../src/memtst.c: 38:         read_sram(addr, tmp_buf[1], 256);
 19807   0191A2  C5E8  F504         	movff	mem_init@addr,read_sram@addr
 19808   0191A6  C5E9  F505         	movff	mem_init@addr+1,read_sram@addr+1
 19809   0191AA  C5EA  F506         	movff	mem_init@addr+2,read_sram@addr+2
 19810   0191AE  C5EB  F507         	movff	mem_init@addr+3,read_sram@addr+3
 19811   0191B2  0EF8               	movlw	low (_tmp_buf+256)
 19812   0191B4  6E08               	movwf	read_sram@buf^(0+1280),c
 19813   0191B6  0E14               	movlw	high (_tmp_buf+256)
 19814   0191B8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19815   0191BA  0E01               	movlw	1
 19816   0191BC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19817   0191BE  0E00               	movlw	0
 19818   0191C0  6E0A               	movwf	read_sram@len^(0+1280),c
 19819   0191C2  EC0C  F0F2         	call	_read_sram	;wreg free
 19820   0191C6                     
 19821                           ;../src/memtst.c: 40:      if (memcmp(tmp_buf[0], tmp_buf[1], 256) != 0) {
 19822   0191C6  0EF8               	movlw	low _tmp_buf
 19823   0191C8  6E04               	movwf	memcmp@vl^(0+1280),c
 19824   0191CA  0E13               	movlw	high _tmp_buf
 19825   0191CC  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19826   0191CE  0EF8               	movlw	low (_tmp_buf+256)
 19827   0191D0  6E06               	movwf	memcmp@vr^(0+1280),c
 19828   0191D2  0E14               	movlw	high (_tmp_buf+256)
 19829   0191D4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19830   0191D6  0E01               	movlw	1
 19831   0191D8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19832   0191DA  0E00               	movlw	0
 19833   0191DC  6E08               	movwf	memcmp@n^(0+1280),c
 19834   0191DE  EC23  F0EA         	call	_memcmp	;wreg free
 19835   0191E2  5004               	movf	?_memcmp^(0+1280),w,c
 19836   0191E4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19837   0191E6  B4D8               	btfsc	status,2,c
 19838   0191E8  EFF8  F0C8         	goto	u34651
 19839   0191EC  EFFA  F0C8         	goto	u34650
 19840   0191F0                     u34651:
 19841   0191F0  EF39  F0C9         	goto	l25005
 19842   0191F4                     u34650:
 19843   0191F4                     
 19844                           ;../src/memtst.c: 41:             printf("\nMemory error at $%06lX\n\r", addr);
 19845   0191F4  0E3C               	movlw	low STR_41
 19846   0191F6  0105               	movlb	5	; () banked
 19847   0191F8  6FAD               	movwf	printf@fmt& (0+255),b
 19848   0191FA  0EFA               	movlw	high STR_41
 19849   0191FC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19850   0191FE  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 19851   019202  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 19852   019206  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 19853   01920A  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 19854   01920E  ECDA  F0FF         	call	_printf	;wreg free
 19855                           
 19856                           ;../src/memtst.c: 42:             util_addrdump("WR: ", addr, tmp_buf[0], 256);
 19857   019212  0ECB               	movlw	low STR_42
 19858   019214  0105               	movlb	5	; () banked
 19859   019216  6FBD               	movwf	util_addrdump@header& (0+255),b
 19860   019218  0EFF               	movlw	high STR_42
 19861   01921A  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 19862   01921C  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 19863   019220  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 19864   019224  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 19865   019228  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 19866   01922C  0EF8               	movlw	low _tmp_buf
 19867   01922E  6FC3               	movwf	util_addrdump@addr& (0+255),b
 19868   019230  0E13               	movlw	high _tmp_buf
 19869   019232  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 19870   019234  0E01               	movlw	1
 19871   019236  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 19872   019238  0E00               	movlw	0
 19873   01923A  6FC5               	movwf	util_addrdump@size& (0+255),b
 19874   01923C  EC4A  F0E1         	call	_util_addrdump	;wreg free
 19875                           
 19876                           ;../src/memtst.c: 43:             util_addrdump("RD: ", addr, tmp_buf[1], 256);
 19877   019240  0EC6               	movlw	low STR_43
 19878   019242  0105               	movlb	5	; () banked
 19879   019244  6FBD               	movwf	util_addrdump@header& (0+255),b
 19880   019246  0EFF               	movlw	high STR_43
 19881   019248  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 19882   01924A  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 19883   01924E  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 19884   019252  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 19885   019256  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 19886   01925A  0EF8               	movlw	low (_tmp_buf+256)
 19887   01925C  6FC3               	movwf	util_addrdump@addr& (0+255),b
 19888   01925E  0E14               	movlw	high (_tmp_buf+256)
 19889   019260  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 19890   019262  0E01               	movlw	1
 19891   019264  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 19892   019266  0E00               	movlw	0
 19893   019268  6FC5               	movwf	util_addrdump@size& (0+255),b
 19894   01926A  EC4A  F0E1         	call	_util_addrdump	;wreg free
 19895   01926E                     l902:
 19896   01926E  EF37  F0C9         	goto	l902
 19897   019272                     l25005:
 19898                           
 19899                           ;../src/memtst.c: 47:         if (addr == 0) continue;
 19900   019272  0105               	movlb	5	; () banked
 19901   019274  51E8               	movf	mem_init@addr& (0+255),w,b
 19902   019276  11E9               	iorwf	(mem_init@addr+1)& (0+255),w,b
 19903   019278  11EA               	iorwf	(mem_init@addr+2)& (0+255),w,b
 19904   01927A  11EB               	iorwf	(mem_init@addr+3)& (0+255),w,b
 19905   01927C  A4D8               	btfss	status,2,c
 19906   01927E  EF43  F0C9         	goto	u34661
 19907   019282  EF45  F0C9         	goto	u34660
 19908   019286                     u34661:
 19909   019286  EF47  F0C9         	goto	l25009
 19910   01928A                     u34660:
 19911   01928A  EF79  F0C9         	goto	l25015
 19912   01928E                     l25009:
 19913                           
 19914                           ; BSR set to: 5
 19915                           ;../src/memtst.c: 49:      read_sram(0, tmp_buf[1], 256);
 19916   01928E  0E00               	movlw	0
 19917   019290  6E04               	movwf	read_sram@addr^(0+1280),c
 19918   019292  0E00               	movlw	0
 19919   019294  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 19920   019296  0E00               	movlw	0
 19921   019298  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 19922   01929A  0E00               	movlw	0
 19923   01929C  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 19924   01929E  0EF8               	movlw	low (_tmp_buf+256)
 19925   0192A0  6E08               	movwf	read_sram@buf^(0+1280),c
 19926   0192A2  0E14               	movlw	high (_tmp_buf+256)
 19927   0192A4  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 19928   0192A6  0E01               	movlw	1
 19929   0192A8  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 19930   0192AA  0E00               	movlw	0
 19931   0192AC  6E0A               	movwf	read_sram@len^(0+1280),c
 19932   0192AE  EC0C  F0F2         	call	_read_sram	;wreg free
 19933   0192B2                     
 19934                           ;../src/memtst.c: 50:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) == 0) {
 19935   0192B2  0EF8               	movlw	low _tmp_buf
 19936   0192B4  6E04               	movwf	memcmp@vl^(0+1280),c
 19937   0192B6  0E13               	movlw	high _tmp_buf
 19938   0192B8  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 19939   0192BA  0EF8               	movlw	low (_tmp_buf+256)
 19940   0192BC  6E06               	movwf	memcmp@vr^(0+1280),c
 19941   0192BE  0E14               	movlw	high (_tmp_buf+256)
 19942   0192C0  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 19943   0192C2  0E01               	movlw	1
 19944   0192C4  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 19945   0192C6  0E00               	movlw	0
 19946   0192C8  6E08               	movwf	memcmp@n^(0+1280),c
 19947   0192CA  EC23  F0EA         	call	_memcmp	;wreg free
 19948   0192CE  5004               	movf	?_memcmp^(0+1280),w,c
 19949   0192D0  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 19950   0192D2  A4D8               	btfss	status,2,c
 19951   0192D4  EF6E  F0C9         	goto	u34671
 19952   0192D8  EF70  F0C9         	goto	u34670
 19953   0192DC                     u34671:
 19954   0192DC  EF79  F0C9         	goto	l25015
 19955   0192E0                     u34670:
 19956   0192E0                     
 19957                           ;../src/memtst.c: 53:    printf("\nMemory wrap around.\n\r");
 19958   0192E0  0EC1               	movlw	low STR_44
 19959   0192E2  0105               	movlb	5	; () banked
 19960   0192E4  6FAD               	movwf	printf@fmt& (0+255),b
 19961   0192E6  0EFB               	movlw	high STR_44
 19962   0192E8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19963   0192EA  ECDA  F0FF         	call	_printf	;wreg free
 19964                           
 19965                           ;../src/memtst.c: 54:          break;
 19966   0192EE  EF8D  F0C9         	goto	l25017
 19967   0192F2                     l25015:
 19968   0192F2  0E00               	movlw	0
 19969   0192F4  0105               	movlb	5	; () banked
 19970   0192F6  27E8               	addwf	mem_init@addr& (0+255),f,b
 19971   0192F8  0E10               	movlw	16
 19972   0192FA  23E9               	addwfc	(mem_init@addr+1)& (0+255),f,b
 19973   0192FC  0E00               	movlw	0
 19974   0192FE  23EA               	addwfc	(mem_init@addr+2)& (0+255),f,b
 19975   019300  0E00               	movlw	0
 19976   019302  23EB               	addwfc	(mem_init@addr+3)& (0+255),f,b
 19977   019304  51EB               	movf	(mem_init@addr+3)& (0+255),w,b
 19978   019306  E109               	bnz	u34680
 19979   019308  0E08               	movlw	8
 19980   01930A  5DEA               	subwf	(mem_init@addr+2)& (0+255),w,b
 19981   01930C  A0D8               	btfss	status,0,c
 19982   01930E  EF8B  F0C9         	goto	u34681
 19983   019312  EF8D  F0C9         	goto	u34680
 19984   019316                     u34681:
 19985   019316  EFA5  F0C8         	goto	l24989
 19986   01931A                     u34680:
 19987   01931A                     l25017:
 19988                           
 19989                           ;../src/memtst.c: 57:  printf("Memory $000000 - $%06lX %d KB OK\r\n", addr-1, (int)(addr
      +                           / 1024));
 19990   01931A  0E46               	movlw	low STR_45
 19991   01931C  0105               	movlb	5	; () banked
 19992   01931E  6FAD               	movwf	printf@fmt& (0+255),b
 19993   019320  0EF7               	movlw	high STR_45
 19994   019322  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 19995   019324  0EFF               	movlw	255
 19996   019326  25E8               	addwf	mem_init@addr& (0+255),w,b
 19997   019328  6FAF               	movwf	(?_printf+2)& (0+255),b
 19998   01932A  0EFF               	movlw	255
 19999   01932C  21E9               	addwfc	(mem_init@addr+1)& (0+255),w,b
 20000   01932E  6FB0               	movwf	(?_printf+3)& (0+255),b
 20001   019330  0EFF               	movlw	255
 20002   019332  21EA               	addwfc	(mem_init@addr+2)& (0+255),w,b
 20003   019334  6FB1               	movwf	(?_printf+4)& (0+255),b
 20004   019336  0EFF               	movlw	255
 20005   019338  21EB               	addwfc	(mem_init@addr+3)& (0+255),w,b
 20006   01933A  6FB2               	movwf	(?_printf+5)& (0+255),b
 20007   01933C  C5E8  F5E2         	movff	mem_init@addr,??_mem_init
 20008   019340  C5E9  F5E3         	movff	mem_init@addr+1,??_mem_init+1
 20009   019344  C5EA  F5E4         	movff	mem_init@addr+2,??_mem_init+2
 20010   019348  C5EB  F5E5         	movff	mem_init@addr+3,??_mem_init+3
 20011   01934C  0E0B               	movlw	11
 20012   01934E  EFAE  F0C9         	goto	u34690
 20013   019352                     u34695:
 20014   019352  90D8               	bcf	status,0,c
 20015   019354  33E5               	rrcf	(??_mem_init+3)& (0+255),f,b
 20016   019356  33E4               	rrcf	(??_mem_init+2)& (0+255),f,b
 20017   019358  33E3               	rrcf	(??_mem_init+1)& (0+255),f,b
 20018   01935A  33E2               	rrcf	??_mem_init& (0+255),f,b
 20019   01935C                     u34690:
 20020   01935C  2EE8               	decfsz	wreg,f,c
 20021   01935E  EFA9  F0C9         	goto	u34695
 20022   019362  C5E2  F5B3         	movff	??_mem_init,?_printf+6
 20023   019366  C5E3  F5B4         	movff	??_mem_init+1,?_printf+7
 20024   01936A  ECDA  F0FF         	call	_printf	;wreg free
 20025   01936E                     
 20026                           ;../src/memtst.c: 58:  return( addr );
 20027   01936E  C5E8  F5DE         	movff	mem_init@addr,?_mem_init
 20028   019372  C5E9  F5DF         	movff	mem_init@addr+1,?_mem_init+1
 20029   019376  C5EA  F5E0         	movff	mem_init@addr+2,?_mem_init+2
 20030   01937A  C5EB  F5E1         	movff	mem_init@addr+3,?_mem_init+3
 20031   01937E  0012               	return		;funcret
 20032   019380                     __end_of_mem_init:
 20033                           	callstack 0
 20034                           
 20035 ;; *************** function _get_hex *****************
 20036 ;; Defined at:
 20037 ;;		line 202 in file "../drivers/utils.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;  buf             2    3[COMRAM] PTR unsigned char 
 20040 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 20041 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 20042 ;; Auto vars:     Size  Location     Type
 20043 ;;  hexval          4   17[COMRAM] unsigned long 
 20044 ;;  d               4   13[COMRAM] unsigned long 
 20045 ;;  c               2   11[COMRAM] int 
 20046 ;;  ch              1   21[COMRAM] unsigned char 
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  4    3[COMRAM] unsigned long 
 20049 ;; Registers used:
 20050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20057 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20059 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20060 ;;Total ram usage:       19 bytes
 20061 ;; Hardware stack levels used: 1
 20062 ;; Hardware stack levels required when called: 1
 20063 ;; This function calls:
 20064 ;;		Nothing
 20065 ;; This function is called by:
 20066 ;;		_load_file
 20067 ;;		_mem_dump
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           	psect	text37
 20072   01C6C6                     __ptext37:
 20073                           	callstack 0
 20074   01C6C6                     _get_hex:
 20075                           	callstack 124
 20076   01C6C6                     
 20077                           ;../drivers/utils.c: 204:  uint32_t hexval;;../drivers/utils.c: 205:  char ch;;../driver
      +                          s/utils.c: 206:  uint32_t d;;../drivers/utils.c: 207:  int c;;../drivers/utils.c: 209:  
      +                          hexval = 0;
 20078   01C6C6  0E00               	movlw	0
 20079   01C6C8  6E12               	movwf	get_hex@hexval^(0+1280),c
 20080   01C6CA  0E00               	movlw	0
 20081   01C6CC  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 20082   01C6CE  0E00               	movlw	0
 20083   01C6D0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 20084   01C6D2  0E00               	movlw	0
 20085   01C6D4  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 20086                           
 20087                           ;../drivers/utils.c: 210:  c = 0;
 20088   01C6D6  0E00               	movlw	0
 20089   01C6D8  6E0D               	movwf	(get_hex@c+1)^(0+1280),c
 20090   01C6DA  0E00               	movlw	0
 20091   01C6DC  6E0C               	movwf	get_hex@c^(0+1280),c
 20092                           
 20093                           ;../drivers/utils.c: 211:  while( *buf ) {
 20094   01C6DE  EFEA  F0E3         	goto	l17175
 20095   01C6E2                     l17155:
 20096                           
 20097                           ;../drivers/utils.c: 212:   ch = *buf++;
 20098   01C6E2  C504  F4F6         	movff	get_hex@buf,tblptrl
 20099   01C6E6  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 20100   01C6EA  0E00               	movlw	low (__mediumconst shr (0+16))
 20101   01C6EC  6EF8               	movwf	tblptru,c
 20102   01C6EE  0E25               	movlw	(high __ramtop+-1)
 20103   01C6F0  64F7               	cpfsgt	tblptrh,c
 20104   01C6F2  D003               	bra	u22077
 20105   01C6F4  0008               	tblrd		*
 20106   01C6F6  50F5               	movf	tablat,w,c
 20107   01C6F8  D005               	bra	u22070
 20108   01C6FA                     u22077:
 20109   01C6FA  C4F6 F4E9          	movff	tblptrl,fsr0l
 20110   01C6FE  C4F7 F4EA          	movff	tblptrh,fsr0h
 20111   01C702  50EF               	movf	indf0,w,c
 20112   01C704                     u22070:
 20113   01C704  6E16               	movwf	get_hex@ch^(0+1280),c
 20114   01C706  4A04               	infsnz	get_hex@buf^(0+1280),f,c
 20115   01C708  2A05               	incf	(get_hex@buf+1)^(0+1280),f,c
 20116   01C70A                     
 20117                           ;../drivers/utils.c: 213:   if (ch >= 'A' && ch <= 'F') d = (uint32_t)(ch-'A'+10);
 20118   01C70A  0E40               	movlw	64
 20119   01C70C  6416               	cpfsgt	get_hex@ch^(0+1280),c
 20120   01C70E  EF8B  F0E3         	goto	u22081
 20121   01C712  EF8D  F0E3         	goto	u22080
 20122   01C716                     u22081:
 20123   01C716  EFA3  F0E3         	goto	l17165
 20124   01C71A                     u22080:
 20125   01C71A  0E47               	movlw	71
 20126   01C71C  6016               	cpfslt	get_hex@ch^(0+1280),c
 20127   01C71E  EF93  F0E3         	goto	u22091
 20128   01C722  EF95  F0E3         	goto	u22090
 20129   01C726                     u22091:
 20130   01C726  EFA3  F0E3         	goto	l17165
 20131   01C72A                     u22090:
 20132   01C72A  0EC9               	movlw	201
 20133   01C72C  2416               	addwf	get_hex@ch^(0+1280),w,c
 20134   01C72E  6E08               	movwf	??_get_hex^(0+1280),c
 20135   01C730  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 20136   01C732  0EFF               	movlw	255
 20137   01C734  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 20138   01C736  C508  F50E         	movff	??_get_hex,get_hex@d
 20139   01C73A  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 20140   01C73E  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 20141   01C740  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 20142   01C742  EFBF  F0E3         	goto	l17171
 20143   01C746                     l17165:
 20144   01C746  0E2F               	movlw	47
 20145   01C748  6416               	cpfsgt	get_hex@ch^(0+1280),c
 20146   01C74A  EFA9  F0E3         	goto	u22101
 20147   01C74E  EFAB  F0E3         	goto	u22100
 20148   01C752                     u22101:
 20149   01C752  EF03  F0E4         	goto	l2622
 20150   01C756                     u22100:
 20151   01C756  0E3A               	movlw	58
 20152   01C758  6016               	cpfslt	get_hex@ch^(0+1280),c
 20153   01C75A  EFB1  F0E3         	goto	u22111
 20154   01C75E  EFB3  F0E3         	goto	u22110
 20155   01C762                     u22111:
 20156   01C762  EF03  F0E4         	goto	l2622
 20157   01C766                     u22110:
 20158   01C766  0ED0               	movlw	208
 20159   01C768  2416               	addwf	get_hex@ch^(0+1280),w,c
 20160   01C76A  6E08               	movwf	??_get_hex^(0+1280),c
 20161   01C76C  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 20162   01C76E  0EFF               	movlw	255
 20163   01C770  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 20164   01C772  C508  F50E         	movff	??_get_hex,get_hex@d
 20165   01C776  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 20166   01C77A  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 20167   01C77C  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 20168   01C77E                     l17171:
 20169                           
 20170                           ;../drivers/utils.c: 216:   hexval = hexval*16 + d;
 20171   01C77E  C512  F508         	movff	get_hex@hexval,??_get_hex
 20172   01C782  C513  F509         	movff	get_hex@hexval+1,??_get_hex+1
 20173   01C786  C514  F50A         	movff	get_hex@hexval+2,??_get_hex+2
 20174   01C78A  C515  F50B         	movff	get_hex@hexval+3,??_get_hex+3
 20175   01C78E  0E04               	movlw	4
 20176   01C790                     u22125:
 20177   01C790  90D8               	bcf	status,0,c
 20178   01C792  3608               	rlcf	??_get_hex^(0+1280),f,c
 20179   01C794  3609               	rlcf	(??_get_hex+1)^(0+1280),f,c
 20180   01C796  360A               	rlcf	(??_get_hex+2)^(0+1280),f,c
 20181   01C798  360B               	rlcf	(??_get_hex+3)^(0+1280),f,c
 20182   01C79A  2EE8               	decfsz	wreg,f,c
 20183   01C79C  EFC8  F0E3         	goto	u22125
 20184   01C7A0  500E               	movf	get_hex@d^(0+1280),w,c
 20185   01C7A2  2408               	addwf	??_get_hex^(0+1280),w,c
 20186   01C7A4  6E12               	movwf	get_hex@hexval^(0+1280),c
 20187   01C7A6  500F               	movf	(get_hex@d+1)^(0+1280),w,c
 20188   01C7A8  2009               	addwfc	(??_get_hex+1)^(0+1280),w,c
 20189   01C7AA  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 20190   01C7AC  5010               	movf	(get_hex@d+2)^(0+1280),w,c
 20191   01C7AE  200A               	addwfc	(??_get_hex+2)^(0+1280),w,c
 20192   01C7B0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 20193   01C7B2  5011               	movf	(get_hex@d+3)^(0+1280),w,c
 20194   01C7B4  200B               	addwfc	(??_get_hex+3)^(0+1280),w,c
 20195   01C7B6  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 20196                           
 20197                           ;../drivers/utils.c: 217:   if (++c == 8) break;
 20198   01C7B8  4A0C               	infsnz	get_hex@c^(0+1280),f,c
 20199   01C7BA  2A0D               	incf	(get_hex@c+1)^(0+1280),f,c
 20200   01C7BC  0E08               	movlw	8
 20201   01C7BE  180C               	xorwf	get_hex@c^(0+1280),w,c
 20202   01C7C0  100D               	iorwf	(get_hex@c+1)^(0+1280),w,c
 20203   01C7C2  A4D8               	btfss	status,2,c
 20204   01C7C4  EFE6  F0E3         	goto	u22131
 20205   01C7C8  EFE8  F0E3         	goto	u22130
 20206   01C7CC                     u22131:
 20207   01C7CC  EFEA  F0E3         	goto	l17175
 20208   01C7D0                     u22130:
 20209   01C7D0  EF03  F0E4         	goto	l2622
 20210   01C7D4                     l17175:
 20211                           
 20212                           ;../drivers/utils.c: 211:  while( *buf ) {
 20213   01C7D4  C504  F4F6         	movff	get_hex@buf,tblptrl
 20214   01C7D8  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 20215   01C7DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20216   01C7DE  6EF8               	movwf	tblptru,c
 20217   01C7E0  0E25               	movlw	(high __ramtop+-1)
 20218   01C7E2  64F7               	cpfsgt	tblptrh,c
 20219   01C7E4  D003               	bra	u22147
 20220   01C7E6  0008               	tblrd		*
 20221   01C7E8  50F5               	movf	tablat,w,c
 20222   01C7EA  D005               	bra	u22140
 20223   01C7EC                     u22147:
 20224   01C7EC  C4F6 F4E9          	movff	tblptrl,fsr0l
 20225   01C7F0  C4F7 F4EA          	movff	tblptrh,fsr0h
 20226   01C7F4  50EF               	movf	indf0,w,c
 20227   01C7F6                     u22140:
 20228   01C7F6  0900               	iorlw	0
 20229   01C7F8  A4D8               	btfss	status,2,c
 20230   01C7FA  EF01  F0E4         	goto	u22151
 20231   01C7FE  EF03  F0E4         	goto	u22150
 20232   01C802                     u22151:
 20233   01C802  EF71  F0E3         	goto	l17155
 20234   01C806                     u22150:
 20235   01C806                     l2622:
 20236                           
 20237                           ;../drivers/utils.c: 219:  return hexval;
 20238   01C806  C512  F504         	movff	get_hex@hexval,?_get_hex
 20239   01C80A  C513  F505         	movff	get_hex@hexval+1,?_get_hex+1
 20240   01C80E  C514  F506         	movff	get_hex@hexval+2,?_get_hex+2
 20241   01C812  C515  F507         	movff	get_hex@hexval+3,?_get_hex+3
 20242   01C816  0012               	return		;funcret
 20243   01C818                     __end_of_get_hex:
 20244                           	callstack 0
 20245                           
 20246 ;; *************** function _load_config *****************
 20247 ;; Defined at:
 20248 ;;		line 416 in file "../src/w65_main.c"
 20249 ;; Parameters:    Size  Location     Type
 20250 ;;		None
 20251 ;; Auto vars:     Size  Location     Type
 20252 ;;  i               2   19[BANK7 ] int 
 20253 ;;  str             2   17[BANK7 ] PTR unsigned char 
 20254 ;;		 -> tmp_buf(512), 
 20255 ;;  conf            2   15[BANK7 ] PTR const unsigned char 
 20256 ;;		 -> STR_49(11), STR_48(11), 
 20257 ;;  a               2   13[BANK7 ] PTR unsigned char 
 20258 ;;		 -> tmp_buf(512), 
 20259 ;;  buf             2   10[BANK7 ] PTR unsigned char 
 20260 ;;		 -> tmp_buf(512), 
 20261 ;;  adr             2    0        unsigned short 
 20262 ;;  size            2    0        unsigned short 
 20263 ;;  cnt             2    0        unsigned short 
 20264 ;;  fr              1   12[BANK7 ] enum E17409
 20265 ;; Return value:  Size  Location     Type
 20266 ;;                  2    0[BANK7 ] int 
 20267 ;; Registers used:
 20268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20269 ;; Tracked objects:
 20270 ;;		On entry : 0/0
 20271 ;;		On exit  : 0/0
 20272 ;;		Unchanged: 0/0
 20273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20274 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20275 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20276 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20277 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20278 ;;Total ram usage:       21 bytes
 20279 ;; Hardware stack levels used: 1
 20280 ;; Hardware stack levels required when called: 20
 20281 ;; This function calls:
 20282 ;;		___strtoxl
 20283 ;;		_del_space
 20284 ;;		_f_close
 20285 ;;		_f_gets
 20286 ;;		_f_open
 20287 ;;		_printf
 20288 ;;		_strlen
 20289 ;;		_strstr
 20290 ;; This function is called by:
 20291 ;;		_main
 20292 ;; This function uses a non-reentrant model
 20293 ;;
 20294                           
 20295                           	psect	text38
 20296   016DDA                     __ptext38:
 20297                           	callstack 0
 20298   016DDA                     _load_config:
 20299                           	callstack 106
 20300   016DDA                     
 20301                           ;../src/w65_main.c: 418:  FRESULT fr;;../src/w65_main.c: 419:  char *buf, *a;;../src/w65
      +                          _main.c: 420:  const TCHAR *conf;;../src/w65_main.c: 421:  uint16_t cnt, size;;../src/w6
      +                          5_main.c: 422:  uint16_t adr;;../src/w65_main.c: 423:  int i;;../src/w65_main.c: 424:  T
      +                          CHAR *str;;../src/w65_main.c: 426:  str = (TCHAR *)&tmp_buf[0][0];
 20302   016DDA  0EF8               	movlw	low _tmp_buf
 20303   016DDC  0107               	movlb	7	; () banked
 20304   016DDE  6F11               	movwf	load_config@str& (0+255),b
 20305   016DE0  0E13               	movlw	high _tmp_buf
 20306   016DE2  6F12               	movwf	(load_config@str+1)& (0+255),b
 20307   016DE4                     
 20308                           ; BSR set to: 7
 20309                           ;../src/w65_main.c: 427:  conf = ( cpu_flg ) ? conf16 : conf02;
 20310   016DE4  51E5               	movf	_cpu_flg& (0+255),w,b
 20311   016DE6  A4D8               	btfss	status,2,c
 20312   016DE8  EFF8  F0B6         	goto	u34711
 20313   016DEC  EFFA  F0B6         	goto	u34710
 20314   016DF0                     u34711:
 20315   016DF0  EF00  F0B7         	goto	l25041
 20316   016DF4                     u34710:
 20317   016DF4                     
 20318                           ; BSR set to: 7
 20319   016DF4  0EC2               	movlw	low STR_48
 20320   016DF6  6F0F               	movwf	load_config@conf& (0+255),b
 20321   016DF8  0EFE               	movlw	high STR_48
 20322   016DFA  6F10               	movwf	(load_config@conf+1)& (0+255),b
 20323   016DFC  EF04  F0B7         	goto	l25043
 20324   016E00                     l25041:
 20325                           
 20326                           ; BSR set to: 7
 20327   016E00  0ECD               	movlw	low STR_49
 20328   016E02  6F0F               	movwf	load_config@conf& (0+255),b
 20329   016E04  0EFE               	movlw	high STR_49
 20330   016E06  6F10               	movwf	(load_config@conf+1)& (0+255),b
 20331   016E08                     l25043:
 20332                           
 20333                           ; BSR set to: 7
 20334                           ;../src/w65_main.c: 429:  printf("\r\nLoad %s\r\n",(const char *)conf);
 20335   016E08  0EA0               	movlw	low STR_86
 20336   016E0A  0105               	movlb	5	; () banked
 20337   016E0C  6FAD               	movwf	printf@fmt& (0+255),b
 20338   016E0E  0EFE               	movlw	high STR_86
 20339   016E10  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20340   016E12  C70F  F5AF         	movff	load_config@conf,?_printf+2
 20341   016E16  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 20342   016E1A  ECDA  F0FF         	call	_printf	;wreg free
 20343   016E1E                     
 20344                           ;../src/w65_main.c: 431:  fr = f_open(&rom_fl, conf, 0x01);
 20345   016E1E  0ED6               	movlw	low _rom_fl
 20346   016E20  0106               	movlb	6	; () banked
 20347   016E22  6FAF               	movwf	f_open@fp& (0+255),b
 20348   016E24  0E0F               	movlw	high _rom_fl
 20349   016E26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 20350   016E28  C70F  F6B1         	movff	load_config@conf,f_open@path
 20351   016E2C  C710  F6B2         	movff	load_config@conf+1,f_open@path+1
 20352   016E30  0E01               	movlw	1
 20353   016E32  6FB3               	movwf	f_open@mode& (0+255),b
 20354   016E34  ECDB  F092         	call	_f_open	;wreg free
 20355   016E38  0107               	movlb	7	; () banked
 20356   016E3A  6F0C               	movwf	load_config@fr& (0+255),b
 20357   016E3C                     
 20358                           ; BSR set to: 7
 20359                           ;../src/w65_main.c: 432:  if ( fr != FR_OK ) {
 20360   016E3C  510C               	movf	load_config@fr& (0+255),w,b
 20361   016E3E  B4D8               	btfsc	status,2,c
 20362   016E40  EF24  F0B7         	goto	u34721
 20363   016E44  EF26  F0B7         	goto	u34720
 20364   016E48                     u34721:
 20365   016E48  EF85  F0B8         	goto	l25091
 20366   016E4C                     u34720:
 20367   016E4C                     
 20368                           ; BSR set to: 7
 20369                           ;../src/w65_main.c: 433:   printf("%s file is not found..\r\n", conf);
 20370   016E4C  0EA2               	movlw	low STR_87
 20371   016E4E  0105               	movlb	5	; () banked
 20372   016E50  6FAD               	movwf	printf@fmt& (0+255),b
 20373   016E52  0EFA               	movlw	high STR_87
 20374   016E54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20375   016E56  C70F  F5AF         	movff	load_config@conf,?_printf+2
 20376   016E5A  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 20377   016E5E  ECDA  F0FF         	call	_printf	;wreg free
 20378   016E62                     l25051:
 20379                           
 20380                           ;../src/w65_main.c: 434:   return -1;
 20381   016E62  0107               	movlb	7	; () banked
 20382   016E64  6900               	setf	?_load_config& (0+255),b
 20383   016E66  6901               	setf	(?_load_config+1)& (0+255),b
 20384   016E68  EFCF  F0B8         	goto	l1191
 20385   016E6C                     l25055:
 20386                           
 20387                           ; BSR set to: 6
 20388                           ;../src/w65_main.c: 440:   del_space(str);
 20389   016E6C  C711  F504         	movff	load_config@str,del_space@bytes
 20390   016E70  C712  F505         	movff	load_config@str+1,del_space@bytes+1
 20391   016E74  ECE9  F0F7         	call	_del_space	;wreg free
 20392   016E78                     
 20393                           ;../src/w65_main.c: 442:   if (str[0] == ';' || str[0] == 0 ) continue;
 20394   016E78  C711  F4D9         	movff	load_config@str,fsr2l
 20395   016E7C  C712  F4DA         	movff	load_config@str+1,fsr2h
 20396   016E80  0E3B               	movlw	59
 20397   016E82  18DE               	xorwf	postinc2,w,c
 20398   016E84  B4D8               	btfsc	status,2,c
 20399   016E86  EF47  F0B7         	goto	u34731
 20400   016E8A  EF49  F0B7         	goto	u34730
 20401   016E8E                     u34731:
 20402   016E8E  EF85  F0B8         	goto	l25091
 20403   016E92                     u34730:
 20404   016E92  C711  F4D9         	movff	load_config@str,fsr2l
 20405   016E96  C712  F4DA         	movff	load_config@str+1,fsr2h
 20406   016E9A  50DF               	movf	indf2,w,c
 20407   016E9C  A4D8               	btfss	status,2,c
 20408   016E9E  EF53  F0B7         	goto	u34741
 20409   016EA2  EF55  F0B7         	goto	u34740
 20410   016EA6                     u34741:
 20411   016EA6  EF57  F0B7         	goto	l25061
 20412   016EAA                     u34740:
 20413   016EAA  EF85  F0B8         	goto	l25091
 20414   016EAE                     l25061:
 20415                           
 20416                           ;../src/w65_main.c: 445:   for( i=0; i<2; i++ ) {
 20417   016EAE  0E00               	movlw	0
 20418   016EB0  0107               	movlb	7	; () banked
 20419   016EB2  6F14               	movwf	(load_config@i+1)& (0+255),b
 20420   016EB4  0E00               	movlw	0
 20421   016EB6  6F13               	movwf	load_config@i& (0+255),b
 20422   016EB8                     l25067:
 20423                           
 20424                           ; BSR set to: 7
 20425                           ;../src/w65_main.c: 446:    if ( !strstr(str, t_conf[i].conf )) continue;
 20426   016EB8  C711  F50B         	movff	load_config@str,strstr@h
 20427   016EBC  C712  F50C         	movff	load_config@str+1,strstr@h+1
 20428   016EC0  0EE6               	movlw	low _t_conf
 20429   016EC2  6F02               	movwf	??_load_config& (0+255),b
 20430   016EC4  0E07               	movlw	high _t_conf
 20431   016EC6  6F03               	movwf	(??_load_config+1)& (0+255),b
 20432   016EC8  90D8               	bcf	status,0,c
 20433   016ECA  3513               	rlcf	load_config@i& (0+255),w,b
 20434   016ECC  6ED9               	movwf	fsr2l,c
 20435   016ECE  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20436   016ED0  6EDA               	movwf	fsr2h,c
 20437   016ED2  90D8               	bcf	status,0,c
 20438   016ED4  36D9               	rlcf	fsr2l,f,c
 20439   016ED6  36DA               	rlcf	fsr2h,f,c
 20440   016ED8  5102               	movf	??_load_config& (0+255),w,b
 20441   016EDA  26D9               	addwf	fsr2l,f,c
 20442   016EDC  5103               	movf	(??_load_config+1)& (0+255),w,b
 20443   016EDE  22DA               	addwfc	fsr2h,f,c
 20444   016EE0  C4DE F50D          	movff	postinc2,strstr@n
 20445   016EE4  C4DD F50E          	movff	postdec2,strstr@n+1
 20446   016EE8  ECCF  F0EE         	call	_strstr	;wreg free
 20447   016EEC  500B               	movf	?_strstr^(0+1280),w,c
 20448   016EEE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 20449   016EF0  A4D8               	btfss	status,2,c
 20450   016EF2  EF7D  F0B7         	goto	u34751
 20451   016EF6  EF7F  F0B7         	goto	u34750
 20452   016EFA                     u34751:
 20453   016EFA  EF81  F0B7         	goto	l25071
 20454   016EFE                     u34750:
 20455   016EFE  EF74  F0B8         	goto	l25087
 20456   016F02                     l25071:
 20457                           
 20458                           ;../src/w65_main.c: 447:    if(str[strlen(t_conf[i].conf)] != '=') continue;
 20459   016F02  0EE6               	movlw	low _t_conf
 20460   016F04  0107               	movlb	7	; () banked
 20461   016F06  6F02               	movwf	??_load_config& (0+255),b
 20462   016F08  0E07               	movlw	high _t_conf
 20463   016F0A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20464   016F0C  90D8               	bcf	status,0,c
 20465   016F0E  3513               	rlcf	load_config@i& (0+255),w,b
 20466   016F10  6ED9               	movwf	fsr2l,c
 20467   016F12  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20468   016F14  6EDA               	movwf	fsr2h,c
 20469   016F16  90D8               	bcf	status,0,c
 20470   016F18  36D9               	rlcf	fsr2l,f,c
 20471   016F1A  36DA               	rlcf	fsr2h,f,c
 20472   016F1C  5102               	movf	??_load_config& (0+255),w,b
 20473   016F1E  26D9               	addwf	fsr2l,f,c
 20474   016F20  5103               	movf	(??_load_config+1)& (0+255),w,b
 20475   016F22  22DA               	addwfc	fsr2h,f,c
 20476   016F24  C4DE F504          	movff	postinc2,strlen@s
 20477   016F28  C4DD F505          	movff	postdec2,strlen@s+1
 20478   016F2C  ECB0  F0FC         	call	_strlen	;wreg free
 20479   016F30  5004               	movf	?_strlen^(0+1280),w,c
 20480   016F32  0107               	movlb	7	; () banked
 20481   016F34  2511               	addwf	load_config@str& (0+255),w,b
 20482   016F36  6ED9               	movwf	fsr2l,c
 20483   016F38  5005               	movf	(?_strlen+1)^(0+1280),w,c
 20484   016F3A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 20485   016F3C  6EDA               	movwf	fsr2h,c
 20486   016F3E  0E3D               	movlw	61
 20487   016F40  18DE               	xorwf	postinc2,w,c
 20488   016F42  B4D8               	btfsc	status,2,c
 20489   016F44  EFA6  F0B7         	goto	u34761
 20490   016F48  EFA8  F0B7         	goto	u34760
 20491   016F4C                     u34761:
 20492   016F4C  EFAA  F0B7         	goto	l25075
 20493   016F50                     u34760:
 20494   016F50  EF74  F0B8         	goto	l25087
 20495   016F54                     l25075:
 20496                           
 20497                           ; BSR set to: 7
 20498                           ;../src/w65_main.c: 450:    buf = &str[strlen(t_conf[i].conf)+1];
 20499   016F54  0EE6               	movlw	low _t_conf
 20500   016F56  6F02               	movwf	??_load_config& (0+255),b
 20501   016F58  0E07               	movlw	high _t_conf
 20502   016F5A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20503   016F5C  90D8               	bcf	status,0,c
 20504   016F5E  3513               	rlcf	load_config@i& (0+255),w,b
 20505   016F60  6ED9               	movwf	fsr2l,c
 20506   016F62  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20507   016F64  6EDA               	movwf	fsr2h,c
 20508   016F66  90D8               	bcf	status,0,c
 20509   016F68  36D9               	rlcf	fsr2l,f,c
 20510   016F6A  36DA               	rlcf	fsr2h,f,c
 20511   016F6C  5102               	movf	??_load_config& (0+255),w,b
 20512   016F6E  26D9               	addwf	fsr2l,f,c
 20513   016F70  5103               	movf	(??_load_config+1)& (0+255),w,b
 20514   016F72  22DA               	addwfc	fsr2h,f,c
 20515   016F74  C4DE F504          	movff	postinc2,strlen@s
 20516   016F78  C4DD F505          	movff	postdec2,strlen@s+1
 20517   016F7C  ECB0  F0FC         	call	_strlen	;wreg free
 20518   016F80  5004               	movf	?_strlen^(0+1280),w,c
 20519   016F82  0107               	movlb	7	; () banked
 20520   016F84  2511               	addwf	load_config@str& (0+255),w,b
 20521   016F86  6F04               	movwf	(??_load_config+2)& (0+255),b
 20522   016F88  5005               	movf	(?_strlen+1)^(0+1280),w,c
 20523   016F8A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 20524   016F8C  6F05               	movwf	(??_load_config+3)& (0+255),b
 20525   016F8E  0E01               	movlw	1
 20526   016F90  2504               	addwf	(??_load_config+2)& (0+255),w,b
 20527   016F92  6F0A               	movwf	load_config@buf& (0+255),b
 20528   016F94  0E00               	movlw	0
 20529   016F96  2105               	addwfc	(??_load_config+3)& (0+255),w,b
 20530   016F98  6F0B               	movwf	(load_config@buf+1)& (0+255),b
 20531   016F9A                     
 20532                           ; BSR set to: 7
 20533                           ;../src/w65_main.c: 451:    if (!(*(t_conf[i].val) = (uint32_t)(long)__strtoxl((const ch
      +                          ar *)buf,&a,0,1))) {
 20534   016F9A  C70A  F510         	movff	load_config@buf,___strtoxl@s
 20535   016F9E  C70B  F511         	movff	load_config@buf+1,___strtoxl@s+1
 20536   016FA2  0E0D               	movlw	low load_config@a
 20537   016FA4  6E12               	movwf	___strtoxl@endptr^(0+1280),c
 20538   016FA6  0E07               	movlw	high load_config@a
 20539   016FA8  6E13               	movwf	(___strtoxl@endptr+1)^(0+1280),c
 20540   016FAA  0E00               	movlw	0
 20541   016FAC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 20542   016FAE  0E00               	movlw	0
 20543   016FB0  6E14               	movwf	___strtoxl@base^(0+1280),c
 20544   016FB2  0E01               	movlw	1
 20545   016FB4  6E16               	movwf	___strtoxl@is_signed^(0+1280),c
 20546   016FB6  EC38  F0AC         	call	___strtoxl	;wreg free
 20547   016FBA  0EE6               	movlw	low _t_conf
 20548   016FBC  0107               	movlb	7	; () banked
 20549   016FBE  6F02               	movwf	??_load_config& (0+255),b
 20550   016FC0  0E07               	movlw	high _t_conf
 20551   016FC2  6F03               	movwf	(??_load_config+1)& (0+255),b
 20552   016FC4  0E02               	movlw	2
 20553   016FC6  2702               	addwf	??_load_config& (0+255),f,b
 20554   016FC8  0E00               	movlw	0
 20555   016FCA  2303               	addwfc	(??_load_config+1)& (0+255),f,b
 20556   016FCC  90D8               	bcf	status,0,c
 20557   016FCE  3513               	rlcf	load_config@i& (0+255),w,b
 20558   016FD0  6ED9               	movwf	fsr2l,c
 20559   016FD2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20560   016FD4  6EDA               	movwf	fsr2h,c
 20561   016FD6  90D8               	bcf	status,0,c
 20562   016FD8  36D9               	rlcf	fsr2l,f,c
 20563   016FDA  36DA               	rlcf	fsr2h,f,c
 20564   016FDC  5102               	movf	??_load_config& (0+255),w,b
 20565   016FDE  26D9               	addwf	fsr2l,f,c
 20566   016FE0  5103               	movf	(??_load_config+1)& (0+255),w,b
 20567   016FE2  22DA               	addwfc	fsr2h,f,c
 20568   016FE4  C4DE F704          	movff	postinc2,??_load_config+2
 20569   016FE8  C4DD F705          	movff	postdec2,??_load_config+3
 20570   016FEC  C704  F4D9         	movff	??_load_config+2,fsr2l
 20571   016FF0  C705  F4DA         	movff	??_load_config+3,fsr2h
 20572   016FF4  C510  F4DE         	movff	?___strtoxl,postinc2
 20573   016FF8  C511  F4DE         	movff	?___strtoxl+1,postinc2
 20574   016FFC  C512  F4DE         	movff	?___strtoxl+2,postinc2
 20575   017000  C513  F4DD         	movff	?___strtoxl+3,postdec2
 20576   017004  52DD               	movf	postdec2,f,c
 20577   017006  52DD               	movf	postdec2,f,c
 20578   017008  50DE               	movf	postinc2,w,c
 20579   01700A  10DE               	iorwf	postinc2,w,c
 20580   01700C  10DE               	iorwf	postinc2,w,c
 20581   01700E  10DE               	iorwf	postinc2,w,c
 20582   017010  A4D8               	btfss	status,2,c
 20583   017012  EF0D  F0B8         	goto	u34771
 20584   017016  EF0F  F0B8         	goto	u34770
 20585   01701A                     u34771:
 20586   01701A  EF34  F0B8         	goto	l25085
 20587   01701E                     u34770:
 20588   01701E                     
 20589                           ; BSR set to: 7
 20590                           ;../src/w65_main.c: 452:     printf("%s : invalid value!!\r\n",t_conf[i].conf);
 20591   01701E  0E7C               	movlw	low STR_88
 20592   017020  0105               	movlb	5	; () banked
 20593   017022  6FAD               	movwf	printf@fmt& (0+255),b
 20594   017024  0EFB               	movlw	high STR_88
 20595   017026  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20596   017028  0EE6               	movlw	low _t_conf
 20597   01702A  0107               	movlb	7	; () banked
 20598   01702C  6F02               	movwf	??_load_config& (0+255),b
 20599   01702E  0E07               	movlw	high _t_conf
 20600   017030  6F03               	movwf	(??_load_config+1)& (0+255),b
 20601   017032  90D8               	bcf	status,0,c
 20602   017034  3513               	rlcf	load_config@i& (0+255),w,b
 20603   017036  6ED9               	movwf	fsr2l,c
 20604   017038  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20605   01703A  6EDA               	movwf	fsr2h,c
 20606   01703C  90D8               	bcf	status,0,c
 20607   01703E  36D9               	rlcf	fsr2l,f,c
 20608   017040  36DA               	rlcf	fsr2h,f,c
 20609   017042  5102               	movf	??_load_config& (0+255),w,b
 20610   017044  26D9               	addwf	fsr2l,f,c
 20611   017046  5103               	movf	(??_load_config+1)& (0+255),w,b
 20612   017048  22DA               	addwfc	fsr2h,f,c
 20613   01704A  C4DE F5AF          	movff	postinc2,?_printf+2
 20614   01704E  C4DD F5B0          	movff	postdec2,?_printf+3
 20615   017052  ECDA  F0FF         	call	_printf	;wreg free
 20616                           
 20617                           ;../src/w65_main.c: 453:     f_close( &rom_fl );
 20618   017056  0ED6               	movlw	low _rom_fl
 20619   017058  0106               	movlb	6	; () banked
 20620   01705A  6F2F               	movwf	f_close@fp& (0+255),b
 20621   01705C  0E0F               	movlw	high _rom_fl
 20622   01705E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20623   017060  ECDB  F0FB         	call	_f_close	;wreg free
 20624   017064  EF31  F0B7         	goto	l25051
 20625   017068                     l25085:
 20626                           
 20627                           ; BSR set to: 7
 20628                           ;../src/w65_main.c: 456:    printf("%s : $%06lx\r\n", (const char *)t_conf[i].conf, *(t_
      +                          conf[i].val));
 20629   017068  0E34               	movlw	low STR_89
 20630   01706A  0105               	movlb	5	; () banked
 20631   01706C  6FAD               	movwf	printf@fmt& (0+255),b
 20632   01706E  0EFE               	movlw	high STR_89
 20633   017070  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20634   017072  0EE6               	movlw	low _t_conf
 20635   017074  0107               	movlb	7	; () banked
 20636   017076  6F02               	movwf	??_load_config& (0+255),b
 20637   017078  0E07               	movlw	high _t_conf
 20638   01707A  6F03               	movwf	(??_load_config+1)& (0+255),b
 20639   01707C  90D8               	bcf	status,0,c
 20640   01707E  3513               	rlcf	load_config@i& (0+255),w,b
 20641   017080  6ED9               	movwf	fsr2l,c
 20642   017082  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20643   017084  6EDA               	movwf	fsr2h,c
 20644   017086  90D8               	bcf	status,0,c
 20645   017088  36D9               	rlcf	fsr2l,f,c
 20646   01708A  36DA               	rlcf	fsr2h,f,c
 20647   01708C  5102               	movf	??_load_config& (0+255),w,b
 20648   01708E  26D9               	addwf	fsr2l,f,c
 20649   017090  5103               	movf	(??_load_config+1)& (0+255),w,b
 20650   017092  22DA               	addwfc	fsr2h,f,c
 20651   017094  C4DE F5AF          	movff	postinc2,?_printf+2
 20652   017098  C4DD F5B0          	movff	postdec2,?_printf+3
 20653   01709C  0EE6               	movlw	low _t_conf
 20654   01709E  6F04               	movwf	(??_load_config+2)& (0+255),b
 20655   0170A0  0E07               	movlw	high _t_conf
 20656   0170A2  6F05               	movwf	(??_load_config+3)& (0+255),b
 20657   0170A4  0E02               	movlw	2
 20658   0170A6  2704               	addwf	(??_load_config+2)& (0+255),f,b
 20659   0170A8  0E00               	movlw	0
 20660   0170AA  2305               	addwfc	(??_load_config+3)& (0+255),f,b
 20661   0170AC  90D8               	bcf	status,0,c
 20662   0170AE  3513               	rlcf	load_config@i& (0+255),w,b
 20663   0170B0  6ED9               	movwf	fsr2l,c
 20664   0170B2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 20665   0170B4  6EDA               	movwf	fsr2h,c
 20666   0170B6  90D8               	bcf	status,0,c
 20667   0170B8  36D9               	rlcf	fsr2l,f,c
 20668   0170BA  36DA               	rlcf	fsr2h,f,c
 20669   0170BC  5104               	movf	(??_load_config+2)& (0+255),w,b
 20670   0170BE  26D9               	addwf	fsr2l,f,c
 20671   0170C0  5105               	movf	(??_load_config+3)& (0+255),w,b
 20672   0170C2  22DA               	addwfc	fsr2h,f,c
 20673   0170C4  C4DE F706          	movff	postinc2,??_load_config+4
 20674   0170C8  C4DD F707          	movff	postdec2,??_load_config+5
 20675   0170CC  C706  F4D9         	movff	??_load_config+4,fsr2l
 20676   0170D0  C707  F4DA         	movff	??_load_config+5,fsr2h
 20677   0170D4  C4DE F5B1          	movff	postinc2,?_printf+4
 20678   0170D8  C4DE F5B2          	movff	postinc2,?_printf+5
 20679   0170DC  C4DE F5B3          	movff	postinc2,?_printf+6
 20680   0170E0  C4DE F5B4          	movff	postinc2,?_printf+7
 20681   0170E4  ECDA  F0FF         	call	_printf	;wreg free
 20682   0170E8                     l25087:
 20683   0170E8  0107               	movlb	7	; () banked
 20684   0170EA  4B13               	infsnz	load_config@i& (0+255),f,b
 20685   0170EC  2B14               	incf	(load_config@i+1)& (0+255),f,b
 20686   0170EE                     
 20687                           ; BSR set to: 7
 20688   0170EE  BF14               	btfsc	(load_config@i+1)& (0+255),7,b
 20689   0170F0  EF83  F0B8         	goto	u34781
 20690   0170F4  5114               	movf	(load_config@i+1)& (0+255),w,b
 20691   0170F6  E109               	bnz	u34780
 20692   0170F8  0E02               	movlw	2
 20693   0170FA  5D13               	subwf	load_config@i& (0+255),w,b
 20694   0170FC  A0D8               	btfss	status,0,c
 20695   0170FE  EF83  F0B8         	goto	u34781
 20696   017102  EF85  F0B8         	goto	u34780
 20697   017106                     u34781:
 20698   017106  EF5C  F0B7         	goto	l25067
 20699   01710A                     u34780:
 20700   01710A                     l25091:
 20701                           
 20702                           ;../src/w65_main.c: 437:  while ( f_gets(str, 80, &rom_fl) ) {
 20703   01710A  C711  F669         	movff	load_config@str,f_gets@buff
 20704   01710E  C712  F66A         	movff	load_config@str+1,f_gets@buff+1
 20705   017112  0E00               	movlw	0
 20706   017114  0106               	movlb	6	; () banked
 20707   017116  6F6C               	movwf	(f_gets@len+1)& (0+255),b
 20708   017118  0E50               	movlw	80
 20709   01711A  6F6B               	movwf	f_gets@len& (0+255),b
 20710   01711C  0ED6               	movlw	low _rom_fl
 20711   01711E  6F6D               	movwf	f_gets@fp& (0+255),b
 20712   017120  0E0F               	movlw	high _rom_fl
 20713   017122  6F6E               	movwf	(f_gets@fp+1)& (0+255),b
 20714   017124  EC90  F0EC         	call	_f_gets	;wreg free
 20715   017128  0106               	movlb	6	; () banked
 20716   01712A  5169               	movf	?_f_gets& (0+255),w,b
 20717   01712C  116A               	iorwf	(?_f_gets+1)& (0+255),w,b
 20718   01712E  A4D8               	btfss	status,2,c
 20719   017130  EF9C  F0B8         	goto	u34791
 20720   017134  EF9E  F0B8         	goto	u34790
 20721   017138                     u34791:
 20722   017138  EF36  F0B7         	goto	l25055
 20723   01713C                     u34790:
 20724   01713C                     
 20725                           ; BSR set to: 6
 20726                           ;../src/w65_main.c: 460:  if (!((int)((&rom_fl)->fptr == (&rom_fl)->obj.objsize))) {
 20727   01713C  EE23  F3E0         	lfsr	2,_rom_fl+10
 20728   017140  EE13  F3E6         	lfsr	1,_rom_fl+16
 20729   017144  50DE               	movf	postinc2,w,c
 20730   017146  18E6               	xorwf	postinc1,w,c
 20731   017148  E10F               	bnz	u34800
 20732   01714A  50DE               	movf	postinc2,w,c
 20733   01714C  18E6               	xorwf	postinc1,w,c
 20734   01714E  E10C               	bnz	u34800
 20735   017150  50DE               	movf	postinc2,w,c
 20736   017152  18E6               	xorwf	postinc1,w,c
 20737   017154  E109               	bnz	u34800
 20738   017156  50DE               	movf	postinc2,w,c
 20739   017158  18E6               	xorwf	postinc1,w,c
 20740   01715A  B4D8               	btfsc	status,2,c
 20741   01715C  EFB2  F0B8         	goto	u34801
 20742   017160  EFB4  F0B8         	goto	u34800
 20743   017164                     u34801:
 20744   017164  EFC4  F0B8         	goto	l25101
 20745   017168                     u34800:
 20746   017168                     
 20747                           ; BSR set to: 6
 20748                           ;../src/w65_main.c: 461:   printf("File read error!\r\n");
 20749   017168  0EE9               	movlw	low STR_90
 20750   01716A  0105               	movlb	5	; () banked
 20751   01716C  6FAD               	movwf	printf@fmt& (0+255),b
 20752   01716E  0EFC               	movlw	high STR_90
 20753   017170  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 20754   017172  ECDA  F0FF         	call	_printf	;wreg free
 20755                           
 20756                           ;../src/w65_main.c: 462:   f_close( &rom_fl );
 20757   017176  0ED6               	movlw	low _rom_fl
 20758   017178  0106               	movlb	6	; () banked
 20759   01717A  6F2F               	movwf	f_close@fp& (0+255),b
 20760   01717C  0E0F               	movlw	high _rom_fl
 20761   01717E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20762   017180  ECDB  F0FB         	call	_f_close	;wreg free
 20763   017184  EF31  F0B7         	goto	l25051
 20764   017188                     l25101:
 20765                           
 20766                           ; BSR set to: 6
 20767                           ;../src/w65_main.c: 465:  f_close( &rom_fl );
 20768   017188  0ED6               	movlw	low _rom_fl
 20769   01718A  6F2F               	movwf	f_close@fp& (0+255),b
 20770   01718C  0E0F               	movlw	high _rom_fl
 20771   01718E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 20772   017190  ECDB  F0FB         	call	_f_close	;wreg free
 20773   017194                     
 20774                           ;../src/w65_main.c: 466:  return 0;
 20775   017194  0E00               	movlw	0
 20776   017196  0107               	movlb	7	; () banked
 20777   017198  6F01               	movwf	(?_load_config+1)& (0+255),b
 20778   01719A  0E00               	movlw	0
 20779   01719C  6F00               	movwf	?_load_config& (0+255),b
 20780   01719E                     l1191:
 20781                           
 20782                           ; BSR set to: 7
 20783   01719E  0012               	return		;funcret
 20784   0171A0                     __end_of_load_config:
 20785                           	callstack 0
 20786                           
 20787 ;; *************** function _f_gets *****************
 20788 ;; Defined at:
 20789 ;;		line 6428 in file "../fatfs/ff.c"
 20790 ;; Parameters:    Size  Location     Type
 20791 ;;  buff            2  105[BANK6 ] PTR unsigned char 
 20792 ;;		 -> tmp_buf(512), 
 20793 ;;  len             2  107[BANK6 ] int 
 20794 ;;  fp              2  109[BANK6 ] PTR struct .
 20795 ;;		 -> rom_fl(546), 
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;  s               4  121[BANK6 ] unsigned char [4]
 20798 ;;  dc              4  115[BANK6 ] unsigned long 
 20799 ;;  rc              2  119[BANK6 ] unsigned int 
 20800 ;;  p               2  113[BANK6 ] PTR unsigned char 
 20801 ;;		 -> tmp_buf(512), 
 20802 ;;  nc              2  111[BANK6 ] int 
 20803 ;; Return value:  Size  Location     Type
 20804 ;;                  2  105[BANK6 ] PTR unsigned char 
 20805 ;; Registers used:
 20806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20807 ;; Tracked objects:
 20808 ;;		On entry : 0/0
 20809 ;;		On exit  : 0/0
 20810 ;;		Unchanged: 0/0
 20811 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20812 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20813 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20815 ;;      Totals:         0       1      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20816 ;;Total ram usage:       21 bytes
 20817 ;; Hardware stack levels used: 1
 20818 ;; Hardware stack levels required when called: 16
 20819 ;; This function calls:
 20820 ;;		_f_read
 20821 ;; This function is called by:
 20822 ;;		_load_config
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text39
 20827   01D920                     __ptext39:
 20828                           	callstack 0
 20829   01D920                     _f_gets:
 20830                           	callstack 109
 20831   01D920                     
 20832                           ;../fatfs/ff.c: 6429:  TCHAR* buff,;../fatfs/ff.c: 6430:  int len,;../fatfs/ff.c: 6431: 
      +                           FIL* fp;../fatfs/ff.c: 6433: {;../fatfs/ff.c: 6434:  int nc = 0;
 20833   01D920  0E00               	movlw	0
 20834   01D922  0106               	movlb	6	; () banked
 20835   01D924  6F70               	movwf	(f_gets@nc+1)& (0+255),b
 20836   01D926  0E00               	movlw	0
 20837   01D928  6F6F               	movwf	f_gets@nc& (0+255),b
 20838   01D92A                     
 20839                           ; BSR set to: 6
 20840                           ;../fatfs/ff.c: 6435:  TCHAR *p = buff;
 20841   01D92A  C669  F671         	movff	f_gets@buff,f_gets@p
 20842   01D92E  C66A  F672         	movff	f_gets@buff+1,f_gets@p+1
 20843   01D932                     
 20844                           ; BSR set to: 6
 20845                           ;../fatfs/ff.c: 6436:  BYTE s[4];;../fatfs/ff.c: 6437:  UINT rc;;../fatfs/ff.c: 6438:  D
      +                          WORD dc;;../fatfs/ff.c: 6536:  len -= 1;
 20846   01D932  076B               	decf	f_gets@len& (0+255),f,b
 20847   01D934  A0D8               	btfss	status,0,c
 20848   01D936  076C               	decf	(f_gets@len+1)& (0+255),f,b
 20849                           
 20850                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 20851   01D938  EFDA  F0EC         	goto	l24729
 20852   01D93C                     l24707:
 20853                           
 20854                           ; BSR set to: 5
 20855                           ;../fatfs/ff.c: 6538:   f_read(fp, s, 1, &rc);
 20856   01D93C  C66D  F63E         	movff	f_gets@fp,f_read@fp
 20857   01D940  C66E  F63F         	movff	f_gets@fp+1,f_read@fp+1
 20858   01D944  0E79               	movlw	low f_gets@s
 20859   01D946  0106               	movlb	6	; () banked
 20860   01D948  6F40               	movwf	f_read@buff& (0+255),b
 20861   01D94A  0E06               	movlw	high f_gets@s
 20862   01D94C  6F41               	movwf	(f_read@buff+1)& (0+255),b
 20863   01D94E  0E00               	movlw	0
 20864   01D950  6F43               	movwf	(f_read@btr+1)& (0+255),b
 20865   01D952  0E01               	movlw	1
 20866   01D954  6F42               	movwf	f_read@btr& (0+255),b
 20867   01D956  0E77               	movlw	low f_gets@rc
 20868   01D958  6F44               	movwf	f_read@br& (0+255),b
 20869   01D95A  0E06               	movlw	high f_gets@rc
 20870   01D95C  6F45               	movwf	(f_read@br+1)& (0+255),b
 20871   01D95E  EC9B  F096         	call	_f_read	;wreg free
 20872   01D962                     
 20873                           ;../fatfs/ff.c: 6539:   if (rc != 1) break;
 20874   01D962  0106               	movlb	6	; () banked
 20875   01D964  0577               	decf	f_gets@rc& (0+255),w,b
 20876   01D966  1178               	iorwf	(f_gets@rc+1)& (0+255),w,b
 20877   01D968  B4D8               	btfsc	status,2,c
 20878   01D96A  EFB9  F0EC         	goto	u34271
 20879   01D96E  EFBB  F0EC         	goto	u34270
 20880   01D972                     u34271:
 20881   01D972  EFBD  F0EC         	goto	l24713
 20882   01D976                     u34270:
 20883   01D976  EFEC  F0EC         	goto	l24731
 20884   01D97A                     l24713:
 20885                           
 20886                           ; BSR set to: 6
 20887                           ;../fatfs/ff.c: 6540:   dc = s[0];
 20888   01D97A  5179               	movf	f_gets@s& (0+255),w,b
 20889   01D97C  6F73               	movwf	f_gets@dc& (0+255),b
 20890   01D97E  6B74               	clrf	(f_gets@dc+1)& (0+255),b
 20891   01D980  6B75               	clrf	(f_gets@dc+2)& (0+255),b
 20892   01D982  6B76               	clrf	(f_gets@dc+3)& (0+255),b
 20893   01D984                     
 20894                           ; BSR set to: 6
 20895                           ;../fatfs/ff.c: 6542:   *p++ = (TCHAR)dc; nc++;
 20896   01D984  C671  F4D9         	movff	f_gets@p,fsr2l
 20897   01D988  C672  F4DA         	movff	f_gets@p+1,fsr2h
 20898   01D98C  C673  F4DF         	movff	f_gets@dc,indf2
 20899   01D990                     
 20900                           ; BSR set to: 6
 20901   01D990  4B71               	infsnz	f_gets@p& (0+255),f,b
 20902   01D992  2B72               	incf	(f_gets@p+1)& (0+255),f,b
 20903   01D994                     
 20904                           ; BSR set to: 6
 20905   01D994  4B6F               	infsnz	f_gets@nc& (0+255),f,b
 20906   01D996  2B70               	incf	(f_gets@nc+1)& (0+255),f,b
 20907   01D998                     
 20908                           ; BSR set to: 6
 20909                           ;../fatfs/ff.c: 6543:   if (dc == '\n') break;
 20910   01D998  0E0A               	movlw	10
 20911   01D99A  1973               	xorwf	f_gets@dc& (0+255),w,b
 20912   01D99C  1174               	iorwf	(f_gets@dc+1)& (0+255),w,b
 20913   01D99E  1175               	iorwf	(f_gets@dc+2)& (0+255),w,b
 20914   01D9A0  1176               	iorwf	(f_gets@dc+3)& (0+255),w,b
 20915   01D9A2  A4D8               	btfss	status,2,c
 20916   01D9A4  EFD6  F0EC         	goto	u34281
 20917   01D9A8  EFD8  F0EC         	goto	u34280
 20918   01D9AC                     u34281:
 20919   01D9AC  EFDA  F0EC         	goto	l24729
 20920   01D9B0                     u34280:
 20921   01D9B0  EFEC  F0EC         	goto	l24731
 20922   01D9B4                     l24729:
 20923                           
 20924                           ; BSR set to: 6
 20925                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 20926   01D9B4  516B               	movf	f_gets@len& (0+255),w,b
 20927   01D9B6  5D6F               	subwf	f_gets@nc& (0+255),w,b
 20928   01D9B8  5170               	movf	(f_gets@nc+1)& (0+255),w,b
 20929   01D9BA  0A80               	xorlw	128
 20930   01D9BC  0105               	movlb	5	; () banked
 20931   01D9BE  6FFF               	movwf	??_f_gets& (0+255),b
 20932   01D9C0  0106               	movlb	6	; () banked
 20933   01D9C2  516C               	movf	(f_gets@len+1)& (0+255),w,b
 20934   01D9C4  0A80               	xorlw	128
 20935   01D9C6  0105               	movlb	5	; () banked
 20936   01D9C8  59FF               	subwfb	??_f_gets& (0+255),w,b
 20937   01D9CA  A0D8               	btfss	status,0,c
 20938   01D9CC  EFEA  F0EC         	goto	u34291
 20939   01D9D0  EFEC  F0EC         	goto	u34290
 20940   01D9D4                     u34291:
 20941   01D9D4  EF9E  F0EC         	goto	l24707
 20942   01D9D8                     u34290:
 20943   01D9D8                     l24731:
 20944                           
 20945                           ;../fatfs/ff.c: 6547:  *p = 0;
 20946   01D9D8  C671  F4D9         	movff	f_gets@p,fsr2l
 20947   01D9DC  C672  F4DA         	movff	f_gets@p+1,fsr2h
 20948   01D9E0  6ADF               	clrf	indf2,c
 20949   01D9E2                     
 20950                           ;../fatfs/ff.c: 6548:  return nc ? buff : 0;
 20951   01D9E2  0106               	movlb	6	; () banked
 20952   01D9E4  516F               	movf	f_gets@nc& (0+255),w,b
 20953   01D9E6  1170               	iorwf	(f_gets@nc+1)& (0+255),w,b
 20954   01D9E8  A4D8               	btfss	status,2,c
 20955   01D9EA  EFF9  F0EC         	goto	u34301
 20956   01D9EE  EFFB  F0EC         	goto	u34300
 20957   01D9F2                     u34301:
 20958   01D9F2  EF01  F0ED         	goto	l24737
 20959   01D9F6                     u34300:
 20960   01D9F6                     
 20961                           ; BSR set to: 6
 20962   01D9F6  0E00               	movlw	0
 20963   01D9F8  6F69               	movwf	?_f_gets& (0+255),b
 20964   01D9FA  0E00               	movlw	0
 20965   01D9FC  6F6A               	movwf	(?_f_gets+1)& (0+255),b
 20966   01D9FE  EF05  F0ED         	goto	l2226
 20967   01DA02                     l24737:
 20968                           
 20969                           ; BSR set to: 6
 20970   01DA02  C669  F669         	movff	f_gets@buff,?_f_gets
 20971   01DA06  C66A  F66A         	movff	f_gets@buff+1,?_f_gets+1
 20972   01DA0A                     l2226:
 20973                           
 20974                           ; BSR set to: 6
 20975   01DA0A  0012               	return		;funcret
 20976   01DA0C                     __end_of_f_gets:
 20977                           	callstack 0
 20978                           
 20979 ;; *************** function _del_space *****************
 20980 ;; Defined at:
 20981 ;;		line 401 in file "../src/w65_main.c"
 20982 ;; Parameters:    Size  Location     Type
 20983 ;;  bytes           2    3[COMRAM] PTR unsigned char 
 20984 ;;		 -> tmp_buf(512), 
 20985 ;; Auto vars:     Size  Location     Type
 20986 ;;  c               1    8[COMRAM] unsigned char 
 20987 ;;  pos             1    7[COMRAM] unsigned char 
 20988 ;;  i               1    6[COMRAM] unsigned char 
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  1    wreg      unsigned char 
 20991 ;; Registers used:
 20992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21001 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21002 ;;Total ram usage:        6 bytes
 21003 ;; Hardware stack levels used: 1
 21004 ;; Hardware stack levels required when called: 1
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_load_config
 21009 ;; This function uses a non-reentrant model
 21010 ;;
 21011                           
 21012                           	psect	text40
 21013   01EFD2                     __ptext40:
 21014                           	callstack 0
 21015   01EFD2                     _del_space:
 21016                           	callstack 124
 21017   01EFD2                     
 21018                           ;../src/w65_main.c: 402:  uint8_t pos = 0;
 21019   01EFD2  6A08               	clrf	del_space@pos^(0+1280),c
 21020                           
 21021                           ;../src/w65_main.c: 403:  uint8_t i = 0;
 21022   01EFD4  6A07               	clrf	del_space@i^(0+1280),c
 21023                           
 21024                           ;../src/w65_main.c: 404:  char c;;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 21025   01EFD6  EF13  F0F8         	goto	l16879
 21026   01EFDA                     l16869:
 21027                           
 21028                           ;../src/w65_main.c: 407:   if (c == '\r' || c == '\n' || c == ' ') {
 21029   01EFDA  0E0D               	movlw	13
 21030   01EFDC  1809               	xorwf	del_space@c^(0+1280),w,c
 21031   01EFDE  B4D8               	btfsc	status,2,c
 21032   01EFE0  EFF4  F0F7         	goto	u21471
 21033   01EFE4  EFF6  F0F7         	goto	u21470
 21034   01EFE8                     u21471:
 21035   01EFE8  EF13  F0F8         	goto	l16879
 21036   01EFEC                     u21470:
 21037   01EFEC  0E0A               	movlw	10
 21038   01EFEE  1809               	xorwf	del_space@c^(0+1280),w,c
 21039   01EFF0  B4D8               	btfsc	status,2,c
 21040   01EFF2  EFFD  F0F7         	goto	u21481
 21041   01EFF6  EFFF  F0F7         	goto	u21480
 21042   01EFFA                     u21481:
 21043   01EFFA  EF13  F0F8         	goto	l16879
 21044   01EFFE                     u21480:
 21045   01EFFE  0E20               	movlw	32
 21046   01F000  1809               	xorwf	del_space@c^(0+1280),w,c
 21047   01F002  A4D8               	btfss	status,2,c
 21048   01F004  EF06  F0F8         	goto	u21491
 21049   01F008  EF08  F0F8         	goto	u21490
 21050   01F00C                     u21491:
 21051   01F00C  EF0A  F0F8         	goto	l16875
 21052   01F010                     u21490:
 21053   01F010  EF13  F0F8         	goto	l16879
 21054   01F014                     l16875:
 21055                           
 21056                           ;../src/w65_main.c: 410:   bytes[pos++] = c;
 21057   01F014  5008               	movf	del_space@pos^(0+1280),w,c
 21058   01F016  2404               	addwf	del_space@bytes^(0+1280),w,c
 21059   01F018  6ED9               	movwf	fsr2l,c
 21060   01F01A  0E00               	movlw	0
 21061   01F01C  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21062   01F01E  6EDA               	movwf	fsr2h,c
 21063   01F020  C509  F4DF         	movff	del_space@c,indf2
 21064   01F024  2A08               	incf	del_space@pos^(0+1280),f,c
 21065   01F026                     l16879:
 21066                           
 21067                           ;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 21068   01F026  2A07               	incf	del_space@i^(0+1280),f,c
 21069   01F028  0407               	decf	del_space@i^(0+1280),w,c
 21070   01F02A  6E06               	movwf	??_del_space^(0+1280),c
 21071   01F02C  5006               	movf	??_del_space^(0+1280),w,c
 21072   01F02E  2404               	addwf	del_space@bytes^(0+1280),w,c
 21073   01F030  6ED9               	movwf	fsr2l,c
 21074   01F032  0E00               	movlw	0
 21075   01F034  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21076   01F036  6EDA               	movwf	fsr2h,c
 21077   01F038  50DF               	movf	indf2,w,c
 21078   01F03A  6E09               	movwf	del_space@c^(0+1280),c
 21079   01F03C  5009               	movf	del_space@c^(0+1280),w,c
 21080   01F03E  A4D8               	btfss	status,2,c
 21081   01F040  EF24  F0F8         	goto	u21501
 21082   01F044  EF26  F0F8         	goto	u21500
 21083   01F048                     u21501:
 21084   01F048  EFED  F0F7         	goto	l16869
 21085   01F04C                     u21500:
 21086   01F04C                     
 21087                           ;../src/w65_main.c: 412:  bytes[pos] = c;
 21088   01F04C  5008               	movf	del_space@pos^(0+1280),w,c
 21089   01F04E  2404               	addwf	del_space@bytes^(0+1280),w,c
 21090   01F050  6ED9               	movwf	fsr2l,c
 21091   01F052  0E00               	movlw	0
 21092   01F054  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 21093   01F056  6EDA               	movwf	fsr2h,c
 21094   01F058  C509  F4DF         	movff	del_space@c,indf2
 21095   01F05C  0012               	return		;funcret
 21096   01F05E                     __end_of_del_space:
 21097                           	callstack 0
 21098                           
 21099 ;; *************** function ___strtoxl *****************
 21100 ;; Defined at:
 21101 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__strtoxl.c"
 21102 ;; Parameters:    Size  Location     Type
 21103 ;;  s               2   15[COMRAM] PTR const unsigned char 
 21104 ;;		 -> tmp_buf(512), 
 21105 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
 21106 ;;		 -> load_config@a(2), 
 21107 ;;  base            2   19[COMRAM] int 
 21108 ;;  is_signed       1   21[COMRAM] unsigned char 
 21109 ;; Auto vars:     Size  Location     Type
 21110 ;;  a               4   38[COMRAM] unsigned long 
 21111 ;;  limit           4   33[COMRAM] unsigned long 
 21112 ;;  prev_a          4   25[COMRAM] unsigned long 
 21113 ;;  cp              2   42[COMRAM] PTR const unsigned char 
 21114 ;;		 -> tmp_buf(512), 
 21115 ;;  c               1   44[COMRAM] unsigned char 
 21116 ;;  flags           1   37[COMRAM] enum E246
 21117 ;; Return value:  Size  Location     Type
 21118 ;;                  4   15[COMRAM] unsigned long 
 21119 ;; Registers used:
 21120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21121 ;; Tracked objects:
 21122 ;;		On entry : 0/0
 21123 ;;		On exit  : 0/0
 21124 ;;		Unchanged: 0/0
 21125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21126 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21127 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21128 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21129 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21130 ;;Total ram usage:       30 bytes
 21131 ;; Hardware stack levels used: 1
 21132 ;; Hardware stack levels required when called: 2
 21133 ;; This function calls:
 21134 ;;		___lmul
 21135 ;; This function is called by:
 21136 ;;		_load_config
 21137 ;; This function uses a non-reentrant model
 21138 ;;
 21139                           
 21140                           	psect	text41
 21141   015870                     __ptext41:
 21142                           	callstack 0
 21143   015870                     ___strtoxl:
 21144                           	callstack 123
 21145   015870  6A26               	clrf	___strtoxl@flags^(0+1280),c
 21146   015872  0E00               	movlw	0
 21147   015874  6E27               	movwf	___strtoxl@a^(0+1280),c
 21148   015876  0E00               	movlw	0
 21149   015878  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 21150   01587A  0E00               	movlw	0
 21151   01587C  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 21152   01587E  0E00               	movlw	0
 21153   015880  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 21154   015882  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 21155   015886  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 21156   01588A  BE15               	btfsc	(___strtoxl@base+1)^(0+1280),7,c
 21157   01588C  EF53  F0AC         	goto	u33940
 21158   015890  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 21159   015892  E107               	bnz	u33941
 21160   015894  0E25               	movlw	37
 21161   015896  5C14               	subwf	___strtoxl@base^(0+1280),w,c
 21162   015898  B0D8               	btfsc	status,0,c
 21163   01589A  EF51  F0AC         	goto	u33941
 21164   01589E  EF53  F0AC         	goto	u33940
 21165   0158A2                     u33941:
 21166   0158A2  EF5C  F0AC         	goto	l24583
 21167   0158A6                     u33940:
 21168   0158A6  0414               	decf	___strtoxl@base^(0+1280),w,c
 21169   0158A8  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21170   0158AA  A4D8               	btfss	status,2,c
 21171   0158AC  EF5A  F0AC         	goto	u33951
 21172   0158B0  EF5C  F0AC         	goto	u33950
 21173   0158B4                     u33951:
 21174   0158B4  EF63  F0AC         	goto	l24585
 21175   0158B8                     u33950:
 21176   0158B8                     l24583:
 21177   0158B8  0E00               	movlw	0
 21178   0158BA  0107               	movlb	7	; () banked
 21179   0158BC  6FB4               	movwf	(_errno+1)& (0+255),b
 21180   0158BE  0E16               	movlw	22
 21181   0158C0  6FB3               	movwf	_errno& (0+255),b
 21182   0158C2  EF61  F0AE         	goto	l24689
 21183   0158C6                     l24585:
 21184   0158C6  502B               	movf	___strtoxl@cp^(0+1280),w,c
 21185   0158C8  102C               	iorwf	(___strtoxl@cp+1)^(0+1280),w,c
 21186   0158CA  B4D8               	btfsc	status,2,c
 21187   0158CC  EF6A  F0AC         	goto	u33961
 21188   0158D0  EF6C  F0AC         	goto	u33960
 21189   0158D4                     u33961:
 21190   0158D4  EF61  F0AE         	goto	l24689
 21191   0158D8                     u33960:
 21192   0158D8  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21193   0158DC  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21194   0158E0  50DF               	movf	indf2,w,c
 21195   0158E2  A4D8               	btfss	status,2,c
 21196   0158E4  EF76  F0AC         	goto	u33971
 21197   0158E8  EF78  F0AC         	goto	u33970
 21198   0158EC                     u33971:
 21199   0158EC  EF7A  F0AC         	goto	l24589
 21200   0158F0                     u33970:
 21201   0158F0  EF61  F0AE         	goto	l24689
 21202   0158F4                     l24589:
 21203   0158F4  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21204   0158F8  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21205   0158FC  50DF               	movf	indf2,w,c
 21206   0158FE  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21207   015900  EF8A  F0AC         	goto	l24593
 21208   015904                     l24591:
 21209   015904  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21210   015906  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21211   015908  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21212   01590C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21213   015910  50DF               	movf	indf2,w,c
 21214   015912  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21215   015914                     l24593:
 21216   015914  0E20               	movlw	32
 21217   015916  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21218   015918  B4D8               	btfsc	status,2,c
 21219   01591A  EF91  F0AC         	goto	u33981
 21220   01591E  EF93  F0AC         	goto	u33980
 21221   015922                     u33981:
 21222   015922  EF82  F0AC         	goto	l24591
 21223   015926                     u33980:
 21224   015926  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21225   01592A  0EF7               	movlw	247
 21226   01592C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21227   01592E  0E04               	movlw	4
 21228   015930  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21229   015932  EF9D  F0AC         	goto	u33991
 21230   015936  EF9F  F0AC         	goto	u33990
 21231   01593A                     u33991:
 21232   01593A  EF82  F0AC         	goto	l24591
 21233   01593E                     u33990:
 21234   01593E  0E2D               	movlw	45
 21235   015940  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21236   015942  A4D8               	btfss	status,2,c
 21237   015944  EFA6  F0AC         	goto	u34001
 21238   015948  EFA8  F0AC         	goto	u34000
 21239   01594C                     u34001:
 21240   01594C  EFB4  F0AC         	goto	l24603
 21241   015950                     u34000:
 21242   015950  0E01               	movlw	1
 21243   015952  6E26               	movwf	___strtoxl@flags^(0+1280),c
 21244   015954                     l24601:
 21245   015954  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21246   015956  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21247   015958  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21248   01595C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21249   015960  50DF               	movf	indf2,w,c
 21250   015962  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21251   015964  EFBF  F0AC         	goto	l24607
 21252   015968                     l24603:
 21253   015968  0E2B               	movlw	43
 21254   01596A  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21255   01596C  A4D8               	btfss	status,2,c
 21256   01596E  EFBB  F0AC         	goto	u34011
 21257   015972  EFBD  F0AC         	goto	u34010
 21258   015976                     u34011:
 21259   015976  EFBF  F0AC         	goto	l24607
 21260   01597A                     u34010:
 21261   01597A  EFAA  F0AC         	goto	l24601
 21262   01597E                     l24607:
 21263   01597E  0E30               	movlw	48
 21264   015980  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21265   015982  A4D8               	btfss	status,2,c
 21266   015984  EFC6  F0AC         	goto	u34021
 21267   015988  EFC8  F0AC         	goto	u34020
 21268   01598C                     u34021:
 21269   01598C  EF61  F0AD         	goto	l24643
 21270   015990                     u34020:
 21271   015990  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21272   015992  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21273   015994  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21274   015998  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21275   01599C  50DF               	movf	indf2,w,c
 21276   01599E  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21277   0159A0  5014               	movf	___strtoxl@base^(0+1280),w,c
 21278   0159A2  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21279   0159A4  B4D8               	btfsc	status,2,c
 21280   0159A6  EFD7  F0AC         	goto	u34031
 21281   0159AA  EFD9  F0AC         	goto	u34030
 21282   0159AE                     u34031:
 21283   0159AE  EFE3  F0AC         	goto	l24615
 21284   0159B2                     u34030:
 21285   0159B2  0E10               	movlw	16
 21286   0159B4  1814               	xorwf	___strtoxl@base^(0+1280),w,c
 21287   0159B6  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21288   0159B8  A4D8               	btfss	status,2,c
 21289   0159BA  EFE1  F0AC         	goto	u34041
 21290   0159BE  EFE3  F0AC         	goto	u34040
 21291   0159C2                     u34041:
 21292   0159C2  EF53  F0AD         	goto	l24637
 21293   0159C6                     u34040:
 21294   0159C6                     l24615:
 21295   0159C6  0E78               	movlw	120
 21296   0159C8  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21297   0159CA  B4D8               	btfsc	status,2,c
 21298   0159CC  EFEA  F0AC         	goto	u34051
 21299   0159D0  EFEC  F0AC         	goto	u34050
 21300   0159D4                     u34051:
 21301   0159D4  EFF5  F0AC         	goto	l24619
 21302   0159D8                     u34050:
 21303   0159D8  0E58               	movlw	88
 21304   0159DA  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 21305   0159DC  A4D8               	btfss	status,2,c
 21306   0159DE  EFF3  F0AC         	goto	u34061
 21307   0159E2  EFF5  F0AC         	goto	u34060
 21308   0159E6                     u34061:
 21309   0159E6  EF53  F0AD         	goto	l24637
 21310   0159EA                     u34060:
 21311   0159EA                     l24619:
 21312   0159EA  0E00               	movlw	0
 21313   0159EC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21314   0159EE  0E10               	movlw	16
 21315   0159F0  6E14               	movwf	___strtoxl@base^(0+1280),c
 21316   0159F2  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21317   0159F4  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21318   0159F6  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21319   0159FA  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21320   0159FE  50DF               	movf	indf2,w,c
 21321   015A00  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21322   015A02  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21323   015A06  0E20               	movlw	32
 21324   015A08  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21325   015A0A  0E9F               	movlw	159
 21326   015A0C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21327   015A0E  0E1A               	movlw	26
 21328   015A10  6017               	cpfslt	??___strtoxl^(0+1280),c
 21329   015A12  EF0D  F0AD         	goto	u34071
 21330   015A16  EF0F  F0AD         	goto	u34070
 21331   015A1A                     u34071:
 21332   015A1A  EF33  F0AD         	goto	l24631
 21333   015A1E                     u34070:
 21334   015A1E  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21335   015A22  0E9F               	movlw	159
 21336   015A24  2617               	addwf	??___strtoxl^(0+1280),f,c
 21337   015A26  0E19               	movlw	25
 21338   015A28  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21339   015A2A  EF19  F0AD         	goto	u34081
 21340   015A2E  EF1B  F0AD         	goto	u34080
 21341   015A32                     u34081:
 21342   015A32  EF20  F0AD         	goto	l24629
 21343   015A36                     u34080:
 21344   015A36  C52D  F51E         	movff	___strtoxl@c,___strtoxl$4682
 21345   015A3A  6A1F               	clrf	(___strtoxl$4682+1)^(0+1280),c
 21346   015A3C  EF27  F0AD         	goto	l3341
 21347   015A40                     l24629:
 21348   015A40  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21349   015A44  0E5F               	movlw	95
 21350   015A46  1617               	andwf	??___strtoxl^(0+1280),f,c
 21351   015A48  5017               	movf	??___strtoxl^(0+1280),w,c
 21352   015A4A  6E1E               	movwf	___strtoxl$4682^(0+1280),c
 21353   015A4C  6A1F               	clrf	(___strtoxl$4682+1)^(0+1280),c
 21354   015A4E                     l3341:
 21355   015A4E  C51E  F517         	movff	___strtoxl$4682,??___strtoxl
 21356   015A52  0EC9               	movlw	201
 21357   015A54  2617               	addwf	??___strtoxl^(0+1280),f,c
 21358   015A56  0E10               	movlw	16
 21359   015A58  6017               	cpfslt	??___strtoxl^(0+1280),c
 21360   015A5A  EF31  F0AD         	goto	u34091
 21361   015A5E  EF33  F0AD         	goto	u34090
 21362   015A62                     u34091:
 21363   015A62  EF4D  F0AD         	goto	l24635
 21364   015A66                     u34090:
 21365   015A66                     l24631:
 21366   015A66  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21367   015A6A  0E20               	movlw	32
 21368   015A6C  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21369   015A6E  0E9F               	movlw	159
 21370   015A70  2617               	addwf	??___strtoxl^(0+1280),f,c
 21371   015A72  0E19               	movlw	25
 21372   015A74  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21373   015A76  EF3F  F0AD         	goto	u34101
 21374   015A7A  EF41  F0AD         	goto	u34100
 21375   015A7E                     u34101:
 21376   015A7E  EF61  F0AD         	goto	l24643
 21377   015A82                     u34100:
 21378   015A82  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21379   015A86  0ED0               	movlw	208
 21380   015A88  2617               	addwf	??___strtoxl^(0+1280),f,c
 21381   015A8A  0E09               	movlw	9
 21382   015A8C  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21383   015A8E  EF4B  F0AD         	goto	u34111
 21384   015A92  EF4D  F0AD         	goto	u34110
 21385   015A96                     u34111:
 21386   015A96  EF61  F0AD         	goto	l24643
 21387   015A9A                     u34110:
 21388   015A9A                     l24635:
 21389   015A9A  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21390   015A9C  062B               	decf	___strtoxl@cp^(0+1280),f,c
 21391   015A9E  A0D8               	btfss	status,0,c
 21392   015AA0  062C               	decf	(___strtoxl@cp+1)^(0+1280),f,c
 21393   015AA2  EF61  F0AE         	goto	l24689
 21394   015AA6                     l24637:
 21395   015AA6  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21396   015AA8  5014               	movf	___strtoxl@base^(0+1280),w,c
 21397   015AAA  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21398   015AAC  A4D8               	btfss	status,2,c
 21399   015AAE  EF5B  F0AD         	goto	u34121
 21400   015AB2  EF5D  F0AD         	goto	u34120
 21401   015AB6                     u34121:
 21402   015AB6  EF61  F0AD         	goto	l24643
 21403   015ABA                     u34120:
 21404   015ABA  0E00               	movlw	0
 21405   015ABC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21406   015ABE  0E08               	movlw	8
 21407   015AC0  6E14               	movwf	___strtoxl@base^(0+1280),c
 21408   015AC2                     l24643:
 21409   015AC2  5014               	movf	___strtoxl@base^(0+1280),w,c
 21410   015AC4  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 21411   015AC6  A4D8               	btfss	status,2,c
 21412   015AC8  EF68  F0AD         	goto	u34131
 21413   015ACC  EF6A  F0AD         	goto	u34130
 21414   015AD0                     u34131:
 21415   015AD0  EF6E  F0AD         	goto	l3344
 21416   015AD4                     u34130:
 21417   015AD4  0E00               	movlw	0
 21418   015AD6  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 21419   015AD8  0E0A               	movlw	10
 21420   015ADA  6E14               	movwf	___strtoxl@base^(0+1280),c
 21421   015ADC                     l3344:
 21422   015ADC  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 21423   015ADE  B4D8               	btfsc	status,2,c
 21424   015AE0  EF74  F0AD         	goto	u34141
 21425   015AE4  EF76  F0AD         	goto	u34140
 21426   015AE8                     u34141:
 21427   015AE8  EF91  F0AD         	goto	l3345
 21428   015AEC                     u34140:
 21429   015AEC  B026               	btfsc	___strtoxl@flags^(0+1280),0,c
 21430   015AEE  EF7B  F0AD         	goto	u34151
 21431   015AF2  EF7D  F0AD         	goto	u34150
 21432   015AF6                     u34151:
 21433   015AF6  EF87  F0AD         	goto	l24651
 21434   015AFA                     u34150:
 21435   015AFA  0EFF               	movlw	255
 21436   015AFC  6E22               	movwf	___strtoxl@limit^(0+1280),c
 21437   015AFE  0EFF               	movlw	255
 21438   015B00  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 21439   015B02  0EFF               	movlw	255
 21440   015B04  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 21441   015B06  0E7F               	movlw	127
 21442   015B08  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 21443   015B0A  EF95  F0AD         	goto	l3351
 21444   015B0E                     l24651:
 21445   015B0E  0E00               	movlw	0
 21446   015B10  6E22               	movwf	___strtoxl@limit^(0+1280),c
 21447   015B12  0E00               	movlw	0
 21448   015B14  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 21449   015B16  0E00               	movlw	0
 21450   015B18  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 21451   015B1A  0E80               	movlw	128
 21452   015B1C  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 21453   015B1E  EF95  F0AD         	goto	l3351
 21454   015B22                     l3345:
 21455   015B22  6822               	setf	___strtoxl@limit^(0+1280),c
 21456   015B24  6823               	setf	(___strtoxl@limit+1)^(0+1280),c
 21457   015B26  6824               	setf	(___strtoxl@limit+2)^(0+1280),c
 21458   015B28  6825               	setf	(___strtoxl@limit+3)^(0+1280),c
 21459   015B2A                     l3351:
 21460   015B2A  C527  F51A         	movff	___strtoxl@a,___strtoxl@prev_a
 21461   015B2E  C528  F51B         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
 21462   015B32  C529  F51C         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
 21463   015B36  C52A  F51D         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
 21464   015B3A  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21465   015B3E  0E20               	movlw	32
 21466   015B40  1217               	iorwf	??___strtoxl^(0+1280),f,c
 21467   015B42  0E9F               	movlw	159
 21468   015B44  2617               	addwf	??___strtoxl^(0+1280),f,c
 21469   015B46  0E1A               	movlw	26
 21470   015B48  6017               	cpfslt	??___strtoxl^(0+1280),c
 21471   015B4A  EFA9  F0AD         	goto	u34161
 21472   015B4E  EFAB  F0AD         	goto	u34160
 21473   015B52                     u34161:
 21474   015B52  EFC8  F0AD         	goto	l24661
 21475   015B56                     u34160:
 21476   015B56  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21477   015B5A  0E9F               	movlw	159
 21478   015B5C  2617               	addwf	??___strtoxl^(0+1280),f,c
 21479   015B5E  0E19               	movlw	25
 21480   015B60  6417               	cpfsgt	??___strtoxl^(0+1280),c
 21481   015B62  EFB5  F0AD         	goto	u34171
 21482   015B66  EFB7  F0AD         	goto	u34170
 21483   015B6A                     u34171:
 21484   015B6A  EFBC  F0AD         	goto	l24659
 21485   015B6E                     u34170:
 21486   015B6E  C52D  F520         	movff	___strtoxl@c,___strtoxl$4683
 21487   015B72  6A21               	clrf	(___strtoxl$4683+1)^(0+1280),c
 21488   015B74  EFC3  F0AD         	goto	l3356
 21489   015B78                     l24659:
 21490   015B78  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21491   015B7C  0E5F               	movlw	95
 21492   015B7E  1617               	andwf	??___strtoxl^(0+1280),f,c
 21493   015B80  5017               	movf	??___strtoxl^(0+1280),w,c
 21494   015B82  6E20               	movwf	___strtoxl$4683^(0+1280),c
 21495   015B84  6A21               	clrf	(___strtoxl$4683+1)^(0+1280),c
 21496   015B86                     l3356:
 21497   015B86  5020               	movf	___strtoxl$4683^(0+1280),w,c
 21498   015B88  0FC9               	addlw	201
 21499   015B8A  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21500   015B8C  EFD6  F0AD         	goto	l24665
 21501   015B90                     l24661:
 21502   015B90  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 21503   015B94  0ED0               	movlw	208
 21504   015B96  2617               	addwf	??___strtoxl^(0+1280),f,c
 21505   015B98  0E0A               	movlw	10
 21506   015B9A  6017               	cpfslt	??___strtoxl^(0+1280),c
 21507   015B9C  EFD2  F0AD         	goto	u34181
 21508   015BA0  EFD4  F0AD         	goto	u34180
 21509   015BA4                     u34181:
 21510   015BA4  EF4F  F0AE         	goto	l24685
 21511   015BA8                     u34180:
 21512   015BA8  0E30               	movlw	48
 21513   015BAA  5E2D               	subwf	___strtoxl@c^(0+1280),f,c
 21514   015BAC                     l24665:
 21515   015BAC  502D               	movf	___strtoxl@c^(0+1280),w,c
 21516   015BAE  6E17               	movwf	??___strtoxl^(0+1280),c
 21517   015BB0  6A18               	clrf	(??___strtoxl+1)^(0+1280),c
 21518   015BB2  5014               	movf	___strtoxl@base^(0+1280),w,c
 21519   015BB4  5C17               	subwf	??___strtoxl^(0+1280),w,c
 21520   015BB6  5018               	movf	(??___strtoxl+1)^(0+1280),w,c
 21521   015BB8  0A80               	xorlw	128
 21522   015BBA  6E19               	movwf	(??___strtoxl+2)^(0+1280),c
 21523   015BBC  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 21524   015BBE  0A80               	xorlw	128
 21525   015BC0  5819               	subwfb	(??___strtoxl+2)^(0+1280),w,c
 21526   015BC2  A0D8               	btfss	status,0,c
 21527   015BC4  EFE6  F0AD         	goto	u34191
 21528   015BC8  EFE8  F0AD         	goto	u34190
 21529   015BCC                     u34191:
 21530   015BCC  EFEA  F0AD         	goto	l3361
 21531   015BD0                     u34190:
 21532   015BD0  EF4F  F0AE         	goto	l24685
 21533   015BD4                     l3361:
 21534   015BD4  B226               	btfsc	___strtoxl@flags^(0+1280),1,c
 21535   015BD6  EFEF  F0AD         	goto	u34201
 21536   015BDA  EFF1  F0AD         	goto	u34200
 21537   015BDE                     u34201:
 21538   015BDE  EF44  F0AE         	goto	l24681
 21539   015BE2                     u34200:
 21540   015BE2  C514  F504         	movff	___strtoxl@base,___lmul@multiplier
 21541   015BE6  C515  F505         	movff	___strtoxl@base+1,___lmul@multiplier+1
 21542   015BEA  0E00               	movlw	0
 21543   015BEC  BE05               	btfsc	(___lmul@multiplier+1)^(0+1280),7,c
 21544   015BEE  0EFF               	movlw	-1
 21545   015BF0  6E06               	movwf	(___lmul@multiplier+2)^(0+1280),c
 21546   015BF2  6E07               	movwf	(___lmul@multiplier+3)^(0+1280),c
 21547   015BF4  C527  F508         	movff	___strtoxl@a,___lmul@multiplicand
 21548   015BF8  C528  F509         	movff	___strtoxl@a+1,___lmul@multiplicand+1
 21549   015BFC  C529  F50A         	movff	___strtoxl@a+2,___lmul@multiplicand+2
 21550   015C00  C52A  F50B         	movff	___strtoxl@a+3,___lmul@multiplicand+3
 21551   015C04  EC13  F0FB         	call	___lmul	;wreg free
 21552   015C08  502D               	movf	___strtoxl@c^(0+1280),w,c
 21553   015C0A  2404               	addwf	?___lmul^(0+1280),w,c
 21554   015C0C  6E27               	movwf	___strtoxl@a^(0+1280),c
 21555   015C0E  0E00               	movlw	0
 21556   015C10  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 21557   015C12  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 21558   015C14  0E00               	movlw	0
 21559   015C16  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 21560   015C18  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 21561   015C1A  0E00               	movlw	0
 21562   015C1C  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 21563   015C1E  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 21564   015C20  501A               	movf	___strtoxl@prev_a^(0+1280),w,c
 21565   015C22  5C27               	subwf	___strtoxl@a^(0+1280),w,c
 21566   015C24  501B               	movf	(___strtoxl@prev_a+1)^(0+1280),w,c
 21567   015C26  5828               	subwfb	(___strtoxl@a+1)^(0+1280),w,c
 21568   015C28  501C               	movf	(___strtoxl@prev_a+2)^(0+1280),w,c
 21569   015C2A  5829               	subwfb	(___strtoxl@a+2)^(0+1280),w,c
 21570   015C2C  501D               	movf	(___strtoxl@prev_a+3)^(0+1280),w,c
 21571   015C2E  582A               	subwfb	(___strtoxl@a+3)^(0+1280),w,c
 21572   015C30  A0D8               	btfss	status,0,c
 21573   015C32  EF1D  F0AE         	goto	u34211
 21574   015C36  EF1F  F0AE         	goto	u34210
 21575   015C3A                     u34211:
 21576   015C3A  EF36  F0AE         	goto	l3365
 21577   015C3E                     u34210:
 21578   015C3E  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 21579   015C40  B4D8               	btfsc	status,2,c
 21580   015C42  EF25  F0AE         	goto	u34221
 21581   015C46  EF27  F0AE         	goto	u34220
 21582   015C4A                     u34221:
 21583   015C4A  EF44  F0AE         	goto	l24681
 21584   015C4E                     u34220:
 21585   015C4E  5027               	movf	___strtoxl@a^(0+1280),w,c
 21586   015C50  5C22               	subwf	___strtoxl@limit^(0+1280),w,c
 21587   015C52  5028               	movf	(___strtoxl@a+1)^(0+1280),w,c
 21588   015C54  5823               	subwfb	(___strtoxl@limit+1)^(0+1280),w,c
 21589   015C56  5029               	movf	(___strtoxl@a+2)^(0+1280),w,c
 21590   015C58  5824               	subwfb	(___strtoxl@limit+2)^(0+1280),w,c
 21591   015C5A  502A               	movf	(___strtoxl@a+3)^(0+1280),w,c
 21592   015C5C  5825               	subwfb	(___strtoxl@limit+3)^(0+1280),w,c
 21593   015C5E  B0D8               	btfsc	status,0,c
 21594   015C60  EF34  F0AE         	goto	u34231
 21595   015C64  EF36  F0AE         	goto	u34230
 21596   015C68                     u34231:
 21597   015C68  EF44  F0AE         	goto	l24681
 21598   015C6C                     u34230:
 21599   015C6C                     l3365:
 21600   015C6C  C522  F527         	movff	___strtoxl@limit,___strtoxl@a
 21601   015C70  C523  F528         	movff	___strtoxl@limit+1,___strtoxl@a+1
 21602   015C74  C524  F529         	movff	___strtoxl@limit+2,___strtoxl@a+2
 21603   015C78  C525  F52A         	movff	___strtoxl@limit+3,___strtoxl@a+3
 21604   015C7C  0E00               	movlw	0
 21605   015C7E  0107               	movlb	7	; () banked
 21606   015C80  6FB4               	movwf	(_errno+1)& (0+255),b
 21607   015C82  0E22               	movlw	34
 21608   015C84  6FB3               	movwf	_errno& (0+255),b
 21609   015C86                     
 21610                           ; BSR set to: 7
 21611   015C86  8226               	bsf	___strtoxl@flags^(0+1280),1,c
 21612   015C88                     l24681:
 21613   015C88  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 21614   015C8A  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 21615   015C8C  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 21616   015C90  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 21617   015C94  50DF               	movf	indf2,w,c
 21618   015C96  6E2D               	movwf	___strtoxl@c^(0+1280),c
 21619   015C98  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 21620   015C9A  EF95  F0AD         	goto	l3351
 21621   015C9E                     l24685:
 21622   015C9E  5026               	movf	___strtoxl@flags^(0+1280),w,c
 21623   015CA0  0B03               	andlw	3
 21624   015CA2  06E8               	decf	wreg,f,c
 21625   015CA4  A4D8               	btfss	status,2,c
 21626   015CA6  EF57  F0AE         	goto	u34241
 21627   015CAA  EF59  F0AE         	goto	u34240
 21628   015CAE                     u34241:
 21629   015CAE  EF61  F0AE         	goto	l24689
 21630   015CB2                     u34240:
 21631   015CB2  1E2A               	comf	(___strtoxl@a+3)^(0+1280),f,c
 21632   015CB4  1E29               	comf	(___strtoxl@a+2)^(0+1280),f,c
 21633   015CB6  1E28               	comf	(___strtoxl@a+1)^(0+1280),f,c
 21634   015CB8  6C27               	negf	___strtoxl@a^(0+1280),c
 21635   015CBA  0E00               	movlw	0
 21636   015CBC  2228               	addwfc	(___strtoxl@a+1)^(0+1280),f,c
 21637   015CBE  2229               	addwfc	(___strtoxl@a+2)^(0+1280),f,c
 21638   015CC0  222A               	addwfc	(___strtoxl@a+3)^(0+1280),f,c
 21639   015CC2                     l24689:
 21640   015CC2  5012               	movf	___strtoxl@endptr^(0+1280),w,c
 21641   015CC4  1013               	iorwf	(___strtoxl@endptr+1)^(0+1280),w,c
 21642   015CC6  B4D8               	btfsc	status,2,c
 21643   015CC8  EF68  F0AE         	goto	u34251
 21644   015CCC  EF6A  F0AE         	goto	u34250
 21645   015CD0                     u34251:
 21646   015CD0  EF7D  F0AE         	goto	l24697
 21647   015CD4                     u34250:
 21648   015CD4  B426               	btfsc	___strtoxl@flags^(0+1280),2,c
 21649   015CD6  EF6F  F0AE         	goto	u34261
 21650   015CDA  EF71  F0AE         	goto	u34260
 21651   015CDE                     u34261:
 21652   015CDE  EF75  F0AE         	goto	l24695
 21653   015CE2                     u34260:
 21654   015CE2  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 21655   015CE6  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 21656   015CEA                     l24695:
 21657   015CEA  C512  F4D9         	movff	___strtoxl@endptr,fsr2l
 21658   015CEE  C513  F4DA         	movff	___strtoxl@endptr+1,fsr2h
 21659   015CF2  C52B  F4DE         	movff	___strtoxl@cp,postinc2
 21660   015CF6  C52C  F4DD         	movff	___strtoxl@cp+1,postdec2
 21661   015CFA                     l24697:
 21662   015CFA  C527  F510         	movff	___strtoxl@a,?___strtoxl
 21663   015CFE  C528  F511         	movff	___strtoxl@a+1,?___strtoxl+1
 21664   015D02  C529  F512         	movff	___strtoxl@a+2,?___strtoxl+2
 21665   015D06  C52A  F513         	movff	___strtoxl@a+3,?___strtoxl+3
 21666   015D0A  0012               	return		;funcret
 21667   015D0C                     __end_of___strtoxl:
 21668                           	callstack 0
 21669                           
 21670 ;; *************** function _get_line *****************
 21671 ;; Defined at:
 21672 ;;		line 469 in file "../src/w65_main.c"
 21673 ;; Parameters:    Size  Location     Type
 21674 ;;  s               2   93[BANK5 ] PTR unsigned char 
 21675 ;;		 -> line_buf(81), 
 21676 ;;  length          2   95[BANK5 ] int 
 21677 ;; Auto vars:     Size  Location     Type
 21678 ;;  c               2   97[BANK5 ] int 
 21679 ;;  n               1   99[BANK5 ] unsigned char 
 21680 ;; Return value:  Size  Location     Type
 21681 ;;                  2   93[BANK5 ] int 
 21682 ;; Registers used:
 21683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21684 ;; Tracked objects:
 21685 ;;		On entry : 0/0
 21686 ;;		On exit  : 0/0
 21687 ;;		Unchanged: 0/0
 21688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21692 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21693 ;;Total ram usage:        7 bytes
 21694 ;; Hardware stack levels used: 1
 21695 ;; Hardware stack levels required when called: 9
 21696 ;; This function calls:
 21697 ;;		_getch
 21698 ;;		_printf
 21699 ;;		_putch
 21700 ;; This function is called by:
 21701 ;;		_main
 21702 ;; This function uses a non-reentrant model
 21703 ;;
 21704                           
 21705                           	psect	text42
 21706   01CE22                     __ptext42:
 21707                           	callstack 0
 21708   01CE22                     _get_line:
 21709                           	callstack 117
 21710   01CE22                     
 21711                           ;../src/w65_main.c: 470:  char n;;../src/w65_main.c: 471:  int c;;../src/w65_main.c: 473
      +                          :  for (c=0;;) {
 21712   01CE22  0E00               	movlw	0
 21713   01CE24  0105               	movlb	5	; () banked
 21714   01CE26  6FC2               	movwf	(get_line@c+1)& (0+255),b
 21715   01CE28  0E00               	movlw	0
 21716   01CE2A  6FC1               	movwf	get_line@c& (0+255),b
 21717   01CE2C                     l25191:
 21718                           
 21719                           ; BSR set to: 5
 21720                           ;../src/w65_main.c: 474:   n = (char)getch();
 21721   01CE2C  EC4E  F0FD         	call	_getch	;wreg free
 21722   01CE30  5004               	movf	?_getch^(0+1280),w,c
 21723   01CE32  0105               	movlb	5	; () banked
 21724   01CE34  6FC3               	movwf	get_line@n& (0+255),b
 21725   01CE36                     
 21726                           ; BSR set to: 5
 21727                           ;../src/w65_main.c: 475:   if ( n == 0x08 ) {
 21728   01CE36  0E08               	movlw	8
 21729   01CE38  19C3               	xorwf	get_line@n& (0+255),w,b
 21730   01CE3A  A4D8               	btfss	status,2,c
 21731   01CE3C  EF22  F0E7         	goto	u34931
 21732   01CE40  EF24  F0E7         	goto	u34930
 21733   01CE44                     u34931:
 21734   01CE44  EF43  F0E7         	goto	l25203
 21735   01CE48                     u34930:
 21736   01CE48                     
 21737                           ; BSR set to: 5
 21738                           ;../src/w65_main.c: 476:    if ( c > 0) {
 21739   01CE48  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 21740   01CE4A  EF2F  F0E7         	goto	u34941
 21741   01CE4E  51C2               	movf	(get_line@c+1)& (0+255),w,b
 21742   01CE50  E108               	bnz	u34940
 21743   01CE52  05C1               	decf	get_line@c& (0+255),w,b
 21744   01CE54  A0D8               	btfss	status,0,c
 21745   01CE56  EF2F  F0E7         	goto	u34941
 21746   01CE5A  EF31  F0E7         	goto	u34940
 21747   01CE5E                     u34941:
 21748   01CE5E  EF16  F0E7         	goto	l25191
 21749   01CE62                     u34940:
 21750   01CE62                     
 21751                           ; BSR set to: 5
 21752                           ;../src/w65_main.c: 477:     putch(0x08);
 21753   01CE62  0E08               	movlw	8
 21754   01CE64  EC03  F001         	call	_putch
 21755                           
 21756                           ;../src/w65_main.c: 478:     putch(' ');
 21757   01CE68  0E20               	movlw	32
 21758   01CE6A  EC03  F001         	call	_putch
 21759                           
 21760                           ;../src/w65_main.c: 479:     putch(0x08);
 21761   01CE6E  0E08               	movlw	8
 21762   01CE70  EC03  F001         	call	_putch
 21763   01CE74                     
 21764                           ;../src/w65_main.c: 480:     c--;
 21765   01CE74  0105               	movlb	5	; () banked
 21766   01CE76  07C1               	decf	get_line@c& (0+255),f,b
 21767   01CE78  A0D8               	btfss	status,0,c
 21768   01CE7A  07C2               	decf	(get_line@c+1)& (0+255),f,b
 21769   01CE7C                     
 21770                           ; BSR set to: 5
 21771                           ;../src/w65_main.c: 481:     s--;
 21772   01CE7C  07BD               	decf	get_line@s& (0+255),f,b
 21773   01CE7E  A0D8               	btfss	status,0,c
 21774   01CE80  07BE               	decf	(get_line@s+1)& (0+255),f,b
 21775   01CE82  EF16  F0E7         	goto	l25191
 21776   01CE86                     l25203:
 21777                           
 21778                           ; BSR set to: 5
 21779                           ;../src/w65_main.c: 485:   if ( n == 0x0d || n == 0x0a ) {
 21780   01CE86  0E0D               	movlw	13
 21781   01CE88  19C3               	xorwf	get_line@n& (0+255),w,b
 21782   01CE8A  B4D8               	btfsc	status,2,c
 21783   01CE8C  EF4A  F0E7         	goto	u34951
 21784   01CE90  EF4C  F0E7         	goto	u34950
 21785   01CE94                     u34951:
 21786   01CE94  EF55  F0E7         	goto	l25207
 21787   01CE98                     u34950:
 21788   01CE98                     
 21789                           ; BSR set to: 5
 21790   01CE98  0E0A               	movlw	10
 21791   01CE9A  19C3               	xorwf	get_line@n& (0+255),w,b
 21792   01CE9C  A4D8               	btfss	status,2,c
 21793   01CE9E  EF53  F0E7         	goto	u34961
 21794   01CEA2  EF55  F0E7         	goto	u34960
 21795   01CEA6                     u34961:
 21796   01CEA6  EF66  F0E7         	goto	l25215
 21797   01CEAA                     u34960:
 21798   01CEAA                     l25207:
 21799                           
 21800                           ; BSR set to: 5
 21801                           ;../src/w65_main.c: 486:    *s = 0x00;
 21802   01CEAA  C5BD  F4D9         	movff	get_line@s,fsr2l
 21803   01CEAE  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 21804   01CEB2  6ADF               	clrf	indf2,c
 21805   01CEB4                     
 21806                           ; BSR set to: 5
 21807                           ;../src/w65_main.c: 487:    printf("\r\n");
 21808   01CEB4  0E90               	movlw	low (STR_88+20)
 21809   01CEB6  6FAD               	movwf	printf@fmt& (0+255),b
 21810   01CEB8  0EFB               	movlw	high (STR_88+20)
 21811   01CEBA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21812   01CEBC  ECDA  F0FF         	call	_printf	;wreg free
 21813   01CEC0                     
 21814                           ;../src/w65_main.c: 488:    return c;
 21815   01CEC0  C5C1  F5BD         	movff	get_line@c,?_get_line
 21816   01CEC4  C5C2  F5BE         	movff	get_line@c+1,?_get_line+1
 21817   01CEC8  EF96  F0E7         	goto	l1214
 21818   01CECC                     l25215:
 21819                           
 21820                           ; BSR set to: 5
 21821                           ;../src/w65_main.c: 490:   if ( c <= 81 -1 ) {
 21822   01CECC  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 21823   01CECE  EF74  F0E7         	goto	u34970
 21824   01CED2  51C2               	movf	(get_line@c+1)& (0+255),w,b
 21825   01CED4  E107               	bnz	u34971
 21826   01CED6  0E51               	movlw	81
 21827   01CED8  5DC1               	subwf	get_line@c& (0+255),w,b
 21828   01CEDA  B0D8               	btfsc	status,0,c
 21829   01CEDC  EF72  F0E7         	goto	u34971
 21830   01CEE0  EF74  F0E7         	goto	u34970
 21831   01CEE4                     u34971:
 21832   01CEE4  EF16  F0E7         	goto	l25191
 21833   01CEE8                     u34970:
 21834   01CEE8                     
 21835                           ; BSR set to: 5
 21836                           ;../src/w65_main.c: 491:    putch(n);
 21837   01CEE8  51C3               	movf	get_line@n& (0+255),w,b
 21838   01CEEA  EC03  F001         	call	_putch
 21839   01CEEE                     
 21840                           ;../src/w65_main.c: 492:    if ( n >='a' && n <='z' ) n -= 0x20;
 21841   01CEEE  0E60               	movlw	96
 21842   01CEF0  0105               	movlb	5	; () banked
 21843   01CEF2  65C3               	cpfsgt	get_line@n& (0+255),b
 21844   01CEF4  EF7E  F0E7         	goto	u34981
 21845   01CEF8  EF80  F0E7         	goto	u34980
 21846   01CEFC                     u34981:
 21847   01CEFC  EF8A  F0E7         	goto	l25225
 21848   01CF00                     u34980:
 21849   01CF00                     
 21850                           ; BSR set to: 5
 21851   01CF00  0E7B               	movlw	123
 21852   01CF02  61C3               	cpfslt	get_line@n& (0+255),b
 21853   01CF04  EF86  F0E7         	goto	u34991
 21854   01CF08  EF88  F0E7         	goto	u34990
 21855   01CF0C                     u34991:
 21856   01CF0C  EF8A  F0E7         	goto	l25225
 21857   01CF10                     u34990:
 21858   01CF10                     
 21859                           ; BSR set to: 5
 21860   01CF10  0E20               	movlw	32
 21861   01CF12  5FC3               	subwf	get_line@n& (0+255),f,b
 21862   01CF14                     l25225:
 21863                           
 21864                           ; BSR set to: 5
 21865                           ;../src/w65_main.c: 493:    *s++ = n;
 21866   01CF14  C5BD  F4D9         	movff	get_line@s,fsr2l
 21867   01CF18  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 21868   01CF1C  C5C3  F4DF         	movff	get_line@n,indf2
 21869   01CF20                     
 21870                           ; BSR set to: 5
 21871   01CF20  4BBD               	infsnz	get_line@s& (0+255),f,b
 21872   01CF22  2BBE               	incf	(get_line@s+1)& (0+255),f,b
 21873   01CF24                     
 21874                           ; BSR set to: 5
 21875                           ;../src/w65_main.c: 494:    c++;
 21876   01CF24  4BC1               	infsnz	get_line@c& (0+255),f,b
 21877   01CF26  2BC2               	incf	(get_line@c+1)& (0+255),f,b
 21878   01CF28  EF16  F0E7         	goto	l25191
 21879   01CF2C                     l1214:
 21880   01CF2C  0012               	return		;funcret
 21881   01CF2E                     __end_of_get_line:
 21882                           	callstack 0
 21883                           
 21884 ;; *************** function _getch *****************
 21885 ;; Defined at:
 21886 ;;		line 138 in file "../src/boards/w65_cmn.c"
 21887 ;; Parameters:    Size  Location     Type
 21888 ;;		None
 21889 ;; Auto vars:     Size  Location     Type
 21890 ;;  c               1    7[COMRAM] unsigned char 
 21891 ;; Return value:  Size  Location     Type
 21892 ;;                  2    3[COMRAM] int 
 21893 ;; Registers used:
 21894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21895 ;; Tracked objects:
 21896 ;;		On entry : 0/0
 21897 ;;		On exit  : 0/0
 21898 ;;		Unchanged: 0/0
 21899 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21904 ;;Total ram usage:        5 bytes
 21905 ;; Hardware stack levels used: 1
 21906 ;; Hardware stack levels required when called: 1
 21907 ;; This function calls:
 21908 ;;		Nothing
 21909 ;; This function is called by:
 21910 ;;		_get_line
 21911 ;; This function uses a non-reentrant model
 21912 ;;
 21913                           
 21914                           	psect	text43
 21915   01FA9C                     __ptext43:
 21916                           	callstack 0
 21917   01FA9C                     _getch:
 21918                           	callstack 124
 21919   01FA9C                     l16425:
 21920   01FA9C  0107               	movlb	7	; () banked
 21921   01FA9E  51C1               	movf	_rx_cnt& (0+255),w,b
 21922   01FAA0  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 21923   01FAA2  B4D8               	btfsc	status,2,c
 21924   01FAA4  EF56  F0FD         	goto	u20901
 21925   01FAA8  EF58  F0FD         	goto	u20900
 21926   01FAAC                     u20901:
 21927   01FAAC  EF4E  F0FD         	goto	l16425
 21928   01FAB0                     u20900:
 21929   01FAB0                     
 21930                           ; BSR set to: 7
 21931                           ;../src/boards/w65_cmn.c: 142:  U3RXIE = 0;
 21932   01FAB0  90A7               	bcf	1191,0,c	;volatile
 21933   01FAB2                     
 21934                           ; BSR set to: 7
 21935                           ;../src/boards/w65_cmn.c: 143:  c = rx_buf[rx_rp];
 21936   01FAB2  0E00               	movlw	low _rx_buf
 21937   01FAB4  25C3               	addwf	_rx_rp& (0+255),w,b
 21938   01FAB6  6ED9               	movwf	fsr2l,c
 21939   01FAB8  0E0B               	movlw	high _rx_buf
 21940   01FABA  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 21941   01FABC  6EDA               	movwf	fsr2h,c
 21942   01FABE  50DF               	movf	indf2,w,c
 21943   01FAC0  6E08               	movwf	getch@c^(0+1280),c
 21944   01FAC2                     
 21945                           ; BSR set to: 7
 21946                           ;../src/boards/w65_cmn.c: 144:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 21947   01FAC2  0E01               	movlw	1
 21948   01FAC4  25C3               	addwf	_rx_rp& (0+255),w,b
 21949   01FAC6  6E06               	movwf	??_getch^(0+1280),c
 21950   01FAC8  0E00               	movlw	0
 21951   01FACA  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 21952   01FACC  6E07               	movwf	(??_getch+1)^(0+1280),c
 21953   01FACE  0E7F               	movlw	127
 21954   01FAD0  1406               	andwf	??_getch^(0+1280),w,c
 21955   01FAD2  6FC3               	movwf	_rx_rp& (0+255),b
 21956   01FAD4  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 21957   01FAD6                     
 21958                           ; BSR set to: 7
 21959                           ;../src/boards/w65_cmn.c: 145:  rx_cnt--;
 21960   01FAD6  07C1               	decf	_rx_cnt& (0+255),f,b
 21961   01FAD8  A0D8               	btfss	status,0,c
 21962   01FADA  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 21963   01FADC                     
 21964                           ; BSR set to: 7
 21965                           ;../src/boards/w65_cmn.c: 146:  U3RXIE = 1;
 21966   01FADC  80A7               	bsf	1191,0,c	;volatile
 21967   01FADE                     
 21968                           ; BSR set to: 7
 21969                           ;../src/boards/w65_cmn.c: 147:     return c;
 21970   01FADE  C508  F504         	movff	getch@c,?_getch
 21971   01FAE2  6A05               	clrf	(?_getch+1)^(0+1280),c
 21972   01FAE4                     
 21973                           ; BSR set to: 7
 21974   01FAE4  0012               	return		;funcret
 21975   01FAE6                     __end_of_getch:
 21976                           	callstack 0
 21977                           
 21978 ;; *************** function _disk_init *****************
 21979 ;; Defined at:
 21980 ;;		line 391 in file "../src/w65_main.c"
 21981 ;; Parameters:    Size  Location     Type
 21982 ;;		None
 21983 ;; Auto vars:     Size  Location     Type
 21984 ;;		None
 21985 ;; Return value:  Size  Location     Type
 21986 ;;                  2  187[BANK6 ] int 
 21987 ;; Registers used:
 21988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21989 ;; Tracked objects:
 21990 ;;		On entry : 0/0
 21991 ;;		On exit  : 0/0
 21992 ;;		Unchanged: 0/0
 21993 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21994 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21997 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21998 ;;Total ram usage:        2 bytes
 21999 ;; Hardware stack levels used: 1
 22000 ;; Hardware stack levels required when called: 18
 22001 ;; This function calls:
 22002 ;;		_f_mount
 22003 ;;		_printf
 22004 ;; This function is called by:
 22005 ;;		_main
 22006 ;; This function uses a non-reentrant model
 22007 ;;
 22008                           
 22009                           	psect	text44
 22010   01F90E                     __ptext44:
 22011                           	callstack 0
 22012   01F90E                     _disk_init:
 22013                           	callstack 108
 22014   01F90E                     
 22015                           ;../src/w65_main.c: 393:     if (f_mount(&fs, "0://", 1) != FR_OK) {
 22016   01F90E  0E80               	movlw	low _fs
 22017   01F910  0106               	movlb	6	; () banked
 22018   01F912  6FAF               	movwf	f_mount@fs& (0+255),b
 22019   01F914  0E0B               	movlw	high _fs
 22020   01F916  6FB0               	movwf	(f_mount@fs+1)& (0+255),b
 22021   01F918  0EAD               	movlw	low STR_84
 22022   01F91A  6FB1               	movwf	f_mount@path& (0+255),b
 22023   01F91C  0EFF               	movlw	high STR_84
 22024   01F91E  6FB2               	movwf	(f_mount@path+1)& (0+255),b
 22025   01F920  0E01               	movlw	1
 22026   01F922  6FB3               	movwf	f_mount@opt& (0+255),b
 22027   01F924  EC21  F0EB         	call	_f_mount	;wreg free
 22028   01F928  0900               	iorlw	0
 22029   01F92A  B4D8               	btfsc	status,2,c
 22030   01F92C  EF9A  F0FC         	goto	u34701
 22031   01F930  EF9C  F0FC         	goto	u34700
 22032   01F934                     u34701:
 22033   01F934  EFAA  F0FC         	goto	l25031
 22034   01F938                     u34700:
 22035   01F938                     
 22036                           ;../src/w65_main.c: 394:         printf("Failed to mount SD Card.\n\r");
 22037   01F938  0E9E               	movlw	low STR_85
 22038   01F93A  0105               	movlb	5	; () banked
 22039   01F93C  6FAD               	movwf	printf@fmt& (0+255),b
 22040   01F93E  0EF9               	movlw	high STR_85
 22041   01F940  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22042   01F942  ECDA  F0FF         	call	_printf	;wreg free
 22043   01F946                     
 22044                           ;../src/w65_main.c: 395:         return -2;
 22045   01F946  0EFF               	movlw	255
 22046   01F948  0106               	movlb	6	; () banked
 22047   01F94A  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 22048   01F94C  0EFE               	movlw	254
 22049   01F94E  6FBB               	movwf	?_disk_init& (0+255),b
 22050   01F950  EFAF  F0FC         	goto	l1174
 22051   01F954                     l25031:
 22052                           
 22053                           ;../src/w65_main.c: 398:     return 0;
 22054   01F954  0E00               	movlw	0
 22055   01F956  0106               	movlb	6	; () banked
 22056   01F958  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 22057   01F95A  0E00               	movlw	0
 22058   01F95C  6FBB               	movwf	?_disk_init& (0+255),b
 22059   01F95E                     l1174:
 22060                           
 22061                           ; BSR set to: 6
 22062   01F95E  0012               	return		;funcret
 22063   01F960                     __end_of_disk_init:
 22064                           	callstack 0
 22065                           
 22066 ;; *************** function _f_mount *****************
 22067 ;; Defined at:
 22068 ;;		line 3659 in file "../fatfs/ff.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;  fs              2  175[BANK6 ] PTR struct .
 22071 ;;		 -> fs(564), NULL(0), 
 22072 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 22073 ;;		 -> STR_167(15), fin_name(13), STR_84(5), line_buf(81), 
 22074 ;;		 -> STR_51(11), STR_50(11), STR_49(11), STR_48(11), 
 22075 ;;		 -> NULL(0), tmp_buf(512), 
 22076 ;;  opt             1  179[BANK6 ] unsigned char 
 22077 ;; Auto vars:     Size  Location     Type
 22078 ;;  vol             2  185[BANK6 ] int 
 22079 ;;  cfs             2  183[BANK6 ] PTR struct .
 22080 ;;		 -> fs(564), NULL(0), 
 22081 ;;  rp              2  181[BANK6 ] PTR const unsigned char 
 22082 ;;		 -> STR_167(15), fin_name(13), STR_84(5), line_buf(81), 
 22083 ;;		 -> STR_51(11), STR_50(11), STR_49(11), STR_48(11), 
 22084 ;;		 -> NULL(0), tmp_buf(512), 
 22085 ;;  res             1  180[BANK6 ] enum E597
 22086 ;; Return value:  Size  Location     Type
 22087 ;;                  1    wreg      enum E17409
 22088 ;; Registers used:
 22089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22090 ;; Tracked objects:
 22091 ;;		On entry : 0/0
 22092 ;;		On exit  : 0/0
 22093 ;;		Unchanged: 0/0
 22094 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22095 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22096 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22098 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;Total ram usage:       12 bytes
 22100 ;; Hardware stack levels used: 1
 22101 ;; Hardware stack levels required when called: 17
 22102 ;; This function calls:
 22103 ;;		_get_ldnumber
 22104 ;;		_mount_volume
 22105 ;; This function is called by:
 22106 ;;		_disk_init
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text45
 22111   01D642                     __ptext45:
 22112                           	callstack 0
 22113   01D642                     _f_mount:
 22114                           	callstack 108
 22115   01D642                     
 22116                           ;../fatfs/ff.c: 3660:  FATFS* fs,;../fatfs/ff.c: 3661:  const TCHAR* path,;../fatfs/ff.c
      +                          : 3662:  BYTE opt;../fatfs/ff.c: 3664: {;../fatfs/ff.c: 3665:  FATFS *cfs;;../fatfs/ff.c
      +                          : 3666:  int vol;;../fatfs/ff.c: 3667:  FRESULT res;;../fatfs/ff.c: 3668:  const TCHAR *
      +                          rp = path;
 22117   01D642  C6B1  F6B5         	movff	f_mount@path,f_mount@rp
 22118   01D646  C6B2  F6B6         	movff	f_mount@path+1,f_mount@rp+1
 22119   01D64A                     
 22120                           ;../fatfs/ff.c: 3672:  vol = get_ldnumber(&rp);
 22121   01D64A  0EB5               	movlw	low f_mount@rp
 22122   01D64C  6E04               	movwf	get_ldnumber@path^(0+1280),c
 22123   01D64E  0E06               	movlw	high f_mount@rp
 22124   01D650  6E05               	movwf	(get_ldnumber@path+1)^(0+1280),c
 22125   01D652  EC82  F0D9         	call	_get_ldnumber	;wreg free
 22126   01D656  C504  F6B9         	movff	?_get_ldnumber,f_mount@vol
 22127   01D65A  C505  F6BA         	movff	?_get_ldnumber+1,f_mount@vol+1
 22128   01D65E                     
 22129                           ;../fatfs/ff.c: 3673:  if (vol < 0) return FR_INVALID_DRIVE;
 22130   01D65E  0106               	movlb	6	; () banked
 22131   01D660  BFBA               	btfsc	(f_mount@vol+1)& (0+255),7,b
 22132   01D662  EF37  F0EB         	goto	u33900
 22133   01D666  EF35  F0EB         	goto	u33901
 22134   01D66A                     u33901:
 22135   01D66A  EF3A  F0EB         	goto	l24547
 22136   01D66E                     u33900:
 22137   01D66E                     
 22138                           ; BSR set to: 6
 22139   01D66E  0E0B               	movlw	11
 22140   01D670  EF9D  F0EB         	goto	l1884
 22141   01D674                     l24547:
 22142                           
 22143                           ; BSR set to: 6
 22144                           ;../fatfs/ff.c: 3674:  cfs = FatFs[vol];
 22145   01D674  90D8               	bcf	status,0,c
 22146   01D676  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22147   01D678  6ED9               	movwf	fsr2l,c
 22148   01D67A  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22149   01D67C  6EDA               	movwf	fsr2h,c
 22150   01D67E  0EB7               	movlw	low _FatFs
 22151   01D680  26D9               	addwf	fsr2l,f,c
 22152   01D682  0E07               	movlw	high _FatFs
 22153   01D684  22DA               	addwfc	fsr2h,f,c
 22154   01D686  C4DE F6B7          	movff	postinc2,f_mount@cfs
 22155   01D68A  C4DD F6B8          	movff	postdec2,f_mount@cfs+1
 22156   01D68E                     
 22157                           ; BSR set to: 6
 22158                           ;../fatfs/ff.c: 3676:  if (cfs) {
 22159   01D68E  51B7               	movf	f_mount@cfs& (0+255),w,b
 22160   01D690  11B8               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 22161   01D692  B4D8               	btfsc	status,2,c
 22162   01D694  EF4E  F0EB         	goto	u33911
 22163   01D698  EF50  F0EB         	goto	u33910
 22164   01D69C                     u33911:
 22165   01D69C  EF60  F0EB         	goto	l1885
 22166   01D6A0                     u33910:
 22167   01D6A0                     
 22168                           ; BSR set to: 6
 22169                           ;../fatfs/ff.c: 3677:   FatFs[vol] = 0;
 22170   01D6A0  90D8               	bcf	status,0,c
 22171   01D6A2  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22172   01D6A4  6ED9               	movwf	fsr2l,c
 22173   01D6A6  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22174   01D6A8  6EDA               	movwf	fsr2h,c
 22175   01D6AA  0EB7               	movlw	low _FatFs
 22176   01D6AC  26D9               	addwf	fsr2l,f,c
 22177   01D6AE  0E07               	movlw	high _FatFs
 22178   01D6B0  22DA               	addwfc	fsr2h,f,c
 22179   01D6B2  6ADE               	clrf	postinc2,c
 22180   01D6B4  6ADD               	clrf	postdec2,c
 22181   01D6B6                     
 22182                           ; BSR set to: 6
 22183                           ;../fatfs/ff.c: 3684:   cfs->fs_type = 0;
 22184   01D6B6  C6B7  F4D9         	movff	f_mount@cfs,fsr2l
 22185   01D6BA  C6B8  F4DA         	movff	f_mount@cfs+1,fsr2h
 22186   01D6BE  6ADF               	clrf	indf2,c
 22187   01D6C0                     l1885:
 22188                           
 22189                           ; BSR set to: 6
 22190                           ;../fatfs/ff.c: 3687:  if (fs) {
 22191   01D6C0  51AF               	movf	f_mount@fs& (0+255),w,b
 22192   01D6C2  11B0               	iorwf	(f_mount@fs+1)& (0+255),w,b
 22193   01D6C4  B4D8               	btfsc	status,2,c
 22194   01D6C6  EF67  F0EB         	goto	u33921
 22195   01D6CA  EF69  F0EB         	goto	u33920
 22196   01D6CE                     u33921:
 22197   01D6CE  EF83  F0EB         	goto	l24561
 22198   01D6D2                     u33920:
 22199   01D6D2                     
 22200                           ; BSR set to: 6
 22201                           ;../fatfs/ff.c: 3688:   fs->pdrv = (BYTE)(vol);
 22202   01D6D2  EE20 F001          	lfsr	2,1
 22203   01D6D6  51AF               	movf	f_mount@fs& (0+255),w,b
 22204   01D6D8  26D9               	addwf	fsr2l,f,c
 22205   01D6DA  51B0               	movf	(f_mount@fs+1)& (0+255),w,b
 22206   01D6DC  22DA               	addwfc	fsr2h,f,c
 22207   01D6DE  C6B9  F4DF         	movff	f_mount@vol,indf2
 22208   01D6E2                     
 22209                           ; BSR set to: 6
 22210                           ;../fatfs/ff.c: 3702:   fs->fs_type = 0;
 22211   01D6E2  C6AF  F4D9         	movff	f_mount@fs,fsr2l
 22212   01D6E6  C6B0  F4DA         	movff	f_mount@fs+1,fsr2h
 22213   01D6EA  6ADF               	clrf	indf2,c
 22214   01D6EC                     
 22215                           ; BSR set to: 6
 22216                           ;../fatfs/ff.c: 3703:   FatFs[vol] = fs;
 22217   01D6EC  90D8               	bcf	status,0,c
 22218   01D6EE  35B9               	rlcf	f_mount@vol& (0+255),w,b
 22219   01D6F0  6ED9               	movwf	fsr2l,c
 22220   01D6F2  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 22221   01D6F4  6EDA               	movwf	fsr2h,c
 22222   01D6F6  0EB7               	movlw	low _FatFs
 22223   01D6F8  26D9               	addwf	fsr2l,f,c
 22224   01D6FA  0E07               	movlw	high _FatFs
 22225   01D6FC  22DA               	addwfc	fsr2h,f,c
 22226   01D6FE  C6AF  F4DE         	movff	f_mount@fs,postinc2
 22227   01D702  C6B0  F4DD         	movff	f_mount@fs+1,postdec2
 22228   01D706                     l24561:
 22229                           
 22230                           ; BSR set to: 6
 22231                           ;../fatfs/ff.c: 3706:  if (opt == 0) return FR_OK;
 22232   01D706  51B3               	movf	f_mount@opt& (0+255),w,b
 22233   01D708  A4D8               	btfss	status,2,c
 22234   01D70A  EF89  F0EB         	goto	u33931
 22235   01D70E  EF8B  F0EB         	goto	u33930
 22236   01D712                     u33931:
 22237   01D712  EF8E  F0EB         	goto	l24567
 22238   01D716                     u33930:
 22239   01D716                     
 22240                           ; BSR set to: 6
 22241   01D716  0E00               	movlw	0
 22242   01D718  EF9D  F0EB         	goto	l1884
 22243   01D71C                     l24567:
 22244                           
 22245                           ; BSR set to: 6
 22246                           ;../fatfs/ff.c: 3708:  res = mount_volume(&path, &fs, 0);
 22247   01D71C  0EB1               	movlw	low f_mount@path
 22248   01D71E  6F81               	movwf	mount_volume@path& (0+255),b
 22249   01D720  0E06               	movlw	high f_mount@path
 22250   01D722  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 22251   01D724  0EAF               	movlw	low f_mount@fs
 22252   01D726  6F83               	movwf	mount_volume@rfs& (0+255),b
 22253   01D728  0E06               	movlw	high f_mount@fs
 22254   01D72A  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 22255   01D72C  0E00               	movlw	0
 22256   01D72E  6F85               	movwf	mount_volume@mode& (0+255),b
 22257   01D730  EC00  F080         	call	_mount_volume	;wreg free
 22258   01D734  0106               	movlb	6	; () banked
 22259   01D736  6FB4               	movwf	f_mount@res& (0+255),b
 22260   01D738                     
 22261                           ; BSR set to: 6
 22262                           ;../fatfs/ff.c: 3709:  return res;
 22263   01D738  51B4               	movf	f_mount@res& (0+255),w,b
 22264   01D73A                     l1884:
 22265                           
 22266                           ; BSR set to: 6
 22267   01D73A  0012               	return		;funcret
 22268   01D73C                     __end_of_f_mount:
 22269                           	callstack 0
 22270                           
 22271 ;; *************** function _clk_init *****************
 22272 ;; Defined at:
 22273 ;;		line 315 in file "../src/boards/w65_cmn.c"
 22274 ;; Parameters:    Size  Location     Type
 22275 ;;		None
 22276 ;; Auto vars:     Size  Location     Type
 22277 ;;		None
 22278 ;; Return value:  Size  Location     Type
 22279 ;;                  1    wreg      void 
 22280 ;; Registers used:
 22281 ;;		wreg, status,2
 22282 ;; Tracked objects:
 22283 ;;		On entry : 0/0
 22284 ;;		On exit  : 0/0
 22285 ;;		Unchanged: 0/0
 22286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22291 ;;Total ram usage:        0 bytes
 22292 ;; Hardware stack levels used: 1
 22293 ;; Hardware stack levels required when called: 1
 22294 ;; This function calls:
 22295 ;;		Nothing
 22296 ;; This function is called by:
 22297 ;;		_main
 22298 ;; This function uses a non-reentrant model
 22299 ;;
 22300                           
 22301                           	psect	text46
 22302   00016C                     __ptext46:
 22303                           	callstack 0
 22304   00016C                     _clk_init:
 22305                           	callstack 125
 22306   00016C                     
 22307                           ;../src/boards/w65_cmn.c: 319:  NCO1INC = 65536;
 22308   00016C  0E00               	movlw	0
 22309   00016E  0104               	movlb	4	; () banked
 22310   000170  6F43               	movwf	67,b	;volatile
 22311   000172  0E00               	movlw	0
 22312   000174  6F44               	movwf	68,b	;volatile
 22313   000176  0E01               	movlw	1
 22314   000178  6F45               	movwf	69,b	;volatile
 22315   00017A                     
 22316                           ; BSR set to: 4
 22317                           ;../src/boards/w65_cmn.c: 320:  NCO1CLK = 0x00;
 22318   00017A  6B47               	clrf	71,b	;volatile
 22319   00017C                     
 22320                           ; BSR set to: 4
 22321                           ;../src/boards/w65_cmn.c: 321:  NCO1PFM = 0;
 22322   00017C  9146               	bcf	70,0,b	;volatile
 22323   00017E                     
 22324                           ; BSR set to: 4
 22325                           ;../src/boards/w65_cmn.c: 322:  NCO1OUT = 1;
 22326   00017E  8B46               	bsf	70,5,b	;volatile
 22327   000180                     
 22328                           ; BSR set to: 4
 22329                           ;../src/boards/w65_cmn.c: 324:  NCO1EN = 1;
 22330   000180  8F46               	bsf	70,7,b	;volatile
 22331                           
 22332                           ;../src/boards/w65_cmn.c: 325:  RA3PPS = 0x3f;
 22333   000182  0E3F               	movlw	63
 22334   000184  0102               	movlb	2	; () banked
 22335   000186  6F04               	movwf	4,b	;volatile
 22336   000188                     
 22337                           ; BSR set to: 2
 22338   000188  0012               	return		;funcret
 22339   00018A                     __end_of_clk_init:
 22340                           	callstack 0
 22341                           
 22342 ;; *************** function _clc_init *****************
 22343 ;; Defined at:
 22344 ;;		line 63 in file "../src/boards/w65_bd.c"
 22345 ;; Parameters:    Size  Location     Type
 22346 ;;		None
 22347 ;; Auto vars:     Size  Location     Type
 22348 ;;		None
 22349 ;; Return value:  Size  Location     Type
 22350 ;;                  1    wreg      void 
 22351 ;; Registers used:
 22352 ;;		wreg, status,2
 22353 ;; Tracked objects:
 22354 ;;		On entry : 0/0
 22355 ;;		On exit  : 0/0
 22356 ;;		Unchanged: 0/0
 22357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;Total ram usage:        0 bytes
 22363 ;; Hardware stack levels used: 1
 22364 ;; Hardware stack levels required when called: 1
 22365 ;; This function calls:
 22366 ;;		Nothing
 22367 ;; This function is called by:
 22368 ;;		_main
 22369 ;; This function uses a non-reentrant model
 22370 ;;
 22371                           
 22372                           	psect	text47
 22373   01C120                     __ptext47:
 22374                           	callstack 0
 22375   01C120                     _clc_init:
 22376                           	callstack 125
 22377   01C120                     
 22378                           ;../src/boards/w65_bd.c: 70:  CLCSELECT = 0;
 22379   01C120  0100               	movlb	0	; () banked
 22380   01C122  6BD5               	clrf	213,b	;volatile
 22381   01C124                     
 22382                           ; BSR set to: 0
 22383                           ;../src/boards/w65_bd.c: 72:  CLCnSEL0 = 0x2a;
 22384   01C124  0E2A               	movlw	42
 22385   01C126  6FD8               	movwf	216,b	;volatile
 22386                           
 22387                           ;../src/boards/w65_bd.c: 73:     CLCnSEL1 = 127;
 22388   01C128  0E7F               	movlw	127
 22389   01C12A  6FD9               	movwf	217,b	;volatile
 22390                           
 22391                           ;../src/boards/w65_bd.c: 74:  CLCnSEL2 = 127;
 22392   01C12C  0E7F               	movlw	127
 22393   01C12E  6FDA               	movwf	218,b	;volatile
 22394                           
 22395                           ;../src/boards/w65_bd.c: 75:  CLCnSEL3 = 127;
 22396   01C130  0E7F               	movlw	127
 22397   01C132  6FDB               	movwf	219,b	;volatile
 22398                           
 22399                           ;../src/boards/w65_bd.c: 77:     CLCnGLS0 = 0x02;
 22400   01C134  0E02               	movlw	2
 22401   01C136  6FDC               	movwf	220,b	;volatile
 22402   01C138                     
 22403                           ; BSR set to: 0
 22404                           ;../src/boards/w65_bd.c: 78:  CLCnGLS1 = 0x00;
 22405   01C138  6BDD               	clrf	221,b	;volatile
 22406   01C13A                     
 22407                           ; BSR set to: 0
 22408                           ;../src/boards/w65_bd.c: 79:     CLCnGLS2 = 0x00;
 22409   01C13A  6BDE               	clrf	222,b	;volatile
 22410   01C13C                     
 22411                           ; BSR set to: 0
 22412                           ;../src/boards/w65_bd.c: 80:     CLCnGLS3 = 0x00;
 22413   01C13C  6BDF               	clrf	223,b	;volatile
 22414   01C13E                     
 22415                           ; BSR set to: 0
 22416                           ;../src/boards/w65_bd.c: 82:     CLCnPOL = 0x00;
 22417   01C13E  6BD7               	clrf	215,b	;volatile
 22418                           
 22419                           ;../src/boards/w65_bd.c: 83:     CLCnCON = 0x84;
 22420   01C140  0E84               	movlw	132
 22421   01C142  6FD6               	movwf	214,b	;volatile
 22422   01C144                     
 22423                           ; BSR set to: 0
 22424                           ;../src/boards/w65_bd.c: 88:  G3POL = 1;
 22425   01C144  85D7               	bsf	215,2,b	;volatile
 22426   01C146                     
 22427                           ; BSR set to: 0
 22428                           ;../src/boards/w65_bd.c: 89:  G3POL = 0;
 22429   01C146  95D7               	bcf	215,2,b	;volatile
 22430                           
 22431                           ;../src/boards/w65_bd.c: 91:  RA0PPS = 0x01;
 22432   01C148  0E01               	movlw	1
 22433   01C14A  0102               	movlb	2	; () banked
 22434   01C14C  6F01               	movwf	1,b	;volatile
 22435                           
 22436                           ;../src/boards/w65_bd.c: 95:  CLCSELECT = 1;
 22437   01C14E  0E01               	movlw	1
 22438   01C150  0100               	movlb	0	; () banked
 22439   01C152  6FD5               	movwf	213,b	;volatile
 22440                           
 22441                           ;../src/boards/w65_bd.c: 97:  CLCnSEL0 = 0x2a;
 22442   01C154  0E2A               	movlw	42
 22443   01C156  6FD8               	movwf	216,b	;volatile
 22444                           
 22445                           ;../src/boards/w65_bd.c: 98:  CLCnSEL1 = 0x38;
 22446   01C158  0E38               	movlw	56
 22447   01C15A  6FD9               	movwf	217,b	;volatile
 22448                           
 22449                           ;../src/boards/w65_bd.c: 99:  CLCnSEL2 = 0x3a;
 22450   01C15C  0E3A               	movlw	58
 22451   01C15E  6FDA               	movwf	218,b	;volatile
 22452                           
 22453                           ;../src/boards/w65_bd.c: 100:  CLCnSEL3 = 127;
 22454   01C160  0E7F               	movlw	127
 22455   01C162  6FDB               	movwf	219,b	;volatile
 22456                           
 22457                           ;../src/boards/w65_bd.c: 102:     CLCnGLS0 = 0x02;
 22458   01C164  0E02               	movlw	2
 22459   01C166  6FDC               	movwf	220,b	;volatile
 22460                           
 22461                           ;../src/boards/w65_bd.c: 103:  CLCnGLS1 = 0x08;
 22462   01C168  0E08               	movlw	8
 22463   01C16A  6FDD               	movwf	221,b	;volatile
 22464                           
 22465                           ;../src/boards/w65_bd.c: 104:  CLCnGLS2 = 0x20;
 22466   01C16C  0E20               	movlw	32
 22467   01C16E  6FDE               	movwf	222,b	;volatile
 22468   01C170                     
 22469                           ; BSR set to: 0
 22470                           ;../src/boards/w65_bd.c: 105:     CLCnGLS3 = 0x00;
 22471   01C170  6BDF               	clrf	223,b	;volatile
 22472                           
 22473                           ;../src/boards/w65_bd.c: 107:     CLCnPOL = 0x80;
 22474   01C172  0E80               	movlw	128
 22475   01C174  6FD7               	movwf	215,b	;volatile
 22476                           
 22477                           ;../src/boards/w65_bd.c: 108:     CLCnCON = 0x84;
 22478   01C176  0E84               	movlw	132
 22479   01C178  6FD6               	movwf	214,b	;volatile
 22480                           
 22481                           ;../src/boards/w65_bd.c: 112:  CLCSELECT = 2;
 22482   01C17A  0E02               	movlw	2
 22483   01C17C  6FD5               	movwf	213,b	;volatile
 22484                           
 22485                           ;../src/boards/w65_bd.c: 114:  CLCnSEL0 = 0x2a;
 22486   01C17E  0E2A               	movlw	42
 22487   01C180  6FD8               	movwf	216,b	;volatile
 22488                           
 22489                           ;../src/boards/w65_bd.c: 115:     CLCnSEL1 = 0x34;
 22490   01C182  0E34               	movlw	52
 22491   01C184  6FD9               	movwf	217,b	;volatile
 22492                           
 22493                           ;../src/boards/w65_bd.c: 116:  CLCnSEL2 = 0x3a;
 22494   01C186  0E3A               	movlw	58
 22495   01C188  6FDA               	movwf	218,b	;volatile
 22496                           
 22497                           ;../src/boards/w65_bd.c: 117:  CLCnSEL3 = 127;
 22498   01C18A  0E7F               	movlw	127
 22499   01C18C  6FDB               	movwf	219,b	;volatile
 22500                           
 22501                           ;../src/boards/w65_bd.c: 119:     CLCnGLS0 = 0x02;
 22502   01C18E  0E02               	movlw	2
 22503   01C190  6FDC               	movwf	220,b	;volatile
 22504                           
 22505                           ;../src/boards/w65_bd.c: 120:  CLCnGLS1 = 0x04;
 22506   01C192  0E04               	movlw	4
 22507   01C194  6FDD               	movwf	221,b	;volatile
 22508                           
 22509                           ;../src/boards/w65_bd.c: 121:  CLCnGLS2 = 0x20;
 22510   01C196  0E20               	movlw	32
 22511   01C198  6FDE               	movwf	222,b	;volatile
 22512   01C19A                     
 22513                           ; BSR set to: 0
 22514                           ;../src/boards/w65_bd.c: 122:     CLCnGLS3 = 0x00;
 22515   01C19A  6BDF               	clrf	223,b	;volatile
 22516   01C19C                     
 22517                           ; BSR set to: 0
 22518                           ;../src/boards/w65_bd.c: 124:     CLCnPOL = 0x00;
 22519   01C19C  6BD7               	clrf	215,b	;volatile
 22520                           
 22521                           ;../src/boards/w65_bd.c: 125:     CLCnCON = 0x84;
 22522   01C19E  0E84               	movlw	132
 22523   01C1A0  6FD6               	movwf	214,b	;volatile
 22524   01C1A2                     
 22525                           ; BSR set to: 0
 22526                           ;../src/boards/w65_bd.c: 127:  G3POL = 1;
 22527   01C1A2  85D7               	bsf	215,2,b	;volatile
 22528   01C1A4                     
 22529                           ; BSR set to: 0
 22530                           ;../src/boards/w65_bd.c: 128:  G3POL = 0;
 22531   01C1A4  95D7               	bcf	215,2,b	;volatile
 22532                           
 22533                           ;../src/boards/w65_bd.c: 132:  CLCSELECT = 3;
 22534   01C1A6  0E03               	movlw	3
 22535   01C1A8  6FD5               	movwf	213,b	;volatile
 22536                           
 22537                           ;../src/boards/w65_bd.c: 134:  CLCnSEL0 = 0x2a;
 22538   01C1AA  0E2A               	movlw	42
 22539   01C1AC  6FD8               	movwf	216,b	;volatile
 22540                           
 22541                           ;../src/boards/w65_bd.c: 135:     CLCnSEL1 = 0x35;
 22542   01C1AE  0E35               	movlw	53
 22543   01C1B0  6FD9               	movwf	217,b	;volatile
 22544                           
 22545                           ;../src/boards/w65_bd.c: 136:  CLCnSEL2 = 0x3a;
 22546   01C1B2  0E3A               	movlw	58
 22547   01C1B4  6FDA               	movwf	218,b	;volatile
 22548                           
 22549                           ;../src/boards/w65_bd.c: 137:  CLCnSEL3 = 127;
 22550   01C1B6  0E7F               	movlw	127
 22551   01C1B8  6FDB               	movwf	219,b	;volatile
 22552                           
 22553                           ;../src/boards/w65_bd.c: 139:     CLCnGLS0 = 0x02;
 22554   01C1BA  0E02               	movlw	2
 22555   01C1BC  6FDC               	movwf	220,b	;volatile
 22556                           
 22557                           ;../src/boards/w65_bd.c: 140:  CLCnGLS1 = 0x08;
 22558   01C1BE  0E08               	movlw	8
 22559   01C1C0  6FDD               	movwf	221,b	;volatile
 22560                           
 22561                           ;../src/boards/w65_bd.c: 141:  CLCnGLS2 = 0x20;
 22562   01C1C2  0E20               	movlw	32
 22563   01C1C4  6FDE               	movwf	222,b	;volatile
 22564   01C1C6                     
 22565                           ; BSR set to: 0
 22566                           ;../src/boards/w65_bd.c: 142:     CLCnGLS3 = 0x00;
 22567   01C1C6  6BDF               	clrf	223,b	;volatile
 22568   01C1C8                     
 22569                           ; BSR set to: 0
 22570                           ;../src/boards/w65_bd.c: 144:     CLCnPOL = 0x00;
 22571   01C1C8  6BD7               	clrf	215,b	;volatile
 22572                           
 22573                           ;../src/boards/w65_bd.c: 145:     CLCnCON = 0x84;
 22574   01C1CA  0E84               	movlw	132
 22575   01C1CC  6FD6               	movwf	214,b	;volatile
 22576   01C1CE                     
 22577                           ; BSR set to: 0
 22578                           ;../src/boards/w65_bd.c: 147:  G3POL = 1;
 22579   01C1CE  85D7               	bsf	215,2,b	;volatile
 22580   01C1D0                     
 22581                           ; BSR set to: 0
 22582                           ;../src/boards/w65_bd.c: 148:  G3POL = 0;
 22583   01C1D0  95D7               	bcf	215,2,b	;volatile
 22584                           
 22585                           ;../src/boards/w65_bd.c: 152:  CLCSELECT = 4;
 22586   01C1D2  0E04               	movlw	4
 22587   01C1D4  6FD5               	movwf	213,b	;volatile
 22588                           
 22589                           ;../src/boards/w65_bd.c: 154:  CLCnSEL0 = 0x2a;
 22590   01C1D6  0E2A               	movlw	42
 22591   01C1D8  6FD8               	movwf	216,b	;volatile
 22592                           
 22593                           ;../src/boards/w65_bd.c: 155:     CLCnSEL1 = 0x36;
 22594   01C1DA  0E36               	movlw	54
 22595   01C1DC  6FD9               	movwf	217,b	;volatile
 22596                           
 22597                           ;../src/boards/w65_bd.c: 156:  CLCnSEL2 = 0x3a;
 22598   01C1DE  0E3A               	movlw	58
 22599   01C1E0  6FDA               	movwf	218,b	;volatile
 22600                           
 22601                           ;../src/boards/w65_bd.c: 157:  CLCnSEL3 = 127;
 22602   01C1E2  0E7F               	movlw	127
 22603   01C1E4  6FDB               	movwf	219,b	;volatile
 22604                           
 22605                           ;../src/boards/w65_bd.c: 159:     CLCnGLS0 = 0x02;
 22606   01C1E6  0E02               	movlw	2
 22607   01C1E8  6FDC               	movwf	220,b	;volatile
 22608                           
 22609                           ;../src/boards/w65_bd.c: 160:  CLCnGLS1 = 0x08;
 22610   01C1EA  0E08               	movlw	8
 22611   01C1EC  6FDD               	movwf	221,b	;volatile
 22612                           
 22613                           ;../src/boards/w65_bd.c: 161:  CLCnGLS2 = 0x20;
 22614   01C1EE  0E20               	movlw	32
 22615   01C1F0  6FDE               	movwf	222,b	;volatile
 22616   01C1F2                     
 22617                           ; BSR set to: 0
 22618                           ;../src/boards/w65_bd.c: 162:     CLCnGLS3 = 0x00;
 22619   01C1F2  6BDF               	clrf	223,b	;volatile
 22620   01C1F4                     
 22621                           ; BSR set to: 0
 22622                           ;../src/boards/w65_bd.c: 164:     CLCnPOL = 0x00;
 22623   01C1F4  6BD7               	clrf	215,b	;volatile
 22624                           
 22625                           ;../src/boards/w65_bd.c: 165:     CLCnCON = 0x84;
 22626   01C1F6  0E84               	movlw	132
 22627   01C1F8  6FD6               	movwf	214,b	;volatile
 22628   01C1FA                     
 22629                           ; BSR set to: 0
 22630                           ;../src/boards/w65_bd.c: 167:  G3POL = 1;
 22631   01C1FA  85D7               	bsf	215,2,b	;volatile
 22632   01C1FC                     
 22633                           ; BSR set to: 0
 22634                           ;../src/boards/w65_bd.c: 168:  G3POL = 0;
 22635   01C1FC  95D7               	bcf	215,2,b	;volatile
 22636                           
 22637                           ;../src/boards/w65_bd.c: 172:  CLCSELECT = 5;
 22638   01C1FE  0E05               	movlw	5
 22639   01C200  6FD5               	movwf	213,b	;volatile
 22640                           
 22641                           ;../src/boards/w65_bd.c: 174:  CLCnSEL0 = 0x2a;
 22642   01C202  0E2A               	movlw	42
 22643   01C204  6FD8               	movwf	216,b	;volatile
 22644                           
 22645                           ;../src/boards/w65_bd.c: 175:     CLCnSEL1 = 0x37;
 22646   01C206  0E37               	movlw	55
 22647   01C208  6FD9               	movwf	217,b	;volatile
 22648                           
 22649                           ;../src/boards/w65_bd.c: 176:  CLCnSEL2 = 0x3a;
 22650   01C20A  0E3A               	movlw	58
 22651   01C20C  6FDA               	movwf	218,b	;volatile
 22652                           
 22653                           ;../src/boards/w65_bd.c: 177:  CLCnSEL3 = 127;
 22654   01C20E  0E7F               	movlw	127
 22655   01C210  6FDB               	movwf	219,b	;volatile
 22656                           
 22657                           ;../src/boards/w65_bd.c: 179:     CLCnGLS0 = 0x02;
 22658   01C212  0E02               	movlw	2
 22659   01C214  6FDC               	movwf	220,b	;volatile
 22660                           
 22661                           ;../src/boards/w65_bd.c: 180:  CLCnGLS1 = 0x08;
 22662   01C216  0E08               	movlw	8
 22663   01C218  6FDD               	movwf	221,b	;volatile
 22664                           
 22665                           ;../src/boards/w65_bd.c: 181:  CLCnGLS2 = 0x20;
 22666   01C21A  0E20               	movlw	32
 22667   01C21C  6FDE               	movwf	222,b	;volatile
 22668   01C21E                     
 22669                           ; BSR set to: 0
 22670                           ;../src/boards/w65_bd.c: 182:     CLCnGLS3 = 0x00;
 22671   01C21E  6BDF               	clrf	223,b	;volatile
 22672   01C220                     
 22673                           ; BSR set to: 0
 22674                           ;../src/boards/w65_bd.c: 184:     CLCnPOL = 0x00;
 22675   01C220  6BD7               	clrf	215,b	;volatile
 22676                           
 22677                           ;../src/boards/w65_bd.c: 185:     CLCnCON = 0x84;
 22678   01C222  0E84               	movlw	132
 22679   01C224  6FD6               	movwf	214,b	;volatile
 22680   01C226                     
 22681                           ; BSR set to: 0
 22682                           ;../src/boards/w65_bd.c: 187:  G3POL = 1;
 22683   01C226  85D7               	bsf	215,2,b	;volatile
 22684   01C228                     
 22685                           ; BSR set to: 0
 22686                           ;../src/boards/w65_bd.c: 188:  G3POL = 0;
 22687   01C228  95D7               	bcf	215,2,b	;volatile
 22688                           
 22689                           ;../src/boards/w65_bd.c: 192:  CLCSELECT = 6;
 22690   01C22A  0E06               	movlw	6
 22691   01C22C  6FD5               	movwf	213,b	;volatile
 22692                           
 22693                           ;../src/boards/w65_bd.c: 194:  CLCnSEL0 = 0x2a;
 22694   01C22E  0E2A               	movlw	42
 22695   01C230  6FD8               	movwf	216,b	;volatile
 22696                           
 22697                           ;../src/boards/w65_bd.c: 195:  CLCnSEL1 = 0x38;
 22698   01C232  0E38               	movlw	56
 22699   01C234  6FD9               	movwf	217,b	;volatile
 22700                           
 22701                           ;../src/boards/w65_bd.c: 196:  CLCnSEL2 = 127;
 22702   01C236  0E7F               	movlw	127
 22703   01C238  6FDA               	movwf	218,b	;volatile
 22704                           
 22705                           ;../src/boards/w65_bd.c: 197:  CLCnSEL3 = 127;
 22706   01C23A  0E7F               	movlw	127
 22707   01C23C  6FDB               	movwf	219,b	;volatile
 22708                           
 22709                           ;../src/boards/w65_bd.c: 199:     CLCnGLS0 = 0x02;
 22710   01C23E  0E02               	movlw	2
 22711   01C240  6FDC               	movwf	220,b	;volatile
 22712                           
 22713                           ;../src/boards/w65_bd.c: 200:  CLCnGLS1 = 0x08;
 22714   01C242  0E08               	movlw	8
 22715   01C244  6FDD               	movwf	221,b	;volatile
 22716   01C246                     
 22717                           ; BSR set to: 0
 22718                           ;../src/boards/w65_bd.c: 201:     CLCnGLS2 = 0x00;
 22719   01C246  6BDE               	clrf	222,b	;volatile
 22720   01C248                     
 22721                           ; BSR set to: 0
 22722                           ;../src/boards/w65_bd.c: 202:     CLCnGLS3 = 0x00;
 22723   01C248  6BDF               	clrf	223,b	;volatile
 22724   01C24A                     
 22725                           ; BSR set to: 0
 22726                           ;../src/boards/w65_bd.c: 204:     CLCnPOL = 0x00;
 22727   01C24A  6BD7               	clrf	215,b	;volatile
 22728                           
 22729                           ;../src/boards/w65_bd.c: 205:     CLCnCON = 0x84;
 22730   01C24C  0E84               	movlw	132
 22731   01C24E  6FD6               	movwf	214,b	;volatile
 22732   01C250                     
 22733                           ; BSR set to: 0
 22734                           ;../src/boards/w65_bd.c: 207:  G3POL = 1;
 22735   01C250  85D7               	bsf	215,2,b	;volatile
 22736   01C252                     
 22737                           ; BSR set to: 0
 22738                           ;../src/boards/w65_bd.c: 208:  G3POL = 0;
 22739   01C252  95D7               	bcf	215,2,b	;volatile
 22740                           
 22741                           ;../src/boards/w65_bd.c: 212:  CLCSELECT = 7;
 22742   01C254  0E07               	movlw	7
 22743   01C256  6FD5               	movwf	213,b	;volatile
 22744                           
 22745                           ;../src/boards/w65_bd.c: 214:  CLCnSEL0 = 0x2a;
 22746   01C258  0E2A               	movlw	42
 22747   01C25A  6FD8               	movwf	216,b	;volatile
 22748                           
 22749                           ;../src/boards/w65_bd.c: 215:  CLCnSEL1 = 0x39;
 22750   01C25C  0E39               	movlw	57
 22751   01C25E  6FD9               	movwf	217,b	;volatile
 22752                           
 22753                           ;../src/boards/w65_bd.c: 216:  CLCnSEL2 = 0x3a;
 22754   01C260  0E3A               	movlw	58
 22755   01C262  6FDA               	movwf	218,b	;volatile
 22756                           
 22757                           ;../src/boards/w65_bd.c: 217:  CLCnSEL3 = 127;
 22758   01C264  0E7F               	movlw	127
 22759   01C266  6FDB               	movwf	219,b	;volatile
 22760                           
 22761                           ;../src/boards/w65_bd.c: 219:     CLCnGLS0 = 0x01;
 22762   01C268  0E01               	movlw	1
 22763   01C26A  6FDC               	movwf	220,b	;volatile
 22764                           
 22765                           ;../src/boards/w65_bd.c: 220:  CLCnGLS1 = 0x08;
 22766   01C26C  0E08               	movlw	8
 22767   01C26E  6FDD               	movwf	221,b	;volatile
 22768   01C270                     
 22769                           ; BSR set to: 0
 22770                           ;../src/boards/w65_bd.c: 221:     CLCnGLS2 = 0x00;
 22771   01C270  6BDE               	clrf	222,b	;volatile
 22772                           
 22773                           ;../src/boards/w65_bd.c: 222:     CLCnGLS3 = 0x20;
 22774   01C272  0E20               	movlw	32
 22775   01C274  6FDF               	movwf	223,b	;volatile
 22776   01C276                     
 22777                           ; BSR set to: 0
 22778                           ;../src/boards/w65_bd.c: 224:     CLCnPOL = 0x00;
 22779   01C276  6BD7               	clrf	215,b	;volatile
 22780                           
 22781                           ;../src/boards/w65_bd.c: 225:     CLCnCON = 0x85;
 22782   01C278  0E85               	movlw	133
 22783   01C27A  6FD6               	movwf	214,b	;volatile
 22784   01C27C                     
 22785                           ; BSR set to: 0
 22786                           ;../src/boards/w65_bd.c: 227:  G3POL = 1;
 22787   01C27C  85D7               	bsf	215,2,b	;volatile
 22788   01C27E                     
 22789                           ; BSR set to: 0
 22790                           ;../src/boards/w65_bd.c: 228:  G3POL = 0;
 22791   01C27E  95D7               	bcf	215,2,b	;volatile
 22792                           
 22793                           ;../src/boards/w65_bd.c: 231:  CLCSELECT = 1;
 22794   01C280  0E01               	movlw	1
 22795   01C282  6FD5               	movwf	213,b	;volatile
 22796   01C284                     
 22797                           ; BSR set to: 0
 22798                           ;../src/boards/w65_bd.c: 233:  G3POL = 1;
 22799   01C284  85D7               	bsf	215,2,b	;volatile
 22800   01C286                     
 22801                           ; BSR set to: 0
 22802                           ;../src/boards/w65_bd.c: 234:  G3POL = 0;
 22803   01C286  95D7               	bcf	215,2,b	;volatile
 22804                           
 22805                           ;../src/boards/w65_bd.c: 236:  RA2PPS = 0x02;
 22806   01C288  0E02               	movlw	2
 22807   01C28A  0102               	movlb	2	; () banked
 22808   01C28C  6F03               	movwf	3,b	;volatile
 22809   01C28E                     
 22810                           ; BSR set to: 2
 22811                           ;../src/boards/w65_bd.c: 238:  irq_flg = 0;
 22812   01C28E  0107               	movlb	7	; () banked
 22813   01C290  6BCB               	clrf	_irq_flg& (0+255),b
 22814   01C292                     
 22815                           ; BSR set to: 7
 22816   01C292  0012               	return		;funcret
 22817   01C294                     __end_of_clc_init:
 22818                           	callstack 0
 22819                           
 22820 ;; *************** function _f_chdir *****************
 22821 ;; Defined at:
 22822 ;;		line 4271 in file "../fatfs/ff.c"
 22823 ;; Parameters:    Size  Location     Type
 22824 ;;  path            2  175[BANK6 ] PTR const unsigned char 
 22825 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 22826 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 22827 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 22828 ;; Auto vars:     Size  Location     Type
 22829 ;;  dj             40  180[BANK6 ] struct .
 22830 ;;  fs              2  178[BANK6 ] PTR struct .
 22831 ;;		 -> fs(564), NULL(0), 
 22832 ;;  res             1  177[BANK6 ] enum E597
 22833 ;; Return value:  Size  Location     Type
 22834 ;;                  1    wreg      enum E17409
 22835 ;; Registers used:
 22836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22837 ;; Tracked objects:
 22838 ;;		On entry : 0/0
 22839 ;;		On exit  : 0/0
 22840 ;;		Unchanged: 0/0
 22841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22842 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22843 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;Total ram usage:       45 bytes
 22847 ;; Hardware stack levels used: 1
 22848 ;; Hardware stack levels required when called: 19
 22849 ;; This function calls:
 22850 ;;		_follow_path
 22851 ;;		_ld_clust
 22852 ;;		_mount_volume
 22853 ;; This function is called by:
 22854 ;;		_change_directory
 22855 ;; This function uses a non-reentrant model
 22856 ;;
 22857                           
 22858                           	psect	text48
 22859   01D82E                     __ptext48:
 22860                           	callstack 0
 22861   01D82E                     _f_chdir:
 22862                           	callstack 106
 22863   01D82E                     
 22864                           ;../fatfs/ff.c: 4272:  const TCHAR* path;../fatfs/ff.c: 4274: {;../fatfs/ff.c: 4278:  FR
      +                          ESULT res;;../fatfs/ff.c: 4279:  DIR dj;;../fatfs/ff.c: 4280:  FATFS *fs;;../fatfs/ff.c:
      +                           4285:  res = mount_volume(&path, &fs, 0);
 22865   01D82E  0EAF               	movlw	low f_chdir@path
 22866   01D830  0106               	movlb	6	; () banked
 22867   01D832  6F81               	movwf	mount_volume@path& (0+255),b
 22868   01D834  0E06               	movlw	high f_chdir@path
 22869   01D836  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 22870   01D838  0EB2               	movlw	low f_chdir@fs
 22871   01D83A  6F83               	movwf	mount_volume@rfs& (0+255),b
 22872   01D83C  0E06               	movlw	high f_chdir@fs
 22873   01D83E  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 22874   01D840  0E00               	movlw	0
 22875   01D842  6F85               	movwf	mount_volume@mode& (0+255),b
 22876   01D844  EC00  F080         	call	_mount_volume	;wreg free
 22877   01D848  0106               	movlb	6	; () banked
 22878   01D84A  6FB1               	movwf	f_chdir@res& (0+255),b
 22879   01D84C                     
 22880                           ; BSR set to: 6
 22881                           ;../fatfs/ff.c: 4286:  if (res == FR_OK) {
 22882   01D84C  51B1               	movf	f_chdir@res& (0+255),w,b
 22883   01D84E  A4D8               	btfss	status,2,c
 22884   01D850  EF2C  F0EC         	goto	u34451
 22885   01D854  EF2E  F0EC         	goto	u34450
 22886   01D858                     u34451:
 22887   01D858  EF8E  F0EC         	goto	l2011
 22888   01D85C                     u34450:
 22889   01D85C                     
 22890                           ; BSR set to: 6
 22891                           ;../fatfs/ff.c: 4287:   dj.obj.fs = fs;
 22892   01D85C  C6B2  F6B4         	movff	f_chdir@fs,f_chdir@dj
 22893   01D860  C6B3  F6B5         	movff	f_chdir@fs+1,f_chdir@dj+1
 22894   01D864                     
 22895                           ; BSR set to: 6
 22896                           ;../fatfs/ff.c: 4289:   res = follow_path(&dj, path);
 22897   01D864  0EB4               	movlw	low f_chdir@dj
 22898   01D866  6F84               	movwf	follow_path@dp& (0+255),b
 22899   01D868  0E06               	movlw	high f_chdir@dj
 22900   01D86A  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 22901   01D86C  C6AF  F686         	movff	f_chdir@path,follow_path@path
 22902   01D870  C6B0  F687         	movff	f_chdir@path+1,follow_path@path+1
 22903   01D874  EC61  F0C4         	call	_follow_path	;wreg free
 22904   01D878  0106               	movlb	6	; () banked
 22905   01D87A  6FB1               	movwf	f_chdir@res& (0+255),b
 22906   01D87C                     
 22907                           ; BSR set to: 6
 22908                           ;../fatfs/ff.c: 4290:   if (res == FR_OK) {
 22909   01D87C  51B1               	movf	f_chdir@res& (0+255),w,b
 22910   01D87E  A4D8               	btfss	status,2,c
 22911   01D880  EF44  F0EC         	goto	u34461
 22912   01D884  EF46  F0EC         	goto	u34460
 22913   01D888                     u34461:
 22914   01D888  EF83  F0EC         	goto	l24835
 22915   01D88C                     u34460:
 22916   01D88C                     
 22917                           ; BSR set to: 6
 22918                           ;../fatfs/ff.c: 4291:    if (dj.fn[11] & 0x80) {
 22919   01D88C  AFDB               	btfss	(f_chdir@dj+39)& (0+255),7,b
 22920   01D88E  EF4B  F0EC         	goto	u34471
 22921   01D892  EF4D  F0EC         	goto	u34470
 22922   01D896                     u34471:
 22923   01D896  EF5F  F0EC         	goto	l2013
 22924   01D89A                     u34470:
 22925   01D89A                     
 22926                           ; BSR set to: 6
 22927                           ;../fatfs/ff.c: 4292:     fs->cdir = dj.obj.sclust;
 22928   01D89A  EE21  F2BA         	lfsr	2,f_chdir@dj+6
 22929   01D89E  EE10 F014          	lfsr	1,20
 22930   01D8A2  51B2               	movf	f_chdir@fs& (0+255),w,b
 22931   01D8A4  26E1               	addwf	fsr1l,f,c
 22932   01D8A6  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 22933   01D8A8  22E2               	addwfc	fsr1h,f,c
 22934   01D8AA  C4DE F4E6          	movff	postinc2,postinc1
 22935   01D8AE  C4DE F4E6          	movff	postinc2,postinc1
 22936   01D8B2  C4DE F4E6          	movff	postinc2,postinc1
 22937   01D8B6  C4DE F4E6          	movff	postinc2,postinc1
 22938                           
 22939                           ;../fatfs/ff.c: 4300:    } else {
 22940   01D8BA  EF83  F0EC         	goto	l24835
 22941   01D8BE                     l2013:
 22942                           
 22943                           ; BSR set to: 6
 22944                           ;../fatfs/ff.c: 4301:     if (dj.obj.attr & 0x10) {
 22945   01D8BE  A9B8               	btfss	(f_chdir@dj+4)& (0+255),4,b
 22946   01D8C0  EF64  F0EC         	goto	u34481
 22947   01D8C4  EF66  F0EC         	goto	u34480
 22948   01D8C8                     u34481:
 22949   01D8C8  EF81  F0EC         	goto	l24833
 22950   01D8CC                     u34480:
 22951   01D8CC                     
 22952                           ; BSR set to: 6
 22953                           ;../fatfs/ff.c: 4310:      {;../fatfs/ff.c: 4311:       fs->cdir = ld_clust(fs, dj.dir);
 22954   01D8CC  C6B2  F50B         	movff	f_chdir@fs,ld_clust@fs
 22955   01D8D0  C6B3  F50C         	movff	f_chdir@fs+1,ld_clust@fs+1
 22956   01D8D4  C6CE  F50D         	movff	f_chdir@dj+26,ld_clust@dir
 22957   01D8D8  C6CF  F50E         	movff	f_chdir@dj+27,ld_clust@dir+1
 22958   01D8DC  EC3A  F0F9         	call	_ld_clust	;wreg free
 22959   01D8E0  0106               	movlb	6	; () banked
 22960   01D8E2  EE20 F014          	lfsr	2,20
 22961   01D8E6  51B2               	movf	f_chdir@fs& (0+255),w,b
 22962   01D8E8  26D9               	addwf	fsr2l,f,c
 22963   01D8EA  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 22964   01D8EC  22DA               	addwfc	fsr2h,f,c
 22965   01D8EE  C50B  F4DE         	movff	?_ld_clust,postinc2
 22966   01D8F2  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 22967   01D8F6  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 22968   01D8FA  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 22969                           
 22970                           ;../fatfs/ff.c: 4312:      };../fatfs/ff.c: 4313:     } else {
 22971   01D8FE  EF83  F0EC         	goto	l24835
 22972   01D902                     l24833:
 22973                           
 22974                           ; BSR set to: 6
 22975                           ;../fatfs/ff.c: 4314:      res = FR_NO_PATH;
 22976   01D902  0E05               	movlw	5
 22977   01D904  6FB1               	movwf	f_chdir@res& (0+255),b
 22978   01D906                     l24835:
 22979                           
 22980                           ; BSR set to: 6
 22981                           ;../fatfs/ff.c: 4319:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 22982   01D906  0E04               	movlw	4
 22983   01D908  19B1               	xorwf	f_chdir@res& (0+255),w,b
 22984   01D90A  A4D8               	btfss	status,2,c
 22985   01D90C  EF8A  F0EC         	goto	u34491
 22986   01D910  EF8C  F0EC         	goto	u34490
 22987   01D914                     u34491:
 22988   01D914  EF8E  F0EC         	goto	l2011
 22989   01D918                     u34490:
 22990   01D918                     
 22991                           ; BSR set to: 6
 22992   01D918  0E05               	movlw	5
 22993   01D91A  6FB1               	movwf	f_chdir@res& (0+255),b
 22994   01D91C                     l2011:
 22995                           
 22996                           ; BSR set to: 6
 22997                           ;../fatfs/ff.c: 4328:  return res;
 22998   01D91C  51B1               	movf	f_chdir@res& (0+255),w,b
 22999   01D91E                     
 23000                           ; BSR set to: 6
 23001   01D91E  0012               	return		;funcret
 23002   01D920                     __end_of_f_chdir:
 23003                           	callstack 0
 23004                           
 23005 ;; *************** function _start_cpu *****************
 23006 ;; Defined at:
 23007 ;;		line 419 in file "../src/boards/w65_cmn.c"
 23008 ;; Parameters:    Size  Location     Type
 23009 ;;		None
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;		None
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1    wreg      void 
 23014 ;; Registers used:
 23015 ;;		wreg, status,2, cstack
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;Total ram usage:        2 bytes
 23026 ;; Hardware stack levels used: 1
 23027 ;; Hardware stack levels required when called: 2
 23028 ;; This function calls:
 23029 ;;		_bus_release_req
 23030 ;; This function is called by:
 23031 ;;		_boot_file
 23032 ;;		_wstart_prog
 23033 ;;		_restart_prog
 23034 ;;		_mon_prog
 23035 ;; This function uses a non-reentrant model
 23036 ;;
 23037                           
 23038                           	psect	text49
 23039   01FDF0                     __ptext49:
 23040                           	callstack 0
 23041   01FDF0                     _start_cpu:
 23042                           	callstack 123
 23043   01FDF0                     
 23044                           ;../src/boards/w65_cmn.c: 421:  bus_release_req();
 23045   01FDF0  EC32  F001         	call	_bus_release_req	;wreg free
 23046   01FDF4                     
 23047                           ;../src/boards/w65_cmn.c: 423:  CLCSELECT = 0;
 23048   01FDF4  0100               	movlb	0	; () banked
 23049   01FDF6  6BD5               	clrf	213,b	;volatile
 23050   01FDF8                     
 23051                           ; BSR set to: 0
 23052                           ;../src/boards/w65_cmn.c: 424:  G2POL = 0;
 23053   01FDF8  93D7               	bcf	215,1,b	;volatile
 23054   01FDFA                     
 23055                           ; BSR set to: 0
 23056                           ;../src/boards/w65_cmn.c: 425:  LATE0 = 0;
 23057   01FDFA  90C2               	bcf	1218,0,c	;volatile
 23058   01FDFC                     
 23059                           ; BSR set to: 0
 23060                           ;../src/boards/w65_cmn.c: 427:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 23061   01FDFC  0E09               	movlw	9
 23062   01FDFE  6E05               	movwf	(??_start_cpu+1)^(0+1280),c
 23063   01FE00  0E1E               	movlw	30
 23064   01FE02  6E04               	movwf	??_start_cpu^(0+1280),c
 23065   01FE04  0EE4               	movlw	228
 23066   01FE06                     u37097:
 23067   01FE06  2EE8               	decfsz	wreg,f,c
 23068   01FE08  D7FE               	bra	u37097
 23069   01FE0A  2E04               	decfsz	??_start_cpu^(0+1280),f,c
 23070   01FE0C  D7FC               	bra	u37097
 23071   01FE0E  2E05               	decfsz	(??_start_cpu+1)^(0+1280),f,c
 23072   01FE10  D7FA               	bra	u37097
 23073   01FE12  D000               	nop2	
 23074   01FE14                     
 23075                           ;../src/boards/w65_cmn.c: 429:  G2POL = 1;
 23076   01FE14  0100               	movlb	0	; () banked
 23077   01FE16  83D7               	bsf	215,1,b	;volatile
 23078   01FE18                     
 23079                           ; BSR set to: 0
 23080                           ;../src/boards/w65_cmn.c: 431:  CLCSELECT = 7;
 23081   01FE18  0E07               	movlw	7
 23082   01FE1A  6FD5               	movwf	213,b	;volatile
 23083   01FE1C                     
 23084                           ; BSR set to: 0
 23085                           ;../src/boards/w65_cmn.c: 432:  G3POL = 1;
 23086   01FE1C  85D7               	bsf	215,2,b	;volatile
 23087   01FE1E                     
 23088                           ; BSR set to: 0
 23089                           ;../src/boards/w65_cmn.c: 433:  G3POL = 0;
 23090   01FE1E  95D7               	bcf	215,2,b	;volatile
 23091   01FE20                     
 23092                           ; BSR set to: 0
 23093                           ;../src/boards/w65_cmn.c: 435:  LATE0 = 1;
 23094   01FE20  80C2               	bsf	1218,0,c	;volatile
 23095   01FE22                     
 23096                           ; BSR set to: 0
 23097                           ;../src/boards/w65_cmn.c: 437:  irq_flg = 0;
 23098   01FE22  0107               	movlb	7	; () banked
 23099   01FE24  6BCB               	clrf	_irq_flg& (0+255),b
 23100   01FE26                     
 23101                           ; BSR set to: 7
 23102   01FE26  0012               	return		;funcret
 23103   01FE28                     __end_of_start_cpu:
 23104                           	callstack 0
 23105                           
 23106 ;; *************** function _prt_reload *****************
 23107 ;; Defined at:
 23108 ;;		line 635 in file "../src/w65_main.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;		None
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;		None
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      void 
 23115 ;; Registers used:
 23116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/0
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23126 ;;Total ram usage:        0 bytes
 23127 ;; Hardware stack levels used: 1
 23128 ;; Hardware stack levels required when called: 9
 23129 ;; This function calls:
 23130 ;;		_printf
 23131 ;; This function is called by:
 23132 ;;		_boot_file
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text50
 23137   0001D6                     __ptext50:
 23138                           	callstack 0
 23139   0001D6                     _prt_reload:
 23140                           	callstack 116
 23141   0001D6                     
 23142                           ;../src/w65_main.c: 636:  printf("Reload monitor %s\r\n", arg[0]);
 23143   0001D6  0EAE               	movlw	low STR_106
 23144   0001D8  0105               	movlb	5	; () banked
 23145   0001DA  6FAD               	movwf	printf@fmt& (0+255),b
 23146   0001DC  0EFC               	movlw	high STR_106
 23147   0001DE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23148   0001E0  C79E  F5AF         	movff	_arg,?_printf+2
 23149   0001E4  C79F  F5B0         	movff	_arg+1,?_printf+3
 23150   0001E8  ECDA  F0FF         	call	_printf	;wreg free
 23151   0001EC  0012               	return		;funcret
 23152   0001EE                     __end_of_prt_reload:
 23153                           	callstack 0
 23154                           
 23155 ;; *************** function _load_program *****************
 23156 ;; Defined at:
 23157 ;;		line 301 in file "../src/w65_main.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;  fname           2    0[BANK7 ] PTR unsigned char 
 23160 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23161 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;  adr             4   10[BANK7 ] unsigned long 
 23164 ;;  adr0            4    2[BANK7 ] unsigned long 
 23165 ;;  header          2   19[BANK7 ] PTR struct .
 23166 ;;		 -> tmp_buf(512), 
 23167 ;;  br              2   16[BANK7 ] unsigned int 
 23168 ;;  cnt             2   14[BANK7 ] unsigned short 
 23169 ;;  btr             2    8[BANK7 ] unsigned int 
 23170 ;;  rdbuf           2    6[BANK7 ] PTR void 
 23171 ;;		 -> tmp_buf(512), 
 23172 ;;  fr              1   18[BANK7 ] enum E17409
 23173 ;; Return value:  Size  Location     Type
 23174 ;;                  2    0[BANK7 ] int 
 23175 ;; Registers used:
 23176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23177 ;; Tracked objects:
 23178 ;;		On entry : 0/0
 23179 ;;		On exit  : 0/0
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23182 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Totals:         0       1       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;Total ram usage:       22 bytes
 23187 ;; Hardware stack levels used: 1
 23188 ;; Hardware stack levels required when called: 20
 23189 ;; This function calls:
 23190 ;;		_f_close
 23191 ;;		_f_open
 23192 ;;		_f_read
 23193 ;;		_printf
 23194 ;;		_sprintf
 23195 ;;		_strstr
 23196 ;;		_write_sram
 23197 ;; This function is called by:
 23198 ;;		_setup_monitor
 23199 ;;		_boot_file
 23200 ;;		_load_file
 23201 ;; This function uses a non-reentrant model
 23202 ;;
 23203                           
 23204                           	psect	text51
 23205   015D0C                     __ptext51:
 23206                           	callstack 0
 23207   015D0C                     _load_program:
 23208                           	callstack 105
 23209   015D0C                     
 23210                           ;../src/w65_main.c: 303:  FRESULT fr;;../src/w65_main.c: 304:  void *rdbuf;;../src/w65_m
      +                          ain.c: 305:  UINT btr, br;;../src/w65_main.c: 306:  uint16_t cnt;;../src/w65_main.c: 307
      +                          :  uint32_t adr, adr0;;../src/w65_main.c: 308:  file_header *header;;../src/w65_main.c: 
      +                          310:  rdbuf = (void *)&tmp_buf[0][0];
 23211   015D0C  0EF8               	movlw	low _tmp_buf
 23212   015D0E  0107               	movlb	7	; () banked
 23213   015D10  6F06               	movwf	load_program@rdbuf& (0+255),b
 23214   015D12  0E13               	movlw	high _tmp_buf
 23215   015D14  6F07               	movwf	(load_program@rdbuf+1)& (0+255),b
 23216                           
 23217                           ;../src/w65_main.c: 311:  header = (file_header *)&tmp_buf[0][0];
 23218   015D16  0EF8               	movlw	low _tmp_buf
 23219   015D18  6F13               	movwf	load_program@header& (0+255),b
 23220   015D1A  0E13               	movlw	high _tmp_buf
 23221   015D1C  6F14               	movwf	(load_program@header+1)& (0+255),b
 23222   015D1E                     
 23223                           ; BSR set to: 7
 23224                           ;../src/w65_main.c: 313:  fr = f_open(&rom_fl, (TCHAR *)fname, 0x01);
 23225   015D1E  0ED6               	movlw	low _rom_fl
 23226   015D20  0106               	movlb	6	; () banked
 23227   015D22  6FAF               	movwf	f_open@fp& (0+255),b
 23228   015D24  0E0F               	movlw	high _rom_fl
 23229   015D26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 23230   015D28  C700  F6B1         	movff	load_program@fname,f_open@path
 23231   015D2C  C701  F6B2         	movff	load_program@fname+1,f_open@path+1
 23232   015D30  0E01               	movlw	1
 23233   015D32  6FB3               	movwf	f_open@mode& (0+255),b
 23234   015D34  ECDB  F092         	call	_f_open	;wreg free
 23235   015D38  0107               	movlb	7	; () banked
 23236   015D3A  6F12               	movwf	load_program@fr& (0+255),b
 23237   015D3C                     
 23238                           ; BSR set to: 7
 23239                           ;../src/w65_main.c: 314:  if ( fr != FR_OK ) {
 23240   015D3C  5112               	movf	load_program@fr& (0+255),w,b
 23241   015D3E  B4D8               	btfsc	status,2,c
 23242   015D40  EFA4  F0AE         	goto	u33751
 23243   015D44  EFA6  F0AE         	goto	u33750
 23244   015D48                     u33751:
 23245   015D48  EFB3  F0AE         	goto	l24433
 23246   015D4C                     u33750:
 23247   015D4C                     
 23248                           ; BSR set to: 7
 23249                           ;../src/w65_main.c: 315:   printf("File Open Error.\r\n");
 23250   015D4C  0E5D               	movlw	low (STR_133+2)
 23251   015D4E  0105               	movlb	5	; () banked
 23252   015D50  6FAD               	movwf	printf@fmt& (0+255),b
 23253   015D52  0EFC               	movlw	high (STR_133+2)
 23254   015D54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23255   015D56  ECDA  F0FF         	call	_printf	;wreg free
 23256   015D5A                     l24429:
 23257                           
 23258                           ;../src/w65_main.c: 316:   return((int)fr);
 23259   015D5A  C712  F700         	movff	load_program@fr,?_load_program
 23260   015D5E  0107               	movlb	7	; () banked
 23261   015D60  6B01               	clrf	(?_load_program+1)& (0+255),b
 23262   015D62  EFCE  F0B0         	goto	l1152
 23263   015D66                     l24433:
 23264                           
 23265                           ; BSR set to: 7
 23266                           ;../src/w65_main.c: 318:  adr = 0;
 23267   015D66  0E00               	movlw	0
 23268   015D68  6F0A               	movwf	load_program@adr& (0+255),b
 23269   015D6A  0E00               	movlw	0
 23270   015D6C  6F0B               	movwf	(load_program@adr+1)& (0+255),b
 23271   015D6E  0E00               	movlw	0
 23272   015D70  6F0C               	movwf	(load_program@adr+2)& (0+255),b
 23273   015D72  0E00               	movlw	0
 23274   015D74  6F0D               	movwf	(load_program@adr+3)& (0+255),b
 23275   015D76                     
 23276                           ; BSR set to: 7
 23277                           ;../src/w65_main.c: 319:  cnt = file_size = (uint16_t)((&rom_fl)->obj.objsize);
 23278   015D76  0063  FF80  F7B9   	movff	_rom_fl+10,_file_size
 23279   015D7C  0063  FF84  F7BA   	movff	_rom_fl+11,_file_size+1
 23280   015D82  C7B9  F70E         	movff	_file_size,load_program@cnt
 23281   015D86  C7BA  F70F         	movff	_file_size+1,load_program@cnt+1
 23282                           
 23283                           ;../src/w65_main.c: 320:  btr = 256 * 2;
 23284   015D8A  0E02               	movlw	2
 23285   015D8C  6F09               	movwf	(load_program@btr+1)& (0+255),b
 23286   015D8E  0E00               	movlw	0
 23287   015D90  6F08               	movwf	load_program@btr& (0+255),b
 23288                           
 23289                           ;../src/w65_main.c: 321:  while( cnt ) {
 23290   015D92  EF8B  F0B0         	goto	l24503
 23291   015D96                     l24437:
 23292                           
 23293                           ; BSR set to: 7
 23294                           ;../src/w65_main.c: 322:   fr = f_read(&rom_fl, rdbuf, btr, &br);
 23295   015D96  0ED6               	movlw	low _rom_fl
 23296   015D98  0106               	movlb	6	; () banked
 23297   015D9A  6F3E               	movwf	f_read@fp& (0+255),b
 23298   015D9C  0E0F               	movlw	high _rom_fl
 23299   015D9E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 23300   015DA0  C706  F640         	movff	load_program@rdbuf,f_read@buff
 23301   015DA4  C707  F641         	movff	load_program@rdbuf+1,f_read@buff+1
 23302   015DA8  C708  F642         	movff	load_program@btr,f_read@btr
 23303   015DAC  C709  F643         	movff	load_program@btr+1,f_read@btr+1
 23304   015DB0  0E10               	movlw	low load_program@br
 23305   015DB2  6F44               	movwf	f_read@br& (0+255),b
 23306   015DB4  0E07               	movlw	high load_program@br
 23307   015DB6  6F45               	movwf	(f_read@br+1)& (0+255),b
 23308   015DB8  EC9B  F096         	call	_f_read	;wreg free
 23309   015DBC  0107               	movlb	7	; () banked
 23310   015DBE  6F12               	movwf	load_program@fr& (0+255),b
 23311   015DC0                     
 23312                           ; BSR set to: 7
 23313                           ;../src/w65_main.c: 323:   if (fr == FR_OK) {
 23314   015DC0  5112               	movf	load_program@fr& (0+255),w,b
 23315   015DC2  A4D8               	btfss	status,2,c
 23316   015DC4  EFE6  F0AE         	goto	u33761
 23317   015DC8  EFE8  F0AE         	goto	u33760
 23318   015DCC                     u33761:
 23319   015DCC  EF94  F0B0         	goto	l24505
 23320   015DD0                     u33760:
 23321   015DD0                     
 23322                           ; BSR set to: 7
 23323                           ;../src/w65_main.c: 324:    if ( !adr ) {
 23324   015DD0  510A               	movf	load_program@adr& (0+255),w,b
 23325   015DD2  110B               	iorwf	(load_program@adr+1)& (0+255),w,b
 23326   015DD4  110C               	iorwf	(load_program@adr+2)& (0+255),w,b
 23327   015DD6  110D               	iorwf	(load_program@adr+3)& (0+255),w,b
 23328   015DD8  A4D8               	btfss	status,2,c
 23329   015DDA  EFF1  F0AE         	goto	u33771
 23330   015DDE  EFF3  F0AE         	goto	u33770
 23331   015DE2                     u33771:
 23332   015DE2  EF5D  F0B0         	goto	l24493
 23333   015DE6                     u33770:
 23334   015DE6                     
 23335                           ; BSR set to: 7
 23336                           ;../src/w65_main.c: 325:     if ( raw_addr ) {
 23337   015DE6  51AD               	movf	_raw_addr& (0+255),w,b
 23338   015DE8  11AE               	iorwf	(_raw_addr+1)& (0+255),w,b
 23339   015DEA  11AF               	iorwf	(_raw_addr+2)& (0+255),w,b
 23340   015DEC  11B0               	iorwf	(_raw_addr+3)& (0+255),w,b
 23341   015DEE  B4D8               	btfsc	status,2,c
 23342   015DF0  EFFC  F0AE         	goto	u33781
 23343   015DF4  EFFE  F0AE         	goto	u33780
 23344   015DF8                     u33781:
 23345   015DF8  EF10  F0AF         	goto	l24447
 23346   015DFC                     u33780:
 23347   015DFC                     
 23348                           ; BSR set to: 7
 23349                           ;../src/w65_main.c: 326:      adr = adr0 = raw_addr;
 23350   015DFC  C7AD  F702         	movff	_raw_addr,load_program@adr0
 23351   015E00  C7AE  F703         	movff	_raw_addr+1,load_program@adr0+1
 23352   015E04  C7AF  F704         	movff	_raw_addr+2,load_program@adr0+2
 23353   015E08  C7B0  F705         	movff	_raw_addr+3,load_program@adr0+3
 23354   015E0C  C702  F70A         	movff	load_program@adr0,load_program@adr
 23355   015E10  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 23356   015E14  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 23357   015E18  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 23358                           
 23359                           ;../src/w65_main.c: 327:     }
 23360   015E1C  EF5D  F0B0         	goto	l24493
 23361   015E20                     l24447:
 23362                           
 23363                           ; BSR set to: 7
 23364                           ;../src/w65_main.c: 329:      if (!strstr((const char *)header->mezID, mezID)) {
 23365   015E20  0E08               	movlw	8
 23366   015E22  2513               	addwf	load_program@header& (0+255),w,b
 23367   015E24  6E0B               	movwf	strstr@h^(0+1280),c
 23368   015E26  0E00               	movlw	0
 23369   015E28  2114               	addwfc	(load_program@header+1)& (0+255),w,b
 23370   015E2A  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 23371   015E2C  0E50               	movlw	low STR_46
 23372   015E2E  6E0D               	movwf	strstr@n^(0+1280),c
 23373   015E30  0EFF               	movlw	high STR_46
 23374   015E32  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 23375   015E34  ECCF  F0EE         	call	_strstr	;wreg free
 23376   015E38  500B               	movf	?_strstr^(0+1280),w,c
 23377   015E3A  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 23378   015E3C  A4D8               	btfss	status,2,c
 23379   015E3E  EF23  F0AF         	goto	u33791
 23380   015E42  EF25  F0AF         	goto	u33790
 23381   015E46                     u33791:
 23382   015E46  EF31  F0AF         	goto	l24453
 23383   015E4A                     u33790:
 23384   015E4A                     
 23385                           ;../src/w65_main.c: 330:       printf("Invalid MEZW65C file.\r\n");
 23386   015E4A  0E1E               	movlw	low STR_79
 23387   015E4C  0105               	movlb	5	; () banked
 23388   015E4E  6FAD               	movwf	printf@fmt& (0+255),b
 23389   015E50  0EFB               	movlw	high STR_79
 23390   015E52  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23391   015E54  ECDA  F0FF         	call	_printf	;wreg free
 23392   015E58                     l24451:
 23393                           
 23394                           ;../src/w65_main.c: 331:       fr = FR_INVALID_OBJECT;
 23395   015E58  0E09               	movlw	9
 23396   015E5A  0107               	movlb	7	; () banked
 23397   015E5C  6F12               	movwf	load_program@fr& (0+255),b
 23398                           
 23399                           ;../src/w65_main.c: 332:       break;
 23400   015E5E  EF94  F0B0         	goto	l24505
 23401   015E62                     l24453:
 23402                           
 23403                           ;../src/w65_main.c: 334:      if (header->sw_816==1 && !cpu_flg) {
 23404   015E62  0107               	movlb	7	; () banked
 23405   015E64  EE20 F018          	lfsr	2,24
 23406   015E68  5113               	movf	load_program@header& (0+255),w,b
 23407   015E6A  26D9               	addwf	fsr2l,f,c
 23408   015E6C  5114               	movf	(load_program@header+1)& (0+255),w,b
 23409   015E6E  22DA               	addwfc	fsr2h,f,c
 23410   015E70  04DE               	decf	postinc2,w,c
 23411   015E72  A4D8               	btfss	status,2,c
 23412   015E74  EF3E  F0AF         	goto	u33801
 23413   015E78  EF40  F0AF         	goto	u33800
 23414   015E7C                     u33801:
 23415   015E7C  EF51  F0AF         	goto	l24461
 23416   015E80                     u33800:
 23417   015E80                     
 23418                           ; BSR set to: 7
 23419   015E80  51E5               	movf	_cpu_flg& (0+255),w,b
 23420   015E82  A4D8               	btfss	status,2,c
 23421   015E84  EF46  F0AF         	goto	u33811
 23422   015E88  EF48  F0AF         	goto	u33810
 23423   015E8C                     u33811:
 23424   015E8C  EF51  F0AF         	goto	l24461
 23425   015E90                     u33810:
 23426   015E90                     
 23427                           ; BSR set to: 7
 23428                           ;../src/w65_main.c: 335:       printf("Work on only W65C816..\r\n");
 23429   015E90  0E89               	movlw	low STR_80
 23430   015E92  0105               	movlb	5	; () banked
 23431   015E94  6FAD               	movwf	printf@fmt& (0+255),b
 23432   015E96  0EFA               	movlw	high STR_80
 23433   015E98  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23434   015E9A  ECDA  F0FF         	call	_printf	;wreg free
 23435   015E9E  EF2C  F0AF         	goto	l24451
 23436   015EA2                     l24461:
 23437                           
 23438                           ; BSR set to: 7
 23439                           ;../src/w65_main.c: 339:      adr = adr0 = header->load_p;
 23440   015EA2  EE20 F010          	lfsr	2,16
 23441   015EA6  5113               	movf	load_program@header& (0+255),w,b
 23442   015EA8  26D9               	addwf	fsr2l,f,c
 23443   015EAA  5114               	movf	(load_program@header+1)& (0+255),w,b
 23444   015EAC  22DA               	addwfc	fsr2h,f,c
 23445   015EAE  C4DE F702          	movff	postinc2,load_program@adr0
 23446   015EB2  C4DE F703          	movff	postinc2,load_program@adr0+1
 23447   015EB6  C4DE F704          	movff	postinc2,load_program@adr0+2
 23448   015EBA  C4DE F705          	movff	postinc2,load_program@adr0+3
 23449   015EBE  C702  F70A         	movff	load_program@adr0,load_program@adr
 23450   015EC2  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 23451   015EC6  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 23452   015ECA  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 23453   015ECE                     
 23454                           ; BSR set to: 7
 23455                           ;../src/w65_main.c: 340:      if (!load_flg) {
 23456   015ECE  51C9               	movf	_load_flg& (0+255),w,b
 23457   015ED0  A4D8               	btfss	status,2,c
 23458   015ED2  EF6D  F0AF         	goto	u33821
 23459   015ED6  EF6F  F0AF         	goto	u33820
 23460   015EDA                     u33821:
 23461   015EDA  EF5D  F0B0         	goto	l24493
 23462   015EDE                     u33820:
 23463   015EDE                     
 23464                           ; BSR set to: 7
 23465                           ;../src/w65_main.c: 341:       if ( header->bios_sw == 1 ) {
 23466   015EDE  EE20 F01F          	lfsr	2,31
 23467   015EE2  5113               	movf	load_program@header& (0+255),w,b
 23468   015EE4  26D9               	addwf	fsr2l,f,c
 23469   015EE6  5114               	movf	(load_program@header+1)& (0+255),w,b
 23470   015EE8  22DA               	addwfc	fsr2h,f,c
 23471   015EEA  04DE               	decf	postinc2,w,c
 23472   015EEC  A4D8               	btfss	status,2,c
 23473   015EEE  EF7B  F0AF         	goto	u33831
 23474   015EF2  EF7D  F0AF         	goto	u33830
 23475   015EF6                     u33831:
 23476   015EF6  EFCB  F0AF         	goto	l24483
 23477   015EFA                     u33830:
 23478   015EFA                     
 23479                           ; BSR set to: 7
 23480                           ;../src/w65_main.c: 342:        binv.sw = 1;
 23481   015EFA  0E01               	movlw	1
 23482   015EFC  0108               	movlb	8	; () banked
 23483   015EFE  6F78               	movwf	_binv& (0+255),b
 23484   015F00                     
 23485                           ; BSR set to: 8
 23486                           ;../src/w65_main.c: 343:        binv.caddr = header->cstart_addr;
 23487   015F00  0107               	movlb	7	; () banked
 23488   015F02  EE20 F001          	lfsr	2,1
 23489   015F06  5113               	movf	load_program@header& (0+255),w,b
 23490   015F08  26D9               	addwf	fsr2l,f,c
 23491   015F0A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23492   015F0C  22DA               	addwfc	fsr2h,f,c
 23493   015F0E  C4DE F87F          	movff	postinc2,_binv+7
 23494   015F12  C4DD F880          	movff	postdec2,_binv+8
 23495   015F16                     
 23496                           ; BSR set to: 7
 23497                           ;../src/w65_main.c: 344:        binv.waddr = header->wstart_addr;
 23498   015F16  EE20 F004          	lfsr	2,4
 23499   015F1A  5113               	movf	load_program@header& (0+255),w,b
 23500   015F1C  26D9               	addwf	fsr2l,f,c
 23501   015F1E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23502   015F20  22DA               	addwfc	fsr2h,f,c
 23503   015F22  C4DE F881          	movff	postinc2,_binv+9
 23504   015F26  C4DD F882          	movff	postdec2,_binv+10
 23505   015F2A                     
 23506                           ; BSR set to: 7
 23507                           ;../src/w65_main.c: 345:        binv.dp = header->direct_page;
 23508   015F2A  EE20 F006          	lfsr	2,6
 23509   015F2E  5113               	movf	load_program@header& (0+255),w,b
 23510   015F30  26D9               	addwf	fsr2l,f,c
 23511   015F32  5114               	movf	(load_program@header+1)& (0+255),w,b
 23512   015F34  22DA               	addwfc	fsr2h,f,c
 23513   015F36  C4DE F87D          	movff	postinc2,_binv+5
 23514   015F3A  C4DD F87E          	movff	postdec2,_binv+6
 23515   015F3E                     
 23516                           ; BSR set to: 7
 23517                           ;../src/w65_main.c: 346:        binv.pbnk = header->op1;
 23518   015F3E  C713  F4D9         	movff	load_program@header,fsr2l
 23519   015F42  C714  F4DA         	movff	load_program@header+1,fsr2h
 23520   015F46  50DF               	movf	indf2,w,c
 23521   015F48  0108               	movlb	8	; () banked
 23522   015F4A  6F7B               	movwf	(_binv+3)& (0+255),b
 23523   015F4C                     
 23524                           ; BSR set to: 8
 23525                           ;../src/w65_main.c: 347:        binv.dbnk = header->op2;
 23526   015F4C  0107               	movlb	7	; () banked
 23527   015F4E  EE20 F003          	lfsr	2,3
 23528   015F52  5113               	movf	load_program@header& (0+255),w,b
 23529   015F54  26D9               	addwf	fsr2l,f,c
 23530   015F56  5114               	movf	(load_program@header+1)& (0+255),w,b
 23531   015F58  22DA               	addwfc	fsr2h,f,c
 23532   015F5A  50DF               	movf	indf2,w,c
 23533   015F5C  0108               	movlb	8	; () banked
 23534   015F5E  6F7C               	movwf	(_binv+4)& (0+255),b
 23535   015F60                     
 23536                           ; BSR set to: 8
 23537                           ;../src/w65_main.c: 348:        binv.sw_816 = header->sw_816;
 23538   015F60  0107               	movlb	7	; () banked
 23539   015F62  EE20 F018          	lfsr	2,24
 23540   015F66  5113               	movf	load_program@header& (0+255),w,b
 23541   015F68  26D9               	addwf	fsr2l,f,c
 23542   015F6A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23543   015F6C  22DA               	addwfc	fsr2h,f,c
 23544   015F6E  50DF               	movf	indf2,w,c
 23545   015F70  0108               	movlb	8	; () banked
 23546   015F72  6F83               	movwf	(_binv+11)& (0+255),b
 23547   015F74                     
 23548                           ; BSR set to: 8
 23549                           ;../src/w65_main.c: 349:        sprintf((char *)binv.fname, "%s", fname);
 23550   015F74  0E84               	movlw	low (_binv+12)
 23551   015F76  0105               	movlb	5	; () banked
 23552   015F78  6FAD               	movwf	sprintf@s& (0+255),b
 23553   015F7A  0E08               	movlw	high (_binv+12)
 23554   015F7C  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 23555   015F7E  0EF9               	movlw	low STR_81
 23556   015F80  6FAF               	movwf	sprintf@fmt& (0+255),b
 23557   015F82  0EFF               	movlw	high STR_81
 23558   015F84  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 23559   015F86  C700  F5B1         	movff	load_program@fname,?_sprintf+4
 23560   015F8A  C701  F5B2         	movff	load_program@fname+1,?_sprintf+5
 23561   015F8E  ECD8  F0FC         	call	_sprintf	;wreg free
 23562                           
 23563                           ;../src/w65_main.c: 350:       }
 23564   015F92  EF5D  F0B0         	goto	l24493
 23565   015F96                     l24483:
 23566                           
 23567                           ; BSR set to: 7
 23568                           ;../src/w65_main.c: 353:        fh.bios_sw = header->bios_sw;
 23569   015F96  EE20 F01F          	lfsr	2,31
 23570   015F9A  5113               	movf	load_program@header& (0+255),w,b
 23571   015F9C  26D9               	addwf	fsr2l,f,c
 23572   015F9E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23573   015FA0  22DA               	addwfc	fsr2h,f,c
 23574   015FA2  50DF               	movf	indf2,w,c
 23575   015FA4  0108               	movlb	8	; () banked
 23576   015FA6  6FC1               	movwf	(_fh+31)& (0+255),b
 23577                           
 23578                           ;../src/w65_main.c: 354:        fh.load_p = header->load_p;
 23579   015FA8  0107               	movlb	7	; () banked
 23580   015FAA  EE20 F010          	lfsr	2,16
 23581   015FAE  5113               	movf	load_program@header& (0+255),w,b
 23582   015FB0  26D9               	addwf	fsr2l,f,c
 23583   015FB2  5114               	movf	(load_program@header+1)& (0+255),w,b
 23584   015FB4  22DA               	addwfc	fsr2h,f,c
 23585   015FB6  C4DE F8B2          	movff	postinc2,_fh+16
 23586   015FBA  C4DE F8B3          	movff	postinc2,_fh+17
 23587   015FBE  C4DE F8B4          	movff	postinc2,_fh+18
 23588   015FC2  C4DE F8B5          	movff	postinc2,_fh+19
 23589                           
 23590                           ;../src/w65_main.c: 355:        fh.sw_816 = header->sw_816;
 23591   015FC6  EE20 F018          	lfsr	2,24
 23592   015FCA  5113               	movf	load_program@header& (0+255),w,b
 23593   015FCC  26D9               	addwf	fsr2l,f,c
 23594   015FCE  5114               	movf	(load_program@header+1)& (0+255),w,b
 23595   015FD0  22DA               	addwfc	fsr2h,f,c
 23596   015FD2  50DF               	movf	indf2,w,c
 23597   015FD4  0108               	movlb	8	; () banked
 23598   015FD6  6FBA               	movwf	(_fh+24)& (0+255),b
 23599                           
 23600                           ;../src/w65_main.c: 356:        fh.cstart_addr = header->cstart_addr;
 23601   015FD8  0107               	movlb	7	; () banked
 23602   015FDA  EE20 F001          	lfsr	2,1
 23603   015FDE  5113               	movf	load_program@header& (0+255),w,b
 23604   015FE0  26D9               	addwf	fsr2l,f,c
 23605   015FE2  5114               	movf	(load_program@header+1)& (0+255),w,b
 23606   015FE4  22DA               	addwfc	fsr2h,f,c
 23607   015FE6  C4DE F8A3          	movff	postinc2,_fh+1
 23608   015FEA  C4DD F8A4          	movff	postdec2,_fh+2
 23609                           
 23610                           ;../src/w65_main.c: 357:        fh.wstart_addr = header->wstart_addr;
 23611   015FEE  EE20 F004          	lfsr	2,4
 23612   015FF2  5113               	movf	load_program@header& (0+255),w,b
 23613   015FF4  26D9               	addwf	fsr2l,f,c
 23614   015FF6  5114               	movf	(load_program@header+1)& (0+255),w,b
 23615   015FF8  22DA               	addwfc	fsr2h,f,c
 23616   015FFA  C4DE F8A6          	movff	postinc2,_fh+4
 23617   015FFE  C4DD F8A7          	movff	postdec2,_fh+5
 23618                           
 23619                           ;../src/w65_main.c: 358:        fh.picif_p = header->picif_p;
 23620   016002  EE20 F014          	lfsr	2,20
 23621   016006  5113               	movf	load_program@header& (0+255),w,b
 23622   016008  26D9               	addwf	fsr2l,f,c
 23623   01600A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23624   01600C  22DA               	addwfc	fsr2h,f,c
 23625   01600E  C4DE F8B6          	movff	postinc2,_fh+20
 23626   016012  C4DE F8B7          	movff	postinc2,_fh+21
 23627   016016  C4DE F8B8          	movff	postinc2,_fh+22
 23628   01601A  C4DE F8B9          	movff	postinc2,_fh+23
 23629                           
 23630                           ;../src/w65_main.c: 359:        fh.irq_sw = header->irq_sw;
 23631   01601E  EE20 F019          	lfsr	2,25
 23632   016022  5113               	movf	load_program@header& (0+255),w,b
 23633   016024  26D9               	addwf	fsr2l,f,c
 23634   016026  5114               	movf	(load_program@header+1)& (0+255),w,b
 23635   016028  22DA               	addwfc	fsr2h,f,c
 23636   01602A  50DF               	movf	indf2,w,c
 23637   01602C  0108               	movlb	8	; () banked
 23638   01602E  6FBB               	movwf	(_fh+25)& (0+255),b
 23639                           
 23640                           ;../src/w65_main.c: 360:        fh.reg_tblp = header->reg_tblp;
 23641   016030  0107               	movlb	7	; () banked
 23642   016032  EE20 F01A          	lfsr	2,26
 23643   016036  5113               	movf	load_program@header& (0+255),w,b
 23644   016038  26D9               	addwf	fsr2l,f,c
 23645   01603A  5114               	movf	(load_program@header+1)& (0+255),w,b
 23646   01603C  22DA               	addwfc	fsr2h,f,c
 23647   01603E  C4DE F8BC          	movff	postinc2,_fh+26
 23648   016042  C4DD F8BD          	movff	postdec2,_fh+27
 23649                           
 23650                           ;../src/w65_main.c: 361:        fh.reg_tsize = header->reg_tsize;
 23651   016046  EE20 F01C          	lfsr	2,28
 23652   01604A  5113               	movf	load_program@header& (0+255),w,b
 23653   01604C  26D9               	addwf	fsr2l,f,c
 23654   01604E  5114               	movf	(load_program@header+1)& (0+255),w,b
 23655   016050  22DA               	addwfc	fsr2h,f,c
 23656   016052  C4DE F8BE          	movff	postinc2,_fh+28
 23657   016056  C4DD F8BF          	movff	postdec2,_fh+29
 23658                           
 23659                           ;../src/w65_main.c: 362:        fh.nmi_sw = header->nmi_sw;
 23660   01605A  EE20 F01E          	lfsr	2,30
 23661   01605E  5113               	movf	load_program@header& (0+255),w,b
 23662   016060  26D9               	addwf	fsr2l,f,c
 23663   016062  5114               	movf	(load_program@header+1)& (0+255),w,b
 23664   016064  22DA               	addwfc	fsr2h,f,c
 23665   016066  50DF               	movf	indf2,w,c
 23666   016068  0108               	movlb	8	; () banked
 23667   01606A  6FC0               	movwf	(_fh+30)& (0+255),b
 23668   01606C                     
 23669                           ; BSR set to: 8
 23670                           ;../src/w65_main.c: 364:        bioreq_ubuffadr = fh.picif_p;
 23671   01606C  C8B6  F7DB         	movff	_fh+20,_bioreq_ubuffadr
 23672   016070  C8B7  F7DC         	movff	_fh+21,_bioreq_ubuffadr+1
 23673   016074  C8B8  F7DD         	movff	_fh+22,_bioreq_ubuffadr+2
 23674   016078  C8B9  F7DE         	movff	_fh+23,_bioreq_ubuffadr+3
 23675   01607C                     
 23676                           ; BSR set to: 8
 23677                           ;../src/w65_main.c: 365:        bioreq_cbuffadr = bioreq_ubuffadr + 2;
 23678   01607C  0E02               	movlw	2
 23679   01607E  0107               	movlb	7	; () banked
 23680   016080  25DB               	addwf	_bioreq_ubuffadr& (0+255),w,b
 23681   016082  0108               	movlb	8	; () banked
 23682   016084  6F24               	movwf	_bioreq_cbuffadr& (0+255),b
 23683   016086  0E00               	movlw	0
 23684   016088  0107               	movlb	7	; () banked
 23685   01608A  21DC               	addwfc	(_bioreq_ubuffadr+1)& (0+255),w,b
 23686   01608C  0108               	movlb	8	; () banked
 23687   01608E  6F25               	movwf	(_bioreq_cbuffadr+1)& (0+255),b
 23688   016090  0E00               	movlw	0
 23689   016092  0107               	movlb	7	; () banked
 23690   016094  21DD               	addwfc	(_bioreq_ubuffadr+2)& (0+255),w,b
 23691   016096  0108               	movlb	8	; () banked
 23692   016098  6F26               	movwf	(_bioreq_cbuffadr+2)& (0+255),b
 23693   01609A  0E00               	movlw	0
 23694   01609C  0107               	movlb	7	; () banked
 23695   01609E  21DE               	addwfc	(_bioreq_ubuffadr+3)& (0+255),w,b
 23696   0160A0  0108               	movlb	8	; () banked
 23697   0160A2  6F27               	movwf	(_bioreq_cbuffadr+3)& (0+255),b
 23698   0160A4                     
 23699                           ; BSR set to: 8
 23700                           ;../src/w65_main.c: 366:        if ( !fh.bios_sw ) binv.sw = 0;
 23701   0160A4  51C1               	movf	(_fh+31)& (0+255),w,b
 23702   0160A6  A4D8               	btfss	status,2,c
 23703   0160A8  EF58  F0B0         	goto	u33841
 23704   0160AC  EF5A  F0B0         	goto	u33840
 23705   0160B0                     u33841:
 23706   0160B0  EF5D  F0B0         	goto	l1158
 23707   0160B4                     u33840:
 23708   0160B4                     
 23709                           ; BSR set to: 8
 23710   0160B4  6B78               	clrf	_binv& (0+255),b
 23711   0160B6  EF5D  F0B0         	goto	l24493
 23712   0160BA                     l1158:
 23713   0160BA                     l24493:
 23714                           
 23715                           ;../src/w65_main.c: 371:    write_sram(adr, (uint8_t *)rdbuf, (unsigned int)br);
 23716   0160BA  C70A  F504         	movff	load_program@adr,write_sram@addr
 23717   0160BE  C70B  F505         	movff	load_program@adr+1,write_sram@addr+1
 23718   0160C2  C70C  F506         	movff	load_program@adr+2,write_sram@addr+2
 23719   0160C6  C70D  F507         	movff	load_program@adr+3,write_sram@addr+3
 23720   0160CA  C706  F508         	movff	load_program@rdbuf,write_sram@buf
 23721   0160CE  C707  F509         	movff	load_program@rdbuf+1,write_sram@buf+1
 23722   0160D2  C710  F50A         	movff	load_program@br,write_sram@len
 23723   0160D6  C711  F50B         	movff	load_program@br+1,write_sram@len+1
 23724   0160DA  EC9F  F0E8         	call	_write_sram	;wreg free
 23725   0160DE                     
 23726                           ;../src/w65_main.c: 372:    adr += (uint32_t)br;
 23727   0160DE  0107               	movlb	7	; () banked
 23728   0160E0  5110               	movf	load_program@br& (0+255),w,b
 23729   0160E2  270A               	addwf	load_program@adr& (0+255),f,b
 23730   0160E4  5111               	movf	(load_program@br+1)& (0+255),w,b
 23731   0160E6  230B               	addwfc	(load_program@adr+1)& (0+255),f,b
 23732   0160E8  0E00               	movlw	0
 23733   0160EA  230C               	addwfc	(load_program@adr+2)& (0+255),f,b
 23734   0160EC  0E00               	movlw	0
 23735   0160EE  230D               	addwfc	(load_program@adr+3)& (0+255),f,b
 23736   0160F0                     
 23737                           ; BSR set to: 7
 23738                           ;../src/w65_main.c: 373:    cnt -= (uint16_t)br;
 23739   0160F0  5110               	movf	load_program@br& (0+255),w,b
 23740   0160F2  5F0E               	subwf	load_program@cnt& (0+255),f,b
 23741   0160F4  5111               	movf	(load_program@br+1)& (0+255),w,b
 23742   0160F6  5B0F               	subwfb	(load_program@cnt+1)& (0+255),f,b
 23743   0160F8                     
 23744                           ; BSR set to: 7
 23745                           ;../src/w65_main.c: 374:    if (btr > (UINT)cnt) btr = (UINT)cnt;
 23746   0160F8  5108               	movf	load_program@btr& (0+255),w,b
 23747   0160FA  5D0E               	subwf	load_program@cnt& (0+255),w,b
 23748   0160FC  5109               	movf	(load_program@btr+1)& (0+255),w,b
 23749   0160FE  590F               	subwfb	(load_program@cnt+1)& (0+255),w,b
 23750   016100  B0D8               	btfsc	status,0,c
 23751   016102  EF85  F0B0         	goto	u33851
 23752   016106  EF87  F0B0         	goto	u33850
 23753   01610A                     u33851:
 23754   01610A  EF8B  F0B0         	goto	l24503
 23755   01610E                     u33850:
 23756   01610E                     
 23757                           ; BSR set to: 7
 23758   01610E  C70E  F708         	movff	load_program@cnt,load_program@btr
 23759   016112  C70F  F709         	movff	load_program@cnt+1,load_program@btr+1
 23760   016116                     l24503:
 23761                           
 23762                           ; BSR set to: 7
 23763                           ;../src/w65_main.c: 321:  while( cnt ) {
 23764   016116  510E               	movf	load_program@cnt& (0+255),w,b
 23765   016118  110F               	iorwf	(load_program@cnt+1)& (0+255),w,b
 23766   01611A  A4D8               	btfss	status,2,c
 23767   01611C  EF92  F0B0         	goto	u33861
 23768   016120  EF94  F0B0         	goto	u33860
 23769   016124                     u33861:
 23770   016124  EFCB  F0AE         	goto	l24437
 23771   016128                     u33860:
 23772   016128                     l24505:
 23773                           
 23774                           ; BSR set to: 7
 23775                           ;../src/w65_main.c: 378:  if (fr == FR_OK) {
 23776   016128  5112               	movf	load_program@fr& (0+255),w,b
 23777   01612A  A4D8               	btfss	status,2,c
 23778   01612C  EF9A  F0B0         	goto	u33871
 23779   016130  EF9C  F0B0         	goto	u33870
 23780   016134                     u33871:
 23781   016134  EFB5  F0B0         	goto	l24509
 23782   016138                     u33870:
 23783   016138                     
 23784                           ; BSR set to: 7
 23785                           ;../src/w65_main.c: 379:   printf("Load %s : Adr = $%06lX, Size = $%04X\r\n", fname, adr
      +                          0, file_size);
 23786   016138  0E41               	movlw	low STR_82
 23787   01613A  0105               	movlb	5	; () banked
 23788   01613C  6FAD               	movwf	printf@fmt& (0+255),b
 23789   01613E  0EF6               	movlw	high STR_82
 23790   016140  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23791   016142  C700  F5AF         	movff	load_program@fname,?_printf+2
 23792   016146  C701  F5B0         	movff	load_program@fname+1,?_printf+3
 23793   01614A  C702  F5B1         	movff	load_program@adr0,?_printf+4
 23794   01614E  C703  F5B2         	movff	load_program@adr0+1,?_printf+5
 23795   016152  C704  F5B3         	movff	load_program@adr0+2,?_printf+6
 23796   016156  C705  F5B4         	movff	load_program@adr0+3,?_printf+7
 23797   01615A  C7B9  F5B5         	movff	_file_size,?_printf+8
 23798   01615E  C7BA  F5B6         	movff	_file_size+1,?_printf+9
 23799   016162  ECDA  F0FF         	call	_printf	;wreg free
 23800                           
 23801                           ;../src/w65_main.c: 380:  }
 23802   016166  EFC5  F0B0         	goto	l1169
 23803   01616A                     l24509:
 23804                           
 23805                           ; BSR set to: 7
 23806                           ;../src/w65_main.c: 382:   if (fr != FR_INVALID_OBJECT) printf("File Load Error.\r\n");
 23807   01616A  0E09               	movlw	9
 23808   01616C  1912               	xorwf	load_program@fr& (0+255),w,b
 23809   01616E  B4D8               	btfsc	status,2,c
 23810   016170  EFBC  F0B0         	goto	u33881
 23811   016174  EFBE  F0B0         	goto	u33880
 23812   016178                     u33881:
 23813   016178  EFC5  F0B0         	goto	l1169
 23814   01617C                     u33880:
 23815   01617C                     
 23816                           ; BSR set to: 7
 23817   01617C  0EFC               	movlw	low STR_83
 23818   01617E  0105               	movlb	5	; () banked
 23819   016180  6FAD               	movwf	printf@fmt& (0+255),b
 23820   016182  0EFC               	movlw	high STR_83
 23821   016184  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23822   016186  ECDA  F0FF         	call	_printf	;wreg free
 23823   01618A                     l1169:
 23824                           
 23825                           ;../src/w65_main.c: 384:  f_close(&rom_fl);
 23826   01618A  0ED6               	movlw	low _rom_fl
 23827   01618C  0106               	movlb	6	; () banked
 23828   01618E  6F2F               	movwf	f_close@fp& (0+255),b
 23829   016190  0E0F               	movlw	high _rom_fl
 23830   016192  6F30               	movwf	(f_close@fp+1)& (0+255),b
 23831   016194  ECDB  F0FB         	call	_f_close	;wreg free
 23832   016198  EFAD  F0AE         	goto	l24429
 23833   01619C                     l1152:
 23834                           
 23835                           ; BSR set to: 7
 23836   01619C  0012               	return		;funcret
 23837   01619E                     __end_of_load_program:
 23838                           	callstack 0
 23839                           
 23840 ;; *************** function _strstr *****************
 23841 ;; Defined at:
 23842 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strstr.c"
 23843 ;; Parameters:    Size  Location     Type
 23844 ;;  h               2   10[COMRAM] PTR const unsigned char 
 23845 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23846 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23847 ;;  n               2   12[COMRAM] PTR const unsigned char 
 23848 ;;		 -> STR_130(2), STR_128(3), STR_68(1), STR_67(2), 
 23849 ;;		 -> STR_66(5), STR_65(6), STR_64(5), STR_63(6), 
 23850 ;;		 -> STR_62(8), STR_61(4), STR_60(5), STR_59(7), 
 23851 ;;		 -> STR_58(7), STR_57(5), STR_56(3), STR_55(4), 
 23852 ;;		 -> STR_54(3), STR_53(8), STR_52(8), STR_51(11), 
 23853 ;;		 -> STR_50(11), STR_46(8), 
 23854 ;; Auto vars:     Size  Location     Type
 23855 ;;  nl              2   14[COMRAM] unsigned int 
 23856 ;; Return value:  Size  Location     Type
 23857 ;;                  2   10[COMRAM] PTR unsigned char 
 23858 ;; Registers used:
 23859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23860 ;; Tracked objects:
 23861 ;;		On entry : 0/0
 23862 ;;		On exit  : 0/0
 23863 ;;		Unchanged: 0/0
 23864 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23869 ;;Total ram usage:        6 bytes
 23870 ;; Hardware stack levels used: 1
 23871 ;; Hardware stack levels required when called: 2
 23872 ;; This function calls:
 23873 ;;		_strchr
 23874 ;;		_strlen
 23875 ;;		_strncmp
 23876 ;; This function is called by:
 23877 ;;		_main
 23878 ;;		_load_program
 23879 ;;		_load_config
 23880 ;;		_boot_file
 23881 ;;		_load_file
 23882 ;;		_mon_prog
 23883 ;;		_see_file
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           	psect	text52
 23888   01DD9E                     __ptext52:
 23889                           	callstack 0
 23890   01DD9E                     _strstr:
 23891                           	callstack 124
 23892   01DD9E  500D               	movf	strstr@n^(0+1280),w,c
 23893   01DDA0  100E               	iorwf	(strstr@n+1)^(0+1280),w,c
 23894   01DDA2  B4D8               	btfsc	status,2,c
 23895   01DDA4  EFD6  F0EE         	goto	u33171
 23896   01DDA8  EFD8  F0EE         	goto	u33170
 23897   01DDAC                     u33171:
 23898   01DDAC  EF39  F0EF         	goto	l24047
 23899   01DDB0                     u33170:
 23900   01DDB0  C50D  F504         	movff	strstr@n,strlen@s
 23901   01DDB4  C50E  F505         	movff	strstr@n+1,strlen@s+1
 23902   01DDB8  ECB0  F0FC         	call	_strlen	;wreg free
 23903   01DDBC  C504  F50F         	movff	?_strlen,strstr@nl
 23904   01DDC0  C505  F510         	movff	?_strlen+1,strstr@nl+1
 23905   01DDC4  EF17  F0EF         	goto	l24043
 23906   01DDC8                     l24035:
 23907   01DDC8  C50B  F504         	movff	strstr@h,strncmp@l
 23908   01DDCC  C50C  F505         	movff	strstr@h+1,strncmp@l+1
 23909   01DDD0  C50D  F506         	movff	strstr@n,strncmp@r
 23910   01DDD4  C50E  F507         	movff	strstr@n+1,strncmp@r+1
 23911   01DDD8  C50F  F508         	movff	strstr@nl,strncmp@n
 23912   01DDDC  C510  F509         	movff	strstr@nl+1,strncmp@n+1
 23913   01DDE0  EC83  F0E6         	call	_strncmp	;wreg free
 23914   01DDE4  5004               	movf	?_strncmp^(0+1280),w,c
 23915   01DDE6  1005               	iorwf	(?_strncmp+1)^(0+1280),w,c
 23916   01DDE8  A4D8               	btfss	status,2,c
 23917   01DDEA  EFF9  F0EE         	goto	u33181
 23918   01DDEE  EFFB  F0EE         	goto	u33180
 23919   01DDF2                     u33181:
 23920   01DDF2  EF01  F0EF         	goto	l24041
 23921   01DDF6                     u33180:
 23922   01DDF6  C50B  F50B         	movff	strstr@h,?_strstr
 23923   01DDFA  C50C  F50C         	movff	strstr@h+1,?_strstr+1
 23924   01DDFE  EF3D  F0EF         	goto	l3715
 23925   01DE02                     l24041:
 23926   01DE02  0E01               	movlw	1
 23927   01DE04  240B               	addwf	strstr@h^(0+1280),w,c
 23928   01DE06  6E04               	movwf	strchr@s^(0+1280),c
 23929   01DE08  0E00               	movlw	0
 23930   01DE0A  200C               	addwfc	(strstr@h+1)^(0+1280),w,c
 23931   01DE0C  6E05               	movwf	(strchr@s+1)^(0+1280),c
 23932   01DE0E  C50D  F4F6         	movff	strstr@n,tblptrl
 23933   01DE12  C50E  F4F7         	movff	strstr@n+1,tblptrh
 23934   01DE16                     	if	0	;tblptru may be non-zero
 23935   01DE16                     	endif
 23936   01DE16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23937   01DE16  0E00               	movlw	low (__mediumconst shr (0+16))
 23938   01DE18  6EF8               	movwf	tblptru,c
 23939   01DE1A                     	endif
 23940   01DE1A  0008               	tblrd		*
 23941   01DE1C  50F5               	movf	tablat,w,c
 23942   01DE1E  6E06               	movwf	strchr@c^(0+1280),c
 23943   01DE20  6A07               	clrf	(strchr@c+1)^(0+1280),c
 23944   01DE22  EC75  F0F8         	call	_strchr	;wreg free
 23945   01DE26  C504  F50B         	movff	?_strchr,strstr@h
 23946   01DE2A  C505  F50C         	movff	?_strchr+1,strstr@h+1
 23947   01DE2E                     l24043:
 23948   01DE2E  500B               	movf	strstr@h^(0+1280),w,c
 23949   01DE30  100C               	iorwf	(strstr@h+1)^(0+1280),w,c
 23950   01DE32  B4D8               	btfsc	status,2,c
 23951   01DE34  EF1E  F0EF         	goto	u33191
 23952   01DE38  EF20  F0EF         	goto	u33190
 23953   01DE3C                     u33191:
 23954   01DE3C  EF39  F0EF         	goto	l24047
 23955   01DE40                     u33190:
 23956   01DE40  C50B  F4F6         	movff	strstr@h,tblptrl
 23957   01DE44  C50C  F4F7         	movff	strstr@h+1,tblptrh
 23958   01DE48  0E00               	movlw	low (__mediumconst shr (0+16))
 23959   01DE4A  6EF8               	movwf	tblptru,c
 23960   01DE4C  0E25               	movlw	(high __ramtop+-1)
 23961   01DE4E  64F7               	cpfsgt	tblptrh,c
 23962   01DE50  D003               	bra	u33207
 23963   01DE52  0008               	tblrd		*
 23964   01DE54  50F5               	movf	tablat,w,c
 23965   01DE56  D005               	bra	u33200
 23966   01DE58                     u33207:
 23967   01DE58  C4F6 F4E9          	movff	tblptrl,fsr0l
 23968   01DE5C  C4F7 F4EA          	movff	tblptrh,fsr0h
 23969   01DE60  50EF               	movf	indf0,w,c
 23970   01DE62                     u33200:
 23971   01DE62  0900               	iorlw	0
 23972   01DE64  A4D8               	btfss	status,2,c
 23973   01DE66  EF37  F0EF         	goto	u33211
 23974   01DE6A  EF39  F0EF         	goto	u33210
 23975   01DE6E                     u33211:
 23976   01DE6E  EFE4  F0EE         	goto	l24035
 23977   01DE72                     u33210:
 23978   01DE72                     l24047:
 23979   01DE72  0E00               	movlw	0
 23980   01DE74  6E0B               	movwf	?_strstr^(0+1280),c
 23981   01DE76  0E00               	movlw	0
 23982   01DE78  6E0C               	movwf	(?_strstr+1)^(0+1280),c
 23983   01DE7A                     l3715:
 23984   01DE7A  0012               	return		;funcret
 23985   01DE7C                     __end_of_strstr:
 23986                           	callstack 0
 23987                           
 23988 ;; *************** function _strncmp *****************
 23989 ;; Defined at:
 23990 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
 23991 ;; Parameters:    Size  Location     Type
 23992 ;;  l               2    3[COMRAM] PTR const unsigned char 
 23993 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 23994 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 23995 ;;  r               2    5[COMRAM] PTR const unsigned char 
 23996 ;;		 -> STR_130(2), STR_128(3), STR_68(1), STR_67(2), 
 23997 ;;		 -> STR_66(5), STR_65(6), STR_64(5), STR_63(6), 
 23998 ;;		 -> STR_62(8), STR_61(4), STR_60(5), STR_59(7), 
 23999 ;;		 -> STR_58(7), STR_57(5), STR_56(3), STR_55(4), 
 24000 ;;		 -> STR_54(3), STR_53(8), STR_52(8), STR_51(11), 
 24001 ;;		 -> STR_50(11), STR_46(8), 
 24002 ;;  n               2    7[COMRAM] unsigned int 
 24003 ;; Auto vars:     Size  Location     Type
 24004 ;;		None
 24005 ;; Return value:  Size  Location     Type
 24006 ;;                  2    3[COMRAM] int 
 24007 ;; Registers used:
 24008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 24009 ;; Tracked objects:
 24010 ;;		On entry : 0/0
 24011 ;;		On exit  : 0/0
 24012 ;;		Unchanged: 0/0
 24013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24014 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24017 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24018 ;;Total ram usage:        7 bytes
 24019 ;; Hardware stack levels used: 1
 24020 ;; Hardware stack levels required when called: 1
 24021 ;; This function calls:
 24022 ;;		Nothing
 24023 ;; This function is called by:
 24024 ;;		_strstr
 24025 ;; This function uses a non-reentrant model
 24026 ;;
 24027                           
 24028                           	psect	text53
 24029   01CD06                     __ptext53:
 24030                           	callstack 0
 24031   01CD06                     _strncmp:
 24032                           	callstack 124
 24033   01CD06  0608               	decf	strncmp@n^(0+1280),f,c
 24034   01CD08  A0D8               	btfss	status,0,c
 24035   01CD0A  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 24036   01CD0C  2808               	incf	strncmp@n^(0+1280),w,c
 24037   01CD0E  E106               	bnz	u20501
 24038   01CD10  2809               	incf	(strncmp@n+1)^(0+1280),w,c
 24039   01CD12  A4D8               	btfss	status,2,c
 24040   01CD14  EF8E  F0E6         	goto	u20501
 24041   01CD18  EF90  F0E6         	goto	u20500
 24042   01CD1C                     u20501:
 24043   01CD1C  EF9D  F0E6         	goto	l16135
 24044   01CD20                     u20500:
 24045   01CD20  0E00               	movlw	0
 24046   01CD22  6E05               	movwf	(?_strncmp+1)^(0+1280),c
 24047   01CD24  0E00               	movlw	0
 24048   01CD26  6E04               	movwf	?_strncmp^(0+1280),c
 24049   01CD28  EF10  F0E7         	goto	l3722
 24050   01CD2C                     l16133:
 24051   01CD2C  4A04               	infsnz	strncmp@l^(0+1280),f,c
 24052   01CD2E  2A05               	incf	(strncmp@l+1)^(0+1280),f,c
 24053   01CD30  4A06               	infsnz	strncmp@r^(0+1280),f,c
 24054   01CD32  2A07               	incf	(strncmp@r+1)^(0+1280),f,c
 24055   01CD34  0608               	decf	strncmp@n^(0+1280),f,c
 24056   01CD36  A0D8               	btfss	status,0,c
 24057   01CD38  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 24058   01CD3A                     l16135:
 24059   01CD3A  C504  F4F6         	movff	strncmp@l,tblptrl
 24060   01CD3E  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24061   01CD42  0E00               	movlw	low (__mediumconst shr (0+16))
 24062   01CD44  6EF8               	movwf	tblptru,c
 24063   01CD46  0E25               	movlw	(high __ramtop+-1)
 24064   01CD48  64F7               	cpfsgt	tblptrh,c
 24065   01CD4A  D003               	bra	u20517
 24066   01CD4C  0008               	tblrd		*
 24067   01CD4E  50F5               	movf	tablat,w,c
 24068   01CD50  D005               	bra	u20510
 24069   01CD52                     u20517:
 24070   01CD52  C4F6 F4E9          	movff	tblptrl,fsr0l
 24071   01CD56  C4F7 F4EA          	movff	tblptrh,fsr0h
 24072   01CD5A  50EF               	movf	indf0,w,c
 24073   01CD5C                     u20510:
 24074   01CD5C  0900               	iorlw	0
 24075   01CD5E  B4D8               	btfsc	status,2,c
 24076   01CD60  EFB4  F0E6         	goto	u20521
 24077   01CD64  EFB6  F0E6         	goto	u20520
 24078   01CD68                     u20521:
 24079   01CD68  EFF1  F0E6         	goto	l16143
 24080   01CD6C                     u20520:
 24081   01CD6C  C506  F4F6         	movff	strncmp@r,tblptrl
 24082   01CD70  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24083   01CD74                     	if	0	;tblptru may be non-zero
 24084   01CD74                     	endif
 24085   01CD74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24086   01CD74  0E00               	movlw	low (__mediumconst shr (0+16))
 24087   01CD76  6EF8               	movwf	tblptru,c
 24088   01CD78                     	endif
 24089   01CD78  0008               	tblrd		*
 24090   01CD7A  50F5               	movf	tablat,w,c
 24091   01CD7C  0900               	iorlw	0
 24092   01CD7E  B4D8               	btfsc	status,2,c
 24093   01CD80  EFC4  F0E6         	goto	u20531
 24094   01CD84  EFC6  F0E6         	goto	u20530
 24095   01CD88                     u20531:
 24096   01CD88  EFF1  F0E6         	goto	l16143
 24097   01CD8C                     u20530:
 24098   01CD8C  5008               	movf	strncmp@n^(0+1280),w,c
 24099   01CD8E  1009               	iorwf	(strncmp@n+1)^(0+1280),w,c
 24100   01CD90  B4D8               	btfsc	status,2,c
 24101   01CD92  EFCD  F0E6         	goto	u20541
 24102   01CD96  EFCF  F0E6         	goto	u20540
 24103   01CD9A                     u20541:
 24104   01CD9A  EFF1  F0E6         	goto	l16143
 24105   01CD9E                     u20540:
 24106   01CD9E  C506  F4F6         	movff	strncmp@r,tblptrl
 24107   01CDA2  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24108   01CDA6                     	if	0	;tblptru may be non-zero
 24109   01CDA6                     	endif
 24110   01CDA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24111   01CDA6  0E00               	movlw	low (__mediumconst shr (0+16))
 24112   01CDA8  6EF8               	movwf	tblptru,c
 24113   01CDAA                     	endif
 24114   01CDAA  0008               	tblrd		*
 24115   01CDAC  C4F5 F50A          	movff	tablat,??_strncmp
 24116   01CDB0  C504  F4F6         	movff	strncmp@l,tblptrl
 24117   01CDB4  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24118   01CDB8  0E00               	movlw	low (__mediumconst shr (0+16))
 24119   01CDBA  6EF8               	movwf	tblptru,c
 24120   01CDBC  0E25               	movlw	(high __ramtop+-1)
 24121   01CDBE  64F7               	cpfsgt	tblptrh,c
 24122   01CDC0  D003               	bra	u20557
 24123   01CDC2  0008               	tblrd		*
 24124   01CDC4  50F5               	movf	tablat,w,c
 24125   01CDC6  D005               	bra	u20555
 24126   01CDC8                     u20557:
 24127   01CDC8  C4F6 F4E9          	movff	tblptrl,fsr0l
 24128   01CDCC  C4F7 F4EA          	movff	tblptrh,fsr0h
 24129   01CDD0  50EF               	movf	indf0,w,c
 24130   01CDD2                     u20555:
 24131   01CDD2  180A               	xorwf	??_strncmp^(0+1280),w,c
 24132   01CDD4  B4D8               	btfsc	status,2,c
 24133   01CDD6  EFEF  F0E6         	goto	u20551
 24134   01CDDA  EFF1  F0E6         	goto	u20550
 24135   01CDDE                     u20551:
 24136   01CDDE  EF96  F0E6         	goto	l16133
 24137   01CDE2                     u20550:
 24138   01CDE2                     l16143:
 24139   01CDE2  C504  F4F6         	movff	strncmp@l,tblptrl
 24140   01CDE6  C505  F4F7         	movff	strncmp@l+1,tblptrh
 24141   01CDEA  0E00               	movlw	low (__mediumconst shr (0+16))
 24142   01CDEC  6EF8               	movwf	tblptru,c
 24143   01CDEE  0E25               	movlw	(high __ramtop+-1)
 24144   01CDF0  64F7               	cpfsgt	tblptrh,c
 24145   01CDF2  D003               	bra	u20567
 24146   01CDF4  0008               	tblrd		*
 24147   01CDF6  50F5               	movf	tablat,w,c
 24148   01CDF8  D005               	bra	u20560
 24149   01CDFA                     u20567:
 24150   01CDFA  C4F6 F4E9          	movff	tblptrl,fsr0l
 24151   01CDFE  C4F7 F4EA          	movff	tblptrh,fsr0h
 24152   01CE02  50EF               	movf	indf0,w,c
 24153   01CE04                     u20560:
 24154   01CE04  6E0A               	movwf	??_strncmp^(0+1280),c
 24155   01CE06  C506  F4F6         	movff	strncmp@r,tblptrl
 24156   01CE0A  C507  F4F7         	movff	strncmp@r+1,tblptrh
 24157   01CE0E                     	if	0	;tblptru may be non-zero
 24158   01CE0E                     	endif
 24159   01CE0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24160   01CE0E  0E00               	movlw	low (__mediumconst shr (0+16))
 24161   01CE10  6EF8               	movwf	tblptru,c
 24162   01CE12                     	endif
 24163   01CE12  0008               	tblrd		*
 24164   01CE14  50F5               	movf	tablat,w,c
 24165   01CE16  5C0A               	subwf	??_strncmp^(0+1280),w,c
 24166   01CE18  6E04               	movwf	?_strncmp^(0+1280),c
 24167   01CE1A  6A05               	clrf	(?_strncmp+1)^(0+1280),c
 24168   01CE1C  A0D8               	btfss	status,0,c
 24169   01CE1E  0605               	decf	(?_strncmp+1)^(0+1280),f,c
 24170   01CE20                     l3722:
 24171   01CE20  0012               	return		;funcret
 24172   01CE22                     __end_of_strncmp:
 24173                           	callstack 0
 24174                           
 24175 ;; *************** function _strlen *****************
 24176 ;; Defined at:
 24177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
 24178 ;; Parameters:    Size  Location     Type
 24179 ;;  s               2    3[COMRAM] PTR const unsigned char 
 24180 ;;		 -> f_printf@str(32), STR_130(2), STR_128(3), STR_68(1), 
 24181 ;;		 -> STR_67(2), STR_66(5), STR_65(6), STR_64(5), 
 24182 ;;		 -> STR_63(6), STR_62(8), STR_61(4), STR_60(5), 
 24183 ;;		 -> STR_59(7), STR_58(7), STR_57(5), STR_56(3), 
 24184 ;;		 -> STR_55(4), STR_54(3), STR_53(8), STR_52(8), 
 24185 ;;		 -> STR_51(11), STR_50(11), STR_46(8), 
 24186 ;; Auto vars:     Size  Location     Type
 24187 ;;  a               2    5[COMRAM] PTR const unsigned char 
 24188 ;;		 -> f_printf@str(32), STR_130(2), STR_128(3), STR_68(1), 
 24189 ;;		 -> STR_67(2), STR_66(5), STR_65(6), STR_64(5), 
 24190 ;;		 -> STR_63(6), STR_62(8), STR_61(4), STR_60(5), 
 24191 ;;		 -> STR_59(7), STR_58(7), STR_57(5), STR_56(3), 
 24192 ;;		 -> STR_55(4), STR_54(3), STR_53(8), STR_52(8), 
 24193 ;;		 -> STR_51(11), STR_50(11), STR_46(8), 
 24194 ;; Return value:  Size  Location     Type
 24195 ;;                  2    3[COMRAM] unsigned int 
 24196 ;; Registers used:
 24197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 24198 ;; Tracked objects:
 24199 ;;		On entry : 0/0
 24200 ;;		On exit  : 0/0
 24201 ;;		Unchanged: 0/0
 24202 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24207 ;;Total ram usage:        4 bytes
 24208 ;; Hardware stack levels used: 1
 24209 ;; Hardware stack levels required when called: 1
 24210 ;; This function calls:
 24211 ;;		Nothing
 24212 ;; This function is called by:
 24213 ;;		_main
 24214 ;;		_load_config
 24215 ;;		_strstr
 24216 ;;		_f_printf
 24217 ;; This function uses a non-reentrant model
 24218 ;;
 24219                           
 24220                           	psect	text54
 24221   01F960                     __ptext54:
 24222                           	callstack 0
 24223   01F960                     _strlen:
 24224                           	callstack 124
 24225   01F960  C504  F506         	movff	strlen@s,strlen@a
 24226   01F964  C505  F507         	movff	strlen@s+1,strlen@a+1
 24227   01F968  EFB8  F0FC         	goto	l16121
 24228   01F96C                     l16119:
 24229   01F96C  4A04               	infsnz	strlen@s^(0+1280),f,c
 24230   01F96E  2A05               	incf	(strlen@s+1)^(0+1280),f,c
 24231   01F970                     l16121:
 24232   01F970  C504  F4F6         	movff	strlen@s,tblptrl
 24233   01F974  C505  F4F7         	movff	strlen@s+1,tblptrh
 24234   01F978  0E00               	movlw	low (__mediumconst shr (0+16))
 24235   01F97A  6EF8               	movwf	tblptru,c
 24236   01F97C  0E25               	movlw	(high __ramtop+-1)
 24237   01F97E  64F7               	cpfsgt	tblptrh,c
 24238   01F980  D003               	bra	u20487
 24239   01F982  0008               	tblrd		*
 24240   01F984  50F5               	movf	tablat,w,c
 24241   01F986  D005               	bra	u20480
 24242   01F988                     u20487:
 24243   01F988  C4F6 F4E9          	movff	tblptrl,fsr0l
 24244   01F98C  C4F7 F4EA          	movff	tblptrh,fsr0h
 24245   01F990  50EF               	movf	indf0,w,c
 24246   01F992                     u20480:
 24247   01F992  0900               	iorlw	0
 24248   01F994  A4D8               	btfss	status,2,c
 24249   01F996  EFCF  F0FC         	goto	u20491
 24250   01F99A  EFD1  F0FC         	goto	u20490
 24251   01F99E                     u20491:
 24252   01F99E  EFB6  F0FC         	goto	l16119
 24253   01F9A2                     u20490:
 24254   01F9A2  5006               	movf	strlen@a^(0+1280),w,c
 24255   01F9A4  5C04               	subwf	strlen@s^(0+1280),w,c
 24256   01F9A6  6E04               	movwf	?_strlen^(0+1280),c
 24257   01F9A8  5007               	movf	(strlen@a+1)^(0+1280),w,c
 24258   01F9AA  5805               	subwfb	(strlen@s+1)^(0+1280),w,c
 24259   01F9AC  6E05               	movwf	(?_strlen+1)^(0+1280),c
 24260   01F9AE  0012               	return		;funcret
 24261   01F9B0                     __end_of_strlen:
 24262                           	callstack 0
 24263                           
 24264 ;; *************** function _sprintf *****************
 24265 ;; Defined at:
 24266 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
 24267 ;; Parameters:    Size  Location     Type
 24268 ;;  s               2   77[BANK5 ] PTR unsigned char 
 24269 ;;		 -> fin_name(13), binv(42), 
 24270 ;;  fmt             2   79[BANK5 ] PTR const unsigned char 
 24271 ;;		 -> STR_107(3), STR_81(3), 
 24272 ;; Auto vars:     Size  Location     Type
 24273 ;;  f              11   85[BANK5 ] struct _IO_FILE
 24274 ;;  ap              2   83[BANK5 ] PTR void [1]
 24275 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24276 ;;  ret             2    0        int 
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  2   77[BANK5 ] int 
 24279 ;; Registers used:
 24280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24281 ;; Tracked objects:
 24282 ;;		On entry : 0/0
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24286 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24290 ;;Total ram usage:       19 bytes
 24291 ;; Hardware stack levels used: 1
 24292 ;; Hardware stack levels required when called: 8
 24293 ;; This function calls:
 24294 ;;		_vfprintf
 24295 ;; This function is called by:
 24296 ;;		_load_program
 24297 ;;		_boot_file
 24298 ;; This function uses a non-reentrant model
 24299 ;;
 24300                           
 24301                           	psect	text55
 24302   01F9B0                     __ptext55:
 24303                           	callstack 0
 24304   01F9B0                     _sprintf:
 24305                           	callstack 116
 24306   01F9B0  0EB1               	movlw	low (?_sprintf+4)
 24307   01F9B2  0105               	movlb	5	; () banked
 24308   01F9B4  6FB3               	movwf	sprintf@ap& (0+255),b
 24309   01F9B6  0E05               	movlw	high (?_sprintf+4)
 24310   01F9B8  6FB4               	movwf	(sprintf@ap+1)& (0+255),b
 24311   01F9BA  C5AD  F5B5         	movff	sprintf@s,sprintf@f
 24312   01F9BE  C5AE  F5B6         	movff	sprintf@s+1,sprintf@f+1
 24313   01F9C2                     
 24314                           ; BSR set to: 5
 24315   01F9C2  0E00               	movlw	0
 24316   01F9C4  6FB8               	movwf	(sprintf@f+3)& (0+255),b
 24317   01F9C6  0E00               	movlw	0
 24318   01F9C8  6FB7               	movwf	(sprintf@f+2)& (0+255),b
 24319   01F9CA                     
 24320                           ; BSR set to: 5
 24321   01F9CA  0E00               	movlw	0
 24322   01F9CC  6FBF               	movwf	(sprintf@f+10)& (0+255),b
 24323   01F9CE  0E00               	movlw	0
 24324   01F9D0  6FBE               	movwf	(sprintf@f+9)& (0+255),b
 24325   01F9D2                     
 24326                           ; BSR set to: 5
 24327   01F9D2  0EB5               	movlw	low sprintf@f
 24328   01F9D4  6FA5               	movwf	vfprintf@fp& (0+255),b
 24329   01F9D6  0E05               	movlw	high sprintf@f
 24330   01F9D8  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 24331   01F9DA  C5AF  F5A7         	movff	sprintf@fmt,vfprintf@fmt
 24332   01F9DE  C5B0  F5A8         	movff	sprintf@fmt+1,vfprintf@fmt+1
 24333   01F9E2  0EB3               	movlw	low sprintf@ap
 24334   01F9E4  6FA9               	movwf	vfprintf@ap& (0+255),b
 24335   01F9E6  0E05               	movlw	high sprintf@ap
 24336   01F9E8  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 24337   01F9EA  EC07  F0FC         	call	_vfprintf	;wreg free
 24338   01F9EE  0105               	movlb	5	; () banked
 24339   01F9F0  51B7               	movf	(sprintf@f+2)& (0+255),w,b
 24340   01F9F2  25AD               	addwf	sprintf@s& (0+255),w,b
 24341   01F9F4  6ED9               	movwf	fsr2l,c
 24342   01F9F6  51B8               	movf	(sprintf@f+3)& (0+255),w,b
 24343   01F9F8  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
 24344   01F9FA  6EDA               	movwf	fsr2h,c
 24345   01F9FC  6ADF               	clrf	indf2,c
 24346   01F9FE                     
 24347                           ; BSR set to: 5
 24348   01F9FE  0012               	return		;funcret
 24349   01FA00                     __end_of_sprintf:
 24350                           	callstack 0
 24351                           
 24352 ;; *************** function _drive_cpu *****************
 24353 ;; Defined at:
 24354 ;;		line 613 in file "../src/w65_main.c"
 24355 ;; Parameters:    Size  Location     Type
 24356 ;;		None
 24357 ;; Auto vars:     Size  Location     Type
 24358 ;;  rs              1  255[BANK6 ] enum E17409
 24359 ;; Return value:  Size  Location     Type
 24360 ;;                  1    wreg      enum E17409
 24361 ;; Registers used:
 24362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24363 ;; Tracked objects:
 24364 ;;		On entry : 0/0
 24365 ;;		On exit  : 0/0
 24366 ;;		Unchanged: 0/0
 24367 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24369 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24371 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24372 ;;Total ram usage:        1 bytes
 24373 ;; Hardware stack levels used: 1
 24374 ;; Hardware stack levels required when called: 24
 24375 ;; This function calls:
 24376 ;;		_board_event_loop
 24377 ;;		_board_event_loop1
 24378 ;;		_timer_off
 24379 ;;		_timer_on
 24380 ;; This function is called by:
 24381 ;;		_setup_monitor
 24382 ;;		_boot_file
 24383 ;;		_return_cpu
 24384 ;;		_wstart_prog
 24385 ;;		_restart_prog
 24386 ;;		_mon_prog
 24387 ;; This function uses a non-reentrant model
 24388 ;;
 24389                           
 24390                           	psect	text56
 24391   01FD40                     __ptext56:
 24392                           	callstack 0
 24393   01FD40                     _drive_cpu:
 24394                           	callstack 101
 24395   01FD40                     
 24396                           ;../src/w65_main.c: 615:  FRESULT rs;;../src/w65_main.c: 617:  nmi_sig = 0;
 24397   01FD40  0107               	movlb	7	; () banked
 24398   01FD42  6BCD               	clrf	_nmi_sig& (0+255),b
 24399   01FD44                     
 24400                           ; BSR set to: 7
 24401                           ;../src/w65_main.c: 618:  if( !fh.irq_sw ) {
 24402   01FD44  0108               	movlb	8	; () banked
 24403   01FD46  51BB               	movf	(_fh+25)& (0+255),w,b
 24404   01FD48  A4D8               	btfss	status,2,c
 24405   01FD4A  EFA9  F0FE         	goto	u33891
 24406   01FD4E  EFAB  F0FE         	goto	u33890
 24407   01FD52                     u33891:
 24408   01FD52  EFB1  F0FE         	goto	l24525
 24409   01FD56                     u33890:
 24410   01FD56                     
 24411                           ; BSR set to: 8
 24412                           ;../src/w65_main.c: 619:   timer_off();
 24413   01FD56  EC42  F001         	call	_timer_off	;wreg free
 24414   01FD5A                     
 24415                           ;../src/w65_main.c: 620:   board_event_loop1();
 24416   01FD5A  ECF5  F0F9         	call	_board_event_loop1	;wreg free
 24417                           
 24418                           ;../src/w65_main.c: 621:  }
 24419   01FD5E  EFB5  F0FE         	goto	l24529
 24420   01FD62                     l24525:
 24421                           
 24422                           ; BSR set to: 8
 24423                           ;../src/w65_main.c: 623:   timer_on();
 24424   01FD62  EC40  F001         	call	_timer_on	;wreg free
 24425   01FD66                     
 24426                           ;../src/w65_main.c: 624:   board_event_loop();
 24427   01FD66  ECD0  F0F5         	call	_board_event_loop	;wreg free
 24428   01FD6A                     l24529:
 24429                           
 24430                           ;../src/w65_main.c: 628:  rs = (FRESULT)(wup_flg - 1);
 24431   01FD6A  0107               	movlb	7	; () banked
 24432   01FD6C  05CC               	decf	_wup_flg& (0+255),w,b
 24433   01FD6E  0106               	movlb	6	; () banked
 24434   01FD70  6FFF               	movwf	drive_cpu@rs& (0+255),b
 24435   01FD72                     
 24436                           ; BSR set to: 6
 24437                           ;../src/w65_main.c: 629:  wup_flg = 0;
 24438   01FD72  0107               	movlb	7	; () banked
 24439   01FD74  6BCC               	clrf	_wup_flg& (0+255),b
 24440   01FD76                     
 24441                           ; BSR set to: 7
 24442                           ;../src/w65_main.c: 631:  return rs;
 24443   01FD76  0106               	movlb	6	; () banked
 24444   01FD78  51FF               	movf	drive_cpu@rs& (0+255),w,b
 24445   01FD7A                     
 24446                           ; BSR set to: 6
 24447   01FD7A  0012               	return		;funcret
 24448   01FD7C                     __end_of_drive_cpu:
 24449                           	callstack 0
 24450                           
 24451 ;; *************** function _timer_on *****************
 24452 ;; Defined at:
 24453 ;;		line 444 in file "../src/boards/w65_cmn.c"
 24454 ;; Parameters:    Size  Location     Type
 24455 ;;		None
 24456 ;; Auto vars:     Size  Location     Type
 24457 ;;		None
 24458 ;; Return value:  Size  Location     Type
 24459 ;;                  1    wreg      void 
 24460 ;; Registers used:
 24461 ;;		None
 24462 ;; Tracked objects:
 24463 ;;		On entry : 0/0
 24464 ;;		On exit  : 0/0
 24465 ;;		Unchanged: 0/0
 24466 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;Total ram usage:        0 bytes
 24472 ;; Hardware stack levels used: 1
 24473 ;; Hardware stack levels required when called: 1
 24474 ;; This function calls:
 24475 ;;		Nothing
 24476 ;; This function is called by:
 24477 ;;		_drive_cpu
 24478 ;; This function uses a non-reentrant model
 24479 ;;
 24480                           
 24481                           	psect	text57
 24482   000280                     __ptext57:
 24483                           	callstack 0
 24484   000280                     _timer_on:
 24485                           	callstack 123
 24486   000280                     
 24487                           ;../src/boards/w65_cmn.c: 445:  TMR0IE = 1;
 24488   000280  8EA1               	bsf	1185,7,c	;volatile
 24489   000282  0012               	return		;funcret
 24490   000284                     __end_of_timer_on:
 24491                           	callstack 0
 24492                           
 24493 ;; *************** function _timer_off *****************
 24494 ;; Defined at:
 24495 ;;		line 440 in file "../src/boards/w65_cmn.c"
 24496 ;; Parameters:    Size  Location     Type
 24497 ;;		None
 24498 ;; Auto vars:     Size  Location     Type
 24499 ;;		None
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      void 
 24502 ;; Registers used:
 24503 ;;		None
 24504 ;; Tracked objects:
 24505 ;;		On entry : 0/0
 24506 ;;		On exit  : 0/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24513 ;;Total ram usage:        0 bytes
 24514 ;; Hardware stack levels used: 1
 24515 ;; Hardware stack levels required when called: 1
 24516 ;; This function calls:
 24517 ;;		Nothing
 24518 ;; This function is called by:
 24519 ;;		_drive_cpu
 24520 ;; This function uses a non-reentrant model
 24521 ;;
 24522                           
 24523                           	psect	text58
 24524   000284                     __ptext58:
 24525                           	callstack 0
 24526   000284                     _timer_off:
 24527                           	callstack 123
 24528   000284                     
 24529                           ;../src/boards/w65_cmn.c: 441:  TMR0IE = 0;
 24530   000284  9EA1               	bcf	1185,7,c	;volatile
 24531   000286  0012               	return		;funcret
 24532   000288                     __end_of_timer_off:
 24533                           	callstack 0
 24534                           
 24535 ;; *************** function _board_event_loop1 *****************
 24536 ;; Defined at:
 24537 ;;		line 347 in file "../src/boards/w65_bd.c"
 24538 ;; Parameters:    Size  Location     Type
 24539 ;;		None
 24540 ;; Auto vars:     Size  Location     Type
 24541 ;;		None
 24542 ;; Return value:  Size  Location     Type
 24543 ;;                  1    wreg      void 
 24544 ;; Registers used:
 24545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24546 ;; Tracked objects:
 24547 ;;		On entry : 0/0
 24548 ;;		On exit  : 0/0
 24549 ;;		Unchanged: 0/0
 24550 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24555 ;;Total ram usage:        0 bytes
 24556 ;; Hardware stack levels used: 1
 24557 ;; Hardware stack levels required when called: 23
 24558 ;; This function calls:
 24559 ;;		_bus_hold_req
 24560 ;;		_bus_master_operation
 24561 ;;		_bus_release_req
 24562 ;; This function is called by:
 24563 ;;		_drive_cpu
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text59
 24568   01F3EA                     __ptext59:
 24569                           	callstack 0
 24570   01F3EA                     _board_event_loop1:
 24571                           	callstack 101
 24572   01F3EA                     l429:
 24573   01F3EA                     l430:
 24574   01F3EA  BACE               	btfsc	1230,5,c	;volatile
 24575   01F3EC  EFFA  F0F9         	goto	u33101
 24576   01F3F0  EFFC  F0F9         	goto	u33100
 24577   01F3F4                     u33101:
 24578   01F3F4  EFF5  F0F9         	goto	l430
 24579   01F3F8                     u33100:
 24580   01F3F8                     
 24581                           ;../src/boards/w65_bd.c: 352:   CLCSELECT = 0;
 24582   01F3F8  0100               	movlb	0	; () banked
 24583   01F3FA  6BD5               	clrf	213,b	;volatile
 24584                           
 24585                           ;../src/boards/w65_bd.c: 353:   G2POL = 0;
 24586   01F3FC  93D7               	bcf	215,1,b	;volatile
 24587   01F3FE                     
 24588                           ; BSR set to: 0
 24589                           ;../src/boards/w65_bd.c: 354:   bus_hold_req();
 24590   01F3FE  EC2C  F001         	call	_bus_hold_req	;wreg free
 24591   01F402                     
 24592                           ;../src/boards/w65_bd.c: 355:   bus_master_operation();
 24593   01F402  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 24594   01F406                     
 24595                           ;../src/boards/w65_bd.c: 356:   if(wup_flg) return;
 24596   01F406  0107               	movlb	7	; () banked
 24597   01F408  51CC               	movf	_wup_flg& (0+255),w,b
 24598   01F40A  B4D8               	btfsc	status,2,c
 24599   01F40C  EF0A  F0FA         	goto	u33111
 24600   01F410  EF0C  F0FA         	goto	u33110
 24601   01F414                     u33111:
 24602   01F414  EF0E  F0FA         	goto	l23951
 24603   01F418                     u33110:
 24604   01F418  EF2F  F0FA         	goto	l434
 24605   01F41C                     l23951:
 24606                           
 24607                           ; BSR set to: 7
 24608                           ;../src/boards/w65_bd.c: 357:   bus_release_req();
 24609   01F41C  EC32  F001         	call	_bus_release_req	;wreg free
 24610   01F420                     
 24611                           ;../src/boards/w65_bd.c: 359:   G2POL = 1;
 24612   01F420  0100               	movlb	0	; () banked
 24613   01F422  83D7               	bsf	215,1,b	;volatile
 24614   01F424                     
 24615                           ; BSR set to: 0
 24616                           ;../src/boards/w65_bd.c: 361:   CLCSELECT = 1;
 24617   01F424  0E01               	movlw	1
 24618   01F426  6FD5               	movwf	213,b	;volatile
 24619   01F428                     
 24620                           ; BSR set to: 0
 24621                           ;../src/boards/w65_bd.c: 362:   G2POL = 1;
 24622   01F428  83D7               	bsf	215,1,b	;volatile
 24623   01F42A                     l435:
 24624                           
 24625                           ; BSR set to: 0
 24626   01F42A  AFD4               	btfss	212,7,b	;volatile
 24627   01F42C  EF1A  F0FA         	goto	u33121
 24628   01F430  EF1C  F0FA         	goto	u33120
 24629   01F434                     u33121:
 24630   01F434  EF15  F0FA         	goto	l435
 24631   01F438                     u33120:
 24632   01F438                     
 24633                           ; BSR set to: 0
 24634                           ;../src/boards/w65_bd.c: 364:   G2POL = 0;
 24635   01F438  93D7               	bcf	215,1,b	;volatile
 24636   01F43A                     
 24637                           ; BSR set to: 0
 24638                           ;../src/boards/w65_bd.c: 365:   CLCSELECT = 7;
 24639   01F43A  0E07               	movlw	7
 24640   01F43C  6FD5               	movwf	213,b	;volatile
 24641   01F43E                     
 24642                           ; BSR set to: 0
 24643                           ;../src/boards/w65_bd.c: 366:   G3POL = 1;
 24644   01F43E  85D7               	bsf	215,2,b	;volatile
 24645   01F440                     
 24646                           ; BSR set to: 0
 24647                           ;../src/boards/w65_bd.c: 367:   G3POL = 0;
 24648   01F440  95D7               	bcf	215,2,b	;volatile
 24649                           
 24650                           ;../src/boards/w65_bd.c: 369:   if (nmi_sig) {
 24651   01F442  0107               	movlb	7	; () banked
 24652   01F444  51CD               	movf	_nmi_sig& (0+255),w,b
 24653   01F446  B4D8               	btfsc	status,2,c
 24654   01F448  EF28  F0FA         	goto	u33131
 24655   01F44C  EF2A  F0FA         	goto	u33130
 24656   01F450                     u33131:
 24657   01F450  EFF5  F0F9         	goto	l429
 24658   01F454                     u33130:
 24659   01F454                     
 24660                           ; BSR set to: 7
 24661                           ;../src/boards/w65_bd.c: 370:    LATE1 = 0;
 24662   01F454  92C2               	bcf	1218,1,c	;volatile
 24663                           
 24664                           ;../src/boards/w65_bd.c: 371:    LATE1 = 1;
 24665   01F456  82C2               	bsf	1218,1,c	;volatile
 24666                           
 24667                           ;../src/boards/w65_bd.c: 372:    nmi_sig = 0;
 24668   01F458  6BCD               	clrf	_nmi_sig& (0+255),b
 24669   01F45A  EFF5  F0F9         	goto	l429
 24670   01F45E                     l434:
 24671                           
 24672                           ; BSR set to: 7
 24673   01F45E  0012               	return		;funcret
 24674   01F460                     __end_of_board_event_loop1:
 24675                           	callstack 0
 24676                           
 24677 ;; *************** function _board_event_loop *****************
 24678 ;; Defined at:
 24679 ;;		line 306 in file "../src/boards/w65_bd.c"
 24680 ;; Parameters:    Size  Location     Type
 24681 ;;		None
 24682 ;; Auto vars:     Size  Location     Type
 24683 ;;		None
 24684 ;; Return value:  Size  Location     Type
 24685 ;;                  1    wreg      void 
 24686 ;; Registers used:
 24687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24688 ;; Tracked objects:
 24689 ;;		On entry : 0/0
 24690 ;;		On exit  : 0/0
 24691 ;;		Unchanged: 0/0
 24692 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;Total ram usage:        0 bytes
 24698 ;; Hardware stack levels used: 1
 24699 ;; Hardware stack levels required when called: 23
 24700 ;; This function calls:
 24701 ;;		_bus_hold_req
 24702 ;;		_bus_master_operation
 24703 ;;		_bus_release_req
 24704 ;;		_make_irq
 24705 ;; This function is called by:
 24706 ;;		_drive_cpu
 24707 ;; This function uses a non-reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text60
 24711   01EBA0                     __ptext60:
 24712                           	callstack 0
 24713   01EBA0                     _board_event_loop:
 24714                           	callstack 101
 24715   01EBA0                     l415:
 24716                           
 24717                           ;../src/boards/w65_bd.c: 309:   while (RA5) {
 24718   01EBA0  EFE1  F0F5         	goto	l23911
 24719   01EBA4                     l23901:
 24720                           
 24721                           ;../src/boards/w65_bd.c: 310:    if ( irq_flg >= 1 ) {
 24722   01EBA4  0107               	movlb	7	; () banked
 24723   01EBA6  51CB               	movf	_irq_flg& (0+255),w,b
 24724   01EBA8  B4D8               	btfsc	status,2,c
 24725   01EBAA  EFD9  F0F5         	goto	u33051
 24726   01EBAE  EFDB  F0F5         	goto	u33050
 24727   01EBB2                     u33051:
 24728   01EBB2  EFE1  F0F5         	goto	l23911
 24729   01EBB6                     u33050:
 24730   01EBB6                     
 24731                           ; BSR set to: 7
 24732                           ;../src/boards/w65_bd.c: 311:     make_irq();
 24733   01EBB6  ECEE  F0FF         	call	_make_irq	;wreg free
 24734   01EBBA                     
 24735                           ;../src/boards/w65_bd.c: 312:     GIE = 0;
 24736   01EBBA  9ED6               	bcf	1238,7,c	;volatile
 24737   01EBBC                     
 24738                           ;../src/boards/w65_bd.c: 313:     irq_flg = 0;
 24739   01EBBC  0107               	movlb	7	; () banked
 24740   01EBBE  6BCB               	clrf	_irq_flg& (0+255),b
 24741   01EBC0                     
 24742                           ; BSR set to: 7
 24743                           ;../src/boards/w65_bd.c: 314:     GIE = 1;
 24744   01EBC0  8ED6               	bsf	1238,7,c	;volatile
 24745   01EBC2                     l23911:
 24746                           
 24747                           ;../src/boards/w65_bd.c: 309:   while (RA5) {
 24748   01EBC2  BACE               	btfsc	1230,5,c	;volatile
 24749   01EBC4  EFE6  F0F5         	goto	u33061
 24750   01EBC8  EFE8  F0F5         	goto	u33060
 24751   01EBCC                     u33061:
 24752   01EBCC  EFD2  F0F5         	goto	l23901
 24753   01EBD0                     u33060:
 24754   01EBD0                     
 24755                           ;../src/boards/w65_bd.c: 318:   CLCSELECT = 0;
 24756   01EBD0  0100               	movlb	0	; () banked
 24757   01EBD2  6BD5               	clrf	213,b	;volatile
 24758                           
 24759                           ;../src/boards/w65_bd.c: 319:   G2POL = 0;
 24760   01EBD4  93D7               	bcf	215,1,b	;volatile
 24761   01EBD6                     
 24762                           ; BSR set to: 0
 24763                           ;../src/boards/w65_bd.c: 320:   bus_hold_req();
 24764   01EBD6  EC2C  F001         	call	_bus_hold_req	;wreg free
 24765   01EBDA                     
 24766                           ;../src/boards/w65_bd.c: 321:   bus_master_operation();
 24767   01EBDA  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 24768   01EBDE                     
 24769                           ;../src/boards/w65_bd.c: 322:   if(wup_flg) return;
 24770   01EBDE  0107               	movlb	7	; () banked
 24771   01EBE0  51CC               	movf	_wup_flg& (0+255),w,b
 24772   01EBE2  B4D8               	btfsc	status,2,c
 24773   01EBE4  EFF6  F0F5         	goto	u33071
 24774   01EBE8  EFF8  F0F5         	goto	u33070
 24775   01EBEC                     u33071:
 24776   01EBEC  EFFA  F0F5         	goto	l23921
 24777   01EBF0                     u33070:
 24778   01EBF0  EF1E  F0F6         	goto	l421
 24779   01EBF4                     l23921:
 24780                           
 24781                           ; BSR set to: 7
 24782                           ;../src/boards/w65_bd.c: 323:   bus_release_req();
 24783   01EBF4  EC32  F001         	call	_bus_release_req	;wreg free
 24784   01EBF8                     
 24785                           ;../src/boards/w65_bd.c: 325:   G2POL = 1;
 24786   01EBF8  0100               	movlb	0	; () banked
 24787   01EBFA  83D7               	bsf	215,1,b	;volatile
 24788   01EBFC                     
 24789                           ; BSR set to: 0
 24790                           ;../src/boards/w65_bd.c: 327:   CLCSELECT = 1;
 24791   01EBFC  0E01               	movlw	1
 24792   01EBFE  6FD5               	movwf	213,b	;volatile
 24793   01EC00                     
 24794                           ; BSR set to: 0
 24795                           ;../src/boards/w65_bd.c: 328:   G2POL = 1;
 24796   01EC00  83D7               	bsf	215,1,b	;volatile
 24797   01EC02                     l422:
 24798                           
 24799                           ; BSR set to: 0
 24800   01EC02  AFD4               	btfss	212,7,b	;volatile
 24801   01EC04  EF06  F0F6         	goto	u33081
 24802   01EC08  EF08  F0F6         	goto	u33080
 24803   01EC0C                     u33081:
 24804   01EC0C  EF01  F0F6         	goto	l422
 24805   01EC10                     u33080:
 24806   01EC10                     
 24807                           ; BSR set to: 0
 24808                           ;../src/boards/w65_bd.c: 330:   G2POL = 0;
 24809   01EC10  93D7               	bcf	215,1,b	;volatile
 24810   01EC12                     
 24811                           ; BSR set to: 0
 24812                           ;../src/boards/w65_bd.c: 331:   CLCSELECT = 7;
 24813   01EC12  0E07               	movlw	7
 24814   01EC14  6FD5               	movwf	213,b	;volatile
 24815   01EC16                     
 24816                           ; BSR set to: 0
 24817                           ;../src/boards/w65_bd.c: 332:   G3POL = 1;
 24818   01EC16  85D7               	bsf	215,2,b	;volatile
 24819   01EC18                     
 24820                           ; BSR set to: 0
 24821                           ;../src/boards/w65_bd.c: 333:   G3POL = 0;
 24822   01EC18  95D7               	bcf	215,2,b	;volatile
 24823   01EC1A                     
 24824                           ; BSR set to: 0
 24825                           ;../src/boards/w65_bd.c: 335:   GIE = 0;
 24826   01EC1A  9ED6               	bcf	1238,7,c	;volatile
 24827   01EC1C                     
 24828                           ; BSR set to: 0
 24829                           ;../src/boards/w65_bd.c: 336:   irq_flg = 0;
 24830   01EC1C  0107               	movlb	7	; () banked
 24831   01EC1E  6BCB               	clrf	_irq_flg& (0+255),b
 24832   01EC20                     
 24833                           ; BSR set to: 7
 24834                           ;../src/boards/w65_bd.c: 337:   GIE = 1;
 24835   01EC20  8ED6               	bsf	1238,7,c	;volatile
 24836                           
 24837                           ;../src/boards/w65_bd.c: 339:   if (nmi_sig) {
 24838   01EC22  51CD               	movf	_nmi_sig& (0+255),w,b
 24839   01EC24  B4D8               	btfsc	status,2,c
 24840   01EC26  EF17  F0F6         	goto	u33091
 24841   01EC2A  EF19  F0F6         	goto	u33090
 24842   01EC2E                     u33091:
 24843   01EC2E  EFD0  F0F5         	goto	l415
 24844   01EC32                     u33090:
 24845   01EC32                     
 24846                           ; BSR set to: 7
 24847                           ;../src/boards/w65_bd.c: 340:    LATE1 = 0;
 24848   01EC32  92C2               	bcf	1218,1,c	;volatile
 24849                           
 24850                           ;../src/boards/w65_bd.c: 341:    LATE1 = 1;
 24851   01EC34  82C2               	bsf	1218,1,c	;volatile
 24852                           
 24853                           ;../src/boards/w65_bd.c: 342:    nmi_sig = 0;
 24854   01EC36  6BCD               	clrf	_nmi_sig& (0+255),b
 24855   01EC38  EFD0  F0F5         	goto	l415
 24856   01EC3C                     l421:
 24857                           
 24858                           ; BSR set to: 7
 24859   01EC3C  0012               	return		;funcret
 24860   01EC3E                     __end_of_board_event_loop:
 24861                           	callstack 0
 24862                           
 24863 ;; *************** function _make_irq *****************
 24864 ;; Defined at:
 24865 ;;		line 40 in file "../src/boards/w65_cmn.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;		None
 24868 ;; Auto vars:     Size  Location     Type
 24869 ;;		None
 24870 ;; Return value:  Size  Location     Type
 24871 ;;                  1    wreg      void 
 24872 ;; Registers used:
 24873 ;;		wreg, status,2
 24874 ;; Tracked objects:
 24875 ;;		On entry : 0/0
 24876 ;;		On exit  : 0/0
 24877 ;;		Unchanged: 0/0
 24878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24883 ;;Total ram usage:        0 bytes
 24884 ;; Hardware stack levels used: 1
 24885 ;; Hardware stack levels required when called: 1
 24886 ;; This function calls:
 24887 ;;		Nothing
 24888 ;; This function is called by:
 24889 ;;		_board_event_loop
 24890 ;; This function uses a non-reentrant model
 24891 ;;
 24892                           
 24893                           	psect	text61
 24894   01FFDC                     __ptext61:
 24895                           	callstack 0
 24896   01FFDC                     _make_irq:
 24897                           	callstack 122
 24898   01FFDC                     
 24899                           ;../src/boards/w65_cmn.c: 42:  CLCSELECT = 1;
 24900   01FFDC  0E01               	movlw	1
 24901   01FFDE  0100               	movlb	0	; () banked
 24902   01FFE0  6FD5               	movwf	213,b	;volatile
 24903   01FFE2                     
 24904                           ; BSR set to: 0
 24905                           ;../src/boards/w65_cmn.c: 43:  G2POL = 1;
 24906   01FFE2  83D7               	bsf	215,1,b	;volatile
 24907   01FFE4                     l281:
 24908                           
 24909                           ; BSR set to: 0
 24910   01FFE4  AFD4               	btfss	212,7,b	;volatile
 24911   01FFE6  EFF7  F0FF         	goto	u32931
 24912   01FFEA  EFF9  F0FF         	goto	u32930
 24913   01FFEE                     u32931:
 24914   01FFEE  EFF2  F0FF         	goto	l281
 24915   01FFF2                     u32930:
 24916   01FFF2                     
 24917                           ; BSR set to: 0
 24918                           ;../src/boards/w65_cmn.c: 45:  G2POL = 0;
 24919   01FFF2  93D7               	bcf	215,1,b	;volatile
 24920   01FFF4                     
 24921                           ; BSR set to: 0
 24922                           ;../src/boards/w65_cmn.c: 46:  CLCSELECT = 7;
 24923   01FFF4  0E07               	movlw	7
 24924   01FFF6  6FD5               	movwf	213,b	;volatile
 24925   01FFF8                     
 24926                           ; BSR set to: 0
 24927                           ;../src/boards/w65_cmn.c: 47:  G3POL = 1;
 24928   01FFF8  85D7               	bsf	215,2,b	;volatile
 24929   01FFFA                     
 24930                           ; BSR set to: 0
 24931                           ;../src/boards/w65_cmn.c: 48:  G3POL = 0;
 24932   01FFFA  95D7               	bcf	215,2,b	;volatile
 24933   01FFFC                     
 24934                           ; BSR set to: 0
 24935   01FFFC  0012               	return		;funcret
 24936   01FFFE                     __end_of_make_irq:
 24937                           	callstack 0
 24938                           
 24939 ;; *************** function _bus_release_req *****************
 24940 ;; Defined at:
 24941 ;;		line 294 in file "../src/boards/w65_bd.c"
 24942 ;; Parameters:    Size  Location     Type
 24943 ;;		None
 24944 ;; Auto vars:     Size  Location     Type
 24945 ;;		None
 24946 ;; Return value:  Size  Location     Type
 24947 ;;                  1    wreg      void 
 24948 ;; Registers used:
 24949 ;;		None
 24950 ;; Tracked objects:
 24951 ;;		On entry : 0/0
 24952 ;;		On exit  : 0/0
 24953 ;;		Unchanged: 0/0
 24954 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24959 ;;Total ram usage:        0 bytes
 24960 ;; Hardware stack levels used: 1
 24961 ;; Hardware stack levels required when called: 1
 24962 ;; This function calls:
 24963 ;;		Nothing
 24964 ;; This function is called by:
 24965 ;;		_reset_cpu
 24966 ;;		_start_cpu
 24967 ;;		_start_W65
 24968 ;;		_board_event_loop
 24969 ;;		_board_event_loop1
 24970 ;;		_continue_action
 24971 ;; This function uses a non-reentrant model
 24972 ;;
 24973                           
 24974                           	psect	text62
 24975   000264                     __ptext62:
 24976                           	callstack 0
 24977   000264                     _bus_release_req:
 24978                           	callstack 123
 24979   000264                     
 24980                           ;../src/boards/w65_bd.c: 296:  TRISC = 0xff;
 24981   000264  68C8               	setf	200,c	;volatile
 24982                           
 24983                           ;../src/boards/w65_bd.c: 297:  TRISD = 0xff;
 24984   000266  68C9               	setf	201,c	;volatile
 24985                           
 24986                           ;../src/boards/w65_bd.c: 299:  TRISA1 = 1;
 24987   000268  82C6               	bsf	1222,1,c	;volatile
 24988                           
 24989                           ;../src/boards/w65_bd.c: 300:  TRISA4 = 1;
 24990   00026A  88C6               	bsf	1222,4,c	;volatile
 24991   00026C  0012               	return		;funcret
 24992   00026E                     __end_of_bus_release_req:
 24993                           	callstack 0
 24994                           
 24995 ;; *************** function _bus_master_operation *****************
 24996 ;; Defined at:
 24997 ;;		line 201 in file "../src/io_dos.c"
 24998 ;; Parameters:    Size  Location     Type
 24999 ;;		None
 25000 ;; Auto vars:     Size  Location     Type
 25001 ;;  cnt             2   20[BANK7 ] unsigned short 
 25002 ;;  buf             2   18[BANK7 ] PTR unsigned char 
 25003 ;;		 -> tmp_buf(512), 
 25004 ;; Return value:  Size  Location     Type
 25005 ;;                  1    wreg      void 
 25006 ;; Registers used:
 25007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 25008 ;; Tracked objects:
 25009 ;;		On entry : 0/0
 25010 ;;		On exit  : 0/0
 25011 ;;		Unchanged: 0/0
 25012 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25014 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25016 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25017 ;;Total ram usage:        6 bytes
 25018 ;; Hardware stack levels used: 1
 25019 ;; Hardware stack levels required when called: 22
 25020 ;; This function calls:
 25021 ;;		_dsk_err
 25022 ;;		_get_str
 25023 ;;		_in_file
 25024 ;;		_putch
 25025 ;;		_read_sector
 25026 ;;		_read_sram
 25027 ;;		_setup_drive
 25028 ;;		_str_inf
 25029 ;;		_u_getch
 25030 ;;		_unimon_console
 25031 ;;		_write_sector
 25032 ;;		_write_sram
 25033 ;; This function is called by:
 25034 ;;		_board_event_loop
 25035 ;;		_board_event_loop1
 25036 ;; This function uses a non-reentrant model
 25037 ;;
 25038                           
 25039                           	psect	text63
 25040   018BA2                     __ptext63:
 25041                           	callstack 0
 25042   018BA2                     _bus_master_operation:
 25043                           	callstack 101
 25044   018BA2                     
 25045                           ;../src/io_dos.c: 202:  uint8_t *buf;;../src/io_dos.c: 203:  uint16_t cnt;;../src/io_dos
      +                          .c: 206:  read_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, (unsigned int)sizeof(crq_hdr))
      +                          ;
 25046   018BA2  C7DB  F504         	movff	_bioreq_ubuffadr,read_sram@addr
 25047   018BA6  C7DC  F505         	movff	_bioreq_ubuffadr+1,read_sram@addr+1
 25048   018BAA  C7DD  F506         	movff	_bioreq_ubuffadr+2,read_sram@addr+2
 25049   018BAE  C7DE  F507         	movff	_bioreq_ubuffadr+3,read_sram@addr+3
 25050   018BB2  0ECE               	movlw	low _req_tbl
 25051   018BB4  6E08               	movwf	read_sram@buf^(0+1280),c
 25052   018BB6  0E07               	movlw	high _req_tbl
 25053   018BB8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 25054   018BBA  0E00               	movlw	0
 25055   018BBC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 25056   018BBE  0E0D               	movlw	13
 25057   018BC0  6E0A               	movwf	read_sram@len^(0+1280),c
 25058   018BC2  EC0C  F0F2         	call	_read_sram	;wreg free
 25059   018BC6                     
 25060                           ;../src/io_dos.c: 208:  if (req_tbl.UREQ_COM) {
 25061   018BC6  0107               	movlb	7	; () banked
 25062   018BC8  51CE               	movf	_req_tbl& (0+255),w,b
 25063   018BCA  B4D8               	btfsc	status,2,c
 25064   018BCC  EFEA  F0C5         	goto	u32941
 25065   018BD0  EFEC  F0C5         	goto	u32940
 25066   018BD4                     u32941:
 25067   018BD4  EF02  F0C6         	goto	l23843
 25068   018BD8                     u32940:
 25069   018BD8                     
 25070                           ; BSR set to: 7
 25071                           ;../src/io_dos.c: 209:   unimon_console();
 25072   018BD8  EC2D  F0D6         	call	_unimon_console	;wreg free
 25073   018BDC                     
 25074                           ;../src/io_dos.c: 212:   write_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, 2);
 25075   018BDC  C7DB  F504         	movff	_bioreq_ubuffadr,write_sram@addr
 25076   018BE0  C7DC  F505         	movff	_bioreq_ubuffadr+1,write_sram@addr+1
 25077   018BE4  C7DD  F506         	movff	_bioreq_ubuffadr+2,write_sram@addr+2
 25078   018BE8  C7DE  F507         	movff	_bioreq_ubuffadr+3,write_sram@addr+3
 25079   018BEC  0ECE               	movlw	low _req_tbl
 25080   018BEE  6E08               	movwf	write_sram@buf^(0+1280),c
 25081   018BF0  0E07               	movlw	high _req_tbl
 25082   018BF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 25083   018BF4  0E00               	movlw	0
 25084   018BF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 25085   018BF8  0E02               	movlw	2
 25086   018BFA  6E0A               	movwf	write_sram@len^(0+1280),c
 25087   018BFC  EC9F  F0E8         	call	_write_sram	;wreg free
 25088                           
 25089                           ;../src/io_dos.c: 213:  }
 25090   018C00  EF2A  F0C7         	goto	l882
 25091   018C04                     l23843:
 25092                           
 25093                           ; BSR set to: 7
 25094                           ;../src/io_dos.c: 215:   buf = &tmp_buf[0][0];
 25095   018C04  0EF8               	movlw	low _tmp_buf
 25096   018C06  6F12               	movwf	bus_master_operation@buf& (0+255),b
 25097   018C08  0E13               	movlw	high _tmp_buf
 25098   018C0A  6F13               	movwf	(bus_master_operation@buf+1)& (0+255),b
 25099                           
 25100                           ;../src/io_dos.c: 216:   switch (req_tbl.CREQ_COM) {
 25101   018C0C  EFF3  F0C6         	goto	l23893
 25102   018C10                     l23845:
 25103                           
 25104                           ; BSR set to: 7
 25105                           ;../src/io_dos.c: 219:     req_tbl.CBI_CHR = (uint8_t)(*get_char[cin_no])();
 25106   018C10  51CA               	movf	_cin_no& (0+255),w,b
 25107   018C12  0D03               	mullw	3
 25108   018C14  0ED9               	movlw	low _get_char
 25109   018C16  24F3               	addwf	243,w,c
 25110   018C18  6ED9               	movwf	fsr2l,c
 25111   018C1A  0E08               	movlw	high _get_char
 25112   018C1C  20F4               	addwfc	prodh,w,c
 25113   018C1E  6EDA               	movwf	fsr2h,c
 25114   018C20  D802               	call	u32958
 25115   018C22  EF1D  F0C6         	goto	u32959
 25116   018C26                     u32958:
 25117   018C26  0005               	push	
 25118   018C28  6EFA               	movwf	pclath,c
 25119   018C2A  50DE               	movf	postinc2,w,c
 25120   018C2C  6EFD               	movwf	tosl,c
 25121   018C2E  50DE               	movf	postinc2,w,c
 25122   018C30  6EFE               	movwf	tosh,c
 25123   018C32  50DE               	movf	postinc2,w,c
 25124   018C34  6EFF               	movwf	tosu,c
 25125   018C36  50FA               	movf	pclath,w,c
 25126   018C38  0012               	return		;indir
 25127   018C3A                     u32959:
 25128   018C3A  0107               	movlb	7	; () banked
 25129   018C3C  5100               	movf	?_in_file& (0+255),w,b
 25130   018C3E  6FD1               	movwf	(_req_tbl+3)& (0+255),b
 25131                           
 25132                           ;../src/io_dos.c: 220:     break;
 25133   018C40  EF16  F0C7         	goto	l860
 25134   018C44                     l23847:
 25135                           
 25136                           ; BSR set to: 7
 25137                           ;../src/io_dos.c: 223:     putch((char)req_tbl.CBI_CHR);
 25138   018C44  51D1               	movf	(_req_tbl+3)& (0+255),w,b
 25139   018C46  EC03  F001         	call	_putch
 25140                           
 25141                           ;../src/io_dos.c: 224:     break;
 25142   018C4A  EF16  F0C7         	goto	l860
 25143   018C4E                     l23849:
 25144                           
 25145                           ; BSR set to: 7
 25146                           ;../src/io_dos.c: 227:     if ( !cin_no ) req_tbl.CBI_CHR = (rx_cnt !=0) ? 255 : 0;
 25147   018C4E  51CA               	movf	_cin_no& (0+255),w,b
 25148   018C50  A4D8               	btfss	status,2,c
 25149   018C52  EF2D  F0C6         	goto	u32961
 25150   018C56  EF2F  F0C6         	goto	u32960
 25151   018C5A                     u32961:
 25152   018C5A  EF45  F0C6         	goto	l863
 25153   018C5E                     u32960:
 25154   018C5E                     
 25155                           ; BSR set to: 7
 25156   018C5E  51C1               	movf	_rx_cnt& (0+255),w,b
 25157   018C60  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 25158   018C62  A4D8               	btfss	status,2,c
 25159   018C64  EF36  F0C6         	goto	u32971
 25160   018C68  EF38  F0C6         	goto	u32970
 25161   018C6C                     u32971:
 25162   018C6C  EF3E  F0C6         	goto	l23855
 25163   018C70                     u32970:
 25164   018C70                     
 25165                           ; BSR set to: 7
 25166   018C70  0E00               	movlw	0
 25167   018C72  6F11               	movwf	(_bus_master_operation$1043+1)& (0+255),b
 25168   018C74  0E00               	movlw	0
 25169   018C76  6F10               	movwf	_bus_master_operation$1043& (0+255),b
 25170   018C78  EF41  F0C6         	goto	l23857
 25171   018C7C                     l23855:
 25172                           
 25173                           ; BSR set to: 7
 25174   018C7C  0E00               	movlw	0
 25175   018C7E  6F11               	movwf	(_bus_master_operation$1043+1)& (0+255),b
 25176   018C80  6910               	setf	_bus_master_operation$1043& (0+255),b
 25177   018C82                     l23857:
 25178                           
 25179                           ; BSR set to: 7
 25180   018C82  C710  F7D1         	movff	_bus_master_operation$1043,_req_tbl+3
 25181   018C86  EF16  F0C7         	goto	l860
 25182   018C8A                     l863:
 25183                           
 25184                           ; BSR set to: 7
 25185   018C8A  69D1               	setf	(_req_tbl+3)& (0+255),b
 25186   018C8C  EF16  F0C7         	goto	l860
 25187   018C90                     l869:
 25188                           
 25189                           ; BSR set to: 7
 25190                           ;../src/io_dos.c: 231:     cnt = (uint16_t)req_tbl.CBI_CHR;
 25191   018C90  C7D1  F714         	movff	_req_tbl+3,bus_master_operation@cnt
 25192   018C94  6B15               	clrf	(bus_master_operation@cnt+1)& (0+255),b
 25193   018C96                     
 25194                           ; BSR set to: 7
 25195                           ;../src/io_dos.c: 233:     read_sram(req_tbl.data_adr, buf, cnt);
 25196   018C96  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 25197   018C9A  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 25198   018C9E  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 25199   018CA2  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 25200   018CA6  C712  F508         	movff	bus_master_operation@buf,read_sram@buf
 25201   018CAA  C713  F509         	movff	bus_master_operation@buf+1,read_sram@buf+1
 25202   018CAE  C714  F50A         	movff	bus_master_operation@cnt,read_sram@len
 25203   018CB2  C715  F50B         	movff	bus_master_operation@cnt+1,read_sram@len+1
 25204   018CB6  EC0C  F0F2         	call	_read_sram	;wreg free
 25205                           
 25206                           ;../src/io_dos.c: 234:     while( cnt ) {
 25207   018CBA  EF6C  F0C6         	goto	l23867
 25208   018CBE                     l23861:
 25209                           
 25210                           ; BSR set to: 7
 25211                           ;../src/io_dos.c: 235:      putch( *buf++);
 25212   018CBE  C712  F4D9         	movff	bus_master_operation@buf,fsr2l
 25213   018CC2  C713  F4DA         	movff	bus_master_operation@buf+1,fsr2h
 25214   018CC6  50DF               	movf	indf2,w,c
 25215   018CC8  EC03  F001         	call	_putch
 25216   018CCC  0107               	movlb	7	; () banked
 25217   018CCE  4B12               	infsnz	bus_master_operation@buf& (0+255),f,b
 25218   018CD0  2B13               	incf	(bus_master_operation@buf+1)& (0+255),f,b
 25219   018CD2                     
 25220                           ; BSR set to: 7
 25221                           ;../src/io_dos.c: 236:      cnt--;
 25222   018CD2  0714               	decf	bus_master_operation@cnt& (0+255),f,b
 25223   018CD4  A0D8               	btfss	status,0,c
 25224   018CD6  0715               	decf	(bus_master_operation@cnt+1)& (0+255),f,b
 25225   018CD8                     l23867:
 25226                           
 25227                           ;../src/io_dos.c: 234:     while( cnt ) {
 25228   018CD8  0107               	movlb	7	; () banked
 25229   018CDA  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 25230   018CDC  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 25231   018CDE  A4D8               	btfss	status,2,c
 25232   018CE0  EF74  F0C6         	goto	u32981
 25233   018CE4  EF76  F0C6         	goto	u32980
 25234   018CE8                     u32981:
 25235   018CE8  EF5F  F0C6         	goto	l23861
 25236   018CEC                     u32980:
 25237   018CEC  EF16  F0C7         	goto	l860
 25238   018CF0                     l23869:
 25239                           
 25240                           ; BSR set to: 7
 25241                           ;../src/io_dos.c: 240:     if ( setup_drive() ) {
 25242   018CF0  EC30  F0FA         	call	_setup_drive	;wreg free
 25243   018CF4  5004               	movf	?_setup_drive^(0+1280),w,c
 25244   018CF6  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 25245   018CF8  B4D8               	btfsc	status,2,c
 25246   018CFA  EF81  F0C6         	goto	u32991
 25247   018CFE  EF83  F0C6         	goto	u32990
 25248   018D02                     u32991:
 25249   018D02  EF87  F0C6         	goto	l23873
 25250   018D06                     u32990:
 25251   018D06                     l23871:
 25252                           
 25253                           ;../src/io_dos.c: 241:      dsk_err();
 25254   018D06  EC37  F001         	call	_dsk_err	;wreg free
 25255                           
 25256                           ;../src/io_dos.c: 242:      break;
 25257   018D0A  EF16  F0C7         	goto	l860
 25258   018D0E                     l23873:
 25259                           
 25260                           ;../src/io_dos.c: 244:     if ( read_sector() ) {
 25261   018D0E  ECB4  F0E2         	call	_read_sector	;wreg free
 25262   018D12  0106               	movlb	6	; () banked
 25263   018D14  519A               	movf	?_read_sector& (0+255),w,b
 25264   018D16  119B               	iorwf	(?_read_sector+1)& (0+255),w,b
 25265   018D18  B4D8               	btfsc	status,2,c
 25266   018D1A  EF91  F0C6         	goto	u33001
 25267   018D1E  EF93  F0C6         	goto	u33000
 25268   018D22                     u33001:
 25269   018D22  EF16  F0C7         	goto	l860
 25270   018D26                     u33000:
 25271   018D26  EF83  F0C6         	goto	l23871
 25272   018D2A                     l23877:
 25273                           
 25274                           ; BSR set to: 7
 25275                           ;../src/io_dos.c: 250:     if ( setup_drive() ) {
 25276   018D2A  EC30  F0FA         	call	_setup_drive	;wreg free
 25277   018D2E  5004               	movf	?_setup_drive^(0+1280),w,c
 25278   018D30  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 25279   018D32  B4D8               	btfsc	status,2,c
 25280   018D34  EF9E  F0C6         	goto	u33011
 25281   018D38  EFA0  F0C6         	goto	u33010
 25282   018D3C                     u33011:
 25283   018D3C  EFA2  F0C6         	goto	l23881
 25284   018D40                     u33010:
 25285   018D40  EF83  F0C6         	goto	l23871
 25286   018D44                     l23881:
 25287                           
 25288                           ;../src/io_dos.c: 254:     if ( write_sector() ) {
 25289   018D44  ECC6  F0DC         	call	_write_sector	;wreg free
 25290   018D48  0106               	movlb	6	; () banked
 25291   018D4A  519A               	movf	?_write_sector& (0+255),w,b
 25292   018D4C  119B               	iorwf	(?_write_sector+1)& (0+255),w,b
 25293   018D4E  B4D8               	btfsc	status,2,c
 25294   018D50  EFAC  F0C6         	goto	u33021
 25295   018D54  EFAE  F0C6         	goto	u33020
 25296   018D58                     u33021:
 25297   018D58  EF16  F0C7         	goto	l860
 25298   018D5C                     u33020:
 25299   018D5C  EF83  F0C6         	goto	l23871
 25300   018D60                     l23885:
 25301                           
 25302                           ; BSR set to: 7
 25303                           ;../src/io_dos.c: 260:     cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.CB
      +                          I_CHR);
 25304   018D60  C712  F700         	movff	bus_master_operation@buf,str_inf@buf
 25305   018D64  C713  F701         	movff	bus_master_operation@buf+1,str_inf@buf+1
 25306   018D68  C7D1  F702         	movff	_req_tbl+3,str_inf@cnt
 25307   018D6C  51CA               	movf	_cin_no& (0+255),w,b
 25308   018D6E  0D03               	mullw	3
 25309   018D70  0ED3               	movlw	low _strin_func
 25310   018D72  24F3               	addwf	243,w,c
 25311   018D74  6ED9               	movwf	fsr2l,c
 25312   018D76  0E08               	movlw	high _strin_func
 25313   018D78  20F4               	addwfc	prodh,w,c
 25314   018D7A  6EDA               	movwf	fsr2h,c
 25315   018D7C  D802               	call	u33038
 25316   018D7E  EFCB  F0C6         	goto	u33039
 25317   018D82                     u33038:
 25318   018D82  0005               	push	
 25319   018D84  6EFA               	movwf	pclath,c
 25320   018D86  50DE               	movf	postinc2,w,c
 25321   018D88  6EFD               	movwf	tosl,c
 25322   018D8A  50DE               	movf	postinc2,w,c
 25323   018D8C  6EFE               	movwf	tosh,c
 25324   018D8E  50DE               	movf	postinc2,w,c
 25325   018D90  6EFF               	movwf	tosu,c
 25326   018D92  50FA               	movf	pclath,w,c
 25327   018D94  0012               	return		;indir
 25328   018D96                     u33039:
 25329   018D96  C700  F714         	movff	?_str_inf,bus_master_operation@cnt
 25330   018D9A  C701  F715         	movff	?_str_inf+1,bus_master_operation@cnt+1
 25331   018D9E                     
 25332                           ;../src/io_dos.c: 261:     req_tbl.CBI_CHR = (uint8_t)cnt;
 25333   018D9E  C714  F7D1         	movff	bus_master_operation@cnt,_req_tbl+3
 25334   018DA2                     
 25335                           ;../src/io_dos.c: 262:     if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt)
      +                          ;
 25336   018DA2  0107               	movlb	7	; () banked
 25337   018DA4  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 25338   018DA6  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 25339   018DA8  B4D8               	btfsc	status,2,c
 25340   018DAA  EFD9  F0C6         	goto	u33041
 25341   018DAE  EFDB  F0C6         	goto	u33040
 25342   018DB2                     u33041:
 25343   018DB2  EF16  F0C7         	goto	l860
 25344   018DB6                     u33040:
 25345   018DB6                     
 25346                           ; BSR set to: 7
 25347   018DB6  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 25348   018DBA  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 25349   018DBE  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 25350   018DC2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 25351   018DC6  C712  F508         	movff	bus_master_operation@buf,write_sram@buf
 25352   018DCA  C713  F509         	movff	bus_master_operation@buf+1,write_sram@buf+1
 25353   018DCE  C714  F50A         	movff	bus_master_operation@cnt,write_sram@len
 25354   018DD2  C715  F50B         	movff	bus_master_operation@cnt+1,write_sram@len+1
 25355   018DD6  EC9F  F0E8         	call	_write_sram	;wreg free
 25356   018DDA  EF16  F0C7         	goto	l860
 25357   018DDE                     l881:
 25358                           
 25359                           ; BSR set to: 7
 25360                           ;../src/io_dos.c: 265:     wup_flg = req_tbl.CBI_CHR;
 25361   018DDE  C7D1  F7CC         	movff	_req_tbl+3,_wup_flg
 25362                           
 25363                           ;../src/io_dos.c: 266:   }
 25364   018DE2  EF16  F0C7         	goto	l860
 25365   018DE6                     l23893:
 25366                           
 25367                           ; BSR set to: 7
 25368   018DE6  51D0               	movf	(_req_tbl+2)& (0+255),w,b
 25369                           
 25370                           ; Switch size 1, requested type "simple"
 25371                           ; Number of cases is 8, Range of values is 1 to 255
 25372                           ; switch strategies available:
 25373                           ; Name         Instructions Cycles
 25374                           ; simple_byte           25    13 (average)
 25375                           ;	Chosen strategy is simple_byte
 25376   018DE8  0A01               	xorlw	1	; case 1
 25377   018DEA  B4D8               	btfsc	status,2,c
 25378   018DEC  EF08  F0C6         	goto	l23845
 25379   018DF0  0A03               	xorlw	3	; case 2
 25380   018DF2  B4D8               	btfsc	status,2,c
 25381   018DF4  EF22  F0C6         	goto	l23847
 25382   018DF8  0A01               	xorlw	1	; case 3
 25383   018DFA  B4D8               	btfsc	status,2,c
 25384   018DFC  EF27  F0C6         	goto	l23849
 25385   018E00  0A07               	xorlw	7	; case 4
 25386   018E02  B4D8               	btfsc	status,2,c
 25387   018E04  EF48  F0C6         	goto	l869
 25388   018E08  0A01               	xorlw	1	; case 5
 25389   018E0A  B4D8               	btfsc	status,2,c
 25390   018E0C  EF78  F0C6         	goto	l23869
 25391   018E10  0A03               	xorlw	3	; case 6
 25392   018E12  B4D8               	btfsc	status,2,c
 25393   018E14  EF95  F0C6         	goto	l23877
 25394   018E18  0A01               	xorlw	1	; case 7
 25395   018E1A  B4D8               	btfsc	status,2,c
 25396   018E1C  EFB0  F0C6         	goto	l23885
 25397   018E20  0AF8               	xorlw	248	; case 255
 25398   018E22  B4D8               	btfsc	status,2,c
 25399   018E24  EFEF  F0C6         	goto	l881
 25400   018E28  EF16  F0C7         	goto	l860
 25401   018E2C                     l860:
 25402                           
 25403                           ;../src/io_dos.c: 267:   req_tbl.CREQ_COM = 0;
 25404   018E2C  0107               	movlb	7	; () banked
 25405   018E2E  6BD0               	clrf	(_req_tbl+2)& (0+255),b
 25406   018E30                     
 25407                           ; BSR set to: 7
 25408                           ;../src/io_dos.c: 269:   write_sram(bioreq_cbuffadr, (uint8_t *)&req_tbl.CREQ_COM, 2);
 25409   018E30  C824  F504         	movff	_bioreq_cbuffadr,write_sram@addr
 25410   018E34  C825  F505         	movff	_bioreq_cbuffadr+1,write_sram@addr+1
 25411   018E38  C826  F506         	movff	_bioreq_cbuffadr+2,write_sram@addr+2
 25412   018E3C  C827  F507         	movff	_bioreq_cbuffadr+3,write_sram@addr+3
 25413   018E40  0ED0               	movlw	low (_req_tbl+2)
 25414   018E42  6E08               	movwf	write_sram@buf^(0+1280),c
 25415   018E44  0E07               	movlw	high (_req_tbl+2)
 25416   018E46  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 25417   018E48  0E00               	movlw	0
 25418   018E4A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 25419   018E4C  0E02               	movlw	2
 25420   018E4E  6E0A               	movwf	write_sram@len^(0+1280),c
 25421   018E50  EC9F  F0E8         	call	_write_sram	;wreg free
 25422   018E54                     l882:
 25423   018E54  0012               	return		;funcret
 25424   018E56                     __end_of_bus_master_operation:
 25425                           	callstack 0
 25426                           
 25427 ;; *************** function _write_sector *****************
 25428 ;; Defined at:
 25429 ;;		line 76 in file "../src/io_dos.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;		None
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;  n               2  162[BANK6 ] unsigned int 
 25434 ;;  filep           2  159[BANK6 ] PTR struct .
 25435 ;;  fres            1  161[BANK6 ] enum E16851
 25436 ;; Return value:  Size  Location     Type
 25437 ;;                  2  154[BANK6 ] int 
 25438 ;; Registers used:
 25439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25440 ;; Tracked objects:
 25441 ;;		On entry : 0/0
 25442 ;;		On exit  : 0/0
 25443 ;;		Unchanged: 0/0
 25444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25445 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;Total ram usage:       10 bytes
 25450 ;; Hardware stack levels used: 1
 25451 ;; Hardware stack levels required when called: 18
 25452 ;; This function calls:
 25453 ;;		_f_sync
 25454 ;;		_f_write
 25455 ;;		_printf
 25456 ;;		_read_sram
 25457 ;;		_seek_disk
 25458 ;;		_util_hexdump_sum
 25459 ;; This function is called by:
 25460 ;;		_bus_master_operation
 25461 ;; This function uses a non-reentrant model
 25462 ;;
 25463                           
 25464                           	psect	text64
 25465   01B98C                     __ptext64:
 25466                           	callstack 0
 25467   01B98C                     _write_sector:
 25468                           	callstack 104
 25469   01B98C                     
 25470                           ;../src/io_dos.c: 77:  unsigned int n;;../src/io_dos.c: 78:  FRESULT fres;;../src/io_dos
      +                          .c: 79:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 25471   01B98C  0107               	movlb	7	; () banked
 25472   01B98E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 25473   01B990  0D04               	mullw	4
 25474   01B992  0E4D               	movlw	low (_cpm_drives+2)
 25475   01B994  24F3               	addwf	243,w,c
 25476   01B996  6ED9               	movwf	fsr2l,c
 25477   01B998  0E09               	movlw	high (_cpm_drives+2)
 25478   01B99A  20F4               	addwfc	prodh,w,c
 25479   01B99C  6EDA               	movwf	fsr2h,c
 25480   01B99E  C4DE F69F          	movff	postinc2,write_sector@filep
 25481   01B9A2  C4DD F6A0          	movff	postdec2,write_sector@filep+1
 25482   01B9A6                     
 25483                           ; BSR set to: 7
 25484                           ;../src/io_dos.c: 81:  if (seek_disk()) return(-1);
 25485   01B9A6  ECF4  F0E5         	call	_seek_disk	;wreg free
 25486   01B9AA  0106               	movlb	6	; () banked
 25487   01B9AC  518B               	movf	?_seek_disk& (0+255),w,b
 25488   01B9AE  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 25489   01B9B0  B4D8               	btfsc	status,2,c
 25490   01B9B2  EFDD  F0DC         	goto	u32691
 25491   01B9B6  EFDF  F0DC         	goto	u32690
 25492   01B9BA                     u32691:
 25493   01B9BA  EFE4  F0DC         	goto	l23697
 25494   01B9BE                     u32690:
 25495   01B9BE                     l23695:
 25496   01B9BE  0106               	movlb	6	; () banked
 25497   01B9C0  699A               	setf	?_write_sector& (0+255),b
 25498   01B9C2  699B               	setf	(?_write_sector+1)& (0+255),b
 25499   01B9C4  EF8E  F0DD         	goto	l807
 25500   01B9C8                     l23697:
 25501                           
 25502                           ; BSR set to: 6
 25503                           ;../src/io_dos.c: 84:  read_sram(req_tbl.data_adr, disk_buf, 128);
 25504   01B9C8  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 25505   01B9CC  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 25506   01B9D0  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 25507   01B9D4  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 25508   01B9D8  0E00               	movlw	low _disk_buf
 25509   01B9DA  6E08               	movwf	read_sram@buf^(0+1280),c
 25510   01B9DC  0E0A               	movlw	high _disk_buf
 25511   01B9DE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 25512   01B9E0  0E00               	movlw	0
 25513   01B9E2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 25514   01B9E4  0E80               	movlw	128
 25515   01B9E6  6E0A               	movwf	read_sram@len^(0+1280),c
 25516   01B9E8  EC0C  F0F2         	call	_read_sram	;wreg free
 25517   01B9EC                     
 25518                           ;../src/io_dos.c: 86:  if ((debug.disk_write) && (debug.disk_verbose) && !(debug.disk_ma
      +                          sk & (1 << req_tbl.disk_drive))) {
 25519   01B9EC  0108               	movlb	8	; () banked
 25520   01B9EE  5118               	movf	(_debug+2)& (0+255),w,b
 25521   01B9F0  B4D8               	btfsc	status,2,c
 25522   01B9F2  EFFD  F0DC         	goto	u32701
 25523   01B9F6  EFFF  F0DC         	goto	u32700
 25524   01B9FA                     u32701:
 25525   01B9FA  EF37  F0DD         	goto	l23707
 25526   01B9FE                     u32700:
 25527   01B9FE                     
 25528                           ; BSR set to: 8
 25529   01B9FE  5119               	movf	(_debug+3)& (0+255),w,b
 25530   01BA00  B4D8               	btfsc	status,2,c
 25531   01BA02  EF05  F0DD         	goto	u32711
 25532   01BA06  EF07  F0DD         	goto	u32710
 25533   01BA0A                     u32711:
 25534   01BA0A  EF37  F0DD         	goto	l23707
 25535   01BA0E                     u32710:
 25536   01BA0E                     
 25537                           ; BSR set to: 8
 25538   01BA0E  C7D2  F69C         	movff	_req_tbl+4,??_write_sector
 25539   01BA12  0E01               	movlw	1
 25540   01BA14  0106               	movlb	6	; () banked
 25541   01BA16  6F9D               	movwf	(??_write_sector+1)& (0+255),b
 25542   01BA18  0E00               	movlw	0
 25543   01BA1A  6F9E               	movwf	(??_write_sector+2)& (0+255),b
 25544   01BA1C  2B9C               	incf	??_write_sector& (0+255),f,b
 25545   01BA1E  EF14  F0DD         	goto	u32724
 25546   01BA22                     u32725:
 25547   01BA22  90D8               	bcf	status,0,c
 25548   01BA24  379D               	rlcf	(??_write_sector+1)& (0+255),f,b
 25549   01BA26  379E               	rlcf	(??_write_sector+2)& (0+255),f,b
 25550   01BA28                     u32724:
 25551   01BA28  2F9C               	decfsz	??_write_sector& (0+255),f,b
 25552   01BA2A  EF11  F0DD         	goto	u32725
 25553   01BA2E  0108               	movlb	8	; () banked
 25554   01BA30  511A               	movf	(_debug+4)& (0+255),w,b
 25555   01BA32  0106               	movlb	6	; () banked
 25556   01BA34  179D               	andwf	(??_write_sector+1)& (0+255),f,b
 25557   01BA36  0108               	movlb	8	; () banked
 25558   01BA38  511B               	movf	(_debug+5)& (0+255),w,b
 25559   01BA3A  0106               	movlb	6	; () banked
 25560   01BA3C  179E               	andwf	(??_write_sector+2)& (0+255),f,b
 25561   01BA3E  519D               	movf	(??_write_sector+1)& (0+255),w,b
 25562   01BA40  119E               	iorwf	(??_write_sector+2)& (0+255),w,b
 25563   01BA42  A4D8               	btfss	status,2,c
 25564   01BA44  EF26  F0DD         	goto	u32731
 25565   01BA48  EF28  F0DD         	goto	u32730
 25566   01BA4C                     u32731:
 25567   01BA4C  EF37  F0DD         	goto	l23707
 25568   01BA50                     u32730:
 25569   01BA50                     
 25570                           ; BSR set to: 6
 25571                           ;../src/io_dos.c: 87:   util_hexdump_sum("buf: ", disk_buf, 128);
 25572   01BA50  0E9D               	movlw	low STR_35
 25573   01BA52  0105               	movlb	5	; () banked
 25574   01BA54  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 25575   01BA56  0EFF               	movlw	high STR_35
 25576   01BA58  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 25577   01BA5A  0E00               	movlw	low _disk_buf
 25578   01BA5C  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 25579   01BA5E  0E0A               	movlw	high _disk_buf
 25580   01BA60  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 25581   01BA62  0E00               	movlw	0
 25582   01BA64  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 25583   01BA66  0E80               	movlw	128
 25584   01BA68  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 25585   01BA6A  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 25586   01BA6E                     l23707:
 25587                           
 25588                           ;../src/io_dos.c: 91:  if ((fres = f_write(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 25589   01BA6E  C69F  F662         	movff	write_sector@filep,f_write@fp
 25590   01BA72  C6A0  F663         	movff	write_sector@filep+1,f_write@fp+1
 25591   01BA76  0E00               	movlw	low _disk_buf
 25592   01BA78  0106               	movlb	6	; () banked
 25593   01BA7A  6F64               	movwf	f_write@buff& (0+255),b
 25594   01BA7C  0E0A               	movlw	high _disk_buf
 25595   01BA7E  6F65               	movwf	(f_write@buff+1)& (0+255),b
 25596   01BA80  0E00               	movlw	0
 25597   01BA82  6F67               	movwf	(f_write@btw+1)& (0+255),b
 25598   01BA84  0E80               	movlw	128
 25599   01BA86  6F66               	movwf	f_write@btw& (0+255),b
 25600   01BA88  0EA2               	movlw	low write_sector@n
 25601   01BA8A  6F68               	movwf	f_write@bw& (0+255),b
 25602   01BA8C  0E06               	movlw	high write_sector@n
 25603   01BA8E  6F69               	movwf	(f_write@bw+1)& (0+255),b
 25604   01BA90  EC9C  F08A         	call	_f_write	;wreg free
 25605   01BA94  0106               	movlb	6	; () banked
 25606   01BA96  6FA1               	movwf	write_sector@fres& (0+255),b
 25607   01BA98  51A1               	movf	write_sector@fres& (0+255),w,b
 25608   01BA9A  A4D8               	btfss	status,2,c
 25609   01BA9C  EF52  F0DD         	goto	u32741
 25610   01BAA0  EF54  F0DD         	goto	u32740
 25611   01BAA4                     u32741:
 25612   01BAA4  EF5E  F0DD         	goto	l23711
 25613   01BAA8                     u32740:
 25614   01BAA8                     
 25615                           ; BSR set to: 6
 25616   01BAA8  0E80               	movlw	128
 25617   01BAAA  19A2               	xorwf	write_sector@n& (0+255),w,b
 25618   01BAAC  11A3               	iorwf	(write_sector@n+1)& (0+255),w,b
 25619   01BAAE  B4D8               	btfsc	status,2,c
 25620   01BAB0  EF5C  F0DD         	goto	u32751
 25621   01BAB4  EF5E  F0DD         	goto	u32750
 25622   01BAB8                     u32751:
 25623   01BAB8  EF6E  F0DD         	goto	l23719
 25624   01BABC                     u32750:
 25625   01BABC                     l23711:
 25626                           
 25627                           ; BSR set to: 6
 25628                           ;../src/io_dos.c: 92:   printf("f_write(): ERROR res=%d, n=%d\n\r", fres, n);
 25629   01BABC  0E77               	movlw	low STR_36
 25630   01BABE  0105               	movlb	5	; () banked
 25631   01BAC0  6FAD               	movwf	printf@fmt& (0+255),b
 25632   01BAC2  0EF8               	movlw	high STR_36
 25633   01BAC4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25634   01BAC6  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 25635   01BACA  6BB0               	clrf	(?_printf+3)& (0+255),b
 25636   01BACC  C6A2  F5B1         	movff	write_sector@n,?_printf+4
 25637   01BAD0  C6A3  F5B2         	movff	write_sector@n+1,?_printf+5
 25638   01BAD4  ECDA  F0FF         	call	_printf	;wreg free
 25639   01BAD8  EFDF  F0DC         	goto	l23695
 25640   01BADC                     l23719:
 25641                           
 25642                           ; BSR set to: 6
 25643   01BADC  C69F  F624         	movff	write_sector@filep,f_sync@fp
 25644   01BAE0  C6A0  F625         	movff	write_sector@filep+1,f_sync@fp+1
 25645   01BAE4  EC6D  F0CE         	call	_f_sync	;wreg free
 25646   01BAE8  0106               	movlb	6	; () banked
 25647   01BAEA  6FA1               	movwf	write_sector@fres& (0+255),b
 25648   01BAEC  51A1               	movf	write_sector@fres& (0+255),w,b
 25649   01BAEE  B4D8               	btfsc	status,2,c
 25650   01BAF0  EF7C  F0DD         	goto	u32761
 25651   01BAF4  EF7E  F0DD         	goto	u32760
 25652   01BAF8                     u32761:
 25653   01BAF8  EF8A  F0DD         	goto	l23727
 25654   01BAFC                     u32760:
 25655   01BAFC                     
 25656                           ; BSR set to: 6
 25657                           ;../src/io_dos.c: 96:   printf("f_sync(): ERROR %d\n\r", fres);
 25658   01BAFC  0E70               	movlw	low STR_37
 25659   01BAFE  0105               	movlb	5	; () banked
 25660   01BB00  6FAD               	movwf	printf@fmt& (0+255),b
 25661   01BB02  0EFC               	movlw	high STR_37
 25662   01BB04  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25663   01BB06  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 25664   01BB0A  6BB0               	clrf	(?_printf+3)& (0+255),b
 25665   01BB0C  ECDA  F0FF         	call	_printf	;wreg free
 25666   01BB10  EFDF  F0DC         	goto	l23695
 25667   01BB14                     l23727:
 25668                           
 25669                           ; BSR set to: 6
 25670                           ;../src/io_dos.c: 99:  return(0);
 25671   01BB14  0E00               	movlw	0
 25672   01BB16  6F9B               	movwf	(?_write_sector+1)& (0+255),b
 25673   01BB18  0E00               	movlw	0
 25674   01BB1A  6F9A               	movwf	?_write_sector& (0+255),b
 25675   01BB1C                     l807:
 25676                           
 25677                           ; BSR set to: 6
 25678   01BB1C  0012               	return		;funcret
 25679   01BB1E                     __end_of_write_sector:
 25680                           	callstack 0
 25681                           
 25682 ;; *************** function _f_write *****************
 25683 ;; Defined at:
 25684 ;;		line 4016 in file "../fatfs/ff.c"
 25685 ;; Parameters:    Size  Location     Type
 25686 ;;  fp              2   98[BANK6 ] PTR struct .
 25687 ;;		 -> pb$fp(2), 
 25688 ;;  buff            2  100[BANK6 ] PTR const void 
 25689 ;;		 -> pb$buf(64), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25690 ;;		 -> disk_buf(128), 
 25691 ;;  btw             2  102[BANK6 ] unsigned int 
 25692 ;;  bw              2  104[BANK6 ] PTR unsigned int 
 25693 ;;		 -> putc_flush@nw(2), putc_bfd@n(2), write_sector@n(2), 
 25694 ;; Auto vars:     Size  Location     Type
 25695 ;;  sect            4  135[BANK6 ] unsigned long 
 25696 ;;  clst            4  129[BANK6 ] unsigned long 
 25697 ;;  fs              2  139[BANK6 ] PTR struct .
 25698 ;;		 -> fs(564), NULL(0), 
 25699 ;;  wcnt            2  133[BANK6 ] unsigned int 
 25700 ;;  cc              2  127[BANK6 ] unsigned int 
 25701 ;;  csect           2  125[BANK6 ] unsigned int 
 25702 ;;  wbuff           2  123[BANK6 ] PTR const unsigned char 
 25703 ;;		 -> pb$buf(64), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25704 ;;		 -> disk_buf(128), 
 25705 ;;  res             1  122[BANK6 ] enum E597
 25706 ;; Return value:  Size  Location     Type
 25707 ;;                  1    wreg      enum E16851
 25708 ;; Registers used:
 25709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25710 ;; Tracked objects:
 25711 ;;		On entry : 0/0
 25712 ;;		On exit  : 0/0
 25713 ;;		Unchanged: 0/0
 25714 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25715 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25716 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25717 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25718 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25719 ;;Total ram usage:       43 bytes
 25720 ;; Hardware stack levels used: 1
 25721 ;; Hardware stack levels required when called: 16
 25722 ;; This function calls:
 25723 ;;		_clst2sect
 25724 ;;		_create_chain
 25725 ;;		_disk_read
 25726 ;;		_disk_write
 25727 ;;		_memcpy
 25728 ;;		_validate
 25729 ;; This function is called by:
 25730 ;;		_write_sector
 25731 ;;		_putc_bfd
 25732 ;;		_putc_flush
 25733 ;; This function uses a non-reentrant model
 25734 ;;
 25735                           
 25736                           	psect	text65
 25737   011538                     __ptext65:
 25738                           	callstack 0
 25739   011538                     _f_write:
 25740                           	callstack 105
 25741   011538                     
 25742                           ;../fatfs/ff.c: 4017:  FIL* fp,;../fatfs/ff.c: 4018:  const void* buff,;../fatfs/ff.c: 4
      +                          019:  UINT btw,;../fatfs/ff.c: 4020:  UINT* bw;../fatfs/ff.c: 4022: {;../fatfs/ff.c: 402
      +                          3:  FRESULT res;;../fatfs/ff.c: 4024:  FATFS *fs;;../fatfs/ff.c: 4025:  DWORD clst;;../f
      +                          atfs/ff.c: 4026:  LBA_t sect;;../fatfs/ff.c: 4027:  UINT wcnt, cc, csect;;../fatfs/ff.c:
      +                           4028:  const BYTE *wbuff = (const BYTE*)buff;
 25743   011538  C664  F67B         	movff	f_write@buff,f_write@wbuff
 25744   01153C  C665  F67C         	movff	f_write@buff+1,f_write@wbuff+1
 25745   011540                     
 25746                           ;../fatfs/ff.c: 4031:  *bw = 0;
 25747   011540  C668  F4D9         	movff	f_write@bw,fsr2l
 25748   011544  C669  F4DA         	movff	f_write@bw+1,fsr2h
 25749   011548  6ADE               	clrf	postinc2,c
 25750   01154A  6ADD               	clrf	postdec2,c
 25751   01154C                     
 25752                           ;../fatfs/ff.c: 4032:  res = validate(&fp->obj, &fs);
 25753   01154C  C662  F5BE         	movff	f_write@fp,validate@obj
 25754   011550  C663  F5BF         	movff	f_write@fp+1,validate@obj+1
 25755   011554  0E8B               	movlw	low f_write@fs
 25756   011556  0105               	movlb	5	; () banked
 25757   011558  6FC0               	movwf	validate@rfs& (0+255),b
 25758   01155A  0E06               	movlw	high f_write@fs
 25759   01155C  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 25760   01155E  ECA3  F0E9         	call	_validate	;wreg free
 25761   011562  0106               	movlb	6	; () banked
 25762   011564  6F7A               	movwf	f_write@res& (0+255),b
 25763   011566                     
 25764                           ; BSR set to: 6
 25765                           ;../fatfs/ff.c: 4033:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 25766   011566  517A               	movf	f_write@res& (0+255),w,b
 25767   011568  A4D8               	btfss	status,2,c
 25768   01156A  EFB9  F08A         	goto	u32251
 25769   01156E  EFBB  F08A         	goto	u32250
 25770   011572                     u32251:
 25771   011572  EFCB  F08A         	goto	l23421
 25772   011576                     u32250:
 25773   011576                     
 25774                           ; BSR set to: 6
 25775   011576  EE20 F00F          	lfsr	2,15
 25776   01157A  5162               	movf	f_write@fp& (0+255),w,b
 25777   01157C  26D9               	addwf	fsr2l,f,c
 25778   01157E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25779   011580  22DA               	addwfc	fsr2h,f,c
 25780   011582  50DF               	movf	indf2,w,c
 25781   011584  6F7A               	movwf	f_write@res& (0+255),b
 25782   011586  517A               	movf	f_write@res& (0+255),w,b
 25783   011588  B4D8               	btfsc	status,2,c
 25784   01158A  EFC9  F08A         	goto	u32261
 25785   01158E  EFCB  F08A         	goto	u32260
 25786   011592                     u32261:
 25787   011592  EFCE  F08A         	goto	l23425
 25788   011596                     u32260:
 25789   011596                     l23421:
 25790                           
 25791                           ; BSR set to: 6
 25792   011596  517A               	movf	f_write@res& (0+255),w,b
 25793   011598  EFD9  F08E         	goto	l1962
 25794   01159C                     l23425:
 25795                           
 25796                           ; BSR set to: 6
 25797                           ;../fatfs/ff.c: 4034:  if (!(fp->flag & 0x02)) return FR_DENIED;
 25798   01159C  EE20 F00E          	lfsr	2,14
 25799   0115A0  5162               	movf	f_write@fp& (0+255),w,b
 25800   0115A2  26D9               	addwf	fsr2l,f,c
 25801   0115A4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25802   0115A6  22DA               	addwfc	fsr2h,f,c
 25803   0115A8  B2DF               	btfsc	indf2,1,c
 25804   0115AA  EFD9  F08A         	goto	u32271
 25805   0115AE  EFDB  F08A         	goto	u32270
 25806   0115B2                     u32271:
 25807   0115B2  EFDE  F08A         	goto	l23433
 25808   0115B6                     u32270:
 25809   0115B6                     
 25810                           ; BSR set to: 6
 25811   0115B6  0E07               	movlw	7
 25812   0115B8  EFD9  F08E         	goto	l1962
 25813   0115BC                     l23433:
 25814                           
 25815                           ; BSR set to: 6
 25816   0115BC  EE20 F010          	lfsr	2,16
 25817   0115C0  5162               	movf	f_write@fp& (0+255),w,b
 25818   0115C2  26D9               	addwf	fsr2l,f,c
 25819   0115C4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25820   0115C6  22DA               	addwfc	fsr2h,f,c
 25821   0115C8  EE10 F010          	lfsr	1,16
 25822   0115CC  5162               	movf	f_write@fp& (0+255),w,b
 25823   0115CE  26E1               	addwf	fsr1l,f,c
 25824   0115D0  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25825   0115D2  22E2               	addwfc	fsr1h,f,c
 25826   0115D4  C4E6 F66E          	movff	postinc1,??_f_write+4
 25827   0115D8  C4E6 F66F          	movff	postinc1,??_f_write+5
 25828   0115DC  C4E6 F670          	movff	postinc1,??_f_write+6
 25829   0115E0  C4E6 F671          	movff	postinc1,??_f_write+7
 25830   0115E4  5166               	movf	f_write@btw& (0+255),w,b
 25831   0115E6  256E               	addwf	(??_f_write+4)& (0+255),w,b
 25832   0115E8  6F72               	movwf	(??_f_write+8)& (0+255),b
 25833   0115EA  5167               	movf	(f_write@btw+1)& (0+255),w,b
 25834   0115EC  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 25835   0115EE  6F73               	movwf	(??_f_write+9)& (0+255),b
 25836   0115F0  0E00               	movlw	0
 25837   0115F2  2170               	addwfc	(??_f_write+6)& (0+255),w,b
 25838   0115F4  6F74               	movwf	(??_f_write+10)& (0+255),b
 25839   0115F6  0E00               	movlw	0
 25840   0115F8  2171               	addwfc	(??_f_write+7)& (0+255),w,b
 25841   0115FA  6F75               	movwf	(??_f_write+11)& (0+255),b
 25842   0115FC  50DE               	movf	postinc2,w,c
 25843   0115FE  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 25844   011600  50DE               	movf	postinc2,w,c
 25845   011602  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 25846   011604  50DE               	movf	postinc2,w,c
 25847   011606  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 25848   011608  50DE               	movf	postinc2,w,c
 25849   01160A  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 25850   01160C  B0D8               	btfsc	status,0,c
 25851   01160E  EF0B  F08B         	goto	u32281
 25852   011612  EF0D  F08B         	goto	u32280
 25853   011616                     u32281:
 25854   011616  EF1B  F08B         	goto	l23437
 25855   01161A                     u32280:
 25856   01161A                     
 25857                           ; BSR set to: 6
 25858                           ;../fatfs/ff.c: 4038:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 25859   01161A  EE20 F010          	lfsr	2,16
 25860   01161E  5162               	movf	f_write@fp& (0+255),w,b
 25861   011620  26D9               	addwf	fsr2l,f,c
 25862   011622  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25863   011624  22DA               	addwfc	fsr2h,f,c
 25864   011626  C4DE F66A          	movff	postinc2,??_f_write
 25865   01162A  C4DD F66B          	movff	postdec2,??_f_write+1
 25866   01162E  1D6A               	comf	??_f_write& (0+255),w,b
 25867   011630  6F66               	movwf	f_write@btw& (0+255),b
 25868   011632  1D6B               	comf	(??_f_write+1)& (0+255),w,b
 25869   011634  6F67               	movwf	(f_write@btw+1)& (0+255),b
 25870   011636                     l23437:
 25871                           
 25872                           ; BSR set to: 6
 25873                           ;../fatfs/ff.c: 4041:  for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fpt
      +                          r += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) 
      +                          {
 25874   011636  5166               	movf	f_write@btw& (0+255),w,b
 25875   011638  1167               	iorwf	(f_write@btw+1)& (0+255),w,b
 25876   01163A  A4D8               	btfss	status,2,c
 25877   01163C  EF22  F08B         	goto	u32291
 25878   011640  EF24  F08B         	goto	u32290
 25879   011644                     u32291:
 25880   011644  EF26  F08B         	goto	l23441
 25881   011648                     u32290:
 25882   011648  EFD0  F08E         	goto	l23565
 25883   01164C                     l23441:
 25884                           
 25885                           ; BSR set to: 6
 25886                           ;../fatfs/ff.c: 4042:   if (fp->fptr % ((UINT)512) == 0) {
 25887   01164C  EE20 F010          	lfsr	2,16
 25888   011650  5162               	movf	f_write@fp& (0+255),w,b
 25889   011652  26D9               	addwf	fsr2l,f,c
 25890   011654  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25891   011656  22DA               	addwfc	fsr2h,f,c
 25892   011658  0EFF               	movlw	255
 25893   01165A  14DE               	andwf	postinc2,w,c
 25894   01165C  6F6A               	movwf	??_f_write& (0+255),b
 25895   01165E  0E01               	movlw	1
 25896   011660  14DE               	andwf	postinc2,w,c
 25897   011662  6F6B               	movwf	(??_f_write+1)& (0+255),b
 25898   011664  0E00               	movlw	0
 25899   011666  14DE               	andwf	postinc2,w,c
 25900   011668  6F6C               	movwf	(??_f_write+2)& (0+255),b
 25901   01166A  0E00               	movlw	0
 25902   01166C  14DE               	andwf	postinc2,w,c
 25903   01166E  6F6D               	movwf	(??_f_write+3)& (0+255),b
 25904   011670  516A               	movf	??_f_write& (0+255),w,b
 25905   011672  116B               	iorwf	(??_f_write+1)& (0+255),w,b
 25906   011674  116C               	iorwf	(??_f_write+2)& (0+255),w,b
 25907   011676  116D               	iorwf	(??_f_write+3)& (0+255),w,b
 25908   011678  A4D8               	btfss	status,2,c
 25909   01167A  EF41  F08B         	goto	u32301
 25910   01167E  EF43  F08B         	goto	u32300
 25911   011682                     u32301:
 25912   011682  EF14  F08E         	goto	l1969
 25913   011686                     u32300:
 25914   011686                     
 25915                           ; BSR set to: 6
 25916                           ;../fatfs/ff.c: 4043:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
 25917   011686  EE20 F010          	lfsr	2,16
 25918   01168A  5162               	movf	f_write@fp& (0+255),w,b
 25919   01168C  26D9               	addwf	fsr2l,f,c
 25920   01168E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25921   011690  22DA               	addwfc	fsr2h,f,c
 25922   011692  C4DE F66A          	movff	postinc2,??_f_write
 25923   011696  C4DE F66B          	movff	postinc2,??_f_write+1
 25924   01169A  C4DE F66C          	movff	postinc2,??_f_write+2
 25925   01169E  C4DE F66D          	movff	postinc2,??_f_write+3
 25926   0116A2  0E0A               	movlw	10
 25927   0116A4  EF59  F08B         	goto	u32310
 25928   0116A8                     u32315:
 25929   0116A8  90D8               	bcf	status,0,c
 25930   0116AA  336D               	rrcf	(??_f_write+3)& (0+255),f,b
 25931   0116AC  336C               	rrcf	(??_f_write+2)& (0+255),f,b
 25932   0116AE  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 25933   0116B0  336A               	rrcf	??_f_write& (0+255),f,b
 25934   0116B2                     u32310:
 25935   0116B2  2EE8               	decfsz	wreg,f,c
 25936   0116B4  EF54  F08B         	goto	u32315
 25937   0116B8  EE20 F00A          	lfsr	2,10
 25938   0116BC  518B               	movf	f_write@fs& (0+255),w,b
 25939   0116BE  26D9               	addwf	fsr2l,f,c
 25940   0116C0  518C               	movf	(f_write@fs+1)& (0+255),w,b
 25941   0116C2  22DA               	addwfc	fsr2h,f,c
 25942   0116C4  C4DE F66E          	movff	postinc2,??_f_write+4
 25943   0116C8  C4DD F66F          	movff	postdec2,??_f_write+5
 25944   0116CC  0EFF               	movlw	255
 25945   0116CE  256E               	addwf	(??_f_write+4)& (0+255),w,b
 25946   0116D0  6F70               	movwf	(??_f_write+6)& (0+255),b
 25947   0116D2  0EFF               	movlw	255
 25948   0116D4  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 25949   0116D6  6F71               	movwf	(??_f_write+7)& (0+255),b
 25950   0116D8  516A               	movf	??_f_write& (0+255),w,b
 25951   0116DA  1570               	andwf	(??_f_write+6)& (0+255),w,b
 25952   0116DC  6F7D               	movwf	f_write@csect& (0+255),b
 25953   0116DE  516B               	movf	(??_f_write+1)& (0+255),w,b
 25954   0116E0  1571               	andwf	(??_f_write+7)& (0+255),w,b
 25955   0116E2  6F7E               	movwf	(f_write@csect+1)& (0+255),b
 25956   0116E4                     
 25957                           ; BSR set to: 6
 25958                           ;../fatfs/ff.c: 4044:    if (csect == 0) {
 25959   0116E4  517D               	movf	f_write@csect& (0+255),w,b
 25960   0116E6  117E               	iorwf	(f_write@csect+1)& (0+255),w,b
 25961   0116E8  A4D8               	btfss	status,2,c
 25962   0116EA  EF79  F08B         	goto	u32321
 25963   0116EE  EF7B  F08B         	goto	u32320
 25964   0116F2                     u32321:
 25965   0116F2  EF43  F08C         	goto	l1970
 25966   0116F6                     u32320:
 25967   0116F6                     
 25968                           ; BSR set to: 6
 25969                           ;../fatfs/ff.c: 4045:     if (fp->fptr == 0) {
 25970   0116F6  EE20 F010          	lfsr	2,16
 25971   0116FA  5162               	movf	f_write@fp& (0+255),w,b
 25972   0116FC  26D9               	addwf	fsr2l,f,c
 25973   0116FE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25974   011700  22DA               	addwfc	fsr2h,f,c
 25975   011702  50DE               	movf	postinc2,w,c
 25976   011704  10DE               	iorwf	postinc2,w,c
 25977   011706  10DE               	iorwf	postinc2,w,c
 25978   011708  10DE               	iorwf	postinc2,w,c
 25979   01170A  A4D8               	btfss	status,2,c
 25980   01170C  EF8A  F08B         	goto	u32331
 25981   011710  EF8C  F08B         	goto	u32330
 25982   011714                     u32331:
 25983   011714  EFBD  F08B         	goto	l23455
 25984   011718                     u32330:
 25985   011718                     
 25986                           ; BSR set to: 6
 25987                           ;../fatfs/ff.c: 4046:      clst = fp->obj.sclust;
 25988   011718  EE20 F006          	lfsr	2,6
 25989   01171C  5162               	movf	f_write@fp& (0+255),w,b
 25990   01171E  26D9               	addwf	fsr2l,f,c
 25991   011720  5163               	movf	(f_write@fp+1)& (0+255),w,b
 25992   011722  22DA               	addwfc	fsr2h,f,c
 25993   011724  C4DE F681          	movff	postinc2,f_write@clst
 25994   011728  C4DE F682          	movff	postinc2,f_write@clst+1
 25995   01172C  C4DE F683          	movff	postinc2,f_write@clst+2
 25996   011730  C4DE F684          	movff	postinc2,f_write@clst+3
 25997   011734                     
 25998                           ; BSR set to: 6
 25999                           ;../fatfs/ff.c: 4047:      if (clst == 0) {
 26000   011734  5181               	movf	f_write@clst& (0+255),w,b
 26001   011736  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 26002   011738  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 26003   01173A  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 26004   01173C  A4D8               	btfss	status,2,c
 26005   01173E  EFA3  F08B         	goto	u32341
 26006   011742  EFA5  F08B         	goto	u32340
 26007   011746                     u32341:
 26008   011746  EFD9  F08B         	goto	l23457
 26009   01174A                     u32340:
 26010   01174A                     
 26011                           ; BSR set to: 6
 26012                           ;../fatfs/ff.c: 4048:       clst = create_chain(&fp->obj, 0);
 26013   01174A  C662  F645         	movff	f_write@fp,create_chain@obj
 26014   01174E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 26015   011752  0E00               	movlw	0
 26016   011754  6F47               	movwf	create_chain@clst& (0+255),b
 26017   011756  0E00               	movlw	0
 26018   011758  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 26019   01175A  0E00               	movlw	0
 26020   01175C  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 26021   01175E  0E00               	movlw	0
 26022   011760  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 26023   011762  EC7C  F09D         	call	_create_chain	;wreg free
 26024   011766  C645  F681         	movff	?_create_chain,f_write@clst
 26025   01176A  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 26026   01176E  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 26027   011772  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 26028   011776  EFD9  F08B         	goto	l23457
 26029   01177A                     l23455:
 26030                           
 26031                           ; BSR set to: 6
 26032                           ;../fatfs/ff.c: 4056:      {;../fatfs/ff.c: 4057:       clst = create_chain(&fp->obj, fp
      +                          ->clust);
 26033   01177A  C662  F645         	movff	f_write@fp,create_chain@obj
 26034   01177E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 26035   011782  EE20 F014          	lfsr	2,20
 26036   011786  5162               	movf	f_write@fp& (0+255),w,b
 26037   011788  26D9               	addwf	fsr2l,f,c
 26038   01178A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26039   01178C  22DA               	addwfc	fsr2h,f,c
 26040   01178E  C4DE F647          	movff	postinc2,create_chain@clst
 26041   011792  C4DE F648          	movff	postinc2,create_chain@clst+1
 26042   011796  C4DE F649          	movff	postinc2,create_chain@clst+2
 26043   01179A  C4DE F64A          	movff	postinc2,create_chain@clst+3
 26044   01179E  EC7C  F09D         	call	_create_chain	;wreg free
 26045   0117A2  C645  F681         	movff	?_create_chain,f_write@clst
 26046   0117A6  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 26047   0117AA  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 26048   0117AE  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 26049   0117B2                     l23457:
 26050                           
 26051                           ;../fatfs/ff.c: 4060:     if (clst == 0) break;
 26052   0117B2  0106               	movlb	6	; () banked
 26053   0117B4  5181               	movf	f_write@clst& (0+255),w,b
 26054   0117B6  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 26055   0117B8  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 26056   0117BA  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 26057   0117BC  A4D8               	btfss	status,2,c
 26058   0117BE  EFE3  F08B         	goto	u32351
 26059   0117C2  EFE5  F08B         	goto	u32350
 26060   0117C6                     u32351:
 26061   0117C6  EFE7  F08B         	goto	l23461
 26062   0117CA                     u32350:
 26063   0117CA  EFD0  F08E         	goto	l23565
 26064   0117CE                     l23461:
 26065                           
 26066                           ; BSR set to: 6
 26067                           ;../fatfs/ff.c: 4061:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_E
      +                          RR; };
 26068   0117CE  0581               	decf	f_write@clst& (0+255),w,b
 26069   0117D0  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 26070   0117D2  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 26071   0117D4  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 26072   0117D6  A4D8               	btfss	status,2,c
 26073   0117D8  EFF0  F08B         	goto	u32361
 26074   0117DC  EFF2  F08B         	goto	u32360
 26075   0117E0                     u32361:
 26076   0117E0  EFFD  F08B         	goto	l23469
 26077   0117E4                     u32360:
 26078   0117E4                     
 26079                           ; BSR set to: 6
 26080   0117E4  EE20 F00F          	lfsr	2,15
 26081   0117E8  5162               	movf	f_write@fp& (0+255),w,b
 26082   0117EA  26D9               	addwf	fsr2l,f,c
 26083   0117EC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26084   0117EE  22DA               	addwfc	fsr2h,f,c
 26085   0117F0  0E02               	movlw	2
 26086   0117F2  6EDF               	movwf	indf2,c
 26087   0117F4                     l23465:
 26088                           
 26089                           ; BSR set to: 6
 26090   0117F4  0E02               	movlw	2
 26091   0117F6  EFD9  F08E         	goto	l1962
 26092   0117FA                     l23469:
 26093                           
 26094                           ; BSR set to: 6
 26095                           ;../fatfs/ff.c: 4062:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 26096   0117FA  2981               	incf	f_write@clst& (0+255),w,b
 26097   0117FC  E10A               	bnz	u32371
 26098   0117FE  2982               	incf	(f_write@clst+1)& (0+255),w,b
 26099   011800  E108               	bnz	u32371
 26100   011802  2983               	incf	(f_write@clst+2)& (0+255),w,b
 26101   011804  E106               	bnz	u32371
 26102   011806  2984               	incf	(f_write@clst+3)& (0+255),w,b
 26103   011808  A4D8               	btfss	status,2,c
 26104   01180A  EF09  F08C         	goto	u32371
 26105   01180E  EF0B  F08C         	goto	u32370
 26106   011812                     u32371:
 26107   011812  EF16  F08C         	goto	l23477
 26108   011816                     u32370:
 26109   011816                     
 26110                           ; BSR set to: 6
 26111   011816  EE20 F00F          	lfsr	2,15
 26112   01181A  5162               	movf	f_write@fp& (0+255),w,b
 26113   01181C  26D9               	addwf	fsr2l,f,c
 26114   01181E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26115   011820  22DA               	addwfc	fsr2h,f,c
 26116   011822  0E01               	movlw	1
 26117   011824  6EDF               	movwf	indf2,c
 26118   011826                     l23473:
 26119                           
 26120                           ; BSR set to: 6
 26121   011826  0E01               	movlw	1
 26122   011828  EFD9  F08E         	goto	l1962
 26123   01182C                     l23477:
 26124                           
 26125                           ; BSR set to: 6
 26126                           ;../fatfs/ff.c: 4063:     fp->clust = clst;
 26127   01182C  EE20 F014          	lfsr	2,20
 26128   011830  5162               	movf	f_write@fp& (0+255),w,b
 26129   011832  26D9               	addwf	fsr2l,f,c
 26130   011834  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26131   011836  22DA               	addwfc	fsr2h,f,c
 26132   011838  C681  F4DE         	movff	f_write@clst,postinc2
 26133   01183C  C682  F4DE         	movff	f_write@clst+1,postinc2
 26134   011840  C683  F4DE         	movff	f_write@clst+2,postinc2
 26135   011844  C684  F4DE         	movff	f_write@clst+3,postinc2
 26136                           
 26137                           ;../fatfs/ff.c: 4064:     if (fp->obj.sclust == 0) fp->obj.sclust = clst;
 26138   011848  EE20 F006          	lfsr	2,6
 26139   01184C  5162               	movf	f_write@fp& (0+255),w,b
 26140   01184E  26D9               	addwf	fsr2l,f,c
 26141   011850  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26142   011852  22DA               	addwfc	fsr2h,f,c
 26143   011854  50DE               	movf	postinc2,w,c
 26144   011856  10DE               	iorwf	postinc2,w,c
 26145   011858  10DE               	iorwf	postinc2,w,c
 26146   01185A  10DE               	iorwf	postinc2,w,c
 26147   01185C  A4D8               	btfss	status,2,c
 26148   01185E  EF33  F08C         	goto	u32381
 26149   011862  EF35  F08C         	goto	u32380
 26150   011866                     u32381:
 26151   011866  EF43  F08C         	goto	l1970
 26152   01186A                     u32380:
 26153   01186A                     
 26154                           ; BSR set to: 6
 26155   01186A  EE20 F006          	lfsr	2,6
 26156   01186E  5162               	movf	f_write@fp& (0+255),w,b
 26157   011870  26D9               	addwf	fsr2l,f,c
 26158   011872  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26159   011874  22DA               	addwfc	fsr2h,f,c
 26160   011876  C681  F4DE         	movff	f_write@clst,postinc2
 26161   01187A  C682  F4DE         	movff	f_write@clst+1,postinc2
 26162   01187E  C683  F4DE         	movff	f_write@clst+2,postinc2
 26163   011882  C684  F4DE         	movff	f_write@clst+3,postinc2
 26164   011886                     l1970:
 26165                           
 26166                           ; BSR set to: 6
 26167                           ;../fatfs/ff.c: 4069:    if (fp->flag & 0x80) {
 26168   011886  EE20 F00E          	lfsr	2,14
 26169   01188A  5162               	movf	f_write@fp& (0+255),w,b
 26170   01188C  26D9               	addwf	fsr2l,f,c
 26171   01188E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26172   011890  22DA               	addwfc	fsr2h,f,c
 26173   011892  AEDF               	btfss	indf2,7,c
 26174   011894  EF4E  F08C         	goto	u32391
 26175   011898  EF50  F08C         	goto	u32390
 26176   01189C                     u32391:
 26177   01189C  EF8D  F08C         	goto	l23491
 26178   0118A0                     u32390:
 26179   0118A0                     
 26180                           ; BSR set to: 6
 26181                           ;../fatfs/ff.c: 4070:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26182   0118A0  0E22               	movlw	34
 26183   0118A2  2562               	addwf	f_write@fp& (0+255),w,b
 26184   0118A4  6F00               	movwf	disk_write@buff& (0+255),b
 26185   0118A6  0E00               	movlw	0
 26186   0118A8  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26187   0118AA  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 26188   0118AC  EE20 F018          	lfsr	2,24
 26189   0118B0  5162               	movf	f_write@fp& (0+255),w,b
 26190   0118B2  26D9               	addwf	fsr2l,f,c
 26191   0118B4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26192   0118B6  22DA               	addwfc	fsr2h,f,c
 26193   0118B8  C4DE F602          	movff	postinc2,disk_write@sector
 26194   0118BC  C4DE F603          	movff	postinc2,disk_write@sector+1
 26195   0118C0  C4DE F604          	movff	postinc2,disk_write@sector+2
 26196   0118C4  C4DE F605          	movff	postinc2,disk_write@sector+3
 26197   0118C8  0E00               	movlw	0
 26198   0118CA  6F07               	movwf	(disk_write@count+1)& (0+255),b
 26199   0118CC  0E01               	movlw	1
 26200   0118CE  6F06               	movwf	disk_write@count& (0+255),b
 26201   0118D0  EE20 F001          	lfsr	2,1
 26202   0118D4  518B               	movf	f_write@fs& (0+255),w,b
 26203   0118D6  26D9               	addwf	fsr2l,f,c
 26204   0118D8  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26205   0118DA  22DA               	addwfc	fsr2h,f,c
 26206   0118DC  50DF               	movf	indf2,w,c
 26207   0118DE  EC7E  F0F3         	call	_disk_write
 26208   0118E2  0900               	iorlw	0
 26209   0118E4  B4D8               	btfsc	status,2,c
 26210   0118E6  EF77  F08C         	goto	u32401
 26211   0118EA  EF79  F08C         	goto	u32400
 26212   0118EE                     u32401:
 26213   0118EE  EF84  F08C         	goto	l23489
 26214   0118F2                     u32400:
 26215   0118F2  0106               	movlb	6	; () banked
 26216   0118F4  EE20 F00F          	lfsr	2,15
 26217   0118F8  5162               	movf	f_write@fp& (0+255),w,b
 26218   0118FA  26D9               	addwf	fsr2l,f,c
 26219   0118FC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26220   0118FE  22DA               	addwfc	fsr2h,f,c
 26221   011900  0E01               	movlw	1
 26222   011902  6EDF               	movwf	indf2,c
 26223   011904  EF13  F08C         	goto	l23473
 26224   011908                     l23489:
 26225                           
 26226                           ;../fatfs/ff.c: 4071:     fp->flag &= (BYTE)~0x80;
 26227   011908  0106               	movlb	6	; () banked
 26228   01190A  EE20 F00E          	lfsr	2,14
 26229   01190E  5162               	movf	f_write@fp& (0+255),w,b
 26230   011910  26D9               	addwf	fsr2l,f,c
 26231   011912  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26232   011914  22DA               	addwfc	fsr2h,f,c
 26233   011916  0E7F               	movlw	127
 26234   011918  16DF               	andwf	indf2,f,c
 26235   01191A                     l23491:
 26236                           
 26237                           ; BSR set to: 6
 26238                           ;../fatfs/ff.c: 4074:    sect = clst2sect(fs, fp->clust);
 26239   01191A  C68B  F510         	movff	f_write@fs,clst2sect@fs
 26240   01191E  C68C  F511         	movff	f_write@fs+1,clst2sect@fs+1
 26241   011922  EE20 F014          	lfsr	2,20
 26242   011926  5162               	movf	f_write@fp& (0+255),w,b
 26243   011928  26D9               	addwf	fsr2l,f,c
 26244   01192A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26245   01192C  22DA               	addwfc	fsr2h,f,c
 26246   01192E  C4DE F512          	movff	postinc2,clst2sect@clst
 26247   011932  C4DE F513          	movff	postinc2,clst2sect@clst+1
 26248   011936  C4DE F514          	movff	postinc2,clst2sect@clst+2
 26249   01193A  C4DE F515          	movff	postinc2,clst2sect@clst+3
 26250   01193E  EC7A  F0F0         	call	_clst2sect	;wreg free
 26251   011942  C510  F687         	movff	?_clst2sect,f_write@sect
 26252   011946  C511  F688         	movff	?_clst2sect+1,f_write@sect+1
 26253   01194A  C512  F689         	movff	?_clst2sect+2,f_write@sect+2
 26254   01194E  C513  F68A         	movff	?_clst2sect+3,f_write@sect+3
 26255   011952                     
 26256                           ;../fatfs/ff.c: 4075:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 26257   011952  0106               	movlb	6	; () banked
 26258   011954  5187               	movf	f_write@sect& (0+255),w,b
 26259   011956  1188               	iorwf	(f_write@sect+1)& (0+255),w,b
 26260   011958  1189               	iorwf	(f_write@sect+2)& (0+255),w,b
 26261   01195A  118A               	iorwf	(f_write@sect+3)& (0+255),w,b
 26262   01195C  A4D8               	btfss	status,2,c
 26263   01195E  EFB3  F08C         	goto	u32411
 26264   011962  EFB5  F08C         	goto	u32410
 26265   011966                     u32411:
 26266   011966  EFBF  F08C         	goto	l23501
 26267   01196A                     u32410:
 26268   01196A                     
 26269                           ; BSR set to: 6
 26270   01196A  EE20 F00F          	lfsr	2,15
 26271   01196E  5162               	movf	f_write@fp& (0+255),w,b
 26272   011970  26D9               	addwf	fsr2l,f,c
 26273   011972  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26274   011974  22DA               	addwfc	fsr2h,f,c
 26275   011976  0E02               	movlw	2
 26276   011978  6EDF               	movwf	indf2,c
 26277   01197A  EFFA  F08B         	goto	l23465
 26278   01197E                     l23501:
 26279                           
 26280                           ; BSR set to: 6
 26281                           ;../fatfs/ff.c: 4076:    sect += csect;
 26282   01197E  517D               	movf	f_write@csect& (0+255),w,b
 26283   011980  2787               	addwf	f_write@sect& (0+255),f,b
 26284   011982  517E               	movf	(f_write@csect+1)& (0+255),w,b
 26285   011984  2388               	addwfc	(f_write@sect+1)& (0+255),f,b
 26286   011986  0E00               	movlw	0
 26287   011988  2389               	addwfc	(f_write@sect+2)& (0+255),f,b
 26288   01198A  0E00               	movlw	0
 26289   01198C  238A               	addwfc	(f_write@sect+3)& (0+255),f,b
 26290   01198E                     
 26291                           ; BSR set to: 6
 26292                           ;../fatfs/ff.c: 4077:    cc = btw / ((UINT)512);
 26293   01198E  C666  F66A         	movff	f_write@btw,??_f_write
 26294   011992  C667  F66B         	movff	f_write@btw+1,??_f_write+1
 26295   011996  0E09               	movlw	9
 26296   011998  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26297   01199A                     u32425:
 26298   01199A  90D8               	bcf	status,0,c
 26299   01199C  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 26300   01199E  336A               	rrcf	??_f_write& (0+255),f,b
 26301   0119A0  2F6C               	decfsz	(??_f_write+2)& (0+255),f,b
 26302   0119A2  EFCD  F08C         	goto	u32425
 26303   0119A6  C66A  F67F         	movff	??_f_write,f_write@cc
 26304   0119AA  C66B  F680         	movff	??_f_write+1,f_write@cc+1
 26305   0119AE                     
 26306                           ; BSR set to: 6
 26307                           ;../fatfs/ff.c: 4078:    if (cc > 0) {
 26308   0119AE  517F               	movf	f_write@cc& (0+255),w,b
 26309   0119B0  1180               	iorwf	(f_write@cc+1)& (0+255),w,b
 26310   0119B2  B4D8               	btfsc	status,2,c
 26311   0119B4  EFDE  F08C         	goto	u32431
 26312   0119B8  EFE0  F08C         	goto	u32430
 26313   0119BC                     u32431:
 26314   0119BC  EFA4  F08D         	goto	l23527
 26315   0119C0                     u32430:
 26316   0119C0                     
 26317                           ; BSR set to: 6
 26318                           ;../fatfs/ff.c: 4079:     if (csect + cc > fs->csize) {
 26319   0119C0  517F               	movf	f_write@cc& (0+255),w,b
 26320   0119C2  257D               	addwf	f_write@csect& (0+255),w,b
 26321   0119C4  6F6A               	movwf	??_f_write& (0+255),b
 26322   0119C6  5180               	movf	(f_write@cc+1)& (0+255),w,b
 26323   0119C8  217E               	addwfc	(f_write@csect+1)& (0+255),w,b
 26324   0119CA  6F6B               	movwf	(??_f_write+1)& (0+255),b
 26325   0119CC  EE20 F00A          	lfsr	2,10
 26326   0119D0  518B               	movf	f_write@fs& (0+255),w,b
 26327   0119D2  26D9               	addwf	fsr2l,f,c
 26328   0119D4  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26329   0119D6  22DA               	addwfc	fsr2h,f,c
 26330   0119D8  516A               	movf	??_f_write& (0+255),w,b
 26331   0119DA  5CDE               	subwf	postinc2,w,c
 26332   0119DC  516B               	movf	(??_f_write+1)& (0+255),w,b
 26333   0119DE  58DE               	subwfb	postinc2,w,c
 26334   0119E0  B0D8               	btfsc	status,0,c
 26335   0119E2  EFF5  F08C         	goto	u32441
 26336   0119E6  EFF7  F08C         	goto	u32440
 26337   0119EA                     u32441:
 26338   0119EA  EF07  F08D         	goto	l23511
 26339   0119EE                     u32440:
 26340   0119EE                     
 26341                           ; BSR set to: 6
 26342                           ;../fatfs/ff.c: 4080:      cc = fs->csize - csect;
 26343   0119EE  EE20 F00A          	lfsr	2,10
 26344   0119F2  518B               	movf	f_write@fs& (0+255),w,b
 26345   0119F4  26D9               	addwf	fsr2l,f,c
 26346   0119F6  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26347   0119F8  22DA               	addwfc	fsr2h,f,c
 26348   0119FA  C4DE F66A          	movff	postinc2,??_f_write
 26349   0119FE  C4DD F66B          	movff	postdec2,??_f_write+1
 26350   011A02  517D               	movf	f_write@csect& (0+255),w,b
 26351   011A04  5D6A               	subwf	??_f_write& (0+255),w,b
 26352   011A06  6F7F               	movwf	f_write@cc& (0+255),b
 26353   011A08  517E               	movf	(f_write@csect+1)& (0+255),w,b
 26354   011A0A  596B               	subwfb	(??_f_write+1)& (0+255),w,b
 26355   011A0C  6F80               	movwf	(f_write@cc+1)& (0+255),b
 26356   011A0E                     l23511:
 26357                           
 26358                           ; BSR set to: 6
 26359                           ;../fatfs/ff.c: 4082:     if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26360   011A0E  C67B  F600         	movff	f_write@wbuff,disk_write@buff
 26361   011A12  C67C  F601         	movff	f_write@wbuff+1,disk_write@buff+1
 26362   011A16  C687  F602         	movff	f_write@sect,disk_write@sector
 26363   011A1A  C688  F603         	movff	f_write@sect+1,disk_write@sector+1
 26364   011A1E  C689  F604         	movff	f_write@sect+2,disk_write@sector+2
 26365   011A22  C68A  F605         	movff	f_write@sect+3,disk_write@sector+3
 26366   011A26  C67F  F606         	movff	f_write@cc,disk_write@count
 26367   011A2A  C680  F607         	movff	f_write@cc+1,disk_write@count+1
 26368   011A2E  EE20 F001          	lfsr	2,1
 26369   011A32  518B               	movf	f_write@fs& (0+255),w,b
 26370   011A34  26D9               	addwf	fsr2l,f,c
 26371   011A36  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26372   011A38  22DA               	addwfc	fsr2h,f,c
 26373   011A3A  50DF               	movf	indf2,w,c
 26374   011A3C  EC7E  F0F3         	call	_disk_write
 26375   011A40  0900               	iorlw	0
 26376   011A42  B4D8               	btfsc	status,2,c
 26377   011A44  EF26  F08D         	goto	u32451
 26378   011A48  EF28  F08D         	goto	u32450
 26379   011A4C                     u32451:
 26380   011A4C  EF33  F08D         	goto	l23519
 26381   011A50                     u32450:
 26382   011A50  0106               	movlb	6	; () banked
 26383   011A52  EE20 F00F          	lfsr	2,15
 26384   011A56  5162               	movf	f_write@fp& (0+255),w,b
 26385   011A58  26D9               	addwf	fsr2l,f,c
 26386   011A5A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26387   011A5C  22DA               	addwfc	fsr2h,f,c
 26388   011A5E  0E01               	movlw	1
 26389   011A60  6EDF               	movwf	indf2,c
 26390   011A62  EF13  F08C         	goto	l23473
 26391   011A66                     l23519:
 26392                           
 26393                           ;../fatfs/ff.c: 4090:     if (fp->sect - sect < cc) {
 26394   011A66  0106               	movlb	6	; () banked
 26395   011A68  517F               	movf	f_write@cc& (0+255),w,b
 26396   011A6A  6F6A               	movwf	??_f_write& (0+255),b
 26397   011A6C  5180               	movf	(f_write@cc+1)& (0+255),w,b
 26398   011A6E  6F6B               	movwf	(??_f_write+1)& (0+255),b
 26399   011A70  6B6C               	clrf	(??_f_write+2)& (0+255),b
 26400   011A72  6B6D               	clrf	(??_f_write+3)& (0+255),b
 26401   011A74  EE20 F018          	lfsr	2,24
 26402   011A78  5162               	movf	f_write@fp& (0+255),w,b
 26403   011A7A  26D9               	addwf	fsr2l,f,c
 26404   011A7C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26405   011A7E  22DA               	addwfc	fsr2h,f,c
 26406   011A80  C4DE F66E          	movff	postinc2,??_f_write+4
 26407   011A84  C4DE F66F          	movff	postinc2,??_f_write+5
 26408   011A88  C4DE F670          	movff	postinc2,??_f_write+6
 26409   011A8C  C4DE F671          	movff	postinc2,??_f_write+7
 26410   011A90  5187               	movf	f_write@sect& (0+255),w,b
 26411   011A92  5D6E               	subwf	(??_f_write+4)& (0+255),w,b
 26412   011A94  6F72               	movwf	(??_f_write+8)& (0+255),b
 26413   011A96  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26414   011A98  596F               	subwfb	(??_f_write+5)& (0+255),w,b
 26415   011A9A  6F73               	movwf	(??_f_write+9)& (0+255),b
 26416   011A9C  5189               	movf	(f_write@sect+2)& (0+255),w,b
 26417   011A9E  5970               	subwfb	(??_f_write+6)& (0+255),w,b
 26418   011AA0  6F74               	movwf	(??_f_write+10)& (0+255),b
 26419   011AA2  518A               	movf	(f_write@sect+3)& (0+255),w,b
 26420   011AA4  5971               	subwfb	(??_f_write+7)& (0+255),w,b
 26421   011AA6  6F75               	movwf	(??_f_write+11)& (0+255),b
 26422   011AA8  516A               	movf	??_f_write& (0+255),w,b
 26423   011AAA  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 26424   011AAC  516B               	movf	(??_f_write+1)& (0+255),w,b
 26425   011AAE  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 26426   011AB0  516C               	movf	(??_f_write+2)& (0+255),w,b
 26427   011AB2  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 26428   011AB4  516D               	movf	(??_f_write+3)& (0+255),w,b
 26429   011AB6  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 26430   011AB8  B0D8               	btfsc	status,0,c
 26431   011ABA  EF61  F08D         	goto	u32461
 26432   011ABE  EF63  F08D         	goto	u32460
 26433   011AC2                     u32461:
 26434   011AC2  EF93  F08D         	goto	l23525
 26435   011AC6                     u32460:
 26436   011AC6                     
 26437                           ; BSR set to: 6
 26438                           ;../fatfs/ff.c: 4091:      memcpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((
      +                          UINT)512));
 26439   011AC6  0E22               	movlw	34
 26440   011AC8  2562               	addwf	f_write@fp& (0+255),w,b
 26441   011ACA  6E04               	movwf	memcpy@d1^(0+1280),c
 26442   011ACC  0E00               	movlw	0
 26443   011ACE  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26444   011AD0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 26445   011AD2  EE20 F018          	lfsr	2,24
 26446   011AD6  5162               	movf	f_write@fp& (0+255),w,b
 26447   011AD8  26D9               	addwf	fsr2l,f,c
 26448   011ADA  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26449   011ADC  22DA               	addwfc	fsr2h,f,c
 26450   011ADE  C4DE F66A          	movff	postinc2,??_f_write
 26451   011AE2  C4DD F66B          	movff	postdec2,??_f_write+1
 26452   011AE6  5187               	movf	f_write@sect& (0+255),w,b
 26453   011AE8  5F6A               	subwf	??_f_write& (0+255),f,b
 26454   011AEA  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26455   011AEC  5B6B               	subwfb	(??_f_write+1)& (0+255),f,b
 26456   011AEE  0E09               	movlw	9
 26457   011AF0                     u32475:
 26458   011AF0  90D8               	bcf	status,0,c
 26459   011AF2  376A               	rlcf	??_f_write& (0+255),f,b
 26460   011AF4  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 26461   011AF6  2EE8               	decfsz	wreg,f,c
 26462   011AF8  EF78  F08D         	goto	u32475
 26463   011AFC  516A               	movf	??_f_write& (0+255),w,b
 26464   011AFE  257B               	addwf	f_write@wbuff& (0+255),w,b
 26465   011B00  6E06               	movwf	memcpy@s1^(0+1280),c
 26466   011B02  516B               	movf	(??_f_write+1)& (0+255),w,b
 26467   011B04  217C               	addwfc	(f_write@wbuff+1)& (0+255),w,b
 26468   011B06  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 26469   011B08  0E02               	movlw	2
 26470   011B0A  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 26471   011B0C  0E00               	movlw	0
 26472   011B0E  6E08               	movwf	memcpy@n^(0+1280),c
 26473   011B10  EC00  F0FD         	call	_memcpy	;wreg free
 26474   011B14                     
 26475                           ;../fatfs/ff.c: 4092:      fp->flag &= (BYTE)~0x80;
 26476   011B14  0106               	movlb	6	; () banked
 26477   011B16  EE20 F00E          	lfsr	2,14
 26478   011B1A  5162               	movf	f_write@fp& (0+255),w,b
 26479   011B1C  26D9               	addwf	fsr2l,f,c
 26480   011B1E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26481   011B20  22DA               	addwfc	fsr2h,f,c
 26482   011B22  0E7F               	movlw	127
 26483   011B24  16DF               	andwf	indf2,f,c
 26484   011B26                     l23525:
 26485                           
 26486                           ; BSR set to: 6
 26487                           ;../fatfs/ff.c: 4096:     wcnt = ((UINT)512) * cc;
 26488   011B26  C67F  F66A         	movff	f_write@cc,??_f_write
 26489   011B2A  C680  F66B         	movff	f_write@cc+1,??_f_write+1
 26490   011B2E  0E09               	movlw	9
 26491   011B30                     u32485:
 26492   011B30  90D8               	bcf	status,0,c
 26493   011B32  376A               	rlcf	??_f_write& (0+255),f,b
 26494   011B34  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 26495   011B36  2EE8               	decfsz	wreg,f,c
 26496   011B38  EF98  F08D         	goto	u32485
 26497   011B3C  C66A  F685         	movff	??_f_write,f_write@wcnt
 26498   011B40  C66B  F686         	movff	??_f_write+1,f_write@wcnt+1
 26499                           
 26500                           ;../fatfs/ff.c: 4097:     continue;
 26501   011B44  EF6A  F08E         	goto	l23549
 26502   011B48                     l23527:
 26503                           
 26504                           ; BSR set to: 6
 26505                           ;../fatfs/ff.c: 4105:    if (fp->sect != sect &&
 26506   011B48  EE20 F018          	lfsr	2,24
 26507   011B4C  5162               	movf	f_write@fp& (0+255),w,b
 26508   011B4E  26D9               	addwf	fsr2l,f,c
 26509   011B50  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26510   011B52  22DA               	addwfc	fsr2h,f,c
 26511   011B54  5187               	movf	f_write@sect& (0+255),w,b
 26512   011B56  18DE               	xorwf	postinc2,w,c
 26513   011B58  E10F               	bnz	u32490
 26514   011B5A  5188               	movf	(f_write@sect+1)& (0+255),w,b
 26515   011B5C  18DE               	xorwf	postinc2,w,c
 26516   011B5E  E10C               	bnz	u32490
 26517   011B60  5189               	movf	(f_write@sect+2)& (0+255),w,b
 26518   011B62  18DE               	xorwf	postinc2,w,c
 26519   011B64  E109               	bnz	u32490
 26520   011B66  518A               	movf	(f_write@sect+3)& (0+255),w,b
 26521   011B68  18DE               	xorwf	postinc2,w,c
 26522   011B6A  B4D8               	btfsc	status,2,c
 26523   011B6C  EFBA  F08D         	goto	u32491
 26524   011B70  EFBC  F08D         	goto	u32490
 26525   011B74                     u32491:
 26526   011B74  EF05  F08E         	goto	l23539
 26527   011B78                     u32490:
 26528   011B78                     
 26529                           ; BSR set to: 6
 26530   011B78  EE20 F00A          	lfsr	2,10
 26531   011B7C  5162               	movf	f_write@fp& (0+255),w,b
 26532   011B7E  26D9               	addwf	fsr2l,f,c
 26533   011B80  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26534   011B82  22DA               	addwfc	fsr2h,f,c
 26535   011B84  EE10 F010          	lfsr	1,16
 26536   011B88  5162               	movf	f_write@fp& (0+255),w,b
 26537   011B8A  26E1               	addwf	fsr1l,f,c
 26538   011B8C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26539   011B8E  22E2               	addwfc	fsr1h,f,c
 26540   011B90  50DE               	movf	postinc2,w,c
 26541   011B92  5CE6               	subwf	postinc1,w,c
 26542   011B94  50DE               	movf	postinc2,w,c
 26543   011B96  58E6               	subwfb	postinc1,w,c
 26544   011B98  50DE               	movf	postinc2,w,c
 26545   011B9A  58E6               	subwfb	postinc1,w,c
 26546   011B9C  50DE               	movf	postinc2,w,c
 26547   011B9E  58E6               	subwfb	postinc1,w,c
 26548   011BA0  B0D8               	btfsc	status,0,c
 26549   011BA2  EFD5  F08D         	goto	u32501
 26550   011BA6  EFD7  F08D         	goto	u32500
 26551   011BAA                     u32501:
 26552   011BAA  EF05  F08E         	goto	l23539
 26553   011BAE                     u32500:
 26554   011BAE                     
 26555                           ; BSR set to: 6
 26556   011BAE  0E22               	movlw	34
 26557   011BB0  2562               	addwf	f_write@fp& (0+255),w,b
 26558   011BB2  6F00               	movwf	disk_read@buff& (0+255),b
 26559   011BB4  0E00               	movlw	0
 26560   011BB6  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26561   011BB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 26562   011BBA  C687  F602         	movff	f_write@sect,disk_read@sector
 26563   011BBE  C688  F603         	movff	f_write@sect+1,disk_read@sector+1
 26564   011BC2  C689  F604         	movff	f_write@sect+2,disk_read@sector+2
 26565   011BC6  C68A  F605         	movff	f_write@sect+3,disk_read@sector+3
 26566   011BCA  0E00               	movlw	0
 26567   011BCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 26568   011BCE  0E01               	movlw	1
 26569   011BD0  6F06               	movwf	disk_read@count& (0+255),b
 26570   011BD2  EE20 F001          	lfsr	2,1
 26571   011BD6  518B               	movf	f_write@fs& (0+255),w,b
 26572   011BD8  26D9               	addwf	fsr2l,f,c
 26573   011BDA  518C               	movf	(f_write@fs+1)& (0+255),w,b
 26574   011BDC  22DA               	addwfc	fsr2h,f,c
 26575   011BDE  50DF               	movf	indf2,w,c
 26576   011BE0  ECD5  F0F3         	call	_disk_read
 26577   011BE4  0900               	iorlw	0
 26578   011BE6  B4D8               	btfsc	status,2,c
 26579   011BE8  EFF8  F08D         	goto	u32511
 26580   011BEC  EFFA  F08D         	goto	u32510
 26581   011BF0                     u32511:
 26582   011BF0  EF05  F08E         	goto	l23539
 26583   011BF4                     u32510:
 26584   011BF4                     
 26585                           ;../fatfs/ff.c: 4107:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {;../fatfs/ff
      +                          .c: 4108:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 26586   011BF4  0106               	movlb	6	; () banked
 26587   011BF6  EE20 F00F          	lfsr	2,15
 26588   011BFA  5162               	movf	f_write@fp& (0+255),w,b
 26589   011BFC  26D9               	addwf	fsr2l,f,c
 26590   011BFE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26591   011C00  22DA               	addwfc	fsr2h,f,c
 26592   011C02  0E01               	movlw	1
 26593   011C04  6EDF               	movwf	indf2,c
 26594   011C06  EF13  F08C         	goto	l23473
 26595   011C0A                     l23539:
 26596                           
 26597                           ;../fatfs/ff.c: 4111:    fp->sect = sect;
 26598   011C0A  0106               	movlb	6	; () banked
 26599   011C0C  EE20 F018          	lfsr	2,24
 26600   011C10  5162               	movf	f_write@fp& (0+255),w,b
 26601   011C12  26D9               	addwf	fsr2l,f,c
 26602   011C14  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26603   011C16  22DA               	addwfc	fsr2h,f,c
 26604   011C18  C687  F4DE         	movff	f_write@sect,postinc2
 26605   011C1C  C688  F4DE         	movff	f_write@sect+1,postinc2
 26606   011C20  C689  F4DE         	movff	f_write@sect+2,postinc2
 26607   011C24  C68A  F4DE         	movff	f_write@sect+3,postinc2
 26608   011C28                     l1969:
 26609                           
 26610                           ; BSR set to: 6
 26611                           ;../fatfs/ff.c: 4113:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 26612   011C28  EE20 F010          	lfsr	2,16
 26613   011C2C  5162               	movf	f_write@fp& (0+255),w,b
 26614   011C2E  26D9               	addwf	fsr2l,f,c
 26615   011C30  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26616   011C32  22DA               	addwfc	fsr2h,f,c
 26617   011C34  C4DE F66A          	movff	postinc2,??_f_write
 26618   011C38  C4DD F66B          	movff	postdec2,??_f_write+1
 26619   011C3C  0EFF               	movlw	255
 26620   011C3E  156A               	andwf	??_f_write& (0+255),w,b
 26621   011C40  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26622   011C42  0E01               	movlw	1
 26623   011C44  156B               	andwf	(??_f_write+1)& (0+255),w,b
 26624   011C46  6F6D               	movwf	(??_f_write+3)& (0+255),b
 26625   011C48  516C               	movf	(??_f_write+2)& (0+255),w,b
 26626   011C4A  0800               	sublw	0
 26627   011C4C  6F85               	movwf	f_write@wcnt& (0+255),b
 26628   011C4E  516D               	movf	(??_f_write+3)& (0+255),w,b
 26629   011C50  A0D8               	btfss	status,0,c
 26630   011C52  2AE8               	incf	wreg,f,c
 26631   011C54  0802               	sublw	2
 26632   011C56  6F86               	movwf	(f_write@wcnt+1)& (0+255),b
 26633   011C58                     
 26634                           ; BSR set to: 6
 26635                           ;../fatfs/ff.c: 4114:   if (wcnt > btw) wcnt = btw;
 26636   011C58  5185               	movf	f_write@wcnt& (0+255),w,b
 26637   011C5A  5D66               	subwf	f_write@btw& (0+255),w,b
 26638   011C5C  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26639   011C5E  5967               	subwfb	(f_write@btw+1)& (0+255),w,b
 26640   011C60  B0D8               	btfsc	status,0,c
 26641   011C62  EF35  F08E         	goto	u32521
 26642   011C66  EF37  F08E         	goto	u32520
 26643   011C6A                     u32521:
 26644   011C6A  EF3B  F08E         	goto	l23545
 26645   011C6E                     u32520:
 26646   011C6E                     
 26647                           ; BSR set to: 6
 26648   011C6E  C666  F685         	movff	f_write@btw,f_write@wcnt
 26649   011C72  C667  F686         	movff	f_write@btw+1,f_write@wcnt+1
 26650   011C76                     l23545:
 26651                           
 26652                           ; BSR set to: 6
 26653                           ;../fatfs/ff.c: 4120:   memcpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
 26654   011C76  EE20 F010          	lfsr	2,16
 26655   011C7A  5162               	movf	f_write@fp& (0+255),w,b
 26656   011C7C  26D9               	addwf	fsr2l,f,c
 26657   011C7E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26658   011C80  22DA               	addwfc	fsr2h,f,c
 26659   011C82  C4DE F66A          	movff	postinc2,??_f_write
 26660   011C86  C4DD F66B          	movff	postdec2,??_f_write+1
 26661   011C8A  0EFF               	movlw	255
 26662   011C8C  156A               	andwf	??_f_write& (0+255),w,b
 26663   011C8E  6F6C               	movwf	(??_f_write+2)& (0+255),b
 26664   011C90  0E01               	movlw	1
 26665   011C92  156B               	andwf	(??_f_write+1)& (0+255),w,b
 26666   011C94  6F6D               	movwf	(??_f_write+3)& (0+255),b
 26667   011C96  516C               	movf	(??_f_write+2)& (0+255),w,b
 26668   011C98  2562               	addwf	f_write@fp& (0+255),w,b
 26669   011C9A  6F6E               	movwf	(??_f_write+4)& (0+255),b
 26670   011C9C  516D               	movf	(??_f_write+3)& (0+255),w,b
 26671   011C9E  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 26672   011CA0  6F6F               	movwf	(??_f_write+5)& (0+255),b
 26673   011CA2  0E22               	movlw	34
 26674   011CA4  256E               	addwf	(??_f_write+4)& (0+255),w,b
 26675   011CA6  6E04               	movwf	memcpy@d1^(0+1280),c
 26676   011CA8  0E00               	movlw	0
 26677   011CAA  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 26678   011CAC  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 26679   011CAE  C67B  F506         	movff	f_write@wbuff,memcpy@s1
 26680   011CB2  C67C  F507         	movff	f_write@wbuff+1,memcpy@s1+1
 26681   011CB6  C685  F508         	movff	f_write@wcnt,memcpy@n
 26682   011CBA  C686  F509         	movff	f_write@wcnt+1,memcpy@n+1
 26683   011CBE  EC00  F0FD         	call	_memcpy	;wreg free
 26684   011CC2                     
 26685                           ;../fatfs/ff.c: 4121:   fp->flag |= 0x80;
 26686   011CC2  0106               	movlb	6	; () banked
 26687   011CC4  EE20 F00E          	lfsr	2,14
 26688   011CC8  5162               	movf	f_write@fp& (0+255),w,b
 26689   011CCA  26D9               	addwf	fsr2l,f,c
 26690   011CCC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26691   011CCE  22DA               	addwfc	fsr2h,f,c
 26692   011CD0  0E00               	movlw	0
 26693   011CD2  8EDB               	bsf	plusw2,7,c
 26694   011CD4                     l23549:
 26695                           
 26696                           ; BSR set to: 6
 26697   011CD4  5185               	movf	f_write@wcnt& (0+255),w,b
 26698   011CD6  5F66               	subwf	f_write@btw& (0+255),f,b
 26699   011CD8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26700   011CDA  5B67               	subwfb	(f_write@btw+1)& (0+255),f,b
 26701   011CDC                     
 26702                           ; BSR set to: 6
 26703   011CDC  C668  F4D9         	movff	f_write@bw,fsr2l
 26704   011CE0  C669  F4DA         	movff	f_write@bw+1,fsr2h
 26705   011CE4  5185               	movf	f_write@wcnt& (0+255),w,b
 26706   011CE6  26DE               	addwf	postinc2,f,c
 26707   011CE8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26708   011CEA  22DD               	addwfc	postdec2,f,c
 26709   011CEC                     
 26710                           ; BSR set to: 6
 26711   011CEC  5185               	movf	f_write@wcnt& (0+255),w,b
 26712   011CEE  277B               	addwf	f_write@wbuff& (0+255),f,b
 26713   011CF0  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26714   011CF2  237C               	addwfc	(f_write@wbuff+1)& (0+255),f,b
 26715   011CF4                     
 26716                           ; BSR set to: 6
 26717   011CF4  EE20 F010          	lfsr	2,16
 26718   011CF8  5162               	movf	f_write@fp& (0+255),w,b
 26719   011CFA  26D9               	addwf	fsr2l,f,c
 26720   011CFC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26721   011CFE  22DA               	addwfc	fsr2h,f,c
 26722   011D00  5185               	movf	f_write@wcnt& (0+255),w,b
 26723   011D02  26DE               	addwf	postinc2,f,c
 26724   011D04  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 26725   011D06  22DE               	addwfc	postinc2,f,c
 26726   011D08  0E00               	movlw	0
 26727   011D0A  22DE               	addwfc	postinc2,f,c
 26728   011D0C  22DE               	addwfc	postinc2,f,c
 26729   011D0E                     
 26730                           ; BSR set to: 6
 26731   011D0E  EE20 F010          	lfsr	2,16
 26732   011D12  5162               	movf	f_write@fp& (0+255),w,b
 26733   011D14  26D9               	addwf	fsr2l,f,c
 26734   011D16  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26735   011D18  22DA               	addwfc	fsr2h,f,c
 26736   011D1A  EE10 F00A          	lfsr	1,10
 26737   011D1E  5162               	movf	f_write@fp& (0+255),w,b
 26738   011D20  26E1               	addwf	fsr1l,f,c
 26739   011D22  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26740   011D24  22E2               	addwfc	fsr1h,f,c
 26741   011D26  50DE               	movf	postinc2,w,c
 26742   011D28  5CE6               	subwf	postinc1,w,c
 26743   011D2A  50DE               	movf	postinc2,w,c
 26744   011D2C  58E6               	subwfb	postinc1,w,c
 26745   011D2E  50DE               	movf	postinc2,w,c
 26746   011D30  58E6               	subwfb	postinc1,w,c
 26747   011D32  50DE               	movf	postinc2,w,c
 26748   011D34  58E6               	subwfb	postinc1,w,c
 26749   011D36  A0D8               	btfss	status,0,c
 26750   011D38  EFA0  F08E         	goto	u32531
 26751   011D3C  EFA2  F08E         	goto	u32530
 26752   011D40                     u32531:
 26753   011D40  EFB2  F08E         	goto	l23561
 26754   011D44                     u32530:
 26755   011D44                     
 26756                           ; BSR set to: 6
 26757   011D44  EE20 F00A          	lfsr	2,10
 26758   011D48  5162               	movf	f_write@fp& (0+255),w,b
 26759   011D4A  26D9               	addwf	fsr2l,f,c
 26760   011D4C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26761   011D4E  22DA               	addwfc	fsr2h,f,c
 26762   011D50  C4DE F676          	movff	postinc2,_f_write$3223
 26763   011D54  C4DE F677          	movff	postinc2,_f_write$3223+1
 26764   011D58  C4DE F678          	movff	postinc2,_f_write$3223+2
 26765   011D5C  C4DE F679          	movff	postinc2,_f_write$3223+3
 26766   011D60  EFC0  F08E         	goto	l1991
 26767   011D64                     l23561:
 26768                           
 26769                           ; BSR set to: 6
 26770   011D64  EE20 F010          	lfsr	2,16
 26771   011D68  5162               	movf	f_write@fp& (0+255),w,b
 26772   011D6A  26D9               	addwf	fsr2l,f,c
 26773   011D6C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26774   011D6E  22DA               	addwfc	fsr2h,f,c
 26775   011D70  C4DE F676          	movff	postinc2,_f_write$3223
 26776   011D74  C4DE F677          	movff	postinc2,_f_write$3223+1
 26777   011D78  C4DE F678          	movff	postinc2,_f_write$3223+2
 26778   011D7C  C4DE F679          	movff	postinc2,_f_write$3223+3
 26779   011D80                     l1991:
 26780                           
 26781                           ; BSR set to: 6
 26782   011D80  EE20 F00A          	lfsr	2,10
 26783   011D84  5162               	movf	f_write@fp& (0+255),w,b
 26784   011D86  26D9               	addwf	fsr2l,f,c
 26785   011D88  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26786   011D8A  22DA               	addwfc	fsr2h,f,c
 26787   011D8C  C676  F4DE         	movff	_f_write$3223,postinc2
 26788   011D90  C677  F4DE         	movff	_f_write$3223+1,postinc2
 26789   011D94  C678  F4DE         	movff	_f_write$3223+2,postinc2
 26790   011D98  C679  F4DE         	movff	_f_write$3223+3,postinc2
 26791   011D9C  EF1B  F08B         	goto	l23437
 26792   011DA0                     l23565:
 26793                           
 26794                           ; BSR set to: 6
 26795                           ;../fatfs/ff.c: 4125:  fp->flag |= 0x40;
 26796   011DA0  EE20 F00E          	lfsr	2,14
 26797   011DA4  5162               	movf	f_write@fp& (0+255),w,b
 26798   011DA6  26D9               	addwf	fsr2l,f,c
 26799   011DA8  5163               	movf	(f_write@fp+1)& (0+255),w,b
 26800   011DAA  22DA               	addwfc	fsr2h,f,c
 26801   011DAC  0E00               	movlw	0
 26802   011DAE  8CDB               	bsf	plusw2,6,c
 26803   011DB0                     
 26804                           ; BSR set to: 6
 26805                           ;../fatfs/ff.c: 4127:  return FR_OK;
 26806   011DB0  0E00               	movlw	0
 26807   011DB2                     l1962:
 26808                           
 26809                           ; BSR set to: 6
 26810   011DB2  0012               	return		;funcret
 26811   011DB4                     __end_of_f_write:
 26812                           	callstack 0
 26813                           
 26814 ;; *************** function _unimon_console *****************
 26815 ;; Defined at:
 26816 ;;		line 142 in file "../src/io_dos.c"
 26817 ;; Parameters:    Size  Location     Type
 26818 ;;		None
 26819 ;; Auto vars:     Size  Location     Type
 26820 ;;  cnt             2   14[BANK7 ] unsigned short 
 26821 ;;  buf             2   12[BANK7 ] PTR unsigned char 
 26822 ;;		 -> tmp_buf(512), 
 26823 ;; Return value:  Size  Location     Type
 26824 ;;                  1    wreg      void 
 26825 ;; Registers used:
 26826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26827 ;; Tracked objects:
 26828 ;;		On entry : 0/0
 26829 ;;		On exit  : 0/0
 26830 ;;		Unchanged: 0/0
 26831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26835 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26836 ;;Total ram usage:        6 bytes
 26837 ;; Hardware stack levels used: 1
 26838 ;; Hardware stack levels required when called: 21
 26839 ;; This function calls:
 26840 ;;		_get_str
 26841 ;;		_in_file
 26842 ;;		_putch
 26843 ;;		_read_sram
 26844 ;;		_str_inf
 26845 ;;		_u_getch
 26846 ;;		_write_sram
 26847 ;; This function is called by:
 26848 ;;		_bus_master_operation
 26849 ;; This function uses a non-reentrant model
 26850 ;;
 26851                           
 26852                           	psect	text66
 26853   01AC5A                     __ptext66:
 26854                           	callstack 0
 26855   01AC5A                     _unimon_console:
 26856                           	callstack 101
 26857   01AC5A                     
 26858                           ;../src/io_dos.c: 144:  uint8_t *buf;;../src/io_dos.c: 145:  uint16_t cnt;;../src/io_dos
      +                          .c: 147:  buf = &tmp_buf[0][0];
 26859   01AC5A  0EF8               	movlw	low _tmp_buf
 26860   01AC5C  0107               	movlb	7	; () banked
 26861   01AC5E  6F0C               	movwf	unimon_console@buf& (0+255),b
 26862   01AC60  0E13               	movlw	high _tmp_buf
 26863   01AC62  6F0D               	movwf	(unimon_console@buf+1)& (0+255),b
 26864                           
 26865                           ;../src/io_dos.c: 148:  switch (req_tbl.UREQ_COM) {
 26866   01AC64  EFE7  F0D6         	goto	l23819
 26867   01AC68                     l23785:
 26868                           
 26869                           ; BSR set to: 7
 26870                           ;../src/io_dos.c: 151:    req_tbl.UNI_CHR = (uint8_t)(*get_char[cin_no])();
 26871   01AC68  51CA               	movf	_cin_no& (0+255),w,b
 26872   01AC6A  0D03               	mullw	3
 26873   01AC6C  0ED9               	movlw	low _get_char
 26874   01AC6E  24F3               	addwf	243,w,c
 26875   01AC70  6ED9               	movwf	fsr2l,c
 26876   01AC72  0E08               	movlw	high _get_char
 26877   01AC74  20F4               	addwfc	prodh,w,c
 26878   01AC76  6EDA               	movwf	fsr2h,c
 26879   01AC78  D802               	call	u32878
 26880   01AC7A  EF49  F0D6         	goto	u32879
 26881   01AC7E                     u32878:
 26882   01AC7E  0005               	push	
 26883   01AC80  6EFA               	movwf	pclath,c
 26884   01AC82  50DE               	movf	postinc2,w,c
 26885   01AC84  6EFD               	movwf	tosl,c
 26886   01AC86  50DE               	movf	postinc2,w,c
 26887   01AC88  6EFE               	movwf	tosh,c
 26888   01AC8A  50DE               	movf	postinc2,w,c
 26889   01AC8C  6EFF               	movwf	tosu,c
 26890   01AC8E  50FA               	movf	pclath,w,c
 26891   01AC90  0012               	return		;indir
 26892   01AC92                     u32879:
 26893   01AC92  0107               	movlb	7	; () banked
 26894   01AC94  5100               	movf	?_in_file& (0+255),w,b
 26895   01AC96  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 26896                           
 26897                           ;../src/io_dos.c: 152:    break;
 26898   01AC98  EF02  F0D7         	goto	l837
 26899   01AC9C                     l23787:
 26900                           
 26901                           ; BSR set to: 7
 26902                           ;../src/io_dos.c: 155:    putch((char)req_tbl.UNI_CHR);
 26903   01AC9C  51CF               	movf	(_req_tbl+1)& (0+255),w,b
 26904   01AC9E  EC03  F001         	call	_putch
 26905                           
 26906                           ;../src/io_dos.c: 156:    break;
 26907   01ACA2  EF02  F0D7         	goto	l837
 26908   01ACA6                     l23789:
 26909                           
 26910                           ; BSR set to: 7
 26911                           ;../src/io_dos.c: 159:    if ( !cin_no ) req_tbl.UNI_CHR = (rx_cnt !=0) ? 255 : 0;
 26912   01ACA6  51CA               	movf	_cin_no& (0+255),w,b
 26913   01ACA8  A4D8               	btfss	status,2,c
 26914   01ACAA  EF59  F0D6         	goto	u32881
 26915   01ACAE  EF5B  F0D6         	goto	u32880
 26916   01ACB2                     u32881:
 26917   01ACB2  EF71  F0D6         	goto	l840
 26918   01ACB6                     u32880:
 26919   01ACB6                     
 26920                           ; BSR set to: 7
 26921   01ACB6  51C1               	movf	_rx_cnt& (0+255),w,b
 26922   01ACB8  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 26923   01ACBA  A4D8               	btfss	status,2,c
 26924   01ACBC  EF62  F0D6         	goto	u32891
 26925   01ACC0  EF64  F0D6         	goto	u32890
 26926   01ACC4                     u32891:
 26927   01ACC4  EF6A  F0D6         	goto	l23795
 26928   01ACC8                     u32890:
 26929   01ACC8                     
 26930                           ; BSR set to: 7
 26931   01ACC8  0E00               	movlw	0
 26932   01ACCA  6F0B               	movwf	(_unimon_console$1038+1)& (0+255),b
 26933   01ACCC  0E00               	movlw	0
 26934   01ACCE  6F0A               	movwf	_unimon_console$1038& (0+255),b
 26935   01ACD0  EF6D  F0D6         	goto	l23797
 26936   01ACD4                     l23795:
 26937                           
 26938                           ; BSR set to: 7
 26939   01ACD4  0E00               	movlw	0
 26940   01ACD6  6F0B               	movwf	(_unimon_console$1038+1)& (0+255),b
 26941   01ACD8  690A               	setf	_unimon_console$1038& (0+255),b
 26942   01ACDA                     l23797:
 26943                           
 26944                           ; BSR set to: 7
 26945   01ACDA  C70A  F7CF         	movff	_unimon_console$1038,_req_tbl+1
 26946   01ACDE  EF02  F0D7         	goto	l837
 26947   01ACE2                     l840:
 26948                           
 26949                           ; BSR set to: 7
 26950   01ACE2  69CF               	setf	(_req_tbl+1)& (0+255),b
 26951   01ACE4  EF02  F0D7         	goto	l837
 26952   01ACE8                     l846:
 26953                           
 26954                           ; BSR set to: 7
 26955                           ;../src/io_dos.c: 163:    cnt = (uint16_t)req_tbl.UNI_CHR;
 26956   01ACE8  C7CF  F70E         	movff	_req_tbl+1,unimon_console@cnt
 26957   01ACEC  6B0F               	clrf	(unimon_console@cnt+1)& (0+255),b
 26958   01ACEE                     
 26959                           ; BSR set to: 7
 26960                           ;../src/io_dos.c: 165:    read_sram(req_tbl.data_adr, buf, cnt);
 26961   01ACEE  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 26962   01ACF2  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 26963   01ACF6  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 26964   01ACFA  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 26965   01ACFE  C70C  F508         	movff	unimon_console@buf,read_sram@buf
 26966   01AD02  C70D  F509         	movff	unimon_console@buf+1,read_sram@buf+1
 26967   01AD06  C70E  F50A         	movff	unimon_console@cnt,read_sram@len
 26968   01AD0A  C70F  F50B         	movff	unimon_console@cnt+1,read_sram@len+1
 26969   01AD0E  EC0C  F0F2         	call	_read_sram	;wreg free
 26970                           
 26971                           ;../src/io_dos.c: 166:    while( cnt ) {
 26972   01AD12  EF98  F0D6         	goto	l23807
 26973   01AD16                     l23801:
 26974                           
 26975                           ; BSR set to: 7
 26976                           ;../src/io_dos.c: 167:     putch( *buf++);
 26977   01AD16  C70C  F4D9         	movff	unimon_console@buf,fsr2l
 26978   01AD1A  C70D  F4DA         	movff	unimon_console@buf+1,fsr2h
 26979   01AD1E  50DF               	movf	indf2,w,c
 26980   01AD20  EC03  F001         	call	_putch
 26981   01AD24  0107               	movlb	7	; () banked
 26982   01AD26  4B0C               	infsnz	unimon_console@buf& (0+255),f,b
 26983   01AD28  2B0D               	incf	(unimon_console@buf+1)& (0+255),f,b
 26984   01AD2A                     
 26985                           ; BSR set to: 7
 26986                           ;../src/io_dos.c: 168:     cnt--;
 26987   01AD2A  070E               	decf	unimon_console@cnt& (0+255),f,b
 26988   01AD2C  A0D8               	btfss	status,0,c
 26989   01AD2E  070F               	decf	(unimon_console@cnt+1)& (0+255),f,b
 26990   01AD30                     l23807:
 26991                           
 26992                           ;../src/io_dos.c: 166:    while( cnt ) {
 26993   01AD30  0107               	movlb	7	; () banked
 26994   01AD32  510E               	movf	unimon_console@cnt& (0+255),w,b
 26995   01AD34  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 26996   01AD36  A4D8               	btfss	status,2,c
 26997   01AD38  EFA0  F0D6         	goto	u32901
 26998   01AD3C  EFA2  F0D6         	goto	u32900
 26999   01AD40                     u32901:
 27000   01AD40  EF8B  F0D6         	goto	l23801
 27001   01AD44                     u32900:
 27002   01AD44  EF02  F0D7         	goto	l837
 27003   01AD48                     l23809:
 27004                           
 27005                           ; BSR set to: 7
 27006                           ;../src/io_dos.c: 172:    cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.UNI
      +                          _CHR);
 27007   01AD48  C70C  F700         	movff	unimon_console@buf,str_inf@buf
 27008   01AD4C  C70D  F701         	movff	unimon_console@buf+1,str_inf@buf+1
 27009   01AD50  C7CF  F702         	movff	_req_tbl+1,str_inf@cnt
 27010   01AD54  51CA               	movf	_cin_no& (0+255),w,b
 27011   01AD56  0D03               	mullw	3
 27012   01AD58  0ED3               	movlw	low _strin_func
 27013   01AD5A  24F3               	addwf	243,w,c
 27014   01AD5C  6ED9               	movwf	fsr2l,c
 27015   01AD5E  0E08               	movlw	high _strin_func
 27016   01AD60  20F4               	addwfc	prodh,w,c
 27017   01AD62  6EDA               	movwf	fsr2h,c
 27018   01AD64  D802               	call	u32918
 27019   01AD66  EFBF  F0D6         	goto	u32919
 27020   01AD6A                     u32918:
 27021   01AD6A  0005               	push	
 27022   01AD6C  6EFA               	movwf	pclath,c
 27023   01AD6E  50DE               	movf	postinc2,w,c
 27024   01AD70  6EFD               	movwf	tosl,c
 27025   01AD72  50DE               	movf	postinc2,w,c
 27026   01AD74  6EFE               	movwf	tosh,c
 27027   01AD76  50DE               	movf	postinc2,w,c
 27028   01AD78  6EFF               	movwf	tosu,c
 27029   01AD7A  50FA               	movf	pclath,w,c
 27030   01AD7C  0012               	return		;indir
 27031   01AD7E                     u32919:
 27032   01AD7E  C700  F70E         	movff	?_str_inf,unimon_console@cnt
 27033   01AD82  C701  F70F         	movff	?_str_inf+1,unimon_console@cnt+1
 27034   01AD86                     
 27035                           ;../src/io_dos.c: 173:    req_tbl.UNI_CHR = (uint8_t)cnt;
 27036   01AD86  C70E  F7CF         	movff	unimon_console@cnt,_req_tbl+1
 27037   01AD8A                     
 27038                           ;../src/io_dos.c: 174:    if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt);
 27039   01AD8A  0107               	movlb	7	; () banked
 27040   01AD8C  510E               	movf	unimon_console@cnt& (0+255),w,b
 27041   01AD8E  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 27042   01AD90  B4D8               	btfsc	status,2,c
 27043   01AD92  EFCD  F0D6         	goto	u32921
 27044   01AD96  EFCF  F0D6         	goto	u32920
 27045   01AD9A                     u32921:
 27046   01AD9A  EF02  F0D7         	goto	l837
 27047   01AD9E                     u32920:
 27048   01AD9E                     
 27049                           ; BSR set to: 7
 27050   01AD9E  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 27051   01ADA2  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 27052   01ADA6  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 27053   01ADAA  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 27054   01ADAE  C70C  F508         	movff	unimon_console@buf,write_sram@buf
 27055   01ADB2  C70D  F509         	movff	unimon_console@buf+1,write_sram@buf+1
 27056   01ADB6  C70E  F50A         	movff	unimon_console@cnt,write_sram@len
 27057   01ADBA  C70F  F50B         	movff	unimon_console@cnt+1,write_sram@len+1
 27058   01ADBE  EC9F  F0E8         	call	_write_sram	;wreg free
 27059   01ADC2  EF02  F0D7         	goto	l837
 27060   01ADC6                     l852:
 27061                           
 27062                           ; BSR set to: 7
 27063                           ;../src/io_dos.c: 177:    wup_flg = req_tbl.UNI_CHR;
 27064   01ADC6  C7CF  F7CC         	movff	_req_tbl+1,_wup_flg
 27065                           
 27066                           ;../src/io_dos.c: 178:    break;
 27067   01ADCA  EF02  F0D7         	goto	l837
 27068   01ADCE                     l23819:
 27069                           
 27070                           ; BSR set to: 7
 27071   01ADCE  51CE               	movf	_req_tbl& (0+255),w,b
 27072                           
 27073                           ; Switch size 1, requested type "simple"
 27074                           ; Number of cases is 6, Range of values is 1 to 255
 27075                           ; switch strategies available:
 27076                           ; Name         Instructions Cycles
 27077                           ; simple_byte           19    10 (average)
 27078                           ;	Chosen strategy is simple_byte
 27079   01ADD0  0A01               	xorlw	1	; case 1
 27080   01ADD2  B4D8               	btfsc	status,2,c
 27081   01ADD4  EF34  F0D6         	goto	l23785
 27082   01ADD8  0A03               	xorlw	3	; case 2
 27083   01ADDA  B4D8               	btfsc	status,2,c
 27084   01ADDC  EF4E  F0D6         	goto	l23787
 27085   01ADE0  0A01               	xorlw	1	; case 3
 27086   01ADE2  B4D8               	btfsc	status,2,c
 27087   01ADE4  EF53  F0D6         	goto	l23789
 27088   01ADE8  0A07               	xorlw	7	; case 4
 27089   01ADEA  B4D8               	btfsc	status,2,c
 27090   01ADEC  EF74  F0D6         	goto	l846
 27091   01ADF0  0A03               	xorlw	3	; case 7
 27092   01ADF2  B4D8               	btfsc	status,2,c
 27093   01ADF4  EFA4  F0D6         	goto	l23809
 27094   01ADF8  0AF8               	xorlw	248	; case 255
 27095   01ADFA  B4D8               	btfsc	status,2,c
 27096   01ADFC  EFE3  F0D6         	goto	l852
 27097   01AE00  EF02  F0D7         	goto	l837
 27098   01AE04                     l837:
 27099                           
 27100                           ;../src/io_dos.c: 180:  req_tbl.UREQ_COM = 0;
 27101   01AE04  0107               	movlb	7	; () banked
 27102   01AE06  6BCE               	clrf	_req_tbl& (0+255),b
 27103   01AE08                     
 27104                           ; BSR set to: 7
 27105   01AE08  0012               	return		;funcret
 27106   01AE0A                     __end_of_unimon_console:
 27107                           	callstack 0
 27108                           
 27109 ;; *************** function _in_file *****************
 27110 ;; Defined at:
 27111 ;;		line 943 in file "../src/w65_main.c"
 27112 ;; Parameters:    Size  Location     Type
 27113 ;;		None
 27114 ;; Auto vars:     Size  Location     Type
 27115 ;;  chr             1  159[BANK5 ] unsigned char 
 27116 ;; Return value:  Size  Location     Type
 27117 ;;                  2    0[BANK7 ] int 
 27118 ;; Registers used:
 27119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27120 ;; Tracked objects:
 27121 ;;		On entry : 0/0
 27122 ;;		On exit  : 0/0
 27123 ;;		Unchanged: 0/0
 27124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27125 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27128 ;;      Totals:         0       1       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27129 ;;Total ram usage:        3 bytes
 27130 ;; Hardware stack levels used: 1
 27131 ;; Hardware stack levels required when called: 20
 27132 ;; This function calls:
 27133 ;;		_f_close
 27134 ;;		_f_open
 27135 ;;		_f_read
 27136 ;;		_printf
 27137 ;; This function is called by:
 27138 ;;		_unimon_console
 27139 ;;		_bus_master_operation
 27140 ;; This function uses a non-reentrant model
 27141 ;;
 27142                           
 27143                           	psect	text67
 27144   01BFA6                     __ptext67:
 27145                           	callstack 0
 27146   01BFA6                     _in_file:
 27147                           	callstack 101
 27148   01BFA6                     
 27149                           ;../src/w65_main.c: 945:  uint8_t chr;;../src/w65_main.c: 947:  if ( fin_cnt == 0xffff )
      +                           {
 27150   01BFA6  0107               	movlb	7	; () banked
 27151   01BFA8  29E3               	incf	_fin_cnt& (0+255),w,b
 27152   01BFAA  E106               	bnz	u32541
 27153   01BFAC  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 27154   01BFAE  A4D8               	btfss	status,2,c
 27155   01BFB0  EFDC  F0DF         	goto	u32541
 27156   01BFB4  EFDE  F0DF         	goto	u32540
 27157   01BFB8                     u32541:
 27158   01BFB8  EF15  F0E0         	goto	l23587
 27159   01BFBC                     u32540:
 27160   01BFBC                     
 27161                           ; BSR set to: 7
 27162                           ;../src/w65_main.c: 949:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 27163   01BFBC  0EB4               	movlw	low _in_fl
 27164   01BFBE  0106               	movlb	6	; () banked
 27165   01BFC0  6FAF               	movwf	f_open@fp& (0+255),b
 27166   01BFC2  0E0D               	movlw	high _in_fl
 27167   01BFC4  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 27168   01BFC6  0EC2               	movlw	low _fin_name
 27169   01BFC8  6FB1               	movwf	f_open@path& (0+255),b
 27170   01BFCA  0E08               	movlw	high _fin_name
 27171   01BFCC  6FB2               	movwf	(f_open@path+1)& (0+255),b
 27172   01BFCE  0E01               	movlw	1
 27173   01BFD0  6FB3               	movwf	f_open@mode& (0+255),b
 27174   01BFD2  ECDB  F092         	call	_f_open	;wreg free
 27175   01BFD6  0900               	iorlw	0
 27176   01BFD8  B4D8               	btfsc	status,2,c
 27177   01BFDA  EFF1  F0DF         	goto	u32551
 27178   01BFDE  EFF3  F0DF         	goto	u32550
 27179   01BFE2                     u32551:
 27180   01BFE2  EF06  F0E0         	goto	l23583
 27181   01BFE6                     u32550:
 27182   01BFE6                     
 27183                           ;../src/w65_main.c: 950:    printf("File Open Error. %s\r\n", &fin_name[0]);
 27184   01BFE6  0E04               	movlw	low STR_162
 27185   01BFE8  0105               	movlb	5	; () banked
 27186   01BFEA  6FAD               	movwf	printf@fmt& (0+255),b
 27187   01BFEC  0EFC               	movlw	high STR_162
 27188   01BFEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27189   01BFF0  0EC2               	movlw	low _fin_name
 27190   01BFF2  6FAF               	movwf	(?_printf+2)& (0+255),b
 27191   01BFF4  0E08               	movlw	high _fin_name
 27192   01BFF6  6FB0               	movwf	(?_printf+3)& (0+255),b
 27193   01BFF8  ECDA  F0FF         	call	_printf	;wreg free
 27194   01BFFC                     l23577:
 27195                           
 27196                           ;../src/w65_main.c: 951:    cin_no = 0;
 27197   01BFFC  0107               	movlb	7	; () banked
 27198   01BFFE  6BCA               	clrf	_cin_no& (0+255),b
 27199   01C000                     
 27200                           ; BSR set to: 7
 27201                           ;../src/w65_main.c: 952:    return 0;
 27202   01C000  0E00               	movlw	0
 27203   01C002  6F01               	movwf	(?_in_file+1)& (0+255),b
 27204   01C004  0E00               	movlw	0
 27205   01C006  6F00               	movwf	?_in_file& (0+255),b
 27206   01C008  EF8F  F0E0         	goto	l1381
 27207   01C00C                     l23583:
 27208                           
 27209                           ;../src/w65_main.c: 954:   fin_cnt=0;
 27210   01C00C  0E00               	movlw	0
 27211   01C00E  0107               	movlb	7	; () banked
 27212   01C010  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 27213   01C012  0E00               	movlw	0
 27214   01C014  6FE3               	movwf	_fin_cnt& (0+255),b
 27215                           
 27216                           ;../src/w65_main.c: 955:   frd_ptr = 0;
 27217   01C016  0E00               	movlw	0
 27218   01C018  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27219   01C01A  0E00               	movlw	0
 27220   01C01C  6FBD               	movwf	_frd_ptr& (0+255),b
 27221   01C01E                     
 27222                           ; BSR set to: 7
 27223                           ;../src/w65_main.c: 956:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 27224   01C01E  0063  F6F8  F7BB   	movff	_in_fl+10,_fin_size
 27225   01C024  0063  F6FC  F7BC   	movff	_in_fl+11,_fin_size+1
 27226   01C02A                     l23587:
 27227                           
 27228                           ;../src/w65_main.c: 961:  if ( !fin_cnt ) {
 27229   01C02A  0107               	movlb	7	; () banked
 27230   01C02C  51E3               	movf	_fin_cnt& (0+255),w,b
 27231   01C02E  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 27232   01C030  A4D8               	btfss	status,2,c
 27233   01C032  EF1D  F0E0         	goto	u32561
 27234   01C036  EF1F  F0E0         	goto	u32560
 27235   01C03A                     u32561:
 27236   01C03A  EF4E  F0E0         	goto	l23601
 27237   01C03E                     u32560:
 27238   01C03E                     
 27239                           ; BSR set to: 7
 27240                           ;../src/w65_main.c: 962:   frd_ptr = 0;
 27241   01C03E  0E00               	movlw	0
 27242   01C040  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27243   01C042  0E00               	movlw	0
 27244   01C044  6FBD               	movwf	_frd_ptr& (0+255),b
 27245   01C046                     
 27246                           ; BSR set to: 7
 27247                           ;../src/w65_main.c: 963:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt 
      +                          ) ) {
 27248   01C046  0EB4               	movlw	low _in_fl
 27249   01C048  0106               	movlb	6	; () banked
 27250   01C04A  6F3E               	movwf	f_read@fp& (0+255),b
 27251   01C04C  0E0D               	movlw	high _in_fl
 27252   01C04E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 27253   01C050  0EF8               	movlw	low _cin_file
 27254   01C052  6F40               	movwf	f_read@buff& (0+255),b
 27255   01C054  0E11               	movlw	high _cin_file
 27256   01C056  6F41               	movwf	(f_read@buff+1)& (0+255),b
 27257   01C058  0E02               	movlw	2
 27258   01C05A  6F43               	movwf	(f_read@btr+1)& (0+255),b
 27259   01C05C  0E00               	movlw	0
 27260   01C05E  6F42               	movwf	f_read@btr& (0+255),b
 27261   01C060  0EE3               	movlw	low _fin_cnt
 27262   01C062  6F44               	movwf	f_read@br& (0+255),b
 27263   01C064  0E07               	movlw	high _fin_cnt
 27264   01C066  6F45               	movwf	(f_read@br+1)& (0+255),b
 27265   01C068  EC9B  F096         	call	_f_read	;wreg free
 27266   01C06C  0900               	iorlw	0
 27267   01C06E  B4D8               	btfsc	status,2,c
 27268   01C070  EF3C  F0E0         	goto	u32571
 27269   01C074  EF3E  F0E0         	goto	u32570
 27270   01C078                     u32571:
 27271   01C078  EF4E  F0E0         	goto	l23601
 27272   01C07C                     u32570:
 27273   01C07C                     
 27274                           ;../src/w65_main.c: 964:    printf("File read error.\r\n");
 27275   01C07C  0E0F               	movlw	low STR_163
 27276   01C07E  0105               	movlb	5	; () banked
 27277   01C080  6FAD               	movwf	printf@fmt& (0+255),b
 27278   01C082  0EFD               	movlw	high STR_163
 27279   01C084  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27280   01C086  ECDA  F0FF         	call	_printf	;wreg free
 27281                           
 27282                           ;../src/w65_main.c: 965:    f_close( &in_fl );
 27283   01C08A  0EB4               	movlw	low _in_fl
 27284   01C08C  0106               	movlb	6	; () banked
 27285   01C08E  6F2F               	movwf	f_close@fp& (0+255),b
 27286   01C090  0E0D               	movlw	high _in_fl
 27287   01C092  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27288   01C094  ECDB  F0FB         	call	_f_close	;wreg free
 27289   01C098  EFFE  F0DF         	goto	l23577
 27290   01C09C                     l23601:
 27291                           
 27292                           ;../src/w65_main.c: 971:  chr = cin_file[frd_ptr++];
 27293   01C09C  0EF8               	movlw	low _cin_file
 27294   01C09E  0107               	movlb	7	; () banked
 27295   01C0A0  25BD               	addwf	_frd_ptr& (0+255),w,b
 27296   01C0A2  6ED9               	movwf	fsr2l,c
 27297   01C0A4  0E11               	movlw	high _cin_file
 27298   01C0A6  21BE               	addwfc	(_frd_ptr+1)& (0+255),w,b
 27299   01C0A8  6EDA               	movwf	fsr2h,c
 27300   01C0AA  50DF               	movf	indf2,w,c
 27301   01C0AC  0105               	movlb	5	; () banked
 27302   01C0AE  6FFF               	movwf	in_file@chr& (0+255),b
 27303   01C0B0                     
 27304                           ; BSR set to: 5
 27305   01C0B0  0107               	movlb	7	; () banked
 27306   01C0B2  4BBD               	infsnz	_frd_ptr& (0+255),f,b
 27307   01C0B4  2BBE               	incf	(_frd_ptr+1)& (0+255),f,b
 27308   01C0B6                     
 27309                           ; BSR set to: 7
 27310                           ;../src/w65_main.c: 972:  fin_cnt--;
 27311   01C0B6  07E3               	decf	_fin_cnt& (0+255),f,b
 27312   01C0B8  A0D8               	btfss	status,0,c
 27313   01C0BA  07E4               	decf	(_fin_cnt+1)& (0+255),f,b
 27314   01C0BC                     
 27315                           ; BSR set to: 7
 27316                           ;../src/w65_main.c: 973:  fin_size--;
 27317   01C0BC  07BB               	decf	_fin_size& (0+255),f,b
 27318   01C0BE  A0D8               	btfss	status,0,c
 27319   01C0C0  07BC               	decf	(_fin_size+1)& (0+255),f,b
 27320   01C0C2                     
 27321                           ; BSR set to: 7
 27322                           ;../src/w65_main.c: 975:  if ( !fin_size ) {
 27323   01C0C2  51BB               	movf	_fin_size& (0+255),w,b
 27324   01C0C4  11BC               	iorwf	(_fin_size+1)& (0+255),w,b
 27325   01C0C6  A4D8               	btfss	status,2,c
 27326   01C0C8  EF68  F0E0         	goto	u32581
 27327   01C0CC  EF6A  F0E0         	goto	u32580
 27328   01C0D0                     u32581:
 27329   01C0D0  EF84  F0E0         	goto	l23623
 27330   01C0D4                     u32580:
 27331   01C0D4                     
 27332                           ; BSR set to: 7
 27333                           ;../src/w65_main.c: 976:   f_close( &in_fl );
 27334   01C0D4  0EB4               	movlw	low _in_fl
 27335   01C0D6  0106               	movlb	6	; () banked
 27336   01C0D8  6F2F               	movwf	f_close@fp& (0+255),b
 27337   01C0DA  0E0D               	movlw	high _in_fl
 27338   01C0DC  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27339   01C0DE  ECDB  F0FB         	call	_f_close	;wreg free
 27340   01C0E2                     
 27341                           ;../src/w65_main.c: 977:   cin_no = 0;
 27342   01C0E2  0107               	movlb	7	; () banked
 27343   01C0E4  6BCA               	clrf	_cin_no& (0+255),b
 27344   01C0E6                     
 27345                           ; BSR set to: 7
 27346                           ;../src/w65_main.c: 978:   if ( chr < 0x0d ) chr = 0x0d;
 27347   01C0E6  0E0D               	movlw	13
 27348   01C0E8  0105               	movlb	5	; () banked
 27349   01C0EA  61FF               	cpfslt	in_file@chr& (0+255),b
 27350   01C0EC  EF7A  F0E0         	goto	u32591
 27351   01C0F0  EF7C  F0E0         	goto	u32590
 27352   01C0F4                     u32591:
 27353   01C0F4  EF7E  F0E0         	goto	l23619
 27354   01C0F8                     u32590:
 27355   01C0F8                     
 27356                           ; BSR set to: 5
 27357   01C0F8  0E0D               	movlw	13
 27358   01C0FA  6FFF               	movwf	in_file@chr& (0+255),b
 27359   01C0FC                     l23619:
 27360                           
 27361                           ; BSR set to: 5
 27362                           ;../src/w65_main.c: 979:   return chr;
 27363   01C0FC  C5FF  F700         	movff	in_file@chr,?_in_file
 27364   01C100  0107               	movlb	7	; () banked
 27365   01C102  6B01               	clrf	(?_in_file+1)& (0+255),b
 27366   01C104  EF8F  F0E0         	goto	l1381
 27367   01C108                     l23623:
 27368                           
 27369                           ; BSR set to: 7
 27370                           ;../src/w65_main.c: 982:  if ( chr < 0x0d ) goto next_char;
 27371   01C108  0E0D               	movlw	13
 27372   01C10A  0105               	movlb	5	; () banked
 27373   01C10C  61FF               	cpfslt	in_file@chr& (0+255),b
 27374   01C10E  EF8B  F0E0         	goto	u32601
 27375   01C112  EF8D  F0E0         	goto	u32600
 27376   01C116                     u32601:
 27377   01C116  EF7E  F0E0         	goto	l23619
 27378   01C11A                     u32600:
 27379   01C11A  EF15  F0E0         	goto	l23587
 27380   01C11E                     l1381:
 27381                           
 27382                           ; BSR set to: 7
 27383   01C11E  0012               	return		;funcret
 27384   01C120                     __end_of_in_file:
 27385                           	callstack 0
 27386                           
 27387 ;; *************** function _u_getch *****************
 27388 ;; Defined at:
 27389 ;;		line 151 in file "../src/boards/w65_cmn.c"
 27390 ;; Parameters:    Size  Location     Type
 27391 ;;		None
 27392 ;; Auto vars:     Size  Location     Type
 27393 ;;  c               1  159[BANK5 ] unsigned char 
 27394 ;; Return value:  Size  Location     Type
 27395 ;;                  2    0[BANK7 ] int 
 27396 ;; Registers used:
 27397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27398 ;; Tracked objects:
 27399 ;;		On entry : 0/0
 27400 ;;		On exit  : 0/0
 27401 ;;		Unchanged: 0/0
 27402 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27403 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27405 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27406 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27407 ;;Total ram usage:        5 bytes
 27408 ;; Hardware stack levels used: 1
 27409 ;; Hardware stack levels required when called: 1
 27410 ;; This function calls:
 27411 ;;		Nothing
 27412 ;; This function is called by:
 27413 ;;		_unimon_console
 27414 ;;		_bus_master_operation
 27415 ;; This function uses a non-reentrant model
 27416 ;;
 27417                           
 27418                           	psect	text68
 27419   01F54C                     __ptext68:
 27420                           	callstack 0
 27421   01F54C                     _u_getch:
 27422                           	callstack 120
 27423   01F54C                     
 27424                           ;../src/boards/w65_cmn.c: 152:  char c;;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 27425   01F54C  EFB6  F0FA         	goto	l23295
 27426   01F550                     l23289:
 27427                           
 27428                           ; BSR set to: 7
 27429                           ;../src/boards/w65_cmn.c: 155:   if (nmi_sig) return(0);
 27430   01F550  51CD               	movf	_nmi_sig& (0+255),w,b
 27431   01F552  B4D8               	btfsc	status,2,c
 27432   01F554  EFAE  F0FA         	goto	u32091
 27433   01F558  EFB0  F0FA         	goto	u32090
 27434   01F55C                     u32091:
 27435   01F55C  EFB6  F0FA         	goto	l23295
 27436   01F560                     u32090:
 27437   01F560                     
 27438                           ; BSR set to: 7
 27439   01F560  0E00               	movlw	0
 27440   01F562  6F01               	movwf	(?_u_getch+1)& (0+255),b
 27441   01F564  0E00               	movlw	0
 27442   01F566  6F00               	movwf	?_u_getch& (0+255),b
 27443   01F568  EFDC  F0FA         	goto	l326
 27444   01F56C                     l23295:
 27445                           
 27446                           ;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 27447   01F56C  0107               	movlb	7	; () banked
 27448   01F56E  51C1               	movf	_rx_cnt& (0+255),w,b
 27449   01F570  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 27450   01F572  B4D8               	btfsc	status,2,c
 27451   01F574  EFBE  F0FA         	goto	u32101
 27452   01F578  EFC0  F0FA         	goto	u32100
 27453   01F57C                     u32101:
 27454   01F57C  EFA8  F0FA         	goto	l23289
 27455   01F580                     u32100:
 27456   01F580                     
 27457                           ; BSR set to: 7
 27458                           ;../src/boards/w65_cmn.c: 157:  U3RXIE = 0;
 27459   01F580  90A7               	bcf	1191,0,c	;volatile
 27460   01F582                     
 27461                           ; BSR set to: 7
 27462                           ;../src/boards/w65_cmn.c: 158:  c = rx_buf[rx_rp];
 27463   01F582  0E00               	movlw	low _rx_buf
 27464   01F584  25C3               	addwf	_rx_rp& (0+255),w,b
 27465   01F586  6ED9               	movwf	fsr2l,c
 27466   01F588  0E0B               	movlw	high _rx_buf
 27467   01F58A  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27468   01F58C  6EDA               	movwf	fsr2h,c
 27469   01F58E  50DF               	movf	indf2,w,c
 27470   01F590  0105               	movlb	5	; () banked
 27471   01F592  6FFF               	movwf	u_getch@c& (0+255),b
 27472   01F594                     
 27473                           ; BSR set to: 5
 27474                           ;../src/boards/w65_cmn.c: 159:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 27475   01F594  0E01               	movlw	1
 27476   01F596  0107               	movlb	7	; () banked
 27477   01F598  25C3               	addwf	_rx_rp& (0+255),w,b
 27478   01F59A  6F02               	movwf	??_u_getch& (0+255),b
 27479   01F59C  0E00               	movlw	0
 27480   01F59E  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27481   01F5A0  6F03               	movwf	(??_u_getch+1)& (0+255),b
 27482   01F5A2  0E7F               	movlw	127
 27483   01F5A4  1502               	andwf	??_u_getch& (0+255),w,b
 27484   01F5A6  6FC3               	movwf	_rx_rp& (0+255),b
 27485   01F5A8  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 27486   01F5AA                     
 27487                           ; BSR set to: 7
 27488                           ;../src/boards/w65_cmn.c: 160:  rx_cnt--;
 27489   01F5AA  07C1               	decf	_rx_cnt& (0+255),f,b
 27490   01F5AC  A0D8               	btfss	status,0,c
 27491   01F5AE  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 27492   01F5B0                     
 27493                           ; BSR set to: 7
 27494                           ;../src/boards/w65_cmn.c: 161:  U3RXIE = 1;
 27495   01F5B0  80A7               	bsf	1191,0,c	;volatile
 27496   01F5B2                     
 27497                           ; BSR set to: 7
 27498                           ;../src/boards/w65_cmn.c: 162:     return c;
 27499   01F5B2  C5FF  F700         	movff	u_getch@c,?_u_getch
 27500   01F5B6  6B01               	clrf	(?_u_getch+1)& (0+255),b
 27501   01F5B8                     l326:
 27502                           
 27503                           ; BSR set to: 7
 27504   01F5B8  0012               	return		;funcret
 27505   01F5BA                     __end_of_u_getch:
 27506                           	callstack 0
 27507                           
 27508 ;; *************** function _get_str *****************
 27509 ;; Defined at:
 27510 ;;		line 165 in file "../src/boards/w65_cmn.c"
 27511 ;; Parameters:    Size  Location     Type
 27512 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 27513 ;;		 -> tmp_buf(512), 
 27514 ;;  cnt             1    2[BANK7 ] unsigned char 
 27515 ;; Auto vars:     Size  Location     Type
 27516 ;;  i               2    7[BANK7 ] unsigned int 
 27517 ;;  c               2    5[BANK7 ] unsigned int 
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  2    0[BANK7 ] unsigned int 
 27520 ;; Registers used:
 27521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27522 ;; Tracked objects:
 27523 ;;		On entry : 0/0
 27524 ;;		On exit  : 0/0
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27527 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27528 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27529 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27530 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27531 ;;Total ram usage:        9 bytes
 27532 ;; Hardware stack levels used: 1
 27533 ;; Hardware stack levels required when called: 1
 27534 ;; This function calls:
 27535 ;;		Nothing
 27536 ;; This function is called by:
 27537 ;;		_unimon_console
 27538 ;;		_bus_master_operation
 27539 ;; This function uses a non-reentrant model
 27540 ;;
 27541                           
 27542                           	psect	text69
 27543   01EE12                     __ptext69:
 27544                           	callstack 0
 27545   01EE12                     _get_str:
 27546                           	callstack 120
 27547   01EE12                     
 27548                           ;../src/boards/w65_cmn.c: 166:  unsigned int c, i;;../src/boards/w65_cmn.c: 168:  U3RXIE
      +                           = 0;
 27549   01EE12  90A7               	bcf	1191,0,c	;volatile
 27550   01EE14                     
 27551                           ;../src/boards/w65_cmn.c: 169:  i = ( (unsigned int)cnt > rx_cnt ) ? rx_cnt : (unsigned 
      +                          int)cnt;
 27552   01EE14  0107               	movlb	7	; () banked
 27553   01EE16  5102               	movf	get_str@cnt& (0+255),w,b
 27554   01EE18  6F03               	movwf	??_get_str& (0+255),b
 27555   01EE1A  6B04               	clrf	(??_get_str+1)& (0+255),b
 27556   01EE1C  5103               	movf	??_get_str& (0+255),w,b
 27557   01EE1E  5DC1               	subwf	_rx_cnt& (0+255),w,b
 27558   01EE20  5104               	movf	(??_get_str+1)& (0+255),w,b
 27559   01EE22  59C2               	subwfb	(_rx_cnt+1)& (0+255),w,b
 27560   01EE24  A0D8               	btfss	status,0,c
 27561   01EE26  EF17  F0F7         	goto	u32111
 27562   01EE2A  EF19  F0F7         	goto	u32110
 27563   01EE2E                     u32111:
 27564   01EE2E  EF1E  F0F7         	goto	l331
 27565   01EE32                     u32110:
 27566   01EE32                     
 27567                           ; BSR set to: 7
 27568   01EE32  C702  F707         	movff	get_str@cnt,get_str@i
 27569   01EE36  6B08               	clrf	(get_str@i+1)& (0+255),b
 27570   01EE38  EF22  F0F7         	goto	l333
 27571   01EE3C                     l331:
 27572                           
 27573                           ; BSR set to: 7
 27574   01EE3C  C7C1  F707         	movff	_rx_cnt,get_str@i
 27575   01EE40  C7C2  F708         	movff	_rx_cnt+1,get_str@i+1
 27576   01EE44                     l333:
 27577                           
 27578                           ; BSR set to: 7
 27579                           ;../src/boards/w65_cmn.c: 170:  c = i;
 27580   01EE44  C707  F705         	movff	get_str@i,get_str@c
 27581   01EE48  C708  F706         	movff	get_str@i+1,get_str@c+1
 27582                           
 27583                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 27584   01EE4C  EF43  F0F7         	goto	l23323
 27585   01EE50                     l23315:
 27586                           
 27587                           ; BSR set to: 7
 27588                           ;../src/boards/w65_cmn.c: 172:   *buf++ = rx_buf[rx_rp];
 27589   01EE50  0E00               	movlw	low _rx_buf
 27590   01EE52  25C3               	addwf	_rx_rp& (0+255),w,b
 27591   01EE54  6ED9               	movwf	fsr2l,c
 27592   01EE56  0E0B               	movlw	high _rx_buf
 27593   01EE58  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27594   01EE5A  6EDA               	movwf	fsr2h,c
 27595   01EE5C  C700  F4E1         	movff	get_str@buf,fsr1l
 27596   01EE60  C701  F4E2         	movff	get_str@buf+1,fsr1h
 27597   01EE64  C4DF F4E7          	movff	indf2,indf1
 27598   01EE68                     
 27599                           ; BSR set to: 7
 27600   01EE68  4B00               	infsnz	get_str@buf& (0+255),f,b
 27601   01EE6A  2B01               	incf	(get_str@buf+1)& (0+255),f,b
 27602   01EE6C                     
 27603                           ; BSR set to: 7
 27604                           ;../src/boards/w65_cmn.c: 173:   rx_rp = (rx_rp + 1) & ( 128 - 1);
 27605   01EE6C  0E01               	movlw	1
 27606   01EE6E  25C3               	addwf	_rx_rp& (0+255),w,b
 27607   01EE70  6F03               	movwf	??_get_str& (0+255),b
 27608   01EE72  0E00               	movlw	0
 27609   01EE74  21C4               	addwfc	(_rx_rp+1)& (0+255),w,b
 27610   01EE76  6F04               	movwf	(??_get_str+1)& (0+255),b
 27611   01EE78  0E7F               	movlw	127
 27612   01EE7A  1503               	andwf	??_get_str& (0+255),w,b
 27613   01EE7C  6FC3               	movwf	_rx_rp& (0+255),b
 27614   01EE7E  6BC4               	clrf	(_rx_rp+1)& (0+255),b
 27615   01EE80                     
 27616                           ; BSR set to: 7
 27617                           ;../src/boards/w65_cmn.c: 174:   rx_cnt--;
 27618   01EE80  07C1               	decf	_rx_cnt& (0+255),f,b
 27619   01EE82  A0D8               	btfss	status,0,c
 27620   01EE84  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 27621   01EE86                     l23323:
 27622                           
 27623                           ; BSR set to: 7
 27624                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 27625   01EE86  0707               	decf	get_str@i& (0+255),f,b
 27626   01EE88  A0D8               	btfss	status,0,c
 27627   01EE8A  0708               	decf	(get_str@i+1)& (0+255),f,b
 27628   01EE8C  2907               	incf	get_str@i& (0+255),w,b
 27629   01EE8E  E106               	bnz	u32121
 27630   01EE90  2908               	incf	(get_str@i+1)& (0+255),w,b
 27631   01EE92  A4D8               	btfss	status,2,c
 27632   01EE94  EF4E  F0F7         	goto	u32121
 27633   01EE98  EF50  F0F7         	goto	u32120
 27634   01EE9C                     u32121:
 27635   01EE9C  EF28  F0F7         	goto	l23315
 27636   01EEA0                     u32120:
 27637   01EEA0                     
 27638                           ; BSR set to: 7
 27639                           ;../src/boards/w65_cmn.c: 176:  U3RXIE = 1;
 27640   01EEA0  80A7               	bsf	1191,0,c	;volatile
 27641                           
 27642                           ;../src/boards/w65_cmn.c: 177:  return c;
 27643   01EEA2  C705  F700         	movff	get_str@c,?_get_str
 27644   01EEA6  C706  F701         	movff	get_str@c+1,?_get_str+1
 27645   01EEAA                     
 27646                           ; BSR set to: 7
 27647   01EEAA  0012               	return		;funcret
 27648   01EEAC                     __end_of_get_str:
 27649                           	callstack 0
 27650                           
 27651 ;; *************** function _str_inf *****************
 27652 ;; Defined at:
 27653 ;;		line 986 in file "../src/w65_main.c"
 27654 ;; Parameters:    Size  Location     Type
 27655 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 27656 ;;		 -> tmp_buf(512), 
 27657 ;;  cnt             1    2[BANK7 ] unsigned char 
 27658 ;; Auto vars:     Size  Location     Type
 27659 ;;  i               2    8[BANK7 ] unsigned int 
 27660 ;;  c               2    5[BANK7 ] unsigned int 
 27661 ;;  a               1    7[BANK7 ] unsigned char 
 27662 ;; Return value:  Size  Location     Type
 27663 ;;                  2    0[BANK7 ] unsigned int 
 27664 ;; Registers used:
 27665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27666 ;; Tracked objects:
 27667 ;;		On entry : 0/0
 27668 ;;		On exit  : 0/0
 27669 ;;		Unchanged: 0/0
 27670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27671 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27672 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27673 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27674 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27675 ;;Total ram usage:       10 bytes
 27676 ;; Hardware stack levels used: 1
 27677 ;; Hardware stack levels required when called: 20
 27678 ;; This function calls:
 27679 ;;		_f_close
 27680 ;;		_f_open
 27681 ;;		_f_read
 27682 ;;		_printf
 27683 ;; This function is called by:
 27684 ;;		_unimon_console
 27685 ;;		_bus_master_operation
 27686 ;; This function uses a non-reentrant model
 27687 ;;
 27688                           
 27689                           	psect	text70
 27690   01A8E0                     __ptext70:
 27691                           	callstack 0
 27692   01A8E0                     _str_inf:
 27693                           	callstack 101
 27694   01A8E0                     
 27695                           ;../src/w65_main.c: 987:  unsigned int c, i;;../src/w65_main.c: 988:  char a;;../src/w65
      +                          _main.c: 990:  if ( fin_cnt == 0xffff ) {
 27696   01A8E0  0107               	movlb	7	; () banked
 27697   01A8E2  29E3               	incf	_fin_cnt& (0+255),w,b
 27698   01A8E4  E106               	bnz	u32611
 27699   01A8E6  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 27700   01A8E8  A4D8               	btfss	status,2,c
 27701   01A8EA  EF79  F0D4         	goto	u32611
 27702   01A8EE  EF7B  F0D4         	goto	u32610
 27703   01A8F2                     u32611:
 27704   01A8F2  EFB2  F0D4         	goto	l23643
 27705   01A8F6                     u32610:
 27706   01A8F6                     
 27707                           ; BSR set to: 7
 27708                           ;../src/w65_main.c: 992:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 27709   01A8F6  0EB4               	movlw	low _in_fl
 27710   01A8F8  0106               	movlb	6	; () banked
 27711   01A8FA  6FAF               	movwf	f_open@fp& (0+255),b
 27712   01A8FC  0E0D               	movlw	high _in_fl
 27713   01A8FE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 27714   01A900  0EC2               	movlw	low _fin_name
 27715   01A902  6FB1               	movwf	f_open@path& (0+255),b
 27716   01A904  0E08               	movlw	high _fin_name
 27717   01A906  6FB2               	movwf	(f_open@path+1)& (0+255),b
 27718   01A908  0E01               	movlw	1
 27719   01A90A  6FB3               	movwf	f_open@mode& (0+255),b
 27720   01A90C  ECDB  F092         	call	_f_open	;wreg free
 27721   01A910  0900               	iorlw	0
 27722   01A912  B4D8               	btfsc	status,2,c
 27723   01A914  EF8E  F0D4         	goto	u32621
 27724   01A918  EF90  F0D4         	goto	u32620
 27725   01A91C                     u32621:
 27726   01A91C  EFA3  F0D4         	goto	l23639
 27727   01A920                     u32620:
 27728   01A920                     
 27729                           ;../src/w65_main.c: 993:    printf("File Open Error. %s\r\n", &fin_name[0]);
 27730   01A920  0E04               	movlw	low STR_162
 27731   01A922  0105               	movlb	5	; () banked
 27732   01A924  6FAD               	movwf	printf@fmt& (0+255),b
 27733   01A926  0EFC               	movlw	high STR_162
 27734   01A928  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27735   01A92A  0EC2               	movlw	low _fin_name
 27736   01A92C  6FAF               	movwf	(?_printf+2)& (0+255),b
 27737   01A92E  0E08               	movlw	high _fin_name
 27738   01A930  6FB0               	movwf	(?_printf+3)& (0+255),b
 27739   01A932  ECDA  F0FF         	call	_printf	;wreg free
 27740   01A936                     l23633:
 27741                           
 27742                           ;../src/w65_main.c: 994:    cin_no = 0;
 27743   01A936  0107               	movlb	7	; () banked
 27744   01A938  6BCA               	clrf	_cin_no& (0+255),b
 27745   01A93A                     
 27746                           ; BSR set to: 7
 27747                           ;../src/w65_main.c: 995:    return 0;
 27748   01A93A  0E00               	movlw	0
 27749   01A93C  6F01               	movwf	(?_str_inf+1)& (0+255),b
 27750   01A93E  0E00               	movlw	0
 27751   01A940  6F00               	movwf	?_str_inf& (0+255),b
 27752   01A942  EF52  F0D5         	goto	l1392
 27753   01A946                     l23639:
 27754                           
 27755                           ;../src/w65_main.c: 997:   fin_cnt=0;
 27756   01A946  0E00               	movlw	0
 27757   01A948  0107               	movlb	7	; () banked
 27758   01A94A  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 27759   01A94C  0E00               	movlw	0
 27760   01A94E  6FE3               	movwf	_fin_cnt& (0+255),b
 27761                           
 27762                           ;../src/w65_main.c: 998:   frd_ptr = 0;
 27763   01A950  0E00               	movlw	0
 27764   01A952  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27765   01A954  0E00               	movlw	0
 27766   01A956  6FBD               	movwf	_frd_ptr& (0+255),b
 27767   01A958                     
 27768                           ; BSR set to: 7
 27769                           ;../src/w65_main.c: 999:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 27770   01A958  0063  F6F8  F7BB   	movff	_in_fl+10,_fin_size
 27771   01A95E  0063  F6FC  F7BC   	movff	_in_fl+11,_fin_size+1
 27772   01A964                     l23643:
 27773                           
 27774                           ; BSR set to: 7
 27775                           ;../src/w65_main.c: 1002:  if ( !fin_cnt ) {
 27776   01A964  51E3               	movf	_fin_cnt& (0+255),w,b
 27777   01A966  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 27778   01A968  A4D8               	btfss	status,2,c
 27779   01A96A  EFB9  F0D4         	goto	u32631
 27780   01A96E  EFBB  F0D4         	goto	u32630
 27781   01A972                     u32631:
 27782   01A972  EFEA  F0D4         	goto	l23657
 27783   01A976                     u32630:
 27784   01A976                     
 27785                           ; BSR set to: 7
 27786                           ;../src/w65_main.c: 1003:   frd_ptr = 0;
 27787   01A976  0E00               	movlw	0
 27788   01A978  6FBE               	movwf	(_frd_ptr+1)& (0+255),b
 27789   01A97A  0E00               	movlw	0
 27790   01A97C  6FBD               	movwf	_frd_ptr& (0+255),b
 27791   01A97E                     
 27792                           ; BSR set to: 7
 27793                           ;../src/w65_main.c: 1004:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt
      +                           ) ) {
 27794   01A97E  0EB4               	movlw	low _in_fl
 27795   01A980  0106               	movlb	6	; () banked
 27796   01A982  6F3E               	movwf	f_read@fp& (0+255),b
 27797   01A984  0E0D               	movlw	high _in_fl
 27798   01A986  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 27799   01A988  0EF8               	movlw	low _cin_file
 27800   01A98A  6F40               	movwf	f_read@buff& (0+255),b
 27801   01A98C  0E11               	movlw	high _cin_file
 27802   01A98E  6F41               	movwf	(f_read@buff+1)& (0+255),b
 27803   01A990  0E02               	movlw	2
 27804   01A992  6F43               	movwf	(f_read@btr+1)& (0+255),b
 27805   01A994  0E00               	movlw	0
 27806   01A996  6F42               	movwf	f_read@btr& (0+255),b
 27807   01A998  0EE3               	movlw	low _fin_cnt
 27808   01A99A  6F44               	movwf	f_read@br& (0+255),b
 27809   01A99C  0E07               	movlw	high _fin_cnt
 27810   01A99E  6F45               	movwf	(f_read@br+1)& (0+255),b
 27811   01A9A0  EC9B  F096         	call	_f_read	;wreg free
 27812   01A9A4  0900               	iorlw	0
 27813   01A9A6  B4D8               	btfsc	status,2,c
 27814   01A9A8  EFD8  F0D4         	goto	u32641
 27815   01A9AC  EFDA  F0D4         	goto	u32640
 27816   01A9B0                     u32641:
 27817   01A9B0  EFEA  F0D4         	goto	l23657
 27818   01A9B4                     u32640:
 27819   01A9B4                     
 27820                           ;../src/w65_main.c: 1005:    printf("File read error.\r\n");
 27821   01A9B4  0E0F               	movlw	low STR_163
 27822   01A9B6  0105               	movlb	5	; () banked
 27823   01A9B8  6FAD               	movwf	printf@fmt& (0+255),b
 27824   01A9BA  0EFD               	movlw	high STR_163
 27825   01A9BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27826   01A9BE  ECDA  F0FF         	call	_printf	;wreg free
 27827                           
 27828                           ;../src/w65_main.c: 1006:    f_close( &in_fl );
 27829   01A9C2  0EB4               	movlw	low _in_fl
 27830   01A9C4  0106               	movlb	6	; () banked
 27831   01A9C6  6F2F               	movwf	f_close@fp& (0+255),b
 27832   01A9C8  0E0D               	movlw	high _in_fl
 27833   01A9CA  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27834   01A9CC  ECDB  F0FB         	call	_f_close	;wreg free
 27835   01A9D0  EF9B  F0D4         	goto	l23633
 27836   01A9D4                     l23657:
 27837                           
 27838                           ;../src/w65_main.c: 1012:  i = ( (unsigned int)cnt > fin_cnt ) ? fin_cnt : (unsigned int
      +                          )cnt;
 27839   01A9D4  0107               	movlb	7	; () banked
 27840   01A9D6  5102               	movf	str_inf@cnt& (0+255),w,b
 27841   01A9D8  6F03               	movwf	??_str_inf& (0+255),b
 27842   01A9DA  6B04               	clrf	(??_str_inf+1)& (0+255),b
 27843   01A9DC  5103               	movf	??_str_inf& (0+255),w,b
 27844   01A9DE  5DE3               	subwf	_fin_cnt& (0+255),w,b
 27845   01A9E0  5104               	movf	(??_str_inf+1)& (0+255),w,b
 27846   01A9E2  59E4               	subwfb	(_fin_cnt+1)& (0+255),w,b
 27847   01A9E4  A0D8               	btfss	status,0,c
 27848   01A9E6  EFF7  F0D4         	goto	u32651
 27849   01A9EA  EFF9  F0D4         	goto	u32650
 27850   01A9EE                     u32651:
 27851   01A9EE  EFFE  F0D4         	goto	l1396
 27852   01A9F2                     u32650:
 27853   01A9F2                     
 27854                           ; BSR set to: 7
 27855   01A9F2  C702  F708         	movff	str_inf@cnt,str_inf@i
 27856   01A9F6  6B09               	clrf	(str_inf@i+1)& (0+255),b
 27857   01A9F8  EF02  F0D5         	goto	l23661
 27858   01A9FC                     l1396:
 27859                           
 27860                           ; BSR set to: 7
 27861   01A9FC  C7E3  F708         	movff	_fin_cnt,str_inf@i
 27862   01AA00  C7E4  F709         	movff	_fin_cnt+1,str_inf@i+1
 27863   01AA04                     l23661:
 27864                           
 27865                           ; BSR set to: 7
 27866                           ;../src/w65_main.c: 1014:  fin_cnt -= i;
 27867   01AA04  5108               	movf	str_inf@i& (0+255),w,b
 27868   01AA06  5FE3               	subwf	_fin_cnt& (0+255),f,b
 27869   01AA08  5109               	movf	(str_inf@i+1)& (0+255),w,b
 27870   01AA0A  5BE4               	subwfb	(_fin_cnt+1)& (0+255),f,b
 27871                           
 27872                           ;../src/w65_main.c: 1015:  fin_size -= i;
 27873   01AA0C  5108               	movf	str_inf@i& (0+255),w,b
 27874   01AA0E  5FBB               	subwf	_fin_size& (0+255),f,b
 27875   01AA10  5109               	movf	(str_inf@i+1)& (0+255),w,b
 27876   01AA12  5BBC               	subwfb	(_fin_size+1)& (0+255),f,b
 27877   01AA14                     
 27878                           ; BSR set to: 7
 27879                           ;../src/w65_main.c: 1016:  c = i;
 27880   01AA14  C708  F705         	movff	str_inf@i,str_inf@c
 27881   01AA18  C709  F706         	movff	str_inf@i+1,str_inf@c+1
 27882                           
 27883                           ;../src/w65_main.c: 1017:  while(i--) {
 27884   01AA1C  EF2F  F0D5         	goto	l23679
 27885   01AA20                     l23665:
 27886                           
 27887                           ; BSR set to: 7
 27888                           ;../src/w65_main.c: 1018:   a = cin_file[frd_ptr++];
 27889   01AA20  0EF8               	movlw	low _cin_file
 27890   01AA22  25BD               	addwf	_frd_ptr& (0+255),w,b
 27891   01AA24  6ED9               	movwf	fsr2l,c
 27892   01AA26  0E11               	movlw	high _cin_file
 27893   01AA28  21BE               	addwfc	(_frd_ptr+1)& (0+255),w,b
 27894   01AA2A  6EDA               	movwf	fsr2h,c
 27895   01AA2C  50DF               	movf	indf2,w,c
 27896   01AA2E  6F07               	movwf	str_inf@a& (0+255),b
 27897   01AA30                     
 27898                           ; BSR set to: 7
 27899   01AA30  4BBD               	infsnz	_frd_ptr& (0+255),f,b
 27900   01AA32  2BBE               	incf	(_frd_ptr+1)& (0+255),f,b
 27901   01AA34                     
 27902                           ; BSR set to: 7
 27903                           ;../src/w65_main.c: 1019:   if ( a < 0x0d ) {
 27904   01AA34  0E0D               	movlw	13
 27905   01AA36  6107               	cpfslt	str_inf@a& (0+255),b
 27906   01AA38  EF20  F0D5         	goto	u32661
 27907   01AA3C  EF22  F0D5         	goto	u32660
 27908   01AA40                     u32661:
 27909   01AA40  EF27  F0D5         	goto	l23675
 27910   01AA44                     u32660:
 27911   01AA44                     
 27912                           ; BSR set to: 7
 27913                           ;../src/w65_main.c: 1020:    c--;
 27914   01AA44  0705               	decf	str_inf@c& (0+255),f,b
 27915   01AA46  A0D8               	btfss	status,0,c
 27916   01AA48  0706               	decf	(str_inf@c+1)& (0+255),f,b
 27917                           
 27918                           ;../src/w65_main.c: 1021:    continue;
 27919   01AA4A  EF2F  F0D5         	goto	l23679
 27920   01AA4E                     l23675:
 27921                           
 27922                           ; BSR set to: 7
 27923   01AA4E  C700  F4D9         	movff	str_inf@buf,fsr2l
 27924   01AA52  C701  F4DA         	movff	str_inf@buf+1,fsr2h
 27925   01AA56  C707  F4DF         	movff	str_inf@a,indf2
 27926   01AA5A                     
 27927                           ; BSR set to: 7
 27928   01AA5A  4B00               	infsnz	str_inf@buf& (0+255),f,b
 27929   01AA5C  2B01               	incf	(str_inf@buf+1)& (0+255),f,b
 27930   01AA5E                     l23679:
 27931                           
 27932                           ; BSR set to: 7
 27933                           ;../src/w65_main.c: 1017:  while(i--) {
 27934   01AA5E  0708               	decf	str_inf@i& (0+255),f,b
 27935   01AA60  A0D8               	btfss	status,0,c
 27936   01AA62  0709               	decf	(str_inf@i+1)& (0+255),f,b
 27937   01AA64  2908               	incf	str_inf@i& (0+255),w,b
 27938   01AA66  E106               	bnz	u32671
 27939   01AA68  2909               	incf	(str_inf@i+1)& (0+255),w,b
 27940   01AA6A  A4D8               	btfss	status,2,c
 27941   01AA6C  EF3A  F0D5         	goto	u32671
 27942   01AA70  EF3C  F0D5         	goto	u32670
 27943   01AA74                     u32671:
 27944   01AA74  EF10  F0D5         	goto	l23665
 27945   01AA78                     u32670:
 27946   01AA78                     
 27947                           ; BSR set to: 7
 27948                           ;../src/w65_main.c: 1026:  if ( !fin_size ) {
 27949   01AA78  51BB               	movf	_fin_size& (0+255),w,b
 27950   01AA7A  11BC               	iorwf	(_fin_size+1)& (0+255),w,b
 27951   01AA7C  A4D8               	btfss	status,2,c
 27952   01AA7E  EF43  F0D5         	goto	u32681
 27953   01AA82  EF45  F0D5         	goto	u32680
 27954   01AA86                     u32681:
 27955   01AA86  EF4E  F0D5         	goto	l23687
 27956   01AA8A                     u32680:
 27957   01AA8A                     
 27958                           ; BSR set to: 7
 27959                           ;../src/w65_main.c: 1027:   f_close( &in_fl );
 27960   01AA8A  0EB4               	movlw	low _in_fl
 27961   01AA8C  0106               	movlb	6	; () banked
 27962   01AA8E  6F2F               	movwf	f_close@fp& (0+255),b
 27963   01AA90  0E0D               	movlw	high _in_fl
 27964   01AA92  6F30               	movwf	(f_close@fp+1)& (0+255),b
 27965   01AA94  ECDB  F0FB         	call	_f_close	;wreg free
 27966   01AA98                     
 27967                           ;../src/w65_main.c: 1028:   cin_no = 0;
 27968   01AA98  0107               	movlb	7	; () banked
 27969   01AA9A  6BCA               	clrf	_cin_no& (0+255),b
 27970   01AA9C                     l23687:
 27971                           
 27972                           ; BSR set to: 7
 27973                           ;../src/w65_main.c: 1031:  return c;
 27974   01AA9C  C705  F700         	movff	str_inf@c,?_str_inf
 27975   01AAA0  C706  F701         	movff	str_inf@c+1,?_str_inf+1
 27976   01AAA4                     l1392:
 27977                           
 27978                           ; BSR set to: 7
 27979   01AAA4  0012               	return		;funcret
 27980   01AAA6                     __end_of_str_inf:
 27981                           	callstack 0
 27982                           
 27983 ;; *************** function _read_sram *****************
 27984 ;; Defined at:
 27985 ;;		line 381 in file "../src/boards/w65_cmn.c"
 27986 ;; Parameters:    Size  Location     Type
 27987 ;;  addr            4    3[COMRAM] unsigned long 
 27988 ;;  buf             2    7[COMRAM] PTR unsigned char 
 27989 ;;		 -> disk_buf(128), req_tbl(13), tmp_buf(512), 
 27990 ;;  len             2    9[COMRAM] unsigned int 
 27991 ;; Auto vars:     Size  Location     Type
 27992 ;;  ab              4   13[COMRAM] struct address_bus_u
 27993 ;;  i               2   11[COMRAM] unsigned int 
 27994 ;; Return value:  Size  Location     Type
 27995 ;;                  1    wreg      void 
 27996 ;; Registers used:
 27997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27998 ;; Tracked objects:
 27999 ;;		On entry : 0/0
 28000 ;;		On exit  : 0/0
 28001 ;;		Unchanged: 0/0
 28002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28003 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28004 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28006 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28007 ;;Total ram usage:       14 bytes
 28008 ;; Hardware stack levels used: 1
 28009 ;; Hardware stack levels required when called: 1
 28010 ;; This function calls:
 28011 ;;		Nothing
 28012 ;; This function is called by:
 28013 ;;		_reset_cpu
 28014 ;;		_write_sector
 28015 ;;		_unimon_console
 28016 ;;		_bus_master_operation
 28017 ;;		_mem_init
 28018 ;;		_print_reg
 28019 ;;		_mem_dump
 28020 ;; This function uses a non-reentrant model
 28021 ;;
 28022                           
 28023                           	psect	text71
 28024   01E418                     __ptext71:
 28025                           	callstack 0
 28026   01E418                     _read_sram:
 28027                           	callstack 120
 28028   01E418                     
 28029                           ;../src/boards/w65_cmn.c: 381: void read_sram(uint32_t addr, uint8_t *buf, unsigned int 
      +                          len);../src/boards/w65_cmn.c: 382: {;../src/boards/w65_cmn.c: 383:     union address_bus
      +                          _u ab;;../src/boards/w65_cmn.c: 384:     unsigned int i;;../src/boards/w65_cmn.c: 386:  
      +                          ab.w = addr;
 28030   01E418  C504  F50E         	movff	read_sram@addr,read_sram@ab
 28031   01E41C  C505  F50F         	movff	read_sram@addr+1,read_sram@ab+1
 28032   01E420  C506  F510         	movff	read_sram@addr+2,read_sram@ab+2
 28033   01E424  C507  F511         	movff	read_sram@addr+3,read_sram@ab+3
 28034   01E428                     
 28035                           ;../src/boards/w65_cmn.c: 387:  i = 0;
 28036   01E428  0E00               	movlw	0
 28037   01E42A  6E0D               	movwf	(read_sram@i+1)^(0+1280),c
 28038   01E42C  0E00               	movlw	0
 28039   01E42E  6E0C               	movwf	read_sram@i^(0+1280),c
 28040                           
 28041                           ;../src/boards/w65_cmn.c: 389:  if (cpu_flg) {
 28042   01E430  0107               	movlb	7	; () banked
 28043   01E432  51E5               	movf	_cpu_flg& (0+255),w,b
 28044   01E434  B4D8               	btfsc	status,2,c
 28045   01E436  EF1F  F0F2         	goto	u32181
 28046   01E43A  EF21  F0F2         	goto	u32180
 28047   01E43E                     u32181:
 28048   01E43E  EF5E  F0F2         	goto	l23373
 28049   01E442                     u32180:
 28050   01E442  EF3D  F0F2         	goto	l23365
 28051   01E446                     l372:
 28052                           
 28053                           ;../src/boards/w65_cmn.c: 392:    TRISB = 0x00;
 28054   01E446  6AC7               	clrf	199,c	;volatile
 28055                           
 28056                           ;../src/boards/w65_cmn.c: 393:    LATC = ab.ll;
 28057   01E448  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 28058                           
 28059                           ;../src/boards/w65_cmn.c: 394:    LATD = ab.lh;
 28060   01E44C  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 28061                           
 28062                           ;../src/boards/w65_cmn.c: 396:       LATB = ab.hl;
 28063   01E450  C510  F4BF         	movff	read_sram@ab+2,1215	;volatile
 28064                           
 28065                           ;../src/boards/w65_cmn.c: 397:    LATA1 = 1;
 28066   01E454  82BE               	bsf	1214,1,c	;volatile
 28067                           
 28068                           ;../src/boards/w65_cmn.c: 398:    LATA1 = 0;
 28069   01E456  92BE               	bcf	1214,1,c	;volatile
 28070                           
 28071                           ;../src/boards/w65_cmn.c: 400:    TRISB = 0xFF;
 28072   01E458  68C7               	setf	199,c	;volatile
 28073   01E45A                     
 28074                           ;../src/boards/w65_cmn.c: 401:    ab.w++;
 28075   01E45A  0E01               	movlw	1
 28076   01E45C  260E               	addwf	read_sram@ab^(0+1280),f,c
 28077   01E45E  0E00               	movlw	0
 28078   01E460  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 28079   01E462  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 28080   01E464  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 28081   01E466                     
 28082                           ;../src/boards/w65_cmn.c: 402:    ((uint8_t*)buf)[i] = PORTB;
 28083   01E466  500C               	movf	read_sram@i^(0+1280),w,c
 28084   01E468  2408               	addwf	read_sram@buf^(0+1280),w,c
 28085   01E46A  6ED9               	movwf	fsr2l,c
 28086   01E46C  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 28087   01E46E  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 28088   01E470  6EDA               	movwf	fsr2h,c
 28089   01E472  C4CF F4DF          	movff	1231,indf2	;volatile
 28090   01E476                     
 28091                           ;../src/boards/w65_cmn.c: 403:    i++;
 28092   01E476  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 28093   01E478  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 28094   01E47A                     l23365:
 28095                           
 28096                           ;../src/boards/w65_cmn.c: 391:   while( i < len ) {
 28097   01E47A  500A               	movf	read_sram@len^(0+1280),w,c
 28098   01E47C  5C0C               	subwf	read_sram@i^(0+1280),w,c
 28099   01E47E  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 28100   01E480  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 28101   01E482  A0D8               	btfss	status,0,c
 28102   01E484  EF46  F0F2         	goto	u32191
 28103   01E488  EF48  F0F2         	goto	u32190
 28104   01E48C                     u32191:
 28105   01E48C  EF23  F0F2         	goto	l372
 28106   01E490                     u32190:
 28107   01E490  EF69  F0F2         	goto	l378
 28108   01E494                     l376:
 28109                           
 28110                           ;../src/boards/w65_cmn.c: 409:    LATC = ab.ll;
 28111   01E494  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 28112                           
 28113                           ;../src/boards/w65_cmn.c: 410:    LATD = ab.lh;
 28114   01E498  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 28115   01E49C                     
 28116                           ;../src/boards/w65_cmn.c: 412:    ab.w++;
 28117   01E49C  0E01               	movlw	1
 28118   01E49E  260E               	addwf	read_sram@ab^(0+1280),f,c
 28119   01E4A0  0E00               	movlw	0
 28120   01E4A2  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 28121   01E4A4  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 28122   01E4A6  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 28123   01E4A8                     
 28124                           ;../src/boards/w65_cmn.c: 413:    ((uint8_t*)buf)[i] = PORTB;
 28125   01E4A8  500C               	movf	read_sram@i^(0+1280),w,c
 28126   01E4AA  2408               	addwf	read_sram@buf^(0+1280),w,c
 28127   01E4AC  6ED9               	movwf	fsr2l,c
 28128   01E4AE  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 28129   01E4B0  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 28130   01E4B2  6EDA               	movwf	fsr2h,c
 28131   01E4B4  C4CF F4DF          	movff	1231,indf2	;volatile
 28132   01E4B8                     
 28133                           ;../src/boards/w65_cmn.c: 414:    i++;
 28134   01E4B8  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 28135   01E4BA  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 28136   01E4BC                     l23373:
 28137                           
 28138                           ;../src/boards/w65_cmn.c: 408:   while( i < len ) {
 28139   01E4BC  500A               	movf	read_sram@len^(0+1280),w,c
 28140   01E4BE  5C0C               	subwf	read_sram@i^(0+1280),w,c
 28141   01E4C0  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 28142   01E4C2  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 28143   01E4C4  A0D8               	btfss	status,0,c
 28144   01E4C6  EF67  F0F2         	goto	u32201
 28145   01E4CA  EF69  F0F2         	goto	u32200
 28146   01E4CE                     u32201:
 28147   01E4CE  EF4A  F0F2         	goto	l376
 28148   01E4D2                     u32200:
 28149   01E4D2                     l378:
 28150   01E4D2  0012               	return		;funcret
 28151   01E4D4                     __end_of_read_sram:
 28152                           	callstack 0
 28153                           
 28154 ;; *************** function _f_open *****************
 28155 ;; Defined at:
 28156 ;;		line 3719 in file "../fatfs/ff.c"
 28157 ;; Parameters:    Size  Location     Type
 28158 ;;  fp              2  175[BANK6 ] PTR struct .
 28159 ;;		 -> in_fl(546), rom_fl(546), 
 28160 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 28161 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 28162 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 28163 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 28164 ;;  mode            1  179[BANK6 ] unsigned char 
 28165 ;; Auto vars:     Size  Location     Type
 28166 ;;  dj             40  215[BANK6 ] struct .
 28167 ;;  clst            4  208[BANK6 ] unsigned long 
 28168 ;;  ofs             4  204[BANK6 ] unsigned long 
 28169 ;;  sc              4  200[BANK6 ] unsigned long 
 28170 ;;  cl              4  196[BANK6 ] unsigned long 
 28171 ;;  tm              4  192[BANK6 ] unsigned long 
 28172 ;;  bcs             4  188[BANK6 ] unsigned long 
 28173 ;;  fs              2  212[BANK6 ] PTR struct .
 28174 ;;		 -> fs(564), NULL(0), 
 28175 ;;  res             1  214[BANK6 ] enum E597
 28176 ;; Return value:  Size  Location     Type
 28177 ;;                  1    wreg      enum E17409
 28178 ;; Registers used:
 28179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28180 ;; Tracked objects:
 28181 ;;		On entry : 0/0
 28182 ;;		On exit  : 0/0
 28183 ;;		Unchanged: 0/0
 28184 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28185 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28186 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28187 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28188 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28189 ;;Total ram usage:       80 bytes
 28190 ;; Hardware stack levels used: 1
 28191 ;; Hardware stack levels required when called: 19
 28192 ;; This function calls:
 28193 ;;		_clst2sect
 28194 ;;		_dir_register
 28195 ;;		_disk_read
 28196 ;;		_follow_path
 28197 ;;		_get_fat
 28198 ;;		_get_fattime
 28199 ;;		_ld_clust
 28200 ;;		_ld_dword
 28201 ;;		_memset
 28202 ;;		_mount_volume
 28203 ;;		_move_window
 28204 ;;		_remove_chain
 28205 ;;		_st_clust
 28206 ;;		_st_dword
 28207 ;; This function is called by:
 28208 ;;		_load_program
 28209 ;;		_load_config
 28210 ;;		_scan_files
 28211 ;;		_scan_files1
 28212 ;;		_see_file
 28213 ;;		_in_file
 28214 ;;		_str_inf
 28215 ;; This function uses a non-reentrant model
 28216 ;;
 28217                           
 28218                           	psect	text72
 28219   0125B6                     __ptext72:
 28220                           	callstack 0
 28221   0125B6                     _f_open:
 28222                           	callstack 101
 28223   0125B6                     
 28224                           ;../fatfs/ff.c: 3720:  FIL* fp,;../fatfs/ff.c: 3721:  const TCHAR* path,;../fatfs/ff.c: 
      +                          3722:  BYTE mode;../fatfs/ff.c: 3724: {;../fatfs/ff.c: 3725:  FRESULT res;;../fatfs/ff.c
      +                          : 3726:  DIR dj;;../fatfs/ff.c: 3727:  FATFS *fs;;../fatfs/ff.c: 3729:  DWORD cl, bcs, c
      +                          lst, tm;;../fatfs/ff.c: 3730:  LBA_t sc;;../fatfs/ff.c: 3731:  FSIZE_t ofs;;../fatfs/ff.
      +                          c: 3736:  if (!fp) return FR_INVALID_OBJECT;
 28225   0125B6  0106               	movlb	6	; () banked
 28226   0125B8  51AF               	movf	f_open@fp& (0+255),w,b
 28227   0125BA  11B0               	iorwf	(f_open@fp+1)& (0+255),w,b
 28228   0125BC  A4D8               	btfss	status,2,c
 28229   0125BE  EFE3  F092         	goto	u31741
 28230   0125C2  EFE5  F092         	goto	u31740
 28231   0125C6                     u31741:
 28232   0125C6  EFE8  F092         	goto	l23121
 28233   0125CA                     u31740:
 28234   0125CA                     
 28235                           ; BSR set to: 6
 28236   0125CA  0E09               	movlw	9
 28237   0125CC  EF9A  F096         	goto	l1891
 28238   0125D0                     l23121:
 28239   0125D0                     
 28240                           ; BSR set to: 6
 28241   0125D0  0E3F               	movlw	63
 28242   0125D2  17B3               	andwf	f_open@mode& (0+255),f,b
 28243   0125D4                     
 28244                           ; BSR set to: 6
 28245                           ;../fatfs/ff.c: 3740:  res = mount_volume(&path, &fs, mode);
 28246   0125D4  0EB1               	movlw	low f_open@path
 28247   0125D6  6F81               	movwf	mount_volume@path& (0+255),b
 28248   0125D8  0E06               	movlw	high f_open@path
 28249   0125DA  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 28250   0125DC  0ED4               	movlw	low f_open@fs
 28251   0125DE  6F83               	movwf	mount_volume@rfs& (0+255),b
 28252   0125E0  0E06               	movlw	high f_open@fs
 28253   0125E2  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 28254   0125E4  C6B3  F685         	movff	f_open@mode,mount_volume@mode
 28255   0125E8  EC00  F080         	call	_mount_volume	;wreg free
 28256   0125EC  0106               	movlb	6	; () banked
 28257   0125EE  6FD6               	movwf	f_open@res& (0+255),b
 28258   0125F0                     
 28259                           ; BSR set to: 6
 28260                           ;../fatfs/ff.c: 3741:  if (res == FR_OK) {
 28261   0125F0  51D6               	movf	f_open@res& (0+255),w,b
 28262   0125F2  A4D8               	btfss	status,2,c
 28263   0125F4  EFFE  F092         	goto	u31751
 28264   0125F8  EF00  F093         	goto	u31750
 28265   0125FC                     u31751:
 28266   0125FC  EF8A  F096         	goto	l1896
 28267   012600                     u31750:
 28268   012600                     
 28269                           ; BSR set to: 6
 28270                           ;../fatfs/ff.c: 3742:   dj.obj.fs = fs;
 28271   012600  C6D4  F6D7         	movff	f_open@fs,f_open@dj
 28272   012604  C6D5  F6D8         	movff	f_open@fs+1,f_open@dj+1
 28273   012608                     
 28274                           ; BSR set to: 6
 28275                           ;../fatfs/ff.c: 3744:   res = follow_path(&dj, path);
 28276   012608  0ED7               	movlw	low f_open@dj
 28277   01260A  6F84               	movwf	follow_path@dp& (0+255),b
 28278   01260C  0E06               	movlw	high f_open@dj
 28279   01260E  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 28280   012610  C6B1  F686         	movff	f_open@path,follow_path@path
 28281   012614  C6B2  F687         	movff	f_open@path+1,follow_path@path+1
 28282   012618  EC61  F0C4         	call	_follow_path	;wreg free
 28283   01261C  0106               	movlb	6	; () banked
 28284   01261E  6FD6               	movwf	f_open@res& (0+255),b
 28285   012620                     
 28286                           ; BSR set to: 6
 28287                           ;../fatfs/ff.c: 3746:   if (res == FR_OK) {
 28288   012620  51D6               	movf	f_open@res& (0+255),w,b
 28289   012622  A4D8               	btfss	status,2,c
 28290   012624  EF16  F093         	goto	u31761
 28291   012628  EF18  F093         	goto	u31760
 28292   01262C                     u31761:
 28293   01262C  EF21  F093         	goto	l23141
 28294   012630                     u31760:
 28295   012630                     
 28296                           ; BSR set to: 6
 28297                           ;../fatfs/ff.c: 3747:    if (dj.fn[11] & 0x80) {
 28298   012630  AFFE               	btfss	(f_open@dj+39)& (0+255),7,b
 28299   012632  EF1D  F093         	goto	u31771
 28300   012636  EF1F  F093         	goto	u31770
 28301   01263A                     u31771:
 28302   01263A  EF21  F093         	goto	l23141
 28303   01263E                     u31770:
 28304   01263E                     
 28305                           ; BSR set to: 6
 28306                           ;../fatfs/ff.c: 3748:     res = FR_INVALID_NAME;
 28307   01263E  0E06               	movlw	6
 28308   012640  6FD6               	movwf	f_open@res& (0+255),b
 28309   012642                     l23141:
 28310                           
 28311                           ; BSR set to: 6
 28312                           ;../fatfs/ff.c: 3757:   if (mode & (0x08 | 0x10 | 0x04)) {
 28313   012642  C6B3  F6B4         	movff	f_open@mode,??_f_open
 28314   012646  0E1C               	movlw	28
 28315   012648  17B4               	andwf	??_f_open& (0+255),f,b
 28316   01264A  B4D8               	btfsc	status,2,c
 28317   01264C  EF2A  F093         	goto	u31781
 28318   012650  EF2C  F093         	goto	u31780
 28319   012654                     u31781:
 28320   012654  EF47  F094         	goto	l23187
 28321   012658                     u31780:
 28322   012658                     
 28323                           ; BSR set to: 6
 28324                           ;../fatfs/ff.c: 3758:    if (res != FR_OK) {
 28325   012658  51D6               	movf	f_open@res& (0+255),w,b
 28326   01265A  B4D8               	btfsc	status,2,c
 28327   01265C  EF32  F093         	goto	u31791
 28328   012660  EF34  F093         	goto	u31790
 28329   012664                     u31791:
 28330   012664  EF48  F093         	goto	l23151
 28331   012668                     u31790:
 28332   012668                     
 28333                           ; BSR set to: 6
 28334                           ;../fatfs/ff.c: 3759:     if (res == FR_NO_FILE) {
 28335   012668  0E04               	movlw	4
 28336   01266A  19D6               	xorwf	f_open@res& (0+255),w,b
 28337   01266C  A4D8               	btfss	status,2,c
 28338   01266E  EF3B  F093         	goto	u31801
 28339   012672  EF3D  F093         	goto	u31800
 28340   012676                     u31801:
 28341   012676  EF45  F093         	goto	l23149
 28342   01267A                     u31800:
 28343   01267A                     
 28344                           ; BSR set to: 6
 28345                           ;../fatfs/ff.c: 3763:      res = dir_register(&dj);
 28346   01267A  0ED7               	movlw	low f_open@dj
 28347   01267C  6F88               	movwf	dir_register@dp& (0+255),b
 28348   01267E  0E06               	movlw	high f_open@dj
 28349   012680  6F89               	movwf	(dir_register@dp+1)& (0+255),b
 28350   012682  ECEE  F0ED         	call	_dir_register	;wreg free
 28351   012686  0106               	movlb	6	; () banked
 28352   012688  6FD6               	movwf	f_open@res& (0+255),b
 28353   01268A                     l23149:
 28354                           
 28355                           ; BSR set to: 6
 28356                           ;../fatfs/ff.c: 3766:     mode |= 0x08;
 28357   01268A  87B3               	bsf	f_open@mode& (0+255),3,b
 28358                           
 28359                           ;../fatfs/ff.c: 3767:    }
 28360   01268C  EF60  F093         	goto	l1902
 28361   012690                     l23151:
 28362                           
 28363                           ; BSR set to: 6
 28364                           ;../fatfs/ff.c: 3769:     if (dj.obj.attr & (0x01 | 0x10)) {
 28365   012690  C6DB  F6B4         	movff	f_open@dj+4,??_f_open
 28366   012694  0E11               	movlw	17
 28367   012696  17B4               	andwf	??_f_open& (0+255),f,b
 28368   012698  B4D8               	btfsc	status,2,c
 28369   01269A  EF51  F093         	goto	u31811
 28370   01269E  EF53  F093         	goto	u31810
 28371   0126A2                     u31811:
 28372   0126A2  EF57  F093         	goto	l1903
 28373   0126A6                     u31810:
 28374   0126A6                     
 28375                           ; BSR set to: 6
 28376                           ;../fatfs/ff.c: 3770:      res = FR_DENIED;
 28377   0126A6  0E07               	movlw	7
 28378   0126A8  6FD6               	movwf	f_open@res& (0+255),b
 28379                           
 28380                           ;../fatfs/ff.c: 3771:     } else {
 28381   0126AA  EF60  F093         	goto	l1902
 28382   0126AE                     l1903:
 28383                           
 28384                           ; BSR set to: 6
 28385                           ;../fatfs/ff.c: 3772:      if (mode & 0x04) res = FR_EXIST;
 28386   0126AE  A5B3               	btfss	f_open@mode& (0+255),2,b
 28387   0126B0  EF5C  F093         	goto	u31821
 28388   0126B4  EF5E  F093         	goto	u31820
 28389   0126B8                     u31821:
 28390   0126B8  EF60  F093         	goto	l1902
 28391   0126BC                     u31820:
 28392   0126BC                     
 28393                           ; BSR set to: 6
 28394   0126BC  0E08               	movlw	8
 28395   0126BE  6FD6               	movwf	f_open@res& (0+255),b
 28396   0126C0                     l1902:
 28397                           
 28398                           ; BSR set to: 6
 28399                           ;../fatfs/ff.c: 3775:    if (res == FR_OK && (mode & 0x08)) {
 28400   0126C0  51D6               	movf	f_open@res& (0+255),w,b
 28401   0126C2  A4D8               	btfss	status,2,c
 28402   0126C4  EF66  F093         	goto	u31831
 28403   0126C8  EF68  F093         	goto	u31830
 28404   0126CC                     u31831:
 28405   0126CC  EF6A  F094         	goto	l1909
 28406   0126D0                     u31830:
 28407   0126D0                     
 28408                           ; BSR set to: 6
 28409   0126D0  A7B3               	btfss	f_open@mode& (0+255),3,b
 28410   0126D2  EF6D  F093         	goto	u31841
 28411   0126D6  EF6F  F093         	goto	u31840
 28412   0126DA                     u31841:
 28413   0126DA  EF6A  F094         	goto	l1909
 28414   0126DE                     u31840:
 28415   0126DE                     
 28416                           ; BSR set to: 6
 28417                           ;../fatfs/ff.c: 3794:     {;../fatfs/ff.c: 3796:      tm = get_fattime();
 28418   0126DE  EC0E  F001         	call	_get_fattime	;wreg free
 28419   0126E2  C504  F6C0         	movff	?_get_fattime,f_open@tm
 28420   0126E6  C505  F6C1         	movff	?_get_fattime+1,f_open@tm+1
 28421   0126EA  C506  F6C2         	movff	?_get_fattime+2,f_open@tm+2
 28422   0126EE  C507  F6C3         	movff	?_get_fattime+3,f_open@tm+3
 28423   0126F2                     
 28424                           ;../fatfs/ff.c: 3797:      st_dword(dj.dir + 14, tm);
 28425   0126F2  0E0E               	movlw	14
 28426   0126F4  0106               	movlb	6	; () banked
 28427   0126F6  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28428   0126F8  6E04               	movwf	st_dword@ptr^(0+1280),c
 28429   0126FA  0E00               	movlw	0
 28430   0126FC  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28431   0126FE  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28432   012700  C6C0  F506         	movff	f_open@tm,st_dword@val
 28433   012704  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 28434   012708  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 28435   01270C  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 28436   012710  ECDD  F0FA         	call	_st_dword	;wreg free
 28437   012714                     
 28438                           ;../fatfs/ff.c: 3798:      st_dword(dj.dir + 22, tm);
 28439   012714  0E16               	movlw	22
 28440   012716  0106               	movlb	6	; () banked
 28441   012718  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28442   01271A  6E04               	movwf	st_dword@ptr^(0+1280),c
 28443   01271C  0E00               	movlw	0
 28444   01271E  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28445   012720  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28446   012722  C6C0  F506         	movff	f_open@tm,st_dword@val
 28447   012726  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 28448   01272A  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 28449   01272E  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 28450   012732  ECDD  F0FA         	call	_st_dword	;wreg free
 28451   012736                     
 28452                           ;../fatfs/ff.c: 3799:      cl = ld_clust(fs, dj.dir);
 28453   012736  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 28454   01273A  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 28455   01273E  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 28456   012742  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 28457   012746  EC3A  F0F9         	call	_ld_clust	;wreg free
 28458   01274A  C50B  F6C4         	movff	?_ld_clust,f_open@cl
 28459   01274E  C50C  F6C5         	movff	?_ld_clust+1,f_open@cl+1
 28460   012752  C50D  F6C6         	movff	?_ld_clust+2,f_open@cl+2
 28461   012756  C50E  F6C7         	movff	?_ld_clust+3,f_open@cl+3
 28462   01275A                     
 28463                           ;../fatfs/ff.c: 3800:      dj.dir[11] = 0x20;
 28464   01275A  0106               	movlb	6	; () banked
 28465   01275C  EE20 F00B          	lfsr	2,11
 28466   012760  51F1               	movf	(f_open@dj+26)& (0+255),w,b
 28467   012762  26D9               	addwf	fsr2l,f,c
 28468   012764  51F2               	movf	(f_open@dj+27)& (0+255),w,b
 28469   012766  22DA               	addwfc	fsr2h,f,c
 28470   012768  0E20               	movlw	32
 28471   01276A  6EDF               	movwf	indf2,c
 28472   01276C                     
 28473                           ; BSR set to: 6
 28474                           ;../fatfs/ff.c: 3801:      st_clust(fs, dj.dir, 0);
 28475   01276C  C6D4  F508         	movff	f_open@fs,st_clust@fs
 28476   012770  C6D5  F509         	movff	f_open@fs+1,st_clust@fs+1
 28477   012774  C6F1  F50A         	movff	f_open@dj+26,st_clust@dir
 28478   012778  C6F2  F50B         	movff	f_open@dj+27,st_clust@dir+1
 28479   01277C  0E00               	movlw	0
 28480   01277E  6E0C               	movwf	st_clust@cl^(0+1280),c
 28481   012780  0E00               	movlw	0
 28482   012782  6E0D               	movwf	(st_clust@cl+1)^(0+1280),c
 28483   012784  0E00               	movlw	0
 28484   012786  6E0E               	movwf	(st_clust@cl+2)^(0+1280),c
 28485   012788  0E00               	movlw	0
 28486   01278A  6E0F               	movwf	(st_clust@cl+3)^(0+1280),c
 28487   01278C  EC28  F0FD         	call	_st_clust	;wreg free
 28488   012790                     
 28489                           ;../fatfs/ff.c: 3802:      st_dword(dj.dir + 28, 0);
 28490   012790  0E1C               	movlw	28
 28491   012792  0106               	movlb	6	; () banked
 28492   012794  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28493   012796  6E04               	movwf	st_dword@ptr^(0+1280),c
 28494   012798  0E00               	movlw	0
 28495   01279A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28496   01279C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 28497   01279E  0E00               	movlw	0
 28498   0127A0  6E06               	movwf	st_dword@val^(0+1280),c
 28499   0127A2  0E00               	movlw	0
 28500   0127A4  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 28501   0127A6  0E00               	movlw	0
 28502   0127A8  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 28503   0127AA  0E00               	movlw	0
 28504   0127AC  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 28505   0127AE  ECDD  F0FA         	call	_st_dword	;wreg free
 28506   0127B2                     
 28507                           ;../fatfs/ff.c: 3803:      fs->wflag = 1;
 28508   0127B2  0106               	movlb	6	; () banked
 28509   0127B4  EE20 F004          	lfsr	2,4
 28510   0127B8  51D4               	movf	f_open@fs& (0+255),w,b
 28511   0127BA  26D9               	addwf	fsr2l,f,c
 28512   0127BC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28513   0127BE  22DA               	addwfc	fsr2h,f,c
 28514   0127C0  0E01               	movlw	1
 28515   0127C2  6EDF               	movwf	indf2,c
 28516   0127C4                     
 28517                           ; BSR set to: 6
 28518                           ;../fatfs/ff.c: 3804:      if (cl != 0) {
 28519   0127C4  51C4               	movf	f_open@cl& (0+255),w,b
 28520   0127C6  11C5               	iorwf	(f_open@cl+1)& (0+255),w,b
 28521   0127C8  11C6               	iorwf	(f_open@cl+2)& (0+255),w,b
 28522   0127CA  11C7               	iorwf	(f_open@cl+3)& (0+255),w,b
 28523   0127CC  B4D8               	btfsc	status,2,c
 28524   0127CE  EFEB  F093         	goto	u31851
 28525   0127D2  EFED  F093         	goto	u31850
 28526   0127D6                     u31851:
 28527   0127D6  EF6A  F094         	goto	l1909
 28528   0127DA                     u31850:
 28529   0127DA                     
 28530                           ; BSR set to: 6
 28531                           ;../fatfs/ff.c: 3805:       sc = fs->winsect;
 28532   0127DA  EE20 F030          	lfsr	2,48
 28533   0127DE  51D4               	movf	f_open@fs& (0+255),w,b
 28534   0127E0  26D9               	addwf	fsr2l,f,c
 28535   0127E2  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28536   0127E4  22DA               	addwfc	fsr2h,f,c
 28537   0127E6  C4DE F6C8          	movff	postinc2,f_open@sc
 28538   0127EA  C4DE F6C9          	movff	postinc2,f_open@sc+1
 28539   0127EE  C4DE F6CA          	movff	postinc2,f_open@sc+2
 28540   0127F2  C4DE F6CB          	movff	postinc2,f_open@sc+3
 28541   0127F6                     
 28542                           ; BSR set to: 6
 28543                           ;../fatfs/ff.c: 3806:       res = remove_chain(&dj.obj, cl, 0);
 28544   0127F6  0ED7               	movlw	low f_open@dj
 28545   0127F8  6F45               	movwf	remove_chain@obj& (0+255),b
 28546   0127FA  0E06               	movlw	high f_open@dj
 28547   0127FC  6F46               	movwf	(remove_chain@obj+1)& (0+255),b
 28548   0127FE  C6C4  F647         	movff	f_open@cl,remove_chain@clst
 28549   012802  C6C5  F648         	movff	f_open@cl+1,remove_chain@clst+1
 28550   012806  C6C6  F649         	movff	f_open@cl+2,remove_chain@clst+2
 28551   01280A  C6C7  F64A         	movff	f_open@cl+3,remove_chain@clst+3
 28552   01280E  0E00               	movlw	0
 28553   012810  6F4B               	movwf	remove_chain@pclst& (0+255),b
 28554   012812  0E00               	movlw	0
 28555   012814  6F4C               	movwf	(remove_chain@pclst+1)& (0+255),b
 28556   012816  0E00               	movlw	0
 28557   012818  6F4D               	movwf	(remove_chain@pclst+2)& (0+255),b
 28558   01281A  0E00               	movlw	0
 28559   01281C  6F4E               	movwf	(remove_chain@pclst+3)& (0+255),b
 28560   01281E  EC54  F0CD         	call	_remove_chain	;wreg free
 28561   012822  0106               	movlb	6	; () banked
 28562   012824  6FD6               	movwf	f_open@res& (0+255),b
 28563   012826                     
 28564                           ; BSR set to: 6
 28565                           ;../fatfs/ff.c: 3807:       if (res == FR_OK) {
 28566   012826  51D6               	movf	f_open@res& (0+255),w,b
 28567   012828  A4D8               	btfss	status,2,c
 28568   01282A  EF19  F094         	goto	u31861
 28569   01282E  EF1B  F094         	goto	u31860
 28570   012832                     u31861:
 28571   012832  EF6A  F094         	goto	l1909
 28572   012836                     u31860:
 28573   012836                     
 28574                           ; BSR set to: 6
 28575                           ;../fatfs/ff.c: 3808:        res = move_window(fs, sc);
 28576   012836  C6D4  F61A         	movff	f_open@fs,move_window@fs
 28577   01283A  C6D5  F61B         	movff	f_open@fs+1,move_window@fs+1
 28578   01283E  C6C8  F61C         	movff	f_open@sc,move_window@sect
 28579   012842  C6C9  F61D         	movff	f_open@sc+1,move_window@sect+1
 28580   012846  C6CA  F61E         	movff	f_open@sc+2,move_window@sect+2
 28581   01284A  C6CB  F61F         	movff	f_open@sc+3,move_window@sect+3
 28582   01284E  ECAB  F0EF         	call	_move_window	;wreg free
 28583   012852  0106               	movlb	6	; () banked
 28584   012854  6FD6               	movwf	f_open@res& (0+255),b
 28585   012856                     
 28586                           ; BSR set to: 6
 28587                           ;../fatfs/ff.c: 3809:        fs->last_clst = cl - 1;
 28588   012856  0EFF               	movlw	255
 28589   012858  25C4               	addwf	f_open@cl& (0+255),w,b
 28590   01285A  6FB4               	movwf	??_f_open& (0+255),b
 28591   01285C  0EFF               	movlw	255
 28592   01285E  21C5               	addwfc	(f_open@cl+1)& (0+255),w,b
 28593   012860  6FB5               	movwf	(??_f_open+1)& (0+255),b
 28594   012862  0EFF               	movlw	255
 28595   012864  21C6               	addwfc	(f_open@cl+2)& (0+255),w,b
 28596   012866  6FB6               	movwf	(??_f_open+2)& (0+255),b
 28597   012868  0EFF               	movlw	255
 28598   01286A  21C7               	addwfc	(f_open@cl+3)& (0+255),w,b
 28599   01286C  6FB7               	movwf	(??_f_open+3)& (0+255),b
 28600   01286E  EE20 F00C          	lfsr	2,12
 28601   012872  51D4               	movf	f_open@fs& (0+255),w,b
 28602   012874  26D9               	addwf	fsr2l,f,c
 28603   012876  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28604   012878  22DA               	addwfc	fsr2h,f,c
 28605   01287A  C6B4  F4DE         	movff	??_f_open,postinc2
 28606   01287E  C6B5  F4DE         	movff	??_f_open+1,postinc2
 28607   012882  C6B6  F4DE         	movff	??_f_open+2,postinc2
 28608   012886  C6B7  F4DE         	movff	??_f_open+3,postinc2
 28609   01288A  EF6A  F094         	goto	l1909
 28610   01288E                     l23187:
 28611                           
 28612                           ; BSR set to: 6
 28613                           ;../fatfs/ff.c: 3816:    if (res == FR_OK) {
 28614   01288E  51D6               	movf	f_open@res& (0+255),w,b
 28615   012890  A4D8               	btfss	status,2,c
 28616   012892  EF4D  F094         	goto	u31871
 28617   012896  EF4F  F094         	goto	u31870
 28618   01289A                     u31871:
 28619   01289A  EF6A  F094         	goto	l1909
 28620   01289E                     u31870:
 28621   01289E                     
 28622                           ; BSR set to: 6
 28623                           ;../fatfs/ff.c: 3817:     if (dj.obj.attr & 0x10) {
 28624   01289E  A9DB               	btfss	(f_open@dj+4)& (0+255),4,b
 28625   0128A0  EF54  F094         	goto	u31881
 28626   0128A4  EF56  F094         	goto	u31880
 28627   0128A8                     u31881:
 28628   0128A8  EF5A  F094         	goto	l1911
 28629   0128AC                     u31880:
 28630   0128AC                     
 28631                           ; BSR set to: 6
 28632                           ;../fatfs/ff.c: 3818:      res = FR_NO_FILE;
 28633   0128AC  0E04               	movlw	4
 28634   0128AE  6FD6               	movwf	f_open@res& (0+255),b
 28635                           
 28636                           ;../fatfs/ff.c: 3819:     } else {
 28637   0128B0  EF6A  F094         	goto	l1909
 28638   0128B4                     l1911:
 28639                           
 28640                           ; BSR set to: 6
 28641                           ;../fatfs/ff.c: 3820:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
 28642   0128B4  A3B3               	btfss	f_open@mode& (0+255),1,b
 28643   0128B6  EF5F  F094         	goto	u31891
 28644   0128BA  EF61  F094         	goto	u31890
 28645   0128BE                     u31891:
 28646   0128BE  EF6A  F094         	goto	l1909
 28647   0128C2                     u31890:
 28648   0128C2                     
 28649                           ; BSR set to: 6
 28650   0128C2  A1DB               	btfss	(f_open@dj+4)& (0+255),0,b
 28651   0128C4  EF66  F094         	goto	u31901
 28652   0128C8  EF68  F094         	goto	u31900
 28653   0128CC                     u31901:
 28654   0128CC  EF6A  F094         	goto	l1909
 28655   0128D0                     u31900:
 28656   0128D0                     
 28657                           ; BSR set to: 6
 28658                           ;../fatfs/ff.c: 3821:       res = FR_DENIED;
 28659   0128D0  0E07               	movlw	7
 28660   0128D2  6FD6               	movwf	f_open@res& (0+255),b
 28661   0128D4                     l1909:
 28662                           
 28663                           ; BSR set to: 6
 28664                           ;../fatfs/ff.c: 3826:   if (res == FR_OK) {
 28665   0128D4  51D6               	movf	f_open@res& (0+255),w,b
 28666   0128D6  A4D8               	btfss	status,2,c
 28667   0128D8  EF70  F094         	goto	u31911
 28668   0128DC  EF72  F094         	goto	u31910
 28669   0128E0                     u31911:
 28670   0128E0  EF98  F094         	goto	l23205
 28671   0128E4                     u31910:
 28672   0128E4                     
 28673                           ; BSR set to: 6
 28674                           ;../fatfs/ff.c: 3827:    if (mode & 0x08) mode |= 0x40;
 28675   0128E4  A7B3               	btfss	f_open@mode& (0+255),3,b
 28676   0128E6  EF77  F094         	goto	u31921
 28677   0128EA  EF79  F094         	goto	u31920
 28678   0128EE                     u31921:
 28679   0128EE  EF7A  F094         	goto	l23201
 28680   0128F2                     u31920:
 28681   0128F2                     
 28682                           ; BSR set to: 6
 28683   0128F2  8DB3               	bsf	f_open@mode& (0+255),6,b
 28684   0128F4                     l23201:
 28685                           
 28686                           ; BSR set to: 6
 28687                           ;../fatfs/ff.c: 3828:    fp->dir_sect = fs->winsect;
 28688   0128F4  EE20 F030          	lfsr	2,48
 28689   0128F8  51D4               	movf	f_open@fs& (0+255),w,b
 28690   0128FA  26D9               	addwf	fsr2l,f,c
 28691   0128FC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28692   0128FE  22DA               	addwfc	fsr2h,f,c
 28693   012900  EE10 F01C          	lfsr	1,28
 28694   012904  51AF               	movf	f_open@fp& (0+255),w,b
 28695   012906  26E1               	addwf	fsr1l,f,c
 28696   012908  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28697   01290A  22E2               	addwfc	fsr1h,f,c
 28698   01290C  C4DE F4E6          	movff	postinc2,postinc1
 28699   012910  C4DE F4E6          	movff	postinc2,postinc1
 28700   012914  C4DE F4E6          	movff	postinc2,postinc1
 28701   012918  C4DE F4E6          	movff	postinc2,postinc1
 28702   01291C                     
 28703                           ; BSR set to: 6
 28704                           ;../fatfs/ff.c: 3829:    fp->dir_ptr = dj.dir;
 28705   01291C  EE20 F020          	lfsr	2,32
 28706   012920  51AF               	movf	f_open@fp& (0+255),w,b
 28707   012922  26D9               	addwf	fsr2l,f,c
 28708   012924  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28709   012926  22DA               	addwfc	fsr2h,f,c
 28710   012928  C6F1  F4DE         	movff	f_open@dj+26,postinc2
 28711   01292C  C6F2  F4DD         	movff	f_open@dj+27,postdec2
 28712   012930                     l23205:
 28713                           
 28714                           ; BSR set to: 6
 28715                           ;../fatfs/ff.c: 3847:   if (res == FR_OK) {
 28716   012930  51D6               	movf	f_open@res& (0+255),w,b
 28717   012932  A4D8               	btfss	status,2,c
 28718   012934  EF9E  F094         	goto	u31931
 28719   012938  EFA0  F094         	goto	u31930
 28720   01293C                     u31931:
 28721   01293C  EF8A  F096         	goto	l1896
 28722   012940                     u31930:
 28723   012940                     
 28724                           ; BSR set to: 6
 28725                           ;../fatfs/ff.c: 3856:    {;../fatfs/ff.c: 3857:     fp->obj.sclust = ld_clust(fs, dj.dir
      +                          );
 28726   012940  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 28727   012944  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 28728   012948  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 28729   01294C  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 28730   012950  EC3A  F0F9         	call	_ld_clust	;wreg free
 28731   012954  0106               	movlb	6	; () banked
 28732   012956  EE20 F006          	lfsr	2,6
 28733   01295A  51AF               	movf	f_open@fp& (0+255),w,b
 28734   01295C  26D9               	addwf	fsr2l,f,c
 28735   01295E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28736   012960  22DA               	addwfc	fsr2h,f,c
 28737   012962  C50B  F4DE         	movff	?_ld_clust,postinc2
 28738   012966  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 28739   01296A  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 28740   01296E  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 28741                           
 28742                           ;../fatfs/ff.c: 3858:     fp->obj.objsize = ld_dword(dj.dir + 28);
 28743   012972  0E1C               	movlw	28
 28744   012974  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 28745   012976  6E04               	movwf	ld_dword@ptr^(0+1280),c
 28746   012978  0E00               	movlw	0
 28747   01297A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 28748   01297C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 28749   01297E  ECC7  F0F2         	call	_ld_dword	;wreg free
 28750   012982  0106               	movlb	6	; () banked
 28751   012984  EE20 F00A          	lfsr	2,10
 28752   012988  51AF               	movf	f_open@fp& (0+255),w,b
 28753   01298A  26D9               	addwf	fsr2l,f,c
 28754   01298C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28755   01298E  22DA               	addwfc	fsr2h,f,c
 28756   012990  C504  F4DE         	movff	?_ld_dword,postinc2
 28757   012994  C505  F4DE         	movff	?_ld_dword+1,postinc2
 28758   012998  C506  F4DE         	movff	?_ld_dword+2,postinc2
 28759   01299C  C507  F4DE         	movff	?_ld_dword+3,postinc2
 28760   0129A0                     
 28761                           ; BSR set to: 6
 28762                           ;../fatfs/ff.c: 3859:    };../fatfs/ff.c: 3863:    fp->obj.fs = fs;
 28763   0129A0  C6AF  F4D9         	movff	f_open@fp,fsr2l
 28764   0129A4  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 28765   0129A8  C6D4  F4DE         	movff	f_open@fs,postinc2
 28766   0129AC  C6D5  F4DD         	movff	f_open@fs+1,postdec2
 28767   0129B0                     
 28768                           ; BSR set to: 6
 28769                           ;../fatfs/ff.c: 3864:    fp->obj.id = fs->id;
 28770   0129B0  EE20 F006          	lfsr	2,6
 28771   0129B4  51D4               	movf	f_open@fs& (0+255),w,b
 28772   0129B6  26D9               	addwf	fsr2l,f,c
 28773   0129B8  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28774   0129BA  22DA               	addwfc	fsr2h,f,c
 28775   0129BC  EE10 F002          	lfsr	1,2
 28776   0129C0  51AF               	movf	f_open@fp& (0+255),w,b
 28777   0129C2  26E1               	addwf	fsr1l,f,c
 28778   0129C4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28779   0129C6  22E2               	addwfc	fsr1h,f,c
 28780   0129C8  C4DE F4E6          	movff	postinc2,postinc1
 28781   0129CC  C4DD F4E5          	movff	postdec2,postdec1
 28782   0129D0                     
 28783                           ; BSR set to: 6
 28784                           ;../fatfs/ff.c: 3865:    fp->flag = mode;
 28785   0129D0  EE20 F00E          	lfsr	2,14
 28786   0129D4  51AF               	movf	f_open@fp& (0+255),w,b
 28787   0129D6  26D9               	addwf	fsr2l,f,c
 28788   0129D8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28789   0129DA  22DA               	addwfc	fsr2h,f,c
 28790   0129DC  C6B3  F4DF         	movff	f_open@mode,indf2
 28791   0129E0                     
 28792                           ; BSR set to: 6
 28793                           ;../fatfs/ff.c: 3866:    fp->err = 0;
 28794   0129E0  EE20 F00F          	lfsr	2,15
 28795   0129E4  51AF               	movf	f_open@fp& (0+255),w,b
 28796   0129E6  26D9               	addwf	fsr2l,f,c
 28797   0129E8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28798   0129EA  22DA               	addwfc	fsr2h,f,c
 28799   0129EC  6ADF               	clrf	indf2,c
 28800   0129EE                     
 28801                           ; BSR set to: 6
 28802                           ;../fatfs/ff.c: 3867:    fp->sect = 0;
 28803   0129EE  EE20 F018          	lfsr	2,24
 28804   0129F2  51AF               	movf	f_open@fp& (0+255),w,b
 28805   0129F4  26D9               	addwf	fsr2l,f,c
 28806   0129F6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28807   0129F8  22DA               	addwfc	fsr2h,f,c
 28808   0129FA  6ADE               	clrf	postinc2,c
 28809   0129FC  6ADE               	clrf	postinc2,c
 28810   0129FE  6ADE               	clrf	postinc2,c
 28811   012A00  6ADD               	clrf	postdec2,c
 28812   012A02                     
 28813                           ; BSR set to: 6
 28814                           ;../fatfs/ff.c: 3868:    fp->fptr = 0;
 28815   012A02  EE20 F010          	lfsr	2,16
 28816   012A06  51AF               	movf	f_open@fp& (0+255),w,b
 28817   012A08  26D9               	addwf	fsr2l,f,c
 28818   012A0A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28819   012A0C  22DA               	addwfc	fsr2h,f,c
 28820   012A0E  6ADE               	clrf	postinc2,c
 28821   012A10  6ADE               	clrf	postinc2,c
 28822   012A12  6ADE               	clrf	postinc2,c
 28823   012A14  6ADD               	clrf	postdec2,c
 28824   012A16                     
 28825                           ; BSR set to: 6
 28826                           ;../fatfs/ff.c: 3871:    memset(fp->buf, 0, sizeof fp->buf);
 28827   012A16  0E22               	movlw	34
 28828   012A18  25AF               	addwf	f_open@fp& (0+255),w,b
 28829   012A1A  6E04               	movwf	memset@dest^(0+1280),c
 28830   012A1C  0E00               	movlw	0
 28831   012A1E  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 28832   012A20  6E05               	movwf	(memset@dest+1)^(0+1280),c
 28833   012A22  0E00               	movlw	0
 28834   012A24  6E07               	movwf	(memset@c+1)^(0+1280),c
 28835   012A26  0E00               	movlw	0
 28836   012A28  6E06               	movwf	memset@c^(0+1280),c
 28837   012A2A  0E02               	movlw	2
 28838   012A2C  6E09               	movwf	(memset@n+1)^(0+1280),c
 28839   012A2E  0E00               	movlw	0
 28840   012A30  6E08               	movwf	memset@n^(0+1280),c
 28841   012A32  EC14  F0FF         	call	_memset	;wreg free
 28842   012A36                     
 28843                           ;../fatfs/ff.c: 3873:    if ((mode & 0x20) && fp->obj.objsize > 0) {
 28844   012A36  0106               	movlb	6	; () banked
 28845   012A38  ABB3               	btfss	f_open@mode& (0+255),5,b
 28846   012A3A  EF21  F095         	goto	u31941
 28847   012A3E  EF23  F095         	goto	u31940
 28848   012A42                     u31941:
 28849   012A42  EF8A  F096         	goto	l1896
 28850   012A46                     u31940:
 28851   012A46                     
 28852                           ; BSR set to: 6
 28853   012A46  EE20 F00A          	lfsr	2,10
 28854   012A4A  51AF               	movf	f_open@fp& (0+255),w,b
 28855   012A4C  26D9               	addwf	fsr2l,f,c
 28856   012A4E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28857   012A50  22DA               	addwfc	fsr2h,f,c
 28858   012A52  50DE               	movf	postinc2,w,c
 28859   012A54  10DE               	iorwf	postinc2,w,c
 28860   012A56  10DE               	iorwf	postinc2,w,c
 28861   012A58  10DE               	iorwf	postinc2,w,c
 28862   012A5A  B4D8               	btfsc	status,2,c
 28863   012A5C  EF32  F095         	goto	u31951
 28864   012A60  EF34  F095         	goto	u31950
 28865   012A64                     u31951:
 28866   012A64  EF8A  F096         	goto	l1896
 28867   012A68                     u31950:
 28868   012A68                     
 28869                           ; BSR set to: 6
 28870                           ;../fatfs/ff.c: 3874:     fp->fptr = fp->obj.objsize;
 28871   012A68  EE20 F00A          	lfsr	2,10
 28872   012A6C  51AF               	movf	f_open@fp& (0+255),w,b
 28873   012A6E  26D9               	addwf	fsr2l,f,c
 28874   012A70  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28875   012A72  22DA               	addwfc	fsr2h,f,c
 28876   012A74  EE10 F010          	lfsr	1,16
 28877   012A78  51AF               	movf	f_open@fp& (0+255),w,b
 28878   012A7A  26E1               	addwf	fsr1l,f,c
 28879   012A7C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28880   012A7E  22E2               	addwfc	fsr1h,f,c
 28881   012A80  C4DE F4E6          	movff	postinc2,postinc1
 28882   012A84  C4DE F4E6          	movff	postinc2,postinc1
 28883   012A88  C4DE F4E6          	movff	postinc2,postinc1
 28884   012A8C  C4DE F4E6          	movff	postinc2,postinc1
 28885   012A90                     
 28886                           ; BSR set to: 6
 28887                           ;../fatfs/ff.c: 3875:     bcs = (DWORD)fs->csize * ((UINT)512);
 28888   012A90  EE20 F00A          	lfsr	2,10
 28889   012A94  51D4               	movf	f_open@fs& (0+255),w,b
 28890   012A96  26D9               	addwf	fsr2l,f,c
 28891   012A98  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 28892   012A9A  22DA               	addwfc	fsr2h,f,c
 28893   012A9C  C4DE F6B4          	movff	postinc2,??_f_open
 28894   012AA0  C4DD F6B5          	movff	postdec2,??_f_open+1
 28895   012AA4  51B4               	movf	??_f_open& (0+255),w,b
 28896   012AA6  6FB6               	movwf	(??_f_open+2)& (0+255),b
 28897   012AA8  51B5               	movf	(??_f_open+1)& (0+255),w,b
 28898   012AAA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 28899   012AAC  6BB8               	clrf	(??_f_open+4)& (0+255),b
 28900   012AAE  6BB9               	clrf	(??_f_open+5)& (0+255),b
 28901   012AB0  0E09               	movlw	9
 28902   012AB2                     u31965:
 28903   012AB2  90D8               	bcf	status,0,c
 28904   012AB4  37B6               	rlcf	(??_f_open+2)& (0+255),f,b
 28905   012AB6  37B7               	rlcf	(??_f_open+3)& (0+255),f,b
 28906   012AB8  37B8               	rlcf	(??_f_open+4)& (0+255),f,b
 28907   012ABA  37B9               	rlcf	(??_f_open+5)& (0+255),f,b
 28908   012ABC  2EE8               	decfsz	wreg,f,c
 28909   012ABE  EF59  F095         	goto	u31965
 28910   012AC2  C6B6  F6BC         	movff	??_f_open+2,f_open@bcs
 28911   012AC6  C6B7  F6BD         	movff	??_f_open+3,f_open@bcs+1
 28912   012ACA  C6B8  F6BE         	movff	??_f_open+4,f_open@bcs+2
 28913   012ACE  C6B9  F6BF         	movff	??_f_open+5,f_open@bcs+3
 28914   012AD2                     
 28915                           ; BSR set to: 6
 28916                           ;../fatfs/ff.c: 3876:     clst = fp->obj.sclust;
 28917   012AD2  EE20 F006          	lfsr	2,6
 28918   012AD6  51AF               	movf	f_open@fp& (0+255),w,b
 28919   012AD8  26D9               	addwf	fsr2l,f,c
 28920   012ADA  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28921   012ADC  22DA               	addwfc	fsr2h,f,c
 28922   012ADE  C4DE F6D0          	movff	postinc2,f_open@clst
 28923   012AE2  C4DE F6D1          	movff	postinc2,f_open@clst+1
 28924   012AE6  C4DE F6D2          	movff	postinc2,f_open@clst+2
 28925   012AEA  C4DE F6D3          	movff	postinc2,f_open@clst+3
 28926   012AEE                     
 28927                           ; BSR set to: 6
 28928                           ;../fatfs/ff.c: 3877:     for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= 
      +                          bcs) {
 28929   012AEE  EE20 F00A          	lfsr	2,10
 28930   012AF2  51AF               	movf	f_open@fp& (0+255),w,b
 28931   012AF4  26D9               	addwf	fsr2l,f,c
 28932   012AF6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 28933   012AF8  22DA               	addwfc	fsr2h,f,c
 28934   012AFA  C4DE F6CC          	movff	postinc2,f_open@ofs
 28935   012AFE  C4DE F6CD          	movff	postinc2,f_open@ofs+1
 28936   012B02  C4DE F6CE          	movff	postinc2,f_open@ofs+2
 28937   012B06  C4DE F6CF          	movff	postinc2,f_open@ofs+3
 28938   012B0A  EFC5  F095         	goto	l23247
 28939   012B0E                     l23235:
 28940                           
 28941                           ; BSR set to: 6
 28942                           ;../fatfs/ff.c: 3878:      clst = get_fat(&fp->obj, clst);
 28943   012B0E  C6AF  F624         	movff	f_open@fp,get_fat@obj
 28944   012B12  C6B0  F625         	movff	f_open@fp+1,get_fat@obj+1
 28945   012B16  C6D0  F626         	movff	f_open@clst,get_fat@clst
 28946   012B1A  C6D1  F627         	movff	f_open@clst+1,get_fat@clst+1
 28947   012B1E  C6D2  F628         	movff	f_open@clst+2,get_fat@clst+2
 28948   012B22  C6D3  F629         	movff	f_open@clst+3,get_fat@clst+3
 28949   012B26  ECF7  F0B4         	call	_get_fat	;wreg free
 28950   012B2A  C624  F6D0         	movff	?_get_fat,f_open@clst
 28951   012B2E  C625  F6D1         	movff	?_get_fat+1,f_open@clst+1
 28952   012B32  C626  F6D2         	movff	?_get_fat+2,f_open@clst+2
 28953   012B36  C627  F6D3         	movff	?_get_fat+3,f_open@clst+3
 28954   012B3A                     
 28955                           ;../fatfs/ff.c: 3879:      if (clst <= 1) res = FR_INT_ERR;
 28956   012B3A  0106               	movlb	6	; () banked
 28957   012B3C  51D3               	movf	(f_open@clst+3)& (0+255),w,b
 28958   012B3E  11D2               	iorwf	(f_open@clst+2)& (0+255),w,b
 28959   012B40  11D1               	iorwf	(f_open@clst+1)& (0+255),w,b
 28960   012B42  E107               	bnz	u31971
 28961   012B44  0E02               	movlw	2
 28962   012B46  5DD0               	subwf	f_open@clst& (0+255),w,b
 28963   012B48  B0D8               	btfsc	status,0,c
 28964   012B4A  EFA9  F095         	goto	u31971
 28965   012B4E  EFAB  F095         	goto	u31970
 28966   012B52                     u31971:
 28967   012B52  EFAD  F095         	goto	l23241
 28968   012B56                     u31970:
 28969   012B56                     
 28970                           ; BSR set to: 6
 28971   012B56  0E02               	movlw	2
 28972   012B58  6FD6               	movwf	f_open@res& (0+255),b
 28973   012B5A                     l23241:
 28974                           
 28975                           ; BSR set to: 6
 28976                           ;../fatfs/ff.c: 3880:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 28977   012B5A  29D0               	incf	f_open@clst& (0+255),w,b
 28978   012B5C  E10A               	bnz	u31981
 28979   012B5E  29D1               	incf	(f_open@clst+1)& (0+255),w,b
 28980   012B60  E108               	bnz	u31981
 28981   012B62  29D2               	incf	(f_open@clst+2)& (0+255),w,b
 28982   012B64  E106               	bnz	u31981
 28983   012B66  29D3               	incf	(f_open@clst+3)& (0+255),w,b
 28984   012B68  A4D8               	btfss	status,2,c
 28985   012B6A  EFB9  F095         	goto	u31981
 28986   012B6E  EFBB  F095         	goto	u31980
 28987   012B72                     u31981:
 28988   012B72  EFBD  F095         	goto	l23245
 28989   012B76                     u31980:
 28990   012B76                     
 28991                           ; BSR set to: 6
 28992   012B76  0E01               	movlw	1
 28993   012B78  6FD6               	movwf	f_open@res& (0+255),b
 28994   012B7A                     l23245:
 28995                           
 28996                           ; BSR set to: 6
 28997                           ;../fatfs/ff.c: 3881:     }
 28998   012B7A  51BC               	movf	f_open@bcs& (0+255),w,b
 28999   012B7C  5FCC               	subwf	f_open@ofs& (0+255),f,b
 29000   012B7E  51BD               	movf	(f_open@bcs+1)& (0+255),w,b
 29001   012B80  5BCD               	subwfb	(f_open@ofs+1)& (0+255),f,b
 29002   012B82  51BE               	movf	(f_open@bcs+2)& (0+255),w,b
 29003   012B84  5BCE               	subwfb	(f_open@ofs+2)& (0+255),f,b
 29004   012B86  51BF               	movf	(f_open@bcs+3)& (0+255),w,b
 29005   012B88  5BCF               	subwfb	(f_open@ofs+3)& (0+255),f,b
 29006   012B8A                     l23247:
 29007                           
 29008                           ; BSR set to: 6
 29009   012B8A  51D6               	movf	f_open@res& (0+255),w,b
 29010   012B8C  A4D8               	btfss	status,2,c
 29011   012B8E  EFCB  F095         	goto	u31991
 29012   012B92  EFCD  F095         	goto	u31990
 29013   012B96                     u31991:
 29014   012B96  EFDC  F095         	goto	l23251
 29015   012B9A                     u31990:
 29016   012B9A                     
 29017                           ; BSR set to: 6
 29018   012B9A  51CC               	movf	f_open@ofs& (0+255),w,b
 29019   012B9C  5DBC               	subwf	f_open@bcs& (0+255),w,b
 29020   012B9E  51CD               	movf	(f_open@ofs+1)& (0+255),w,b
 29021   012BA0  59BD               	subwfb	(f_open@bcs+1)& (0+255),w,b
 29022   012BA2  51CE               	movf	(f_open@ofs+2)& (0+255),w,b
 29023   012BA4  59BE               	subwfb	(f_open@bcs+2)& (0+255),w,b
 29024   012BA6  51CF               	movf	(f_open@ofs+3)& (0+255),w,b
 29025   012BA8  59BF               	subwfb	(f_open@bcs+3)& (0+255),w,b
 29026   012BAA  A0D8               	btfss	status,0,c
 29027   012BAC  EFDA  F095         	goto	u32001
 29028   012BB0  EFDC  F095         	goto	u32000
 29029   012BB4                     u32001:
 29030   012BB4  EF87  F095         	goto	l23235
 29031   012BB8                     u32000:
 29032   012BB8                     l23251:
 29033                           
 29034                           ; BSR set to: 6
 29035                           ;../fatfs/ff.c: 3882:     fp->clust = clst;
 29036   012BB8  EE20 F014          	lfsr	2,20
 29037   012BBC  51AF               	movf	f_open@fp& (0+255),w,b
 29038   012BBE  26D9               	addwf	fsr2l,f,c
 29039   012BC0  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29040   012BC2  22DA               	addwfc	fsr2h,f,c
 29041   012BC4  C6D0  F4DE         	movff	f_open@clst,postinc2
 29042   012BC8  C6D1  F4DE         	movff	f_open@clst+1,postinc2
 29043   012BCC  C6D2  F4DE         	movff	f_open@clst+2,postinc2
 29044   012BD0  C6D3  F4DE         	movff	f_open@clst+3,postinc2
 29045   012BD4                     
 29046                           ; BSR set to: 6
 29047                           ;../fatfs/ff.c: 3883:     if (res == FR_OK && ofs % ((UINT)512)) {
 29048   012BD4  51D6               	movf	f_open@res& (0+255),w,b
 29049   012BD6  A4D8               	btfss	status,2,c
 29050   012BD8  EFF0  F095         	goto	u32011
 29051   012BDC  EFF2  F095         	goto	u32010
 29052   012BE0                     u32011:
 29053   012BE0  EF8A  F096         	goto	l1896
 29054   012BE4                     u32010:
 29055   012BE4                     
 29056                           ; BSR set to: 6
 29057   012BE4  0EFF               	movlw	255
 29058   012BE6  15CC               	andwf	f_open@ofs& (0+255),w,b
 29059   012BE8  6FB4               	movwf	??_f_open& (0+255),b
 29060   012BEA  0E01               	movlw	1
 29061   012BEC  15CD               	andwf	(f_open@ofs+1)& (0+255),w,b
 29062   012BEE  6FB5               	movwf	(??_f_open+1)& (0+255),b
 29063   012BF0  0E00               	movlw	0
 29064   012BF2  15CE               	andwf	(f_open@ofs+2)& (0+255),w,b
 29065   012BF4  6FB6               	movwf	(??_f_open+2)& (0+255),b
 29066   012BF6  0E00               	movlw	0
 29067   012BF8  15CF               	andwf	(f_open@ofs+3)& (0+255),w,b
 29068   012BFA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 29069   012BFC  51B4               	movf	??_f_open& (0+255),w,b
 29070   012BFE  11B5               	iorwf	(??_f_open+1)& (0+255),w,b
 29071   012C00  11B6               	iorwf	(??_f_open+2)& (0+255),w,b
 29072   012C02  11B7               	iorwf	(??_f_open+3)& (0+255),w,b
 29073   012C04  B4D8               	btfsc	status,2,c
 29074   012C06  EF07  F096         	goto	u32021
 29075   012C0A  EF09  F096         	goto	u32020
 29076   012C0E                     u32021:
 29077   012C0E  EF8A  F096         	goto	l1896
 29078   012C12                     u32020:
 29079   012C12                     
 29080                           ; BSR set to: 6
 29081                           ;../fatfs/ff.c: 3884:      sc = clst2sect(fs, clst);
 29082   012C12  C6D4  F510         	movff	f_open@fs,clst2sect@fs
 29083   012C16  C6D5  F511         	movff	f_open@fs+1,clst2sect@fs+1
 29084   012C1A  C6D0  F512         	movff	f_open@clst,clst2sect@clst
 29085   012C1E  C6D1  F513         	movff	f_open@clst+1,clst2sect@clst+1
 29086   012C22  C6D2  F514         	movff	f_open@clst+2,clst2sect@clst+2
 29087   012C26  C6D3  F515         	movff	f_open@clst+3,clst2sect@clst+3
 29088   012C2A  EC7A  F0F0         	call	_clst2sect	;wreg free
 29089   012C2E  C510  F6C8         	movff	?_clst2sect,f_open@sc
 29090   012C32  C511  F6C9         	movff	?_clst2sect+1,f_open@sc+1
 29091   012C36  C512  F6CA         	movff	?_clst2sect+2,f_open@sc+2
 29092   012C3A  C513  F6CB         	movff	?_clst2sect+3,f_open@sc+3
 29093   012C3E                     
 29094                           ;../fatfs/ff.c: 3885:      if (sc == 0) {
 29095   012C3E  0106               	movlb	6	; () banked
 29096   012C40  51C8               	movf	f_open@sc& (0+255),w,b
 29097   012C42  11C9               	iorwf	(f_open@sc+1)& (0+255),w,b
 29098   012C44  11CA               	iorwf	(f_open@sc+2)& (0+255),w,b
 29099   012C46  11CB               	iorwf	(f_open@sc+3)& (0+255),w,b
 29100   012C48  A4D8               	btfss	status,2,c
 29101   012C4A  EF29  F096         	goto	u32031
 29102   012C4E  EF2B  F096         	goto	u32030
 29103   012C52                     u32031:
 29104   012C52  EF2F  F096         	goto	l23263
 29105   012C56                     u32030:
 29106   012C56                     
 29107                           ; BSR set to: 6
 29108                           ;../fatfs/ff.c: 3886:       res = FR_INT_ERR;
 29109   012C56  0E02               	movlw	2
 29110   012C58  6FD6               	movwf	f_open@res& (0+255),b
 29111                           
 29112                           ;../fatfs/ff.c: 3887:      } else {
 29113   012C5A  EF8A  F096         	goto	l1896
 29114   012C5E                     l23263:
 29115                           
 29116                           ; BSR set to: 6
 29117                           ;../fatfs/ff.c: 3888:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
 29118   012C5E  C6CC  F6B4         	movff	f_open@ofs,??_f_open
 29119   012C62  C6CD  F6B5         	movff	f_open@ofs+1,??_f_open+1
 29120   012C66  C6CE  F6B6         	movff	f_open@ofs+2,??_f_open+2
 29121   012C6A  C6CF  F6B7         	movff	f_open@ofs+3,??_f_open+3
 29122   012C6E  0E0A               	movlw	10
 29123   012C70  EF3F  F096         	goto	u32040
 29124   012C74                     u32045:
 29125   012C74  90D8               	bcf	status,0,c
 29126   012C76  33B7               	rrcf	(??_f_open+3)& (0+255),f,b
 29127   012C78  33B6               	rrcf	(??_f_open+2)& (0+255),f,b
 29128   012C7A  33B5               	rrcf	(??_f_open+1)& (0+255),f,b
 29129   012C7C  33B4               	rrcf	??_f_open& (0+255),f,b
 29130   012C7E                     u32040:
 29131   012C7E  2EE8               	decfsz	wreg,f,c
 29132   012C80  EF3A  F096         	goto	u32045
 29133   012C84  51C8               	movf	f_open@sc& (0+255),w,b
 29134   012C86  25B4               	addwf	??_f_open& (0+255),w,b
 29135   012C88  6FB8               	movwf	(??_f_open+4)& (0+255),b
 29136   012C8A  51C9               	movf	(f_open@sc+1)& (0+255),w,b
 29137   012C8C  21B5               	addwfc	(??_f_open+1)& (0+255),w,b
 29138   012C8E  6FB9               	movwf	(??_f_open+5)& (0+255),b
 29139   012C90  51CA               	movf	(f_open@sc+2)& (0+255),w,b
 29140   012C92  21B6               	addwfc	(??_f_open+2)& (0+255),w,b
 29141   012C94  6FBA               	movwf	(??_f_open+6)& (0+255),b
 29142   012C96  51CB               	movf	(f_open@sc+3)& (0+255),w,b
 29143   012C98  21B7               	addwfc	(??_f_open+3)& (0+255),w,b
 29144   012C9A  6FBB               	movwf	(??_f_open+7)& (0+255),b
 29145   012C9C  EE20 F018          	lfsr	2,24
 29146   012CA0  51AF               	movf	f_open@fp& (0+255),w,b
 29147   012CA2  26D9               	addwf	fsr2l,f,c
 29148   012CA4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29149   012CA6  22DA               	addwfc	fsr2h,f,c
 29150   012CA8  C6B8  F4DE         	movff	??_f_open+4,postinc2
 29151   012CAC  C6B9  F4DE         	movff	??_f_open+5,postinc2
 29152   012CB0  C6BA  F4DE         	movff	??_f_open+6,postinc2
 29153   012CB4  C6BB  F4DE         	movff	??_f_open+7,postinc2
 29154   012CB8                     
 29155                           ; BSR set to: 6
 29156                           ;../fatfs/ff.c: 3890:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res
      +                           = FR_DISK_ERR;
 29157   012CB8  0E22               	movlw	34
 29158   012CBA  25AF               	addwf	f_open@fp& (0+255),w,b
 29159   012CBC  6F00               	movwf	disk_read@buff& (0+255),b
 29160   012CBE  0E00               	movlw	0
 29161   012CC0  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 29162   012CC2  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 29163   012CC4  EE20 F018          	lfsr	2,24
 29164   012CC8  51AF               	movf	f_open@fp& (0+255),w,b
 29165   012CCA  26D9               	addwf	fsr2l,f,c
 29166   012CCC  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 29167   012CCE  22DA               	addwfc	fsr2h,f,c
 29168   012CD0  C4DE F602          	movff	postinc2,disk_read@sector
 29169   012CD4  C4DE F603          	movff	postinc2,disk_read@sector+1
 29170   012CD8  C4DE F604          	movff	postinc2,disk_read@sector+2
 29171   012CDC  C4DE F605          	movff	postinc2,disk_read@sector+3
 29172   012CE0  0E00               	movlw	0
 29173   012CE2  6F07               	movwf	(disk_read@count+1)& (0+255),b
 29174   012CE4  0E01               	movlw	1
 29175   012CE6  6F06               	movwf	disk_read@count& (0+255),b
 29176   012CE8  EE20 F001          	lfsr	2,1
 29177   012CEC  51D4               	movf	f_open@fs& (0+255),w,b
 29178   012CEE  26D9               	addwf	fsr2l,f,c
 29179   012CF0  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 29180   012CF2  22DA               	addwfc	fsr2h,f,c
 29181   012CF4  50DF               	movf	indf2,w,c
 29182   012CF6  ECD5  F0F3         	call	_disk_read
 29183   012CFA  0900               	iorlw	0
 29184   012CFC  B4D8               	btfsc	status,2,c
 29185   012CFE  EF83  F096         	goto	u32051
 29186   012D02  EF85  F096         	goto	u32050
 29187   012D06                     u32051:
 29188   012D06  EF8A  F096         	goto	l1917
 29189   012D0A                     u32050:
 29190   012D0A  0E01               	movlw	1
 29191   012D0C  0106               	movlb	6	; () banked
 29192   012D0E  6FD6               	movwf	f_open@res& (0+255),b
 29193   012D10  EF8A  F096         	goto	l1896
 29194   012D14                     l1917:
 29195   012D14                     l1896:
 29196                           
 29197                           ;../fatfs/ff.c: 3904:  if (res != FR_OK) fp->obj.fs = 0;
 29198   012D14  0106               	movlb	6	; () banked
 29199   012D16  51D6               	movf	f_open@res& (0+255),w,b
 29200   012D18  B4D8               	btfsc	status,2,c
 29201   012D1A  EF91  F096         	goto	u32061
 29202   012D1E  EF93  F096         	goto	u32060
 29203   012D22                     u32061:
 29204   012D22  EF99  F096         	goto	l23271
 29205   012D26                     u32060:
 29206   012D26                     
 29207                           ; BSR set to: 6
 29208   012D26  C6AF  F4D9         	movff	f_open@fp,fsr2l
 29209   012D2A  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 29210   012D2E  6ADE               	clrf	postinc2,c
 29211   012D30  6ADD               	clrf	postdec2,c
 29212   012D32                     l23271:
 29213                           
 29214                           ; BSR set to: 6
 29215                           ;../fatfs/ff.c: 3906:  return res;
 29216   012D32  51D6               	movf	f_open@res& (0+255),w,b
 29217   012D34                     l1891:
 29218                           
 29219                           ; BSR set to: 6
 29220   012D34  0012               	return		;funcret
 29221   012D36                     __end_of_f_open:
 29222                           	callstack 0
 29223                           
 29224 ;; *************** function _remove_chain *****************
 29225 ;; Defined at:
 29226 ;;		line 1430 in file "../fatfs/ff.c"
 29227 ;; Parameters:    Size  Location     Type
 29228 ;;  obj             2   69[BANK6 ] PTR struct .
 29229 ;;		 -> f_mkdir@sobj(14), f_unlink@dj(40), f_open@dj(40), 
 29230 ;;  clst            4   71[BANK6 ] unsigned long 
 29231 ;;  pclst           4   75[BANK6 ] unsigned long 
 29232 ;; Auto vars:     Size  Location     Type
 29233 ;;  nxt             4   87[BANK6 ] unsigned long 
 29234 ;;  fs              2   92[BANK6 ] PTR struct .
 29235 ;;		 -> fs(564), NULL(0), 
 29236 ;;  res             1   91[BANK6 ] enum E597
 29237 ;; Return value:  Size  Location     Type
 29238 ;;                  1    wreg      enum E597
 29239 ;; Registers used:
 29240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29241 ;; Tracked objects:
 29242 ;;		On entry : 0/0
 29243 ;;		On exit  : 0/0
 29244 ;;		Unchanged: 0/0
 29245 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29246 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29247 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29248 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29249 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29250 ;;Total ram usage:       25 bytes
 29251 ;; Hardware stack levels used: 1
 29252 ;; Hardware stack levels required when called: 15
 29253 ;; This function calls:
 29254 ;;		_get_fat
 29255 ;;		_put_fat
 29256 ;; This function is called by:
 29257 ;;		_f_open
 29258 ;;		_f_truncate
 29259 ;;		_f_unlink
 29260 ;;		_f_mkdir
 29261 ;; This function uses a non-reentrant model
 29262 ;;
 29263                           
 29264                           	psect	text73
 29265   019AA8                     __ptext73:
 29266                           	callstack 0
 29267   019AA8                     _remove_chain:
 29268                           	callstack 104
 29269   019AA8                     
 29270                           ;../fatfs/ff.c: 1437:  DWORD nxt;;../fatfs/ff.c: 1438:  FATFS *fs = obj->fs;
 29271   019AA8  C645  F4D9         	movff	remove_chain@obj,fsr2l
 29272   019AAC  C646  F4DA         	movff	remove_chain@obj+1,fsr2h
 29273   019AB0  C4DE F65C          	movff	postinc2,remove_chain@fs
 29274   019AB4  C4DD F65D          	movff	postdec2,remove_chain@fs+1
 29275   019AB8                     
 29276                           ;../fatfs/ff.c: 1446:  if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 29277   019AB8  0106               	movlb	6	; () banked
 29278   019ABA  514A               	movf	(remove_chain@clst+3)& (0+255),w,b
 29279   019ABC  1149               	iorwf	(remove_chain@clst+2)& (0+255),w,b
 29280   019ABE  1148               	iorwf	(remove_chain@clst+1)& (0+255),w,b
 29281   019AC0  E109               	bnz	u30510
 29282   019AC2  0E02               	movlw	2
 29283   019AC4  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29284   019AC6  A0D8               	btfss	status,0,c
 29285   019AC8  EF68  F0CD         	goto	u30511
 29286   019ACC  EF6A  F0CD         	goto	u30510
 29287   019AD0                     u30511:
 29288   019AD0  EF7F  F0CD         	goto	l22445
 29289   019AD4                     u30510:
 29290   019AD4                     
 29291                           ; BSR set to: 6
 29292   019AD4  EE20 F018          	lfsr	2,24
 29293   019AD8  515C               	movf	remove_chain@fs& (0+255),w,b
 29294   019ADA  26D9               	addwf	fsr2l,f,c
 29295   019ADC  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29296   019ADE  22DA               	addwfc	fsr2h,f,c
 29297   019AE0  50DE               	movf	postinc2,w,c
 29298   019AE2  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29299   019AE4  50DE               	movf	postinc2,w,c
 29300   019AE6  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 29301   019AE8  50DE               	movf	postinc2,w,c
 29302   019AEA  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 29303   019AEC  50DE               	movf	postinc2,w,c
 29304   019AEE  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 29305   019AF0  A0D8               	btfss	status,0,c
 29306   019AF2  EF7D  F0CD         	goto	u30521
 29307   019AF6  EF7F  F0CD         	goto	u30520
 29308   019AFA                     u30521:
 29309   019AFA  EF82  F0CD         	goto	l22449
 29310   019AFE                     u30520:
 29311   019AFE                     l22445:
 29312                           
 29313                           ; BSR set to: 6
 29314   019AFE  0E02               	movlw	2
 29315   019B00  EF6C  F0CE         	goto	l1540
 29316   019B04                     l22449:
 29317                           
 29318                           ; BSR set to: 6
 29319                           ;../fatfs/ff.c: 1449:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
 29320   019B04  514B               	movf	remove_chain@pclst& (0+255),w,b
 29321   019B06  114C               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
 29322   019B08  114D               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
 29323   019B0A  114E               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
 29324   019B0C  B4D8               	btfsc	status,2,c
 29325   019B0E  EF8B  F0CD         	goto	u30531
 29326   019B12  EF8D  F0CD         	goto	u30530
 29327   019B16                     u30531:
 29328   019B16  EFB0  F0CD         	goto	l22465
 29329   019B1A                     u30530:
 29330   019B1A                     
 29331                           ; BSR set to: 6
 29332                           ;../fatfs/ff.c: 1450:   res = put_fat(fs, pclst, 0xFFFFFFFF);
 29333   019B1A  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 29334   019B1E  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 29335   019B22  C64B  F626         	movff	remove_chain@pclst,put_fat@clst
 29336   019B26  C64C  F627         	movff	remove_chain@pclst+1,put_fat@clst+1
 29337   019B2A  C64D  F628         	movff	remove_chain@pclst+2,put_fat@clst+2
 29338   019B2E  C64E  F629         	movff	remove_chain@pclst+3,put_fat@clst+3
 29339   019B32  0EFF               	movlw	255
 29340   019B34  6F2A               	movwf	put_fat@val& (0+255),b
 29341   019B36  0EFF               	movlw	255
 29342   019B38  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 29343   019B3A  0EFF               	movlw	255
 29344   019B3C  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 29345   019B3E  0EFF               	movlw	255
 29346   019B40  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 29347   019B42  EC54  F0A0         	call	_put_fat	;wreg free
 29348   019B46  0106               	movlb	6	; () banked
 29349   019B48  6F5B               	movwf	remove_chain@res& (0+255),b
 29350   019B4A                     
 29351                           ; BSR set to: 6
 29352                           ;../fatfs/ff.c: 1451:   if (res != FR_OK) return res;
 29353   019B4A  515B               	movf	remove_chain@res& (0+255),w,b
 29354   019B4C  B4D8               	btfsc	status,2,c
 29355   019B4E  EFAB  F0CD         	goto	u30541
 29356   019B52  EFAD  F0CD         	goto	u30540
 29357   019B56                     u30541:
 29358   019B56  EFB0  F0CD         	goto	l22465
 29359   019B5A                     u30540:
 29360   019B5A                     l22461:
 29361                           
 29362                           ; BSR set to: 6
 29363   019B5A  515B               	movf	remove_chain@res& (0+255),w,b
 29364   019B5C  EF6C  F0CE         	goto	l1540
 29365   019B60                     l22465:
 29366                           
 29367                           ; BSR set to: 6
 29368                           ;../fatfs/ff.c: 1456:   nxt = get_fat(obj, clst);
 29369   019B60  C645  F624         	movff	remove_chain@obj,get_fat@obj
 29370   019B64  C646  F625         	movff	remove_chain@obj+1,get_fat@obj+1
 29371   019B68  C647  F626         	movff	remove_chain@clst,get_fat@clst
 29372   019B6C  C648  F627         	movff	remove_chain@clst+1,get_fat@clst+1
 29373   019B70  C649  F628         	movff	remove_chain@clst+2,get_fat@clst+2
 29374   019B74  C64A  F629         	movff	remove_chain@clst+3,get_fat@clst+3
 29375   019B78  ECF7  F0B4         	call	_get_fat	;wreg free
 29376   019B7C  C624  F657         	movff	?_get_fat,remove_chain@nxt
 29377   019B80  C625  F658         	movff	?_get_fat+1,remove_chain@nxt+1
 29378   019B84  C626  F659         	movff	?_get_fat+2,remove_chain@nxt+2
 29379   019B88  C627  F65A         	movff	?_get_fat+3,remove_chain@nxt+3
 29380   019B8C                     
 29381                           ;../fatfs/ff.c: 1457:   if (nxt == 0) break;
 29382   019B8C  0106               	movlb	6	; () banked
 29383   019B8E  5157               	movf	remove_chain@nxt& (0+255),w,b
 29384   019B90  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 29385   019B92  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 29386   019B94  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 29387   019B96  A4D8               	btfss	status,2,c
 29388   019B98  EFD0  F0CD         	goto	u30551
 29389   019B9C  EFD2  F0CD         	goto	u30550
 29390   019BA0                     u30551:
 29391   019BA0  EFD4  F0CD         	goto	l22471
 29392   019BA4                     u30550:
 29393   019BA4  EF6B  F0CE         	goto	l22499
 29394   019BA8                     l22471:
 29395                           
 29396                           ; BSR set to: 6
 29397                           ;../fatfs/ff.c: 1458:   if (nxt == 1) return FR_INT_ERR;
 29398   019BA8  0557               	decf	remove_chain@nxt& (0+255),w,b
 29399   019BAA  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 29400   019BAC  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 29401   019BAE  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 29402   019BB0  A4D8               	btfss	status,2,c
 29403   019BB2  EFDD  F0CD         	goto	u30561
 29404   019BB6  EFDF  F0CD         	goto	u30560
 29405   019BBA                     u30561:
 29406   019BBA  EFE1  F0CD         	goto	l22477
 29407   019BBE                     u30560:
 29408   019BBE  EF7F  F0CD         	goto	l22445
 29409   019BC2                     l22477:
 29410                           
 29411                           ; BSR set to: 6
 29412                           ;../fatfs/ff.c: 1459:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
 29413   019BC2  2957               	incf	remove_chain@nxt& (0+255),w,b
 29414   019BC4  E10A               	bnz	u30571
 29415   019BC6  2958               	incf	(remove_chain@nxt+1)& (0+255),w,b
 29416   019BC8  E108               	bnz	u30571
 29417   019BCA  2959               	incf	(remove_chain@nxt+2)& (0+255),w,b
 29418   019BCC  E106               	bnz	u30571
 29419   019BCE  295A               	incf	(remove_chain@nxt+3)& (0+255),w,b
 29420   019BD0  A4D8               	btfss	status,2,c
 29421   019BD2  EFED  F0CD         	goto	u30571
 29422   019BD6  EFEF  F0CD         	goto	u30570
 29423   019BDA                     u30571:
 29424   019BDA  EFF2  F0CD         	goto	l22485
 29425   019BDE                     u30570:
 29426   019BDE                     
 29427                           ; BSR set to: 6
 29428   019BDE  0E01               	movlw	1
 29429   019BE0  EF6C  F0CE         	goto	l1540
 29430   019BE4                     l22485:
 29431                           
 29432                           ; BSR set to: 6
 29433                           ;../fatfs/ff.c: 1461:    res = put_fat(fs, clst, 0);
 29434   019BE4  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 29435   019BE8  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 29436   019BEC  C647  F626         	movff	remove_chain@clst,put_fat@clst
 29437   019BF0  C648  F627         	movff	remove_chain@clst+1,put_fat@clst+1
 29438   019BF4  C649  F628         	movff	remove_chain@clst+2,put_fat@clst+2
 29439   019BF8  C64A  F629         	movff	remove_chain@clst+3,put_fat@clst+3
 29440   019BFC  0E00               	movlw	0
 29441   019BFE  6F2A               	movwf	put_fat@val& (0+255),b
 29442   019C00  0E00               	movlw	0
 29443   019C02  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 29444   019C04  0E00               	movlw	0
 29445   019C06  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 29446   019C08  0E00               	movlw	0
 29447   019C0A  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 29448   019C0C  EC54  F0A0         	call	_put_fat	;wreg free
 29449   019C10  0106               	movlb	6	; () banked
 29450   019C12  6F5B               	movwf	remove_chain@res& (0+255),b
 29451   019C14                     
 29452                           ; BSR set to: 6
 29453                           ;../fatfs/ff.c: 1462:    if (res != FR_OK) return res;
 29454   019C14  515B               	movf	remove_chain@res& (0+255),w,b
 29455   019C16  B4D8               	btfsc	status,2,c
 29456   019C18  EF10  F0CE         	goto	u30581
 29457   019C1C  EF12  F0CE         	goto	u30580
 29458   019C20                     u30581:
 29459   019C20  EF14  F0CE         	goto	l22493
 29460   019C24                     u30580:
 29461   019C24  EFAD  F0CD         	goto	l22461
 29462   019C28                     l22493:
 29463                           
 29464                           ; BSR set to: 6
 29465                           ;../fatfs/ff.c: 1464:   if (fs->free_clst < fs->n_fatent - 2) {
 29466   019C28  EE20 F018          	lfsr	2,24
 29467   019C2C  515C               	movf	remove_chain@fs& (0+255),w,b
 29468   019C2E  26D9               	addwf	fsr2l,f,c
 29469   019C30  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29470   019C32  22DA               	addwfc	fsr2h,f,c
 29471   019C34  0EFE               	movlw	254
 29472   019C36  24DE               	addwf	postinc2,w,c
 29473   019C38  6F4F               	movwf	??_remove_chain& (0+255),b
 29474   019C3A  0EFF               	movlw	255
 29475   019C3C  20DE               	addwfc	postinc2,w,c
 29476   019C3E  6F50               	movwf	(??_remove_chain+1)& (0+255),b
 29477   019C40  0EFF               	movlw	255
 29478   019C42  20DE               	addwfc	postinc2,w,c
 29479   019C44  6F51               	movwf	(??_remove_chain+2)& (0+255),b
 29480   019C46  0EFF               	movlw	255
 29481   019C48  20DE               	addwfc	postinc2,w,c
 29482   019C4A  6F52               	movwf	(??_remove_chain+3)& (0+255),b
 29483   019C4C  EE20 F010          	lfsr	2,16
 29484   019C50  515C               	movf	remove_chain@fs& (0+255),w,b
 29485   019C52  26D9               	addwf	fsr2l,f,c
 29486   019C54  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29487   019C56  22DA               	addwfc	fsr2h,f,c
 29488   019C58  514F               	movf	??_remove_chain& (0+255),w,b
 29489   019C5A  5CDE               	subwf	postinc2,w,c
 29490   019C5C  5150               	movf	(??_remove_chain+1)& (0+255),w,b
 29491   019C5E  58DE               	subwfb	postinc2,w,c
 29492   019C60  5151               	movf	(??_remove_chain+2)& (0+255),w,b
 29493   019C62  58DE               	subwfb	postinc2,w,c
 29494   019C64  5152               	movf	(??_remove_chain+3)& (0+255),w,b
 29495   019C66  58DE               	subwfb	postinc2,w,c
 29496   019C68  B0D8               	btfsc	status,0,c
 29497   019C6A  EF39  F0CE         	goto	u30591
 29498   019C6E  EF3B  F0CE         	goto	u30590
 29499   019C72                     u30591:
 29500   019C72  EF4E  F0CE         	goto	l22497
 29501   019C76                     u30590:
 29502   019C76                     
 29503                           ; BSR set to: 6
 29504                           ;../fatfs/ff.c: 1465:    fs->free_clst++;
 29505   019C76  EE20 F010          	lfsr	2,16
 29506   019C7A  515C               	movf	remove_chain@fs& (0+255),w,b
 29507   019C7C  26D9               	addwf	fsr2l,f,c
 29508   019C7E  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29509   019C80  22DA               	addwfc	fsr2h,f,c
 29510   019C82  2ADE               	incf	postinc2,f,c
 29511   019C84  0E00               	movlw	0
 29512   019C86  22DE               	addwfc	postinc2,f,c
 29513   019C88  22DE               	addwfc	postinc2,f,c
 29514   019C8A  22DE               	addwfc	postinc2,f,c
 29515                           
 29516                           ;../fatfs/ff.c: 1466:    fs->fsi_flag |= 1;
 29517   019C8C  EE20 F005          	lfsr	2,5
 29518   019C90  515C               	movf	remove_chain@fs& (0+255),w,b
 29519   019C92  26D9               	addwf	fsr2l,f,c
 29520   019C94  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29521   019C96  22DA               	addwfc	fsr2h,f,c
 29522   019C98  0E00               	movlw	0
 29523   019C9A  80DB               	bsf	plusw2,0,c
 29524   019C9C                     l22497:
 29525                           
 29526                           ; BSR set to: 6
 29527                           ;../fatfs/ff.c: 1486:   clst = nxt;
 29528   019C9C  C657  F647         	movff	remove_chain@nxt,remove_chain@clst
 29529   019CA0  C658  F648         	movff	remove_chain@nxt+1,remove_chain@clst+1
 29530   019CA4  C659  F649         	movff	remove_chain@nxt+2,remove_chain@clst+2
 29531   019CA8  C65A  F64A         	movff	remove_chain@nxt+3,remove_chain@clst+3
 29532                           
 29533                           ;../fatfs/ff.c: 1487:  } while (clst < fs->n_fatent);
 29534   019CAC  EE20 F018          	lfsr	2,24
 29535   019CB0  515C               	movf	remove_chain@fs& (0+255),w,b
 29536   019CB2  26D9               	addwf	fsr2l,f,c
 29537   019CB4  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 29538   019CB6  22DA               	addwfc	fsr2h,f,c
 29539   019CB8  50DE               	movf	postinc2,w,c
 29540   019CBA  5D47               	subwf	remove_chain@clst& (0+255),w,b
 29541   019CBC  50DE               	movf	postinc2,w,c
 29542   019CBE  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 29543   019CC0  50DE               	movf	postinc2,w,c
 29544   019CC2  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 29545   019CC4  50DE               	movf	postinc2,w,c
 29546   019CC6  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 29547   019CC8  A0D8               	btfss	status,0,c
 29548   019CCA  EF69  F0CE         	goto	u30601
 29549   019CCE  EF6B  F0CE         	goto	u30600
 29550   019CD2                     u30601:
 29551   019CD2  EFB0  F0CD         	goto	l22465
 29552   019CD6                     u30600:
 29553   019CD6                     l22499:
 29554                           
 29555                           ; BSR set to: 6
 29556                           ;../fatfs/ff.c: 1515:  return FR_OK;
 29557   019CD6  0E00               	movlw	0
 29558   019CD8                     l1540:
 29559                           
 29560                           ; BSR set to: 6
 29561   019CD8  0012               	return		;funcret
 29562   019CDA                     __end_of_remove_chain:
 29563                           	callstack 0
 29564                           
 29565 ;; *************** function _mount_volume *****************
 29566 ;; Defined at:
 29567 ;;		line 3386 in file "../fatfs/ff.c"
 29568 ;; Parameters:    Size  Location     Type
 29569 ;;  path            2  129[BANK6 ] PTR PTR const unsigned c
 29570 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 29571 ;;		 -> f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), f_chdir@path(2), 
 29572 ;;		 -> f_open@path(2), f_mount@path(2), 
 29573 ;;  rfs             2  131[BANK6 ] PTR PTR struct .
 29574 ;;		 -> dj$obj(15), f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), 
 29575 ;;		 -> f_getfree@fs(2), f_opendir@fs(2), f_getcwd@fs(2), f_chdir@fs(2), 
 29576 ;;		 -> f_open@dj(40), f_open@fs(2), dj$obj$fs(2), f_mount@fs(2), 
 29577 ;;  mode            1  133[BANK6 ] unsigned char 
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;  fasize          4  167[BANK6 ] unsigned long 
 29580 ;;  nclst           4  163[BANK6 ] unsigned long 
 29581 ;;  bsect           4  158[BANK6 ] unsigned long 
 29582 ;;  tsect           4  154[BANK6 ] unsigned long 
 29583 ;;  sysect          4  148[BANK6 ] unsigned long 
 29584 ;;  szbfat          4  142[BANK6 ] unsigned long 
 29585 ;;  fs              2  173[BANK6 ] PTR struct .
 29586 ;;		 -> fs(564), NULL(0), 
 29587 ;;  fmt             2  171[BANK6 ] unsigned int 
 29588 ;;  nrsv            2  152[BANK6 ] unsigned short 
 29589 ;;  vol             2  146[BANK6 ] int 
 29590 ;;  stat            1  162[BANK6 ] unsigned char 
 29591 ;; Return value:  Size  Location     Type
 29592 ;;                  1    wreg      enum E597
 29593 ;; Registers used:
 29594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29595 ;; Tracked objects:
 29596 ;;		On entry : 0/0
 29597 ;;		On exit  : 0/0
 29598 ;;		Unchanged: 0/0
 29599 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29600 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29601 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29602 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29603 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29604 ;;Total ram usage:       46 bytes
 29605 ;; Hardware stack levels used: 1
 29606 ;; Hardware stack levels required when called: 16
 29607 ;; This function calls:
 29608 ;;		___lldiv
 29609 ;;		___lmul
 29610 ;;		_disk_initialize
 29611 ;;		_disk_status
 29612 ;;		_find_volume
 29613 ;;		_get_ldnumber
 29614 ;;		_ld_dword
 29615 ;;		_ld_word
 29616 ;;		_move_window
 29617 ;; This function is called by:
 29618 ;;		_f_mount
 29619 ;;		_f_open
 29620 ;;		_f_chdir
 29621 ;;		_f_getcwd
 29622 ;;		_f_opendir
 29623 ;;		_f_stat
 29624 ;;		_f_getfree
 29625 ;;		_f_unlink
 29626 ;;		_f_mkdir
 29627 ;;		_f_rename
 29628 ;; This function uses a non-reentrant model
 29629 ;;
 29630                           
 29631                           	psect	text74
 29632   010000                     __ptext74:
 29633                           	callstack 0
 29634   010000                     _mount_volume:
 29635                           	callstack 103
 29636   010000                     
 29637                           ;../fatfs/ff.c: 3387:  const TCHAR** path,;../fatfs/ff.c: 3388:  FATFS** rfs,;../fatfs/f
      +                          f.c: 3389:  BYTE mode;../fatfs/ff.c: 3391: {;../fatfs/ff.c: 3392:  int vol;;../fatfs/ff.
      +                          c: 3393:  FATFS *fs;;../fatfs/ff.c: 3394:  DSTATUS stat;;../fatfs/ff.c: 3395:  LBA_t bse
      +                          ct;;../fatfs/ff.c: 3396:  DWORD tsect, sysect, fasize, nclst, szbfat;;../fatfs/ff.c: 339
      +                          7:  WORD nrsv;;../fatfs/ff.c: 3398:  UINT fmt;;../fatfs/ff.c: 3402:  *rfs = 0;
 29638   010000  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 29639   010004  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 29640   010008  6ADE               	clrf	postinc2,c
 29641   01000A  6ADD               	clrf	postdec2,c
 29642   01000C                     
 29643                           ;../fatfs/ff.c: 3403:  vol = get_ldnumber(path);
 29644   01000C  C681  F504         	movff	mount_volume@path,get_ldnumber@path
 29645   010010  C682  F505         	movff	mount_volume@path+1,get_ldnumber@path+1
 29646   010014  EC82  F0D9         	call	_get_ldnumber	;wreg free
 29647   010018  C504  F692         	movff	?_get_ldnumber,mount_volume@vol
 29648   01001C  C505  F693         	movff	?_get_ldnumber+1,mount_volume@vol+1
 29649   010020                     
 29650                           ;../fatfs/ff.c: 3404:  if (vol < 0) return FR_INVALID_DRIVE;
 29651   010020  0106               	movlb	6	; () banked
 29652   010022  BF93               	btfsc	(mount_volume@vol+1)& (0+255),7,b
 29653   010024  EF18  F080         	goto	u30810
 29654   010028  EF16  F080         	goto	u30811
 29655   01002C                     u30811:
 29656   01002C  EF1B  F080         	goto	l22599
 29657   010030                     u30810:
 29658   010030                     
 29659                           ; BSR set to: 6
 29660   010030  0E0B               	movlw	11
 29661   010032  EF6B  F085         	goto	l1836
 29662   010036                     l22599:
 29663                           
 29664                           ; BSR set to: 6
 29665                           ;../fatfs/ff.c: 3407:  fs = FatFs[vol];
 29666   010036  90D8               	bcf	status,0,c
 29667   010038  3592               	rlcf	mount_volume@vol& (0+255),w,b
 29668   01003A  6ED9               	movwf	fsr2l,c
 29669   01003C  3593               	rlcf	(mount_volume@vol+1)& (0+255),w,b
 29670   01003E  6EDA               	movwf	fsr2h,c
 29671   010040  0EB7               	movlw	low _FatFs
 29672   010042  26D9               	addwf	fsr2l,f,c
 29673   010044  0E07               	movlw	high _FatFs
 29674   010046  22DA               	addwfc	fsr2h,f,c
 29675   010048  C4DE F6AD          	movff	postinc2,mount_volume@fs
 29676   01004C  C4DD F6AE          	movff	postdec2,mount_volume@fs+1
 29677   010050                     
 29678                           ; BSR set to: 6
 29679                           ;../fatfs/ff.c: 3408:  if (!fs) return FR_NOT_ENABLED;
 29680   010050  51AD               	movf	mount_volume@fs& (0+255),w,b
 29681   010052  11AE               	iorwf	(mount_volume@fs+1)& (0+255),w,b
 29682   010054  A4D8               	btfss	status,2,c
 29683   010056  EF2F  F080         	goto	u30821
 29684   01005A  EF31  F080         	goto	u30820
 29685   01005E                     u30821:
 29686   01005E  EF34  F080         	goto	l22607
 29687   010062                     u30820:
 29688   010062                     
 29689                           ; BSR set to: 6
 29690   010062  0E0C               	movlw	12
 29691   010064  EF6B  F085         	goto	l1836
 29692   010068                     l22607:
 29693                           
 29694                           ; BSR set to: 6
 29695                           ;../fatfs/ff.c: 3412:  *rfs = fs;
 29696   010068  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 29697   01006C  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 29698   010070  C6AD  F4DE         	movff	mount_volume@fs,postinc2
 29699   010074  C6AE  F4DD         	movff	mount_volume@fs+1,postdec2
 29700   010078                     
 29701                           ; BSR set to: 6
 29702                           ;../fatfs/ff.c: 3414:  mode &= (BYTE)~0x01;
 29703   010078  9185               	bcf	mount_volume@mode& (0+255),0,b
 29704   01007A                     
 29705                           ; BSR set to: 6
 29706                           ;../fatfs/ff.c: 3415:  if (fs->fs_type != 0) {
 29707   01007A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 29708   01007E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 29709   010082  50DF               	movf	indf2,w,c
 29710   010084  B4D8               	btfsc	status,2,c
 29711   010086  EF47  F080         	goto	u30831
 29712   01008A  EF49  F080         	goto	u30830
 29713   01008E                     u30831:
 29714   01008E  EF70  F080         	goto	l22629
 29715   010092                     u30830:
 29716   010092                     
 29717                           ; BSR set to: 6
 29718                           ;../fatfs/ff.c: 3416:   stat = disk_status(fs->pdrv);
 29719   010092  EE20 F001          	lfsr	2,1
 29720   010096  51AD               	movf	mount_volume@fs& (0+255),w,b
 29721   010098  26D9               	addwf	fsr2l,f,c
 29722   01009A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29723   01009C  22DA               	addwfc	fsr2h,f,c
 29724   01009E  50DF               	movf	indf2,w,c
 29725   0100A0  EC42  F0FE         	call	_disk_status
 29726   0100A4  0106               	movlb	6	; () banked
 29727   0100A6  6FA2               	movwf	mount_volume@stat& (0+255),b
 29728   0100A8                     
 29729                           ; BSR set to: 6
 29730                           ;../fatfs/ff.c: 3418:    if (!0 && mode && (stat & 0x04)) {
 29731   0100A8  B1A2               	btfsc	mount_volume@stat& (0+255),0,b
 29732   0100AA  EF59  F080         	goto	u30841
 29733   0100AE  EF5B  F080         	goto	u30840
 29734   0100B2                     u30841:
 29735   0100B2  EF70  F080         	goto	l22629
 29736   0100B6                     u30840:
 29737   0100B6                     
 29738                           ; BSR set to: 6
 29739   0100B6  5185               	movf	mount_volume@mode& (0+255),w,b
 29740   0100B8  B4D8               	btfsc	status,2,c
 29741   0100BA  EF61  F080         	goto	u30851
 29742   0100BE  EF63  F080         	goto	u30850
 29743   0100C2                     u30851:
 29744   0100C2  EF6D  F080         	goto	l22625
 29745   0100C6                     u30850:
 29746   0100C6                     
 29747                           ; BSR set to: 6
 29748   0100C6  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 29749   0100C8  EF68  F080         	goto	u30861
 29750   0100CC  EF6A  F080         	goto	u30860
 29751   0100D0                     u30861:
 29752   0100D0  EF6D  F080         	goto	l22625
 29753   0100D4                     u30860:
 29754   0100D4                     l22621:
 29755                           
 29756                           ; BSR set to: 6
 29757                           ;../fatfs/ff.c: 3419:     return FR_WRITE_PROTECTED;
 29758   0100D4  0E0A               	movlw	10
 29759   0100D6  EF6B  F085         	goto	l1836
 29760   0100DA                     l22625:
 29761                           
 29762                           ; BSR set to: 6
 29763                           ;../fatfs/ff.c: 3421:    return FR_OK;
 29764   0100DA  0E00               	movlw	0
 29765   0100DC  EF6B  F085         	goto	l1836
 29766   0100E0                     l22629:
 29767                           
 29768                           ; BSR set to: 6
 29769                           ;../fatfs/ff.c: 3428:  fs->fs_type = 0;
 29770   0100E0  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 29771   0100E4  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 29772   0100E8  6ADF               	clrf	indf2,c
 29773   0100EA                     
 29774                           ; BSR set to: 6
 29775                           ;../fatfs/ff.c: 3429:  stat = disk_initialize(fs->pdrv);
 29776   0100EA  EE20 F001          	lfsr	2,1
 29777   0100EE  51AD               	movf	mount_volume@fs& (0+255),w,b
 29778   0100F0  26D9               	addwf	fsr2l,f,c
 29779   0100F2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29780   0100F4  22DA               	addwfc	fsr2h,f,c
 29781   0100F6  50DF               	movf	indf2,w,c
 29782   0100F8  EC54  F0DA         	call	_disk_initialize
 29783   0100FC  0106               	movlb	6	; () banked
 29784   0100FE  6FA2               	movwf	mount_volume@stat& (0+255),b
 29785   010100                     
 29786                           ; BSR set to: 6
 29787                           ;../fatfs/ff.c: 3430:  if (stat & 0x01) {
 29788   010100  A1A2               	btfss	mount_volume@stat& (0+255),0,b
 29789   010102  EF85  F080         	goto	u30871
 29790   010106  EF87  F080         	goto	u30870
 29791   01010A                     u30871:
 29792   01010A  EF8A  F080         	goto	l22639
 29793   01010E                     u30870:
 29794   01010E                     
 29795                           ; BSR set to: 6
 29796                           ;../fatfs/ff.c: 3431:   return FR_NOT_READY;
 29797   01010E  0E03               	movlw	3
 29798   010110  EF6B  F085         	goto	l1836
 29799   010114                     l22639:
 29800                           
 29801                           ; BSR set to: 6
 29802   010114  5185               	movf	mount_volume@mode& (0+255),w,b
 29803   010116  B4D8               	btfsc	status,2,c
 29804   010118  EF90  F080         	goto	u30881
 29805   01011C  EF92  F080         	goto	u30880
 29806   010120                     u30881:
 29807   010120  EF9B  F080         	goto	l22647
 29808   010124                     u30880:
 29809   010124                     
 29810                           ; BSR set to: 6
 29811   010124  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 29812   010126  EF97  F080         	goto	u30891
 29813   01012A  EF99  F080         	goto	u30890
 29814   01012E                     u30891:
 29815   01012E  EF9B  F080         	goto	l22647
 29816   010132                     u30890:
 29817   010132  EF6A  F080         	goto	l22621
 29818   010136                     l22647:
 29819                           
 29820                           ; BSR set to: 6
 29821                           ;../fatfs/ff.c: 3442:  fmt = find_volume(fs, 0);
 29822   010136  C6AD  F632         	movff	mount_volume@fs,find_volume@fs
 29823   01013A  C6AE  F633         	movff	mount_volume@fs+1,find_volume@fs+1
 29824   01013E  0E00               	movlw	0
 29825   010140  6F35               	movwf	(find_volume@part+1)& (0+255),b
 29826   010142  0E00               	movlw	0
 29827   010144  6F34               	movwf	find_volume@part& (0+255),b
 29828   010146  EC87  F0D2         	call	_find_volume	;wreg free
 29829   01014A  C632  F6AB         	movff	?_find_volume,mount_volume@fmt
 29830   01014E  C633  F6AC         	movff	?_find_volume+1,mount_volume@fmt+1
 29831   010152                     
 29832                           ;../fatfs/ff.c: 3444:  if (fmt == 4) return FR_DISK_ERR;
 29833   010152  0E04               	movlw	4
 29834   010154  0106               	movlb	6	; () banked
 29835   010156  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 29836   010158  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 29837   01015A  A4D8               	btfss	status,2,c
 29838   01015C  EFB2  F080         	goto	u30901
 29839   010160  EFB4  F080         	goto	u30900
 29840   010164                     u30901:
 29841   010164  EFB7  F080         	goto	l22655
 29842   010168                     u30900:
 29843   010168                     
 29844                           ; BSR set to: 6
 29845   010168  0E01               	movlw	1
 29846   01016A  EF6B  F085         	goto	l1836
 29847   01016E                     l22655:
 29848                           
 29849                           ; BSR set to: 6
 29850                           ;../fatfs/ff.c: 3445:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 29851   01016E  51AC               	movf	(mount_volume@fmt+1)& (0+255),w,b
 29852   010170  E109               	bnz	u30910
 29853   010172  0E02               	movlw	2
 29854   010174  5DAB               	subwf	mount_volume@fmt& (0+255),w,b
 29855   010176  A0D8               	btfss	status,0,c
 29856   010178  EFC0  F080         	goto	u30911
 29857   01017C  EFC2  F080         	goto	u30910
 29858   010180                     u30911:
 29859   010180  EFC5  F080         	goto	l22661
 29860   010184                     u30910:
 29861   010184                     l22657:
 29862   010184  0E0D               	movlw	13
 29863   010186  EF6B  F085         	goto	l1836
 29864   01018A                     l22661:
 29865                           
 29866                           ; BSR set to: 6
 29867                           ;../fatfs/ff.c: 3446:  bsect = fs->winsect;
 29868   01018A  EE20 F030          	lfsr	2,48
 29869   01018E  51AD               	movf	mount_volume@fs& (0+255),w,b
 29870   010190  26D9               	addwf	fsr2l,f,c
 29871   010192  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29872   010194  22DA               	addwfc	fsr2h,f,c
 29873   010196  C4DE F69E          	movff	postinc2,mount_volume@bsect
 29874   01019A  C4DE F69F          	movff	postinc2,mount_volume@bsect+1
 29875   01019E  C4DE F6A0          	movff	postinc2,mount_volume@bsect+2
 29876   0101A2  C4DE F6A1          	movff	postinc2,mount_volume@bsect+3
 29877   0101A6                     
 29878                           ; BSR set to: 6
 29879                           ;../fatfs/ff.c: 3513:  {;../fatfs/ff.c: 3514:   if (ld_word(fs->win + 11) != ((UINT)512)
      +                          ) return FR_NO_FILESYSTEM;
 29880   0101A6  0E3F               	movlw	63
 29881   0101A8  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29882   0101AA  6E04               	movwf	ld_word@ptr^(0+1280),c
 29883   0101AC  0E00               	movlw	0
 29884   0101AE  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29885   0101B0  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 29886   0101B2  EC4C  F0FF         	call	_ld_word	;wreg free
 29887   0101B6  0E02               	movlw	2
 29888   0101B8  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 29889   0101BA  1004               	iorwf	?_ld_word^(0+1280),w,c
 29890   0101BC  B4D8               	btfsc	status,2,c
 29891   0101BE  EFE3  F080         	goto	u30921
 29892   0101C2  EFE5  F080         	goto	u30920
 29893   0101C6                     u30921:
 29894   0101C6  EFE7  F080         	goto	l22669
 29895   0101CA                     u30920:
 29896   0101CA  EFC2  F080         	goto	l22657
 29897   0101CE                     l22669:
 29898                           
 29899                           ;../fatfs/ff.c: 3516:   fasize = ld_word(fs->win + 22);
 29900   0101CE  0E4A               	movlw	74
 29901   0101D0  0106               	movlb	6	; () banked
 29902   0101D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29903   0101D4  6E04               	movwf	ld_word@ptr^(0+1280),c
 29904   0101D6  0E00               	movlw	0
 29905   0101D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29906   0101DA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 29907   0101DC  EC4C  F0FF         	call	_ld_word	;wreg free
 29908   0101E0  C504  F6A7         	movff	?_ld_word,mount_volume@fasize
 29909   0101E4  C505  F6A8         	movff	?_ld_word+1,mount_volume@fasize+1
 29910   0101E8  0106               	movlb	6	; () banked
 29911   0101EA  6BA9               	clrf	(mount_volume@fasize+2)& (0+255),b
 29912   0101EC  6BAA               	clrf	(mount_volume@fasize+3)& (0+255),b
 29913   0101EE                     
 29914                           ; BSR set to: 6
 29915                           ;../fatfs/ff.c: 3517:   if (fasize == 0) fasize = ld_dword(fs->win + 36);
 29916   0101EE  51A7               	movf	mount_volume@fasize& (0+255),w,b
 29917   0101F0  11A8               	iorwf	(mount_volume@fasize+1)& (0+255),w,b
 29918   0101F2  11A9               	iorwf	(mount_volume@fasize+2)& (0+255),w,b
 29919   0101F4  11AA               	iorwf	(mount_volume@fasize+3)& (0+255),w,b
 29920   0101F6  A4D8               	btfss	status,2,c
 29921   0101F8  EF00  F081         	goto	u30931
 29922   0101FC  EF02  F081         	goto	u30930
 29923   010200                     u30931:
 29924   010200  EF12  F081         	goto	l22675
 29925   010204                     u30930:
 29926   010204                     
 29927                           ; BSR set to: 6
 29928   010204  0E58               	movlw	88
 29929   010206  25AD               	addwf	mount_volume@fs& (0+255),w,b
 29930   010208  6E04               	movwf	ld_dword@ptr^(0+1280),c
 29931   01020A  0E00               	movlw	0
 29932   01020C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 29933   01020E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 29934   010210  ECC7  F0F2         	call	_ld_dword	;wreg free
 29935   010214  C504  F6A7         	movff	?_ld_dword,mount_volume@fasize
 29936   010218  C505  F6A8         	movff	?_ld_dword+1,mount_volume@fasize+1
 29937   01021C  C506  F6A9         	movff	?_ld_dword+2,mount_volume@fasize+2
 29938   010220  C507  F6AA         	movff	?_ld_dword+3,mount_volume@fasize+3
 29939   010224                     l22675:
 29940                           
 29941                           ;../fatfs/ff.c: 3518:   fs->fsize = fasize;
 29942   010224  0106               	movlb	6	; () banked
 29943   010226  EE20 F01C          	lfsr	2,28
 29944   01022A  51AD               	movf	mount_volume@fs& (0+255),w,b
 29945   01022C  26D9               	addwf	fsr2l,f,c
 29946   01022E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29947   010230  22DA               	addwfc	fsr2h,f,c
 29948   010232  C6A7  F4DE         	movff	mount_volume@fasize,postinc2
 29949   010236  C6A8  F4DE         	movff	mount_volume@fasize+1,postinc2
 29950   01023A  C6A9  F4DE         	movff	mount_volume@fasize+2,postinc2
 29951   01023E  C6AA  F4DE         	movff	mount_volume@fasize+3,postinc2
 29952   010242                     
 29953                           ; BSR set to: 6
 29954                           ;../fatfs/ff.c: 3520:   fs->n_fats = fs->win[16];
 29955   010242  EE20 F044          	lfsr	2,68
 29956   010246  51AD               	movf	mount_volume@fs& (0+255),w,b
 29957   010248  26D9               	addwf	fsr2l,f,c
 29958   01024A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29959   01024C  22DA               	addwfc	fsr2h,f,c
 29960   01024E  EE10 F003          	lfsr	1,3
 29961   010252  51AD               	movf	mount_volume@fs& (0+255),w,b
 29962   010254  26E1               	addwf	fsr1l,f,c
 29963   010256  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29964   010258  22E2               	addwfc	fsr1h,f,c
 29965   01025A  C4DF F4E7          	movff	indf2,indf1
 29966   01025E                     
 29967                           ; BSR set to: 6
 29968                           ;../fatfs/ff.c: 3521:   if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
 29969   01025E  EE20 F003          	lfsr	2,3
 29970   010262  51AD               	movf	mount_volume@fs& (0+255),w,b
 29971   010264  26D9               	addwf	fsr2l,f,c
 29972   010266  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29973   010268  22DA               	addwfc	fsr2h,f,c
 29974   01026A  04DE               	decf	postinc2,w,c
 29975   01026C  B4D8               	btfsc	status,2,c
 29976   01026E  EF3B  F081         	goto	u30941
 29977   010272  EF3D  F081         	goto	u30940
 29978   010276                     u30941:
 29979   010276  EF4E  F081         	goto	l22687
 29980   01027A                     u30940:
 29981   01027A                     
 29982                           ; BSR set to: 6
 29983   01027A  EE20 F003          	lfsr	2,3
 29984   01027E  51AD               	movf	mount_volume@fs& (0+255),w,b
 29985   010280  26D9               	addwf	fsr2l,f,c
 29986   010282  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 29987   010284  22DA               	addwfc	fsr2h,f,c
 29988   010286  0E02               	movlw	2
 29989   010288  18DE               	xorwf	postinc2,w,c
 29990   01028A  B4D8               	btfsc	status,2,c
 29991   01028C  EF4A  F081         	goto	u30951
 29992   010290  EF4C  F081         	goto	u30950
 29993   010294                     u30951:
 29994   010294  EF4E  F081         	goto	l22687
 29995   010298                     u30950:
 29996   010298  EFC2  F080         	goto	l22657
 29997   01029C                     l22687:
 29998                           
 29999                           ; BSR set to: 6
 30000                           ;../fatfs/ff.c: 3522:   fasize *= fs->n_fats;
 30001   01029C  C6A7  F504         	movff	mount_volume@fasize,___lmul@multiplier
 30002   0102A0  C6A8  F505         	movff	mount_volume@fasize+1,___lmul@multiplier+1
 30003   0102A4  C6A9  F506         	movff	mount_volume@fasize+2,___lmul@multiplier+2
 30004   0102A8  C6AA  F507         	movff	mount_volume@fasize+3,___lmul@multiplier+3
 30005   0102AC  EE20 F003          	lfsr	2,3
 30006   0102B0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30007   0102B2  26D9               	addwf	fsr2l,f,c
 30008   0102B4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30009   0102B6  22DA               	addwfc	fsr2h,f,c
 30010   0102B8  50DF               	movf	indf2,w,c
 30011   0102BA  6F86               	movwf	??_mount_volume& (0+255),b
 30012   0102BC  5186               	movf	??_mount_volume& (0+255),w,b
 30013   0102BE  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 30014   0102C0  6A09               	clrf	(___lmul@multiplicand+1)^(0+1280),c
 30015   0102C2  6A0A               	clrf	(___lmul@multiplicand+2)^(0+1280),c
 30016   0102C4  6A0B               	clrf	(___lmul@multiplicand+3)^(0+1280),c
 30017   0102C6  EC13  F0FB         	call	___lmul	;wreg free
 30018   0102CA  C504  F6A7         	movff	?___lmul,mount_volume@fasize
 30019   0102CE  C505  F6A8         	movff	?___lmul+1,mount_volume@fasize+1
 30020   0102D2  C506  F6A9         	movff	?___lmul+2,mount_volume@fasize+2
 30021   0102D6  C507  F6AA         	movff	?___lmul+3,mount_volume@fasize+3
 30022   0102DA                     
 30023                           ;../fatfs/ff.c: 3524:   fs->csize = fs->win[13];
 30024   0102DA  0106               	movlb	6	; () banked
 30025   0102DC  EE20 F041          	lfsr	2,65
 30026   0102E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30027   0102E2  26D9               	addwf	fsr2l,f,c
 30028   0102E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30029   0102E6  22DA               	addwfc	fsr2h,f,c
 30030   0102E8  50DF               	movf	indf2,w,c
 30031   0102EA  6F86               	movwf	??_mount_volume& (0+255),b
 30032   0102EC  6B87               	clrf	(??_mount_volume+1)& (0+255),b
 30033   0102EE  EE20 F00A          	lfsr	2,10
 30034   0102F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30035   0102F4  26D9               	addwf	fsr2l,f,c
 30036   0102F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30037   0102F8  22DA               	addwfc	fsr2h,f,c
 30038   0102FA  C686  F4DE         	movff	??_mount_volume,postinc2
 30039   0102FE  C687  F4DD         	movff	??_mount_volume+1,postdec2
 30040   010302                     
 30041                           ; BSR set to: 6
 30042                           ;../fatfs/ff.c: 3525:   if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_N
      +                          O_FILESYSTEM;
 30043   010302  EE20 F00A          	lfsr	2,10
 30044   010306  51AD               	movf	mount_volume@fs& (0+255),w,b
 30045   010308  26D9               	addwf	fsr2l,f,c
 30046   01030A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30047   01030C  22DA               	addwfc	fsr2h,f,c
 30048   01030E  50DE               	movf	postinc2,w,c
 30049   010310  10DE               	iorwf	postinc2,w,c
 30050   010312  B4D8               	btfsc	status,2,c
 30051   010314  EF8E  F081         	goto	u30961
 30052   010318  EF90  F081         	goto	u30960
 30053   01031C                     u30961:
 30054   01031C  EFC2  F080         	goto	l22657
 30055   010320                     u30960:
 30056   010320                     
 30057                           ; BSR set to: 6
 30058   010320  EE20 F00A          	lfsr	2,10
 30059   010324  51AD               	movf	mount_volume@fs& (0+255),w,b
 30060   010326  26D9               	addwf	fsr2l,f,c
 30061   010328  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30062   01032A  22DA               	addwfc	fsr2h,f,c
 30063   01032C  C4DE F686          	movff	postinc2,??_mount_volume
 30064   010330  C4DD F687          	movff	postdec2,??_mount_volume+1
 30065   010334  EE20 F00A          	lfsr	2,10
 30066   010338  51AD               	movf	mount_volume@fs& (0+255),w,b
 30067   01033A  26D9               	addwf	fsr2l,f,c
 30068   01033C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30069   01033E  22DA               	addwfc	fsr2h,f,c
 30070   010340  C4DE F688          	movff	postinc2,??_mount_volume+2
 30071   010344  C4DD F689          	movff	postdec2,??_mount_volume+3
 30072   010348  0EFF               	movlw	255
 30073   01034A  2588               	addwf	(??_mount_volume+2)& (0+255),w,b
 30074   01034C  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30075   01034E  0EFF               	movlw	255
 30076   010350  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 30077   010352  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30078   010354  5186               	movf	??_mount_volume& (0+255),w,b
 30079   010356  158A               	andwf	(??_mount_volume+4)& (0+255),w,b
 30080   010358  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30081   01035A  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 30082   01035C  158B               	andwf	(??_mount_volume+5)& (0+255),w,b
 30083   01035E  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30084   010360  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 30085   010362  118D               	iorwf	(??_mount_volume+7)& (0+255),w,b
 30086   010364  B4D8               	btfsc	status,2,c
 30087   010366  EFB7  F081         	goto	u30971
 30088   01036A  EFB9  F081         	goto	u30970
 30089   01036E                     u30971:
 30090   01036E  EFBB  F081         	goto	l22699
 30091   010372                     u30970:
 30092   010372  EFC2  F080         	goto	l22657
 30093   010376                     l22699:
 30094                           
 30095                           ; BSR set to: 6
 30096                           ;../fatfs/ff.c: 3527:   fs->n_rootdir = ld_word(fs->win + 17);
 30097   010376  0E45               	movlw	69
 30098   010378  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30099   01037A  6E04               	movwf	ld_word@ptr^(0+1280),c
 30100   01037C  0E00               	movlw	0
 30101   01037E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30102   010380  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30103   010382  EC4C  F0FF         	call	_ld_word	;wreg free
 30104   010386  0106               	movlb	6	; () banked
 30105   010388  EE20 F008          	lfsr	2,8
 30106   01038C  51AD               	movf	mount_volume@fs& (0+255),w,b
 30107   01038E  26D9               	addwf	fsr2l,f,c
 30108   010390  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30109   010392  22DA               	addwfc	fsr2h,f,c
 30110   010394  C504  F4DE         	movff	?_ld_word,postinc2
 30111   010398  C505  F4DD         	movff	?_ld_word+1,postdec2
 30112   01039C                     
 30113                           ; BSR set to: 6
 30114                           ;../fatfs/ff.c: 3528:   if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
 30115   01039C  EE20 F008          	lfsr	2,8
 30116   0103A0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30117   0103A2  26D9               	addwf	fsr2l,f,c
 30118   0103A4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30119   0103A6  22DA               	addwfc	fsr2h,f,c
 30120   0103A8  C4DE F686          	movff	postinc2,??_mount_volume
 30121   0103AC  C4DD F687          	movff	postdec2,??_mount_volume+1
 30122   0103B0  0E0F               	movlw	15
 30123   0103B2  1786               	andwf	??_mount_volume& (0+255),f,b
 30124   0103B4  0E00               	movlw	0
 30125   0103B6  1787               	andwf	(??_mount_volume+1)& (0+255),f,b
 30126   0103B8  5186               	movf	??_mount_volume& (0+255),w,b
 30127   0103BA  1187               	iorwf	(??_mount_volume+1)& (0+255),w,b
 30128   0103BC  B4D8               	btfsc	status,2,c
 30129   0103BE  EFE3  F081         	goto	u30981
 30130   0103C2  EFE5  F081         	goto	u30980
 30131   0103C6                     u30981:
 30132   0103C6  EFE7  F081         	goto	l22707
 30133   0103CA                     u30980:
 30134   0103CA  EFC2  F080         	goto	l22657
 30135   0103CE                     l22707:
 30136                           
 30137                           ; BSR set to: 6
 30138                           ;../fatfs/ff.c: 3530:   tsect = ld_word(fs->win + 19);
 30139   0103CE  0E47               	movlw	71
 30140   0103D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30141   0103D2  6E04               	movwf	ld_word@ptr^(0+1280),c
 30142   0103D4  0E00               	movlw	0
 30143   0103D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30144   0103D8  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30145   0103DA  EC4C  F0FF         	call	_ld_word	;wreg free
 30146   0103DE  C504  F69A         	movff	?_ld_word,mount_volume@tsect
 30147   0103E2  C505  F69B         	movff	?_ld_word+1,mount_volume@tsect+1
 30148   0103E6  0106               	movlb	6	; () banked
 30149   0103E8  6B9C               	clrf	(mount_volume@tsect+2)& (0+255),b
 30150   0103EA  6B9D               	clrf	(mount_volume@tsect+3)& (0+255),b
 30151   0103EC                     
 30152                           ; BSR set to: 6
 30153                           ;../fatfs/ff.c: 3531:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 30154   0103EC  519A               	movf	mount_volume@tsect& (0+255),w,b
 30155   0103EE  119B               	iorwf	(mount_volume@tsect+1)& (0+255),w,b
 30156   0103F0  119C               	iorwf	(mount_volume@tsect+2)& (0+255),w,b
 30157   0103F2  119D               	iorwf	(mount_volume@tsect+3)& (0+255),w,b
 30158   0103F4  A4D8               	btfss	status,2,c
 30159   0103F6  EFFF  F081         	goto	u30991
 30160   0103FA  EF01  F082         	goto	u30990
 30161   0103FE                     u30991:
 30162   0103FE  EF11  F082         	goto	l1852
 30163   010402                     u30990:
 30164   010402                     
 30165                           ; BSR set to: 6
 30166   010402  0E54               	movlw	84
 30167   010404  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30168   010406  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30169   010408  0E00               	movlw	0
 30170   01040A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30171   01040C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30172   01040E  ECC7  F0F2         	call	_ld_dword	;wreg free
 30173   010412  C504  F69A         	movff	?_ld_dword,mount_volume@tsect
 30174   010416  C505  F69B         	movff	?_ld_dword+1,mount_volume@tsect+1
 30175   01041A  C506  F69C         	movff	?_ld_dword+2,mount_volume@tsect+2
 30176   01041E  C507  F69D         	movff	?_ld_dword+3,mount_volume@tsect+3
 30177   010422                     l1852:
 30178                           
 30179                           ;../fatfs/ff.c: 3533:   nrsv = ld_word(fs->win + 14);
 30180   010422  0E42               	movlw	66
 30181   010424  0106               	movlb	6	; () banked
 30182   010426  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30183   010428  6E04               	movwf	ld_word@ptr^(0+1280),c
 30184   01042A  0E00               	movlw	0
 30185   01042C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30186   01042E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30187   010430  EC4C  F0FF         	call	_ld_word	;wreg free
 30188   010434  C504  F698         	movff	?_ld_word,mount_volume@nrsv
 30189   010438  C505  F699         	movff	?_ld_word+1,mount_volume@nrsv+1
 30190   01043C                     
 30191                           ;../fatfs/ff.c: 3534:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 30192   01043C  0106               	movlb	6	; () banked
 30193   01043E  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30194   010440  1199               	iorwf	(mount_volume@nrsv+1)& (0+255),w,b
 30195   010442  A4D8               	btfss	status,2,c
 30196   010444  EF26  F082         	goto	u31001
 30197   010448  EF28  F082         	goto	u31000
 30198   01044C                     u31001:
 30199   01044C  EF2A  F082         	goto	l22719
 30200   010450                     u31000:
 30201   010450  EFC2  F080         	goto	l22657
 30202   010454                     l22719:
 30203                           
 30204                           ; BSR set to: 6
 30205                           ;../fatfs/ff.c: 3537:   sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 30206   010454  EE20 F008          	lfsr	2,8
 30207   010458  51AD               	movf	mount_volume@fs& (0+255),w,b
 30208   01045A  26D9               	addwf	fsr2l,f,c
 30209   01045C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30210   01045E  22DA               	addwfc	fsr2h,f,c
 30211   010460  C4DE F686          	movff	postinc2,??_mount_volume
 30212   010464  C4DD F687          	movff	postdec2,??_mount_volume+1
 30213   010468  0E04               	movlw	4
 30214   01046A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30215   01046C                     u31015:
 30216   01046C  90D8               	bcf	status,0,c
 30217   01046E  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 30218   010470  3386               	rrcf	??_mount_volume& (0+255),f,b
 30219   010472  2F88               	decfsz	(??_mount_volume+2)& (0+255),f,b
 30220   010474  EF36  F082         	goto	u31015
 30221   010478  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30222   01047A  2586               	addwf	??_mount_volume& (0+255),w,b
 30223   01047C  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30224   01047E  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 30225   010480  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 30226   010482  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30227   010484  6B8B               	clrf	(??_mount_volume+5)& (0+255),b
 30228   010486  B0D8               	btfsc	status,0,c
 30229   010488  2B8B               	incf	(??_mount_volume+5)& (0+255),f,b
 30230   01048A  6B8C               	clrf	(??_mount_volume+6)& (0+255),b
 30231   01048C  51A7               	movf	mount_volume@fasize& (0+255),w,b
 30232   01048E  2589               	addwf	(??_mount_volume+3)& (0+255),w,b
 30233   010490  6F94               	movwf	mount_volume@sysect& (0+255),b
 30234   010492  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 30235   010494  218A               	addwfc	(??_mount_volume+4)& (0+255),w,b
 30236   010496  6F95               	movwf	(mount_volume@sysect+1)& (0+255),b
 30237   010498  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 30238   01049A  218B               	addwfc	(??_mount_volume+5)& (0+255),w,b
 30239   01049C  6F96               	movwf	(mount_volume@sysect+2)& (0+255),b
 30240   01049E  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 30241   0104A0  218C               	addwfc	(??_mount_volume+6)& (0+255),w,b
 30242   0104A2  6F97               	movwf	(mount_volume@sysect+3)& (0+255),b
 30243   0104A4                     
 30244                           ; BSR set to: 6
 30245                           ;../fatfs/ff.c: 3538:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 30246   0104A4  5194               	movf	mount_volume@sysect& (0+255),w,b
 30247   0104A6  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 30248   0104A8  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30249   0104AA  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 30250   0104AC  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30251   0104AE  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 30252   0104B0  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30253   0104B2  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 30254   0104B4  B0D8               	btfsc	status,0,c
 30255   0104B6  EF5F  F082         	goto	u31021
 30256   0104BA  EF61  F082         	goto	u31020
 30257   0104BE                     u31021:
 30258   0104BE  EF63  F082         	goto	l22727
 30259   0104C2                     u31020:
 30260   0104C2  EFC2  F080         	goto	l22657
 30261   0104C6                     l22727:
 30262                           
 30263                           ; BSR set to: 6
 30264                           ;../fatfs/ff.c: 3539:   nclst = (tsect - sysect) / fs->csize;
 30265   0104C6  5194               	movf	mount_volume@sysect& (0+255),w,b
 30266   0104C8  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 30267   0104CA  6E04               	movwf	___lldiv@dividend^(0+1280),c
 30268   0104CC  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30269   0104CE  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 30270   0104D0  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 30271   0104D2  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30272   0104D4  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 30273   0104D6  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 30274   0104D8  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30275   0104DA  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 30276   0104DC  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 30277   0104DE  EE20 F00A          	lfsr	2,10
 30278   0104E2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30279   0104E4  26D9               	addwf	fsr2l,f,c
 30280   0104E6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30281   0104E8  22DA               	addwfc	fsr2h,f,c
 30282   0104EA  C4DE F686          	movff	postinc2,??_mount_volume
 30283   0104EE  C4DD F687          	movff	postdec2,??_mount_volume+1
 30284   0104F2  C686  F508         	movff	??_mount_volume,___lldiv@divisor
 30285   0104F6  C687  F509         	movff	??_mount_volume+1,___lldiv@divisor+1
 30286   0104FA  6A0A               	clrf	(___lldiv@divisor+2)^(0+1280),c
 30287   0104FC  6A0B               	clrf	(___lldiv@divisor+3)^(0+1280),c
 30288   0104FE  EC7E  F0F5         	call	___lldiv	;wreg free
 30289   010502  C504  F6A3         	movff	?___lldiv,mount_volume@nclst
 30290   010506  C505  F6A4         	movff	?___lldiv+1,mount_volume@nclst+1
 30291   01050A  C506  F6A5         	movff	?___lldiv+2,mount_volume@nclst+2
 30292   01050E  C507  F6A6         	movff	?___lldiv+3,mount_volume@nclst+3
 30293   010512                     
 30294                           ;../fatfs/ff.c: 3540:   if (nclst == 0) return FR_NO_FILESYSTEM;
 30295   010512  0106               	movlb	6	; () banked
 30296   010514  51A3               	movf	mount_volume@nclst& (0+255),w,b
 30297   010516  11A4               	iorwf	(mount_volume@nclst+1)& (0+255),w,b
 30298   010518  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30299   01051A  11A6               	iorwf	(mount_volume@nclst+3)& (0+255),w,b
 30300   01051C  A4D8               	btfss	status,2,c
 30301   01051E  EF93  F082         	goto	u31031
 30302   010522  EF95  F082         	goto	u31030
 30303   010526                     u31031:
 30304   010526  EF97  F082         	goto	l22735
 30305   01052A                     u31030:
 30306   01052A  EFC2  F080         	goto	l22657
 30307   01052E                     l22735:
 30308                           
 30309                           ; BSR set to: 6
 30310                           ;../fatfs/ff.c: 3541:   fmt = 0;
 30311   01052E  0E00               	movlw	0
 30312   010530  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30313   010532  0E00               	movlw	0
 30314   010534  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30315   010536                     
 30316                           ; BSR set to: 6
 30317                           ;../fatfs/ff.c: 3542:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 30318   010536  0EF6               	movlw	246
 30319   010538  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30320   01053A  0EFF               	movlw	255
 30321   01053C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30322   01053E  0EFF               	movlw	255
 30323   010540  59A5               	subwfb	(mount_volume@nclst+2)& (0+255),w,b
 30324   010542  0E0F               	movlw	15
 30325   010544  59A6               	subwfb	(mount_volume@nclst+3)& (0+255),w,b
 30326   010546  B0D8               	btfsc	status,0,c
 30327   010548  EFA8  F082         	goto	u31041
 30328   01054C  EFAA  F082         	goto	u31040
 30329   010550                     u31041:
 30330   010550  EFAE  F082         	goto	l22741
 30331   010554                     u31040:
 30332   010554                     
 30333                           ; BSR set to: 6
 30334   010554  0E00               	movlw	0
 30335   010556  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30336   010558  0E03               	movlw	3
 30337   01055A  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30338   01055C                     l22741:
 30339                           
 30340                           ; BSR set to: 6
 30341                           ;../fatfs/ff.c: 3543:   if (nclst <= 0xFFF5) fmt = 2;
 30342   01055C  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 30343   01055E  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30344   010560  E109               	bnz	u31051
 30345   010562  0EF6               	movlw	246
 30346   010564  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30347   010566  0EFF               	movlw	255
 30348   010568  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30349   01056A  B0D8               	btfsc	status,0,c
 30350   01056C  EFBA  F082         	goto	u31051
 30351   010570  EFBC  F082         	goto	u31050
 30352   010574                     u31051:
 30353   010574  EFC0  F082         	goto	l22745
 30354   010578                     u31050:
 30355   010578                     
 30356                           ; BSR set to: 6
 30357   010578  0E00               	movlw	0
 30358   01057A  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30359   01057C  0E02               	movlw	2
 30360   01057E  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30361   010580                     l22745:
 30362                           
 30363                           ; BSR set to: 6
 30364                           ;../fatfs/ff.c: 3544:   if (nclst <= 0xFF5) fmt = 1;
 30365   010580  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 30366   010582  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 30367   010584  E109               	bnz	u31061
 30368   010586  0EF6               	movlw	246
 30369   010588  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 30370   01058A  0E0F               	movlw	15
 30371   01058C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 30372   01058E  B0D8               	btfsc	status,0,c
 30373   010590  EFCC  F082         	goto	u31061
 30374   010594  EFCE  F082         	goto	u31060
 30375   010598                     u31061:
 30376   010598  EFD2  F082         	goto	l22749
 30377   01059C                     u31060:
 30378   01059C                     
 30379                           ; BSR set to: 6
 30380   01059C  0E00               	movlw	0
 30381   01059E  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 30382   0105A0  0E01               	movlw	1
 30383   0105A2  6FAB               	movwf	mount_volume@fmt& (0+255),b
 30384   0105A4                     l22749:
 30385                           
 30386                           ; BSR set to: 6
 30387                           ;../fatfs/ff.c: 3545:   if (fmt == 0) return FR_NO_FILESYSTEM;
 30388   0105A4  51AB               	movf	mount_volume@fmt& (0+255),w,b
 30389   0105A6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30390   0105A8  A4D8               	btfss	status,2,c
 30391   0105AA  EFD9  F082         	goto	u31071
 30392   0105AE  EFDB  F082         	goto	u31070
 30393   0105B2                     u31071:
 30394   0105B2  EFDD  F082         	goto	l22755
 30395   0105B6                     u31070:
 30396   0105B6  EFC2  F080         	goto	l22657
 30397   0105BA                     l22755:
 30398                           
 30399                           ; BSR set to: 6
 30400                           ;../fatfs/ff.c: 3548:   fs->n_fatent = nclst + 2;
 30401   0105BA  0E02               	movlw	2
 30402   0105BC  25A3               	addwf	mount_volume@nclst& (0+255),w,b
 30403   0105BE  6F86               	movwf	??_mount_volume& (0+255),b
 30404   0105C0  0E00               	movlw	0
 30405   0105C2  21A4               	addwfc	(mount_volume@nclst+1)& (0+255),w,b
 30406   0105C4  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30407   0105C6  0E00               	movlw	0
 30408   0105C8  21A5               	addwfc	(mount_volume@nclst+2)& (0+255),w,b
 30409   0105CA  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30410   0105CC  0E00               	movlw	0
 30411   0105CE  21A6               	addwfc	(mount_volume@nclst+3)& (0+255),w,b
 30412   0105D0  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30413   0105D2  EE20 F018          	lfsr	2,24
 30414   0105D6  51AD               	movf	mount_volume@fs& (0+255),w,b
 30415   0105D8  26D9               	addwf	fsr2l,f,c
 30416   0105DA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30417   0105DC  22DA               	addwfc	fsr2h,f,c
 30418   0105DE  C686  F4DE         	movff	??_mount_volume,postinc2
 30419   0105E2  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30420   0105E6  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30421   0105EA  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30422                           
 30423                           ;../fatfs/ff.c: 3549:   fs->volbase = bsect;
 30424   0105EE  EE20 F020          	lfsr	2,32
 30425   0105F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30426   0105F4  26D9               	addwf	fsr2l,f,c
 30427   0105F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30428   0105F8  22DA               	addwfc	fsr2h,f,c
 30429   0105FA  C69E  F4DE         	movff	mount_volume@bsect,postinc2
 30430   0105FE  C69F  F4DE         	movff	mount_volume@bsect+1,postinc2
 30431   010602  C6A0  F4DE         	movff	mount_volume@bsect+2,postinc2
 30432   010606  C6A1  F4DE         	movff	mount_volume@bsect+3,postinc2
 30433                           
 30434                           ;../fatfs/ff.c: 3550:   fs->fatbase = bsect + nrsv;
 30435   01060A  5198               	movf	mount_volume@nrsv& (0+255),w,b
 30436   01060C  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30437   01060E  6F86               	movwf	??_mount_volume& (0+255),b
 30438   010610  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 30439   010612  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30440   010614  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30441   010616  0E00               	movlw	0
 30442   010618  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30443   01061A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30444   01061C  0E00               	movlw	0
 30445   01061E  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30446   010620  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30447   010622  EE20 F024          	lfsr	2,36
 30448   010626  51AD               	movf	mount_volume@fs& (0+255),w,b
 30449   010628  26D9               	addwf	fsr2l,f,c
 30450   01062A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30451   01062C  22DA               	addwfc	fsr2h,f,c
 30452   01062E  C686  F4DE         	movff	??_mount_volume,postinc2
 30453   010632  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30454   010636  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30455   01063A  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30456                           
 30457                           ;../fatfs/ff.c: 3551:   fs->database = bsect + sysect;
 30458   01063E  5194               	movf	mount_volume@sysect& (0+255),w,b
 30459   010640  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30460   010642  6F86               	movwf	??_mount_volume& (0+255),b
 30461   010644  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 30462   010646  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30463   010648  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30464   01064A  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 30465   01064C  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30466   01064E  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30467   010650  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 30468   010652  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30469   010654  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30470   010656  EE20 F02C          	lfsr	2,44
 30471   01065A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30472   01065C  26D9               	addwf	fsr2l,f,c
 30473   01065E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30474   010660  22DA               	addwfc	fsr2h,f,c
 30475   010662  C686  F4DE         	movff	??_mount_volume,postinc2
 30476   010666  C687  F4DE         	movff	??_mount_volume+1,postinc2
 30477   01066A  C688  F4DE         	movff	??_mount_volume+2,postinc2
 30478   01066E  C689  F4DE         	movff	??_mount_volume+3,postinc2
 30479   010672                     
 30480                           ; BSR set to: 6
 30481                           ;../fatfs/ff.c: 3552:   if (fmt == 3) {
 30482   010672  0E03               	movlw	3
 30483   010674  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30484   010676  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30485   010678  A4D8               	btfss	status,2,c
 30486   01067A  EF41  F083         	goto	u31081
 30487   01067E  EF43  F083         	goto	u31080
 30488   010682                     u31081:
 30489   010682  EFA0  F083         	goto	l22775
 30490   010686                     u31080:
 30491   010686                     
 30492                           ; BSR set to: 6
 30493                           ;../fatfs/ff.c: 3553:    if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
 30494   010686  0E5E               	movlw	94
 30495   010688  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30496   01068A  6E04               	movwf	ld_word@ptr^(0+1280),c
 30497   01068C  0E00               	movlw	0
 30498   01068E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30499   010690  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30500   010692  EC4C  F0FF         	call	_ld_word	;wreg free
 30501   010696  5004               	movf	?_ld_word^(0+1280),w,c
 30502   010698  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 30503   01069A  B4D8               	btfsc	status,2,c
 30504   01069C  EF52  F083         	goto	u31091
 30505   0106A0  EF54  F083         	goto	u31090
 30506   0106A4                     u31091:
 30507   0106A4  EF56  F083         	goto	l22765
 30508   0106A8                     u31090:
 30509   0106A8  EFC2  F080         	goto	l22657
 30510   0106AC                     l22765:
 30511                           
 30512                           ;../fatfs/ff.c: 3554:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
 30513   0106AC  0106               	movlb	6	; () banked
 30514   0106AE  EE20 F008          	lfsr	2,8
 30515   0106B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30516   0106B4  26D9               	addwf	fsr2l,f,c
 30517   0106B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30518   0106B8  22DA               	addwfc	fsr2h,f,c
 30519   0106BA  50DE               	movf	postinc2,w,c
 30520   0106BC  10DE               	iorwf	postinc2,w,c
 30521   0106BE  B4D8               	btfsc	status,2,c
 30522   0106C0  EF64  F083         	goto	u31101
 30523   0106C4  EF66  F083         	goto	u31100
 30524   0106C8                     u31101:
 30525   0106C8  EF68  F083         	goto	l22771
 30526   0106CC                     u31100:
 30527   0106CC  EFC2  F080         	goto	l22657
 30528   0106D0                     l22771:
 30529                           
 30530                           ; BSR set to: 6
 30531                           ;../fatfs/ff.c: 3555:    fs->dirbase = ld_dword(fs->win + 44);
 30532   0106D0  0E60               	movlw	96
 30533   0106D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30534   0106D4  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30535   0106D6  0E00               	movlw	0
 30536   0106D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30537   0106DA  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30538   0106DC  ECC7  F0F2         	call	_ld_dword	;wreg free
 30539   0106E0  0106               	movlb	6	; () banked
 30540   0106E2  EE20 F028          	lfsr	2,40
 30541   0106E6  51AD               	movf	mount_volume@fs& (0+255),w,b
 30542   0106E8  26D9               	addwf	fsr2l,f,c
 30543   0106EA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30544   0106EC  22DA               	addwfc	fsr2h,f,c
 30545   0106EE  C504  F4DE         	movff	?_ld_dword,postinc2
 30546   0106F2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30547   0106F6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30548   0106FA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30549   0106FE                     
 30550                           ; BSR set to: 6
 30551                           ;../fatfs/ff.c: 3556:    szbfat = fs->n_fatent * 4;
 30552   0106FE  EE20 F018          	lfsr	2,24
 30553   010702  51AD               	movf	mount_volume@fs& (0+255),w,b
 30554   010704  26D9               	addwf	fsr2l,f,c
 30555   010706  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30556   010708  22DA               	addwfc	fsr2h,f,c
 30557   01070A  C4DE F686          	movff	postinc2,??_mount_volume
 30558   01070E  C4DE F687          	movff	postinc2,??_mount_volume+1
 30559   010712  C4DE F688          	movff	postinc2,??_mount_volume+2
 30560   010716  C4DE F689          	movff	postinc2,??_mount_volume+3
 30561   01071A  0E02               	movlw	2
 30562   01071C                     u31115:
 30563   01071C  90D8               	bcf	status,0,c
 30564   01071E  3786               	rlcf	??_mount_volume& (0+255),f,b
 30565   010720  3787               	rlcf	(??_mount_volume+1)& (0+255),f,b
 30566   010722  3788               	rlcf	(??_mount_volume+2)& (0+255),f,b
 30567   010724  3789               	rlcf	(??_mount_volume+3)& (0+255),f,b
 30568   010726  2EE8               	decfsz	wreg,f,c
 30569   010728  EF8E  F083         	goto	u31115
 30570   01072C  C686  F68E         	movff	??_mount_volume,mount_volume@szbfat
 30571   010730  C687  F68F         	movff	??_mount_volume+1,mount_volume@szbfat+1
 30572   010734  C688  F690         	movff	??_mount_volume+2,mount_volume@szbfat+2
 30573   010738  C689  F691         	movff	??_mount_volume+3,mount_volume@szbfat+3
 30574                           
 30575                           ;../fatfs/ff.c: 3557:   } else {
 30576   01073C  EF40  F084         	goto	l1863
 30577   010740                     l22775:
 30578                           
 30579                           ; BSR set to: 6
 30580                           ;../fatfs/ff.c: 3558:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
 30581   010740  EE20 F008          	lfsr	2,8
 30582   010744  51AD               	movf	mount_volume@fs& (0+255),w,b
 30583   010746  26D9               	addwf	fsr2l,f,c
 30584   010748  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30585   01074A  22DA               	addwfc	fsr2h,f,c
 30586   01074C  50DE               	movf	postinc2,w,c
 30587   01074E  10DE               	iorwf	postinc2,w,c
 30588   010750  A4D8               	btfss	status,2,c
 30589   010752  EFAD  F083         	goto	u31121
 30590   010756  EFAF  F083         	goto	u31120
 30591   01075A                     u31121:
 30592   01075A  EFB1  F083         	goto	l22781
 30593   01075E                     u31120:
 30594   01075E  EFC2  F080         	goto	l22657
 30595   010762                     l22781:
 30596                           
 30597                           ; BSR set to: 6
 30598                           ;../fatfs/ff.c: 3559:    fs->dirbase = fs->fatbase + fasize;
 30599   010762  EE20 F024          	lfsr	2,36
 30600   010766  51AD               	movf	mount_volume@fs& (0+255),w,b
 30601   010768  26D9               	addwf	fsr2l,f,c
 30602   01076A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30603   01076C  22DA               	addwfc	fsr2h,f,c
 30604   01076E  C4DE F686          	movff	postinc2,??_mount_volume
 30605   010772  C4DE F687          	movff	postinc2,??_mount_volume+1
 30606   010776  C4DE F688          	movff	postinc2,??_mount_volume+2
 30607   01077A  C4DE F689          	movff	postinc2,??_mount_volume+3
 30608   01077E  51A7               	movf	mount_volume@fasize& (0+255),w,b
 30609   010780  2586               	addwf	??_mount_volume& (0+255),w,b
 30610   010782  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30611   010784  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 30612   010786  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 30613   010788  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30614   01078A  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 30615   01078C  2188               	addwfc	(??_mount_volume+2)& (0+255),w,b
 30616   01078E  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30617   010790  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 30618   010792  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 30619   010794  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30620   010796  EE20 F028          	lfsr	2,40
 30621   01079A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30622   01079C  26D9               	addwf	fsr2l,f,c
 30623   01079E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30624   0107A0  22DA               	addwfc	fsr2h,f,c
 30625   0107A2  C68A  F4DE         	movff	??_mount_volume+4,postinc2
 30626   0107A6  C68B  F4DE         	movff	??_mount_volume+5,postinc2
 30627   0107AA  C68C  F4DE         	movff	??_mount_volume+6,postinc2
 30628   0107AE  C68D  F4DE         	movff	??_mount_volume+7,postinc2
 30629   0107B2                     
 30630                           ; BSR set to: 6
 30631                           ;../fatfs/ff.c: 3560:    szbfat = (fmt == 2) ?
 30632   0107B2  0E02               	movlw	2
 30633   0107B4  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30634   0107B6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30635   0107B8  B4D8               	btfsc	status,2,c
 30636   0107BA  EFE1  F083         	goto	u31131
 30637   0107BE  EFE3  F083         	goto	u31130
 30638   0107C2                     u31131:
 30639   0107C2  EF29  F084         	goto	l22787
 30640   0107C6                     u31130:
 30641   0107C6                     
 30642                           ; BSR set to: 6
 30643   0107C6  EE20 F018          	lfsr	2,24
 30644   0107CA  51AD               	movf	mount_volume@fs& (0+255),w,b
 30645   0107CC  26D9               	addwf	fsr2l,f,c
 30646   0107CE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30647   0107D0  22DA               	addwfc	fsr2h,f,c
 30648   0107D2  C4DE F686          	movff	postinc2,??_mount_volume
 30649   0107D6  C4DE F687          	movff	postinc2,??_mount_volume+1
 30650   0107DA  C4DE F688          	movff	postinc2,??_mount_volume+2
 30651   0107DE  C4DE F689          	movff	postinc2,??_mount_volume+3
 30652   0107E2  0E01               	movlw	1
 30653   0107E4  1586               	andwf	??_mount_volume& (0+255),w,b
 30654   0107E6  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 30655   0107E8  0E00               	movlw	0
 30656   0107EA  1587               	andwf	(??_mount_volume+1)& (0+255),w,b
 30657   0107EC  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 30658   0107EE  0E00               	movlw	0
 30659   0107F0  1588               	andwf	(??_mount_volume+2)& (0+255),w,b
 30660   0107F2  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 30661   0107F4  0E00               	movlw	0
 30662   0107F6  1589               	andwf	(??_mount_volume+3)& (0+255),w,b
 30663   0107F8  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 30664   0107FA  EE20 F018          	lfsr	2,24
 30665   0107FE  51AD               	movf	mount_volume@fs& (0+255),w,b
 30666   010800  26D9               	addwf	fsr2l,f,c
 30667   010802  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30668   010804  22DA               	addwfc	fsr2h,f,c
 30669   010806  C4DE F504          	movff	postinc2,___lmul@multiplier
 30670   01080A  C4DE F505          	movff	postinc2,___lmul@multiplier+1
 30671   01080E  C4DE F506          	movff	postinc2,___lmul@multiplier+2
 30672   010812  C4DE F507          	movff	postinc2,___lmul@multiplier+3
 30673   010816  0E03               	movlw	3
 30674   010818  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 30675   01081A  0E00               	movlw	0
 30676   01081C  6E09               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 30677   01081E  0E00               	movlw	0
 30678   010820  6E0A               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 30679   010822  0E00               	movlw	0
 30680   010824  6E0B               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 30681   010826  EC13  F0FB         	call	___lmul	;wreg free
 30682   01082A  90D8               	bcf	status,0,c
 30683   01082C  3207               	rrcf	(?___lmul+3)^(0+1280),f,c
 30684   01082E  3206               	rrcf	(?___lmul+2)^(0+1280),f,c
 30685   010830  3205               	rrcf	(?___lmul+1)^(0+1280),f,c
 30686   010832  3204               	rrcf	?___lmul^(0+1280),f,c
 30687   010834  0106               	movlb	6	; () banked
 30688   010836  518A               	movf	(??_mount_volume+4)& (0+255),w,b
 30689   010838  2404               	addwf	?___lmul^(0+1280),w,c
 30690   01083A  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 30691   01083C  518B               	movf	(??_mount_volume+5)& (0+255),w,b
 30692   01083E  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 30693   010840  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 30694   010842  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 30695   010844  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 30696   010846  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 30697   010848  518D               	movf	(??_mount_volume+7)& (0+255),w,b
 30698   01084A  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 30699   01084C  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 30700   01084E  EF40  F084         	goto	l1863
 30701   010852                     l22787:
 30702                           
 30703                           ; BSR set to: 6
 30704   010852  EE20 F018          	lfsr	2,24
 30705   010856  51AD               	movf	mount_volume@fs& (0+255),w,b
 30706   010858  26D9               	addwf	fsr2l,f,c
 30707   01085A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30708   01085C  22DA               	addwfc	fsr2h,f,c
 30709   01085E  C4DE F686          	movff	postinc2,??_mount_volume
 30710   010862  C4DE F687          	movff	postinc2,??_mount_volume+1
 30711   010866  C4DE F688          	movff	postinc2,??_mount_volume+2
 30712   01086A  C4DE F689          	movff	postinc2,??_mount_volume+3
 30713   01086E  90D8               	bcf	status,0,c
 30714   010870  3586               	rlcf	??_mount_volume& (0+255),w,b
 30715   010872  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 30716   010874  3587               	rlcf	(??_mount_volume+1)& (0+255),w,b
 30717   010876  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 30718   010878  3588               	rlcf	(??_mount_volume+2)& (0+255),w,b
 30719   01087A  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 30720   01087C  3589               	rlcf	(??_mount_volume+3)& (0+255),w,b
 30721   01087E  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 30722   010880                     l1863:
 30723                           
 30724                           ; BSR set to: 6
 30725                           ;../fatfs/ff.c: 3563:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) retu
      +                          rn FR_NO_FILESYSTEM;
 30726   010880  0EFF               	movlw	255
 30727   010882  258E               	addwf	mount_volume@szbfat& (0+255),w,b
 30728   010884  6F86               	movwf	??_mount_volume& (0+255),b
 30729   010886  0E01               	movlw	1
 30730   010888  218F               	addwfc	(mount_volume@szbfat+1)& (0+255),w,b
 30731   01088A  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 30732   01088C  0E00               	movlw	0
 30733   01088E  2190               	addwfc	(mount_volume@szbfat+2)& (0+255),w,b
 30734   010890  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 30735   010892  0E00               	movlw	0
 30736   010894  2191               	addwfc	(mount_volume@szbfat+3)& (0+255),w,b
 30737   010896  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 30738   010898  0E0A               	movlw	10
 30739   01089A  EF54  F084         	goto	u31140
 30740   01089E                     u31145:
 30741   01089E  90D8               	bcf	status,0,c
 30742   0108A0  3389               	rrcf	(??_mount_volume+3)& (0+255),f,b
 30743   0108A2  3388               	rrcf	(??_mount_volume+2)& (0+255),f,b
 30744   0108A4  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 30745   0108A6  3386               	rrcf	??_mount_volume& (0+255),f,b
 30746   0108A8                     u31140:
 30747   0108A8  2EE8               	decfsz	wreg,f,c
 30748   0108AA  EF4F  F084         	goto	u31145
 30749   0108AE  EE20 F01C          	lfsr	2,28
 30750   0108B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 30751   0108B4  26D9               	addwf	fsr2l,f,c
 30752   0108B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30753   0108B8  22DA               	addwfc	fsr2h,f,c
 30754   0108BA  5186               	movf	??_mount_volume& (0+255),w,b
 30755   0108BC  5CDE               	subwf	postinc2,w,c
 30756   0108BE  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 30757   0108C0  58DE               	subwfb	postinc2,w,c
 30758   0108C2  5188               	movf	(??_mount_volume+2)& (0+255),w,b
 30759   0108C4  58DE               	subwfb	postinc2,w,c
 30760   0108C6  5189               	movf	(??_mount_volume+3)& (0+255),w,b
 30761   0108C8  58DE               	subwfb	postinc2,w,c
 30762   0108CA  B0D8               	btfsc	status,0,c
 30763   0108CC  EF6A  F084         	goto	u31151
 30764   0108D0  EF6C  F084         	goto	u31150
 30765   0108D4                     u31151:
 30766   0108D4  EF6E  F084         	goto	l22793
 30767   0108D8                     u31150:
 30768   0108D8  EFC2  F080         	goto	l22657
 30769   0108DC                     l22793:
 30770                           
 30771                           ; BSR set to: 6
 30772                           ;../fatfs/ff.c: 3567:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 30773   0108DC  EE20 F010          	lfsr	2,16
 30774   0108E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 30775   0108E2  26D9               	addwf	fsr2l,f,c
 30776   0108E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30777   0108E6  22DA               	addwfc	fsr2h,f,c
 30778   0108E8  0EFF               	movlw	255
 30779   0108EA  6EDE               	movwf	postinc2,c
 30780   0108EC  0EFF               	movlw	255
 30781   0108EE  6EDE               	movwf	postinc2,c
 30782   0108F0  0EFF               	movlw	255
 30783   0108F2  6EDE               	movwf	postinc2,c
 30784   0108F4  0EFF               	movlw	255
 30785   0108F6  6EDD               	movwf	postdec2,c
 30786   0108F8  52DD               	movf	postdec2,f,c
 30787   0108FA  52DD               	movf	postdec2,f,c
 30788   0108FC  EE10 F00C          	lfsr	1,12
 30789   010900  51AD               	movf	mount_volume@fs& (0+255),w,b
 30790   010902  26E1               	addwf	fsr1l,f,c
 30791   010904  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30792   010906  22E2               	addwfc	fsr1h,f,c
 30793   010908  C4DE F4E6          	movff	postinc2,postinc1
 30794   01090C  C4DE F4E6          	movff	postinc2,postinc1
 30795   010910  C4DE F4E6          	movff	postinc2,postinc1
 30796   010914  C4DE F4E6          	movff	postinc2,postinc1
 30797   010918                     
 30798                           ; BSR set to: 6
 30799                           ;../fatfs/ff.c: 3568:   fs->fsi_flag = 0x80;
 30800   010918  EE20 F005          	lfsr	2,5
 30801   01091C  51AD               	movf	mount_volume@fs& (0+255),w,b
 30802   01091E  26D9               	addwf	fsr2l,f,c
 30803   010920  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30804   010922  22DA               	addwfc	fsr2h,f,c
 30805   010924  0E80               	movlw	128
 30806   010926  6EDF               	movwf	indf2,c
 30807   010928                     
 30808                           ; BSR set to: 6
 30809                           ;../fatfs/ff.c: 3570:   if (fmt == 3
 30810   010928  0E03               	movlw	3
 30811   01092A  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 30812   01092C  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 30813   01092E  A4D8               	btfss	status,2,c
 30814   010930  EF9C  F084         	goto	u31161
 30815   010934  EF9E  F084         	goto	u31160
 30816   010938                     u31161:
 30817   010938  EF4B  F085         	goto	l22813
 30818   01093C                     u31160:
 30819   01093C                     
 30820                           ; BSR set to: 6
 30821   01093C  0E64               	movlw	100
 30822   01093E  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30823   010940  6E04               	movwf	ld_word@ptr^(0+1280),c
 30824   010942  0E00               	movlw	0
 30825   010944  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30826   010946  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30827   010948  EC4C  F0FF         	call	_ld_word	;wreg free
 30828   01094C  0404               	decf	?_ld_word^(0+1280),w,c
 30829   01094E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 30830   010950  A4D8               	btfss	status,2,c
 30831   010952  EFAD  F084         	goto	u31171
 30832   010956  EFAF  F084         	goto	u31170
 30833   01095A                     u31171:
 30834   01095A  EF4B  F085         	goto	l22813
 30835   01095E                     u31170:
 30836   01095E  C6AD  F61A         	movff	mount_volume@fs,move_window@fs
 30837   010962  C6AE  F61B         	movff	mount_volume@fs+1,move_window@fs+1
 30838   010966  0E01               	movlw	1
 30839   010968  0106               	movlb	6	; () banked
 30840   01096A  259E               	addwf	mount_volume@bsect& (0+255),w,b
 30841   01096C  6F1C               	movwf	move_window@sect& (0+255),b
 30842   01096E  0E00               	movlw	0
 30843   010970  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 30844   010972  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 30845   010974  0E00               	movlw	0
 30846   010976  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 30847   010978  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 30848   01097A  0E00               	movlw	0
 30849   01097C  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 30850   01097E  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 30851   010980  ECAB  F0EF         	call	_move_window	;wreg free
 30852   010984  0900               	iorlw	0
 30853   010986  A4D8               	btfss	status,2,c
 30854   010988  EFC8  F084         	goto	u31181
 30855   01098C  EFCA  F084         	goto	u31180
 30856   010990                     u31181:
 30857   010990  EF4B  F085         	goto	l22813
 30858   010994                     u31180:
 30859   010994                     
 30860                           ;../fatfs/ff.c: 3573:   {;../fatfs/ff.c: 3574:    fs->fsi_flag = 0;
 30861   010994  0106               	movlb	6	; () banked
 30862   010996  EE20 F005          	lfsr	2,5
 30863   01099A  51AD               	movf	mount_volume@fs& (0+255),w,b
 30864   01099C  26D9               	addwf	fsr2l,f,c
 30865   01099E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30866   0109A0  22DA               	addwfc	fsr2h,f,c
 30867   0109A2  6ADF               	clrf	indf2,c
 30868   0109A4                     
 30869                           ; BSR set to: 6
 30870                           ;../fatfs/ff.c: 3575:    if (ld_word(fs->win + 510) == 0xAA55
 30871   0109A4  0E32               	movlw	50
 30872   0109A6  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30873   0109A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 30874   0109AA  0E02               	movlw	2
 30875   0109AC  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30876   0109AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 30877   0109B0  EC4C  F0FF         	call	_ld_word	;wreg free
 30878   0109B4  0E55               	movlw	85
 30879   0109B6  1804               	xorwf	?_ld_word^(0+1280),w,c
 30880   0109B8  E107               	bnz	u31191
 30881   0109BA  0EAA               	movlw	170
 30882   0109BC  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 30883   0109BE  A4D8               	btfss	status,2,c
 30884   0109C0  EFE4  F084         	goto	u31191
 30885   0109C4  EFE6  F084         	goto	u31190
 30886   0109C8                     u31191:
 30887   0109C8  EF4B  F085         	goto	l22813
 30888   0109CC                     u31190:
 30889   0109CC  0E34               	movlw	52
 30890   0109CE  0106               	movlb	6	; () banked
 30891   0109D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30892   0109D2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30893   0109D4  0E00               	movlw	0
 30894   0109D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30895   0109D8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30896   0109DA  ECC7  F0F2         	call	_ld_dword	;wreg free
 30897   0109DE  0E52               	movlw	82
 30898   0109E0  1804               	xorwf	?_ld_dword^(0+1280),w,c
 30899   0109E2  E10D               	bnz	u31201
 30900   0109E4  0E52               	movlw	82
 30901   0109E6  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 30902   0109E8  E10A               	bnz	u31201
 30903   0109EA  0E61               	movlw	97
 30904   0109EC  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 30905   0109EE  E107               	bnz	u31201
 30906   0109F0  0E41               	movlw	65
 30907   0109F2  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 30908   0109F4  A4D8               	btfss	status,2,c
 30909   0109F6  EFFF  F084         	goto	u31201
 30910   0109FA  EF01  F085         	goto	u31200
 30911   0109FE                     u31201:
 30912   0109FE  EF4B  F085         	goto	l22813
 30913   010A02                     u31200:
 30914   010A02  0E18               	movlw	24
 30915   010A04  0106               	movlb	6	; () banked
 30916   010A06  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30917   010A08  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30918   010A0A  0E02               	movlw	2
 30919   010A0C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30920   010A0E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30921   010A10  ECC7  F0F2         	call	_ld_dword	;wreg free
 30922   010A14  0E72               	movlw	114
 30923   010A16  1804               	xorwf	?_ld_dword^(0+1280),w,c
 30924   010A18  E10D               	bnz	u31211
 30925   010A1A  0E72               	movlw	114
 30926   010A1C  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 30927   010A1E  E10A               	bnz	u31211
 30928   010A20  0E41               	movlw	65
 30929   010A22  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 30930   010A24  E107               	bnz	u31211
 30931   010A26  0E61               	movlw	97
 30932   010A28  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 30933   010A2A  A4D8               	btfss	status,2,c
 30934   010A2C  EF1A  F085         	goto	u31211
 30935   010A30  EF1C  F085         	goto	u31210
 30936   010A34                     u31211:
 30937   010A34  EF4B  F085         	goto	l22813
 30938   010A38                     u31210:
 30939   010A38                     
 30940                           ;../fatfs/ff.c: 3578:    {;../fatfs/ff.c: 3580:     fs->free_clst = ld_dword(fs->win + 4
      +                          88);
 30941   010A38  0E1C               	movlw	28
 30942   010A3A  0106               	movlb	6	; () banked
 30943   010A3C  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30944   010A3E  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30945   010A40  0E02               	movlw	2
 30946   010A42  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30947   010A44  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30948   010A46  ECC7  F0F2         	call	_ld_dword	;wreg free
 30949   010A4A  0106               	movlb	6	; () banked
 30950   010A4C  EE20 F010          	lfsr	2,16
 30951   010A50  51AD               	movf	mount_volume@fs& (0+255),w,b
 30952   010A52  26D9               	addwf	fsr2l,f,c
 30953   010A54  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30954   010A56  22DA               	addwfc	fsr2h,f,c
 30955   010A58  C504  F4DE         	movff	?_ld_dword,postinc2
 30956   010A5C  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30957   010A60  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30958   010A64  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30959                           
 30960                           ;../fatfs/ff.c: 3583:     fs->last_clst = ld_dword(fs->win + 492);
 30961   010A68  0E20               	movlw	32
 30962   010A6A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 30963   010A6C  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30964   010A6E  0E02               	movlw	2
 30965   010A70  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 30966   010A72  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30967   010A74  ECC7  F0F2         	call	_ld_dword	;wreg free
 30968   010A78  0106               	movlb	6	; () banked
 30969   010A7A  EE20 F00C          	lfsr	2,12
 30970   010A7E  51AD               	movf	mount_volume@fs& (0+255),w,b
 30971   010A80  26D9               	addwf	fsr2l,f,c
 30972   010A82  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30973   010A84  22DA               	addwfc	fsr2h,f,c
 30974   010A86  C504  F4DE         	movff	?_ld_dword,postinc2
 30975   010A8A  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30976   010A8E  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30977   010A92  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30978   010A96                     l22813:
 30979                           
 30980                           ;../fatfs/ff.c: 3589:  };../fatfs/ff.c: 3591:  fs->fs_type = (BYTE)fmt;
 30981   010A96  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 30982   010A9A  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 30983   010A9E  C6AB  F4DF         	movff	mount_volume@fmt,indf2
 30984   010AA2                     
 30985                           ;../fatfs/ff.c: 3592:  fs->id = ++Fsid;
 30986   010AA2  0107               	movlb	7	; () banked
 30987   010AA4  4BB5               	infsnz	_Fsid& (0+255),f,b
 30988   010AA6  2BB6               	incf	(_Fsid+1)& (0+255),f,b
 30989   010AA8  0106               	movlb	6	; () banked
 30990   010AAA  EE20 F006          	lfsr	2,6
 30991   010AAE  51AD               	movf	mount_volume@fs& (0+255),w,b
 30992   010AB0  26D9               	addwf	fsr2l,f,c
 30993   010AB2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 30994   010AB4  22DA               	addwfc	fsr2h,f,c
 30995   010AB6  C7B5  F4DE         	movff	_Fsid,postinc2
 30996   010ABA  C7B6  F4DD         	movff	_Fsid+1,postdec2
 30997   010ABE                     
 30998                           ; BSR set to: 6
 30999                           ;../fatfs/ff.c: 3600:  fs->cdir = 0;
 31000   010ABE  EE20 F014          	lfsr	2,20
 31001   010AC2  51AD               	movf	mount_volume@fs& (0+255),w,b
 31002   010AC4  26D9               	addwf	fsr2l,f,c
 31003   010AC6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31004   010AC8  22DA               	addwfc	fsr2h,f,c
 31005   010ACA  6ADE               	clrf	postinc2,c
 31006   010ACC  6ADE               	clrf	postinc2,c
 31007   010ACE  6ADE               	clrf	postinc2,c
 31008   010AD0  6ADD               	clrf	postdec2,c
 31009   010AD2  EF6D  F080         	goto	l22625
 31010   010AD6                     l1836:
 31011   010AD6  0012               	return		;funcret
 31012   010AD8                     __end_of_mount_volume:
 31013                           	callstack 0
 31014                           
 31015 ;; *************** function _get_ldnumber *****************
 31016 ;; Defined at:
 31017 ;;		line 3139 in file "../fatfs/ff.c"
 31018 ;; Parameters:    Size  Location     Type
 31019 ;;  path            2    3[COMRAM] PTR PTR const unsigned c
 31020 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 31021 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), 
 31022 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 31023 ;;		 -> f_mount@rp(2), 
 31024 ;; Auto vars:     Size  Location     Type
 31025 ;;  tp              2   14[COMRAM] PTR const unsigned char 
 31026 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 31027 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 31028 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 31029 ;;  vol             2   12[COMRAM] int 
 31030 ;;  tt              2   10[COMRAM] PTR const unsigned char 
 31031 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 31032 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 31033 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 31034 ;;  i               2    7[COMRAM] int 
 31035 ;;  tc              1    9[COMRAM] unsigned char 
 31036 ;; Return value:  Size  Location     Type
 31037 ;;                  2    3[COMRAM] int 
 31038 ;; Registers used:
 31039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31040 ;; Tracked objects:
 31041 ;;		On entry : 0/0
 31042 ;;		On exit  : 0/0
 31043 ;;		Unchanged: 0/0
 31044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31046 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31048 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;Total ram usage:       13 bytes
 31050 ;; Hardware stack levels used: 1
 31051 ;; Hardware stack levels required when called: 1
 31052 ;; This function calls:
 31053 ;;		Nothing
 31054 ;; This function is called by:
 31055 ;;		_mount_volume
 31056 ;;		_f_mount
 31057 ;;		_f_chdrive
 31058 ;;		_f_rename
 31059 ;; This function uses a non-reentrant model
 31060 ;;
 31061                           
 31062                           	psect	text75
 31063   01B304                     __ptext75:
 31064                           	callstack 0
 31065   01B304                     _get_ldnumber:
 31066                           	callstack 117
 31067   01B304                     
 31068                           ;../fatfs/ff.c: 3140:  const TCHAR** path;../fatfs/ff.c: 3142: {;../fatfs/ff.c: 3143:  c
      +                          onst TCHAR *tp;;../fatfs/ff.c: 3144:  const TCHAR *tt;;../fatfs/ff.c: 3145:  TCHAR tc;;.
      +                          ./fatfs/ff.c: 3146:  int i;;../fatfs/ff.c: 3147:  int vol = -1;
 31069   01B304  680D               	setf	get_ldnumber@vol^(0+1280),c
 31070   01B306  680E               	setf	(get_ldnumber@vol+1)^(0+1280),c
 31071   01B308                     
 31072                           ;../fatfs/ff.c: 3153:  tt = tp = *path;
 31073   01B308  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 31074   01B30C  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 31075   01B310  C4DE F50F          	movff	postinc2,get_ldnumber@tp
 31076   01B314  C4DD F510          	movff	postdec2,get_ldnumber@tp+1
 31077   01B318  C50F  F50B         	movff	get_ldnumber@tp,get_ldnumber@tt
 31078   01B31C  C510  F50C         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 31079   01B320                     
 31080                           ;../fatfs/ff.c: 3154:  if (!tp) return vol;
 31081   01B320  500F               	movf	get_ldnumber@tp^(0+1280),w,c
 31082   01B322  1010               	iorwf	(get_ldnumber@tp+1)^(0+1280),w,c
 31083   01B324  A4D8               	btfss	status,2,c
 31084   01B326  EF97  F0D9         	goto	u30061
 31085   01B32A  EF99  F0D9         	goto	u30060
 31086   01B32E                     u30061:
 31087   01B32E  EF9D  F0D9         	goto	l22203
 31088   01B332                     u30060:
 31089   01B332  6804               	setf	?_get_ldnumber^(0+1280),c
 31090   01B334  6805               	setf	(?_get_ldnumber+1)^(0+1280),c
 31091   01B336  EF53  F0DA         	goto	l1785
 31092   01B33A                     l22203:
 31093                           
 31094                           ;../fatfs/ff.c: 3156:   tc = *tt++;
 31095   01B33A  C50B  F4F6         	movff	get_ldnumber@tt,tblptrl
 31096   01B33E  C50C  F4F7         	movff	get_ldnumber@tt+1,tblptrh
 31097   01B342  0E00               	movlw	low (__mediumconst shr (0+16))
 31098   01B344  6EF8               	movwf	tblptru,c
 31099   01B346  0E25               	movlw	(high __ramtop+-1)
 31100   01B348  64F7               	cpfsgt	tblptrh,c
 31101   01B34A  D003               	bra	u30077
 31102   01B34C  0008               	tblrd		*
 31103   01B34E  50F5               	movf	tablat,w,c
 31104   01B350  D005               	bra	u30070
 31105   01B352                     u30077:
 31106   01B352  C4F6 F4E9          	movff	tblptrl,fsr0l
 31107   01B356  C4F7 F4EA          	movff	tblptrh,fsr0h
 31108   01B35A  50EF               	movf	indf0,w,c
 31109   01B35C                     u30070:
 31110   01B35C  6E0A               	movwf	get_ldnumber@tc^(0+1280),c
 31111   01B35E                     
 31112                           ;../fatfs/ff.c: 3157:  } while (!((UINT)(tc) < (0 ? ' ' : '!')) && tc != ':');
 31113   01B35E  4A0B               	infsnz	get_ldnumber@tt^(0+1280),f,c
 31114   01B360  2A0C               	incf	(get_ldnumber@tt+1)^(0+1280),f,c
 31115   01B362  0E20               	movlw	32
 31116   01B364  640A               	cpfsgt	get_ldnumber@tc^(0+1280),c
 31117   01B366  EFB7  F0D9         	goto	u30081
 31118   01B36A  EFB9  F0D9         	goto	u30080
 31119   01B36E                     u30081:
 31120   01B36E  EFC2  F0D9         	goto	l22215
 31121   01B372                     u30080:
 31122   01B372  0E3A               	movlw	58
 31123   01B374  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 31124   01B376  A4D8               	btfss	status,2,c
 31125   01B378  EFC0  F0D9         	goto	u30091
 31126   01B37C  EFC2  F0D9         	goto	u30090
 31127   01B380                     u30091:
 31128   01B380  EF9D  F0D9         	goto	l22203
 31129   01B384                     u30090:
 31130   01B384                     l22215:
 31131                           
 31132                           ;../fatfs/ff.c: 3159:  if (tc == ':') {
 31133   01B384  0E3A               	movlw	58
 31134   01B386  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 31135   01B388  A4D8               	btfss	status,2,c
 31136   01B38A  EFC9  F0D9         	goto	u30101
 31137   01B38E  EFCB  F0D9         	goto	u30100
 31138   01B392                     u30101:
 31139   01B392  EF4C  F0DA         	goto	l1794
 31140   01B396                     u30100:
 31141   01B396                     
 31142                           ;../fatfs/ff.c: 3160:   i = 1;
 31143   01B396  0E00               	movlw	0
 31144   01B398  6E09               	movwf	(get_ldnumber@i+1)^(0+1280),c
 31145   01B39A  0E01               	movlw	1
 31146   01B39C  6E08               	movwf	get_ldnumber@i^(0+1280),c
 31147   01B39E                     
 31148                           ;../fatfs/ff.c: 3161:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 == tt) {
 31149   01B39E  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31150   01B3A2  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31151   01B3A6  0E00               	movlw	low (__mediumconst shr (0+16))
 31152   01B3A8  6EF8               	movwf	tblptru,c
 31153   01B3AA  0E25               	movlw	(high __ramtop+-1)
 31154   01B3AC  64F7               	cpfsgt	tblptrh,c
 31155   01B3AE  D003               	bra	u30117
 31156   01B3B0  0008               	tblrd		*
 31157   01B3B2  50F5               	movf	tablat,w,c
 31158   01B3B4  D005               	bra	u30110
 31159   01B3B6                     u30117:
 31160   01B3B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 31161   01B3BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 31162   01B3BE  50EF               	movf	indf0,w,c
 31163   01B3C0                     u30110:
 31164   01B3C0  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31165   01B3C2  0E2F               	movlw	47
 31166   01B3C4  6406               	cpfsgt	??_get_ldnumber^(0+1280),c
 31167   01B3C6  EFE7  F0D9         	goto	u30121
 31168   01B3CA  EFE9  F0D9         	goto	u30120
 31169   01B3CE                     u30121:
 31170   01B3CE  EF2D  F0DA         	goto	l22227
 31171   01B3D2                     u30120:
 31172   01B3D2  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31173   01B3D6  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31174   01B3DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31175   01B3DC  6EF8               	movwf	tblptru,c
 31176   01B3DE  0E25               	movlw	(high __ramtop+-1)
 31177   01B3E0  64F7               	cpfsgt	tblptrh,c
 31178   01B3E2  D003               	bra	u30137
 31179   01B3E4  0008               	tblrd		*
 31180   01B3E6  50F5               	movf	tablat,w,c
 31181   01B3E8  D005               	bra	u30130
 31182   01B3EA                     u30137:
 31183   01B3EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 31184   01B3EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 31185   01B3F2  50EF               	movf	indf0,w,c
 31186   01B3F4                     u30130:
 31187   01B3F4  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31188   01B3F6  0E3A               	movlw	58
 31189   01B3F8  6006               	cpfslt	??_get_ldnumber^(0+1280),c
 31190   01B3FA  EF01  F0DA         	goto	u30141
 31191   01B3FE  EF03  F0DA         	goto	u30140
 31192   01B402                     u30141:
 31193   01B402  EF2D  F0DA         	goto	l22227
 31194   01B406                     u30140:
 31195   01B406  0E02               	movlw	2
 31196   01B408  240F               	addwf	get_ldnumber@tp^(0+1280),w,c
 31197   01B40A  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31198   01B40C  0E00               	movlw	0
 31199   01B40E  2010               	addwfc	(get_ldnumber@tp+1)^(0+1280),w,c
 31200   01B410  6E07               	movwf	(??_get_ldnumber+1)^(0+1280),c
 31201   01B412  500B               	movf	get_ldnumber@tt^(0+1280),w,c
 31202   01B414  1806               	xorwf	??_get_ldnumber^(0+1280),w,c
 31203   01B416  E107               	bnz	u30151
 31204   01B418  500C               	movf	(get_ldnumber@tt+1)^(0+1280),w,c
 31205   01B41A  1807               	xorwf	(??_get_ldnumber+1)^(0+1280),w,c
 31206   01B41C  A4D8               	btfss	status,2,c
 31207   01B41E  EF13  F0DA         	goto	u30151
 31208   01B422  EF15  F0DA         	goto	u30150
 31209   01B426                     u30151:
 31210   01B426  EF2D  F0DA         	goto	l22227
 31211   01B42A                     u30150:
 31212   01B42A                     
 31213                           ;../fatfs/ff.c: 3162:    i = (int)*tp - '0';
 31214   01B42A  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 31215   01B42E  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 31216   01B432  0E00               	movlw	low (__mediumconst shr (0+16))
 31217   01B434  6EF8               	movwf	tblptru,c
 31218   01B436  0E25               	movlw	(high __ramtop+-1)
 31219   01B438  64F7               	cpfsgt	tblptrh,c
 31220   01B43A  D003               	bra	u30167
 31221   01B43C  0008               	tblrd		*
 31222   01B43E  50F5               	movf	tablat,w,c
 31223   01B440  D005               	bra	u30160
 31224   01B442                     u30167:
 31225   01B442  C4F6 F4E9          	movff	tblptrl,fsr0l
 31226   01B446  C4F7 F4EA          	movff	tblptrh,fsr0h
 31227   01B44A  50EF               	movf	indf0,w,c
 31228   01B44C                     u30160:
 31229   01B44C  6E06               	movwf	??_get_ldnumber^(0+1280),c
 31230   01B44E  0ED0               	movlw	208
 31231   01B450  2406               	addwf	??_get_ldnumber^(0+1280),w,c
 31232   01B452  6E08               	movwf	get_ldnumber@i^(0+1280),c
 31233   01B454  6A09               	clrf	(get_ldnumber@i+1)^(0+1280),c
 31234   01B456  0EFF               	movlw	255
 31235   01B458  2209               	addwfc	(get_ldnumber@i+1)^(0+1280),f,c
 31236   01B45A                     l22227:
 31237                           
 31238                           ;../fatfs/ff.c: 3177:   if (i < 1) {
 31239   01B45A  BE09               	btfsc	(get_ldnumber@i+1)^(0+1280),7,c
 31240   01B45C  EF3A  F0DA         	goto	u30170
 31241   01B460  5009               	movf	(get_ldnumber@i+1)^(0+1280),w,c
 31242   01B462  E106               	bnz	u30171
 31243   01B464  0408               	decf	get_ldnumber@i^(0+1280),w,c
 31244   01B466  B0D8               	btfsc	status,0,c
 31245   01B468  EF38  F0DA         	goto	u30171
 31246   01B46C  EF3A  F0DA         	goto	u30170
 31247   01B470                     u30171:
 31248   01B470  EF46  F0DA         	goto	l22233
 31249   01B474                     u30170:
 31250   01B474                     
 31251                           ;../fatfs/ff.c: 3178:    vol = i;
 31252   01B474  C508  F50D         	movff	get_ldnumber@i,get_ldnumber@vol
 31253   01B478  C509  F50E         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 31254   01B47C                     
 31255                           ;../fatfs/ff.c: 3179:    *path = tt;
 31256   01B47C  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 31257   01B480  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 31258   01B484  C50B  F4DE         	movff	get_ldnumber@tt,postinc2
 31259   01B488  C50C  F4DD         	movff	get_ldnumber@tt+1,postdec2
 31260   01B48C                     l22233:
 31261                           
 31262                           ;../fatfs/ff.c: 3181:   return vol;
 31263   01B48C  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 31264   01B490  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 31265   01B494  EF53  F0DA         	goto	l1785
 31266   01B498                     l1794:
 31267                           
 31268                           ;../fatfs/ff.c: 3204:  vol = CurrVol;
 31269   01B498  C7C7  F50D         	movff	_CurrVol,get_ldnumber@vol
 31270   01B49C  6A0E               	clrf	(get_ldnumber@vol+1)^(0+1280),c
 31271                           
 31272                           ;../fatfs/ff.c: 3208:  return vol;
 31273   01B49E  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 31274   01B4A2  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 31275   01B4A6                     l1785:
 31276   01B4A6  0012               	return		;funcret
 31277   01B4A8                     __end_of_get_ldnumber:
 31278                           	callstack 0
 31279                           
 31280 ;; *************** function _find_volume *****************
 31281 ;; Defined at:
 31282 ;;		line 3332 in file "../fatfs/ff.c"
 31283 ;; Parameters:    Size  Location     Type
 31284 ;;  fs              2   50[BANK6 ] PTR struct .
 31285 ;;		 -> fs(564), NULL(0), 
 31286 ;;  part            2   52[BANK6 ] unsigned int 
 31287 ;; Auto vars:     Size  Location     Type
 31288 ;;  mbr_pt         16   60[BANK6 ] unsigned long [4]
 31289 ;;  i               2   78[BANK6 ] unsigned int 
 31290 ;;  fmt             2   76[BANK6 ] unsigned int 
 31291 ;; Return value:  Size  Location     Type
 31292 ;;                  2   50[BANK6 ] unsigned int 
 31293 ;; Registers used:
 31294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31295 ;; Tracked objects:
 31296 ;;		On entry : 0/0
 31297 ;;		On exit  : 0/0
 31298 ;;		Unchanged: 0/0
 31299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31300 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31301 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31302 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31303 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31304 ;;Total ram usage:       30 bytes
 31305 ;; Hardware stack levels used: 1
 31306 ;; Hardware stack levels required when called: 15
 31307 ;; This function calls:
 31308 ;;		_check_fs
 31309 ;;		_ld_dword
 31310 ;; This function is called by:
 31311 ;;		_mount_volume
 31312 ;; This function uses a non-reentrant model
 31313 ;;
 31314                           
 31315                           	psect	text76
 31316   01A50E                     __ptext76:
 31317                           	callstack 0
 31318   01A50E                     _find_volume:
 31319                           	callstack 103
 31320   01A50E                     
 31321                           ;../fatfs/ff.c: 3333:  FATFS* fs,;../fatfs/ff.c: 3334:  UINT part;../fatfs/ff.c: 3336: {
      +                          ;../fatfs/ff.c: 3337:  UINT fmt, i;;../fatfs/ff.c: 3338:  DWORD mbr_pt[4];;../fatfs/ff.c
      +                          : 3341:  fmt = check_fs(fs, 0);
 31322   01A50E  C632  F624         	movff	find_volume@fs,check_fs@fs
 31323   01A512  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 31324   01A516  0E00               	movlw	0
 31325   01A518  0106               	movlb	6	; () banked
 31326   01A51A  6F26               	movwf	check_fs@sect& (0+255),b
 31327   01A51C  0E00               	movlw	0
 31328   01A51E  6F27               	movwf	(check_fs@sect+1)& (0+255),b
 31329   01A520  0E00               	movlw	0
 31330   01A522  6F28               	movwf	(check_fs@sect+2)& (0+255),b
 31331   01A524  0E00               	movlw	0
 31332   01A526  6F29               	movwf	(check_fs@sect+3)& (0+255),b
 31333   01A528  ECEB  F0C2         	call	_check_fs	;wreg free
 31334   01A52C  C624  F64C         	movff	?_check_fs,find_volume@fmt
 31335   01A530  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 31336   01A534                     
 31337                           ;../fatfs/ff.c: 3342:  if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;
 31338   01A534  0E02               	movlw	2
 31339   01A536  0106               	movlb	6	; () banked
 31340   01A538  194C               	xorwf	find_volume@fmt& (0+255),w,b
 31341   01A53A  114D               	iorwf	(find_volume@fmt+1)& (0+255),w,b
 31342   01A53C  B4D8               	btfsc	status,2,c
 31343   01A53E  EFA3  F0D2         	goto	u30181
 31344   01A542  EFA5  F0D2         	goto	u30180
 31345   01A546                     u30181:
 31346   01A546  EFBF  F0D2         	goto	l22251
 31347   01A54A                     u30180:
 31348   01A54A                     
 31349                           ; BSR set to: 6
 31350   01A54A  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 31351   01A54C  E107               	bnz	u30191
 31352   01A54E  0E03               	movlw	3
 31353   01A550  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 31354   01A552  B0D8               	btfsc	status,0,c
 31355   01A554  EFAE  F0D2         	goto	u30191
 31356   01A558  EFB0  F0D2         	goto	u30190
 31357   01A55C                     u30191:
 31358   01A55C  EFB9  F0D2         	goto	l1816
 31359   01A560                     u30190:
 31360   01A560                     
 31361                           ; BSR set to: 6
 31362   01A560  5134               	movf	find_volume@part& (0+255),w,b
 31363   01A562  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31364   01A564  A4D8               	btfss	status,2,c
 31365   01A566  EFB7  F0D2         	goto	u30201
 31366   01A56A  EFB9  F0D2         	goto	u30200
 31367   01A56E                     u30201:
 31368   01A56E  EFBF  F0D2         	goto	l22251
 31369   01A572                     u30200:
 31370   01A572                     l1816:
 31371                           
 31372                           ; BSR set to: 6
 31373   01A572  C64C  F632         	movff	find_volume@fmt,?_find_volume
 31374   01A576  C64D  F633         	movff	find_volume@fmt+1,?_find_volume+1
 31375   01A57A  EF80  F0D3         	goto	l1817
 31376   01A57E                     l22251:
 31377                           
 31378                           ; BSR set to: 6
 31379                           ;../fatfs/ff.c: 3369:  for (i = 0; i < 4; i++) {
 31380   01A57E  0E00               	movlw	0
 31381   01A580  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31382   01A582  0E00               	movlw	0
 31383   01A584  6F4E               	movwf	find_volume@i& (0+255),b
 31384   01A586                     l22257:
 31385                           
 31386                           ; BSR set to: 6
 31387                           ;../fatfs/ff.c: 3370:   mbr_pt[i] = ld_dword(fs->win + 446 + i * 16 + 8);
 31388   01A586  C64E  F636         	movff	find_volume@i,??_find_volume
 31389   01A58A  C64F  F637         	movff	find_volume@i+1,??_find_volume+1
 31390   01A58E  3B36               	swapf	??_find_volume& (0+255),f,b
 31391   01A590  3B37               	swapf	(??_find_volume+1)& (0+255),f,b
 31392   01A592  0EF0               	movlw	240
 31393   01A594  1737               	andwf	(??_find_volume+1)& (0+255),f,b
 31394   01A596  5136               	movf	??_find_volume& (0+255),w,b
 31395   01A598  0B0F               	andlw	15
 31396   01A59A  1337               	iorwf	(??_find_volume+1)& (0+255),f,b
 31397   01A59C  0EF0               	movlw	240
 31398   01A59E  1736               	andwf	??_find_volume& (0+255),f,b
 31399   01A5A0  5136               	movf	??_find_volume& (0+255),w,b
 31400   01A5A2  2532               	addwf	find_volume@fs& (0+255),w,b
 31401   01A5A4  6F38               	movwf	(??_find_volume+2)& (0+255),b
 31402   01A5A6  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31403   01A5A8  2133               	addwfc	(find_volume@fs+1)& (0+255),w,b
 31404   01A5AA  6F39               	movwf	(??_find_volume+3)& (0+255),b
 31405   01A5AC  0EFA               	movlw	250
 31406   01A5AE  2538               	addwf	(??_find_volume+2)& (0+255),w,b
 31407   01A5B0  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31408   01A5B2  0E01               	movlw	1
 31409   01A5B4  2139               	addwfc	(??_find_volume+3)& (0+255),w,b
 31410   01A5B6  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31411   01A5B8  ECC7  F0F2         	call	_ld_dword	;wreg free
 31412   01A5BC  0E3C               	movlw	low find_volume@mbr_pt
 31413   01A5BE  0106               	movlb	6	; () banked
 31414   01A5C0  6F3A               	movwf	(??_find_volume+4)& (0+255),b
 31415   01A5C2  0E06               	movlw	high find_volume@mbr_pt
 31416   01A5C4  6F3B               	movwf	(??_find_volume+5)& (0+255),b
 31417   01A5C6  90D8               	bcf	status,0,c
 31418   01A5C8  354E               	rlcf	find_volume@i& (0+255),w,b
 31419   01A5CA  6ED9               	movwf	fsr2l,c
 31420   01A5CC  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31421   01A5CE  6EDA               	movwf	fsr2h,c
 31422   01A5D0  90D8               	bcf	status,0,c
 31423   01A5D2  36D9               	rlcf	fsr2l,f,c
 31424   01A5D4  36DA               	rlcf	fsr2h,f,c
 31425   01A5D6  513A               	movf	(??_find_volume+4)& (0+255),w,b
 31426   01A5D8  26D9               	addwf	fsr2l,f,c
 31427   01A5DA  513B               	movf	(??_find_volume+5)& (0+255),w,b
 31428   01A5DC  22DA               	addwfc	fsr2h,f,c
 31429   01A5DE  C504  F4DE         	movff	?_ld_dword,postinc2
 31430   01A5E2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 31431   01A5E6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 31432   01A5EA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 31433   01A5EE                     
 31434                           ; BSR set to: 6
 31435                           ;../fatfs/ff.c: 3371:  }
 31436   01A5EE  4B4E               	infsnz	find_volume@i& (0+255),f,b
 31437   01A5F0  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 31438   01A5F2                     
 31439                           ; BSR set to: 6
 31440   01A5F2  514F               	movf	(find_volume@i+1)& (0+255),w,b
 31441   01A5F4  E109               	bnz	u30210
 31442   01A5F6  0E04               	movlw	4
 31443   01A5F8  5D4E               	subwf	find_volume@i& (0+255),w,b
 31444   01A5FA  A0D8               	btfss	status,0,c
 31445   01A5FC  EF02  F0D3         	goto	u30211
 31446   01A600  EF04  F0D3         	goto	u30210
 31447   01A604                     u30211:
 31448   01A604  EFC3  F0D2         	goto	l22257
 31449   01A608                     u30210:
 31450   01A608                     
 31451                           ; BSR set to: 6
 31452                           ;../fatfs/ff.c: 3372:  i = part ? part - 1 : 0;
 31453   01A608  5134               	movf	find_volume@part& (0+255),w,b
 31454   01A60A  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31455   01A60C  A4D8               	btfss	status,2,c
 31456   01A60E  EF0B  F0D3         	goto	u30221
 31457   01A612  EF0D  F0D3         	goto	u30220
 31458   01A616                     u30221:
 31459   01A616  EF13  F0D3         	goto	l22267
 31460   01A61A                     u30220:
 31461   01A61A                     
 31462                           ; BSR set to: 6
 31463   01A61A  0E00               	movlw	0
 31464   01A61C  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31465   01A61E  0E00               	movlw	0
 31466   01A620  6F4E               	movwf	find_volume@i& (0+255),b
 31467   01A622  EF19  F0D3         	goto	l22269
 31468   01A626                     l22267:
 31469                           
 31470                           ; BSR set to: 6
 31471   01A626  0EFF               	movlw	255
 31472   01A628  2534               	addwf	find_volume@part& (0+255),w,b
 31473   01A62A  6F4E               	movwf	find_volume@i& (0+255),b
 31474   01A62C  0EFF               	movlw	255
 31475   01A62E  2135               	addwfc	(find_volume@part+1)& (0+255),w,b
 31476   01A630  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 31477   01A632                     l22269:
 31478                           
 31479                           ; BSR set to: 6
 31480                           ;../fatfs/ff.c: 3374:   fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;
 31481   01A632  0E3C               	movlw	low find_volume@mbr_pt
 31482   01A634  6F36               	movwf	??_find_volume& (0+255),b
 31483   01A636  0E06               	movlw	high find_volume@mbr_pt
 31484   01A638  6F37               	movwf	(??_find_volume+1)& (0+255),b
 31485   01A63A  90D8               	bcf	status,0,c
 31486   01A63C  354E               	rlcf	find_volume@i& (0+255),w,b
 31487   01A63E  6ED9               	movwf	fsr2l,c
 31488   01A640  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31489   01A642  6EDA               	movwf	fsr2h,c
 31490   01A644  90D8               	bcf	status,0,c
 31491   01A646  36D9               	rlcf	fsr2l,f,c
 31492   01A648  36DA               	rlcf	fsr2h,f,c
 31493   01A64A  5136               	movf	??_find_volume& (0+255),w,b
 31494   01A64C  26D9               	addwf	fsr2l,f,c
 31495   01A64E  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31496   01A650  22DA               	addwfc	fsr2h,f,c
 31497   01A652  50DE               	movf	postinc2,w,c
 31498   01A654  10DE               	iorwf	postinc2,w,c
 31499   01A656  10DE               	iorwf	postinc2,w,c
 31500   01A658  10DE               	iorwf	postinc2,w,c
 31501   01A65A  A4D8               	btfss	status,2,c
 31502   01A65C  EF32  F0D3         	goto	u30231
 31503   01A660  EF34  F0D3         	goto	u30230
 31504   01A664                     u30231:
 31505   01A664  EF3A  F0D3         	goto	l22273
 31506   01A668                     u30230:
 31507   01A668                     
 31508                           ; BSR set to: 6
 31509   01A668  0E00               	movlw	0
 31510   01A66A  6F4D               	movwf	(find_volume@fmt+1)& (0+255),b
 31511   01A66C  0E03               	movlw	3
 31512   01A66E  6F4C               	movwf	find_volume@fmt& (0+255),b
 31513   01A670  EF5C  F0D3         	goto	l22275
 31514   01A674                     l22273:
 31515                           
 31516                           ; BSR set to: 6
 31517   01A674  C632  F624         	movff	find_volume@fs,check_fs@fs
 31518   01A678  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 31519   01A67C  0E3C               	movlw	low find_volume@mbr_pt
 31520   01A67E  6F36               	movwf	??_find_volume& (0+255),b
 31521   01A680  0E06               	movlw	high find_volume@mbr_pt
 31522   01A682  6F37               	movwf	(??_find_volume+1)& (0+255),b
 31523   01A684  90D8               	bcf	status,0,c
 31524   01A686  354E               	rlcf	find_volume@i& (0+255),w,b
 31525   01A688  6ED9               	movwf	fsr2l,c
 31526   01A68A  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 31527   01A68C  6EDA               	movwf	fsr2h,c
 31528   01A68E  90D8               	bcf	status,0,c
 31529   01A690  36D9               	rlcf	fsr2l,f,c
 31530   01A692  36DA               	rlcf	fsr2h,f,c
 31531   01A694  5136               	movf	??_find_volume& (0+255),w,b
 31532   01A696  26D9               	addwf	fsr2l,f,c
 31533   01A698  5137               	movf	(??_find_volume+1)& (0+255),w,b
 31534   01A69A  22DA               	addwfc	fsr2h,f,c
 31535   01A69C  C4DE F626          	movff	postinc2,check_fs@sect
 31536   01A6A0  C4DE F627          	movff	postinc2,check_fs@sect+1
 31537   01A6A4  C4DE F628          	movff	postinc2,check_fs@sect+2
 31538   01A6A8  C4DE F629          	movff	postinc2,check_fs@sect+3
 31539   01A6AC  ECEB  F0C2         	call	_check_fs	;wreg free
 31540   01A6B0  C624  F64C         	movff	?_check_fs,find_volume@fmt
 31541   01A6B4  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 31542   01A6B8                     l22275:
 31543                           
 31544                           ;../fatfs/ff.c: 3375:  } while (part == 0 && fmt >= 2 && ++i < 4);
 31545   01A6B8  0106               	movlb	6	; () banked
 31546   01A6BA  5134               	movf	find_volume@part& (0+255),w,b
 31547   01A6BC  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 31548   01A6BE  A4D8               	btfss	status,2,c
 31549   01A6C0  EF64  F0D3         	goto	u30241
 31550   01A6C4  EF66  F0D3         	goto	u30240
 31551   01A6C8                     u30241:
 31552   01A6C8  EFB9  F0D2         	goto	l1816
 31553   01A6CC                     u30240:
 31554   01A6CC                     
 31555                           ; BSR set to: 6
 31556   01A6CC  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 31557   01A6CE  E109               	bnz	u30250
 31558   01A6D0  0E02               	movlw	2
 31559   01A6D2  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 31560   01A6D4  A0D8               	btfss	status,0,c
 31561   01A6D6  EF6F  F0D3         	goto	u30251
 31562   01A6DA  EF71  F0D3         	goto	u30250
 31563   01A6DE                     u30251:
 31564   01A6DE  EFB9  F0D2         	goto	l1816
 31565   01A6E2                     u30250:
 31566   01A6E2                     
 31567                           ; BSR set to: 6
 31568   01A6E2  4B4E               	infsnz	find_volume@i& (0+255),f,b
 31569   01A6E4  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 31570   01A6E6  514F               	movf	(find_volume@i+1)& (0+255),w,b
 31571   01A6E8  E109               	bnz	u30260
 31572   01A6EA  0E04               	movlw	4
 31573   01A6EC  5D4E               	subwf	find_volume@i& (0+255),w,b
 31574   01A6EE  A0D8               	btfss	status,0,c
 31575   01A6F0  EF7C  F0D3         	goto	u30261
 31576   01A6F4  EF7E  F0D3         	goto	u30260
 31577   01A6F8                     u30261:
 31578   01A6F8  EF19  F0D3         	goto	l22269
 31579   01A6FC                     u30260:
 31580   01A6FC  EFB9  F0D2         	goto	l1816
 31581   01A700                     l1817:
 31582                           
 31583                           ; BSR set to: 6
 31584   01A700  0012               	return		;funcret
 31585   01A702                     __end_of_find_volume:
 31586                           	callstack 0
 31587                           
 31588 ;; *************** function _check_fs *****************
 31589 ;; Defined at:
 31590 ;;		line 3292 in file "../fatfs/ff.c"
 31591 ;; Parameters:    Size  Location     Type
 31592 ;;  fs              2   36[BANK6 ] PTR struct .
 31593 ;;		 -> fs(564), NULL(0), 
 31594 ;;  sect            4   38[BANK6 ] unsigned long 
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;  w               2   47[BANK6 ] unsigned short 
 31597 ;;  sign            2   45[BANK6 ] unsigned short 
 31598 ;;  b               1   49[BANK6 ] unsigned char 
 31599 ;; Return value:  Size  Location     Type
 31600 ;;                  2   36[BANK6 ] unsigned int 
 31601 ;; Registers used:
 31602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31603 ;; Tracked objects:
 31604 ;;		On entry : 0/0
 31605 ;;		On exit  : 0/0
 31606 ;;		Unchanged: 0/0
 31607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31608 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31610 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31611 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31612 ;;Total ram usage:       14 bytes
 31613 ;; Hardware stack levels used: 1
 31614 ;; Hardware stack levels required when called: 14
 31615 ;; This function calls:
 31616 ;;		_ld_dword
 31617 ;;		_ld_word
 31618 ;;		_memcmp
 31619 ;;		_move_window
 31620 ;; This function is called by:
 31621 ;;		_find_volume
 31622 ;; This function uses a non-reentrant model
 31623 ;;
 31624                           
 31625                           	psect	text77
 31626   0185D6                     __ptext77:
 31627                           	callstack 0
 31628   0185D6                     _check_fs:
 31629                           	callstack 103
 31630   0185D6                     
 31631                           ;../fatfs/ff.c: 3293:  FATFS* fs,;../fatfs/ff.c: 3294:  LBA_t sect;../fatfs/ff.c: 3296: 
      +                          {;../fatfs/ff.c: 3297:  WORD w, sign;;../fatfs/ff.c: 3298:  BYTE b;;../fatfs/ff.c: 3301:
      +                            fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;
 31632   0185D6  0106               	movlb	6	; () banked
 31633   0185D8  EE20 F004          	lfsr	2,4
 31634   0185DC  5124               	movf	check_fs@fs& (0+255),w,b
 31635   0185DE  26D9               	addwf	fsr2l,f,c
 31636   0185E0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31637   0185E2  22DA               	addwfc	fsr2h,f,c
 31638   0185E4  6ADF               	clrf	indf2,c
 31639   0185E6  EE20 F030          	lfsr	2,48
 31640   0185EA  5124               	movf	check_fs@fs& (0+255),w,b
 31641   0185EC  26D9               	addwf	fsr2l,f,c
 31642   0185EE  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31643   0185F0  22DA               	addwfc	fsr2h,f,c
 31644   0185F2  0EFF               	movlw	255
 31645   0185F4  6EDE               	movwf	postinc2,c
 31646   0185F6  0EFF               	movlw	255
 31647   0185F8  6EDE               	movwf	postinc2,c
 31648   0185FA  0EFF               	movlw	255
 31649   0185FC  6EDE               	movwf	postinc2,c
 31650   0185FE  0EFF               	movlw	255
 31651   018600  6EDD               	movwf	postdec2,c
 31652   018602                     
 31653                           ; BSR set to: 6
 31654                           ;../fatfs/ff.c: 3302:  if (move_window(fs, sect) != FR_OK) return 4;
 31655   018602  C624  F61A         	movff	check_fs@fs,move_window@fs
 31656   018606  C625  F61B         	movff	check_fs@fs+1,move_window@fs+1
 31657   01860A  C626  F61C         	movff	check_fs@sect,move_window@sect
 31658   01860E  C627  F61D         	movff	check_fs@sect+1,move_window@sect+1
 31659   018612  C628  F61E         	movff	check_fs@sect+2,move_window@sect+2
 31660   018616  C629  F61F         	movff	check_fs@sect+3,move_window@sect+3
 31661   01861A  ECAB  F0EF         	call	_move_window	;wreg free
 31662   01861E  0900               	iorlw	0
 31663   018620  B4D8               	btfsc	status,2,c
 31664   018622  EF15  F0C3         	goto	u29291
 31665   018626  EF17  F0C3         	goto	u29290
 31666   01862A                     u29291:
 31667   01862A  EF1E  F0C3         	goto	l21843
 31668   01862E                     u29290:
 31669   01862E  0E00               	movlw	0
 31670   018630  0106               	movlb	6	; () banked
 31671   018632  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31672   018634  0E04               	movlw	4
 31673   018636  6F24               	movwf	?_check_fs& (0+255),b
 31674   018638  EF60  F0C4         	goto	l1800
 31675   01863C                     l21843:
 31676                           
 31677                           ;../fatfs/ff.c: 3303:  sign = ld_word(fs->win + 510);
 31678   01863C  0E32               	movlw	50
 31679   01863E  0106               	movlb	6	; () banked
 31680   018640  2524               	addwf	check_fs@fs& (0+255),w,b
 31681   018642  6E04               	movwf	ld_word@ptr^(0+1280),c
 31682   018644  0E02               	movlw	2
 31683   018646  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31684   018648  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31685   01864A  EC4C  F0FF         	call	_ld_word	;wreg free
 31686   01864E  C504  F62D         	movff	?_ld_word,check_fs@sign
 31687   018652  C505  F62E         	movff	?_ld_word+1,check_fs@sign+1
 31688   018656                     
 31689                           ;../fatfs/ff.c: 3307:  b = fs->win[0];
 31690   018656  0106               	movlb	6	; () banked
 31691   018658  EE20 F034          	lfsr	2,52
 31692   01865C  5124               	movf	check_fs@fs& (0+255),w,b
 31693   01865E  26D9               	addwf	fsr2l,f,c
 31694   018660  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31695   018662  22DA               	addwfc	fsr2h,f,c
 31696   018664  50DF               	movf	indf2,w,c
 31697   018666  6F31               	movwf	check_fs@b& (0+255),b
 31698   018668                     
 31699                           ; BSR set to: 6
 31700                           ;../fatfs/ff.c: 3308:  if (b == 0xEB || b == 0xE9 || b == 0xE8) {
 31701   018668  0EEB               	movlw	235
 31702   01866A  1931               	xorwf	check_fs@b& (0+255),w,b
 31703   01866C  B4D8               	btfsc	status,2,c
 31704   01866E  EF3B  F0C3         	goto	u29301
 31705   018672  EF3D  F0C3         	goto	u29300
 31706   018676                     u29301:
 31707   018676  EF4F  F0C3         	goto	l21853
 31708   01867A                     u29300:
 31709   01867A                     
 31710                           ; BSR set to: 6
 31711   01867A  0EE9               	movlw	233
 31712   01867C  1931               	xorwf	check_fs@b& (0+255),w,b
 31713   01867E  B4D8               	btfsc	status,2,c
 31714   018680  EF44  F0C3         	goto	u29311
 31715   018684  EF46  F0C3         	goto	u29310
 31716   018688                     u29311:
 31717   018688  EF4F  F0C3         	goto	l21853
 31718   01868C                     u29310:
 31719   01868C                     
 31720                           ; BSR set to: 6
 31721   01868C  0EE8               	movlw	232
 31722   01868E  1931               	xorwf	check_fs@b& (0+255),w,b
 31723   018690  A4D8               	btfss	status,2,c
 31724   018692  EF4D  F0C3         	goto	u29321
 31725   018696  EF4F  F0C3         	goto	u29320
 31726   01869A                     u29321:
 31727   01869A  EF49  F0C4         	goto	l21891
 31728   01869E                     u29320:
 31729   01869E                     l21853:
 31730                           
 31731                           ; BSR set to: 6
 31732                           ;../fatfs/ff.c: 3309:   if (sign == 0xAA55 && !memcmp(fs->win + 82, "FAT32   ", 8)) {
 31733   01869E  0E55               	movlw	85
 31734   0186A0  192D               	xorwf	check_fs@sign& (0+255),w,b
 31735   0186A2  E107               	bnz	u29331
 31736   0186A4  0EAA               	movlw	170
 31737   0186A6  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 31738   0186A8  A4D8               	btfss	status,2,c
 31739   0186AA  EF59  F0C3         	goto	u29331
 31740   0186AE  EF5B  F0C3         	goto	u29330
 31741   0186B2                     u29331:
 31742   0186B2  EF7B  F0C3         	goto	l21861
 31743   0186B6                     u29330:
 31744   0186B6                     
 31745                           ; BSR set to: 6
 31746   0186B6  0E86               	movlw	134
 31747   0186B8  2524               	addwf	check_fs@fs& (0+255),w,b
 31748   0186BA  6E04               	movwf	memcmp@vl^(0+1280),c
 31749   0186BC  0E00               	movlw	0
 31750   0186BE  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31751   0186C0  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 31752   0186C2  0E15               	movlw	low STR_168
 31753   0186C4  6E06               	movwf	memcmp@vr^(0+1280),c
 31754   0186C6  0EFF               	movlw	high STR_168
 31755   0186C8  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 31756   0186CA  0E00               	movlw	0
 31757   0186CC  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 31758   0186CE  0E08               	movlw	8
 31759   0186D0  6E08               	movwf	memcmp@n^(0+1280),c
 31760   0186D2  EC23  F0EA         	call	_memcmp	;wreg free
 31761   0186D6  5004               	movf	?_memcmp^(0+1280),w,c
 31762   0186D8  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 31763   0186DA  A4D8               	btfss	status,2,c
 31764   0186DC  EF72  F0C3         	goto	u29341
 31765   0186E0  EF74  F0C3         	goto	u29340
 31766   0186E4                     u29341:
 31767   0186E4  EF7B  F0C3         	goto	l21861
 31768   0186E8                     u29340:
 31769   0186E8                     l21857:
 31770                           
 31771                           ;../fatfs/ff.c: 3310:    return 0;
 31772   0186E8  0E00               	movlw	0
 31773   0186EA  0106               	movlb	6	; () banked
 31774   0186EC  6F25               	movwf	(?_check_fs+1)& (0+255),b
 31775   0186EE  0E00               	movlw	0
 31776   0186F0  6F24               	movwf	?_check_fs& (0+255),b
 31777   0186F2  EF60  F0C4         	goto	l1800
 31778   0186F6                     l21861:
 31779                           
 31780                           ;../fatfs/ff.c: 3313:   w = ld_word(fs->win + 11);
 31781   0186F6  0E3F               	movlw	63
 31782   0186F8  0106               	movlb	6	; () banked
 31783   0186FA  2524               	addwf	check_fs@fs& (0+255),w,b
 31784   0186FC  6E04               	movwf	ld_word@ptr^(0+1280),c
 31785   0186FE  0E00               	movlw	0
 31786   018700  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31787   018702  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31788   018704  EC4C  F0FF         	call	_ld_word	;wreg free
 31789   018708  C504  F62F         	movff	?_ld_word,check_fs@w
 31790   01870C  C505  F630         	movff	?_ld_word+1,check_fs@w+1
 31791   018710                     
 31792                           ;../fatfs/ff.c: 3314:   b = fs->win[13];
 31793   018710  0106               	movlb	6	; () banked
 31794   018712  EE20 F041          	lfsr	2,65
 31795   018716  5124               	movf	check_fs@fs& (0+255),w,b
 31796   018718  26D9               	addwf	fsr2l,f,c
 31797   01871A  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31798   01871C  22DA               	addwfc	fsr2h,f,c
 31799   01871E  50DF               	movf	indf2,w,c
 31800   018720  6F31               	movwf	check_fs@b& (0+255),b
 31801   018722                     
 31802                           ; BSR set to: 6
 31803                           ;../fatfs/ff.c: 3315:   if ((w & (w - 1)) == 0 && w >= 512 && w <= 512
 31804   018722  0EFF               	movlw	255
 31805   018724  252F               	addwf	check_fs@w& (0+255),w,b
 31806   018726  6F2A               	movwf	??_check_fs& (0+255),b
 31807   018728  0EFF               	movlw	255
 31808   01872A  2130               	addwfc	(check_fs@w+1)& (0+255),w,b
 31809   01872C  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 31810   01872E  512F               	movf	check_fs@w& (0+255),w,b
 31811   018730  172A               	andwf	??_check_fs& (0+255),f,b
 31812   018732  5130               	movf	(check_fs@w+1)& (0+255),w,b
 31813   018734  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 31814   018736  512A               	movf	??_check_fs& (0+255),w,b
 31815   018738  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 31816   01873A  A4D8               	btfss	status,2,c
 31817   01873C  EFA2  F0C3         	goto	u29351
 31818   018740  EFA4  F0C3         	goto	u29350
 31819   018744                     u29351:
 31820   018744  EF49  F0C4         	goto	l21891
 31821   018748                     u29350:
 31822   018748                     
 31823                           ; BSR set to: 6
 31824   018748  0E02               	movlw	2
 31825   01874A  5D30               	subwf	(check_fs@w+1)& (0+255),w,b
 31826   01874C  A0D8               	btfss	status,0,c
 31827   01874E  EFAB  F0C3         	goto	u29361
 31828   018752  EFAD  F0C3         	goto	u29360
 31829   018756                     u29361:
 31830   018756  EF49  F0C4         	goto	l21891
 31831   01875A                     u29360:
 31832   01875A                     
 31833                           ; BSR set to: 6
 31834   01875A  052F               	decf	check_fs@w& (0+255),w,b
 31835   01875C  0E02               	movlw	2
 31836   01875E  5930               	subwfb	(check_fs@w+1)& (0+255),w,b
 31837   018760  B0D8               	btfsc	status,0,c
 31838   018762  EFB5  F0C3         	goto	u29371
 31839   018766  EFB7  F0C3         	goto	u29370
 31840   01876A                     u29371:
 31841   01876A  EF49  F0C4         	goto	l21891
 31842   01876E                     u29370:
 31843   01876E                     
 31844                           ; BSR set to: 6
 31845   01876E  5131               	movf	check_fs@b& (0+255),w,b
 31846   018770  B4D8               	btfsc	status,2,c
 31847   018772  EFBD  F0C3         	goto	u29381
 31848   018776  EFBF  F0C3         	goto	u29380
 31849   01877A                     u29381:
 31850   01877A  EF49  F0C4         	goto	l21891
 31851   01877E                     u29380:
 31852   01877E                     
 31853                           ; BSR set to: 6
 31854   01877E  0EFF               	movlw	255
 31855   018780  2531               	addwf	check_fs@b& (0+255),w,b
 31856   018782  6F2A               	movwf	??_check_fs& (0+255),b
 31857   018784  6B2B               	clrf	(??_check_fs+1)& (0+255),b
 31858   018786  0EFF               	movlw	255
 31859   018788  232B               	addwfc	(??_check_fs+1)& (0+255),f,b
 31860   01878A  5131               	movf	check_fs@b& (0+255),w,b
 31861   01878C  172A               	andwf	??_check_fs& (0+255),f,b
 31862   01878E  0E00               	movlw	0
 31863   018790  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 31864   018792  512A               	movf	??_check_fs& (0+255),w,b
 31865   018794  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 31866   018796  A4D8               	btfss	status,2,c
 31867   018798  EFD0  F0C3         	goto	u29391
 31868   01879C  EFD2  F0C3         	goto	u29390
 31869   0187A0                     u29391:
 31870   0187A0  EF49  F0C4         	goto	l21891
 31871   0187A4                     u29390:
 31872   0187A4                     
 31873                           ; BSR set to: 6
 31874   0187A4  0E42               	movlw	66
 31875   0187A6  2524               	addwf	check_fs@fs& (0+255),w,b
 31876   0187A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 31877   0187AA  0E00               	movlw	0
 31878   0187AC  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31879   0187AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31880   0187B0  EC4C  F0FF         	call	_ld_word	;wreg free
 31881   0187B4  5004               	movf	?_ld_word^(0+1280),w,c
 31882   0187B6  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31883   0187B8  B4D8               	btfsc	status,2,c
 31884   0187BA  EFE1  F0C3         	goto	u29401
 31885   0187BE  EFE3  F0C3         	goto	u29400
 31886   0187C2                     u29401:
 31887   0187C2  EF49  F0C4         	goto	l21891
 31888   0187C6                     u29400:
 31889   0187C6  0106               	movlb	6	; () banked
 31890   0187C8  EE20 F044          	lfsr	2,68
 31891   0187CC  5124               	movf	check_fs@fs& (0+255),w,b
 31892   0187CE  26D9               	addwf	fsr2l,f,c
 31893   0187D0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 31894   0187D2  22DA               	addwfc	fsr2h,f,c
 31895   0187D4  50DF               	movf	indf2,w,c
 31896   0187D6  6F2A               	movwf	??_check_fs& (0+255),b
 31897   0187D8  0EFF               	movlw	255
 31898   0187DA  252A               	addwf	??_check_fs& (0+255),w,b
 31899   0187DC  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 31900   0187DE  6B2C               	clrf	(??_check_fs+2)& (0+255),b
 31901   0187E0  0EFF               	movlw	255
 31902   0187E2  232C               	addwfc	(??_check_fs+2)& (0+255),f,b
 31903   0187E4  512C               	movf	(??_check_fs+2)& (0+255),w,b
 31904   0187E6  E107               	bnz	u29411
 31905   0187E8  0E02               	movlw	2
 31906   0187EA  5D2B               	subwf	(??_check_fs+1)& (0+255),w,b
 31907   0187EC  B0D8               	btfsc	status,0,c
 31908   0187EE  EFFB  F0C3         	goto	u29411
 31909   0187F2  EFFD  F0C3         	goto	u29410
 31910   0187F6                     u29411:
 31911   0187F6  EF49  F0C4         	goto	l21891
 31912   0187FA                     u29410:
 31913   0187FA                     
 31914                           ; BSR set to: 6
 31915   0187FA  0E45               	movlw	69
 31916   0187FC  2524               	addwf	check_fs@fs& (0+255),w,b
 31917   0187FE  6E04               	movwf	ld_word@ptr^(0+1280),c
 31918   018800  0E00               	movlw	0
 31919   018802  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31920   018804  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31921   018806  EC4C  F0FF         	call	_ld_word	;wreg free
 31922   01880A  5004               	movf	?_ld_word^(0+1280),w,c
 31923   01880C  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31924   01880E  B4D8               	btfsc	status,2,c
 31925   018810  EF0C  F0C4         	goto	u29421
 31926   018814  EF0E  F0C4         	goto	u29420
 31927   018818                     u29421:
 31928   018818  EF49  F0C4         	goto	l21891
 31929   01881C                     u29420:
 31930   01881C  0E47               	movlw	71
 31931   01881E  0106               	movlb	6	; () banked
 31932   018820  2524               	addwf	check_fs@fs& (0+255),w,b
 31933   018822  6E04               	movwf	ld_word@ptr^(0+1280),c
 31934   018824  0E00               	movlw	0
 31935   018826  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31936   018828  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31937   01882A  EC4C  F0FF         	call	_ld_word	;wreg free
 31938   01882E  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 31939   018830  E107               	bnz	u29431
 31940   018832  0E80               	movlw	128
 31941   018834  5C04               	subwf	?_ld_word^(0+1280),w,c
 31942   018836  B0D8               	btfsc	status,0,c
 31943   018838  EF20  F0C4         	goto	u29431
 31944   01883C  EF22  F0C4         	goto	u29430
 31945   018840                     u29431:
 31946   018840  EF35  F0C4         	goto	l21885
 31947   018844                     u29430:
 31948   018844  0E54               	movlw	84
 31949   018846  0106               	movlb	6	; () banked
 31950   018848  2524               	addwf	check_fs@fs& (0+255),w,b
 31951   01884A  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31952   01884C  0E00               	movlw	0
 31953   01884E  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31954   018850  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31955   018852  ECC7  F0F2         	call	_ld_dword	;wreg free
 31956   018856  5007               	movf	(?_ld_dword+3)^(0+1280),w,c
 31957   018858  E108               	bnz	u29440
 31958   01885A  0406               	decf	(?_ld_dword+2)^(0+1280),w,c
 31959   01885C  A0D8               	btfss	status,0,c
 31960   01885E  EF33  F0C4         	goto	u29441
 31961   018862  EF35  F0C4         	goto	u29440
 31962   018866                     u29441:
 31963   018866  EF49  F0C4         	goto	l21891
 31964   01886A                     u29440:
 31965   01886A                     l21885:
 31966   01886A  0E4A               	movlw	74
 31967   01886C  0106               	movlb	6	; () banked
 31968   01886E  2524               	addwf	check_fs@fs& (0+255),w,b
 31969   018870  6E04               	movwf	ld_word@ptr^(0+1280),c
 31970   018872  0E00               	movlw	0
 31971   018874  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 31972   018876  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31973   018878  EC4C  F0FF         	call	_ld_word	;wreg free
 31974   01887C  5004               	movf	?_ld_word^(0+1280),w,c
 31975   01887E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 31976   018880  B4D8               	btfsc	status,2,c
 31977   018882  EF45  F0C4         	goto	u29451
 31978   018886  EF47  F0C4         	goto	u29450
 31979   01888A                     u29451:
 31980   01888A  EF49  F0C4         	goto	l21891
 31981   01888E                     u29450:
 31982   01888E  EF74  F0C3         	goto	l21857
 31983   018892                     l21891:
 31984                           
 31985                           ;../fatfs/ff.c: 3325:  return sign == 0xAA55 ? 2 : 3;
 31986   018892  0E55               	movlw	85
 31987   018894  0106               	movlb	6	; () banked
 31988   018896  192D               	xorwf	check_fs@sign& (0+255),w,b
 31989   018898  E109               	bnz	u29460
 31990   01889A  0EAA               	movlw	170
 31991   01889C  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 31992   01889E  B4D8               	btfsc	status,2,c
 31993   0188A0  EF54  F0C4         	goto	u29461
 31994   0188A4  EF56  F0C4         	goto	u29460
 31995   0188A8                     u29461:
 31996   0188A8  EF5C  F0C4         	goto	l21895
 31997   0188AC                     u29460:
 31998   0188AC                     
 31999                           ; BSR set to: 6
 32000   0188AC  0E00               	movlw	0
 32001   0188AE  6F25               	movwf	(?_check_fs+1)& (0+255),b
 32002   0188B0  0E03               	movlw	3
 32003   0188B2  6F24               	movwf	?_check_fs& (0+255),b
 32004   0188B4  EF60  F0C4         	goto	l1800
 32005   0188B8                     l21895:
 32006                           
 32007                           ; BSR set to: 6
 32008   0188B8  0E00               	movlw	0
 32009   0188BA  6F25               	movwf	(?_check_fs+1)& (0+255),b
 32010   0188BC  0E02               	movlw	2
 32011   0188BE  6F24               	movwf	?_check_fs& (0+255),b
 32012   0188C0                     l1800:
 32013                           
 32014                           ; BSR set to: 6
 32015   0188C0  0012               	return		;funcret
 32016   0188C2                     __end_of_check_fs:
 32017                           	callstack 0
 32018                           
 32019 ;; *************** function _disk_initialize *****************
 32020 ;; Defined at:
 32021 ;;		line 53 in file "../drivers/diskio.c"
 32022 ;; Parameters:    Size  Location     Type
 32023 ;;  pdrv            1    wreg     unsigned char 
 32024 ;; Auto vars:     Size  Location     Type
 32025 ;;  pdrv            1  128[BANK6 ] unsigned char 
 32026 ;;  buf           128    0[BANK6 ] unsigned char [128]
 32027 ;; Return value:  Size  Location     Type
 32028 ;;                  1    wreg      unsigned char 
 32029 ;; Registers used:
 32030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32031 ;; Tracked objects:
 32032 ;;		On entry : 0/0
 32033 ;;		On exit  : 0/0
 32034 ;;		Unchanged: 0/0
 32035 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32037 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32039 ;;      Totals:         0       4     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32040 ;;Total ram usage:      133 bytes
 32041 ;; Hardware stack levels used: 1
 32042 ;; Hardware stack levels required when called: 11
 32043 ;; This function calls:
 32044 ;;		_SDCard_read512
 32045 ;;		_printf
 32046 ;;		_util_hexdump
 32047 ;; This function is called by:
 32048 ;;		_mount_volume
 32049 ;; This function uses a non-reentrant model
 32050 ;;
 32051                           
 32052                           	psect	text78
 32053   01B4A8                     __ptext78:
 32054                           	callstack 0
 32055   01B4A8                     _disk_initialize:
 32056                           	callstack 107
 32057                           
 32058                           ; BSR set to: 6
 32059                           ;incstack = 0
 32060                           ;disk_initialize@pdrv stored from wreg
 32061   01B4A8  0106               	movlb	6	; () banked
 32062   01B4AA  6F80               	movwf	disk_initialize@pdrv& (0+255),b
 32063   01B4AC                     
 32064                           ;../drivers/diskio.c: 58:     if (pdrv != 0) {
 32065   01B4AC  0106               	movlb	6	; () banked
 32066   01B4AE  5180               	movf	disk_initialize@pdrv& (0+255),w,b
 32067   01B4B0  B4D8               	btfsc	status,2,c
 32068   01B4B2  EF5D  F0DA         	goto	u30271
 32069   01B4B6  EF5F  F0DA         	goto	u30270
 32070   01B4BA                     u30271:
 32071   01B4BA  EF62  F0DA         	goto	l2448
 32072   01B4BE                     u30270:
 32073   01B4BE                     l22287:
 32074                           
 32075                           ;../drivers/diskio.c: 60:         return 0x02;
 32076   01B4BE  0E02               	movlw	2
 32077   01B4C0  EF25  F0DB         	goto	l2446
 32078   01B4C4                     l2448:
 32079   01B4C4                     
 32080                           ; BSR set to: 6
 32081                           ;../drivers/diskio.c: 65:     if (SDCard_read512(0, 384, buf, 128) != 0) {
 32082   01B4C4  0E00               	movlw	0
 32083   01B4C6  0105               	movlb	5	; () banked
 32084   01B4C8  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 32085   01B4CA  0E00               	movlw	0
 32086   01B4CC  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 32087   01B4CE  0E00               	movlw	0
 32088   01B4D0  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 32089   01B4D2  0E00               	movlw	0
 32090   01B4D4  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 32091   01B4D6  0E01               	movlw	1
 32092   01B4D8  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 32093   01B4DA  0E80               	movlw	128
 32094   01B4DC  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 32095   01B4DE  0E00               	movlw	low disk_initialize@buf
 32096   01B4E0  6FE4               	movwf	SDCard_read512@buf& (0+255),b
 32097   01B4E2  0E06               	movlw	high disk_initialize@buf
 32098   01B4E4  6FE5               	movwf	(SDCard_read512@buf+1)& (0+255),b
 32099   01B4E6  0E00               	movlw	0
 32100   01B4E8  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 32101   01B4EA  0E80               	movlw	128
 32102   01B4EC  6FE6               	movwf	SDCard_read512@count& (0+255),b
 32103   01B4EE  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 32104   01B4F2  0105               	movlb	5	; () banked
 32105   01B4F4  51DE               	movf	?_SDCard_read512& (0+255),w,b
 32106   01B4F6  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 32107   01B4F8  B4D8               	btfsc	status,2,c
 32108   01B4FA  EF81  F0DA         	goto	u30281
 32109   01B4FE  EF83  F0DA         	goto	u30280
 32110   01B502                     u30281:
 32111   01B502  EF85  F0DA         	goto	l22305
 32112   01B506                     u30280:
 32113   01B506  EF5F  F0DA         	goto	l22287
 32114   01B50A                     l22305:
 32115                           
 32116                           ; BSR set to: 5
 32117                           ;../drivers/diskio.c: 72:     if (buf[126] != 0x55 || buf[127] != 0xaa) {
 32118   01B50A  0E55               	movlw	85
 32119   01B50C  0106               	movlb	6	; () banked
 32120   01B50E  197E               	xorwf	(disk_initialize@buf+126)& (0+255),w,b
 32121   01B510  A4D8               	btfss	status,2,c
 32122   01B512  EF8D  F0DA         	goto	u30291
 32123   01B516  EF8F  F0DA         	goto	u30290
 32124   01B51A                     u30291:
 32125   01B51A  EF9A  F0DA         	goto	l2460
 32126   01B51E                     u30290:
 32127   01B51E                     
 32128                           ; BSR set to: 6
 32129   01B51E  0EAA               	movlw	170
 32130   01B520  197F               	xorwf	(disk_initialize@buf+127)& (0+255),w,b
 32131   01B522  B4D8               	btfsc	status,2,c
 32132   01B524  EF96  F0DA         	goto	u30301
 32133   01B528  EF98  F0DA         	goto	u30300
 32134   01B52C                     u30301:
 32135   01B52C  EF9C  F0DA         	goto	l22315
 32136   01B530                     u30300:
 32137   01B530  EF5F  F0DA         	goto	l22287
 32138   01B534                     l2460:
 32139                           
 32140                           ; BSR set to: 6
 32141   01B534  EF5F  F0DA         	goto	l22287
 32142   01B538                     l22315:
 32143                           
 32144                           ; BSR set to: 6
 32145                           ;../drivers/diskio.c: 84:     if (buf[66] != 0x01 && buf[66] != 0x04 && buf[66] != 0x06 
      +                          &&
 32146   01B538  0542               	decf	(disk_initialize@buf+66)& (0+255),w,b
 32147   01B53A  B4D8               	btfsc	status,2,c
 32148   01B53C  EFA2  F0DA         	goto	u30311
 32149   01B540  EFA4  F0DA         	goto	u30310
 32150   01B544                     u30311:
 32151   01B544  EFD3  F0DA         	goto	l22333
 32152   01B548                     u30310:
 32153   01B548                     
 32154                           ; BSR set to: 6
 32155   01B548  0E04               	movlw	4
 32156   01B54A  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32157   01B54C  B4D8               	btfsc	status,2,c
 32158   01B54E  EFAB  F0DA         	goto	u30321
 32159   01B552  EFAD  F0DA         	goto	u30320
 32160   01B556                     u30321:
 32161   01B556  EFD3  F0DA         	goto	l22333
 32162   01B55A                     u30320:
 32163   01B55A                     
 32164                           ; BSR set to: 6
 32165   01B55A  0E06               	movlw	6
 32166   01B55C  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32167   01B55E  B4D8               	btfsc	status,2,c
 32168   01B560  EFB4  F0DA         	goto	u30331
 32169   01B564  EFB6  F0DA         	goto	u30330
 32170   01B568                     u30331:
 32171   01B568  EFD3  F0DA         	goto	l22333
 32172   01B56C                     u30330:
 32173   01B56C                     
 32174                           ; BSR set to: 6
 32175   01B56C  0E0B               	movlw	11
 32176   01B56E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32177   01B570  B4D8               	btfsc	status,2,c
 32178   01B572  EFBD  F0DA         	goto	u30341
 32179   01B576  EFBF  F0DA         	goto	u30340
 32180   01B57A                     u30341:
 32181   01B57A  EFD3  F0DA         	goto	l22333
 32182   01B57E                     u30340:
 32183   01B57E                     
 32184                           ; BSR set to: 6
 32185   01B57E  0E0C               	movlw	12
 32186   01B580  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32187   01B582  B4D8               	btfsc	status,2,c
 32188   01B584  EFC6  F0DA         	goto	u30351
 32189   01B588  EFC8  F0DA         	goto	u30350
 32190   01B58C                     u30351:
 32191   01B58C  EFD3  F0DA         	goto	l22333
 32192   01B590                     u30350:
 32193   01B590                     
 32194                           ; BSR set to: 6
 32195   01B590  0E0E               	movlw	14
 32196   01B592  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 32197   01B594  B4D8               	btfsc	status,2,c
 32198   01B596  EFCF  F0DA         	goto	u30361
 32199   01B59A  EFD1  F0DA         	goto	u30360
 32200   01B59E                     u30361:
 32201   01B59E  EFD3  F0DA         	goto	l22333
 32202   01B5A2                     u30360:
 32203   01B5A2  EF5F  F0DA         	goto	l22287
 32204   01B5A6                     l22333:
 32205                           
 32206                           ; BSR set to: 6
 32207                           ;../drivers/diskio.c: 89:     start_lba = buf[73];
 32208   01B5A6  5149               	movf	(disk_initialize@buf+73)& (0+255),w,b
 32209   01B5A8  0107               	movlb	7	; () banked
 32210   01B5AA  6FEE               	movwf	_start_lba& (0+255),b
 32211   01B5AC  6BEF               	clrf	(_start_lba+1)& (0+255),b
 32212   01B5AE  6BF0               	clrf	(_start_lba+2)& (0+255),b
 32213   01B5B0  6BF1               	clrf	(_start_lba+3)& (0+255),b
 32214   01B5B2                     
 32215                           ; BSR set to: 7
 32216                           ;../drivers/diskio.c: 90:     start_lba = (start_lba << 8) | buf[72];
 32217   01B5B2  0106               	movlb	6	; () banked
 32218   01B5B4  5148               	movf	(disk_initialize@buf+72)& (0+255),w,b
 32219   01B5B6  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32220   01B5BA  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32221   01B5BE  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32222   01B5C2  0105               	movlb	5	; () banked
 32223   01B5C4  6BFB               	clrf	??_disk_initialize& (0+255),b
 32224   01B5C6  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32225   01B5C8  0107               	movlb	7	; () banked
 32226   01B5CA  6FEE               	movwf	_start_lba& (0+255),b
 32227   01B5CC  0105               	movlb	5	; () banked
 32228   01B5CE  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32229   01B5D0  0107               	movlb	7	; () banked
 32230   01B5D2  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32231   01B5D4  0105               	movlb	5	; () banked
 32232   01B5D6  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32233   01B5D8  0107               	movlb	7	; () banked
 32234   01B5DA  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32235   01B5DC  0105               	movlb	5	; () banked
 32236   01B5DE  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32237   01B5E0  0107               	movlb	7	; () banked
 32238   01B5E2  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32239   01B5E4                     
 32240                           ; BSR set to: 7
 32241                           ;../drivers/diskio.c: 91:     start_lba = (start_lba << 8) | buf[71];
 32242   01B5E4  0106               	movlb	6	; () banked
 32243   01B5E6  5147               	movf	(disk_initialize@buf+71)& (0+255),w,b
 32244   01B5E8  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32245   01B5EC  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32246   01B5F0  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32247   01B5F4  0105               	movlb	5	; () banked
 32248   01B5F6  6BFB               	clrf	??_disk_initialize& (0+255),b
 32249   01B5F8  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32250   01B5FA  0107               	movlb	7	; () banked
 32251   01B5FC  6FEE               	movwf	_start_lba& (0+255),b
 32252   01B5FE  0105               	movlb	5	; () banked
 32253   01B600  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32254   01B602  0107               	movlb	7	; () banked
 32255   01B604  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32256   01B606  0105               	movlb	5	; () banked
 32257   01B608  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32258   01B60A  0107               	movlb	7	; () banked
 32259   01B60C  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32260   01B60E  0105               	movlb	5	; () banked
 32261   01B610  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32262   01B612  0107               	movlb	7	; () banked
 32263   01B614  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32264   01B616                     
 32265                           ; BSR set to: 7
 32266                           ;../drivers/diskio.c: 92:     start_lba = (start_lba << 8) | buf[70];
 32267   01B616  0106               	movlb	6	; () banked
 32268   01B618  5146               	movf	(disk_initialize@buf+70)& (0+255),w,b
 32269   01B61A  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 32270   01B61E  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 32271   01B622  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 32272   01B626  0105               	movlb	5	; () banked
 32273   01B628  6BFB               	clrf	??_disk_initialize& (0+255),b
 32274   01B62A  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 32275   01B62C  0107               	movlb	7	; () banked
 32276   01B62E  6FEE               	movwf	_start_lba& (0+255),b
 32277   01B630  0105               	movlb	5	; () banked
 32278   01B632  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 32279   01B634  0107               	movlb	7	; () banked
 32280   01B636  6FEF               	movwf	(_start_lba+1)& (0+255),b
 32281   01B638  0105               	movlb	5	; () banked
 32282   01B63A  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 32283   01B63C  0107               	movlb	7	; () banked
 32284   01B63E  6FF0               	movwf	(_start_lba+2)& (0+255),b
 32285   01B640  0105               	movlb	5	; () banked
 32286   01B642  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 32287   01B644  0107               	movlb	7	; () banked
 32288   01B646  6FF1               	movwf	(_start_lba+3)& (0+255),b
 32289   01B648                     
 32290                           ; BSR set to: 7
 32291                           ;../drivers/diskio.c: 95:     return 0;
 32292   01B648  0E00               	movlw	0
 32293   01B64A                     l2446:
 32294   01B64A  0012               	return		;funcret
 32295   01B64C                     __end_of_disk_initialize:
 32296                           	callstack 0
 32297                           
 32298 ;; *************** function _follow_path *****************
 32299 ;; Defined at:
 32300 ;;		line 3052 in file "../fatfs/ff.c"
 32301 ;; Parameters:    Size  Location     Type
 32302 ;;  dp              2  132[BANK6 ] PTR struct .
 32303 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 32304 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 32305 ;;		 -> scan_files@dir(40), 
 32306 ;;  path            2  134[BANK6 ] PTR const unsigned char 
 32307 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 32308 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 32309 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 32310 ;; Auto vars:     Size  Location     Type
 32311 ;;  fs              2  142[BANK6 ] PTR struct .
 32312 ;;		 -> fs(564), NULL(0), 
 32313 ;;  res             1  145[BANK6 ] enum E597
 32314 ;;  ns              1  144[BANK6 ] unsigned char 
 32315 ;; Return value:  Size  Location     Type
 32316 ;;                  1    wreg      enum E597
 32317 ;; Registers used:
 32318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32324 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;Total ram usage:       14 bytes
 32329 ;; Hardware stack levels used: 1
 32330 ;; Hardware stack levels required when called: 18
 32331 ;; This function calls:
 32332 ;;		_create_name
 32333 ;;		_dir_find
 32334 ;;		_dir_sdi
 32335 ;;		_ld_clust
 32336 ;; This function is called by:
 32337 ;;		_f_open
 32338 ;;		_f_chdir
 32339 ;;		_f_opendir
 32340 ;;		_f_stat
 32341 ;;		_f_unlink
 32342 ;;		_f_mkdir
 32343 ;;		_f_rename
 32344 ;; This function uses a non-reentrant model
 32345 ;;
 32346                           
 32347                           	psect	text79
 32348   0188C2                     __ptext79:
 32349                           	callstack 0
 32350   0188C2                     _follow_path:
 32351                           	callstack 101
 32352   0188C2                     
 32353                           ;../fatfs/ff.c: 3053:  DIR* dp,;../fatfs/ff.c: 3054:  const TCHAR* path;../fatfs/ff.c: 3
      +                          056: {;../fatfs/ff.c: 3057:  FRESULT res;;../fatfs/ff.c: 3058:  BYTE ns;;../fatfs/ff.c: 
      +                          3059:  FATFS *fs = dp->obj.fs;
 32354   0188C2  C684  F4D9         	movff	follow_path@dp,fsr2l
 32355   0188C6  C685  F4DA         	movff	follow_path@dp+1,fsr2h
 32356   0188CA  C4DE F68E          	movff	postinc2,follow_path@fs
 32357   0188CE  C4DD F68F          	movff	postdec2,follow_path@fs+1
 32358   0188D2                     
 32359                           ;../fatfs/ff.c: 3063:  if (!((*path) == '/' || (*path) == '\\') && (0 != 2 || !((UINT)(*
      +                          path) < (0 ? ' ' : '!')))) {
 32360   0188D2  C686  F4F6         	movff	follow_path@path,tblptrl
 32361   0188D6  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32362   0188DA  0E00               	movlw	low (__mediumconst shr (0+16))
 32363   0188DC  6EF8               	movwf	tblptru,c
 32364   0188DE  0E25               	movlw	(high __ramtop+-1)
 32365   0188E0  64F7               	cpfsgt	tblptrh,c
 32366   0188E2  D003               	bra	u30637
 32367   0188E4  0008               	tblrd		*
 32368   0188E6  50F5               	movf	tablat,w,c
 32369   0188E8  D005               	bra	u30630
 32370   0188EA                     u30637:
 32371   0188EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 32372   0188EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 32373   0188F2  50EF               	movf	indf0,w,c
 32374   0188F4                     u30630:
 32375   0188F4  0A2F               	xorlw	47
 32376   0188F6  B4D8               	btfsc	status,2,c
 32377   0188F8  EF80  F0C4         	goto	u30641
 32378   0188FC  EF82  F0C4         	goto	u30640
 32379   018900                     u30641:
 32380   018900  EFB5  F0C4         	goto	l22539
 32381   018904                     u30640:
 32382   018904  C686  F4F6         	movff	follow_path@path,tblptrl
 32383   018908  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32384   01890C  0E00               	movlw	low (__mediumconst shr (0+16))
 32385   01890E  6EF8               	movwf	tblptru,c
 32386   018910  0E25               	movlw	(high __ramtop+-1)
 32387   018912  64F7               	cpfsgt	tblptrh,c
 32388   018914  D003               	bra	u30657
 32389   018916  0008               	tblrd		*
 32390   018918  50F5               	movf	tablat,w,c
 32391   01891A  D005               	bra	u30650
 32392   01891C                     u30657:
 32393   01891C  C4F6 F4E9          	movff	tblptrl,fsr0l
 32394   018920  C4F7 F4EA          	movff	tblptrh,fsr0h
 32395   018924  50EF               	movf	indf0,w,c
 32396   018926                     u30650:
 32397   018926  0A5C               	xorlw	92
 32398   018928  B4D8               	btfsc	status,2,c
 32399   01892A  EF99  F0C4         	goto	u30661
 32400   01892E  EF9B  F0C4         	goto	u30660
 32401   018932                     u30661:
 32402   018932  EFB5  F0C4         	goto	l22539
 32403   018936                     u30660:
 32404   018936                     
 32405                           ;../fatfs/ff.c: 3064:   dp->obj.sclust = fs->cdir;
 32406   018936  0106               	movlb	6	; () banked
 32407   018938  EE20 F014          	lfsr	2,20
 32408   01893C  518E               	movf	follow_path@fs& (0+255),w,b
 32409   01893E  26D9               	addwf	fsr2l,f,c
 32410   018940  518F               	movf	(follow_path@fs+1)& (0+255),w,b
 32411   018942  22DA               	addwfc	fsr2h,f,c
 32412   018944  EE10 F006          	lfsr	1,6
 32413   018948  5184               	movf	follow_path@dp& (0+255),w,b
 32414   01894A  26E1               	addwf	fsr1l,f,c
 32415   01894C  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32416   01894E  22E2               	addwfc	fsr1h,f,c
 32417   018950  C4DE F4E6          	movff	postinc2,postinc1
 32418   018954  C4DE F4E6          	movff	postinc2,postinc1
 32419   018958  C4DE F4E6          	movff	postinc2,postinc1
 32420   01895C  C4DE F4E6          	movff	postinc2,postinc1
 32421                           
 32422                           ;../fatfs/ff.c: 3065:  } else
 32423   018960  EFF2  F0C4         	goto	l22545
 32424   018964                     l22537:
 32425   018964  0106               	movlb	6	; () banked
 32426   018966  4B86               	infsnz	follow_path@path& (0+255),f,b
 32427   018968  2B87               	incf	(follow_path@path+1)& (0+255),f,b
 32428   01896A                     l22539:
 32429   01896A  C686  F4F6         	movff	follow_path@path,tblptrl
 32430   01896E  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32431   018972  0E00               	movlw	low (__mediumconst shr (0+16))
 32432   018974  6EF8               	movwf	tblptru,c
 32433   018976  0E25               	movlw	(high __ramtop+-1)
 32434   018978  64F7               	cpfsgt	tblptrh,c
 32435   01897A  D003               	bra	u30677
 32436   01897C  0008               	tblrd		*
 32437   01897E  50F5               	movf	tablat,w,c
 32438   018980  D005               	bra	u30670
 32439   018982                     u30677:
 32440   018982  C4F6 F4E9          	movff	tblptrl,fsr0l
 32441   018986  C4F7 F4EA          	movff	tblptrh,fsr0h
 32442   01898A  50EF               	movf	indf0,w,c
 32443   01898C                     u30670:
 32444   01898C  0A2F               	xorlw	47
 32445   01898E  B4D8               	btfsc	status,2,c
 32446   018990  EFCC  F0C4         	goto	u30681
 32447   018994  EFCE  F0C4         	goto	u30680
 32448   018998                     u30681:
 32449   018998  EFB2  F0C4         	goto	l22537
 32450   01899C                     u30680:
 32451   01899C  C686  F4F6         	movff	follow_path@path,tblptrl
 32452   0189A0  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32453   0189A4  0E00               	movlw	low (__mediumconst shr (0+16))
 32454   0189A6  6EF8               	movwf	tblptru,c
 32455   0189A8  0E25               	movlw	(high __ramtop+-1)
 32456   0189AA  64F7               	cpfsgt	tblptrh,c
 32457   0189AC  D003               	bra	u30697
 32458   0189AE  0008               	tblrd		*
 32459   0189B0  50F5               	movf	tablat,w,c
 32460   0189B2  D005               	bra	u30690
 32461   0189B4                     u30697:
 32462   0189B4  C4F6 F4E9          	movff	tblptrl,fsr0l
 32463   0189B8  C4F7 F4EA          	movff	tblptrh,fsr0h
 32464   0189BC  50EF               	movf	indf0,w,c
 32465   0189BE                     u30690:
 32466   0189BE  0A5C               	xorlw	92
 32467   0189C0  B4D8               	btfsc	status,2,c
 32468   0189C2  EFE5  F0C4         	goto	u30701
 32469   0189C6  EFE7  F0C4         	goto	u30700
 32470   0189CA                     u30701:
 32471   0189CA  EFB2  F0C4         	goto	l22537
 32472   0189CE                     u30700:
 32473   0189CE                     
 32474                           ;../fatfs/ff.c: 3069:   dp->obj.sclust = 0;
 32475   0189CE  0106               	movlb	6	; () banked
 32476   0189D0  EE20 F006          	lfsr	2,6
 32477   0189D4  5184               	movf	follow_path@dp& (0+255),w,b
 32478   0189D6  26D9               	addwf	fsr2l,f,c
 32479   0189D8  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32480   0189DA  22DA               	addwfc	fsr2h,f,c
 32481   0189DC  6ADE               	clrf	postinc2,c
 32482   0189DE  6ADE               	clrf	postinc2,c
 32483   0189E0  6ADE               	clrf	postinc2,c
 32484   0189E2  6ADD               	clrf	postdec2,c
 32485   0189E4                     l22545:
 32486                           
 32487                           ; BSR set to: 6
 32488                           ;../fatfs/ff.c: 3088:  if ((UINT)*path < ' ') {
 32489   0189E4  C686  F4F6         	movff	follow_path@path,tblptrl
 32490   0189E8  C687  F4F7         	movff	follow_path@path+1,tblptrh
 32491   0189EC  0E00               	movlw	low (__mediumconst shr (0+16))
 32492   0189EE  6EF8               	movwf	tblptru,c
 32493   0189F0  0E25               	movlw	(high __ramtop+-1)
 32494   0189F2  64F7               	cpfsgt	tblptrh,c
 32495   0189F4  D003               	bra	u30717
 32496   0189F6  0008               	tblrd		*
 32497   0189F8  50F5               	movf	tablat,w,c
 32498   0189FA  D005               	bra	u30710
 32499   0189FC                     u30717:
 32500   0189FC  C4F6 F4E9          	movff	tblptrl,fsr0l
 32501   018A00  C4F7 F4EA          	movff	tblptrh,fsr0h
 32502   018A04  50EF               	movf	indf0,w,c
 32503   018A06                     u30710:
 32504   018A06  0106               	movlb	6	; () banked
 32505   018A08  6F88               	movwf	??_follow_path& (0+255),b
 32506   018A0A  0E20               	movlw	32
 32507   018A0C  6188               	cpfslt	??_follow_path& (0+255),b
 32508   018A0E  EF0B  F0C5         	goto	u30721
 32509   018A12  EF0D  F0C5         	goto	u30720
 32510   018A16                     u30721:
 32511   018A16  EF27  F0C5         	goto	l22551
 32512   018A1A                     u30720:
 32513   018A1A                     
 32514                           ; BSR set to: 6
 32515                           ;../fatfs/ff.c: 3089:   dp->fn[11] = 0x80;
 32516   018A1A  EE20 F027          	lfsr	2,39
 32517   018A1E  5184               	movf	follow_path@dp& (0+255),w,b
 32518   018A20  26D9               	addwf	fsr2l,f,c
 32519   018A22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32520   018A24  22DA               	addwfc	fsr2h,f,c
 32521   018A26  0E80               	movlw	128
 32522   018A28  6EDF               	movwf	indf2,c
 32523   018A2A                     
 32524                           ; BSR set to: 6
 32525                           ;../fatfs/ff.c: 3090:   res = dir_sdi(dp, 0);
 32526   018A2A  C684  F63E         	movff	follow_path@dp,dir_sdi@dp
 32527   018A2E  C685  F63F         	movff	follow_path@dp+1,dir_sdi@dp+1
 32528   018A32  0E00               	movlw	0
 32529   018A34  6F40               	movwf	dir_sdi@ofs& (0+255),b
 32530   018A36  0E00               	movlw	0
 32531   018A38  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 32532   018A3A  0E00               	movlw	0
 32533   018A3C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 32534   018A3E  0E00               	movlw	0
 32535   018A40  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 32536   018A42  EC72  F0BC         	call	_dir_sdi	;wreg free
 32537   018A46  0106               	movlb	6	; () banked
 32538   018A48  6F91               	movwf	follow_path@res& (0+255),b
 32539                           
 32540                           ;../fatfs/ff.c: 3092:  } else {
 32541   018A4A  EFCF  F0C5         	goto	l22585
 32542   018A4E                     l22551:
 32543                           
 32544                           ; BSR set to: 6
 32545                           ;../fatfs/ff.c: 3094:    res = create_name(dp, &path);
 32546   018A4E  C684  F50C         	movff	follow_path@dp,create_name@dp
 32547   018A52  C685  F50D         	movff	follow_path@dp+1,create_name@dp+1
 32548   018A56  0E86               	movlw	low follow_path@path
 32549   018A58  6E0E               	movwf	create_name@path^(0+1280),c
 32550   018A5A  0E06               	movlw	high follow_path@path
 32551   018A5C  6E0F               	movwf	(create_name@path+1)^(0+1280),c
 32552   018A5E  ECCA  F0A2         	call	_create_name	;wreg free
 32553   018A62  0106               	movlb	6	; () banked
 32554   018A64  6F91               	movwf	follow_path@res& (0+255),b
 32555   018A66                     
 32556                           ; BSR set to: 6
 32557                           ;../fatfs/ff.c: 3095:    if (res != FR_OK) break;
 32558   018A66  5191               	movf	follow_path@res& (0+255),w,b
 32559   018A68  B4D8               	btfsc	status,2,c
 32560   018A6A  EF39  F0C5         	goto	u30731
 32561   018A6E  EF3B  F0C5         	goto	u30730
 32562   018A72                     u30731:
 32563   018A72  EF3D  F0C5         	goto	l22557
 32564   018A76                     u30730:
 32565   018A76  EFCF  F0C5         	goto	l22585
 32566   018A7A                     l22557:
 32567                           
 32568                           ; BSR set to: 6
 32569                           ;../fatfs/ff.c: 3096:    res = dir_find(dp);
 32570   018A7A  C684  F67C         	movff	follow_path@dp,dir_find@dp
 32571   018A7E  C685  F67D         	movff	follow_path@dp+1,dir_find@dp+1
 32572   018A82  EC52  F0DE         	call	_dir_find	;wreg free
 32573   018A86  0106               	movlb	6	; () banked
 32574   018A88  6F91               	movwf	follow_path@res& (0+255),b
 32575   018A8A                     
 32576                           ; BSR set to: 6
 32577                           ;../fatfs/ff.c: 3097:    ns = dp->fn[11];
 32578   018A8A  EE20 F027          	lfsr	2,39
 32579   018A8E  5184               	movf	follow_path@dp& (0+255),w,b
 32580   018A90  26D9               	addwf	fsr2l,f,c
 32581   018A92  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32582   018A94  22DA               	addwfc	fsr2h,f,c
 32583   018A96  50DF               	movf	indf2,w,c
 32584   018A98  6F90               	movwf	follow_path@ns& (0+255),b
 32585   018A9A                     
 32586                           ; BSR set to: 6
 32587                           ;../fatfs/ff.c: 3098:    if (res != FR_OK) {
 32588   018A9A  5191               	movf	follow_path@res& (0+255),w,b
 32589   018A9C  B4D8               	btfsc	status,2,c
 32590   018A9E  EF53  F0C5         	goto	u30741
 32591   018AA2  EF55  F0C5         	goto	u30740
 32592   018AA6                     u30741:
 32593   018AA6  EF84  F0C5         	goto	l1772
 32594   018AAA                     u30740:
 32595   018AAA                     
 32596                           ; BSR set to: 6
 32597                           ;../fatfs/ff.c: 3100:      if (2 && (ns & 0x20)) {
 32598   018AAA  0E04               	movlw	4
 32599   018AAC  1991               	xorwf	follow_path@res& (0+255),w,b
 32600   018AAE  A4D8               	btfss	status,2,c
 32601   018AB0  EF5C  F0C5         	goto	u30751
 32602   018AB4  EF5E  F0C5         	goto	u30750
 32603   018AB8                     u30751:
 32604   018AB8  EFCF  F0C5         	goto	l22585
 32605   018ABC                     u30750:
 32606   018ABC                     
 32607                           ; BSR set to: 6
 32608   018ABC  AB90               	btfss	follow_path@ns& (0+255),5,b
 32609   018ABE  EF63  F0C5         	goto	u30761
 32610   018AC2  EF65  F0C5         	goto	u30760
 32611   018AC6                     u30761:
 32612   018AC6  EF79  F0C5         	goto	l1774
 32613   018ACA                     u30760:
 32614   018ACA                     
 32615                           ; BSR set to: 6
 32616                           ;../fatfs/ff.c: 3101:       if (!(ns & 0x04)) continue;
 32617   018ACA  B590               	btfsc	follow_path@ns& (0+255),2,b
 32618   018ACC  EF6A  F0C5         	goto	u30771
 32619   018AD0  EF6C  F0C5         	goto	u30770
 32620   018AD4                     u30771:
 32621   018AD4  EF6E  F0C5         	goto	l22571
 32622   018AD8                     u30770:
 32623   018AD8  EF27  F0C5         	goto	l22551
 32624   018ADC                     l22571:
 32625                           
 32626                           ; BSR set to: 6
 32627                           ;../fatfs/ff.c: 3102:       dp->fn[11] = 0x80;
 32628   018ADC  EE20 F027          	lfsr	2,39
 32629   018AE0  5184               	movf	follow_path@dp& (0+255),w,b
 32630   018AE2  26D9               	addwf	fsr2l,f,c
 32631   018AE4  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32632   018AE6  22DA               	addwfc	fsr2h,f,c
 32633   018AE8  0E80               	movlw	128
 32634   018AEA  6EDF               	movwf	indf2,c
 32635   018AEC                     
 32636                           ; BSR set to: 6
 32637                           ;../fatfs/ff.c: 3103:       res = FR_OK;
 32638   018AEC  6B91               	clrf	follow_path@res& (0+255),b
 32639                           
 32640                           ;../fatfs/ff.c: 3104:      } else {
 32641   018AEE  EFCF  F0C5         	goto	l22585
 32642   018AF2                     l1774:
 32643                           
 32644                           ; BSR set to: 6
 32645                           ;../fatfs/ff.c: 3105:       if (!(ns & 0x04)) res = FR_NO_PATH;
 32646   018AF2  B590               	btfsc	follow_path@ns& (0+255),2,b
 32647   018AF4  EF7E  F0C5         	goto	u30781
 32648   018AF8  EF80  F0C5         	goto	u30780
 32649   018AFC                     u30781:
 32650   018AFC  EFCF  F0C5         	goto	l22585
 32651   018B00                     u30780:
 32652   018B00                     l22575:
 32653                           
 32654                           ; BSR set to: 6
 32655   018B00  0E05               	movlw	5
 32656   018B02  6F91               	movwf	follow_path@res& (0+255),b
 32657   018B04  EFCF  F0C5         	goto	l22585
 32658   018B08                     l1772:
 32659                           
 32660                           ; BSR set to: 6
 32661                           ;../fatfs/ff.c: 3110:    if (ns & 0x04) break;
 32662   018B08  A590               	btfss	follow_path@ns& (0+255),2,b
 32663   018B0A  EF89  F0C5         	goto	u30791
 32664   018B0E  EF8B  F0C5         	goto	u30790
 32665   018B12                     u30791:
 32666   018B12  EF8D  F0C5         	goto	l22579
 32667   018B16                     u30790:
 32668   018B16  EFCF  F0C5         	goto	l22585
 32669   018B1A                     l22579:
 32670                           
 32671                           ; BSR set to: 6
 32672                           ;../fatfs/ff.c: 3112:    if (!(dp->obj.attr & 0x10)) {
 32673   018B1A  EE20 F004          	lfsr	2,4
 32674   018B1E  5184               	movf	follow_path@dp& (0+255),w,b
 32675   018B20  26D9               	addwf	fsr2l,f,c
 32676   018B22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32677   018B24  22DA               	addwfc	fsr2h,f,c
 32678   018B26  B8DF               	btfsc	indf2,4,c
 32679   018B28  EF98  F0C5         	goto	u30801
 32680   018B2C  EF9A  F0C5         	goto	u30800
 32681   018B30                     u30801:
 32682   018B30  EF9C  F0C5         	goto	l22583
 32683   018B34                     u30800:
 32684   018B34  EF80  F0C5         	goto	l22575
 32685   018B38                     l22583:
 32686                           
 32687                           ; BSR set to: 6
 32688                           ;../fatfs/ff.c: 3123:    {;../fatfs/ff.c: 3124:     dp->obj.sclust = ld_clust(fs, fs->wi
      +                          n + dp->dptr % ((UINT)512));
 32689   018B38  C68E  F50B         	movff	follow_path@fs,ld_clust@fs
 32690   018B3C  C68F  F50C         	movff	follow_path@fs+1,ld_clust@fs+1
 32691   018B40  EE20 F00E          	lfsr	2,14
 32692   018B44  5184               	movf	follow_path@dp& (0+255),w,b
 32693   018B46  26D9               	addwf	fsr2l,f,c
 32694   018B48  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32695   018B4A  22DA               	addwfc	fsr2h,f,c
 32696   018B4C  C4DE F688          	movff	postinc2,??_follow_path
 32697   018B50  C4DD F689          	movff	postdec2,??_follow_path+1
 32698   018B54  0EFF               	movlw	255
 32699   018B56  1588               	andwf	??_follow_path& (0+255),w,b
 32700   018B58  6F8A               	movwf	(??_follow_path+2)& (0+255),b
 32701   018B5A  0E01               	movlw	1
 32702   018B5C  1589               	andwf	(??_follow_path+1)& (0+255),w,b
 32703   018B5E  6F8B               	movwf	(??_follow_path+3)& (0+255),b
 32704   018B60  518A               	movf	(??_follow_path+2)& (0+255),w,b
 32705   018B62  258E               	addwf	follow_path@fs& (0+255),w,b
 32706   018B64  6F8C               	movwf	(??_follow_path+4)& (0+255),b
 32707   018B66  518B               	movf	(??_follow_path+3)& (0+255),w,b
 32708   018B68  218F               	addwfc	(follow_path@fs+1)& (0+255),w,b
 32709   018B6A  6F8D               	movwf	(??_follow_path+5)& (0+255),b
 32710   018B6C  0E34               	movlw	52
 32711   018B6E  258C               	addwf	(??_follow_path+4)& (0+255),w,b
 32712   018B70  6E0D               	movwf	ld_clust@dir^(0+1280),c
 32713   018B72  0E00               	movlw	0
 32714   018B74  218D               	addwfc	(??_follow_path+5)& (0+255),w,b
 32715   018B76  6E0E               	movwf	(ld_clust@dir+1)^(0+1280),c
 32716   018B78  EC3A  F0F9         	call	_ld_clust	;wreg free
 32717   018B7C  0106               	movlb	6	; () banked
 32718   018B7E  EE20 F006          	lfsr	2,6
 32719   018B82  5184               	movf	follow_path@dp& (0+255),w,b
 32720   018B84  26D9               	addwf	fsr2l,f,c
 32721   018B86  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 32722   018B88  22DA               	addwfc	fsr2h,f,c
 32723   018B8A  C50B  F4DE         	movff	?_ld_clust,postinc2
 32724   018B8E  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 32725   018B92  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 32726   018B96  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 32727   018B9A  EF27  F0C5         	goto	l22551
 32728   018B9E                     l22585:
 32729                           
 32730                           ; BSR set to: 6
 32731                           ;../fatfs/ff.c: 3129:  return res;
 32732   018B9E  5191               	movf	follow_path@res& (0+255),w,b
 32733   018BA0                     
 32734                           ; BSR set to: 6
 32735   018BA0  0012               	return		;funcret
 32736   018BA2                     __end_of_follow_path:
 32737                           	callstack 0
 32738                           
 32739 ;; *************** function _ld_clust *****************
 32740 ;; Defined at:
 32741 ;;		line 1849 in file "../fatfs/ff.c"
 32742 ;; Parameters:    Size  Location     Type
 32743 ;;  fs              2   10[COMRAM] PTR struct .
 32744 ;;		 -> fs(564), NULL(0), 
 32745 ;;  dir             2   12[COMRAM] PTR const unsigned char 
 32746 ;;		 -> fs$win(512), fs(564), NULL(0), 
 32747 ;; Auto vars:     Size  Location     Type
 32748 ;;  cl              4   18[COMRAM] unsigned long 
 32749 ;; Return value:  Size  Location     Type
 32750 ;;                  4   10[COMRAM] unsigned long 
 32751 ;; Registers used:
 32752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32753 ;; Tracked objects:
 32754 ;;		On entry : 0/0
 32755 ;;		On exit  : 0/0
 32756 ;;		Unchanged: 0/0
 32757 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32759 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32761 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32762 ;;Total ram usage:       12 bytes
 32763 ;; Hardware stack levels used: 1
 32764 ;; Hardware stack levels required when called: 2
 32765 ;; This function calls:
 32766 ;;		_ld_word
 32767 ;; This function is called by:
 32768 ;;		_follow_path
 32769 ;;		_f_open
 32770 ;;		_f_chdir
 32771 ;;		_f_getcwd
 32772 ;;		_f_opendir
 32773 ;;		_f_unlink
 32774 ;;		_f_rename
 32775 ;; This function uses a non-reentrant model
 32776 ;;
 32777                           
 32778                           	psect	text80
 32779   01F274                     __ptext80:
 32780                           	callstack 0
 32781   01F274                     _ld_clust:
 32782                           	callstack 117
 32783   01F274                     
 32784                           ;../fatfs/ff.c: 1850:  FATFS* fs,;../fatfs/ff.c: 1851:  const BYTE* dir;../fatfs/ff.c: 1
      +                          853: {;../fatfs/ff.c: 1854:  DWORD cl;;../fatfs/ff.c: 1856:  cl = ld_word(dir + 26);
 32785   01F274  0E1A               	movlw	26
 32786   01F276  240D               	addwf	ld_clust@dir^(0+1280),w,c
 32787   01F278  6E04               	movwf	ld_word@ptr^(0+1280),c
 32788   01F27A  0E00               	movlw	0
 32789   01F27C  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 32790   01F27E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32791   01F280  EC4C  F0FF         	call	_ld_word	;wreg free
 32792   01F284  C504  F513         	movff	?_ld_word,ld_clust@cl
 32793   01F288  C505  F514         	movff	?_ld_word+1,ld_clust@cl+1
 32794   01F28C  6A15               	clrf	(ld_clust@cl+2)^(0+1280),c
 32795   01F28E  6A16               	clrf	(ld_clust@cl+3)^(0+1280),c
 32796   01F290                     
 32797                           ;../fatfs/ff.c: 1857:  if (fs->fs_type == 3) {
 32798   01F290  C50B  F4D9         	movff	ld_clust@fs,fsr2l
 32799   01F294  C50C  F4DA         	movff	ld_clust@fs+1,fsr2h
 32800   01F298  0E03               	movlw	3
 32801   01F29A  18DE               	xorwf	postinc2,w,c
 32802   01F29C  A4D8               	btfss	status,2,c
 32803   01F29E  EF53  F0F9         	goto	u29651
 32804   01F2A2  EF55  F0F9         	goto	u29650
 32805   01F2A6                     u29651:
 32806   01F2A6  EF71  F0F9         	goto	l22005
 32807   01F2AA                     u29650:
 32808   01F2AA                     
 32809                           ;../fatfs/ff.c: 1858:   cl |= (DWORD)ld_word(dir + 20) << 16;
 32810   01F2AA  0E14               	movlw	20
 32811   01F2AC  240D               	addwf	ld_clust@dir^(0+1280),w,c
 32812   01F2AE  6E04               	movwf	ld_word@ptr^(0+1280),c
 32813   01F2B0  0E00               	movlw	0
 32814   01F2B2  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 32815   01F2B4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32816   01F2B6  EC4C  F0FF         	call	_ld_word	;wreg free
 32817   01F2BA  5004               	movf	?_ld_word^(0+1280),w,c
 32818   01F2BC  6E0F               	movwf	??_ld_clust^(0+1280),c
 32819   01F2BE  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 32820   01F2C0  6E10               	movwf	(??_ld_clust+1)^(0+1280),c
 32821   01F2C2  6A11               	clrf	(??_ld_clust+2)^(0+1280),c
 32822   01F2C4  6A12               	clrf	(??_ld_clust+3)^(0+1280),c
 32823   01F2C6  C510  F512         	movff	??_ld_clust+1,??_ld_clust+3
 32824   01F2CA  C50F  F511         	movff	??_ld_clust,??_ld_clust+2
 32825   01F2CE  6A10               	clrf	(??_ld_clust+1)^(0+1280),c
 32826   01F2D0  6A0F               	clrf	??_ld_clust^(0+1280),c
 32827   01F2D2  500F               	movf	??_ld_clust^(0+1280),w,c
 32828   01F2D4  1213               	iorwf	ld_clust@cl^(0+1280),f,c
 32829   01F2D6  5010               	movf	(??_ld_clust+1)^(0+1280),w,c
 32830   01F2D8  1214               	iorwf	(ld_clust@cl+1)^(0+1280),f,c
 32831   01F2DA  5011               	movf	(??_ld_clust+2)^(0+1280),w,c
 32832   01F2DC  1215               	iorwf	(ld_clust@cl+2)^(0+1280),f,c
 32833   01F2DE  5012               	movf	(??_ld_clust+3)^(0+1280),w,c
 32834   01F2E0  1216               	iorwf	(ld_clust@cl+3)^(0+1280),f,c
 32835   01F2E2                     l22005:
 32836                           
 32837                           ;../fatfs/ff.c: 1861:  return cl;
 32838   01F2E2  C513  F50B         	movff	ld_clust@cl,?_ld_clust
 32839   01F2E6  C514  F50C         	movff	ld_clust@cl+1,?_ld_clust+1
 32840   01F2EA  C515  F50D         	movff	ld_clust@cl+2,?_ld_clust+2
 32841   01F2EE  C516  F50E         	movff	ld_clust@cl+3,?_ld_clust+3
 32842   01F2F2  0012               	return		;funcret
 32843   01F2F4                     __end_of_ld_clust:
 32844                           	callstack 0
 32845                           
 32846 ;; *************** function _dir_find *****************
 32847 ;; Defined at:
 32848 ;;		line 2385 in file "../fatfs/ff.c"
 32849 ;; Parameters:    Size  Location     Type
 32850 ;;  dp              2  124[BANK6 ] PTR struct .
 32851 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 32852 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 32853 ;;		 -> scan_files@dir(40), 
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;  fs              2  128[BANK6 ] PTR struct .
 32856 ;;		 -> fs(564), NULL(0), 
 32857 ;;  res             1  131[BANK6 ] enum E597
 32858 ;;  c               1  130[BANK6 ] unsigned char 
 32859 ;; Return value:  Size  Location     Type
 32860 ;;                  1    wreg      enum E597
 32861 ;; Registers used:
 32862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32863 ;; Tracked objects:
 32864 ;;		On entry : 0/0
 32865 ;;		On exit  : 0/0
 32866 ;;		Unchanged: 0/0
 32867 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32868 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32869 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32870 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32871 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;Total ram usage:        8 bytes
 32873 ;; Hardware stack levels used: 1
 32874 ;; Hardware stack levels required when called: 17
 32875 ;; This function calls:
 32876 ;;		_dir_next
 32877 ;;		_dir_sdi
 32878 ;;		_memcmp
 32879 ;;		_move_window
 32880 ;; This function is called by:
 32881 ;;		_follow_path
 32882 ;; This function uses a non-reentrant model
 32883 ;;
 32884                           
 32885                           	psect	text81
 32886   01BCA4                     __ptext81:
 32887                           	callstack 0
 32888   01BCA4                     _dir_find:
 32889                           	callstack 101
 32890   01BCA4                     
 32891                           ;../fatfs/ff.c: 2386:  DIR* dp;../fatfs/ff.c: 2388: {;../fatfs/ff.c: 2389:  FRESULT res;
      +                          ;../fatfs/ff.c: 2390:  FATFS *fs = dp->obj.fs;
 32892   01BCA4  C67C  F4D9         	movff	dir_find@dp,fsr2l
 32893   01BCA8  C67D  F4DA         	movff	dir_find@dp+1,fsr2h
 32894   01BCAC  C4DE F680          	movff	postinc2,dir_find@fs
 32895   01BCB0  C4DD F681          	movff	postdec2,dir_find@fs+1
 32896   01BCB4                     
 32897                           ;../fatfs/ff.c: 2391:  BYTE c;;../fatfs/ff.c: 2396:  res = dir_sdi(dp, 0);
 32898   01BCB4  C67C  F63E         	movff	dir_find@dp,dir_sdi@dp
 32899   01BCB8  C67D  F63F         	movff	dir_find@dp+1,dir_sdi@dp+1
 32900   01BCBC  0E00               	movlw	0
 32901   01BCBE  0106               	movlb	6	; () banked
 32902   01BCC0  6F40               	movwf	dir_sdi@ofs& (0+255),b
 32903   01BCC2  0E00               	movlw	0
 32904   01BCC4  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 32905   01BCC6  0E00               	movlw	0
 32906   01BCC8  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 32907   01BCCA  0E00               	movlw	0
 32908   01BCCC  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 32909   01BCCE  EC72  F0BC         	call	_dir_sdi	;wreg free
 32910   01BCD2  0106               	movlb	6	; () banked
 32911   01BCD4  6F83               	movwf	dir_find@res& (0+255),b
 32912   01BCD6                     
 32913                           ; BSR set to: 6
 32914                           ;../fatfs/ff.c: 2397:  if (res != FR_OK) return res;
 32915   01BCD6  5183               	movf	dir_find@res& (0+255),w,b
 32916   01BCD8  B4D8               	btfsc	status,2,c
 32917   01BCDA  EF71  F0DE         	goto	u29671
 32918   01BCDE  EF73  F0DE         	goto	u29670
 32919   01BCE2                     u29671:
 32920   01BCE2  EF77  F0DE         	goto	l22025
 32921   01BCE6                     u29670:
 32922   01BCE6                     l22021:
 32923   01BCE6  0106               	movlb	6	; () banked
 32924   01BCE8  5183               	movf	dir_find@res& (0+255),w,b
 32925   01BCEA  EF13  F0DF         	goto	l1686
 32926   01BCEE                     l22025:
 32927                           
 32928                           ; BSR set to: 6
 32929                           ;../fatfs/ff.c: 2423:   res = move_window(fs, dp->sect);
 32930   01BCEE  C680  F61A         	movff	dir_find@fs,move_window@fs
 32931   01BCF2  C681  F61B         	movff	dir_find@fs+1,move_window@fs+1
 32932   01BCF6  EE20 F016          	lfsr	2,22
 32933   01BCFA  517C               	movf	dir_find@dp& (0+255),w,b
 32934   01BCFC  26D9               	addwf	fsr2l,f,c
 32935   01BCFE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32936   01BD00  22DA               	addwfc	fsr2h,f,c
 32937   01BD02  C4DE F61C          	movff	postinc2,move_window@sect
 32938   01BD06  C4DE F61D          	movff	postinc2,move_window@sect+1
 32939   01BD0A  C4DE F61E          	movff	postinc2,move_window@sect+2
 32940   01BD0E  C4DE F61F          	movff	postinc2,move_window@sect+3
 32941   01BD12  ECAB  F0EF         	call	_move_window	;wreg free
 32942   01BD16  0106               	movlb	6	; () banked
 32943   01BD18  6F83               	movwf	dir_find@res& (0+255),b
 32944   01BD1A                     
 32945                           ; BSR set to: 6
 32946                           ;../fatfs/ff.c: 2424:   if (res != FR_OK) break;
 32947   01BD1A  5183               	movf	dir_find@res& (0+255),w,b
 32948   01BD1C  B4D8               	btfsc	status,2,c
 32949   01BD1E  EF93  F0DE         	goto	u29681
 32950   01BD22  EF95  F0DE         	goto	u29680
 32951   01BD26                     u29681:
 32952   01BD26  EF97  F0DE         	goto	l22031
 32953   01BD2A                     u29680:
 32954   01BD2A  EF73  F0DE         	goto	l22021
 32955   01BD2E                     l22031:
 32956                           
 32957                           ; BSR set to: 6
 32958                           ;../fatfs/ff.c: 2425:   c = dp->dir[0];
 32959   01BD2E  EE20 F01A          	lfsr	2,26
 32960   01BD32  517C               	movf	dir_find@dp& (0+255),w,b
 32961   01BD34  26D9               	addwf	fsr2l,f,c
 32962   01BD36  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32963   01BD38  22DA               	addwfc	fsr2h,f,c
 32964   01BD3A  C4DE F67E          	movff	postinc2,??_dir_find
 32965   01BD3E  C4DD F67F          	movff	postdec2,??_dir_find+1
 32966   01BD42  C67E  F4D9         	movff	??_dir_find,fsr2l
 32967   01BD46  C67F  F4DA         	movff	??_dir_find+1,fsr2h
 32968   01BD4A  50DF               	movf	indf2,w,c
 32969   01BD4C  6F82               	movwf	dir_find@c& (0+255),b
 32970   01BD4E                     
 32971                           ; BSR set to: 6
 32972                           ;../fatfs/ff.c: 2426:   if (c == 0) { res = FR_NO_FILE; break; }
 32973   01BD4E  5182               	movf	dir_find@c& (0+255),w,b
 32974   01BD50  A4D8               	btfss	status,2,c
 32975   01BD52  EFAD  F0DE         	goto	u29691
 32976   01BD56  EFAF  F0DE         	goto	u29690
 32977   01BD5A                     u29691:
 32978   01BD5A  EFB3  F0DE         	goto	l22037
 32979   01BD5E                     u29690:
 32980   01BD5E                     
 32981                           ; BSR set to: 6
 32982   01BD5E  0E04               	movlw	4
 32983   01BD60  6F83               	movwf	dir_find@res& (0+255),b
 32984   01BD62  EF73  F0DE         	goto	l22021
 32985   01BD66                     l22037:
 32986                           
 32987                           ; BSR set to: 6
 32988                           ;../fatfs/ff.c: 2449:   dp->obj.attr = dp->dir[11] & 0x3F;
 32989   01BD66  EE20 F004          	lfsr	2,4
 32990   01BD6A  517C               	movf	dir_find@dp& (0+255),w,b
 32991   01BD6C  26D9               	addwf	fsr2l,f,c
 32992   01BD6E  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32993   01BD70  22DA               	addwfc	fsr2h,f,c
 32994   01BD72  EE10 F01A          	lfsr	1,26
 32995   01BD76  517C               	movf	dir_find@dp& (0+255),w,b
 32996   01BD78  26E1               	addwf	fsr1l,f,c
 32997   01BD7A  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 32998   01BD7C  22E2               	addwfc	fsr1h,f,c
 32999   01BD7E  EE00 F00B          	lfsr	0,11
 33000   01BD82  50E6               	movf	postinc1,w,c
 33001   01BD84  26E9               	addwf	fsr0l,f,c
 33002   01BD86  50E5               	movf	postdec1,w,c
 33003   01BD88  22EA               	addwfc	fsr0h,f,c
 33004   01BD8A  50EF               	movf	indf0,w,c
 33005   01BD8C  0B3F               	andlw	63
 33006   01BD8E  6EDF               	movwf	indf2,c
 33007   01BD90                     
 33008                           ; BSR set to: 6
 33009                           ;../fatfs/ff.c: 2450:   if (!(dp->dir[11] & 0x08) && !memcmp(dp->dir, dp->fn, 11)) break
      +                          ;
 33010   01BD90  EE20 F01A          	lfsr	2,26
 33011   01BD94  517C               	movf	dir_find@dp& (0+255),w,b
 33012   01BD96  26D9               	addwf	fsr2l,f,c
 33013   01BD98  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 33014   01BD9A  22DA               	addwfc	fsr2h,f,c
 33015   01BD9C  EE10 F00B          	lfsr	1,11
 33016   01BDA0  50DE               	movf	postinc2,w,c
 33017   01BDA2  26E1               	addwf	fsr1l,f,c
 33018   01BDA4  50DD               	movf	postdec2,w,c
 33019   01BDA6  22E2               	addwfc	fsr1h,f,c
 33020   01BDA8  B6E7               	btfsc	indf1,3,c
 33021   01BDAA  EFD9  F0DE         	goto	u29701
 33022   01BDAE  EFDB  F0DE         	goto	u29700
 33023   01BDB2                     u29701:
 33024   01BDB2  EFFC  F0DE         	goto	l22045
 33025   01BDB6                     u29700:
 33026   01BDB6                     
 33027                           ; BSR set to: 6
 33028   01BDB6  EE20 F01A          	lfsr	2,26
 33029   01BDBA  517C               	movf	dir_find@dp& (0+255),w,b
 33030   01BDBC  26D9               	addwf	fsr2l,f,c
 33031   01BDBE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 33032   01BDC0  22DA               	addwfc	fsr2h,f,c
 33033   01BDC2  C4DE F504          	movff	postinc2,memcmp@vl
 33034   01BDC6  C4DD F505          	movff	postdec2,memcmp@vl+1
 33035   01BDCA  0E1C               	movlw	28
 33036   01BDCC  257C               	addwf	dir_find@dp& (0+255),w,b
 33037   01BDCE  6E06               	movwf	memcmp@vr^(0+1280),c
 33038   01BDD0  0E00               	movlw	0
 33039   01BDD2  217D               	addwfc	(dir_find@dp+1)& (0+255),w,b
 33040   01BDD4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 33041   01BDD6  0E00               	movlw	0
 33042   01BDD8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 33043   01BDDA  0E0B               	movlw	11
 33044   01BDDC  6E08               	movwf	memcmp@n^(0+1280),c
 33045   01BDDE  EC23  F0EA         	call	_memcmp	;wreg free
 33046   01BDE2  5004               	movf	?_memcmp^(0+1280),w,c
 33047   01BDE4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 33048   01BDE6  A4D8               	btfss	status,2,c
 33049   01BDE8  EFF8  F0DE         	goto	u29711
 33050   01BDEC  EFFA  F0DE         	goto	u29710
 33051   01BDF0                     u29711:
 33052   01BDF0  EFFC  F0DE         	goto	l22045
 33053   01BDF4                     u29710:
 33054   01BDF4  EF73  F0DE         	goto	l22021
 33055   01BDF8                     l22045:
 33056                           
 33057                           ;../fatfs/ff.c: 2452:   res = dir_next(dp, 0);
 33058   01BDF8  C67C  F662         	movff	dir_find@dp,dir_next@dp
 33059   01BDFC  C67D  F663         	movff	dir_find@dp+1,dir_next@dp+1
 33060   01BE00  0E00               	movlw	0
 33061   01BE02  0106               	movlb	6	; () banked
 33062   01BE04  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 33063   01BE06  0E00               	movlw	0
 33064   01BE08  6F64               	movwf	dir_next@stretch& (0+255),b
 33065   01BE0A  ECCF  F0B0         	call	_dir_next	;wreg free
 33066   01BE0E  0106               	movlb	6	; () banked
 33067   01BE10  6F83               	movwf	dir_find@res& (0+255),b
 33068   01BE12                     
 33069                           ; BSR set to: 6
 33070                           ;../fatfs/ff.c: 2453:  } while (res == FR_OK);
 33071   01BE12  5183               	movf	dir_find@res& (0+255),w,b
 33072   01BE14  B4D8               	btfsc	status,2,c
 33073   01BE16  EF0F  F0DF         	goto	u29721
 33074   01BE1A  EF11  F0DF         	goto	u29720
 33075   01BE1E                     u29721:
 33076   01BE1E  EF77  F0DE         	goto	l22025
 33077   01BE22                     u29720:
 33078   01BE22  EF73  F0DE         	goto	l22021
 33079   01BE26                     l1686:
 33080                           
 33081                           ; BSR set to: 6
 33082   01BE26  0012               	return		;funcret
 33083   01BE28                     __end_of_dir_find:
 33084                           	callstack 0
 33085                           
 33086 ;; *************** function _memcmp *****************
 33087 ;; Defined at:
 33088 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcmp.c"
 33089 ;; Parameters:    Size  Location     Type
 33090 ;;  vl              2    3[COMRAM] PTR const void 
 33091 ;;		 -> fs$win(512), fs(564), NULL(0), tmp_buf(512), 
 33092 ;;		 -> rom(16), 
 33093 ;;  vr              2    5[COMRAM] PTR const void 
 33094 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33095 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33096 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_169(9), 
 33097 ;;		 -> scan_files1@dir(40), scan_files@dir(40), tmp_buf(512), 
 33098 ;;  n               2    7[COMRAM] unsigned int 
 33099 ;; Auto vars:     Size  Location     Type
 33100 ;;  r               2   13[COMRAM] PTR const unsigned char 
 33101 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33102 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33103 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_169(9), 
 33104 ;;		 -> scan_files1@dir(40), scan_files@dir(40), tmp_buf(512), 
 33105 ;;  l               2   11[COMRAM] PTR const unsigned char 
 33106 ;;		 -> fs$win(512), fs(564), NULL(0), tmp_buf(512), 
 33107 ;;		 -> rom(16), 
 33108 ;; Return value:  Size  Location     Type
 33109 ;;                  2    3[COMRAM] int 
 33110 ;; Registers used:
 33111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 33112 ;; Tracked objects:
 33113 ;;		On entry : 0/0
 33114 ;;		On exit  : 0/0
 33115 ;;		Unchanged: 0/0
 33116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33118 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33120 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33121 ;;Total ram usage:       12 bytes
 33122 ;; Hardware stack levels used: 1
 33123 ;; Hardware stack levels required when called: 1
 33124 ;; This function calls:
 33125 ;;		Nothing
 33126 ;; This function is called by:
 33127 ;;		_reset_cpu
 33128 ;;		_mem_init
 33129 ;;		_dir_find
 33130 ;;		_check_fs
 33131 ;; This function uses a non-reentrant model
 33132 ;;
 33133                           
 33134                           	psect	text82
 33135   01D446                     __ptext82:
 33136                           	callstack 0
 33137   01D446                     _memcmp:
 33138                           	callstack 115
 33139   01D446  C504  F50C         	movff	memcmp@vl,memcmp@l
 33140   01D44A  C505  F50D         	movff	memcmp@vl+1,memcmp@l+1
 33141   01D44E  C506  F50E         	movff	memcmp@vr,memcmp@r
 33142   01D452  C507  F50F         	movff	memcmp@vr+1,memcmp@r+1
 33143   01D456  EF34  F0EA         	goto	l21441
 33144   01D45A                     l21439:
 33145   01D45A  0608               	decf	memcmp@n^(0+1280),f,c
 33146   01D45C  A0D8               	btfss	status,0,c
 33147   01D45E  0609               	decf	(memcmp@n+1)^(0+1280),f,c
 33148   01D460  4A0C               	infsnz	memcmp@l^(0+1280),f,c
 33149   01D462  2A0D               	incf	(memcmp@l+1)^(0+1280),f,c
 33150   01D464  4A0E               	infsnz	memcmp@r^(0+1280),f,c
 33151   01D466  2A0F               	incf	(memcmp@r+1)^(0+1280),f,c
 33152   01D468                     l21441:
 33153   01D468  5008               	movf	memcmp@n^(0+1280),w,c
 33154   01D46A  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 33155   01D46C  B4D8               	btfsc	status,2,c
 33156   01D46E  EF3B  F0EA         	goto	u28481
 33157   01D472  EF3D  F0EA         	goto	u28480
 33158   01D476                     u28481:
 33159   01D476  EF68  F0EA         	goto	l21445
 33160   01D47A                     u28480:
 33161   01D47A  C50E  F4F6         	movff	memcmp@r,tblptrl
 33162   01D47E  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 33163   01D482  0E00               	movlw	low (__mediumconst shr (0+16))
 33164   01D484  6EF8               	movwf	tblptru,c
 33165   01D486  0E25               	movlw	(high __ramtop+-1)
 33166   01D488  64F7               	cpfsgt	tblptrh,c
 33167   01D48A  D003               	bra	u28497
 33168   01D48C  0008               	tblrd		*
 33169   01D48E  50F5               	movf	tablat,w,c
 33170   01D490  D005               	bra	u28490
 33171   01D492                     u28497:
 33172   01D492  C4F6 F4E9          	movff	tblptrl,fsr0l
 33173   01D496  C4F7 F4EA          	movff	tblptrh,fsr0h
 33174   01D49A  50EF               	movf	indf0,w,c
 33175   01D49C                     u28490:
 33176   01D49C  6E0A               	movwf	??_memcmp^(0+1280),c
 33177   01D49E  C50C  F4F6         	movff	memcmp@l,tblptrl
 33178   01D4A2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 33179   01D4A6  0E00               	movlw	low (__mediumconst shr (0+16))
 33180   01D4A8  6EF8               	movwf	tblptru,c
 33181   01D4AA  0E25               	movlw	(high __ramtop+-1)
 33182   01D4AC  64F7               	cpfsgt	tblptrh,c
 33183   01D4AE  D003               	bra	u28507
 33184   01D4B0  0008               	tblrd		*
 33185   01D4B2  50F5               	movf	tablat,w,c
 33186   01D4B4  D005               	bra	u28505
 33187   01D4B6                     u28507:
 33188   01D4B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 33189   01D4BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 33190   01D4BE  50EF               	movf	indf0,w,c
 33191   01D4C0                     u28505:
 33192   01D4C0  180A               	xorwf	??_memcmp^(0+1280),w,c
 33193   01D4C2  B4D8               	btfsc	status,2,c
 33194   01D4C4  EF66  F0EA         	goto	u28501
 33195   01D4C8  EF68  F0EA         	goto	u28500
 33196   01D4CC                     u28501:
 33197   01D4CC  EF2D  F0EA         	goto	l21439
 33198   01D4D0                     u28500:
 33199   01D4D0                     l21445:
 33200   01D4D0  5008               	movf	memcmp@n^(0+1280),w,c
 33201   01D4D2  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 33202   01D4D4  A4D8               	btfss	status,2,c
 33203   01D4D6  EF6F  F0EA         	goto	u28511
 33204   01D4DA  EF71  F0EA         	goto	u28510
 33205   01D4DE                     u28511:
 33206   01D4DE  EF77  F0EA         	goto	l21449
 33207   01D4E2                     u28510:
 33208   01D4E2  0E00               	movlw	0
 33209   01D4E4  6E05               	movwf	(?_memcmp+1)^(0+1280),c
 33210   01D4E6  0E00               	movlw	0
 33211   01D4E8  6E04               	movwf	?_memcmp^(0+1280),c
 33212   01D4EA  EFA1  F0EA         	goto	l3383
 33213   01D4EE                     l21449:
 33214   01D4EE  C50C  F4F6         	movff	memcmp@l,tblptrl
 33215   01D4F2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 33216   01D4F6  0E00               	movlw	low (__mediumconst shr (0+16))
 33217   01D4F8  6EF8               	movwf	tblptru,c
 33218   01D4FA  0E25               	movlw	(high __ramtop+-1)
 33219   01D4FC  64F7               	cpfsgt	tblptrh,c
 33220   01D4FE  D003               	bra	u28527
 33221   01D500  0008               	tblrd		*
 33222   01D502  50F5               	movf	tablat,w,c
 33223   01D504  D005               	bra	u28520
 33224   01D506                     u28527:
 33225   01D506  C4F6 F4E9          	movff	tblptrl,fsr0l
 33226   01D50A  C4F7 F4EA          	movff	tblptrh,fsr0h
 33227   01D50E  50EF               	movf	indf0,w,c
 33228   01D510                     u28520:
 33229   01D510  6E0A               	movwf	??_memcmp^(0+1280),c
 33230   01D512  C50E  F4F6         	movff	memcmp@r,tblptrl
 33231   01D516  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 33232   01D51A  0E00               	movlw	low (__mediumconst shr (0+16))
 33233   01D51C  6EF8               	movwf	tblptru,c
 33234   01D51E  0E25               	movlw	(high __ramtop+-1)
 33235   01D520  64F7               	cpfsgt	tblptrh,c
 33236   01D522  D003               	bra	u28537
 33237   01D524  0008               	tblrd		*
 33238   01D526  50F5               	movf	tablat,w,c
 33239   01D528  D005               	bra	u28530
 33240   01D52A                     u28537:
 33241   01D52A  C4F6 F4E9          	movff	tblptrl,fsr0l
 33242   01D52E  C4F7 F4EA          	movff	tblptrh,fsr0h
 33243   01D532  50EF               	movf	indf0,w,c
 33244   01D534                     u28530:
 33245   01D534  6E0B               	movwf	(??_memcmp+1)^(0+1280),c
 33246   01D536  500B               	movf	(??_memcmp+1)^(0+1280),w,c
 33247   01D538  5C0A               	subwf	??_memcmp^(0+1280),w,c
 33248   01D53A  6E04               	movwf	?_memcmp^(0+1280),c
 33249   01D53C  6A05               	clrf	(?_memcmp+1)^(0+1280),c
 33250   01D53E  A0D8               	btfss	status,0,c
 33251   01D540  0605               	decf	(?_memcmp+1)^(0+1280),f,c
 33252   01D542                     l3383:
 33253   01D542  0012               	return		;funcret
 33254   01D544                     __end_of_memcmp:
 33255                           	callstack 0
 33256                           
 33257 ;; *************** function _create_name *****************
 33258 ;; Defined at:
 33259 ;;		line 2848 in file "../fatfs/ff.c"
 33260 ;; Parameters:    Size  Location     Type
 33261 ;;  dp              2   11[COMRAM] PTR struct .
 33262 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
 33263 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 33264 ;;		 -> scan_files@dir(40), 
 33265 ;;  path            2   13[COMRAM] PTR PTR const unsigned c
 33266 ;;		 -> follow_path@path(2), 
 33267 ;; Auto vars:     Size  Location     Type
 33268 ;;  si              2   31[COMRAM] unsigned int 
 33269 ;;  p               2   29[COMRAM] PTR const unsigned char 
 33270 ;;		 -> tmp_buf$mezID(8), STR_167(15), fin_name(13), STR_84(5), 
 33271 ;;		 -> line_buf(81), STR_51(11), STR_50(11), STR_49(11), 
 33272 ;;		 -> STR_48(11), NULL(0), tmp_buf(512), 
 33273 ;;  sfn             2   27[COMRAM] PTR unsigned char 
 33274 ;;		 -> dir$fn(12), djn$fn(12), f_rename@djn(40), djo$fn(12), 
 33275 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 33276 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), scan_files1@dir(40), 
 33277 ;;		 -> scan_files@dir(40), 
 33278 ;;  i               2   25[COMRAM] unsigned int 
 33279 ;;  ni              2   23[COMRAM] unsigned int 
 33280 ;;  c               1   33[COMRAM] unsigned char 
 33281 ;;  d               1   22[COMRAM] unsigned char 
 33282 ;; Return value:  Size  Location     Type
 33283 ;;                  1    wreg      enum E597
 33284 ;; Registers used:
 33285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33286 ;; Tracked objects:
 33287 ;;		On entry : 0/0
 33288 ;;		On exit  : 0/0
 33289 ;;		Unchanged: 0/0
 33290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33292 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33294 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33295 ;;Total ram usage:       23 bytes
 33296 ;; Hardware stack levels used: 1
 33297 ;; Hardware stack levels required when called: 2
 33298 ;; This function calls:
 33299 ;;		_dbc_1st
 33300 ;;		_dbc_2nd
 33301 ;;		_memset
 33302 ;;		_strchr
 33303 ;; This function is called by:
 33304 ;;		_follow_path
 33305 ;; This function uses a non-reentrant model
 33306 ;;
 33307                           
 33308                           	psect	text83
 33309   014594                     __ptext83:
 33310                           	callstack 0
 33311   014594                     _create_name:
 33312                           	callstack 116
 33313   014594                     
 33314                           ;../fatfs/ff.c: 2849:  DIR* dp,;../fatfs/ff.c: 2850:  const TCHAR** path;../fatfs/ff.c: 
      +                          2852: {;../fatfs/ff.c: 2981:  BYTE c, d;;../fatfs/ff.c: 2982:  BYTE *sfn;;../fatfs/ff.c:
      +                           2983:  UINT ni, si, i;;../fatfs/ff.c: 2984:  const char *p;;../fatfs/ff.c: 2987:  p = *
      +                          path; sfn = dp->fn;
 33315   014594  C50E  F4D9         	movff	create_name@path,fsr2l
 33316   014598  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33317   01459C  C4DE F51E          	movff	postinc2,create_name@p
 33318   0145A0  C4DD F51F          	movff	postdec2,create_name@p+1
 33319   0145A4  0E1C               	movlw	28
 33320   0145A6  240C               	addwf	create_name@dp^(0+1280),w,c
 33321   0145A8  6E1C               	movwf	create_name@sfn^(0+1280),c
 33322   0145AA  0E00               	movlw	0
 33323   0145AC  200D               	addwfc	(create_name@dp+1)^(0+1280),w,c
 33324   0145AE  6E1D               	movwf	(create_name@sfn+1)^(0+1280),c
 33325   0145B0                     
 33326                           ;../fatfs/ff.c: 2988:  memset(sfn, ' ', 11);
 33327   0145B0  C51C  F504         	movff	create_name@sfn,memset@dest
 33328   0145B4  C51D  F505         	movff	create_name@sfn+1,memset@dest+1
 33329   0145B8  0E00               	movlw	0
 33330   0145BA  6E07               	movwf	(memset@c+1)^(0+1280),c
 33331   0145BC  0E20               	movlw	32
 33332   0145BE  6E06               	movwf	memset@c^(0+1280),c
 33333   0145C0  0E00               	movlw	0
 33334   0145C2  6E09               	movwf	(memset@n+1)^(0+1280),c
 33335   0145C4  0E0B               	movlw	11
 33336   0145C6  6E08               	movwf	memset@n^(0+1280),c
 33337   0145C8  EC14  F0FF         	call	_memset	;wreg free
 33338   0145CC                     
 33339                           ;../fatfs/ff.c: 2989:  si = i = 0; ni = 8;
 33340   0145CC  0E00               	movlw	0
 33341   0145CE  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 33342   0145D0  0E00               	movlw	0
 33343   0145D2  6E1A               	movwf	create_name@i^(0+1280),c
 33344   0145D4  C51A  F520         	movff	create_name@i,create_name@si
 33345   0145D8  C51B  F521         	movff	create_name@i+1,create_name@si+1
 33346   0145DC  0E00               	movlw	0
 33347   0145DE  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 33348   0145E0  0E08               	movlw	8
 33349   0145E2  6E18               	movwf	create_name@ni^(0+1280),c
 33350   0145E4                     
 33351                           ;../fatfs/ff.c: 2991:  if (p[si] == '.') {
 33352   0145E4  5020               	movf	create_name@si^(0+1280),w,c
 33353   0145E6  241E               	addwf	create_name@p^(0+1280),w,c
 33354   0145E8  6E10               	movwf	??_create_name^(0+1280),c
 33355   0145EA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33356   0145EC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33357   0145EE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33358   0145F0  C510  F4F6         	movff	??_create_name,tblptrl
 33359   0145F4  C511  F4F7         	movff	??_create_name+1,tblptrh
 33360   0145F8  0E00               	movlw	low (__mediumconst shr (0+16))
 33361   0145FA  6EF8               	movwf	tblptru,c
 33362   0145FC  0E25               	movlw	(high __ramtop+-1)
 33363   0145FE  64F7               	cpfsgt	tblptrh,c
 33364   014600  D003               	bra	u29737
 33365   014602  0008               	tblrd		*
 33366   014604  50F5               	movf	tablat,w,c
 33367   014606  D005               	bra	u29730
 33368   014608                     u29737:
 33369   014608  C4F6 F4E9          	movff	tblptrl,fsr0l
 33370   01460C  C4F7 F4EA          	movff	tblptrh,fsr0h
 33371   014610  50EF               	movf	indf0,w,c
 33372   014612                     u29730:
 33373   014612  0A2E               	xorlw	46
 33374   014614  A4D8               	btfss	status,2,c
 33375   014616  EF0F  F0A3         	goto	u29741
 33376   01461A  EF11  F0A3         	goto	u29740
 33377   01461E                     u29741:
 33378   01461E  EF95  F0A3         	goto	l22101
 33379   014622                     u29740:
 33380   014622                     l22065:
 33381                           
 33382                           ;../fatfs/ff.c: 2993:    c = (BYTE)p[si++];
 33383   014622  5020               	movf	create_name@si^(0+1280),w,c
 33384   014624  241E               	addwf	create_name@p^(0+1280),w,c
 33385   014626  6E10               	movwf	??_create_name^(0+1280),c
 33386   014628  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33387   01462A  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33388   01462C  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33389   01462E  C510  F4F6         	movff	??_create_name,tblptrl
 33390   014632  C511  F4F7         	movff	??_create_name+1,tblptrh
 33391   014636  0E00               	movlw	low (__mediumconst shr (0+16))
 33392   014638  6EF8               	movwf	tblptru,c
 33393   01463A  0E25               	movlw	(high __ramtop+-1)
 33394   01463C  64F7               	cpfsgt	tblptrh,c
 33395   01463E  D003               	bra	u29757
 33396   014640  0008               	tblrd		*
 33397   014642  50F5               	movf	tablat,w,c
 33398   014644  D005               	bra	u29750
 33399   014646                     u29757:
 33400   014646  C4F6 F4E9          	movff	tblptrl,fsr0l
 33401   01464A  C4F7 F4EA          	movff	tblptrh,fsr0h
 33402   01464E  50EF               	movf	indf0,w,c
 33403   014650                     u29750:
 33404   014650  6E22               	movwf	create_name@c^(0+1280),c
 33405   014652  4A20               	infsnz	create_name@si^(0+1280),f,c
 33406   014654  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33407   014656                     
 33408                           ;../fatfs/ff.c: 2994:    if (c != '.' || si >= 3) break;
 33409   014656  0E2E               	movlw	46
 33410   014658  1822               	xorwf	create_name@c^(0+1280),w,c
 33411   01465A  A4D8               	btfss	status,2,c
 33412   01465C  EF32  F0A3         	goto	u29761
 33413   014660  EF34  F0A3         	goto	u29760
 33414   014664                     u29761:
 33415   014664  EF4D  F0A3         	goto	l22077
 33416   014668                     u29760:
 33417   014668  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33418   01466A  E109               	bnz	u29770
 33419   01466C  0E03               	movlw	3
 33420   01466E  5C20               	subwf	create_name@si^(0+1280),w,c
 33421   014670  A0D8               	btfss	status,0,c
 33422   014672  EF3D  F0A3         	goto	u29771
 33423   014676  EF3F  F0A3         	goto	u29770
 33424   01467A                     u29771:
 33425   01467A  EF41  F0A3         	goto	l22073
 33426   01467E                     u29770:
 33427   01467E  EF4D  F0A3         	goto	l22077
 33428   014682                     l22073:
 33429                           
 33430                           ;../fatfs/ff.c: 2995:    sfn[i++] = c;
 33431   014682  501A               	movf	create_name@i^(0+1280),w,c
 33432   014684  241C               	addwf	create_name@sfn^(0+1280),w,c
 33433   014686  6ED9               	movwf	fsr2l,c
 33434   014688  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33435   01468A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33436   01468C  6EDA               	movwf	fsr2h,c
 33437   01468E  C522  F4DF         	movff	create_name@c,indf2
 33438   014692  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33439   014694  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33440                           
 33441                           ;../fatfs/ff.c: 2996:   }
 33442   014696  EF11  F0A3         	goto	l22065
 33443   01469A                     l22077:
 33444                           
 33445                           ;../fatfs/ff.c: 2997:   if (!((c) == '/' || (c) == '\\') && c > ' ') return FR_INVALID_N
      +                          AME;
 33446   01469A  0E2F               	movlw	47
 33447   01469C  1822               	xorwf	create_name@c^(0+1280),w,c
 33448   01469E  B4D8               	btfsc	status,2,c
 33449   0146A0  EF54  F0A3         	goto	u29781
 33450   0146A4  EF56  F0A3         	goto	u29780
 33451   0146A8                     u29781:
 33452   0146A8  EF6A  F0A3         	goto	l22087
 33453   0146AC                     u29780:
 33454   0146AC  0E5C               	movlw	92
 33455   0146AE  1822               	xorwf	create_name@c^(0+1280),w,c
 33456   0146B0  B4D8               	btfsc	status,2,c
 33457   0146B2  EF5D  F0A3         	goto	u29791
 33458   0146B6  EF5F  F0A3         	goto	u29790
 33459   0146BA                     u29791:
 33460   0146BA  EF6A  F0A3         	goto	l22087
 33461   0146BE                     u29790:
 33462   0146BE  0E20               	movlw	32
 33463   0146C0  6422               	cpfsgt	create_name@c^(0+1280),c
 33464   0146C2  EF65  F0A3         	goto	u29801
 33465   0146C6  EF67  F0A3         	goto	u29800
 33466   0146CA                     u29801:
 33467   0146CA  EF6A  F0A3         	goto	l22087
 33468   0146CE                     u29800:
 33469   0146CE                     l22083:
 33470   0146CE  0E06               	movlw	6
 33471   0146D0  EF37  F0A5         	goto	l1720
 33472   0146D4                     l22087:
 33473                           
 33474                           ;../fatfs/ff.c: 2998:   *path = p + si;
 33475   0146D4  5020               	movf	create_name@si^(0+1280),w,c
 33476   0146D6  241E               	addwf	create_name@p^(0+1280),w,c
 33477   0146D8  6E10               	movwf	??_create_name^(0+1280),c
 33478   0146DA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33479   0146DC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33480   0146DE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33481   0146E0  C50E  F4D9         	movff	create_name@path,fsr2l
 33482   0146E4  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33483   0146E8  C510  F4DE         	movff	??_create_name,postinc2
 33484   0146EC  C511  F4DD         	movff	??_create_name+1,postdec2
 33485   0146F0                     
 33486                           ;../fatfs/ff.c: 2999:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
 33487   0146F0  0E20               	movlw	32
 33488   0146F2  6422               	cpfsgt	create_name@c^(0+1280),c
 33489   0146F4  EF7E  F0A3         	goto	u29811
 33490   0146F8  EF80  F0A3         	goto	u29810
 33491   0146FC                     u29811:
 33492   0146FC  EF86  F0A3         	goto	l22093
 33493   014700                     u29810:
 33494   014700  0E00               	movlw	0
 33495   014702  6E14               	movwf	(_create_name$2703+1)^(0+1280),c
 33496   014704  0E20               	movlw	32
 33497   014706  6E13               	movwf	_create_name$2703^(0+1280),c
 33498   014708  EF8A  F0A3         	goto	l22095
 33499   01470C                     l22093:
 33500   01470C  0E00               	movlw	0
 33501   01470E  6E14               	movwf	(_create_name$2703+1)^(0+1280),c
 33502   014710  0E24               	movlw	36
 33503   014712  6E13               	movwf	_create_name$2703^(0+1280),c
 33504   014714                     l22095:
 33505   014714  EE20 F00B          	lfsr	2,11
 33506   014718  501C               	movf	create_name@sfn^(0+1280),w,c
 33507   01471A  26D9               	addwf	fsr2l,f,c
 33508   01471C  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 33509   01471E  22DA               	addwfc	fsr2h,f,c
 33510   014720  C513  F4DF         	movff	_create_name$2703,indf2
 33511   014724                     l22097:
 33512                           
 33513                           ;../fatfs/ff.c: 3000:   return FR_OK;
 33514   014724  0E00               	movlw	0
 33515   014726  EF37  F0A5         	goto	l1720
 33516   01472A                     l22101:
 33517                           
 33518                           ;../fatfs/ff.c: 3004:   c = (BYTE)p[si++];
 33519   01472A  5020               	movf	create_name@si^(0+1280),w,c
 33520   01472C  241E               	addwf	create_name@p^(0+1280),w,c
 33521   01472E  6E10               	movwf	??_create_name^(0+1280),c
 33522   014730  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33523   014732  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33524   014734  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33525   014736  C510  F4F6         	movff	??_create_name,tblptrl
 33526   01473A  C511  F4F7         	movff	??_create_name+1,tblptrh
 33527   01473E  0E00               	movlw	low (__mediumconst shr (0+16))
 33528   014740  6EF8               	movwf	tblptru,c
 33529   014742  0E25               	movlw	(high __ramtop+-1)
 33530   014744  64F7               	cpfsgt	tblptrh,c
 33531   014746  D003               	bra	u29827
 33532   014748  0008               	tblrd		*
 33533   01474A  50F5               	movf	tablat,w,c
 33534   01474C  D005               	bra	u29820
 33535   01474E                     u29827:
 33536   01474E  C4F6 F4E9          	movff	tblptrl,fsr0l
 33537   014752  C4F7 F4EA          	movff	tblptrh,fsr0h
 33538   014756  50EF               	movf	indf0,w,c
 33539   014758                     u29820:
 33540   014758  6E22               	movwf	create_name@c^(0+1280),c
 33541   01475A  4A20               	infsnz	create_name@si^(0+1280),f,c
 33542   01475C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33543   01475E                     
 33544                           ;../fatfs/ff.c: 3005:   if (c <= ' ') break;
 33545   01475E  0E21               	movlw	33
 33546   014760  6022               	cpfslt	create_name@c^(0+1280),c
 33547   014762  EFB5  F0A3         	goto	u29831
 33548   014766  EFB7  F0A3         	goto	u29830
 33549   01476A                     u29831:
 33550   01476A  EFB9  F0A3         	goto	l22109
 33551   01476E                     u29830:
 33552   01476E  EFCF  F0A4         	goto	l22169
 33553   014772                     l22109:
 33554                           
 33555                           ;../fatfs/ff.c: 3006:   if (((c) == '/' || (c) == '\\')) {
 33556   014772  0E2F               	movlw	47
 33557   014774  1822               	xorwf	create_name@c^(0+1280),w,c
 33558   014776  B4D8               	btfsc	status,2,c
 33559   014778  EFC0  F0A3         	goto	u29841
 33560   01477C  EFC2  F0A3         	goto	u29840
 33561   014780                     u29841:
 33562   014780  EFCF  F0A3         	goto	l22115
 33563   014784                     u29840:
 33564   014784  0E5C               	movlw	92
 33565   014786  1822               	xorwf	create_name@c^(0+1280),w,c
 33566   014788  A4D8               	btfss	status,2,c
 33567   01478A  EFC9  F0A3         	goto	u29851
 33568   01478E  EFCB  F0A3         	goto	u29850
 33569   014792                     u29851:
 33570   014792  EF0F  F0A4         	goto	l22119
 33571   014796                     u29850:
 33572   014796  EFCF  F0A3         	goto	l22115
 33573   01479A                     l22113:
 33574   01479A  4A20               	infsnz	create_name@si^(0+1280),f,c
 33575   01479C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33576   01479E                     l22115:
 33577   01479E  5020               	movf	create_name@si^(0+1280),w,c
 33578   0147A0  241E               	addwf	create_name@p^(0+1280),w,c
 33579   0147A2  6E10               	movwf	??_create_name^(0+1280),c
 33580   0147A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33581   0147A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33582   0147A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33583   0147AA  C510  F4F6         	movff	??_create_name,tblptrl
 33584   0147AE  C511  F4F7         	movff	??_create_name+1,tblptrh
 33585   0147B2  0E00               	movlw	low (__mediumconst shr (0+16))
 33586   0147B4  6EF8               	movwf	tblptru,c
 33587   0147B6  0E25               	movlw	(high __ramtop+-1)
 33588   0147B8  64F7               	cpfsgt	tblptrh,c
 33589   0147BA  D003               	bra	u29867
 33590   0147BC  0008               	tblrd		*
 33591   0147BE  50F5               	movf	tablat,w,c
 33592   0147C0  D005               	bra	u29860
 33593   0147C2                     u29867:
 33594   0147C2  C4F6 F4E9          	movff	tblptrl,fsr0l
 33595   0147C6  C4F7 F4EA          	movff	tblptrh,fsr0h
 33596   0147CA  50EF               	movf	indf0,w,c
 33597   0147CC                     u29860:
 33598   0147CC  0A2F               	xorlw	47
 33599   0147CE  B4D8               	btfsc	status,2,c
 33600   0147D0  EFEC  F0A3         	goto	u29871
 33601   0147D4  EFEE  F0A3         	goto	u29870
 33602   0147D8                     u29871:
 33603   0147D8  EFCD  F0A3         	goto	l22113
 33604   0147DC                     u29870:
 33605   0147DC  5020               	movf	create_name@si^(0+1280),w,c
 33606   0147DE  241E               	addwf	create_name@p^(0+1280),w,c
 33607   0147E0  6E10               	movwf	??_create_name^(0+1280),c
 33608   0147E2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33609   0147E4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33610   0147E6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33611   0147E8  C510  F4F6         	movff	??_create_name,tblptrl
 33612   0147EC  C511  F4F7         	movff	??_create_name+1,tblptrh
 33613   0147F0  0E00               	movlw	low (__mediumconst shr (0+16))
 33614   0147F2  6EF8               	movwf	tblptru,c
 33615   0147F4  0E25               	movlw	(high __ramtop+-1)
 33616   0147F6  64F7               	cpfsgt	tblptrh,c
 33617   0147F8  D003               	bra	u29887
 33618   0147FA  0008               	tblrd		*
 33619   0147FC  50F5               	movf	tablat,w,c
 33620   0147FE  D005               	bra	u29880
 33621   014800                     u29887:
 33622   014800  C4F6 F4E9          	movff	tblptrl,fsr0l
 33623   014804  C4F7 F4EA          	movff	tblptrh,fsr0h
 33624   014808  50EF               	movf	indf0,w,c
 33625   01480A                     u29880:
 33626   01480A  0A5C               	xorlw	92
 33627   01480C  B4D8               	btfsc	status,2,c
 33628   01480E  EF0B  F0A4         	goto	u29891
 33629   014812  EF0D  F0A4         	goto	u29890
 33630   014816                     u29891:
 33631   014816  EFCD  F0A3         	goto	l22113
 33632   01481A                     u29890:
 33633   01481A  EFCF  F0A4         	goto	l22169
 33634   01481E                     l22119:
 33635                           
 33636                           ;../fatfs/ff.c: 3010:   if (c == '.' || i >= ni) {
 33637   01481E  0E2E               	movlw	46
 33638   014820  1822               	xorwf	create_name@c^(0+1280),w,c
 33639   014822  B4D8               	btfsc	status,2,c
 33640   014824  EF16  F0A4         	goto	u29901
 33641   014828  EF18  F0A4         	goto	u29900
 33642   01482C                     u29901:
 33643   01482C  EF23  F0A4         	goto	l22123
 33644   014830                     u29900:
 33645   014830  5018               	movf	create_name@ni^(0+1280),w,c
 33646   014832  5C1A               	subwf	create_name@i^(0+1280),w,c
 33647   014834  5019               	movf	(create_name@ni+1)^(0+1280),w,c
 33648   014836  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 33649   014838  A0D8               	btfss	status,0,c
 33650   01483A  EF21  F0A4         	goto	u29911
 33651   01483E  EF23  F0A4         	goto	u29910
 33652   014842                     u29911:
 33653   014842  EF42  F0A4         	goto	l22133
 33654   014846                     u29910:
 33655   014846                     l22123:
 33656                           
 33657                           ;../fatfs/ff.c: 3011:    if (ni == 11 || c != '.') return FR_INVALID_NAME;
 33658   014846  0E0B               	movlw	11
 33659   014848  1818               	xorwf	create_name@ni^(0+1280),w,c
 33660   01484A  1019               	iorwf	(create_name@ni+1)^(0+1280),w,c
 33661   01484C  B4D8               	btfsc	status,2,c
 33662   01484E  EF2B  F0A4         	goto	u29921
 33663   014852  EF2D  F0A4         	goto	u29920
 33664   014856                     u29921:
 33665   014856  EF67  F0A3         	goto	l22083
 33666   01485A                     u29920:
 33667   01485A  0E2E               	movlw	46
 33668   01485C  1822               	xorwf	create_name@c^(0+1280),w,c
 33669   01485E  B4D8               	btfsc	status,2,c
 33670   014860  EF34  F0A4         	goto	u29931
 33671   014864  EF36  F0A4         	goto	u29930
 33672   014868                     u29931:
 33673   014868  EF38  F0A4         	goto	l22131
 33674   01486C                     u29930:
 33675   01486C  EF67  F0A3         	goto	l22083
 33676   014870                     l22131:
 33677                           
 33678                           ;../fatfs/ff.c: 3012:    i = 8; ni = 11;
 33679   014870  0E00               	movlw	0
 33680   014872  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 33681   014874  0E08               	movlw	8
 33682   014876  6E1A               	movwf	create_name@i^(0+1280),c
 33683   014878  0E00               	movlw	0
 33684   01487A  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 33685   01487C  0E0B               	movlw	11
 33686   01487E  6E18               	movwf	create_name@ni^(0+1280),c
 33687                           
 33688                           ;../fatfs/ff.c: 3013:    continue;
 33689   014880  EF95  F0A3         	goto	l22101
 33690   014884                     l22133:
 33691                           
 33692                           ;../fatfs/ff.c: 3024:   if (dbc_1st(c)) {
 33693   014884  5022               	movf	create_name@c^(0+1280),w,c
 33694   014886  EC6E  F0F6         	call	_dbc_1st
 33695   01488A  5004               	movf	?_dbc_1st^(0+1280),w,c
 33696   01488C  1005               	iorwf	(?_dbc_1st+1)^(0+1280),w,c
 33697   01488E  B4D8               	btfsc	status,2,c
 33698   014890  EF4C  F0A4         	goto	u29941
 33699   014894  EF4E  F0A4         	goto	u29940
 33700   014898                     u29941:
 33701   014898  EF9D  F0A4         	goto	l22153
 33702   01489C                     u29940:
 33703   01489C                     
 33704                           ;../fatfs/ff.c: 3025:    d = (BYTE)p[si++];
 33705   01489C  5020               	movf	create_name@si^(0+1280),w,c
 33706   01489E  241E               	addwf	create_name@p^(0+1280),w,c
 33707   0148A0  6E10               	movwf	??_create_name^(0+1280),c
 33708   0148A2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33709   0148A4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33710   0148A6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33711   0148A8  C510  F4F6         	movff	??_create_name,tblptrl
 33712   0148AC  C511  F4F7         	movff	??_create_name+1,tblptrh
 33713   0148B0  0E00               	movlw	low (__mediumconst shr (0+16))
 33714   0148B2  6EF8               	movwf	tblptru,c
 33715   0148B4  0E25               	movlw	(high __ramtop+-1)
 33716   0148B6  64F7               	cpfsgt	tblptrh,c
 33717   0148B8  D003               	bra	u29957
 33718   0148BA  0008               	tblrd		*
 33719   0148BC  50F5               	movf	tablat,w,c
 33720   0148BE  D005               	bra	u29950
 33721   0148C0                     u29957:
 33722   0148C0  C4F6 F4E9          	movff	tblptrl,fsr0l
 33723   0148C4  C4F7 F4EA          	movff	tblptrh,fsr0h
 33724   0148C8  50EF               	movf	indf0,w,c
 33725   0148CA                     u29950:
 33726   0148CA  6E17               	movwf	create_name@d^(0+1280),c
 33727   0148CC  4A20               	infsnz	create_name@si^(0+1280),f,c
 33728   0148CE  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 33729   0148D0                     
 33730                           ;../fatfs/ff.c: 3026:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;
 33731   0148D0  5017               	movf	create_name@d^(0+1280),w,c
 33732   0148D2  EC5F  F0EE         	call	_dbc_2nd
 33733   0148D6  5004               	movf	?_dbc_2nd^(0+1280),w,c
 33734   0148D8  1005               	iorwf	(?_dbc_2nd+1)^(0+1280),w,c
 33735   0148DA  B4D8               	btfsc	status,2,c
 33736   0148DC  EF72  F0A4         	goto	u29961
 33737   0148E0  EF74  F0A4         	goto	u29960
 33738   0148E4                     u29961:
 33739   0148E4  EF67  F0A3         	goto	l22083
 33740   0148E8                     u29960:
 33741   0148E8  0EFF               	movlw	255
 33742   0148EA  2418               	addwf	create_name@ni^(0+1280),w,c
 33743   0148EC  6E10               	movwf	??_create_name^(0+1280),c
 33744   0148EE  0EFF               	movlw	255
 33745   0148F0  2019               	addwfc	(create_name@ni+1)^(0+1280),w,c
 33746   0148F2  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33747   0148F4  5010               	movf	??_create_name^(0+1280),w,c
 33748   0148F6  5C1A               	subwf	create_name@i^(0+1280),w,c
 33749   0148F8  5011               	movf	(??_create_name+1)^(0+1280),w,c
 33750   0148FA  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 33751   0148FC  A0D8               	btfss	status,0,c
 33752   0148FE  EF83  F0A4         	goto	u29971
 33753   014902  EF85  F0A4         	goto	u29970
 33754   014906                     u29971:
 33755   014906  EF87  F0A4         	goto	l22147
 33756   01490A                     u29970:
 33757   01490A  EF67  F0A3         	goto	l22083
 33758   01490E                     l22147:
 33759                           
 33760                           ;../fatfs/ff.c: 3027:    sfn[i++] = c;
 33761   01490E  501A               	movf	create_name@i^(0+1280),w,c
 33762   014910  241C               	addwf	create_name@sfn^(0+1280),w,c
 33763   014912  6ED9               	movwf	fsr2l,c
 33764   014914  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33765   014916  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33766   014918  6EDA               	movwf	fsr2h,c
 33767   01491A  C522  F4DF         	movff	create_name@c,indf2
 33768   01491E  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33769   014920  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33770   014922                     
 33771                           ;../fatfs/ff.c: 3028:    sfn[i++] = d;
 33772   014922  501A               	movf	create_name@i^(0+1280),w,c
 33773   014924  241C               	addwf	create_name@sfn^(0+1280),w,c
 33774   014926  6ED9               	movwf	fsr2l,c
 33775   014928  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33776   01492A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33777   01492C  6EDA               	movwf	fsr2h,c
 33778   01492E  C517  F4DF         	movff	create_name@d,indf2
 33779   014932  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33780   014934  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33781                           
 33782                           ;../fatfs/ff.c: 3029:   } else {
 33783   014936  EF95  F0A3         	goto	l22101
 33784   01493A                     l22153:
 33785                           
 33786                           ;../fatfs/ff.c: 3030:    if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NA
      +                          ME;
 33787   01493A  0E07               	movlw	low STR_166
 33788   01493C  6E04               	movwf	strchr@s^(0+1280),c
 33789   01493E  0EFE               	movlw	high STR_166
 33790   014940  6E05               	movwf	(strchr@s+1)^(0+1280),c
 33791   014942  C522  F506         	movff	create_name@c,strchr@c
 33792   014946  6A07               	clrf	(strchr@c+1)^(0+1280),c
 33793   014948  EC75  F0F8         	call	_strchr	;wreg free
 33794   01494C  5004               	movf	?_strchr^(0+1280),w,c
 33795   01494E  1005               	iorwf	(?_strchr+1)^(0+1280),w,c
 33796   014950  B4D8               	btfsc	status,2,c
 33797   014952  EFAD  F0A4         	goto	u29981
 33798   014956  EFAF  F0A4         	goto	u29980
 33799   01495A                     u29981:
 33800   01495A  EFB1  F0A4         	goto	l22159
 33801   01495E                     u29980:
 33802   01495E  EF67  F0A3         	goto	l22083
 33803   014962                     l22159:
 33804                           
 33805                           ;../fatfs/ff.c: 3031:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 33806   014962  0E60               	movlw	96
 33807   014964  6422               	cpfsgt	create_name@c^(0+1280),c
 33808   014966  EFB7  F0A4         	goto	u29991
 33809   01496A  EFB9  F0A4         	goto	u29990
 33810   01496E                     u29991:
 33811   01496E  EFC3  F0A4         	goto	l22165
 33812   014972                     u29990:
 33813   014972  0E7B               	movlw	123
 33814   014974  6022               	cpfslt	create_name@c^(0+1280),c
 33815   014976  EFBF  F0A4         	goto	u30001
 33816   01497A  EFC1  F0A4         	goto	u30000
 33817   01497E                     u30001:
 33818   01497E  EFC3  F0A4         	goto	l22165
 33819   014982                     u30000:
 33820   014982  0E20               	movlw	32
 33821   014984  5E22               	subwf	create_name@c^(0+1280),f,c
 33822   014986                     l22165:
 33823                           
 33824                           ;../fatfs/ff.c: 3032:    sfn[i++] = c;
 33825   014986  501A               	movf	create_name@i^(0+1280),w,c
 33826   014988  241C               	addwf	create_name@sfn^(0+1280),w,c
 33827   01498A  6ED9               	movwf	fsr2l,c
 33828   01498C  501B               	movf	(create_name@i+1)^(0+1280),w,c
 33829   01498E  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 33830   014990  6EDA               	movwf	fsr2h,c
 33831   014992  C522  F4DF         	movff	create_name@c,indf2
 33832   014996  4A1A               	infsnz	create_name@i^(0+1280),f,c
 33833   014998  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 33834   01499A  EF95  F0A3         	goto	l22101
 33835   01499E                     l22169:
 33836                           
 33837                           ;../fatfs/ff.c: 3035:  *path = &p[si];
 33838   01499E  5020               	movf	create_name@si^(0+1280),w,c
 33839   0149A0  241E               	addwf	create_name@p^(0+1280),w,c
 33840   0149A2  6E10               	movwf	??_create_name^(0+1280),c
 33841   0149A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33842   0149A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33843   0149A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33844   0149AA  C50E  F4D9         	movff	create_name@path,fsr2l
 33845   0149AE  C50F  F4DA         	movff	create_name@path+1,fsr2h
 33846   0149B2  C510  F4DE         	movff	??_create_name,postinc2
 33847   0149B6  C511  F4DD         	movff	??_create_name+1,postdec2
 33848   0149BA                     
 33849                           ;../fatfs/ff.c: 3036:  if (i == 0) return FR_INVALID_NAME;
 33850   0149BA  501A               	movf	create_name@i^(0+1280),w,c
 33851   0149BC  101B               	iorwf	(create_name@i+1)^(0+1280),w,c
 33852   0149BE  A4D8               	btfss	status,2,c
 33853   0149C0  EFE4  F0A4         	goto	u30011
 33854   0149C4  EFE6  F0A4         	goto	u30010
 33855   0149C8                     u30011:
 33856   0149C8  EFE8  F0A4         	goto	l22177
 33857   0149CC                     u30010:
 33858   0149CC  EF67  F0A3         	goto	l22083
 33859   0149D0                     l22177:
 33860                           
 33861                           ;../fatfs/ff.c: 3038:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 33862   0149D0  C51C  F4D9         	movff	create_name@sfn,fsr2l
 33863   0149D4  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 33864   0149D8  0EE5               	movlw	229
 33865   0149DA  18DE               	xorwf	postinc2,w,c
 33866   0149DC  A4D8               	btfss	status,2,c
 33867   0149DE  EFF3  F0A4         	goto	u30021
 33868   0149E2  EFF5  F0A4         	goto	u30020
 33869   0149E6                     u30021:
 33870   0149E6  EFFB  F0A4         	goto	l22181
 33871   0149EA                     u30020:
 33872   0149EA  C51C  F4D9         	movff	create_name@sfn,fsr2l
 33873   0149EE  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 33874   0149F2  0E05               	movlw	5
 33875   0149F4  6EDF               	movwf	indf2,c
 33876   0149F6                     l22181:
 33877                           
 33878                           ;../fatfs/ff.c: 3039:  sfn[11] = (c <= ' ' || p[si] <= ' ') ? 0x04 : 0;
 33879   0149F6  0E20               	movlw	32
 33880   0149F8  6422               	cpfsgt	create_name@c^(0+1280),c
 33881   0149FA  EF01  F0A5         	goto	u30031
 33882   0149FE  EF03  F0A5         	goto	u30030
 33883   014A02                     u30031:
 33884   014A02  EF29  F0A5         	goto	l22187
 33885   014A06                     u30030:
 33886   014A06  5020               	movf	create_name@si^(0+1280),w,c
 33887   014A08  241E               	addwf	create_name@p^(0+1280),w,c
 33888   014A0A  6E10               	movwf	??_create_name^(0+1280),c
 33889   014A0C  5021               	movf	(create_name@si+1)^(0+1280),w,c
 33890   014A0E  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 33891   014A10  6E11               	movwf	(??_create_name+1)^(0+1280),c
 33892   014A12  C510  F4F6         	movff	??_create_name,tblptrl
 33893   014A16  C511  F4F7         	movff	??_create_name+1,tblptrh
 33894   014A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 33895   014A1C  6EF8               	movwf	tblptru,c
 33896   014A1E  0E25               	movlw	(high __ramtop+-1)
 33897   014A20  64F7               	cpfsgt	tblptrh,c
 33898   014A22  D003               	bra	u30047
 33899   014A24  0008               	tblrd		*
 33900   014A26  50F5               	movf	tablat,w,c
 33901   014A28  D005               	bra	u30040
 33902   014A2A                     u30047:
 33903   014A2A  C4F6 F4E9          	movff	tblptrl,fsr0l
 33904   014A2E  C4F7 F4EA          	movff	tblptrh,fsr0h
 33905   014A32  50EF               	movf	indf0,w,c
 33906   014A34                     u30040:
 33907   014A34  6E12               	movwf	(??_create_name+2)^(0+1280),c
 33908   014A36  0E20               	movlw	32
 33909   014A38  6412               	cpfsgt	(??_create_name+2)^(0+1280),c
 33910   014A3A  EF21  F0A5         	goto	u30051
 33911   014A3E  EF23  F0A5         	goto	u30050
 33912   014A42                     u30051:
 33913   014A42  EF29  F0A5         	goto	l22187
 33914   014A46                     u30050:
 33915   014A46  0E00               	movlw	0
 33916   014A48  6E16               	movwf	(_create_name$2707+1)^(0+1280),c
 33917   014A4A  0E00               	movlw	0
 33918   014A4C  6E15               	movwf	_create_name$2707^(0+1280),c
 33919   014A4E  EF2D  F0A5         	goto	l22189
 33920   014A52                     l22187:
 33921   014A52  0E00               	movlw	0
 33922   014A54  6E16               	movwf	(_create_name$2707+1)^(0+1280),c
 33923   014A56  0E04               	movlw	4
 33924   014A58  6E15               	movwf	_create_name$2707^(0+1280),c
 33925   014A5A                     l22189:
 33926   014A5A  EE20 F00B          	lfsr	2,11
 33927   014A5E  501C               	movf	create_name@sfn^(0+1280),w,c
 33928   014A60  26D9               	addwf	fsr2l,f,c
 33929   014A62  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 33930   014A64  22DA               	addwfc	fsr2h,f,c
 33931   014A66  C515  F4DF         	movff	_create_name$2707,indf2
 33932   014A6A  EF92  F0A3         	goto	l22097
 33933   014A6E                     l1720:
 33934   014A6E  0012               	return		;funcret
 33935   014A70                     __end_of_create_name:
 33936                           	callstack 0
 33937                           
 33938 ;; *************** function _strchr *****************
 33939 ;; Defined at:
 33940 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
 33941 ;; Parameters:    Size  Location     Type
 33942 ;;  s               2    3[COMRAM] PTR const unsigned char 
 33943 ;;		 -> tmp_buf$mezID(8), STR_167(15), line_buf(81), STR_51(11), 
 33944 ;;		 -> STR_50(11), NULL(0), tmp_buf(512), 
 33945 ;;  c               2    5[COMRAM] int 
 33946 ;; Auto vars:     Size  Location     Type
 33947 ;;		None
 33948 ;; Return value:  Size  Location     Type
 33949 ;;                  2    3[COMRAM] PTR unsigned char 
 33950 ;; Registers used:
 33951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 33952 ;; Tracked objects:
 33953 ;;		On entry : 0/0
 33954 ;;		On exit  : 0/0
 33955 ;;		Unchanged: 0/0
 33956 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33961 ;;Total ram usage:        6 bytes
 33962 ;; Hardware stack levels used: 1
 33963 ;; Hardware stack levels required when called: 1
 33964 ;; This function calls:
 33965 ;;		Nothing
 33966 ;; This function is called by:
 33967 ;;		_create_name
 33968 ;;		_strstr
 33969 ;; This function uses a non-reentrant model
 33970 ;;
 33971                           
 33972                           	psect	text84
 33973   01F0EA                     __ptext84:
 33974                           	callstack 0
 33975   01F0EA                     _strchr:
 33976                           	callstack 116
 33977   01F0EA                     l3687:
 33978   01F0EA  C504  F4F6         	movff	strchr@s,tblptrl
 33979   01F0EE  C505  F4F7         	movff	strchr@s+1,tblptrh
 33980   01F0F2  0E00               	movlw	low (__mediumconst shr (0+16))
 33981   01F0F4  6EF8               	movwf	tblptru,c
 33982   01F0F6  0E25               	movlw	(high __ramtop+-1)
 33983   01F0F8  64F7               	cpfsgt	tblptrh,c
 33984   01F0FA  D003               	bra	u29257
 33985   01F0FC  0008               	tblrd		*
 33986   01F0FE  50F5               	movf	tablat,w,c
 33987   01F100  D005               	bra	u29250
 33988   01F102                     u29257:
 33989   01F102  C4F6 F4E9          	movff	tblptrl,fsr0l
 33990   01F106  C4F7 F4EA          	movff	tblptrh,fsr0h
 33991   01F10A  50EF               	movf	indf0,w,c
 33992   01F10C                     u29250:
 33993   01F10C  1806               	xorwf	strchr@c^(0+1280),w,c
 33994   01F10E  A4D8               	btfss	status,2,c
 33995   01F110  EF8C  F0F8         	goto	u29261
 33996   01F114  EF8E  F0F8         	goto	u29260
 33997   01F118                     u29261:
 33998   01F118  EF94  F0F8         	goto	l21829
 33999   01F11C                     u29260:
 34000   01F11C  C504  F504         	movff	strchr@s,?_strchr
 34001   01F120  C505  F505         	movff	strchr@s+1,?_strchr+1
 34002   01F124  EFB7  F0F8         	goto	l3689
 34003   01F128                     l21829:
 34004   01F128  5004               	movf	strchr@s^(0+1280),w,c
 34005   01F12A  6E08               	movwf	??_strchr^(0+1280),c
 34006   01F12C  5005               	movf	(strchr@s+1)^(0+1280),w,c
 34007   01F12E  6E09               	movwf	(??_strchr+1)^(0+1280),c
 34008   01F130  4A04               	infsnz	strchr@s^(0+1280),f,c
 34009   01F132  2A05               	incf	(strchr@s+1)^(0+1280),f,c
 34010   01F134  C508  F4F6         	movff	??_strchr,tblptrl
 34011   01F138  C509  F4F7         	movff	??_strchr+1,tblptrh
 34012   01F13C  0E00               	movlw	low (__mediumconst shr (0+16))
 34013   01F13E  6EF8               	movwf	tblptru,c
 34014   01F140  0E25               	movlw	(high __ramtop+-1)
 34015   01F142  64F7               	cpfsgt	tblptrh,c
 34016   01F144  D003               	bra	u29277
 34017   01F146  0008               	tblrd		*
 34018   01F148  50F5               	movf	tablat,w,c
 34019   01F14A  D005               	bra	u29270
 34020   01F14C                     u29277:
 34021   01F14C  C4F6 F4E9          	movff	tblptrl,fsr0l
 34022   01F150  C4F7 F4EA          	movff	tblptrh,fsr0h
 34023   01F154  50EF               	movf	indf0,w,c
 34024   01F156                     u29270:
 34025   01F156  0900               	iorlw	0
 34026   01F158  A4D8               	btfss	status,2,c
 34027   01F15A  EFB1  F0F8         	goto	u29281
 34028   01F15E  EFB3  F0F8         	goto	u29280
 34029   01F162                     u29281:
 34030   01F162  EF75  F0F8         	goto	l3687
 34031   01F166                     u29280:
 34032   01F166  0E00               	movlw	0
 34033   01F168  6E04               	movwf	?_strchr^(0+1280),c
 34034   01F16A  0E00               	movlw	0
 34035   01F16C  6E05               	movwf	(?_strchr+1)^(0+1280),c
 34036   01F16E                     l3689:
 34037   01F16E  0012               	return		;funcret
 34038   01F170                     __end_of_strchr:
 34039                           	callstack 0
 34040                           
 34041 ;; *************** function _dbc_2nd *****************
 34042 ;; Defined at:
 34043 ;;		line 713 in file "../fatfs/ff.c"
 34044 ;; Parameters:    Size  Location     Type
 34045 ;;  c               1    wreg     unsigned char 
 34046 ;; Auto vars:     Size  Location     Type
 34047 ;;  c               1    5[COMRAM] unsigned char 
 34048 ;; Return value:  Size  Location     Type
 34049 ;;                  2    3[COMRAM] int 
 34050 ;; Registers used:
 34051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34052 ;; Tracked objects:
 34053 ;;		On entry : 0/0
 34054 ;;		On exit  : 0/0
 34055 ;;		Unchanged: 0/0
 34056 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34061 ;;Total ram usage:        3 bytes
 34062 ;; Hardware stack levels used: 1
 34063 ;; Hardware stack levels required when called: 1
 34064 ;; This function calls:
 34065 ;;		Nothing
 34066 ;; This function is called by:
 34067 ;;		_create_name
 34068 ;; This function uses a non-reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text85
 34072   01DCBE                     __ptext85:
 34073                           	callstack 0
 34074   01DCBE                     _dbc_2nd:
 34075                           	callstack 116
 34076                           
 34077                           ;incstack = 0
 34078                           ;dbc_2nd@c stored from wreg
 34079   01DCBE  6E06               	movwf	dbc_2nd@c^(0+1280),c
 34080   01DCC0                     
 34081                           ;../fatfs/ff.c: 713: static int dbc_2nd (BYTE c);../fatfs/ff.c: 714: {;../fatfs/ff.c: 72
      +                          2:  if (c >= DbcTbl[4]) {
 34082   01DCC0  0E05               	movlw	low (_DbcTbl+4)
 34083   01DCC2  6EF6               	movwf	tblptrl,c
 34084   01DCC4  0EF2               	movlw	high (_DbcTbl+4)
 34085   01DCC6  6EF7               	movwf	tblptrh,c
 34086   01DCC8                     	if	0	;tblptru may be non-zero
 34087   01DCC8                     	endif
 34088   01DCC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34089   01DCC8  0E00               	movlw	low (__mediumconst shr (0+16))
 34090   01DCCA  6EF8               	movwf	tblptru,c
 34091   01DCCC                     	endif
 34092   01DCCC  0009               	tblrd		*+
 34093   01DCCE  50F5               	movf	tablat,w,c
 34094   01DCD0  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34095   01DCD2  A0D8               	btfss	status,0,c
 34096   01DCD4  EF6E  F0EE         	goto	u28891
 34097   01DCD8  EF70  F0EE         	goto	u28890
 34098   01DCDC                     u28891:
 34099   01DCDC  EFCA  F0EE         	goto	l21639
 34100   01DCE0                     u28890:
 34101   01DCE0                     
 34102                           ;../fatfs/ff.c: 723:   if (c <= DbcTbl[5]) return 1;
 34103   01DCE0  0E06               	movlw	low (_DbcTbl+5)
 34104   01DCE2  6EF6               	movwf	tblptrl,c
 34105   01DCE4  0EF2               	movlw	high (_DbcTbl+5)
 34106   01DCE6  6EF7               	movwf	tblptrh,c
 34107   01DCE8                     	if	0	;tblptru may be non-zero
 34108   01DCE8                     	endif
 34109   01DCE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34110   01DCE8  0E00               	movlw	low (__mediumconst shr (0+16))
 34111   01DCEA  6EF8               	movwf	tblptru,c
 34112   01DCEC                     	endif
 34113   01DCEC  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34114   01DCEE  0009               	tblrd		*+
 34115   01DCF0  5CF5               	subwf	tablat,w,c
 34116   01DCF2  A0D8               	btfss	status,0,c
 34117   01DCF4  EF7E  F0EE         	goto	u28901
 34118   01DCF8  EF80  F0EE         	goto	u28900
 34119   01DCFC                     u28901:
 34120   01DCFC  EF86  F0EE         	goto	l21623
 34121   01DD00                     u28900:
 34122   01DD00                     l21619:
 34123   01DD00  0E00               	movlw	0
 34124   01DD02  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 34125   01DD04  0E01               	movlw	1
 34126   01DD06  6E04               	movwf	?_dbc_2nd^(0+1280),c
 34127   01DD08  EFCE  F0EE         	goto	l1463
 34128   01DD0C                     l21623:
 34129                           
 34130                           ;../fatfs/ff.c: 724:   if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 34131   01DD0C  0E07               	movlw	low (_DbcTbl+6)
 34132   01DD0E  6EF6               	movwf	tblptrl,c
 34133   01DD10  0EF2               	movlw	high (_DbcTbl+6)
 34134   01DD12  6EF7               	movwf	tblptrh,c
 34135   01DD14                     	if	0	;tblptru may be non-zero
 34136   01DD14                     	endif
 34137   01DD14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34138   01DD14  0E00               	movlw	low (__mediumconst shr (0+16))
 34139   01DD16  6EF8               	movwf	tblptru,c
 34140   01DD18                     	endif
 34141   01DD18  0009               	tblrd		*+
 34142   01DD1A  50F5               	movf	tablat,w,c
 34143   01DD1C  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34144   01DD1E  A0D8               	btfss	status,0,c
 34145   01DD20  EF94  F0EE         	goto	u28911
 34146   01DD24  EF96  F0EE         	goto	u28910
 34147   01DD28                     u28911:
 34148   01DD28  EFA8  F0EE         	goto	l21631
 34149   01DD2C                     u28910:
 34150   01DD2C  0E08               	movlw	low (_DbcTbl+7)
 34151   01DD2E  6EF6               	movwf	tblptrl,c
 34152   01DD30  0EF2               	movlw	high (_DbcTbl+7)
 34153   01DD32  6EF7               	movwf	tblptrh,c
 34154   01DD34                     	if	0	;tblptru may be non-zero
 34155   01DD34                     	endif
 34156   01DD34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34157   01DD34  0E00               	movlw	low (__mediumconst shr (0+16))
 34158   01DD36  6EF8               	movwf	tblptru,c
 34159   01DD38                     	endif
 34160   01DD38  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34161   01DD3A  0009               	tblrd		*+
 34162   01DD3C  5CF5               	subwf	tablat,w,c
 34163   01DD3E  A0D8               	btfss	status,0,c
 34164   01DD40  EFA4  F0EE         	goto	u28921
 34165   01DD44  EFA6  F0EE         	goto	u28920
 34166   01DD48                     u28921:
 34167   01DD48  EFA8  F0EE         	goto	l21631
 34168   01DD4C                     u28920:
 34169   01DD4C  EF80  F0EE         	goto	l21619
 34170   01DD50                     l21631:
 34171                           
 34172                           ;../fatfs/ff.c: 725:   if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 34173   01DD50  0E09               	movlw	low (_DbcTbl+8)
 34174   01DD52  6EF6               	movwf	tblptrl,c
 34175   01DD54  0EF2               	movlw	high (_DbcTbl+8)
 34176   01DD56  6EF7               	movwf	tblptrh,c
 34177   01DD58                     	if	0	;tblptru may be non-zero
 34178   01DD58                     	endif
 34179   01DD58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34180   01DD58  0E00               	movlw	low (__mediumconst shr (0+16))
 34181   01DD5A  6EF8               	movwf	tblptru,c
 34182   01DD5C                     	endif
 34183   01DD5C  0009               	tblrd		*+
 34184   01DD5E  50F5               	movf	tablat,w,c
 34185   01DD60  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 34186   01DD62  A0D8               	btfss	status,0,c
 34187   01DD64  EFB6  F0EE         	goto	u28931
 34188   01DD68  EFB8  F0EE         	goto	u28930
 34189   01DD6C                     u28931:
 34190   01DD6C  EFCA  F0EE         	goto	l21639
 34191   01DD70                     u28930:
 34192   01DD70  0E0A               	movlw	low (_DbcTbl+9)
 34193   01DD72  6EF6               	movwf	tblptrl,c
 34194   01DD74  0EF2               	movlw	high (_DbcTbl+9)
 34195   01DD76  6EF7               	movwf	tblptrh,c
 34196   01DD78                     	if	0	;tblptru may be non-zero
 34197   01DD78                     	endif
 34198   01DD78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34199   01DD78  0E00               	movlw	low (__mediumconst shr (0+16))
 34200   01DD7A  6EF8               	movwf	tblptru,c
 34201   01DD7C                     	endif
 34202   01DD7C  5006               	movf	dbc_2nd@c^(0+1280),w,c
 34203   01DD7E  0009               	tblrd		*+
 34204   01DD80  5CF5               	subwf	tablat,w,c
 34205   01DD82  A0D8               	btfss	status,0,c
 34206   01DD84  EFC6  F0EE         	goto	u28941
 34207   01DD88  EFC8  F0EE         	goto	u28940
 34208   01DD8C                     u28941:
 34209   01DD8C  EFCA  F0EE         	goto	l21639
 34210   01DD90                     u28940:
 34211   01DD90  EF80  F0EE         	goto	l21619
 34212   01DD94                     l21639:
 34213                           
 34214                           ;../fatfs/ff.c: 730:  return 0;
 34215   01DD94  0E00               	movlw	0
 34216   01DD96  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 34217   01DD98  0E00               	movlw	0
 34218   01DD9A  6E04               	movwf	?_dbc_2nd^(0+1280),c
 34219   01DD9C                     l1463:
 34220   01DD9C  0012               	return		;funcret
 34221   01DD9E                     __end_of_dbc_2nd:
 34222                           	callstack 0
 34223                           
 34224 ;; *************** function _dbc_1st *****************
 34225 ;; Defined at:
 34226 ;;		line 693 in file "../fatfs/ff.c"
 34227 ;; Parameters:    Size  Location     Type
 34228 ;;  c               1    wreg     unsigned char 
 34229 ;; Auto vars:     Size  Location     Type
 34230 ;;  c               1    5[COMRAM] unsigned char 
 34231 ;; Return value:  Size  Location     Type
 34232 ;;                  2    3[COMRAM] int 
 34233 ;; Registers used:
 34234 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34235 ;; Tracked objects:
 34236 ;;		On entry : 0/0
 34237 ;;		On exit  : 0/0
 34238 ;;		Unchanged: 0/0
 34239 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34244 ;;Total ram usage:        3 bytes
 34245 ;; Hardware stack levels used: 1
 34246 ;; Hardware stack levels required when called: 1
 34247 ;; This function calls:
 34248 ;;		Nothing
 34249 ;; This function is called by:
 34250 ;;		_create_name
 34251 ;; This function uses a non-reentrant model
 34252 ;;
 34253                           
 34254                           	psect	text86
 34255   01ECDC                     __ptext86:
 34256                           	callstack 0
 34257   01ECDC                     _dbc_1st:
 34258                           	callstack 116
 34259                           
 34260                           ;incstack = 0
 34261                           ;dbc_1st@c stored from wreg
 34262   01ECDC  6E06               	movwf	dbc_1st@c^(0+1280),c
 34263   01ECDE                     
 34264                           ;../fatfs/ff.c: 693: static int dbc_1st (BYTE c);../fatfs/ff.c: 694: {;../fatfs/ff.c: 70
      +                          1:  if (c >= DbcTbl[0]) {
 34265   01ECDE  0E01               	movlw	low _DbcTbl
 34266   01ECE0  6EF6               	movwf	tblptrl,c
 34267   01ECE2                     	if	1	;There is more than 1 active tblptr byte
 34268   01ECE2  0EF2               	movlw	high _DbcTbl
 34269   01ECE4  6EF7               	movwf	tblptrh,c
 34270   01ECE6                     	endif
 34271   01ECE6                     	if	1	;There are 3 active tblptr bytes
 34272   01ECE6  0E00               	movlw	low (_DbcTbl shr (0+16))
 34273   01ECE8  6EF8               	movwf	tblptru,c
 34274   01ECEA                     	endif
 34275   01ECEA  0009               	tblrd		*+
 34276   01ECEC  50F5               	movf	tablat,w,c
 34277   01ECEE  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 34278   01ECF0  A0D8               	btfss	status,0,c
 34279   01ECF2  EF7D  F0F6         	goto	u28851
 34280   01ECF6  EF7F  F0F6         	goto	u28850
 34281   01ECFA                     u28851:
 34282   01ECFA  EFB7  F0F6         	goto	l21611
 34283   01ECFE                     u28850:
 34284   01ECFE                     
 34285                           ;../fatfs/ff.c: 702:   if (c <= DbcTbl[1]) return 1;
 34286   01ECFE  0E02               	movlw	low (_DbcTbl+1)
 34287   01ED00  6EF6               	movwf	tblptrl,c
 34288   01ED02  0EF2               	movlw	high (_DbcTbl+1)
 34289   01ED04  6EF7               	movwf	tblptrh,c
 34290   01ED06                     	if	0	;tblptru may be non-zero
 34291   01ED06                     	endif
 34292   01ED06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34293   01ED06  0E00               	movlw	low (__mediumconst shr (0+16))
 34294   01ED08  6EF8               	movwf	tblptru,c
 34295   01ED0A                     	endif
 34296   01ED0A  5006               	movf	dbc_1st@c^(0+1280),w,c
 34297   01ED0C  0009               	tblrd		*+
 34298   01ED0E  5CF5               	subwf	tablat,w,c
 34299   01ED10  A0D8               	btfss	status,0,c
 34300   01ED12  EF8D  F0F6         	goto	u28861
 34301   01ED16  EF8F  F0F6         	goto	u28860
 34302   01ED1A                     u28861:
 34303   01ED1A  EF95  F0F6         	goto	l21603
 34304   01ED1E                     u28860:
 34305   01ED1E                     l21599:
 34306   01ED1E  0E00               	movlw	0
 34307   01ED20  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 34308   01ED22  0E01               	movlw	1
 34309   01ED24  6E04               	movwf	?_dbc_1st^(0+1280),c
 34310   01ED26  EFBB  F0F6         	goto	l1457
 34311   01ED2A                     l21603:
 34312                           
 34313                           ;../fatfs/ff.c: 703:   if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 34314   01ED2A  0E03               	movlw	low (_DbcTbl+2)
 34315   01ED2C  6EF6               	movwf	tblptrl,c
 34316   01ED2E  0EF2               	movlw	high (_DbcTbl+2)
 34317   01ED30  6EF7               	movwf	tblptrh,c
 34318   01ED32                     	if	0	;tblptru may be non-zero
 34319   01ED32                     	endif
 34320   01ED32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34321   01ED32  0E00               	movlw	low (__mediumconst shr (0+16))
 34322   01ED34  6EF8               	movwf	tblptru,c
 34323   01ED36                     	endif
 34324   01ED36  0009               	tblrd		*+
 34325   01ED38  50F5               	movf	tablat,w,c
 34326   01ED3A  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 34327   01ED3C  A0D8               	btfss	status,0,c
 34328   01ED3E  EFA3  F0F6         	goto	u28871
 34329   01ED42  EFA5  F0F6         	goto	u28870
 34330   01ED46                     u28871:
 34331   01ED46  EFB7  F0F6         	goto	l21611
 34332   01ED4A                     u28870:
 34333   01ED4A  0E04               	movlw	low (_DbcTbl+3)
 34334   01ED4C  6EF6               	movwf	tblptrl,c
 34335   01ED4E  0EF2               	movlw	high (_DbcTbl+3)
 34336   01ED50  6EF7               	movwf	tblptrh,c
 34337   01ED52                     	if	0	;tblptru may be non-zero
 34338   01ED52                     	endif
 34339   01ED52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34340   01ED52  0E00               	movlw	low (__mediumconst shr (0+16))
 34341   01ED54  6EF8               	movwf	tblptru,c
 34342   01ED56                     	endif
 34343   01ED56  5006               	movf	dbc_1st@c^(0+1280),w,c
 34344   01ED58  0009               	tblrd		*+
 34345   01ED5A  5CF5               	subwf	tablat,w,c
 34346   01ED5C  A0D8               	btfss	status,0,c
 34347   01ED5E  EFB3  F0F6         	goto	u28881
 34348   01ED62  EFB5  F0F6         	goto	u28880
 34349   01ED66                     u28881:
 34350   01ED66  EFB7  F0F6         	goto	l21611
 34351   01ED6A                     u28880:
 34352   01ED6A  EF8F  F0F6         	goto	l21599
 34353   01ED6E                     l21611:
 34354                           
 34355                           ;../fatfs/ff.c: 708:  return 0;
 34356   01ED6E  0E00               	movlw	0
 34357   01ED70  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 34358   01ED72  0E00               	movlw	0
 34359   01ED74  6E04               	movwf	?_dbc_1st^(0+1280),c
 34360   01ED76                     l1457:
 34361   01ED76  0012               	return		;funcret
 34362   01ED78                     __end_of_dbc_1st:
 34363                           	callstack 0
 34364                           
 34365 ;; *************** function _dir_register *****************
 34366 ;; Defined at:
 34367 ;;		line 2466 in file "../fatfs/ff.c"
 34368 ;; Parameters:    Size  Location     Type
 34369 ;;  dp              2  136[BANK6 ] PTR struct .
 34370 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 34371 ;; Auto vars:     Size  Location     Type
 34372 ;;  fs              2  138[BANK6 ] PTR struct .
 34373 ;;		 -> fs(564), NULL(0), 
 34374 ;;  res             1  140[BANK6 ] enum E597
 34375 ;; Return value:  Size  Location     Type
 34376 ;;                  1    wreg      enum E597
 34377 ;; Registers used:
 34378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34379 ;; Tracked objects:
 34380 ;;		On entry : 0/0
 34381 ;;		On exit  : 0/0
 34382 ;;		Unchanged: 0/0
 34383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34384 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34385 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34387 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34388 ;;Total ram usage:        5 bytes
 34389 ;; Hardware stack levels used: 1
 34390 ;; Hardware stack levels required when called: 18
 34391 ;; This function calls:
 34392 ;;		_dir_alloc
 34393 ;;		_memcpy
 34394 ;;		_memset
 34395 ;;		_move_window
 34396 ;; This function is called by:
 34397 ;;		_f_open
 34398 ;;		_f_mkdir
 34399 ;;		_f_rename
 34400 ;; This function uses a non-reentrant model
 34401 ;;
 34402                           
 34403                           	psect	text87
 34404   01DBDC                     __ptext87:
 34405                           	callstack 0
 34406   01DBDC                     _dir_register:
 34407                           	callstack 101
 34408   01DBDC                     
 34409                           ;../fatfs/ff.c: 2467:  DIR* dp;../fatfs/ff.c: 2469: {;../fatfs/ff.c: 2470:  FRESULT res;
      +                          ;../fatfs/ff.c: 2471:  FATFS *fs = dp->obj.fs;
 34410   01DBDC  C688  F4D9         	movff	dir_register@dp,fsr2l
 34411   01DBE0  C689  F4DA         	movff	dir_register@dp+1,fsr2h
 34412   01DBE4  C4DE F68A          	movff	postinc2,dir_register@fs
 34413   01DBE8  C4DD F68B          	movff	postdec2,dir_register@fs+1
 34414   01DBEC                     
 34415                           ;../fatfs/ff.c: 2543:  res = dir_alloc(dp, 1);
 34416   01DBEC  C688  F67C         	movff	dir_register@dp,dir_alloc@dp
 34417   01DBF0  C689  F67D         	movff	dir_register@dp+1,dir_alloc@dp+1
 34418   01DBF4  0E00               	movlw	0
 34419   01DBF6  0106               	movlb	6	; () banked
 34420   01DBF8  6F7F               	movwf	(dir_alloc@n_ent+1)& (0+255),b
 34421   01DBFA  0E01               	movlw	1
 34422   01DBFC  6F7E               	movwf	dir_alloc@n_ent& (0+255),b
 34423   01DBFE  ECB4  F0E4         	call	_dir_alloc	;wreg free
 34424   01DC02  0106               	movlb	6	; () banked
 34425   01DC04  6F8C               	movwf	dir_register@res& (0+255),b
 34426   01DC06                     
 34427                           ; BSR set to: 6
 34428                           ;../fatfs/ff.c: 2548:  if (res == FR_OK) {
 34429   01DC06  518C               	movf	dir_register@res& (0+255),w,b
 34430   01DC08  A4D8               	btfss	status,2,c
 34431   01DC0A  EF09  F0EE         	goto	u30611
 34432   01DC0E  EF0B  F0EE         	goto	u30610
 34433   01DC12                     u30611:
 34434   01DC12  EF5D  F0EE         	goto	l22517
 34435   01DC16                     u30610:
 34436   01DC16                     
 34437                           ; BSR set to: 6
 34438                           ;../fatfs/ff.c: 2549:   res = move_window(fs, dp->sect);
 34439   01DC16  C68A  F61A         	movff	dir_register@fs,move_window@fs
 34440   01DC1A  C68B  F61B         	movff	dir_register@fs+1,move_window@fs+1
 34441   01DC1E  EE20 F016          	lfsr	2,22
 34442   01DC22  5188               	movf	dir_register@dp& (0+255),w,b
 34443   01DC24  26D9               	addwf	fsr2l,f,c
 34444   01DC26  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34445   01DC28  22DA               	addwfc	fsr2h,f,c
 34446   01DC2A  C4DE F61C          	movff	postinc2,move_window@sect
 34447   01DC2E  C4DE F61D          	movff	postinc2,move_window@sect+1
 34448   01DC32  C4DE F61E          	movff	postinc2,move_window@sect+2
 34449   01DC36  C4DE F61F          	movff	postinc2,move_window@sect+3
 34450   01DC3A  ECAB  F0EF         	call	_move_window	;wreg free
 34451   01DC3E  0106               	movlb	6	; () banked
 34452   01DC40  6F8C               	movwf	dir_register@res& (0+255),b
 34453   01DC42                     
 34454                           ; BSR set to: 6
 34455                           ;../fatfs/ff.c: 2550:   if (res == FR_OK) {
 34456   01DC42  518C               	movf	dir_register@res& (0+255),w,b
 34457   01DC44  A4D8               	btfss	status,2,c
 34458   01DC46  EF27  F0EE         	goto	u30621
 34459   01DC4A  EF29  F0EE         	goto	u30620
 34460   01DC4E                     u30621:
 34461   01DC4E  EF5D  F0EE         	goto	l22517
 34462   01DC52                     u30620:
 34463   01DC52                     
 34464                           ; BSR set to: 6
 34465                           ;../fatfs/ff.c: 2551:    memset(dp->dir, 0, 32);
 34466   01DC52  EE20 F01A          	lfsr	2,26
 34467   01DC56  5188               	movf	dir_register@dp& (0+255),w,b
 34468   01DC58  26D9               	addwf	fsr2l,f,c
 34469   01DC5A  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34470   01DC5C  22DA               	addwfc	fsr2h,f,c
 34471   01DC5E  C4DE F504          	movff	postinc2,memset@dest
 34472   01DC62  C4DD F505          	movff	postdec2,memset@dest+1
 34473   01DC66  0E00               	movlw	0
 34474   01DC68  6E07               	movwf	(memset@c+1)^(0+1280),c
 34475   01DC6A  0E00               	movlw	0
 34476   01DC6C  6E06               	movwf	memset@c^(0+1280),c
 34477   01DC6E  0E00               	movlw	0
 34478   01DC70  6E09               	movwf	(memset@n+1)^(0+1280),c
 34479   01DC72  0E20               	movlw	32
 34480   01DC74  6E08               	movwf	memset@n^(0+1280),c
 34481   01DC76  EC14  F0FF         	call	_memset	;wreg free
 34482                           
 34483                           ;../fatfs/ff.c: 2552:    memcpy(dp->dir + 0, dp->fn, 11);
 34484   01DC7A  0106               	movlb	6	; () banked
 34485   01DC7C  EE20 F01A          	lfsr	2,26
 34486   01DC80  5188               	movf	dir_register@dp& (0+255),w,b
 34487   01DC82  26D9               	addwf	fsr2l,f,c
 34488   01DC84  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 34489   01DC86  22DA               	addwfc	fsr2h,f,c
 34490   01DC88  C4DE F504          	movff	postinc2,memcpy@d1
 34491   01DC8C  C4DD F505          	movff	postdec2,memcpy@d1+1
 34492   01DC90  0E1C               	movlw	28
 34493   01DC92  2588               	addwf	dir_register@dp& (0+255),w,b
 34494   01DC94  6E06               	movwf	memcpy@s1^(0+1280),c
 34495   01DC96  0E00               	movlw	0
 34496   01DC98  2189               	addwfc	(dir_register@dp+1)& (0+255),w,b
 34497   01DC9A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 34498   01DC9C  0E00               	movlw	0
 34499   01DC9E  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 34500   01DCA0  0E0B               	movlw	11
 34501   01DCA2  6E08               	movwf	memcpy@n^(0+1280),c
 34502   01DCA4  EC00  F0FD         	call	_memcpy	;wreg free
 34503   01DCA8                     
 34504                           ;../fatfs/ff.c: 2556:    fs->wflag = 1;
 34505   01DCA8  0106               	movlb	6	; () banked
 34506   01DCAA  EE20 F004          	lfsr	2,4
 34507   01DCAE  518A               	movf	dir_register@fs& (0+255),w,b
 34508   01DCB0  26D9               	addwf	fsr2l,f,c
 34509   01DCB2  518B               	movf	(dir_register@fs+1)& (0+255),w,b
 34510   01DCB4  22DA               	addwfc	fsr2h,f,c
 34511   01DCB6  0E01               	movlw	1
 34512   01DCB8  6EDF               	movwf	indf2,c
 34513   01DCBA                     l22517:
 34514                           
 34515                           ; BSR set to: 6
 34516                           ;../fatfs/ff.c: 2560:  return res;
 34517   01DCBA  518C               	movf	dir_register@res& (0+255),w,b
 34518   01DCBC                     
 34519                           ; BSR set to: 6
 34520   01DCBC  0012               	return		;funcret
 34521   01DCBE                     __end_of_dir_register:
 34522                           	callstack 0
 34523                           
 34524 ;; *************** function _dir_alloc *****************
 34525 ;; Defined at:
 34526 ;;		line 1807 in file "../fatfs/ff.c"
 34527 ;; Parameters:    Size  Location     Type
 34528 ;;  dp              2  124[BANK6 ] PTR struct .
 34529 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 34530 ;;  n_ent           2  126[BANK6 ] unsigned int 
 34531 ;; Auto vars:     Size  Location     Type
 34532 ;;  n               2  133[BANK6 ] unsigned int 
 34533 ;;  fs              2  131[BANK6 ] PTR struct .
 34534 ;;		 -> fs(564), NULL(0), 
 34535 ;;  res             1  135[BANK6 ] enum E597
 34536 ;; Return value:  Size  Location     Type
 34537 ;;                  1    wreg      enum E597
 34538 ;; Registers used:
 34539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34540 ;; Tracked objects:
 34541 ;;		On entry : 0/0
 34542 ;;		On exit  : 0/0
 34543 ;;		Unchanged: 0/0
 34544 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34545 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34546 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34547 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34548 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34549 ;;Total ram usage:       12 bytes
 34550 ;; Hardware stack levels used: 1
 34551 ;; Hardware stack levels required when called: 17
 34552 ;; This function calls:
 34553 ;;		_dir_next
 34554 ;;		_dir_sdi
 34555 ;;		_move_window
 34556 ;; This function is called by:
 34557 ;;		_dir_register
 34558 ;; This function uses a non-reentrant model
 34559 ;;
 34560                           
 34561                           	psect	text88
 34562   01C968                     __ptext88:
 34563                           	callstack 0
 34564   01C968                     _dir_alloc:
 34565                           	callstack 101
 34566   01C968                     
 34567                           ;../fatfs/ff.c: 1808:  DIR* dp,;../fatfs/ff.c: 1809:  UINT n_ent;../fatfs/ff.c: 1811: {;
      +                          ../fatfs/ff.c: 1812:  FRESULT res;;../fatfs/ff.c: 1813:  UINT n;;../fatfs/ff.c: 1814:  F
      +                          ATFS *fs = dp->obj.fs;
 34568   01C968  C67C  F4D9         	movff	dir_alloc@dp,fsr2l
 34569   01C96C  C67D  F4DA         	movff	dir_alloc@dp+1,fsr2h
 34570   01C970  C4DE F683          	movff	postinc2,dir_alloc@fs
 34571   01C974  C4DD F684          	movff	postdec2,dir_alloc@fs+1
 34572   01C978                     
 34573                           ;../fatfs/ff.c: 1817:  res = dir_sdi(dp, 0);
 34574   01C978  C67C  F63E         	movff	dir_alloc@dp,dir_sdi@dp
 34575   01C97C  C67D  F63F         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 34576   01C980  0E00               	movlw	0
 34577   01C982  0106               	movlb	6	; () banked
 34578   01C984  6F40               	movwf	dir_sdi@ofs& (0+255),b
 34579   01C986  0E00               	movlw	0
 34580   01C988  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 34581   01C98A  0E00               	movlw	0
 34582   01C98C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 34583   01C98E  0E00               	movlw	0
 34584   01C990  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 34585   01C992  EC72  F0BC         	call	_dir_sdi	;wreg free
 34586   01C996  0106               	movlb	6	; () banked
 34587   01C998  6F87               	movwf	dir_alloc@res& (0+255),b
 34588   01C99A                     
 34589                           ; BSR set to: 6
 34590                           ;../fatfs/ff.c: 1818:  if (res == FR_OK) {
 34591   01C99A  5187               	movf	dir_alloc@res& (0+255),w,b
 34592   01C99C  A4D8               	btfss	status,2,c
 34593   01C99E  EFD3  F0E4         	goto	u29581
 34594   01C9A2  EFD5  F0E4         	goto	u29580
 34595   01C9A6                     u29581:
 34596   01C9A6  EF4E  F0E5         	goto	l21993
 34597   01C9AA                     u29580:
 34598   01C9AA                     
 34599                           ; BSR set to: 6
 34600                           ;../fatfs/ff.c: 1819:   n = 0;
 34601   01C9AA  0E00               	movlw	0
 34602   01C9AC  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 34603   01C9AE  0E00               	movlw	0
 34604   01C9B0  6F85               	movwf	dir_alloc@n& (0+255),b
 34605   01C9B2                     l21973:
 34606                           
 34607                           ; BSR set to: 6
 34608                           ;../fatfs/ff.c: 1821:    res = move_window(fs, dp->sect);
 34609   01C9B2  C683  F61A         	movff	dir_alloc@fs,move_window@fs
 34610   01C9B6  C684  F61B         	movff	dir_alloc@fs+1,move_window@fs+1
 34611   01C9BA  EE20 F016          	lfsr	2,22
 34612   01C9BE  517C               	movf	dir_alloc@dp& (0+255),w,b
 34613   01C9C0  26D9               	addwf	fsr2l,f,c
 34614   01C9C2  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34615   01C9C4  22DA               	addwfc	fsr2h,f,c
 34616   01C9C6  C4DE F61C          	movff	postinc2,move_window@sect
 34617   01C9CA  C4DE F61D          	movff	postinc2,move_window@sect+1
 34618   01C9CE  C4DE F61E          	movff	postinc2,move_window@sect+2
 34619   01C9D2  C4DE F61F          	movff	postinc2,move_window@sect+3
 34620   01C9D6  ECAB  F0EF         	call	_move_window	;wreg free
 34621   01C9DA  0106               	movlb	6	; () banked
 34622   01C9DC  6F87               	movwf	dir_alloc@res& (0+255),b
 34623   01C9DE                     
 34624                           ; BSR set to: 6
 34625                           ;../fatfs/ff.c: 1822:    if (res != FR_OK) break;
 34626   01C9DE  5187               	movf	dir_alloc@res& (0+255),w,b
 34627   01C9E0  B4D8               	btfsc	status,2,c
 34628   01C9E2  EFF5  F0E4         	goto	u29591
 34629   01C9E6  EFF7  F0E4         	goto	u29590
 34630   01C9EA                     u29591:
 34631   01C9EA  EFF9  F0E4         	goto	l21979
 34632   01C9EE                     u29590:
 34633   01C9EE  EF4E  F0E5         	goto	l21993
 34634   01C9F2                     l21979:
 34635                           
 34636                           ; BSR set to: 6
 34637                           ;../fatfs/ff.c: 1826:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 34638   01C9F2  EE20 F01A          	lfsr	2,26
 34639   01C9F6  517C               	movf	dir_alloc@dp& (0+255),w,b
 34640   01C9F8  26D9               	addwf	fsr2l,f,c
 34641   01C9FA  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34642   01C9FC  22DA               	addwfc	fsr2h,f,c
 34643   01C9FE  C4DE F680          	movff	postinc2,??_dir_alloc
 34644   01CA02  C4DD F681          	movff	postdec2,??_dir_alloc+1
 34645   01CA06  C680  F4D9         	movff	??_dir_alloc,fsr2l
 34646   01CA0A  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 34647   01CA0E  0EE5               	movlw	229
 34648   01CA10  18DE               	xorwf	postinc2,w,c
 34649   01CA12  B4D8               	btfsc	status,2,c
 34650   01CA14  EF0E  F0E5         	goto	u29601
 34651   01CA18  EF10  F0E5         	goto	u29600
 34652   01CA1C                     u29601:
 34653   01CA1C  EF26  F0E5         	goto	l21983
 34654   01CA20                     u29600:
 34655   01CA20                     
 34656                           ; BSR set to: 6
 34657   01CA20  EE20 F01A          	lfsr	2,26
 34658   01CA24  517C               	movf	dir_alloc@dp& (0+255),w,b
 34659   01CA26  26D9               	addwf	fsr2l,f,c
 34660   01CA28  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 34661   01CA2A  22DA               	addwfc	fsr2h,f,c
 34662   01CA2C  C4DE F680          	movff	postinc2,??_dir_alloc
 34663   01CA30  C4DD F681          	movff	postdec2,??_dir_alloc+1
 34664   01CA34  C680  F4D9         	movff	??_dir_alloc,fsr2l
 34665   01CA38  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 34666   01CA3C  50DF               	movf	indf2,w,c
 34667   01CA3E  A4D8               	btfss	status,2,c
 34668   01CA40  EF24  F0E5         	goto	u29611
 34669   01CA44  EF26  F0E5         	goto	u29610
 34670   01CA48                     u29611:
 34671   01CA48  EF36  F0E5         	goto	l21987
 34672   01CA4C                     u29610:
 34673   01CA4C                     l21983:
 34674                           
 34675                           ; BSR set to: 6
 34676                           ;../fatfs/ff.c: 1828:     if (++n == n_ent) break;
 34677   01CA4C  4B85               	infsnz	dir_alloc@n& (0+255),f,b
 34678   01CA4E  2B86               	incf	(dir_alloc@n+1)& (0+255),f,b
 34679   01CA50  517E               	movf	dir_alloc@n_ent& (0+255),w,b
 34680   01CA52  1985               	xorwf	dir_alloc@n& (0+255),w,b
 34681   01CA54  E107               	bnz	u29621
 34682   01CA56  517F               	movf	(dir_alloc@n_ent+1)& (0+255),w,b
 34683   01CA58  1986               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 34684   01CA5A  A4D8               	btfss	status,2,c
 34685   01CA5C  EF32  F0E5         	goto	u29621
 34686   01CA60  EF34  F0E5         	goto	u29620
 34687   01CA64                     u29621:
 34688   01CA64  EF3A  F0E5         	goto	l21989
 34689   01CA68                     u29620:
 34690   01CA68  EF4E  F0E5         	goto	l21993
 34691   01CA6C                     l21987:
 34692                           
 34693                           ; BSR set to: 6
 34694                           ;../fatfs/ff.c: 1830:     n = 0;
 34695   01CA6C  0E00               	movlw	0
 34696   01CA6E  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 34697   01CA70  0E00               	movlw	0
 34698   01CA72  6F85               	movwf	dir_alloc@n& (0+255),b
 34699   01CA74                     l21989:
 34700                           
 34701                           ; BSR set to: 6
 34702                           ;../fatfs/ff.c: 1832:    res = dir_next(dp, 1);
 34703   01CA74  C67C  F662         	movff	dir_alloc@dp,dir_next@dp
 34704   01CA78  C67D  F663         	movff	dir_alloc@dp+1,dir_next@dp+1
 34705   01CA7C  0E00               	movlw	0
 34706   01CA7E  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 34707   01CA80  0E01               	movlw	1
 34708   01CA82  6F64               	movwf	dir_next@stretch& (0+255),b
 34709   01CA84  ECCF  F0B0         	call	_dir_next	;wreg free
 34710   01CA88  0106               	movlb	6	; () banked
 34711   01CA8A  6F87               	movwf	dir_alloc@res& (0+255),b
 34712   01CA8C                     
 34713                           ; BSR set to: 6
 34714                           ;../fatfs/ff.c: 1833:   } while (res == FR_OK);
 34715   01CA8C  5187               	movf	dir_alloc@res& (0+255),w,b
 34716   01CA8E  B4D8               	btfsc	status,2,c
 34717   01CA90  EF4C  F0E5         	goto	u29631
 34718   01CA94  EF4E  F0E5         	goto	u29630
 34719   01CA98                     u29631:
 34720   01CA98  EFD9  F0E4         	goto	l21973
 34721   01CA9C                     u29630:
 34722   01CA9C                     l21993:
 34723                           
 34724                           ; BSR set to: 6
 34725                           ;../fatfs/ff.c: 1836:  if (res == FR_NO_FILE) res = FR_DENIED;
 34726   01CA9C  0E04               	movlw	4
 34727   01CA9E  1987               	xorwf	dir_alloc@res& (0+255),w,b
 34728   01CAA0  A4D8               	btfss	status,2,c
 34729   01CAA2  EF55  F0E5         	goto	u29641
 34730   01CAA6  EF57  F0E5         	goto	u29640
 34731   01CAAA                     u29641:
 34732   01CAAA  EF59  F0E5         	goto	l1662
 34733   01CAAE                     u29640:
 34734   01CAAE                     
 34735                           ; BSR set to: 6
 34736   01CAAE  0E07               	movlw	7
 34737   01CAB0  6F87               	movwf	dir_alloc@res& (0+255),b
 34738   01CAB2                     l1662:
 34739                           
 34740                           ; BSR set to: 6
 34741                           ;../fatfs/ff.c: 1837:  return res;
 34742   01CAB2  5187               	movf	dir_alloc@res& (0+255),w,b
 34743   01CAB4                     
 34744                           ; BSR set to: 6
 34745   01CAB4  0012               	return		;funcret
 34746   01CAB6                     __end_of_dir_alloc:
 34747                           	callstack 0
 34748                           
 34749 ;; *************** function _dir_sdi *****************
 34750 ;; Defined at:
 34751 ;;		line 1698 in file "../fatfs/ff.c"
 34752 ;; Parameters:    Size  Location     Type
 34753 ;;  dp              2   62[BANK6 ] PTR struct .
 34754 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 34755 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), 
 34756 ;;		 -> f_open@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 34757 ;;  ofs             4   64[BANK6 ] unsigned long 
 34758 ;; Auto vars:     Size  Location     Type
 34759 ;;  clst            4   82[BANK6 ] unsigned long 
 34760 ;;  csz             4   78[BANK6 ] unsigned long 
 34761 ;;  fs              2   86[BANK6 ] PTR struct .
 34762 ;;		 -> fs(564), NULL(0), 
 34763 ;; Return value:  Size  Location     Type
 34764 ;;                  1    wreg      enum E597
 34765 ;; Registers used:
 34766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34767 ;; Tracked objects:
 34768 ;;		On entry : 0/0
 34769 ;;		On exit  : 0/0
 34770 ;;		Unchanged: 0/0
 34771 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34772 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34773 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34774 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34775 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34776 ;;Total ram usage:       26 bytes
 34777 ;; Hardware stack levels used: 1
 34778 ;; Hardware stack levels required when called: 15
 34779 ;; This function calls:
 34780 ;;		_clst2sect
 34781 ;;		_get_fat
 34782 ;; This function is called by:
 34783 ;;		_dir_alloc
 34784 ;;		_dir_find
 34785 ;;		_follow_path
 34786 ;;		_f_getcwd
 34787 ;;		_f_opendir
 34788 ;;		_f_readdir
 34789 ;;		_f_unlink
 34790 ;; This function uses a non-reentrant model
 34791 ;;
 34792                           
 34793                           	psect	text89
 34794   0178E4                     __ptext89:
 34795                           	callstack 0
 34796   0178E4                     _dir_sdi:
 34797                           	callstack 103
 34798   0178E4                     
 34799                           ;../fatfs/ff.c: 1699:  DIR* dp,;../fatfs/ff.c: 1700:  DWORD ofs;../fatfs/ff.c: 1702: {;.
      +                          ./fatfs/ff.c: 1703:  DWORD csz, clst;;../fatfs/ff.c: 1704:  FATFS *fs = dp->obj.fs;
 34800   0178E4  C63E  F4D9         	movff	dir_sdi@dp,fsr2l
 34801   0178E8  C63F  F4DA         	movff	dir_sdi@dp+1,fsr2h
 34802   0178EC  C4DE F656          	movff	postinc2,dir_sdi@fs
 34803   0178F0  C4DD F657          	movff	postdec2,dir_sdi@fs+1
 34804   0178F4  0106               	movlb	6	; () banked
 34805   0178F6  5143               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 34806   0178F8  E107               	bnz	u28951
 34807   0178FA  0E20               	movlw	32
 34808   0178FC  5D42               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 34809   0178FE  B0D8               	btfsc	status,0,c
 34810   017900  EF84  F0BC         	goto	u28951
 34811   017904  EF86  F0BC         	goto	u28950
 34812   017908                     u28951:
 34813   017908  EF9D  F0BC         	goto	l21669
 34814   01790C                     u28950:
 34815   01790C                     
 34816                           ; BSR set to: 6
 34817   01790C  0E1F               	movlw	31
 34818   01790E  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 34819   017910  6F44               	movwf	??_dir_sdi& (0+255),b
 34820   017912  0E00               	movlw	0
 34821   017914  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 34822   017916  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 34823   017918  0E00               	movlw	0
 34824   01791A  1542               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
 34825   01791C  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34826   01791E  0E00               	movlw	0
 34827   017920  1543               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
 34828   017922  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 34829   017924  5144               	movf	??_dir_sdi& (0+255),w,b
 34830   017926  1145               	iorwf	(??_dir_sdi+1)& (0+255),w,b
 34831   017928  1146               	iorwf	(??_dir_sdi+2)& (0+255),w,b
 34832   01792A  1147               	iorwf	(??_dir_sdi+3)& (0+255),w,b
 34833   01792C  B4D8               	btfsc	status,2,c
 34834   01792E  EF9B  F0BC         	goto	u28961
 34835   017932  EF9D  F0BC         	goto	u28960
 34836   017936                     u28961:
 34837   017936  EFA0  F0BC         	goto	l21673
 34838   01793A                     u28960:
 34839   01793A                     l21669:
 34840                           
 34841                           ; BSR set to: 6
 34842                           ;../fatfs/ff.c: 1708:   return FR_INT_ERR;
 34843   01793A  0E02               	movlw	2
 34844   01793C  EF36  F0BE         	goto	l1612
 34845   017940                     l21673:
 34846                           
 34847                           ; BSR set to: 6
 34848                           ;../fatfs/ff.c: 1710:  dp->dptr = ofs;
 34849   017940  EE20 F00E          	lfsr	2,14
 34850   017944  513E               	movf	dir_sdi@dp& (0+255),w,b
 34851   017946  26D9               	addwf	fsr2l,f,c
 34852   017948  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34853   01794A  22DA               	addwfc	fsr2h,f,c
 34854   01794C  C640  F4DE         	movff	dir_sdi@ofs,postinc2
 34855   017950  C641  F4DE         	movff	dir_sdi@ofs+1,postinc2
 34856   017954  C642  F4DE         	movff	dir_sdi@ofs+2,postinc2
 34857   017958  C643  F4DE         	movff	dir_sdi@ofs+3,postinc2
 34858                           
 34859                           ;../fatfs/ff.c: 1711:  clst = dp->obj.sclust;
 34860   01795C  EE20 F006          	lfsr	2,6
 34861   017960  513E               	movf	dir_sdi@dp& (0+255),w,b
 34862   017962  26D9               	addwf	fsr2l,f,c
 34863   017964  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34864   017966  22DA               	addwfc	fsr2h,f,c
 34865   017968  C4DE F652          	movff	postinc2,dir_sdi@clst
 34866   01796C  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 34867   017970  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 34868   017974  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 34869   017978                     
 34870                           ; BSR set to: 6
 34871                           ;../fatfs/ff.c: 1712:  if (clst == 0 && fs->fs_type >= 3) {
 34872   017978  5152               	movf	dir_sdi@clst& (0+255),w,b
 34873   01797A  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 34874   01797C  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 34875   01797E  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 34876   017980  A4D8               	btfss	status,2,c
 34877   017982  EFC5  F0BC         	goto	u28971
 34878   017986  EFC7  F0BC         	goto	u28970
 34879   01798A                     u28971:
 34880   01798A  EFE1  F0BC         	goto	l21683
 34881   01798E                     u28970:
 34882   01798E                     
 34883                           ; BSR set to: 6
 34884   01798E  C656  F4D9         	movff	dir_sdi@fs,fsr2l
 34885   017992  C657  F4DA         	movff	dir_sdi@fs+1,fsr2h
 34886   017996  0E02               	movlw	2
 34887   017998  64DF               	cpfsgt	indf2,c
 34888   01799A  EFD1  F0BC         	goto	u28981
 34889   01799E  EFD3  F0BC         	goto	u28980
 34890   0179A2                     u28981:
 34891   0179A2  EFE1  F0BC         	goto	l21683
 34892   0179A6                     u28980:
 34893   0179A6                     
 34894                           ; BSR set to: 6
 34895                           ;../fatfs/ff.c: 1713:   clst = (DWORD)fs->dirbase;
 34896   0179A6  EE20 F028          	lfsr	2,40
 34897   0179AA  5156               	movf	dir_sdi@fs& (0+255),w,b
 34898   0179AC  26D9               	addwf	fsr2l,f,c
 34899   0179AE  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34900   0179B0  22DA               	addwfc	fsr2h,f,c
 34901   0179B2  C4DE F652          	movff	postinc2,dir_sdi@clst
 34902   0179B6  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 34903   0179BA  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 34904   0179BE  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 34905   0179C2                     l21683:
 34906                           
 34907                           ; BSR set to: 6
 34908                           ;../fatfs/ff.c: 1717:  if (clst == 0) {
 34909   0179C2  5152               	movf	dir_sdi@clst& (0+255),w,b
 34910   0179C4  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 34911   0179C6  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 34912   0179C8  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 34913   0179CA  A4D8               	btfss	status,2,c
 34914   0179CC  EFEA  F0BC         	goto	u28991
 34915   0179D0  EFEC  F0BC         	goto	u28990
 34916   0179D4                     u28991:
 34917   0179D4  EF36  F0BD         	goto	l21693
 34918   0179D8                     u28990:
 34919   0179D8                     
 34920                           ; BSR set to: 6
 34921                           ;../fatfs/ff.c: 1718:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
 34922   0179D8  EE20 F008          	lfsr	2,8
 34923   0179DC  5156               	movf	dir_sdi@fs& (0+255),w,b
 34924   0179DE  26D9               	addwf	fsr2l,f,c
 34925   0179E0  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34926   0179E2  22DA               	addwfc	fsr2h,f,c
 34927   0179E4  C4DE F644          	movff	postinc2,??_dir_sdi
 34928   0179E8  C4DD F645          	movff	postdec2,??_dir_sdi+1
 34929   0179EC  5144               	movf	??_dir_sdi& (0+255),w,b
 34930   0179EE  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34931   0179F0  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 34932   0179F2  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 34933   0179F4  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 34934   0179F6  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 34935   0179F8  C640  F64A         	movff	dir_sdi@ofs,??_dir_sdi+6
 34936   0179FC  C641  F64B         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 34937   017A00  C642  F64C         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 34938   017A04  C643  F64D         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 34939   017A08  0E06               	movlw	6
 34940   017A0A  EF0C  F0BD         	goto	u29000
 34941   017A0E                     u29005:
 34942   017A0E  90D8               	bcf	status,0,c
 34943   017A10  334D               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 34944   017A12  334C               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 34945   017A14  334B               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 34946   017A16  334A               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 34947   017A18                     u29000:
 34948   017A18  2EE8               	decfsz	wreg,f,c
 34949   017A1A  EF07  F0BD         	goto	u29005
 34950   017A1E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 34951   017A20  5D4A               	subwf	(??_dir_sdi+6)& (0+255),w,b
 34952   017A22  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 34953   017A24  594B               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 34954   017A26  5148               	movf	(??_dir_sdi+4)& (0+255),w,b
 34955   017A28  594C               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 34956   017A2A  5149               	movf	(??_dir_sdi+5)& (0+255),w,b
 34957   017A2C  594D               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 34958   017A2E  A0D8               	btfss	status,0,c
 34959   017A30  EF1C  F0BD         	goto	u29011
 34960   017A34  EF1E  F0BD         	goto	u29010
 34961   017A38                     u29011:
 34962   017A38  EF20  F0BD         	goto	l21691
 34963   017A3C                     u29010:
 34964   017A3C  EF9D  F0BC         	goto	l21669
 34965   017A40                     l21691:
 34966                           
 34967                           ; BSR set to: 6
 34968                           ;../fatfs/ff.c: 1719:   dp->sect = fs->dirbase;
 34969   017A40  EE20 F028          	lfsr	2,40
 34970   017A44  5156               	movf	dir_sdi@fs& (0+255),w,b
 34971   017A46  26D9               	addwf	fsr2l,f,c
 34972   017A48  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34973   017A4A  22DA               	addwfc	fsr2h,f,c
 34974   017A4C  EE10 F016          	lfsr	1,22
 34975   017A50  513E               	movf	dir_sdi@dp& (0+255),w,b
 34976   017A52  26E1               	addwf	fsr1l,f,c
 34977   017A54  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 34978   017A56  22E2               	addwfc	fsr1h,f,c
 34979   017A58  C4DE F4E6          	movff	postinc2,postinc1
 34980   017A5C  C4DE F4E6          	movff	postinc2,postinc1
 34981   017A60  C4DE F4E6          	movff	postinc2,postinc1
 34982   017A64  C4DE F4E6          	movff	postinc2,postinc1
 34983                           
 34984                           ;../fatfs/ff.c: 1721:  } else {
 34985   017A68  EFD9  F0BD         	goto	l21715
 34986   017A6C                     l21693:
 34987                           
 34988                           ; BSR set to: 6
 34989                           ;../fatfs/ff.c: 1722:   csz = (DWORD)fs->csize * ((UINT)512);
 34990   017A6C  EE20 F00A          	lfsr	2,10
 34991   017A70  5156               	movf	dir_sdi@fs& (0+255),w,b
 34992   017A72  26D9               	addwf	fsr2l,f,c
 34993   017A74  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 34994   017A76  22DA               	addwfc	fsr2h,f,c
 34995   017A78  C4DE F644          	movff	postinc2,??_dir_sdi
 34996   017A7C  C4DD F645          	movff	postdec2,??_dir_sdi+1
 34997   017A80  5144               	movf	??_dir_sdi& (0+255),w,b
 34998   017A82  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 34999   017A84  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 35000   017A86  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 35001   017A88  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 35002   017A8A  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 35003   017A8C  0E09               	movlw	9
 35004   017A8E                     u29025:
 35005   017A8E  90D8               	bcf	status,0,c
 35006   017A90  3746               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 35007   017A92  3747               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 35008   017A94  3748               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 35009   017A96  3749               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 35010   017A98  2EE8               	decfsz	wreg,f,c
 35011   017A9A  EF47  F0BD         	goto	u29025
 35012   017A9E  C646  F64E         	movff	??_dir_sdi+2,dir_sdi@csz
 35013   017AA2  C647  F64F         	movff	??_dir_sdi+3,dir_sdi@csz+1
 35014   017AA6  C648  F650         	movff	??_dir_sdi+4,dir_sdi@csz+2
 35015   017AAA  C649  F651         	movff	??_dir_sdi+5,dir_sdi@csz+3
 35016                           
 35017                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 35018   017AAE  EFAD  F0BD         	goto	l1618
 35019   017AB2                     l21695:
 35020                           
 35021                           ; BSR set to: 6
 35022                           ;../fatfs/ff.c: 1724:    clst = get_fat(&dp->obj, clst);
 35023   017AB2  C63E  F624         	movff	dir_sdi@dp,get_fat@obj
 35024   017AB6  C63F  F625         	movff	dir_sdi@dp+1,get_fat@obj+1
 35025   017ABA  C652  F626         	movff	dir_sdi@clst,get_fat@clst
 35026   017ABE  C653  F627         	movff	dir_sdi@clst+1,get_fat@clst+1
 35027   017AC2  C654  F628         	movff	dir_sdi@clst+2,get_fat@clst+2
 35028   017AC6  C655  F629         	movff	dir_sdi@clst+3,get_fat@clst+3
 35029   017ACA  ECF7  F0B4         	call	_get_fat	;wreg free
 35030   017ACE  C624  F652         	movff	?_get_fat,dir_sdi@clst
 35031   017AD2  C625  F653         	movff	?_get_fat+1,dir_sdi@clst+1
 35032   017AD6  C626  F654         	movff	?_get_fat+2,dir_sdi@clst+2
 35033   017ADA  C627  F655         	movff	?_get_fat+3,dir_sdi@clst+3
 35034   017ADE                     
 35035                           ;../fatfs/ff.c: 1725:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35036   017ADE  0106               	movlb	6	; () banked
 35037   017AE0  2952               	incf	dir_sdi@clst& (0+255),w,b
 35038   017AE2  E10A               	bnz	u29031
 35039   017AE4  2953               	incf	(dir_sdi@clst+1)& (0+255),w,b
 35040   017AE6  E108               	bnz	u29031
 35041   017AE8  2954               	incf	(dir_sdi@clst+2)& (0+255),w,b
 35042   017AEA  E106               	bnz	u29031
 35043   017AEC  2955               	incf	(dir_sdi@clst+3)& (0+255),w,b
 35044   017AEE  A4D8               	btfss	status,2,c
 35045   017AF0  EF7C  F0BD         	goto	u29031
 35046   017AF4  EF7E  F0BD         	goto	u29030
 35047   017AF8                     u29031:
 35048   017AF8  EF81  F0BD         	goto	l21703
 35049   017AFC                     u29030:
 35050   017AFC                     
 35051                           ; BSR set to: 6
 35052   017AFC  0E01               	movlw	1
 35053   017AFE  EF36  F0BE         	goto	l1612
 35054   017B02                     l21703:
 35055                           
 35056                           ; BSR set to: 6
 35057                           ;../fatfs/ff.c: 1726:    if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 35058   017B02  5155               	movf	(dir_sdi@clst+3)& (0+255),w,b
 35059   017B04  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 35060   017B06  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 35061   017B08  E109               	bnz	u29040
 35062   017B0A  0E02               	movlw	2
 35063   017B0C  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 35064   017B0E  A0D8               	btfss	status,0,c
 35065   017B10  EF8C  F0BD         	goto	u29041
 35066   017B14  EF8E  F0BD         	goto	u29040
 35067   017B18                     u29041:
 35068   017B18  EF9D  F0BC         	goto	l21669
 35069   017B1C                     u29040:
 35070   017B1C                     
 35071                           ; BSR set to: 6
 35072   017B1C  EE20 F018          	lfsr	2,24
 35073   017B20  5156               	movf	dir_sdi@fs& (0+255),w,b
 35074   017B22  26D9               	addwf	fsr2l,f,c
 35075   017B24  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 35076   017B26  22DA               	addwfc	fsr2h,f,c
 35077   017B28  50DE               	movf	postinc2,w,c
 35078   017B2A  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 35079   017B2C  50DE               	movf	postinc2,w,c
 35080   017B2E  5953               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 35081   017B30  50DE               	movf	postinc2,w,c
 35082   017B32  5954               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 35083   017B34  50DE               	movf	postinc2,w,c
 35084   017B36  5955               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 35085   017B38  A0D8               	btfss	status,0,c
 35086   017B3A  EFA1  F0BD         	goto	u29051
 35087   017B3E  EFA3  F0BD         	goto	u29050
 35088   017B42                     u29051:
 35089   017B42  EFA5  F0BD         	goto	l21711
 35090   017B46                     u29050:
 35091   017B46  EF9D  F0BC         	goto	l21669
 35092   017B4A                     l21711:
 35093                           
 35094                           ; BSR set to: 6
 35095                           ;../fatfs/ff.c: 1727:    ofs -= csz;
 35096   017B4A  514E               	movf	dir_sdi@csz& (0+255),w,b
 35097   017B4C  5F40               	subwf	dir_sdi@ofs& (0+255),f,b
 35098   017B4E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 35099   017B50  5B41               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 35100   017B52  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 35101   017B54  5B42               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 35102   017B56  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 35103   017B58  5B43               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 35104   017B5A                     l1618:
 35105                           
 35106                           ; BSR set to: 6
 35107                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 35108   017B5A  514E               	movf	dir_sdi@csz& (0+255),w,b
 35109   017B5C  5D40               	subwf	dir_sdi@ofs& (0+255),w,b
 35110   017B5E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 35111   017B60  5941               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 35112   017B62  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 35113   017B64  5942               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 35114   017B66  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 35115   017B68  5943               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 35116   017B6A  B0D8               	btfsc	status,0,c
 35117   017B6C  EFBA  F0BD         	goto	u29061
 35118   017B70  EFBC  F0BD         	goto	u29060
 35119   017B74                     u29061:
 35120   017B74  EF59  F0BD         	goto	l21695
 35121   017B78                     u29060:
 35122   017B78                     
 35123                           ; BSR set to: 6
 35124                           ;../fatfs/ff.c: 1729:   dp->sect = clst2sect(fs, clst);
 35125   017B78  C656  F510         	movff	dir_sdi@fs,clst2sect@fs
 35126   017B7C  C657  F511         	movff	dir_sdi@fs+1,clst2sect@fs+1
 35127   017B80  C652  F512         	movff	dir_sdi@clst,clst2sect@clst
 35128   017B84  C653  F513         	movff	dir_sdi@clst+1,clst2sect@clst+1
 35129   017B88  C654  F514         	movff	dir_sdi@clst+2,clst2sect@clst+2
 35130   017B8C  C655  F515         	movff	dir_sdi@clst+3,clst2sect@clst+3
 35131   017B90  EC7A  F0F0         	call	_clst2sect	;wreg free
 35132   017B94  0106               	movlb	6	; () banked
 35133   017B96  EE20 F016          	lfsr	2,22
 35134   017B9A  513E               	movf	dir_sdi@dp& (0+255),w,b
 35135   017B9C  26D9               	addwf	fsr2l,f,c
 35136   017B9E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35137   017BA0  22DA               	addwfc	fsr2h,f,c
 35138   017BA2  C510  F4DE         	movff	?_clst2sect,postinc2
 35139   017BA6  C511  F4DE         	movff	?_clst2sect+1,postinc2
 35140   017BAA  C512  F4DE         	movff	?_clst2sect+2,postinc2
 35141   017BAE  C513  F4DE         	movff	?_clst2sect+3,postinc2
 35142   017BB2                     l21715:
 35143                           
 35144                           ; BSR set to: 6
 35145                           ;../fatfs/ff.c: 1731:  dp->clust = clst;
 35146   017BB2  EE20 F012          	lfsr	2,18
 35147   017BB6  513E               	movf	dir_sdi@dp& (0+255),w,b
 35148   017BB8  26D9               	addwf	fsr2l,f,c
 35149   017BBA  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35150   017BBC  22DA               	addwfc	fsr2h,f,c
 35151   017BBE  C652  F4DE         	movff	dir_sdi@clst,postinc2
 35152   017BC2  C653  F4DE         	movff	dir_sdi@clst+1,postinc2
 35153   017BC6  C654  F4DE         	movff	dir_sdi@clst+2,postinc2
 35154   017BCA  C655  F4DE         	movff	dir_sdi@clst+3,postinc2
 35155   017BCE                     
 35156                           ; BSR set to: 6
 35157                           ;../fatfs/ff.c: 1732:  if (dp->sect == 0) return FR_INT_ERR;
 35158   017BCE  EE20 F016          	lfsr	2,22
 35159   017BD2  513E               	movf	dir_sdi@dp& (0+255),w,b
 35160   017BD4  26D9               	addwf	fsr2l,f,c
 35161   017BD6  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35162   017BD8  22DA               	addwfc	fsr2h,f,c
 35163   017BDA  50DE               	movf	postinc2,w,c
 35164   017BDC  10DE               	iorwf	postinc2,w,c
 35165   017BDE  10DE               	iorwf	postinc2,w,c
 35166   017BE0  10DE               	iorwf	postinc2,w,c
 35167   017BE2  A4D8               	btfss	status,2,c
 35168   017BE4  EFF6  F0BD         	goto	u29071
 35169   017BE8  EFF8  F0BD         	goto	u29070
 35170   017BEC                     u29071:
 35171   017BEC  EFFA  F0BD         	goto	l21723
 35172   017BF0                     u29070:
 35173   017BF0  EF9D  F0BC         	goto	l21669
 35174   017BF4                     l21723:
 35175                           
 35176                           ; BSR set to: 6
 35177                           ;../fatfs/ff.c: 1733:  dp->sect += ofs / ((UINT)512);
 35178   017BF4  C640  F644         	movff	dir_sdi@ofs,??_dir_sdi
 35179   017BF8  C641  F645         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 35180   017BFC  C642  F646         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 35181   017C00  C643  F647         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 35182   017C04  0E0A               	movlw	10
 35183   017C06  EF0A  F0BE         	goto	u29080
 35184   017C0A                     u29085:
 35185   017C0A  90D8               	bcf	status,0,c
 35186   017C0C  3347               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 35187   017C0E  3346               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 35188   017C10  3345               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 35189   017C12  3344               	rrcf	??_dir_sdi& (0+255),f,b
 35190   017C14                     u29080:
 35191   017C14  2EE8               	decfsz	wreg,f,c
 35192   017C16  EF05  F0BE         	goto	u29085
 35193   017C1A  EE20 F016          	lfsr	2,22
 35194   017C1E  513E               	movf	dir_sdi@dp& (0+255),w,b
 35195   017C20  26D9               	addwf	fsr2l,f,c
 35196   017C22  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35197   017C24  22DA               	addwfc	fsr2h,f,c
 35198   017C26  5144               	movf	??_dir_sdi& (0+255),w,b
 35199   017C28  26DE               	addwf	postinc2,f,c
 35200   017C2A  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 35201   017C2C  22DE               	addwfc	postinc2,f,c
 35202   017C2E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 35203   017C30  22DE               	addwfc	postinc2,f,c
 35204   017C32  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 35205   017C34  22DE               	addwfc	postinc2,f,c
 35206                           
 35207                           ;../fatfs/ff.c: 1734:  dp->dir = fs->win + (ofs % ((UINT)512));
 35208   017C36  0EFF               	movlw	255
 35209   017C38  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 35210   017C3A  6F44               	movwf	??_dir_sdi& (0+255),b
 35211   017C3C  0E01               	movlw	1
 35212   017C3E  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 35213   017C40  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 35214   017C42  5144               	movf	??_dir_sdi& (0+255),w,b
 35215   017C44  2556               	addwf	dir_sdi@fs& (0+255),w,b
 35216   017C46  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 35217   017C48  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 35218   017C4A  2157               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 35219   017C4C  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 35220   017C4E  0E34               	movlw	52
 35221   017C50  2746               	addwf	(??_dir_sdi+2)& (0+255),f,b
 35222   017C52  0E00               	movlw	0
 35223   017C54  2347               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 35224   017C56  EE20 F01A          	lfsr	2,26
 35225   017C5A  513E               	movf	dir_sdi@dp& (0+255),w,b
 35226   017C5C  26D9               	addwf	fsr2l,f,c
 35227   017C5E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 35228   017C60  22DA               	addwfc	fsr2h,f,c
 35229   017C62  C646  F4DE         	movff	??_dir_sdi+2,postinc2
 35230   017C66  C647  F4DD         	movff	??_dir_sdi+3,postdec2
 35231   017C6A                     
 35232                           ; BSR set to: 6
 35233                           ;../fatfs/ff.c: 1736:  return FR_OK;
 35234   017C6A  0E00               	movlw	0
 35235   017C6C                     l1612:
 35236                           
 35237                           ; BSR set to: 6
 35238   017C6C  0012               	return		;funcret
 35239   017C6E                     __end_of_dir_sdi:
 35240                           	callstack 0
 35241                           
 35242 ;; *************** function _dir_next *****************
 35243 ;; Defined at:
 35244 ;;		line 1746 in file "../fatfs/ff.c"
 35245 ;; Parameters:    Size  Location     Type
 35246 ;;  dp              2   98[BANK6 ] PTR struct .
 35247 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 35248 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), 
 35249 ;;		 -> f_open@dj(40), scan_files1@dir(40), scan_files@dir(40), 
 35250 ;;  stretch         2  100[BANK6 ] int 
 35251 ;; Auto vars:     Size  Location     Type
 35252 ;;  clst            4  120[BANK6 ] unsigned long 
 35253 ;;  ofs             4  114[BANK6 ] unsigned long 
 35254 ;;  fs              2  118[BANK6 ] PTR struct .
 35255 ;;		 -> fs(564), NULL(0), 
 35256 ;; Return value:  Size  Location     Type
 35257 ;;                  1    wreg      enum E597
 35258 ;; Registers used:
 35259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35260 ;; Tracked objects:
 35261 ;;		On entry : 0/0
 35262 ;;		On exit  : 0/0
 35263 ;;		Unchanged: 0/0
 35264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35265 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35266 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35267 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35268 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35269 ;;Total ram usage:       26 bytes
 35270 ;; Hardware stack levels used: 1
 35271 ;; Hardware stack levels required when called: 16
 35272 ;; This function calls:
 35273 ;;		_clst2sect
 35274 ;;		_create_chain
 35275 ;;		_dir_clear
 35276 ;;		_get_fat
 35277 ;; This function is called by:
 35278 ;;		_dir_alloc
 35279 ;;		_dir_read
 35280 ;;		_dir_find
 35281 ;;		_f_getcwd
 35282 ;;		_f_readdir
 35283 ;; This function uses a non-reentrant model
 35284 ;;
 35285                           
 35286                           	psect	text90
 35287   01619E                     __ptext90:
 35288                           	callstack 0
 35289   01619E                     _dir_next:
 35290                           	callstack 101
 35291   01619E                     
 35292                           ;../fatfs/ff.c: 1747:  DIR* dp,;../fatfs/ff.c: 1748:  int stretch;../fatfs/ff.c: 1750: {
      +                          ;../fatfs/ff.c: 1751:  DWORD ofs, clst;;../fatfs/ff.c: 1752:  FATFS *fs = dp->obj.fs;
 35293   01619E  C662  F4D9         	movff	dir_next@dp,fsr2l
 35294   0161A2  C663  F4DA         	movff	dir_next@dp+1,fsr2h
 35295   0161A6  C4DE F676          	movff	postinc2,dir_next@fs
 35296   0161AA  C4DD F677          	movff	postdec2,dir_next@fs+1
 35297   0161AE                     
 35298                           ;../fatfs/ff.c: 1755:  ofs = dp->dptr + 32;
 35299   0161AE  0106               	movlb	6	; () banked
 35300   0161B0  EE20 F00E          	lfsr	2,14
 35301   0161B4  5162               	movf	dir_next@dp& (0+255),w,b
 35302   0161B6  26D9               	addwf	fsr2l,f,c
 35303   0161B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35304   0161BA  22DA               	addwfc	fsr2h,f,c
 35305   0161BC  C4DE F666          	movff	postinc2,??_dir_next
 35306   0161C0  C4DE F667          	movff	postinc2,??_dir_next+1
 35307   0161C4  C4DE F668          	movff	postinc2,??_dir_next+2
 35308   0161C8  C4DE F669          	movff	postinc2,??_dir_next+3
 35309   0161CC  0E20               	movlw	32
 35310   0161CE  2566               	addwf	??_dir_next& (0+255),w,b
 35311   0161D0  6F72               	movwf	dir_next@ofs& (0+255),b
 35312   0161D2  0E00               	movlw	0
 35313   0161D4  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 35314   0161D6  6F73               	movwf	(dir_next@ofs+1)& (0+255),b
 35315   0161D8  0E00               	movlw	0
 35316   0161DA  2168               	addwfc	(??_dir_next+2)& (0+255),w,b
 35317   0161DC  6F74               	movwf	(dir_next@ofs+2)& (0+255),b
 35318   0161DE  0E00               	movlw	0
 35319   0161E0  2169               	addwfc	(??_dir_next+3)& (0+255),w,b
 35320   0161E2  6F75               	movwf	(dir_next@ofs+3)& (0+255),b
 35321   0161E4                     
 35322                           ; BSR set to: 6
 35323   0161E4  5175               	movf	(dir_next@ofs+3)& (0+255),w,b
 35324   0161E6  E109               	bnz	u29090
 35325   0161E8  0E20               	movlw	32
 35326   0161EA  5D74               	subwf	(dir_next@ofs+2)& (0+255),w,b
 35327   0161EC  A0D8               	btfss	status,0,c
 35328   0161EE  EFFB  F0B0         	goto	u29091
 35329   0161F2  EFFD  F0B0         	goto	u29090
 35330   0161F6                     u29091:
 35331   0161F6  EF07  F0B1         	goto	l1628
 35332   0161FA                     u29090:
 35333   0161FA                     
 35334                           ; BSR set to: 6
 35335   0161FA  EE20 F016          	lfsr	2,22
 35336   0161FE  5162               	movf	dir_next@dp& (0+255),w,b
 35337   016200  26D9               	addwf	fsr2l,f,c
 35338   016202  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35339   016204  22DA               	addwfc	fsr2h,f,c
 35340   016206  6ADE               	clrf	postinc2,c
 35341   016208  6ADE               	clrf	postinc2,c
 35342   01620A  6ADE               	clrf	postinc2,c
 35343   01620C  6ADD               	clrf	postdec2,c
 35344   01620E                     l1628:
 35345                           
 35346                           ; BSR set to: 6
 35347                           ;../fatfs/ff.c: 1757:  if (dp->sect == 0) return FR_NO_FILE;
 35348   01620E  EE20 F016          	lfsr	2,22
 35349   016212  5162               	movf	dir_next@dp& (0+255),w,b
 35350   016214  26D9               	addwf	fsr2l,f,c
 35351   016216  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35352   016218  22DA               	addwfc	fsr2h,f,c
 35353   01621A  50DE               	movf	postinc2,w,c
 35354   01621C  10DE               	iorwf	postinc2,w,c
 35355   01621E  10DE               	iorwf	postinc2,w,c
 35356   016220  10DE               	iorwf	postinc2,w,c
 35357   016222  A4D8               	btfss	status,2,c
 35358   016224  EF16  F0B1         	goto	u29101
 35359   016228  EF18  F0B1         	goto	u29100
 35360   01622C                     u29101:
 35361   01622C  EF1B  F0B1         	goto	l21747
 35362   016230                     u29100:
 35363   016230                     l21743:
 35364                           
 35365                           ; BSR set to: 6
 35366   016230  0E04               	movlw	4
 35367   016232  EFE3  F0B2         	goto	l1636
 35368   016236                     l21747:
 35369                           
 35370                           ; BSR set to: 6
 35371                           ;../fatfs/ff.c: 1759:  if (ofs % ((UINT)512) == 0) {
 35372   016236  0EFF               	movlw	255
 35373   016238  1572               	andwf	dir_next@ofs& (0+255),w,b
 35374   01623A  6F66               	movwf	??_dir_next& (0+255),b
 35375   01623C  0E01               	movlw	1
 35376   01623E  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 35377   016240  6F67               	movwf	(??_dir_next+1)& (0+255),b
 35378   016242  0E00               	movlw	0
 35379   016244  1574               	andwf	(dir_next@ofs+2)& (0+255),w,b
 35380   016246  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35381   016248  0E00               	movlw	0
 35382   01624A  1575               	andwf	(dir_next@ofs+3)& (0+255),w,b
 35383   01624C  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35384   01624E  5166               	movf	??_dir_next& (0+255),w,b
 35385   016250  1167               	iorwf	(??_dir_next+1)& (0+255),w,b
 35386   016252  1168               	iorwf	(??_dir_next+2)& (0+255),w,b
 35387   016254  1169               	iorwf	(??_dir_next+3)& (0+255),w,b
 35388   016256  A4D8               	btfss	status,2,c
 35389   016258  EF30  F0B1         	goto	u29111
 35390   01625C  EF32  F0B1         	goto	u29110
 35391   016260                     u29111:
 35392   016260  EFBA  F0B2         	goto	l21815
 35393   016264                     u29110:
 35394   016264                     
 35395                           ; BSR set to: 6
 35396                           ;../fatfs/ff.c: 1760:   dp->sect++;
 35397   016264  EE20 F016          	lfsr	2,22
 35398   016268  5162               	movf	dir_next@dp& (0+255),w,b
 35399   01626A  26D9               	addwf	fsr2l,f,c
 35400   01626C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35401   01626E  22DA               	addwfc	fsr2h,f,c
 35402   016270  2ADE               	incf	postinc2,f,c
 35403   016272  0E00               	movlw	0
 35404   016274  22DE               	addwfc	postinc2,f,c
 35405   016276  22DE               	addwfc	postinc2,f,c
 35406   016278  22DE               	addwfc	postinc2,f,c
 35407                           
 35408                           ;../fatfs/ff.c: 1762:   if (dp->clust == 0) {
 35409   01627A  EE20 F012          	lfsr	2,18
 35410   01627E  5162               	movf	dir_next@dp& (0+255),w,b
 35411   016280  26D9               	addwf	fsr2l,f,c
 35412   016282  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35413   016284  22DA               	addwfc	fsr2h,f,c
 35414   016286  50DE               	movf	postinc2,w,c
 35415   016288  10DE               	iorwf	postinc2,w,c
 35416   01628A  10DE               	iorwf	postinc2,w,c
 35417   01628C  10DE               	iorwf	postinc2,w,c
 35418   01628E  A4D8               	btfss	status,2,c
 35419   016290  EF4C  F0B1         	goto	u29121
 35420   016294  EF4E  F0B1         	goto	u29120
 35421   016298                     u29121:
 35422   016298  EF8C  F0B1         	goto	l21759
 35423   01629C                     u29120:
 35424   01629C                     
 35425                           ; BSR set to: 6
 35426                           ;../fatfs/ff.c: 1763:    if (ofs / 32 >= fs->n_rootdir) {
 35427   01629C  EE20 F008          	lfsr	2,8
 35428   0162A0  5176               	movf	dir_next@fs& (0+255),w,b
 35429   0162A2  26D9               	addwf	fsr2l,f,c
 35430   0162A4  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35431   0162A6  22DA               	addwfc	fsr2h,f,c
 35432   0162A8  C4DE F666          	movff	postinc2,??_dir_next
 35433   0162AC  C4DD F667          	movff	postdec2,??_dir_next+1
 35434   0162B0  5166               	movf	??_dir_next& (0+255),w,b
 35435   0162B2  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35436   0162B4  5167               	movf	(??_dir_next+1)& (0+255),w,b
 35437   0162B6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35438   0162B8  6B6A               	clrf	(??_dir_next+4)& (0+255),b
 35439   0162BA  6B6B               	clrf	(??_dir_next+5)& (0+255),b
 35440   0162BC  C672  F66C         	movff	dir_next@ofs,??_dir_next+6
 35441   0162C0  C673  F66D         	movff	dir_next@ofs+1,??_dir_next+7
 35442   0162C4  C674  F66E         	movff	dir_next@ofs+2,??_dir_next+8
 35443   0162C8  C675  F66F         	movff	dir_next@ofs+3,??_dir_next+9
 35444   0162CC  0E06               	movlw	6
 35445   0162CE  EF6E  F0B1         	goto	u29130
 35446   0162D2                     u29135:
 35447   0162D2  90D8               	bcf	status,0,c
 35448   0162D4  336F               	rrcf	(??_dir_next+9)& (0+255),f,b
 35449   0162D6  336E               	rrcf	(??_dir_next+8)& (0+255),f,b
 35450   0162D8  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 35451   0162DA  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 35452   0162DC                     u29130:
 35453   0162DC  2EE8               	decfsz	wreg,f,c
 35454   0162DE  EF69  F0B1         	goto	u29135
 35455   0162E2  5168               	movf	(??_dir_next+2)& (0+255),w,b
 35456   0162E4  5D6C               	subwf	(??_dir_next+6)& (0+255),w,b
 35457   0162E6  5169               	movf	(??_dir_next+3)& (0+255),w,b
 35458   0162E8  596D               	subwfb	(??_dir_next+7)& (0+255),w,b
 35459   0162EA  516A               	movf	(??_dir_next+4)& (0+255),w,b
 35460   0162EC  596E               	subwfb	(??_dir_next+8)& (0+255),w,b
 35461   0162EE  516B               	movf	(??_dir_next+5)& (0+255),w,b
 35462   0162F0  596F               	subwfb	(??_dir_next+9)& (0+255),w,b
 35463   0162F2  A0D8               	btfss	status,0,c
 35464   0162F4  EF7E  F0B1         	goto	u29141
 35465   0162F8  EF80  F0B1         	goto	u29140
 35466   0162FC                     u29141:
 35467   0162FC  EFBA  F0B2         	goto	l21815
 35468   016300                     u29140:
 35469   016300                     
 35470                           ; BSR set to: 6
 35471                           ;../fatfs/ff.c: 1764:     dp->sect = 0; return FR_NO_FILE;
 35472   016300  EE20 F016          	lfsr	2,22
 35473   016304  5162               	movf	dir_next@dp& (0+255),w,b
 35474   016306  26D9               	addwf	fsr2l,f,c
 35475   016308  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35476   01630A  22DA               	addwfc	fsr2h,f,c
 35477   01630C  6ADE               	clrf	postinc2,c
 35478   01630E  6ADE               	clrf	postinc2,c
 35479   016310  6ADE               	clrf	postinc2,c
 35480   016312  6ADD               	clrf	postdec2,c
 35481   016314  EF18  F0B1         	goto	l21743
 35482   016318                     l21759:
 35483                           
 35484                           ; BSR set to: 6
 35485                           ;../fatfs/ff.c: 1768:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
 35486   016318  EE20 F00A          	lfsr	2,10
 35487   01631C  5176               	movf	dir_next@fs& (0+255),w,b
 35488   01631E  26D9               	addwf	fsr2l,f,c
 35489   016320  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35490   016322  22DA               	addwfc	fsr2h,f,c
 35491   016324  C4DE F666          	movff	postinc2,??_dir_next
 35492   016328  C4DD F667          	movff	postdec2,??_dir_next+1
 35493   01632C  0EFF               	movlw	255
 35494   01632E  2566               	addwf	??_dir_next& (0+255),w,b
 35495   016330  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35496   016332  0EFF               	movlw	255
 35497   016334  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 35498   016336  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35499   016338  C672  F66A         	movff	dir_next@ofs,??_dir_next+4
 35500   01633C  C673  F66B         	movff	dir_next@ofs+1,??_dir_next+5
 35501   016340  C674  F66C         	movff	dir_next@ofs+2,??_dir_next+6
 35502   016344  C675  F66D         	movff	dir_next@ofs+3,??_dir_next+7
 35503   016348  0E0A               	movlw	10
 35504   01634A  EFAC  F0B1         	goto	u29150
 35505   01634E                     u29155:
 35506   01634E  90D8               	bcf	status,0,c
 35507   016350  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 35508   016352  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 35509   016354  336B               	rrcf	(??_dir_next+5)& (0+255),f,b
 35510   016356  336A               	rrcf	(??_dir_next+4)& (0+255),f,b
 35511   016358                     u29150:
 35512   016358  2EE8               	decfsz	wreg,f,c
 35513   01635A  EFA7  F0B1         	goto	u29155
 35514   01635E  5168               	movf	(??_dir_next+2)& (0+255),w,b
 35515   016360  156A               	andwf	(??_dir_next+4)& (0+255),w,b
 35516   016362  6F6E               	movwf	(??_dir_next+8)& (0+255),b
 35517   016364  5169               	movf	(??_dir_next+3)& (0+255),w,b
 35518   016366  156B               	andwf	(??_dir_next+5)& (0+255),w,b
 35519   016368  6F6F               	movwf	(??_dir_next+9)& (0+255),b
 35520   01636A  0E00               	movlw	0
 35521   01636C  156C               	andwf	(??_dir_next+6)& (0+255),w,b
 35522   01636E  6F70               	movwf	(??_dir_next+10)& (0+255),b
 35523   016370  0E00               	movlw	0
 35524   016372  156D               	andwf	(??_dir_next+7)& (0+255),w,b
 35525   016374  6F71               	movwf	(??_dir_next+11)& (0+255),b
 35526   016376  516E               	movf	(??_dir_next+8)& (0+255),w,b
 35527   016378  116F               	iorwf	(??_dir_next+9)& (0+255),w,b
 35528   01637A  1170               	iorwf	(??_dir_next+10)& (0+255),w,b
 35529   01637C  1171               	iorwf	(??_dir_next+11)& (0+255),w,b
 35530   01637E  A4D8               	btfss	status,2,c
 35531   016380  EFC4  F0B1         	goto	u29161
 35532   016384  EFC6  F0B1         	goto	u29160
 35533   016388                     u29161:
 35534   016388  EFBA  F0B2         	goto	l21815
 35535   01638C                     u29160:
 35536   01638C                     
 35537                           ; BSR set to: 6
 35538                           ;../fatfs/ff.c: 1769:     clst = get_fat(&dp->obj, dp->clust);
 35539   01638C  C662  F624         	movff	dir_next@dp,get_fat@obj
 35540   016390  C663  F625         	movff	dir_next@dp+1,get_fat@obj+1
 35541   016394  EE20 F012          	lfsr	2,18
 35542   016398  5162               	movf	dir_next@dp& (0+255),w,b
 35543   01639A  26D9               	addwf	fsr2l,f,c
 35544   01639C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35545   01639E  22DA               	addwfc	fsr2h,f,c
 35546   0163A0  C4DE F626          	movff	postinc2,get_fat@clst
 35547   0163A4  C4DE F627          	movff	postinc2,get_fat@clst+1
 35548   0163A8  C4DE F628          	movff	postinc2,get_fat@clst+2
 35549   0163AC  C4DE F629          	movff	postinc2,get_fat@clst+3
 35550   0163B0  ECF7  F0B4         	call	_get_fat	;wreg free
 35551   0163B4  C624  F678         	movff	?_get_fat,dir_next@clst
 35552   0163B8  C625  F679         	movff	?_get_fat+1,dir_next@clst+1
 35553   0163BC  C626  F67A         	movff	?_get_fat+2,dir_next@clst+2
 35554   0163C0  C627  F67B         	movff	?_get_fat+3,dir_next@clst+3
 35555   0163C4                     
 35556                           ;../fatfs/ff.c: 1770:     if (clst <= 1) return FR_INT_ERR;
 35557   0163C4  0106               	movlb	6	; () banked
 35558   0163C6  517B               	movf	(dir_next@clst+3)& (0+255),w,b
 35559   0163C8  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35560   0163CA  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35561   0163CC  E107               	bnz	u29171
 35562   0163CE  0E02               	movlw	2
 35563   0163D0  5D78               	subwf	dir_next@clst& (0+255),w,b
 35564   0163D2  B0D8               	btfsc	status,0,c
 35565   0163D4  EFEE  F0B1         	goto	u29171
 35566   0163D8  EFF0  F0B1         	goto	u29170
 35567   0163DC                     u29171:
 35568   0163DC  EFF3  F0B1         	goto	l21769
 35569   0163E0                     u29170:
 35570   0163E0                     l21765:
 35571                           
 35572                           ; BSR set to: 6
 35573   0163E0  0E02               	movlw	2
 35574   0163E2  EFE3  F0B2         	goto	l1636
 35575   0163E6                     l21769:
 35576                           
 35577                           ; BSR set to: 6
 35578                           ;../fatfs/ff.c: 1771:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35579   0163E6  2978               	incf	dir_next@clst& (0+255),w,b
 35580   0163E8  E10A               	bnz	u29181
 35581   0163EA  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 35582   0163EC  E108               	bnz	u29181
 35583   0163EE  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 35584   0163F0  E106               	bnz	u29181
 35585   0163F2  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 35586   0163F4  A4D8               	btfss	status,2,c
 35587   0163F6  EFFF  F0B1         	goto	u29181
 35588   0163FA  EF01  F0B2         	goto	u29180
 35589   0163FE                     u29181:
 35590   0163FE  EF04  F0B2         	goto	l21775
 35591   016402                     u29180:
 35592   016402                     l21771:
 35593   016402  0E01               	movlw	1
 35594   016404  EFE3  F0B2         	goto	l1636
 35595   016408                     l21775:
 35596                           
 35597                           ; BSR set to: 6
 35598                           ;../fatfs/ff.c: 1772:     if (clst >= fs->n_fatent) {
 35599   016408  EE20 F018          	lfsr	2,24
 35600   01640C  5176               	movf	dir_next@fs& (0+255),w,b
 35601   01640E  26D9               	addwf	fsr2l,f,c
 35602   016410  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 35603   016412  22DA               	addwfc	fsr2h,f,c
 35604   016414  50DE               	movf	postinc2,w,c
 35605   016416  5D78               	subwf	dir_next@clst& (0+255),w,b
 35606   016418  50DE               	movf	postinc2,w,c
 35607   01641A  5979               	subwfb	(dir_next@clst+1)& (0+255),w,b
 35608   01641C  50DE               	movf	postinc2,w,c
 35609   01641E  597A               	subwfb	(dir_next@clst+2)& (0+255),w,b
 35610   016420  50DE               	movf	postinc2,w,c
 35611   016422  597B               	subwfb	(dir_next@clst+3)& (0+255),w,b
 35612   016424  A0D8               	btfss	status,0,c
 35613   016426  EF17  F0B2         	goto	u29191
 35614   01642A  EF19  F0B2         	goto	u29190
 35615   01642E                     u29191:
 35616   01642E  EF8E  F0B2         	goto	l1644
 35617   016432                     u29190:
 35618   016432                     
 35619                           ; BSR set to: 6
 35620                           ;../fatfs/ff.c: 1774:      if (!stretch) {
 35621   016432  5164               	movf	dir_next@stretch& (0+255),w,b
 35622   016434  1165               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 35623   016436  A4D8               	btfss	status,2,c
 35624   016438  EF20  F0B2         	goto	u29201
 35625   01643C  EF22  F0B2         	goto	u29200
 35626   016440                     u29201:
 35627   016440  EF2E  F0B2         	goto	l21785
 35628   016444                     u29200:
 35629   016444                     
 35630                           ; BSR set to: 6
 35631                           ;../fatfs/ff.c: 1775:       dp->sect = 0; return FR_NO_FILE;
 35632   016444  EE20 F016          	lfsr	2,22
 35633   016448  5162               	movf	dir_next@dp& (0+255),w,b
 35634   01644A  26D9               	addwf	fsr2l,f,c
 35635   01644C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35636   01644E  22DA               	addwfc	fsr2h,f,c
 35637   016450  6ADE               	clrf	postinc2,c
 35638   016452  6ADE               	clrf	postinc2,c
 35639   016454  6ADE               	clrf	postinc2,c
 35640   016456  6ADD               	clrf	postdec2,c
 35641   016458  EF18  F0B1         	goto	l21743
 35642   01645C                     l21785:
 35643                           
 35644                           ; BSR set to: 6
 35645                           ;../fatfs/ff.c: 1777:      clst = create_chain(&dp->obj, dp->clust);
 35646   01645C  C662  F645         	movff	dir_next@dp,create_chain@obj
 35647   016460  C663  F646         	movff	dir_next@dp+1,create_chain@obj+1
 35648   016464  EE20 F012          	lfsr	2,18
 35649   016468  5162               	movf	dir_next@dp& (0+255),w,b
 35650   01646A  26D9               	addwf	fsr2l,f,c
 35651   01646C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35652   01646E  22DA               	addwfc	fsr2h,f,c
 35653   016470  C4DE F647          	movff	postinc2,create_chain@clst
 35654   016474  C4DE F648          	movff	postinc2,create_chain@clst+1
 35655   016478  C4DE F649          	movff	postinc2,create_chain@clst+2
 35656   01647C  C4DE F64A          	movff	postinc2,create_chain@clst+3
 35657   016480  EC7C  F09D         	call	_create_chain	;wreg free
 35658   016484  C645  F678         	movff	?_create_chain,dir_next@clst
 35659   016488  C646  F679         	movff	?_create_chain+1,dir_next@clst+1
 35660   01648C  C647  F67A         	movff	?_create_chain+2,dir_next@clst+2
 35661   016490  C648  F67B         	movff	?_create_chain+3,dir_next@clst+3
 35662   016494                     
 35663                           ;../fatfs/ff.c: 1778:      if (clst == 0) return FR_DENIED;
 35664   016494  0106               	movlb	6	; () banked
 35665   016496  5178               	movf	dir_next@clst& (0+255),w,b
 35666   016498  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35667   01649A  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35668   01649C  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 35669   01649E  A4D8               	btfss	status,2,c
 35670   0164A0  EF54  F0B2         	goto	u29211
 35671   0164A4  EF56  F0B2         	goto	u29210
 35672   0164A8                     u29211:
 35673   0164A8  EF59  F0B2         	goto	l21793
 35674   0164AC                     u29210:
 35675   0164AC                     
 35676                           ; BSR set to: 6
 35677   0164AC  0E07               	movlw	7
 35678   0164AE  EFE3  F0B2         	goto	l1636
 35679   0164B2                     l21793:
 35680                           
 35681                           ; BSR set to: 6
 35682                           ;../fatfs/ff.c: 1779:      if (clst == 1) return FR_INT_ERR;
 35683   0164B2  0578               	decf	dir_next@clst& (0+255),w,b
 35684   0164B4  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 35685   0164B6  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 35686   0164B8  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 35687   0164BA  A4D8               	btfss	status,2,c
 35688   0164BC  EF62  F0B2         	goto	u29221
 35689   0164C0  EF64  F0B2         	goto	u29220
 35690   0164C4                     u29221:
 35691   0164C4  EF66  F0B2         	goto	l21799
 35692   0164C8                     u29220:
 35693   0164C8  EFF0  F0B1         	goto	l21765
 35694   0164CC                     l21799:
 35695                           
 35696                           ; BSR set to: 6
 35697                           ;../fatfs/ff.c: 1780:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 35698   0164CC  2978               	incf	dir_next@clst& (0+255),w,b
 35699   0164CE  E10A               	bnz	u29231
 35700   0164D0  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 35701   0164D2  E108               	bnz	u29231
 35702   0164D4  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 35703   0164D6  E106               	bnz	u29231
 35704   0164D8  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 35705   0164DA  A4D8               	btfss	status,2,c
 35706   0164DC  EF72  F0B2         	goto	u29231
 35707   0164E0  EF74  F0B2         	goto	u29230
 35708   0164E4                     u29231:
 35709   0164E4  EF76  F0B2         	goto	l21805
 35710   0164E8                     u29230:
 35711   0164E8  EF01  F0B2         	goto	l21771
 35712   0164EC                     l21805:
 35713                           
 35714                           ; BSR set to: 6
 35715                           ;../fatfs/ff.c: 1781:      if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
 35716   0164EC  C676  F61A         	movff	dir_next@fs,dir_clear@fs
 35717   0164F0  C677  F61B         	movff	dir_next@fs+1,dir_clear@fs+1
 35718   0164F4  C678  F61C         	movff	dir_next@clst,dir_clear@clst
 35719   0164F8  C679  F61D         	movff	dir_next@clst+1,dir_clear@clst+1
 35720   0164FC  C67A  F61E         	movff	dir_next@clst+2,dir_clear@clst+2
 35721   016500  C67B  F61F         	movff	dir_next@clst+3,dir_clear@clst+3
 35722   016504  EC0C  F0E4         	call	_dir_clear	;wreg free
 35723   016508  0900               	iorlw	0
 35724   01650A  B4D8               	btfsc	status,2,c
 35725   01650C  EF8A  F0B2         	goto	u29241
 35726   016510  EF8C  F0B2         	goto	u29240
 35727   016514                     u29241:
 35728   016514  EF8E  F0B2         	goto	l1644
 35729   016518                     u29240:
 35730   016518  EF01  F0B2         	goto	l21771
 35731   01651C                     l1644:
 35732                           
 35733                           ;../fatfs/ff.c: 1788:     dp->clust = clst;
 35734   01651C  0106               	movlb	6	; () banked
 35735   01651E  EE20 F012          	lfsr	2,18
 35736   016522  5162               	movf	dir_next@dp& (0+255),w,b
 35737   016524  26D9               	addwf	fsr2l,f,c
 35738   016526  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35739   016528  22DA               	addwfc	fsr2h,f,c
 35740   01652A  C678  F4DE         	movff	dir_next@clst,postinc2
 35741   01652E  C679  F4DE         	movff	dir_next@clst+1,postinc2
 35742   016532  C67A  F4DE         	movff	dir_next@clst+2,postinc2
 35743   016536  C67B  F4DE         	movff	dir_next@clst+3,postinc2
 35744   01653A                     
 35745                           ; BSR set to: 6
 35746                           ;../fatfs/ff.c: 1789:     dp->sect = clst2sect(fs, clst);
 35747   01653A  C676  F510         	movff	dir_next@fs,clst2sect@fs
 35748   01653E  C677  F511         	movff	dir_next@fs+1,clst2sect@fs+1
 35749   016542  C678  F512         	movff	dir_next@clst,clst2sect@clst
 35750   016546  C679  F513         	movff	dir_next@clst+1,clst2sect@clst+1
 35751   01654A  C67A  F514         	movff	dir_next@clst+2,clst2sect@clst+2
 35752   01654E  C67B  F515         	movff	dir_next@clst+3,clst2sect@clst+3
 35753   016552  EC7A  F0F0         	call	_clst2sect	;wreg free
 35754   016556  0106               	movlb	6	; () banked
 35755   016558  EE20 F016          	lfsr	2,22
 35756   01655C  5162               	movf	dir_next@dp& (0+255),w,b
 35757   01655E  26D9               	addwf	fsr2l,f,c
 35758   016560  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35759   016562  22DA               	addwfc	fsr2h,f,c
 35760   016564  C510  F4DE         	movff	?_clst2sect,postinc2
 35761   016568  C511  F4DE         	movff	?_clst2sect+1,postinc2
 35762   01656C  C512  F4DE         	movff	?_clst2sect+2,postinc2
 35763   016570  C513  F4DE         	movff	?_clst2sect+3,postinc2
 35764   016574                     l21815:
 35765                           
 35766                           ; BSR set to: 6
 35767                           ;../fatfs/ff.c: 1793:  dp->dptr = ofs;
 35768   016574  EE20 F00E          	lfsr	2,14
 35769   016578  5162               	movf	dir_next@dp& (0+255),w,b
 35770   01657A  26D9               	addwf	fsr2l,f,c
 35771   01657C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35772   01657E  22DA               	addwfc	fsr2h,f,c
 35773   016580  C672  F4DE         	movff	dir_next@ofs,postinc2
 35774   016584  C673  F4DE         	movff	dir_next@ofs+1,postinc2
 35775   016588  C674  F4DE         	movff	dir_next@ofs+2,postinc2
 35776   01658C  C675  F4DE         	movff	dir_next@ofs+3,postinc2
 35777   016590                     
 35778                           ; BSR set to: 6
 35779                           ;../fatfs/ff.c: 1794:  dp->dir = fs->win + ofs % ((UINT)512);
 35780   016590  0EFF               	movlw	255
 35781   016592  1572               	andwf	dir_next@ofs& (0+255),w,b
 35782   016594  6F66               	movwf	??_dir_next& (0+255),b
 35783   016596  0E01               	movlw	1
 35784   016598  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 35785   01659A  6F67               	movwf	(??_dir_next+1)& (0+255),b
 35786   01659C  5166               	movf	??_dir_next& (0+255),w,b
 35787   01659E  2576               	addwf	dir_next@fs& (0+255),w,b
 35788   0165A0  6F68               	movwf	(??_dir_next+2)& (0+255),b
 35789   0165A2  5167               	movf	(??_dir_next+1)& (0+255),w,b
 35790   0165A4  2177               	addwfc	(dir_next@fs+1)& (0+255),w,b
 35791   0165A6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 35792   0165A8  0E34               	movlw	52
 35793   0165AA  2768               	addwf	(??_dir_next+2)& (0+255),f,b
 35794   0165AC  0E00               	movlw	0
 35795   0165AE  2369               	addwfc	(??_dir_next+3)& (0+255),f,b
 35796   0165B0  EE20 F01A          	lfsr	2,26
 35797   0165B4  5162               	movf	dir_next@dp& (0+255),w,b
 35798   0165B6  26D9               	addwf	fsr2l,f,c
 35799   0165B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 35800   0165BA  22DA               	addwfc	fsr2h,f,c
 35801   0165BC  C668  F4DE         	movff	??_dir_next+2,postinc2
 35802   0165C0  C669  F4DD         	movff	??_dir_next+3,postdec2
 35803   0165C4                     
 35804                           ; BSR set to: 6
 35805                           ;../fatfs/ff.c: 1796:  return FR_OK;
 35806   0165C4  0E00               	movlw	0
 35807   0165C6                     l1636:
 35808   0165C6  0012               	return		;funcret
 35809   0165C8                     __end_of_dir_next:
 35810                           	callstack 0
 35811                           
 35812 ;; *************** function _dir_clear *****************
 35813 ;; Defined at:
 35814 ;;		line 1659 in file "../fatfs/ff.c"
 35815 ;; Parameters:    Size  Location     Type
 35816 ;;  fs              2   26[BANK6 ] PTR struct .
 35817 ;;		 -> fs(564), NULL(0), 
 35818 ;;  clst            4   28[BANK6 ] unsigned long 
 35819 ;; Auto vars:     Size  Location     Type
 35820 ;;  sect            4   34[BANK6 ] unsigned long 
 35821 ;;  n               2   40[BANK6 ] unsigned int 
 35822 ;;  szb             2   38[BANK6 ] unsigned int 
 35823 ;;  ibuf            2   32[BANK6 ] PTR unsigned char 
 35824 ;;		 -> fs$win(512), fs(564), NULL(0), 
 35825 ;; Return value:  Size  Location     Type
 35826 ;;                  1    wreg      enum E597
 35827 ;; Registers used:
 35828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35829 ;; Tracked objects:
 35830 ;;		On entry : 0/0
 35831 ;;		On exit  : 0/0
 35832 ;;		Unchanged: 0/0
 35833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35834 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35835 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35837 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35838 ;;Total ram usage:       18 bytes
 35839 ;; Hardware stack levels used: 1
 35840 ;; Hardware stack levels required when called: 13
 35841 ;; This function calls:
 35842 ;;		_clst2sect
 35843 ;;		_disk_write
 35844 ;;		_memset
 35845 ;;		_sync_window
 35846 ;; This function is called by:
 35847 ;;		_dir_next
 35848 ;;		_f_mkdir
 35849 ;; This function uses a non-reentrant model
 35850 ;;
 35851                           
 35852                           	psect	text91
 35853   01C818                     __ptext91:
 35854                           	callstack 0
 35855   01C818                     _dir_clear:
 35856                           	callstack 103
 35857   01C818                     
 35858                           ;../fatfs/ff.c: 1660:  FATFS *fs,;../fatfs/ff.c: 1661:  DWORD clst;../fatfs/ff.c: 1663: 
      +                          {;../fatfs/ff.c: 1664:  LBA_t sect;;../fatfs/ff.c: 1665:  UINT n, szb;;../fatfs/ff.c: 16
      +                          66:  BYTE *ibuf;;../fatfs/ff.c: 1669:  if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 35859   01C818  C61A  F608         	movff	dir_clear@fs,sync_window@fs
 35860   01C81C  C61B  F609         	movff	dir_clear@fs+1,sync_window@fs+1
 35861   01C820  EC26  F0DB         	call	_sync_window	;wreg free
 35862   01C824  0900               	iorlw	0
 35863   01C826  B4D8               	btfsc	status,2,c
 35864   01C828  EF18  F0E4         	goto	u28801
 35865   01C82C  EF1A  F0E4         	goto	u28800
 35866   01C830                     u28801:
 35867   01C830  EF1D  F0E4         	goto	l21573
 35868   01C834                     u28800:
 35869   01C834  0E01               	movlw	1
 35870   01C836  EFB3  F0E4         	goto	l1595
 35871   01C83A                     l21573:
 35872                           
 35873                           ;../fatfs/ff.c: 1670:  sect = clst2sect(fs, clst);
 35874   01C83A  C61A  F510         	movff	dir_clear@fs,clst2sect@fs
 35875   01C83E  C61B  F511         	movff	dir_clear@fs+1,clst2sect@fs+1
 35876   01C842  C61C  F512         	movff	dir_clear@clst,clst2sect@clst
 35877   01C846  C61D  F513         	movff	dir_clear@clst+1,clst2sect@clst+1
 35878   01C84A  C61E  F514         	movff	dir_clear@clst+2,clst2sect@clst+2
 35879   01C84E  C61F  F515         	movff	dir_clear@clst+3,clst2sect@clst+3
 35880   01C852  EC7A  F0F0         	call	_clst2sect	;wreg free
 35881   01C856  C510  F622         	movff	?_clst2sect,dir_clear@sect
 35882   01C85A  C511  F623         	movff	?_clst2sect+1,dir_clear@sect+1
 35883   01C85E  C512  F624         	movff	?_clst2sect+2,dir_clear@sect+2
 35884   01C862  C513  F625         	movff	?_clst2sect+3,dir_clear@sect+3
 35885   01C866                     
 35886                           ;../fatfs/ff.c: 1671:  fs->winsect = sect;
 35887   01C866  0106               	movlb	6	; () banked
 35888   01C868  EE20 F030          	lfsr	2,48
 35889   01C86C  511A               	movf	dir_clear@fs& (0+255),w,b
 35890   01C86E  26D9               	addwf	fsr2l,f,c
 35891   01C870  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35892   01C872  22DA               	addwfc	fsr2h,f,c
 35893   01C874  C622  F4DE         	movff	dir_clear@sect,postinc2
 35894   01C878  C623  F4DE         	movff	dir_clear@sect+1,postinc2
 35895   01C87C  C624  F4DE         	movff	dir_clear@sect+2,postinc2
 35896   01C880  C625  F4DE         	movff	dir_clear@sect+3,postinc2
 35897   01C884                     
 35898                           ; BSR set to: 6
 35899                           ;../fatfs/ff.c: 1672:  memset(fs->win, 0, sizeof fs->win);
 35900   01C884  0E34               	movlw	52
 35901   01C886  251A               	addwf	dir_clear@fs& (0+255),w,b
 35902   01C888  6E04               	movwf	memset@dest^(0+1280),c
 35903   01C88A  0E00               	movlw	0
 35904   01C88C  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 35905   01C88E  6E05               	movwf	(memset@dest+1)^(0+1280),c
 35906   01C890  0E00               	movlw	0
 35907   01C892  6E07               	movwf	(memset@c+1)^(0+1280),c
 35908   01C894  0E00               	movlw	0
 35909   01C896  6E06               	movwf	memset@c^(0+1280),c
 35910   01C898  0E02               	movlw	2
 35911   01C89A  6E09               	movwf	(memset@n+1)^(0+1280),c
 35912   01C89C  0E00               	movlw	0
 35913   01C89E  6E08               	movwf	memset@n^(0+1280),c
 35914   01C8A0  EC14  F0FF         	call	_memset	;wreg free
 35915   01C8A4                     
 35916                           ;../fatfs/ff.c: 1683:  {;../fatfs/ff.c: 1684:   ibuf = fs->win; szb = 1;
 35917   01C8A4  0E34               	movlw	52
 35918   01C8A6  0106               	movlb	6	; () banked
 35919   01C8A8  251A               	addwf	dir_clear@fs& (0+255),w,b
 35920   01C8AA  6F20               	movwf	dir_clear@ibuf& (0+255),b
 35921   01C8AC  0E00               	movlw	0
 35922   01C8AE  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 35923   01C8B0  6F21               	movwf	(dir_clear@ibuf+1)& (0+255),b
 35924   01C8B2                     
 35925                           ; BSR set to: 6
 35926   01C8B2  0E00               	movlw	0
 35927   01C8B4  6F27               	movwf	(dir_clear@szb+1)& (0+255),b
 35928   01C8B6  0E01               	movlw	1
 35929   01C8B8  6F26               	movwf	dir_clear@szb& (0+255),b
 35930   01C8BA                     
 35931                           ; BSR set to: 6
 35932                           ;../fatfs/ff.c: 1685:   for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n
      +                          , szb) == RES_OK; n += szb) ;
 35933   01C8BA  0E00               	movlw	0
 35934   01C8BC  6F29               	movwf	(dir_clear@n+1)& (0+255),b
 35935   01C8BE  0E00               	movlw	0
 35936   01C8C0  6F28               	movwf	dir_clear@n& (0+255),b
 35937   01C8C2  EF68  F0E4         	goto	l21587
 35938   01C8C6                     l21585:
 35939   01C8C6  0106               	movlb	6	; () banked
 35940   01C8C8  5126               	movf	dir_clear@szb& (0+255),w,b
 35941   01C8CA  2728               	addwf	dir_clear@n& (0+255),f,b
 35942   01C8CC  5127               	movf	(dir_clear@szb+1)& (0+255),w,b
 35943   01C8CE  2329               	addwfc	(dir_clear@n+1)& (0+255),f,b
 35944   01C8D0                     l21587:
 35945                           
 35946                           ; BSR set to: 6
 35947   01C8D0  EE20 F00A          	lfsr	2,10
 35948   01C8D4  511A               	movf	dir_clear@fs& (0+255),w,b
 35949   01C8D6  26D9               	addwf	fsr2l,f,c
 35950   01C8D8  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35951   01C8DA  22DA               	addwfc	fsr2h,f,c
 35952   01C8DC  50DE               	movf	postinc2,w,c
 35953   01C8DE  5D28               	subwf	dir_clear@n& (0+255),w,b
 35954   01C8E0  50DE               	movf	postinc2,w,c
 35955   01C8E2  5929               	subwfb	(dir_clear@n+1)& (0+255),w,b
 35956   01C8E4  B0D8               	btfsc	status,0,c
 35957   01C8E6  EF77  F0E4         	goto	u28811
 35958   01C8EA  EF79  F0E4         	goto	u28810
 35959   01C8EE                     u28811:
 35960   01C8EE  EF9E  F0E4         	goto	l21591
 35961   01C8F2                     u28810:
 35962   01C8F2                     
 35963                           ; BSR set to: 6
 35964   01C8F2  C620  F600         	movff	dir_clear@ibuf,disk_write@buff
 35965   01C8F6  C621  F601         	movff	dir_clear@ibuf+1,disk_write@buff+1
 35966   01C8FA  5128               	movf	dir_clear@n& (0+255),w,b
 35967   01C8FC  2522               	addwf	dir_clear@sect& (0+255),w,b
 35968   01C8FE  6F02               	movwf	disk_write@sector& (0+255),b
 35969   01C900  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 35970   01C902  2123               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 35971   01C904  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 35972   01C906  0E00               	movlw	0
 35973   01C908  2124               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 35974   01C90A  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 35975   01C90C  0E00               	movlw	0
 35976   01C90E  2125               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 35977   01C910  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 35978   01C912  C626  F606         	movff	dir_clear@szb,disk_write@count
 35979   01C916  C627  F607         	movff	dir_clear@szb+1,disk_write@count+1
 35980   01C91A  EE20 F001          	lfsr	2,1
 35981   01C91E  511A               	movf	dir_clear@fs& (0+255),w,b
 35982   01C920  26D9               	addwf	fsr2l,f,c
 35983   01C922  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 35984   01C924  22DA               	addwfc	fsr2h,f,c
 35985   01C926  50DF               	movf	indf2,w,c
 35986   01C928  EC7E  F0F3         	call	_disk_write
 35987   01C92C  0900               	iorlw	0
 35988   01C92E  B4D8               	btfsc	status,2,c
 35989   01C930  EF9C  F0E4         	goto	u28821
 35990   01C934  EF9E  F0E4         	goto	u28820
 35991   01C938                     u28821:
 35992   01C938  EF63  F0E4         	goto	l21585
 35993   01C93C                     u28820:
 35994   01C93C                     l21591:
 35995                           
 35996                           ;../fatfs/ff.c: 1686:  };../fatfs/ff.c: 1687:  return (n == fs->csize) ? FR_OK : FR_DISK
      +                          _ERR;
 35997   01C93C  0106               	movlb	6	; () banked
 35998   01C93E  EE20 F00A          	lfsr	2,10
 35999   01C942  511A               	movf	dir_clear@fs& (0+255),w,b
 36000   01C944  26D9               	addwf	fsr2l,f,c
 36001   01C946  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 36002   01C948  22DA               	addwfc	fsr2h,f,c
 36003   01C94A  5128               	movf	dir_clear@n& (0+255),w,b
 36004   01C94C  18DE               	xorwf	postinc2,w,c
 36005   01C94E  E107               	bnz	u28831
 36006   01C950  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 36007   01C952  18DE               	xorwf	postinc2,w,c
 36008   01C954  A4D8               	btfss	status,2,c
 36009   01C956  EFAF  F0E4         	goto	u28831
 36010   01C95A  EFB2  F0E4         	goto	u28830
 36011   01C95E                     u28831:
 36012   01C95E  0E01               	movlw	1
 36013   01C960  EFB3  F0E4         	goto	u28840
 36014   01C964                     u28830:
 36015   01C964  0E00               	movlw	0
 36016   01C966                     u28840:
 36017   01C966                     l1595:
 36018   01C966  0012               	return		;funcret
 36019   01C968                     __end_of_dir_clear:
 36020                           	callstack 0
 36021                           
 36022 ;; *************** function _f_close *****************
 36023 ;; Defined at:
 36024 ;;		line 4218 in file "../fatfs/ff.c"
 36025 ;; Parameters:    Size  Location     Type
 36026 ;;  fp              2   47[BANK6 ] PTR struct .
 36027 ;;		 -> in_fl(546), rom_fl(546), 
 36028 ;; Auto vars:     Size  Location     Type
 36029 ;;  fs              2   49[BANK6 ] PTR struct .
 36030 ;;		 -> fs(564), NULL(0), 
 36031 ;;  res             1   51[BANK6 ] enum E597
 36032 ;; Return value:  Size  Location     Type
 36033 ;;                  1    wreg      enum E17409
 36034 ;; Registers used:
 36035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36036 ;; Tracked objects:
 36037 ;;		On entry : 0/0
 36038 ;;		On exit  : 0/0
 36039 ;;		Unchanged: 0/0
 36040 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36044 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36045 ;;Total ram usage:        5 bytes
 36046 ;; Hardware stack levels used: 1
 36047 ;; Hardware stack levels required when called: 15
 36048 ;; This function calls:
 36049 ;;		_f_sync
 36050 ;;		_validate
 36051 ;; This function is called by:
 36052 ;;		_load_program
 36053 ;;		_load_config
 36054 ;;		_scan_files
 36055 ;;		_scan_files1
 36056 ;;		_see_file
 36057 ;;		_in_file
 36058 ;;		_str_inf
 36059 ;; This function uses a non-reentrant model
 36060 ;;
 36061                           
 36062                           	psect	text92
 36063   01F7B6                     __ptext92:
 36064                           	callstack 0
 36065   01F7B6                     _f_close:
 36066                           	callstack 105
 36067   01F7B6                     
 36068                           ;../fatfs/ff.c: 4219:  FIL* fp;../fatfs/ff.c: 4221: {;../fatfs/ff.c: 4222:  FRESULT res;
      +                          ;../fatfs/ff.c: 4223:  FATFS *fs;;../fatfs/ff.c: 4226:  res = f_sync(fp);
 36069   01F7B6  C62F  F624         	movff	f_close@fp,f_sync@fp
 36070   01F7BA  C630  F625         	movff	f_close@fp+1,f_sync@fp+1
 36071   01F7BE  EC6D  F0CE         	call	_f_sync	;wreg free
 36072   01F7C2  0106               	movlb	6	; () banked
 36073   01F7C4  6F33               	movwf	f_close@res& (0+255),b
 36074   01F7C6                     
 36075                           ; BSR set to: 6
 36076                           ;../fatfs/ff.c: 4227:  if (res == FR_OK)
 36077   01F7C6  5133               	movf	f_close@res& (0+255),w,b
 36078   01F7C8  A4D8               	btfss	status,2,c
 36079   01F7CA  EFE9  F0FB         	goto	u32071
 36080   01F7CE  EFEB  F0FB         	goto	u32070
 36081   01F7D2                     u32071:
 36082   01F7D2  EF06  F0FC         	goto	l2004
 36083   01F7D6                     u32070:
 36084   01F7D6                     
 36085                           ; BSR set to: 6
 36086                           ;../fatfs/ff.c: 4229:  {;../fatfs/ff.c: 4230:   res = validate(&fp->obj, &fs);
 36087   01F7D6  C62F  F5BE         	movff	f_close@fp,validate@obj
 36088   01F7DA  C630  F5BF         	movff	f_close@fp+1,validate@obj+1
 36089   01F7DE  0E31               	movlw	low f_close@fs
 36090   01F7E0  0105               	movlb	5	; () banked
 36091   01F7E2  6FC0               	movwf	validate@rfs& (0+255),b
 36092   01F7E4  0E06               	movlw	high f_close@fs
 36093   01F7E6  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 36094   01F7E8  ECA3  F0E9         	call	_validate	;wreg free
 36095   01F7EC  0106               	movlb	6	; () banked
 36096   01F7EE  6F33               	movwf	f_close@res& (0+255),b
 36097   01F7F0                     
 36098                           ; BSR set to: 6
 36099                           ;../fatfs/ff.c: 4231:   if (res == FR_OK) {
 36100   01F7F0  5133               	movf	f_close@res& (0+255),w,b
 36101   01F7F2  A4D8               	btfss	status,2,c
 36102   01F7F4  EFFE  F0FB         	goto	u32081
 36103   01F7F8  EF00  F0FC         	goto	u32080
 36104   01F7FC                     u32081:
 36105   01F7FC  EF06  F0FC         	goto	l2004
 36106   01F800                     u32080:
 36107   01F800                     
 36108                           ; BSR set to: 6
 36109                           ;../fatfs/ff.c: 4236:    fp->obj.fs = 0;
 36110   01F800  C62F  F4D9         	movff	f_close@fp,fsr2l
 36111   01F804  C630  F4DA         	movff	f_close@fp+1,fsr2h
 36112   01F808  6ADE               	clrf	postinc2,c
 36113   01F80A  6ADD               	clrf	postdec2,c
 36114   01F80C                     l2004:
 36115                           
 36116                           ; BSR set to: 6
 36117   01F80C  0012               	return		;funcret
 36118   01F80E                     __end_of_f_close:
 36119                           	callstack 0
 36120                           
 36121 ;; *************** function _f_sync *****************
 36122 ;; Defined at:
 36123 ;;		line 4137 in file "../fatfs/ff.c"
 36124 ;; Parameters:    Size  Location     Type
 36125 ;;  fp              2   36[BANK6 ] PTR struct .
 36126 ;;		 -> in_fl(546), rom_fl(546), 
 36127 ;; Auto vars:     Size  Location     Type
 36128 ;;  tm              4   38[BANK6 ] unsigned long 
 36129 ;;  fs              2   45[BANK6 ] PTR struct .
 36130 ;;		 -> fs(564), NULL(0), 
 36131 ;;  dir             2   43[BANK6 ] PTR unsigned char 
 36132 ;;		 -> fs(564), NULL(0), 
 36133 ;;  res             1   42[BANK6 ] enum E597
 36134 ;; Return value:  Size  Location     Type
 36135 ;;                  1    wreg      enum E16851
 36136 ;; Registers used:
 36137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36138 ;; Tracked objects:
 36139 ;;		On entry : 0/0
 36140 ;;		On exit  : 0/0
 36141 ;;		Unchanged: 0/0
 36142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36143 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36144 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36146 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36147 ;;Total ram usage:       11 bytes
 36148 ;; Hardware stack levels used: 1
 36149 ;; Hardware stack levels required when called: 14
 36150 ;; This function calls:
 36151 ;;		_disk_write
 36152 ;;		_get_fattime
 36153 ;;		_move_window
 36154 ;;		_st_clust
 36155 ;;		_st_dword
 36156 ;;		_st_word
 36157 ;;		_sync_fs
 36158 ;;		_validate
 36159 ;; This function is called by:
 36160 ;;		_write_sector
 36161 ;;		_f_close
 36162 ;; This function uses a non-reentrant model
 36163 ;;
 36164                           
 36165                           	psect	text93
 36166   019CDA                     __ptext93:
 36167                           	callstack 0
 36168   019CDA                     _f_sync:
 36169                           	callstack 107
 36170   019CDA                     
 36171                           ;../fatfs/ff.c: 4138:  FIL* fp;../fatfs/ff.c: 4140: {;../fatfs/ff.c: 4141:  FRESULT res;
      +                          ;../fatfs/ff.c: 4142:  FATFS *fs;;../fatfs/ff.c: 4143:  DWORD tm;;../fatfs/ff.c: 4144:  
      +                          BYTE *dir;;../fatfs/ff.c: 4147:  res = validate(&fp->obj, &fs);
 36172   019CDA  C624  F5BE         	movff	f_sync@fp,validate@obj
 36173   019CDE  C625  F5BF         	movff	f_sync@fp+1,validate@obj+1
 36174   019CE2  0E2D               	movlw	low f_sync@fs
 36175   019CE4  0105               	movlb	5	; () banked
 36176   019CE6  6FC0               	movwf	validate@rfs& (0+255),b
 36177   019CE8  0E06               	movlw	high f_sync@fs
 36178   019CEA  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 36179   019CEC  ECA3  F0E9         	call	_validate	;wreg free
 36180   019CF0  0106               	movlb	6	; () banked
 36181   019CF2  6F2A               	movwf	f_sync@res& (0+255),b
 36182   019CF4                     
 36183                           ; BSR set to: 6
 36184                           ;../fatfs/ff.c: 4148:  if (res == FR_OK) {
 36185   019CF4  512A               	movf	f_sync@res& (0+255),w,b
 36186   019CF6  A4D8               	btfss	status,2,c
 36187   019CF8  EF80  F0CE         	goto	u30461
 36188   019CFC  EF82  F0CE         	goto	u30460
 36189   019D00                     u30461:
 36190   019D00  EF76  F0CF         	goto	l22433
 36191   019D04                     u30460:
 36192   019D04                     
 36193                           ; BSR set to: 6
 36194                           ;../fatfs/ff.c: 4149:   if (fp->flag & 0x40) {
 36195   019D04  EE20 F00E          	lfsr	2,14
 36196   019D08  5124               	movf	f_sync@fp& (0+255),w,b
 36197   019D0A  26D9               	addwf	fsr2l,f,c
 36198   019D0C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36199   019D0E  22DA               	addwfc	fsr2h,f,c
 36200   019D10  ACDF               	btfss	indf2,6,c
 36201   019D12  EF8D  F0CE         	goto	u30471
 36202   019D16  EF8F  F0CE         	goto	u30470
 36203   019D1A                     u30471:
 36204   019D1A  EF76  F0CF         	goto	l22433
 36205   019D1E                     u30470:
 36206   019D1E                     
 36207                           ; BSR set to: 6
 36208                           ;../fatfs/ff.c: 4151:    if (fp->flag & 0x80) {
 36209   019D1E  EE20 F00E          	lfsr	2,14
 36210   019D22  5124               	movf	f_sync@fp& (0+255),w,b
 36211   019D24  26D9               	addwf	fsr2l,f,c
 36212   019D26  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36213   019D28  22DA               	addwfc	fsr2h,f,c
 36214   019D2A  AEDF               	btfss	indf2,7,c
 36215   019D2C  EF9A  F0CE         	goto	u30481
 36216   019D30  EF9C  F0CE         	goto	u30480
 36217   019D34                     u30481:
 36218   019D34  EFD1  F0CE         	goto	l22413
 36219   019D38                     u30480:
 36220   019D38                     
 36221                           ; BSR set to: 6
 36222                           ;../fatfs/ff.c: 4152:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) retu
      +                          rn FR_DISK_ERR;
 36223   019D38  0E22               	movlw	34
 36224   019D3A  2524               	addwf	f_sync@fp& (0+255),w,b
 36225   019D3C  6F00               	movwf	disk_write@buff& (0+255),b
 36226   019D3E  0E00               	movlw	0
 36227   019D40  2125               	addwfc	(f_sync@fp+1)& (0+255),w,b
 36228   019D42  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 36229   019D44  EE20 F018          	lfsr	2,24
 36230   019D48  5124               	movf	f_sync@fp& (0+255),w,b
 36231   019D4A  26D9               	addwf	fsr2l,f,c
 36232   019D4C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36233   019D4E  22DA               	addwfc	fsr2h,f,c
 36234   019D50  C4DE F602          	movff	postinc2,disk_write@sector
 36235   019D54  C4DE F603          	movff	postinc2,disk_write@sector+1
 36236   019D58  C4DE F604          	movff	postinc2,disk_write@sector+2
 36237   019D5C  C4DE F605          	movff	postinc2,disk_write@sector+3
 36238   019D60  0E00               	movlw	0
 36239   019D62  6F07               	movwf	(disk_write@count+1)& (0+255),b
 36240   019D64  0E01               	movlw	1
 36241   019D66  6F06               	movwf	disk_write@count& (0+255),b
 36242   019D68  EE20 F001          	lfsr	2,1
 36243   019D6C  512D               	movf	f_sync@fs& (0+255),w,b
 36244   019D6E  26D9               	addwf	fsr2l,f,c
 36245   019D70  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 36246   019D72  22DA               	addwfc	fsr2h,f,c
 36247   019D74  50DF               	movf	indf2,w,c
 36248   019D76  EC7E  F0F3         	call	_disk_write
 36249   019D7A  0900               	iorlw	0
 36250   019D7C  B4D8               	btfsc	status,2,c
 36251   019D7E  EFC3  F0CE         	goto	u30491
 36252   019D82  EFC5  F0CE         	goto	u30490
 36253   019D86                     u30491:
 36254   019D86  EFC8  F0CE         	goto	l22411
 36255   019D8A                     u30490:
 36256   019D8A  0E01               	movlw	1
 36257   019D8C  EF77  F0CF         	goto	l1998
 36258   019D90                     l22411:
 36259                           
 36260                           ;../fatfs/ff.c: 4153:     fp->flag &= (BYTE)~0x80;
 36261   019D90  0106               	movlb	6	; () banked
 36262   019D92  EE20 F00E          	lfsr	2,14
 36263   019D96  5124               	movf	f_sync@fp& (0+255),w,b
 36264   019D98  26D9               	addwf	fsr2l,f,c
 36265   019D9A  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36266   019D9C  22DA               	addwfc	fsr2h,f,c
 36267   019D9E  0E7F               	movlw	127
 36268   019DA0  16DF               	andwf	indf2,f,c
 36269   019DA2                     l22413:
 36270                           
 36271                           ; BSR set to: 6
 36272                           ;../fatfs/ff.c: 4157:    tm = get_fattime();
 36273   019DA2  EC0E  F001         	call	_get_fattime	;wreg free
 36274   019DA6  C504  F626         	movff	?_get_fattime,f_sync@tm
 36275   019DAA  C505  F627         	movff	?_get_fattime+1,f_sync@tm+1
 36276   019DAE  C506  F628         	movff	?_get_fattime+2,f_sync@tm+2
 36277   019DB2  C507  F629         	movff	?_get_fattime+3,f_sync@tm+3
 36278   019DB6                     
 36279                           ;../fatfs/ff.c: 4189:    {;../fatfs/ff.c: 4190:     res = move_window(fs, fp->dir_sect);
 36280   019DB6  C62D  F61A         	movff	f_sync@fs,move_window@fs
 36281   019DBA  C62E  F61B         	movff	f_sync@fs+1,move_window@fs+1
 36282   019DBE  0106               	movlb	6	; () banked
 36283   019DC0  EE20 F01C          	lfsr	2,28
 36284   019DC4  5124               	movf	f_sync@fp& (0+255),w,b
 36285   019DC6  26D9               	addwf	fsr2l,f,c
 36286   019DC8  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36287   019DCA  22DA               	addwfc	fsr2h,f,c
 36288   019DCC  C4DE F61C          	movff	postinc2,move_window@sect
 36289   019DD0  C4DE F61D          	movff	postinc2,move_window@sect+1
 36290   019DD4  C4DE F61E          	movff	postinc2,move_window@sect+2
 36291   019DD8  C4DE F61F          	movff	postinc2,move_window@sect+3
 36292   019DDC  ECAB  F0EF         	call	_move_window	;wreg free
 36293   019DE0  0106               	movlb	6	; () banked
 36294   019DE2  6F2A               	movwf	f_sync@res& (0+255),b
 36295   019DE4                     
 36296                           ; BSR set to: 6
 36297                           ;../fatfs/ff.c: 4191:     if (res == FR_OK) {
 36298   019DE4  512A               	movf	f_sync@res& (0+255),w,b
 36299   019DE6  A4D8               	btfss	status,2,c
 36300   019DE8  EFF8  F0CE         	goto	u30501
 36301   019DEC  EFFA  F0CE         	goto	u30500
 36302   019DF0                     u30501:
 36303   019DF0  EF76  F0CF         	goto	l22433
 36304   019DF4                     u30500:
 36305   019DF4                     
 36306                           ; BSR set to: 6
 36307                           ;../fatfs/ff.c: 4192:      dir = fp->dir_ptr;
 36308   019DF4  EE20 F020          	lfsr	2,32
 36309   019DF8  5124               	movf	f_sync@fp& (0+255),w,b
 36310   019DFA  26D9               	addwf	fsr2l,f,c
 36311   019DFC  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36312   019DFE  22DA               	addwfc	fsr2h,f,c
 36313   019E00  C4DE F62B          	movff	postinc2,f_sync@dir
 36314   019E04  C4DD F62C          	movff	postdec2,f_sync@dir+1
 36315                           
 36316                           ;../fatfs/ff.c: 4193:      dir[11] |= 0x20;
 36317   019E08  EE20 F00B          	lfsr	2,11
 36318   019E0C  512B               	movf	f_sync@dir& (0+255),w,b
 36319   019E0E  26D9               	addwf	fsr2l,f,c
 36320   019E10  512C               	movf	(f_sync@dir+1)& (0+255),w,b
 36321   019E12  22DA               	addwfc	fsr2h,f,c
 36322   019E14  0E00               	movlw	0
 36323   019E16  8ADB               	bsf	plusw2,5,c
 36324   019E18                     
 36325                           ; BSR set to: 6
 36326                           ;../fatfs/ff.c: 4194:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 36327   019E18  C624  F4D9         	movff	f_sync@fp,fsr2l
 36328   019E1C  C625  F4DA         	movff	f_sync@fp+1,fsr2h
 36329   019E20  C4DE F508          	movff	postinc2,st_clust@fs
 36330   019E24  C4DD F509          	movff	postdec2,st_clust@fs+1
 36331   019E28  C62B  F50A         	movff	f_sync@dir,st_clust@dir
 36332   019E2C  C62C  F50B         	movff	f_sync@dir+1,st_clust@dir+1
 36333   019E30  EE20 F006          	lfsr	2,6
 36334   019E34  5124               	movf	f_sync@fp& (0+255),w,b
 36335   019E36  26D9               	addwf	fsr2l,f,c
 36336   019E38  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36337   019E3A  22DA               	addwfc	fsr2h,f,c
 36338   019E3C  C4DE F50C          	movff	postinc2,st_clust@cl
 36339   019E40  C4DE F50D          	movff	postinc2,st_clust@cl+1
 36340   019E44  C4DE F50E          	movff	postinc2,st_clust@cl+2
 36341   019E48  C4DE F50F          	movff	postinc2,st_clust@cl+3
 36342   019E4C  EC28  F0FD         	call	_st_clust	;wreg free
 36343   019E50                     
 36344                           ;../fatfs/ff.c: 4195:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 36345   019E50  0E1C               	movlw	28
 36346   019E52  0106               	movlb	6	; () banked
 36347   019E54  252B               	addwf	f_sync@dir& (0+255),w,b
 36348   019E56  6E04               	movwf	st_dword@ptr^(0+1280),c
 36349   019E58  0E00               	movlw	0
 36350   019E5A  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36351   019E5C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36352   019E5E  EE20 F00A          	lfsr	2,10
 36353   019E62  5124               	movf	f_sync@fp& (0+255),w,b
 36354   019E64  26D9               	addwf	fsr2l,f,c
 36355   019E66  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36356   019E68  22DA               	addwfc	fsr2h,f,c
 36357   019E6A  C4DE F506          	movff	postinc2,st_dword@val
 36358   019E6E  C4DE F507          	movff	postinc2,st_dword@val+1
 36359   019E72  C4DE F508          	movff	postinc2,st_dword@val+2
 36360   019E76  C4DE F509          	movff	postinc2,st_dword@val+3
 36361   019E7A  ECDD  F0FA         	call	_st_dword	;wreg free
 36362   019E7E                     
 36363                           ;../fatfs/ff.c: 4196:      st_dword(dir + 22, tm);
 36364   019E7E  0E16               	movlw	22
 36365   019E80  0106               	movlb	6	; () banked
 36366   019E82  252B               	addwf	f_sync@dir& (0+255),w,b
 36367   019E84  6E04               	movwf	st_dword@ptr^(0+1280),c
 36368   019E86  0E00               	movlw	0
 36369   019E88  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36370   019E8A  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36371   019E8C  C626  F506         	movff	f_sync@tm,st_dword@val
 36372   019E90  C627  F507         	movff	f_sync@tm+1,st_dword@val+1
 36373   019E94  C628  F508         	movff	f_sync@tm+2,st_dword@val+2
 36374   019E98  C629  F509         	movff	f_sync@tm+3,st_dword@val+3
 36375   019E9C  ECDD  F0FA         	call	_st_dword	;wreg free
 36376   019EA0                     
 36377                           ;../fatfs/ff.c: 4197:      st_word(dir + 18, 0);
 36378   019EA0  0E12               	movlw	18
 36379   019EA2  0106               	movlb	6	; () banked
 36380   019EA4  252B               	addwf	f_sync@dir& (0+255),w,b
 36381   019EA6  6E04               	movwf	st_word@ptr^(0+1280),c
 36382   019EA8  0E00               	movlw	0
 36383   019EAA  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 36384   019EAC  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36385   019EAE  0E00               	movlw	0
 36386   019EB0  6E07               	movwf	(st_word@val+1)^(0+1280),c
 36387   019EB2  0E00               	movlw	0
 36388   019EB4  6E06               	movwf	st_word@val^(0+1280),c
 36389   019EB6  ECC6  F0FF         	call	_st_word	;wreg free
 36390                           
 36391                           ;../fatfs/ff.c: 4198:      fs->wflag = 1;
 36392   019EBA  0106               	movlb	6	; () banked
 36393   019EBC  EE20 F004          	lfsr	2,4
 36394   019EC0  512D               	movf	f_sync@fs& (0+255),w,b
 36395   019EC2  26D9               	addwf	fsr2l,f,c
 36396   019EC4  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 36397   019EC6  22DA               	addwfc	fsr2h,f,c
 36398   019EC8  0E01               	movlw	1
 36399   019ECA  6EDF               	movwf	indf2,c
 36400   019ECC                     
 36401                           ; BSR set to: 6
 36402                           ;../fatfs/ff.c: 4199:      res = sync_fs(fs);
 36403   019ECC  C62D  F61A         	movff	f_sync@fs,sync_fs@fs
 36404   019ED0  C62E  F61B         	movff	f_sync@fs+1,sync_fs@fs+1
 36405   019ED4  EC78  F0CF         	call	_sync_fs	;wreg free
 36406   019ED8  0106               	movlb	6	; () banked
 36407   019EDA  6F2A               	movwf	f_sync@res& (0+255),b
 36408   019EDC                     
 36409                           ; BSR set to: 6
 36410                           ;../fatfs/ff.c: 4200:      fp->flag &= (BYTE)~0x40;
 36411   019EDC  EE20 F00E          	lfsr	2,14
 36412   019EE0  5124               	movf	f_sync@fp& (0+255),w,b
 36413   019EE2  26D9               	addwf	fsr2l,f,c
 36414   019EE4  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 36415   019EE6  22DA               	addwfc	fsr2h,f,c
 36416   019EE8  0EBF               	movlw	191
 36417   019EEA  16DF               	andwf	indf2,f,c
 36418   019EEC                     l22433:
 36419                           
 36420                           ; BSR set to: 6
 36421                           ;../fatfs/ff.c: 4206:  return res;
 36422   019EEC  512A               	movf	f_sync@res& (0+255),w,b
 36423   019EEE                     l1998:
 36424   019EEE  0012               	return		;funcret
 36425   019EF0                     __end_of_f_sync:
 36426                           	callstack 0
 36427                           
 36428 ;; *************** function _sync_fs *****************
 36429 ;; Defined at:
 36430 ;;		line 1109 in file "../fatfs/ff.c"
 36431 ;; Parameters:    Size  Location     Type
 36432 ;;  fs              2   26[BANK6 ] PTR struct .
 36433 ;;		 -> fs(564), NULL(0), 
 36434 ;; Auto vars:     Size  Location     Type
 36435 ;;  res             1  157[BANK5 ] enum E597
 36436 ;; Return value:  Size  Location     Type
 36437 ;;                  1    wreg      enum E597
 36438 ;; Registers used:
 36439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36440 ;; Tracked objects:
 36441 ;;		On entry : 0/0
 36442 ;;		On exit  : 0/0
 36443 ;;		Unchanged: 0/0
 36444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36445 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36447 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36448 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36449 ;;Total ram usage:       11 bytes
 36450 ;; Hardware stack levels used: 1
 36451 ;; Hardware stack levels required when called: 13
 36452 ;; This function calls:
 36453 ;;		_disk_ioctl
 36454 ;;		_disk_write
 36455 ;;		_memset
 36456 ;;		_st_dword
 36457 ;;		_st_word
 36458 ;;		_sync_window
 36459 ;; This function is called by:
 36460 ;;		_f_sync
 36461 ;;		_f_unlink
 36462 ;;		_f_mkdir
 36463 ;;		_f_rename
 36464 ;; This function uses a non-reentrant model
 36465 ;;
 36466                           
 36467                           	psect	text94
 36468   019EF0                     __ptext94:
 36469                           	callstack 0
 36470   019EF0                     _sync_fs:
 36471                           	callstack 107
 36472   019EF0                     
 36473                           ;../fatfs/ff.c: 1110:  FATFS* fs;../fatfs/ff.c: 1112: {;../fatfs/ff.c: 1113:  FRESULT re
      +                          s;;../fatfs/ff.c: 1116:  res = sync_window(fs);
 36474   019EF0  C61A  F608         	movff	sync_fs@fs,sync_window@fs
 36475   019EF4  C61B  F609         	movff	sync_fs@fs+1,sync_window@fs+1
 36476   019EF8  EC26  F0DB         	call	_sync_window	;wreg free
 36477   019EFC  0105               	movlb	5	; () banked
 36478   019EFE  6FFD               	movwf	sync_fs@res& (0+255),b
 36479   019F00                     
 36480                           ; BSR set to: 5
 36481                           ;../fatfs/ff.c: 1117:  if (res == FR_OK) {
 36482   019F00  51FD               	movf	sync_fs@res& (0+255),w,b
 36483   019F02  A4D8               	btfss	status,2,c
 36484   019F04  EF86  F0CF         	goto	u29541
 36485   019F08  EF88  F0CF         	goto	u29540
 36486   019F0C                     u29541:
 36487   019F0C  EF7F  F0D0         	goto	l1482
 36488   019F10                     u29540:
 36489   019F10                     
 36490                           ; BSR set to: 5
 36491                           ;../fatfs/ff.c: 1118:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 36492   019F10  C61A  F4D9         	movff	sync_fs@fs,fsr2l
 36493   019F14  C61B  F4DA         	movff	sync_fs@fs+1,fsr2h
 36494   019F18  0E03               	movlw	3
 36495   019F1A  18DE               	xorwf	postinc2,w,c
 36496   019F1C  A4D8               	btfss	status,2,c
 36497   019F1E  EF93  F0CF         	goto	u29551
 36498   019F22  EF95  F0CF         	goto	u29550
 36499   019F26                     u29551:
 36500   019F26  EF63  F0D0         	goto	l21959
 36501   019F2A                     u29550:
 36502   019F2A                     
 36503                           ; BSR set to: 5
 36504   019F2A  0106               	movlb	6	; () banked
 36505   019F2C  EE20 F005          	lfsr	2,5
 36506   019F30  511A               	movf	sync_fs@fs& (0+255),w,b
 36507   019F32  26D9               	addwf	fsr2l,f,c
 36508   019F34  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36509   019F36  22DA               	addwfc	fsr2h,f,c
 36510   019F38  04DE               	decf	postinc2,w,c
 36511   019F3A  A4D8               	btfss	status,2,c
 36512   019F3C  EFA2  F0CF         	goto	u29561
 36513   019F40  EFA4  F0CF         	goto	u29560
 36514   019F44                     u29561:
 36515   019F44  EF63  F0D0         	goto	l21959
 36516   019F48                     u29560:
 36517   019F48                     
 36518                           ; BSR set to: 6
 36519                           ;../fatfs/ff.c: 1120:    memset(fs->win, 0, sizeof fs->win);
 36520   019F48  0E34               	movlw	52
 36521   019F4A  251A               	addwf	sync_fs@fs& (0+255),w,b
 36522   019F4C  6E04               	movwf	memset@dest^(0+1280),c
 36523   019F4E  0E00               	movlw	0
 36524   019F50  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36525   019F52  6E05               	movwf	(memset@dest+1)^(0+1280),c
 36526   019F54  0E00               	movlw	0
 36527   019F56  6E07               	movwf	(memset@c+1)^(0+1280),c
 36528   019F58  0E00               	movlw	0
 36529   019F5A  6E06               	movwf	memset@c^(0+1280),c
 36530   019F5C  0E02               	movlw	2
 36531   019F5E  6E09               	movwf	(memset@n+1)^(0+1280),c
 36532   019F60  0E00               	movlw	0
 36533   019F62  6E08               	movwf	memset@n^(0+1280),c
 36534   019F64  EC14  F0FF         	call	_memset	;wreg free
 36535                           
 36536                           ;../fatfs/ff.c: 1121:    st_word(fs->win + 510, 0xAA55);
 36537   019F68  0E32               	movlw	50
 36538   019F6A  0106               	movlb	6	; () banked
 36539   019F6C  251A               	addwf	sync_fs@fs& (0+255),w,b
 36540   019F6E  6E04               	movwf	st_word@ptr^(0+1280),c
 36541   019F70  0E02               	movlw	2
 36542   019F72  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36543   019F74  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36544   019F76  0EAA               	movlw	170
 36545   019F78  6E07               	movwf	(st_word@val+1)^(0+1280),c
 36546   019F7A  0E55               	movlw	85
 36547   019F7C  6E06               	movwf	st_word@val^(0+1280),c
 36548   019F7E  ECC6  F0FF         	call	_st_word	;wreg free
 36549                           
 36550                           ;../fatfs/ff.c: 1122:    st_dword(fs->win + 0, 0x41615252);
 36551   019F82  0E34               	movlw	52
 36552   019F84  0106               	movlb	6	; () banked
 36553   019F86  251A               	addwf	sync_fs@fs& (0+255),w,b
 36554   019F88  6E04               	movwf	st_dword@ptr^(0+1280),c
 36555   019F8A  0E00               	movlw	0
 36556   019F8C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36557   019F8E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36558   019F90  0E52               	movlw	82
 36559   019F92  6E06               	movwf	st_dword@val^(0+1280),c
 36560   019F94  0E52               	movlw	82
 36561   019F96  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 36562   019F98  0E61               	movlw	97
 36563   019F9A  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 36564   019F9C  0E41               	movlw	65
 36565   019F9E  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 36566   019FA0  ECDD  F0FA         	call	_st_dword	;wreg free
 36567                           
 36568                           ;../fatfs/ff.c: 1123:    st_dword(fs->win + 484, 0x61417272);
 36569   019FA4  0E18               	movlw	24
 36570   019FA6  0106               	movlb	6	; () banked
 36571   019FA8  251A               	addwf	sync_fs@fs& (0+255),w,b
 36572   019FAA  6E04               	movwf	st_dword@ptr^(0+1280),c
 36573   019FAC  0E02               	movlw	2
 36574   019FAE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36575   019FB0  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36576   019FB2  0E72               	movlw	114
 36577   019FB4  6E06               	movwf	st_dword@val^(0+1280),c
 36578   019FB6  0E72               	movlw	114
 36579   019FB8  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 36580   019FBA  0E41               	movlw	65
 36581   019FBC  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 36582   019FBE  0E61               	movlw	97
 36583   019FC0  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 36584   019FC2  ECDD  F0FA         	call	_st_dword	;wreg free
 36585                           
 36586                           ;../fatfs/ff.c: 1124:    st_dword(fs->win + 488, fs->free_clst);
 36587   019FC6  0E1C               	movlw	28
 36588   019FC8  0106               	movlb	6	; () banked
 36589   019FCA  251A               	addwf	sync_fs@fs& (0+255),w,b
 36590   019FCC  6E04               	movwf	st_dword@ptr^(0+1280),c
 36591   019FCE  0E02               	movlw	2
 36592   019FD0  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36593   019FD2  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36594   019FD4  EE20 F010          	lfsr	2,16
 36595   019FD8  511A               	movf	sync_fs@fs& (0+255),w,b
 36596   019FDA  26D9               	addwf	fsr2l,f,c
 36597   019FDC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36598   019FDE  22DA               	addwfc	fsr2h,f,c
 36599   019FE0  C4DE F506          	movff	postinc2,st_dword@val
 36600   019FE4  C4DE F507          	movff	postinc2,st_dword@val+1
 36601   019FE8  C4DE F508          	movff	postinc2,st_dword@val+2
 36602   019FEC  C4DE F509          	movff	postinc2,st_dword@val+3
 36603   019FF0  ECDD  F0FA         	call	_st_dword	;wreg free
 36604                           
 36605                           ;../fatfs/ff.c: 1125:    st_dword(fs->win + 492, fs->last_clst);
 36606   019FF4  0E20               	movlw	32
 36607   019FF6  0106               	movlb	6	; () banked
 36608   019FF8  251A               	addwf	sync_fs@fs& (0+255),w,b
 36609   019FFA  6E04               	movwf	st_dword@ptr^(0+1280),c
 36610   019FFC  0E02               	movlw	2
 36611   019FFE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36612   01A000  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 36613   01A002  EE20 F00C          	lfsr	2,12
 36614   01A006  511A               	movf	sync_fs@fs& (0+255),w,b
 36615   01A008  26D9               	addwf	fsr2l,f,c
 36616   01A00A  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36617   01A00C  22DA               	addwfc	fsr2h,f,c
 36618   01A00E  C4DE F506          	movff	postinc2,st_dword@val
 36619   01A012  C4DE F507          	movff	postinc2,st_dword@val+1
 36620   01A016  C4DE F508          	movff	postinc2,st_dword@val+2
 36621   01A01A  C4DE F509          	movff	postinc2,st_dword@val+3
 36622   01A01E  ECDD  F0FA         	call	_st_dword	;wreg free
 36623   01A022                     
 36624                           ;../fatfs/ff.c: 1126:    fs->winsect = fs->volbase + 1;
 36625   01A022  0106               	movlb	6	; () banked
 36626   01A024  EE20 F020          	lfsr	2,32
 36627   01A028  511A               	movf	sync_fs@fs& (0+255),w,b
 36628   01A02A  26D9               	addwf	fsr2l,f,c
 36629   01A02C  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36630   01A02E  22DA               	addwfc	fsr2h,f,c
 36631   01A030  C4DE F61C          	movff	postinc2,??_sync_fs
 36632   01A034  C4DE F61D          	movff	postinc2,??_sync_fs+1
 36633   01A038  C4DE F61E          	movff	postinc2,??_sync_fs+2
 36634   01A03C  C4DE F61F          	movff	postinc2,??_sync_fs+3
 36635   01A040  0E01               	movlw	1
 36636   01A042  251C               	addwf	??_sync_fs& (0+255),w,b
 36637   01A044  6F20               	movwf	(??_sync_fs+4)& (0+255),b
 36638   01A046  0E00               	movlw	0
 36639   01A048  211D               	addwfc	(??_sync_fs+1)& (0+255),w,b
 36640   01A04A  6F21               	movwf	(??_sync_fs+5)& (0+255),b
 36641   01A04C  0E00               	movlw	0
 36642   01A04E  211E               	addwfc	(??_sync_fs+2)& (0+255),w,b
 36643   01A050  6F22               	movwf	(??_sync_fs+6)& (0+255),b
 36644   01A052  0E00               	movlw	0
 36645   01A054  211F               	addwfc	(??_sync_fs+3)& (0+255),w,b
 36646   01A056  6F23               	movwf	(??_sync_fs+7)& (0+255),b
 36647   01A058  EE20 F030          	lfsr	2,48
 36648   01A05C  511A               	movf	sync_fs@fs& (0+255),w,b
 36649   01A05E  26D9               	addwf	fsr2l,f,c
 36650   01A060  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36651   01A062  22DA               	addwfc	fsr2h,f,c
 36652   01A064  C620  F4DE         	movff	??_sync_fs+4,postinc2
 36653   01A068  C621  F4DE         	movff	??_sync_fs+5,postinc2
 36654   01A06C  C622  F4DE         	movff	??_sync_fs+6,postinc2
 36655   01A070  C623  F4DE         	movff	??_sync_fs+7,postinc2
 36656   01A074                     
 36657                           ; BSR set to: 6
 36658                           ;../fatfs/ff.c: 1127:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 36659   01A074  0E34               	movlw	52
 36660   01A076  251A               	addwf	sync_fs@fs& (0+255),w,b
 36661   01A078  6F00               	movwf	disk_write@buff& (0+255),b
 36662   01A07A  0E00               	movlw	0
 36663   01A07C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 36664   01A07E  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 36665   01A080  EE20 F030          	lfsr	2,48
 36666   01A084  511A               	movf	sync_fs@fs& (0+255),w,b
 36667   01A086  26D9               	addwf	fsr2l,f,c
 36668   01A088  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36669   01A08A  22DA               	addwfc	fsr2h,f,c
 36670   01A08C  C4DE F602          	movff	postinc2,disk_write@sector
 36671   01A090  C4DE F603          	movff	postinc2,disk_write@sector+1
 36672   01A094  C4DE F604          	movff	postinc2,disk_write@sector+2
 36673   01A098  C4DE F605          	movff	postinc2,disk_write@sector+3
 36674   01A09C  0E00               	movlw	0
 36675   01A09E  6F07               	movwf	(disk_write@count+1)& (0+255),b
 36676   01A0A0  0E01               	movlw	1
 36677   01A0A2  6F06               	movwf	disk_write@count& (0+255),b
 36678   01A0A4  EE20 F001          	lfsr	2,1
 36679   01A0A8  511A               	movf	sync_fs@fs& (0+255),w,b
 36680   01A0AA  26D9               	addwf	fsr2l,f,c
 36681   01A0AC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36682   01A0AE  22DA               	addwfc	fsr2h,f,c
 36683   01A0B0  50DF               	movf	indf2,w,c
 36684   01A0B2  EC7E  F0F3         	call	_disk_write
 36685                           
 36686                           ;../fatfs/ff.c: 1128:    fs->fsi_flag = 0;
 36687   01A0B6  0106               	movlb	6	; () banked
 36688   01A0B8  EE20 F005          	lfsr	2,5
 36689   01A0BC  511A               	movf	sync_fs@fs& (0+255),w,b
 36690   01A0BE  26D9               	addwf	fsr2l,f,c
 36691   01A0C0  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36692   01A0C2  22DA               	addwfc	fsr2h,f,c
 36693   01A0C4  6ADF               	clrf	indf2,c
 36694   01A0C6                     l21959:
 36695                           
 36696                           ;../fatfs/ff.c: 1131:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
 36697   01A0C6  0E00               	movlw	0
 36698   01A0C8  0105               	movlb	5	; () banked
 36699   01A0CA  6FBD               	movwf	disk_ioctl@cmd& (0+255),b
 36700   01A0CC  0E00               	movlw	0
 36701   01A0CE  6FBE               	movwf	disk_ioctl@buff& (0+255),b
 36702   01A0D0  0E00               	movlw	0
 36703   01A0D2  6FBF               	movwf	(disk_ioctl@buff+1)& (0+255),b
 36704   01A0D4  0106               	movlb	6	; () banked
 36705   01A0D6  EE20 F001          	lfsr	2,1
 36706   01A0DA  511A               	movf	sync_fs@fs& (0+255),w,b
 36707   01A0DC  26D9               	addwf	fsr2l,f,c
 36708   01A0DE  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 36709   01A0E0  22DA               	addwfc	fsr2h,f,c
 36710   01A0E2  50DF               	movf	indf2,w,c
 36711   01A0E4  EC7A  F0FB         	call	_disk_ioctl
 36712   01A0E8  0900               	iorlw	0
 36713   01A0EA  B4D8               	btfsc	status,2,c
 36714   01A0EC  EF7A  F0D0         	goto	u29571
 36715   01A0F0  EF7C  F0D0         	goto	u29570
 36716   01A0F4                     u29571:
 36717   01A0F4  EF7F  F0D0         	goto	l1482
 36718   01A0F8                     u29570:
 36719   01A0F8  0E01               	movlw	1
 36720   01A0FA  0105               	movlb	5	; () banked
 36721   01A0FC  6FFD               	movwf	sync_fs@res& (0+255),b
 36722   01A0FE                     l1482:
 36723                           
 36724                           ;../fatfs/ff.c: 1134:  return res;
 36725   01A0FE  0105               	movlb	5	; () banked
 36726   01A100  51FD               	movf	sync_fs@res& (0+255),w,b
 36727   01A102                     
 36728                           ; BSR set to: 5
 36729   01A102  0012               	return		;funcret
 36730   01A104                     __end_of_sync_fs:
 36731                           	callstack 0
 36732                           
 36733 ;; *************** function _memset *****************
 36734 ;; Defined at:
 36735 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
 36736 ;; Parameters:    Size  Location     Type
 36737 ;;  dest            2    3[COMRAM] PTR void 
 36738 ;;		 -> dir$fn(12), djn$fn(12), f_printf@pb(70), f_puts@pb(70), 
 36739 ;;		 -> f_putc@pb(70), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 36740 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 36741 ;;		 -> dj$fn(12), f_open@dj(40), in_fl(546), scan_files1@dir(40), 
 36742 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), NULL(0), 
 36743 ;;  c               2    5[COMRAM] int 
 36744 ;;  n               2    7[COMRAM] unsigned int 
 36745 ;; Auto vars:     Size  Location     Type
 36746 ;;  p               2    9[COMRAM] PTR unsigned char 
 36747 ;;		 -> dir$fn(12), djn$fn(12), f_printf@pb(70), f_puts@pb(70), 
 36748 ;;		 -> f_putc@pb(70), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 36749 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 36750 ;;		 -> dj$fn(12), f_open@dj(40), in_fl(546), scan_files1@dir(40), 
 36751 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), NULL(0), 
 36752 ;; Return value:  Size  Location     Type
 36753 ;;                  2    3[COMRAM] PTR void 
 36754 ;; Registers used:
 36755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36756 ;; Tracked objects:
 36757 ;;		On entry : 0/0
 36758 ;;		On exit  : 0/0
 36759 ;;		Unchanged: 0/0
 36760 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36764 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36765 ;;Total ram usage:        8 bytes
 36766 ;; Hardware stack levels used: 1
 36767 ;; Hardware stack levels required when called: 1
 36768 ;; This function calls:
 36769 ;;		Nothing
 36770 ;; This function is called by:
 36771 ;;		_sync_fs
 36772 ;;		_dir_clear
 36773 ;;		_dir_register
 36774 ;;		_create_name
 36775 ;;		_f_open
 36776 ;;		_f_mkdir
 36777 ;;		_putc_init
 36778 ;; This function uses a non-reentrant model
 36779 ;;
 36780                           
 36781                           	psect	text95
 36782   01FE28                     __ptext95:
 36783                           	callstack 0
 36784   01FE28                     _memset:
 36785                           	callstack 118
 36786   01FE28  C504  F50A         	movff	memset@dest,memset@p
 36787   01FE2C  C505  F50B         	movff	memset@dest+1,memset@p+1
 36788   01FE30  EF22  F0FF         	goto	l21299
 36789   01FE34                     l21295:
 36790   01FE34  C50A  F4D9         	movff	memset@p,fsr2l
 36791   01FE38  C50B  F4DA         	movff	memset@p+1,fsr2h
 36792   01FE3C  C506  F4DF         	movff	memset@c,indf2
 36793   01FE40  4A0A               	infsnz	memset@p^(0+1280),f,c
 36794   01FE42  2A0B               	incf	(memset@p+1)^(0+1280),f,c
 36795   01FE44                     l21299:
 36796   01FE44  0608               	decf	memset@n^(0+1280),f,c
 36797   01FE46  A0D8               	btfss	status,0,c
 36798   01FE48  0609               	decf	(memset@n+1)^(0+1280),f,c
 36799   01FE4A  2808               	incf	memset@n^(0+1280),w,c
 36800   01FE4C  E106               	bnz	u28231
 36801   01FE4E  2809               	incf	(memset@n+1)^(0+1280),w,c
 36802   01FE50  A4D8               	btfss	status,2,c
 36803   01FE52  EF2D  F0FF         	goto	u28231
 36804   01FE56  EF2F  F0FF         	goto	u28230
 36805   01FE5A                     u28231:
 36806   01FE5A  EF1A  F0FF         	goto	l21295
 36807   01FE5E                     u28230:
 36808   01FE5E  0012               	return		;funcret
 36809   01FE60                     __end_of_memset:
 36810                           	callstack 0
 36811                           
 36812 ;; *************** function _disk_ioctl *****************
 36813 ;; Defined at:
 36814 ;;		line 149 in file "../drivers/diskio.c"
 36815 ;; Parameters:    Size  Location     Type
 36816 ;;  pdrv            1    wreg     unsigned char 
 36817 ;;  cmd             1   93[BANK5 ] unsigned char 
 36818 ;;  buff            2   94[BANK5 ] PTR void 
 36819 ;;		 -> NULL(0), 
 36820 ;; Auto vars:     Size  Location     Type
 36821 ;;  pdrv            1   96[BANK5 ] unsigned char 
 36822 ;;  res             1   97[BANK5 ] enum E17312
 36823 ;; Return value:  Size  Location     Type
 36824 ;;                  1    wreg      enum E737
 36825 ;; Registers used:
 36826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36827 ;; Tracked objects:
 36828 ;;		On entry : 0/0
 36829 ;;		On exit  : 0/0
 36830 ;;		Unchanged: 0/0
 36831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36832 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36836 ;;Total ram usage:        5 bytes
 36837 ;; Hardware stack levels used: 1
 36838 ;; Hardware stack levels required when called: 9
 36839 ;; This function calls:
 36840 ;;		_printf
 36841 ;; This function is called by:
 36842 ;;		_sync_fs
 36843 ;; This function uses a non-reentrant model
 36844 ;;
 36845                           
 36846                           	psect	text96
 36847   01F6F4                     __ptext96:
 36848                           	callstack 0
 36849   01F6F4                     _disk_ioctl:
 36850                           	callstack 110
 36851                           
 36852                           ;incstack = 0
 36853                           ;disk_ioctl@pdrv stored from wreg
 36854   01F6F4  0105               	movlb	5	; () banked
 36855   01F6F6  6FC0               	movwf	disk_ioctl@pdrv& (0+255),b
 36856   01F6F8                     
 36857                           ;../drivers/diskio.c: 149: DRESULT disk_ioctl(BYTE pdrv, BYTE cmd, void* buff);../driver
      +                          s/diskio.c: 150: {;../drivers/diskio.c: 151:     DRESULT res = RES_ERROR;
 36858   01F6F8  0E01               	movlw	1
 36859   01F6FA  0105               	movlb	5	; () banked
 36860   01F6FC  6FC1               	movwf	disk_ioctl@res& (0+255),b
 36861                           
 36862                           ;../drivers/diskio.c: 154:     switch (cmd) {
 36863   01F6FE  EF92  F0FB         	goto	l21649
 36864   01F702                     l2511:
 36865                           
 36866                           ; BSR set to: 5
 36867                           ;../drivers/diskio.c: 156:         res = RES_OK;
 36868   01F702  6BC1               	clrf	disk_ioctl@res& (0+255),b
 36869                           
 36870                           ;../drivers/diskio.c: 157:         break;
 36871   01F704  EFA9  F0FB         	goto	l21653
 36872   01F708                     l2516:
 36873   01F708                     l21645:
 36874                           
 36875                           ; BSR set to: 5
 36876                           ;../drivers/diskio.c: 163:         printf("disk_ioctl: pdrv=%d, cmd=%d: Not handled.\n\r
      +                          ", pdrv, cmd);
 36877   01F708  0E73               	movlw	low STR_190
 36878   01F70A  6FAD               	movwf	printf@fmt& (0+255),b
 36879   01F70C  0EF4               	movlw	high STR_190
 36880   01F70E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 36881   01F710  C5C0  F5AF         	movff	disk_ioctl@pdrv,?_printf+2
 36882   01F714  6BB0               	clrf	(?_printf+3)& (0+255),b
 36883   01F716  C5BD  F5B1         	movff	disk_ioctl@cmd,?_printf+4
 36884   01F71A  6BB2               	clrf	(?_printf+5)& (0+255),b
 36885   01F71C  ECDA  F0FF         	call	_printf	;wreg free
 36886                           
 36887                           ;../drivers/diskio.c: 164:         break;
 36888   01F720  EFA9  F0FB         	goto	l21653
 36889   01F724                     l21649:
 36890                           
 36891                           ; BSR set to: 5
 36892   01F724  51BD               	movf	disk_ioctl@cmd& (0+255),w,b
 36893                           
 36894                           ; Switch size 1, requested type "simple"
 36895                           ; Number of cases is 5, Range of values is 0 to 4
 36896                           ; switch strategies available:
 36897                           ; Name         Instructions Cycles
 36898                           ; simple_byte           16     9 (average)
 36899                           ;	Chosen strategy is simple_byte
 36900   01F726  0A00               	xorlw	0	; case 0
 36901   01F728  B4D8               	btfsc	status,2,c
 36902   01F72A  EF81  F0FB         	goto	l2511
 36903   01F72E  0A01               	xorlw	1	; case 1
 36904   01F730  B4D8               	btfsc	status,2,c
 36905   01F732  EF84  F0FB         	goto	l2516
 36906   01F736  0A03               	xorlw	3	; case 2
 36907   01F738  B4D8               	btfsc	status,2,c
 36908   01F73A  EF84  F0FB         	goto	l21645
 36909   01F73E  0A01               	xorlw	1	; case 3
 36910   01F740  B4D8               	btfsc	status,2,c
 36911   01F742  EF84  F0FB         	goto	l21645
 36912   01F746  0A07               	xorlw	7	; case 4
 36913   01F748  B4D8               	btfsc	status,2,c
 36914   01F74A  EF84  F0FB         	goto	l21645
 36915   01F74E  EF84  F0FB         	goto	l21645
 36916   01F752                     l21653:
 36917                           
 36918                           ;../drivers/diskio.c: 168:     return res;
 36919   01F752  0105               	movlb	5	; () banked
 36920   01F754  51C1               	movf	disk_ioctl@res& (0+255),w,b
 36921   01F756                     
 36922                           ; BSR set to: 5
 36923   01F756  0012               	return		;funcret
 36924   01F758                     __end_of_disk_ioctl:
 36925                           	callstack 0
 36926                           
 36927 ;; *************** function _st_clust *****************
 36928 ;; Defined at:
 36929 ;;		line 1866 in file "../fatfs/ff.c"
 36930 ;; Parameters:    Size  Location     Type
 36931 ;;  fs              2    7[COMRAM] PTR struct .
 36932 ;;		 -> fs(564), NULL(0), 
 36933 ;;  dir             2    9[COMRAM] PTR unsigned char 
 36934 ;;		 -> fs$win(512), fs(564), NULL(0), 
 36935 ;;  cl              4   11[COMRAM] unsigned long 
 36936 ;; Auto vars:     Size  Location     Type
 36937 ;;		None
 36938 ;; Return value:  Size  Location     Type
 36939 ;;                  1    wreg      void 
 36940 ;; Registers used:
 36941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36942 ;; Tracked objects:
 36943 ;;		On entry : 0/0
 36944 ;;		On exit  : 0/0
 36945 ;;		Unchanged: 0/0
 36946 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36950 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36951 ;;Total ram usage:        9 bytes
 36952 ;; Hardware stack levels used: 1
 36953 ;; Hardware stack levels required when called: 2
 36954 ;; This function calls:
 36955 ;;		_st_word
 36956 ;; This function is called by:
 36957 ;;		_f_open
 36958 ;;		_f_sync
 36959 ;;		_f_mkdir
 36960 ;;		_f_rename
 36961 ;; This function uses a non-reentrant model
 36962 ;;
 36963                           
 36964                           	psect	text97
 36965   01FA50                     __ptext97:
 36966                           	callstack 0
 36967   01FA50                     _st_clust:
 36968                           	callstack 118
 36969   01FA50                     
 36970                           ;../fatfs/ff.c: 1867:  FATFS* fs,;../fatfs/ff.c: 1868:  BYTE* dir,;../fatfs/ff.c: 1869: 
      +                           DWORD cl;../fatfs/ff.c: 1871: {;../fatfs/ff.c: 1872:  st_word(dir + 26, (WORD)cl);
 36971   01FA50  0E1A               	movlw	26
 36972   01FA52  240A               	addwf	st_clust@dir^(0+1280),w,c
 36973   01FA54  6E04               	movwf	st_word@ptr^(0+1280),c
 36974   01FA56  0E00               	movlw	0
 36975   01FA58  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 36976   01FA5A  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 36977   01FA5C  C50C  F506         	movff	st_clust@cl,st_word@val
 36978   01FA60  C50D  F507         	movff	st_clust@cl+1,st_word@val+1
 36979   01FA64  ECC6  F0FF         	call	_st_word	;wreg free
 36980   01FA68                     
 36981                           ;../fatfs/ff.c: 1873:  if (fs->fs_type == 3) {
 36982   01FA68  C508  F4D9         	movff	st_clust@fs,fsr2l
 36983   01FA6C  C509  F4DA         	movff	st_clust@fs+1,fsr2h
 36984   01FA70  0E03               	movlw	3
 36985   01FA72  18DE               	xorwf	postinc2,w,c
 36986   01FA74  A4D8               	btfss	status,2,c
 36987   01FA76  EF3F  F0FD         	goto	u29661
 36988   01FA7A  EF41  F0FD         	goto	u29660
 36989   01FA7E                     u29661:
 36990   01FA7E  EF4D  F0FD         	goto	l1671
 36991   01FA82                     u29660:
 36992   01FA82                     
 36993                           ;../fatfs/ff.c: 1874:   st_word(dir + 20, (WORD)(cl >> 16));
 36994   01FA82  0E14               	movlw	20
 36995   01FA84  240A               	addwf	st_clust@dir^(0+1280),w,c
 36996   01FA86  6E04               	movwf	st_word@ptr^(0+1280),c
 36997   01FA88  0E00               	movlw	0
 36998   01FA8A  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 36999   01FA8C  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 37000   01FA8E  C50E  F506         	movff	st_clust@cl+2,st_word@val
 37001   01FA92  C50F  F507         	movff	st_clust@cl+3,st_word@val+1
 37002   01FA96  ECC6  F0FF         	call	_st_word	;wreg free
 37003   01FA9A                     l1671:
 37004   01FA9A  0012               	return		;funcret
 37005   01FA9C                     __end_of_st_clust:
 37006                           	callstack 0
 37007                           
 37008 ;; *************** function _get_fattime *****************
 37009 ;; Defined at:
 37010 ;;		line 47 in file "../drivers/diskio.c"
 37011 ;; Parameters:    Size  Location     Type
 37012 ;;		None
 37013 ;; Auto vars:     Size  Location     Type
 37014 ;;		None
 37015 ;; Return value:  Size  Location     Type
 37016 ;;                  4    3[COMRAM] unsigned long 
 37017 ;; Registers used:
 37018 ;;		wreg, status,2
 37019 ;; Tracked objects:
 37020 ;;		On entry : 0/0
 37021 ;;		On exit  : 0/0
 37022 ;;		Unchanged: 0/0
 37023 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37028 ;;Total ram usage:        4 bytes
 37029 ;; Hardware stack levels used: 1
 37030 ;; Hardware stack levels required when called: 1
 37031 ;; This function calls:
 37032 ;;		Nothing
 37033 ;; This function is called by:
 37034 ;;		_f_open
 37035 ;;		_f_sync
 37036 ;;		_f_mkdir
 37037 ;; This function uses a non-reentrant model
 37038 ;;
 37039                           
 37040                           	psect	text98
 37041   00021C                     __ptext98:
 37042                           	callstack 0
 37043   00021C                     _get_fattime:
 37044                           	callstack 119
 37045   00021C                     
 37046                           ;../drivers/diskio.c: 50:     return (DWORD)0 << 25 | (DWORD)1 << 21 | (DWORD)1 << 16;
 37047   00021C  0E00               	movlw	0
 37048   00021E  6E04               	movwf	?_get_fattime^(0+1280),c
 37049   000220  0E00               	movlw	0
 37050   000222  6E05               	movwf	(?_get_fattime+1)^(0+1280),c
 37051   000224  0E21               	movlw	33
 37052   000226  6E06               	movwf	(?_get_fattime+2)^(0+1280),c
 37053   000228  0E00               	movlw	0
 37054   00022A  6E07               	movwf	(?_get_fattime+3)^(0+1280),c
 37055   00022C  0012               	return		;funcret
 37056   00022E                     __end_of_get_fattime:
 37057                           	callstack 0
 37058                           
 37059 ;; *************** function _setup_drive *****************
 37060 ;; Defined at:
 37061 ;;		line 130 in file "../src/io_dos.c"
 37062 ;; Parameters:    Size  Location     Type
 37063 ;;		None
 37064 ;; Auto vars:     Size  Location     Type
 37065 ;;		None
 37066 ;; Return value:  Size  Location     Type
 37067 ;;                  2    3[COMRAM] int 
 37068 ;; Registers used:
 37069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37070 ;; Tracked objects:
 37071 ;;		On entry : 0/0
 37072 ;;		On exit  : 0/0
 37073 ;;		Unchanged: 0/0
 37074 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37079 ;;Total ram usage:        4 bytes
 37080 ;; Hardware stack levels used: 1
 37081 ;; Hardware stack levels required when called: 1
 37082 ;; This function calls:
 37083 ;;		Nothing
 37084 ;; This function is called by:
 37085 ;;		_bus_master_operation
 37086 ;; This function uses a non-reentrant model
 37087 ;;
 37088                           
 37089                           	psect	text99
 37090   01F460                     __ptext99:
 37091                           	callstack 0
 37092   01F460                     _setup_drive:
 37093                           	callstack 121
 37094   01F460                     
 37095                           ;../src/io_dos.c: 131:  req_tbl.CBI_CHR = 0;
 37096   01F460  0107               	movlb	7	; () banked
 37097   01F462  6BD1               	clrf	(_req_tbl+3)& (0+255),b
 37098   01F464                     
 37099                           ; BSR set to: 7
 37100                           ;../src/io_dos.c: 132:  if ( req_tbl.disk_drive >= 16 ) return( -1 );
 37101   01F464  0E0F               	movlw	15
 37102   01F466  65D2               	cpfsgt	(_req_tbl+4)& (0+255),b
 37103   01F468  EF38  F0FA         	goto	u32841
 37104   01F46C  EF3A  F0FA         	goto	u32840
 37105   01F470                     u32841:
 37106   01F470  EF3E  F0FA         	goto	l23769
 37107   01F474                     u32840:
 37108   01F474                     l23767:
 37109                           
 37110                           ; BSR set to: 7
 37111   01F474  6804               	setf	?_setup_drive^(0+1280),c
 37112   01F476  6805               	setf	(?_setup_drive+1)^(0+1280),c
 37113   01F478  EF6A  F0FA         	goto	l827
 37114   01F47C                     l23769:
 37115                           
 37116                           ; BSR set to: 7
 37117                           ;../src/io_dos.c: 133:  if ( cpm_drives[req_tbl.disk_drive].sectors == 0 ) return( -1 );
 37118   01F47C  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37119   01F47E  0D04               	mullw	4
 37120   01F480  0E4B               	movlw	low _cpm_drives
 37121   01F482  24F3               	addwf	243,w,c
 37122   01F484  6ED9               	movwf	fsr2l,c
 37123   01F486  0E09               	movlw	high _cpm_drives
 37124   01F488  20F4               	addwfc	prodh,w,c
 37125   01F48A  6EDA               	movwf	fsr2h,c
 37126   01F48C  50DE               	movf	postinc2,w,c
 37127   01F48E  10DE               	iorwf	postinc2,w,c
 37128   01F490  A4D8               	btfss	status,2,c
 37129   01F492  EF4D  F0FA         	goto	u32851
 37130   01F496  EF4F  F0FA         	goto	u32850
 37131   01F49A                     u32851:
 37132   01F49A  EF51  F0FA         	goto	l23773
 37133   01F49E                     u32850:
 37134   01F49E  EF3A  F0FA         	goto	l23767
 37135   01F4A2                     l23773:
 37136                           
 37137                           ; BSR set to: 7
 37138                           ;../src/io_dos.c: 134:  if ( req_tbl.disk_sector > cpm_drives[req_tbl.disk_drive].sector
      +                          s ) return( -1 );
 37139   01F4A2  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37140   01F4A4  0D04               	mullw	4
 37141   01F4A6  0E4B               	movlw	low _cpm_drives
 37142   01F4A8  24F3               	addwf	243,w,c
 37143   01F4AA  6ED9               	movwf	fsr2l,c
 37144   01F4AC  0E09               	movlw	high _cpm_drives
 37145   01F4AE  20F4               	addwfc	prodh,w,c
 37146   01F4B0  6EDA               	movwf	fsr2h,c
 37147   01F4B2  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 37148   01F4B4  5CDE               	subwf	postinc2,w,c
 37149   01F4B6  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 37150   01F4B8  58DE               	subwfb	postinc2,w,c
 37151   01F4BA  B0D8               	btfsc	status,0,c
 37152   01F4BC  EF62  F0FA         	goto	u32861
 37153   01F4C0  EF64  F0FA         	goto	u32860
 37154   01F4C4                     u32861:
 37155   01F4C4  EF66  F0FA         	goto	l23777
 37156   01F4C8                     u32860:
 37157   01F4C8  EF3A  F0FA         	goto	l23767
 37158   01F4CC                     l23777:
 37159                           
 37160                           ; BSR set to: 7
 37161                           ;../src/io_dos.c: 135:  return( 0 );
 37162   01F4CC  0E00               	movlw	0
 37163   01F4CE  6E05               	movwf	(?_setup_drive+1)^(0+1280),c
 37164   01F4D0  0E00               	movlw	0
 37165   01F4D2  6E04               	movwf	?_setup_drive^(0+1280),c
 37166   01F4D4                     l827:
 37167                           
 37168                           ; BSR set to: 7
 37169   01F4D4  0012               	return		;funcret
 37170   01F4D6                     __end_of_setup_drive:
 37171                           	callstack 0
 37172                           
 37173 ;; *************** function _read_sector *****************
 37174 ;; Defined at:
 37175 ;;		line 102 in file "../src/io_dos.c"
 37176 ;; Parameters:    Size  Location     Type
 37177 ;;		None
 37178 ;; Auto vars:     Size  Location     Type
 37179 ;;  n               2  162[BANK6 ] unsigned int 
 37180 ;;  filep           2  159[BANK6 ] PTR struct .
 37181 ;;  fres            1  161[BANK6 ] enum E16851
 37182 ;; Return value:  Size  Location     Type
 37183 ;;                  2  154[BANK6 ] int 
 37184 ;; Registers used:
 37185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37186 ;; Tracked objects:
 37187 ;;		On entry : 0/0
 37188 ;;		On exit  : 0/0
 37189 ;;		Unchanged: 0/0
 37190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37191 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37192 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37193 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37194 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37195 ;;Total ram usage:       10 bytes
 37196 ;; Hardware stack levels used: 1
 37197 ;; Hardware stack levels required when called: 18
 37198 ;; This function calls:
 37199 ;;		_f_read
 37200 ;;		_printf
 37201 ;;		_seek_disk
 37202 ;;		_util_hexdump_sum
 37203 ;;		_write_sram
 37204 ;; This function is called by:
 37205 ;;		_bus_master_operation
 37206 ;; This function uses a non-reentrant model
 37207 ;;
 37208                           
 37209                           	psect	text100
 37210   01C568                     __ptext100:
 37211                           	callstack 0
 37212   01C568                     _read_sector:
 37213                           	callstack 104
 37214   01C568                     
 37215                           ;../src/io_dos.c: 103:  unsigned int n;;../src/io_dos.c: 104:  FRESULT fres;;../src/io_d
      +                          os.c: 105:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 37216   01C568  0107               	movlb	7	; () banked
 37217   01C56A  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 37218   01C56C  0D04               	mullw	4
 37219   01C56E  0E4D               	movlw	low (_cpm_drives+2)
 37220   01C570  24F3               	addwf	243,w,c
 37221   01C572  6ED9               	movwf	fsr2l,c
 37222   01C574  0E09               	movlw	high (_cpm_drives+2)
 37223   01C576  20F4               	addwfc	prodh,w,c
 37224   01C578  6EDA               	movwf	fsr2h,c
 37225   01C57A  C4DE F69F          	movff	postinc2,read_sector@filep
 37226   01C57E  C4DD F6A0          	movff	postdec2,read_sector@filep+1
 37227   01C582                     
 37228                           ; BSR set to: 7
 37229                           ;../src/io_dos.c: 107:  if (seek_disk()) return(-1);
 37230   01C582  ECF4  F0E5         	call	_seek_disk	;wreg free
 37231   01C586  0106               	movlb	6	; () banked
 37232   01C588  518B               	movf	?_seek_disk& (0+255),w,b
 37233   01C58A  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 37234   01C58C  B4D8               	btfsc	status,2,c
 37235   01C58E  EFCB  F0E2         	goto	u32771
 37236   01C592  EFCD  F0E2         	goto	u32770
 37237   01C596                     u32771:
 37238   01C596  EFD2  F0E2         	goto	l23737
 37239   01C59A                     u32770:
 37240   01C59A                     l23735:
 37241   01C59A  0106               	movlb	6	; () banked
 37242   01C59C  699A               	setf	?_read_sector& (0+255),b
 37243   01C59E  699B               	setf	(?_read_sector+1)& (0+255),b
 37244   01C5A0  EF62  F0E3         	goto	l817
 37245   01C5A4                     l23737:
 37246                           
 37247                           ; BSR set to: 6
 37248                           ;../src/io_dos.c: 110:  if ((fres = f_read(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 37249   01C5A4  C69F  F63E         	movff	read_sector@filep,f_read@fp
 37250   01C5A8  C6A0  F63F         	movff	read_sector@filep+1,f_read@fp+1
 37251   01C5AC  0E00               	movlw	low _disk_buf
 37252   01C5AE  6F40               	movwf	f_read@buff& (0+255),b
 37253   01C5B0  0E0A               	movlw	high _disk_buf
 37254   01C5B2  6F41               	movwf	(f_read@buff+1)& (0+255),b
 37255   01C5B4  0E00               	movlw	0
 37256   01C5B6  6F43               	movwf	(f_read@btr+1)& (0+255),b
 37257   01C5B8  0E80               	movlw	128
 37258   01C5BA  6F42               	movwf	f_read@btr& (0+255),b
 37259   01C5BC  0EA2               	movlw	low read_sector@n
 37260   01C5BE  6F44               	movwf	f_read@br& (0+255),b
 37261   01C5C0  0E06               	movlw	high read_sector@n
 37262   01C5C2  6F45               	movwf	(f_read@br+1)& (0+255),b
 37263   01C5C4  EC9B  F096         	call	_f_read	;wreg free
 37264   01C5C8  0106               	movlb	6	; () banked
 37265   01C5CA  6FA1               	movwf	read_sector@fres& (0+255),b
 37266   01C5CC  51A1               	movf	read_sector@fres& (0+255),w,b
 37267   01C5CE  A4D8               	btfss	status,2,c
 37268   01C5D0  EFEC  F0E2         	goto	u32781
 37269   01C5D4  EFEE  F0E2         	goto	u32780
 37270   01C5D8                     u32781:
 37271   01C5D8  EFF8  F0E2         	goto	l23741
 37272   01C5DC                     u32780:
 37273   01C5DC                     
 37274                           ; BSR set to: 6
 37275   01C5DC  0E80               	movlw	128
 37276   01C5DE  19A2               	xorwf	read_sector@n& (0+255),w,b
 37277   01C5E0  11A3               	iorwf	(read_sector@n+1)& (0+255),w,b
 37278   01C5E2  B4D8               	btfsc	status,2,c
 37279   01C5E4  EFF6  F0E2         	goto	u32791
 37280   01C5E8  EFF8  F0E2         	goto	u32790
 37281   01C5EC                     u32791:
 37282   01C5EC  EF08  F0E3         	goto	l23749
 37283   01C5F0                     u32790:
 37284   01C5F0                     l23741:
 37285                           
 37286                           ; BSR set to: 6
 37287                           ;../src/io_dos.c: 111:   printf("f_read(): ERROR res=%d, n=%d\n\r", fres, n);
 37288   01C5F0  0ED5               	movlw	low STR_38
 37289   01C5F2  0105               	movlb	5	; () banked
 37290   01C5F4  6FAD               	movwf	printf@fmt& (0+255),b
 37291   01C5F6  0EF8               	movlw	high STR_38
 37292   01C5F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37293   01C5FA  C6A1  F5AF         	movff	read_sector@fres,?_printf+2
 37294   01C5FE  6BB0               	clrf	(?_printf+3)& (0+255),b
 37295   01C600  C6A2  F5B1         	movff	read_sector@n,?_printf+4
 37296   01C604  C6A3  F5B2         	movff	read_sector@n+1,?_printf+5
 37297   01C608  ECDA  F0FF         	call	_printf	;wreg free
 37298   01C60C  EFCD  F0E2         	goto	l23735
 37299   01C610                     l23749:
 37300                           
 37301                           ; BSR set to: 6
 37302   01C610  0108               	movlb	8	; () banked
 37303   01C612  5117               	movf	(_debug+1)& (0+255),w,b
 37304   01C614  B4D8               	btfsc	status,2,c
 37305   01C616  EF0F  F0E3         	goto	u32801
 37306   01C61A  EF11  F0E3         	goto	u32800
 37307   01C61E                     u32801:
 37308   01C61E  EF4B  F0E3         	goto	l23757
 37309   01C622                     u32800:
 37310   01C622                     
 37311                           ; BSR set to: 8
 37312   01C622  5119               	movf	(_debug+3)& (0+255),w,b
 37313   01C624  B4D8               	btfsc	status,2,c
 37314   01C626  EF17  F0E3         	goto	u32811
 37315   01C62A  EF19  F0E3         	goto	u32810
 37316   01C62E                     u32811:
 37317   01C62E  EF4B  F0E3         	goto	l23757
 37318   01C632                     u32810:
 37319   01C632                     
 37320                           ; BSR set to: 8
 37321   01C632  C7D2  F69C         	movff	_req_tbl+4,??_read_sector
 37322   01C636  0E01               	movlw	1
 37323   01C638  0106               	movlb	6	; () banked
 37324   01C63A  6F9D               	movwf	(??_read_sector+1)& (0+255),b
 37325   01C63C  0E00               	movlw	0
 37326   01C63E  6F9E               	movwf	(??_read_sector+2)& (0+255),b
 37327   01C640  2B9C               	incf	??_read_sector& (0+255),f,b
 37328   01C642  EF26  F0E3         	goto	u32824
 37329   01C646                     u32825:
 37330   01C646  90D8               	bcf	status,0,c
 37331   01C648  379D               	rlcf	(??_read_sector+1)& (0+255),f,b
 37332   01C64A  379E               	rlcf	(??_read_sector+2)& (0+255),f,b
 37333   01C64C                     u32824:
 37334   01C64C  2F9C               	decfsz	??_read_sector& (0+255),f,b
 37335   01C64E  EF23  F0E3         	goto	u32825
 37336   01C652  0108               	movlb	8	; () banked
 37337   01C654  511A               	movf	(_debug+4)& (0+255),w,b
 37338   01C656  0106               	movlb	6	; () banked
 37339   01C658  179D               	andwf	(??_read_sector+1)& (0+255),f,b
 37340   01C65A  0108               	movlb	8	; () banked
 37341   01C65C  511B               	movf	(_debug+5)& (0+255),w,b
 37342   01C65E  0106               	movlb	6	; () banked
 37343   01C660  179E               	andwf	(??_read_sector+2)& (0+255),f,b
 37344   01C662  519D               	movf	(??_read_sector+1)& (0+255),w,b
 37345   01C664  119E               	iorwf	(??_read_sector+2)& (0+255),w,b
 37346   01C666  A4D8               	btfss	status,2,c
 37347   01C668  EF38  F0E3         	goto	u32831
 37348   01C66C  EF3A  F0E3         	goto	u32830
 37349   01C670                     u32831:
 37350   01C670  EF4B  F0E3         	goto	l23757
 37351   01C674                     u32830:
 37352   01C674                     
 37353                           ; BSR set to: 6
 37354                           ;../src/io_dos.c: 115:   util_hexdump_sum("buf: ", disk_buf, 128);
 37355   01C674  0E9D               	movlw	low STR_35
 37356   01C676  0105               	movlb	5	; () banked
 37357   01C678  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 37358   01C67A  0EFF               	movlw	high STR_35
 37359   01C67C  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 37360   01C67E  0E00               	movlw	low _disk_buf
 37361   01C680  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 37362   01C682  0E0A               	movlw	high _disk_buf
 37363   01C684  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 37364   01C686  0E00               	movlw	0
 37365   01C688  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 37366   01C68A  0E80               	movlw	128
 37367   01C68C  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 37368   01C68E  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 37369                           
 37370                           ;../src/io_dos.c: 116:  }
 37371   01C692  EF5D  F0E3         	goto	l23759
 37372   01C696                     l23757:
 37373                           
 37374                           ;../src/io_dos.c: 119:   write_sram(req_tbl.data_adr, disk_buf, 128);
 37375   01C696  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 37376   01C69A  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 37377   01C69E  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 37378   01C6A2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 37379   01C6A6  0E00               	movlw	low _disk_buf
 37380   01C6A8  6E08               	movwf	write_sram@buf^(0+1280),c
 37381   01C6AA  0E0A               	movlw	high _disk_buf
 37382   01C6AC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 37383   01C6AE  0E00               	movlw	0
 37384   01C6B0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 37385   01C6B2  0E80               	movlw	128
 37386   01C6B4  6E0A               	movwf	write_sram@len^(0+1280),c
 37387   01C6B6  EC9F  F0E8         	call	_write_sram	;wreg free
 37388   01C6BA                     l23759:
 37389                           
 37390                           ;../src/io_dos.c: 127:  return(0);
 37391   01C6BA  0E00               	movlw	0
 37392   01C6BC  0106               	movlb	6	; () banked
 37393   01C6BE  6F9B               	movwf	(?_read_sector+1)& (0+255),b
 37394   01C6C0  0E00               	movlw	0
 37395   01C6C2  6F9A               	movwf	?_read_sector& (0+255),b
 37396   01C6C4                     l817:
 37397                           
 37398                           ; BSR set to: 6
 37399   01C6C4  0012               	return		;funcret
 37400   01C6C6                     __end_of_read_sector:
 37401                           	callstack 0
 37402                           
 37403 ;; *************** function _write_sram *****************
 37404 ;; Defined at:
 37405 ;;		line 337 in file "../src/boards/w65_cmn.c"
 37406 ;; Parameters:    Size  Location     Type
 37407 ;;  addr            4    3[COMRAM] unsigned long 
 37408 ;;  buf             2    7[COMRAM] PTR unsigned char 
 37409 ;;		 -> mon_prog@sw(1), binv(42), disk_buf(128), req_tbl(13), 
 37410 ;;		 -> tmp_buf(512), rom(16), cpu_flg(1), fh(32), 
 37411 ;;  len             2    9[COMRAM] unsigned int 
 37412 ;; Auto vars:     Size  Location     Type
 37413 ;;  ab              4   15[COMRAM] struct address_bus_u
 37414 ;;  i               2   13[COMRAM] unsigned int 
 37415 ;; Return value:  Size  Location     Type
 37416 ;;                  1    wreg      void 
 37417 ;; Registers used:
 37418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 37419 ;; Tracked objects:
 37420 ;;		On entry : 0/0
 37421 ;;		On exit  : 0/0
 37422 ;;		Unchanged: 0/0
 37423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37427 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37428 ;;Total ram usage:       16 bytes
 37429 ;; Hardware stack levels used: 1
 37430 ;; Hardware stack levels required when called: 1
 37431 ;; This function calls:
 37432 ;;		Nothing
 37433 ;; This function is called by:
 37434 ;;		_reset_cpu
 37435 ;;		_read_sector
 37436 ;;		_unimon_console
 37437 ;;		_bus_master_operation
 37438 ;;		_mem_init
 37439 ;;		_setup_monitor
 37440 ;;		_load_program
 37441 ;;		_boot_file
 37442 ;;		_wstart_prog
 37443 ;;		_restart_prog
 37444 ;;		_mon_prog
 37445 ;; This function uses a non-reentrant model
 37446 ;;
 37447                           
 37448                           	psect	text101
 37449   01D13E                     __ptext101:
 37450                           	callstack 0
 37451   01D13E                     _write_sram:
 37452                           	callstack 124
 37453   01D13E                     
 37454                           ;../src/boards/w65_cmn.c: 337: void write_sram(uint32_t addr, uint8_t *buf, unsigned int
      +                           len);../src/boards/w65_cmn.c: 338: {;../src/boards/w65_cmn.c: 339:     union address_bu
      +                          s_u ab;;../src/boards/w65_cmn.c: 340:     unsigned int i;;../src/boards/w65_cmn.c: 342: 
      +                           ab.w = addr;
 37455   01D13E  C504  F510         	movff	write_sram@addr,write_sram@ab
 37456   01D142  C505  F511         	movff	write_sram@addr+1,write_sram@ab+1
 37457   01D146  C506  F512         	movff	write_sram@addr+2,write_sram@ab+2
 37458   01D14A  C507  F513         	movff	write_sram@addr+3,write_sram@ab+3
 37459   01D14E                     
 37460                           ;../src/boards/w65_cmn.c: 343:  i = 0;
 37461   01D14E  0E00               	movlw	0
 37462   01D150  6E0F               	movwf	(write_sram@i+1)^(0+1280),c
 37463   01D152  0E00               	movlw	0
 37464   01D154  6E0E               	movwf	write_sram@i^(0+1280),c
 37465   01D156                     
 37466                           ;../src/boards/w65_cmn.c: 345:  TRISB = 0x00;
 37467   01D156  6AC7               	clrf	199,c	;volatile
 37468                           
 37469                           ;../src/boards/w65_cmn.c: 346:  if (cpu_flg) {
 37470   01D158  0107               	movlb	7	; () banked
 37471   01D15A  51E5               	movf	_cpu_flg& (0+255),w,b
 37472   01D15C  B4D8               	btfsc	status,2,c
 37473   01D15E  EFB3  F0E8         	goto	u32131
 37474   01D162  EFB5  F0E8         	goto	u32130
 37475   01D166                     u32131:
 37476   01D166  EF14  F0E9         	goto	l23351
 37477   01D16A                     u32130:
 37478   01D16A  EFE1  F0E8         	goto	l23341
 37479   01D16E                     l361:
 37480                           
 37481                           ;../src/boards/w65_cmn.c: 349:       LATC = ab.ll;
 37482   01D16E  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 37483                           
 37484                           ;../src/boards/w65_cmn.c: 350:    LATD = ab.lh;
 37485   01D172  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 37486                           
 37487                           ;../src/boards/w65_cmn.c: 352:       LATB = ab.hl;
 37488   01D176  C512  F4BF         	movff	write_sram@ab+2,1215	;volatile
 37489                           
 37490                           ;../src/boards/w65_cmn.c: 353:    LATA1 = 1;
 37491   01D17A  82BE               	bsf	1214,1,c	;volatile
 37492                           
 37493                           ;../src/boards/w65_cmn.c: 354:    LATA1 = 0;
 37494   01D17C  92BE               	bcf	1214,1,c	;volatile
 37495                           
 37496                           ;../src/boards/w65_cmn.c: 356:          LATA4 = 0;
 37497   01D17E  98BE               	bcf	1214,4,c	;volatile
 37498   01D180                     
 37499                           ;../src/boards/w65_cmn.c: 357:          LATB = ((uint8_t*)buf)[i];
 37500   01D180  500E               	movf	write_sram@i^(0+1280),w,c
 37501   01D182  2408               	addwf	write_sram@buf^(0+1280),w,c
 37502   01D184  6E0C               	movwf	??_write_sram^(0+1280),c
 37503   01D186  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 37504   01D188  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 37505   01D18A  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 37506   01D18C  C50C  F4F6         	movff	??_write_sram,tblptrl
 37507   01D190  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 37508   01D194  0E00               	movlw	low (__mediumconst shr (0+16))
 37509   01D196  6EF8               	movwf	tblptru,c
 37510   01D198  0E25               	movlw	(high __ramtop+-1)
 37511   01D19A  64F7               	cpfsgt	tblptrh,c
 37512   01D19C  D003               	bra	u32147
 37513   01D19E  0008               	tblrd		*
 37514   01D1A0  50F5               	movf	tablat,w,c
 37515   01D1A2  D005               	bra	u32140
 37516   01D1A4                     u32147:
 37517   01D1A4  C4F6 F4E9          	movff	tblptrl,fsr0l
 37518   01D1A8  C4F7 F4EA          	movff	tblptrh,fsr0h
 37519   01D1AC  50EF               	movf	indf0,w,c
 37520   01D1AE                     u32140:
 37521   01D1AE  6EBF               	movwf	191,c	;volatile
 37522   01D1B0                     
 37523                           ;../src/boards/w65_cmn.c: 358:          LATA4 = 1;
 37524   01D1B0  88BE               	bsf	1214,4,c	;volatile
 37525   01D1B2                     
 37526                           ;../src/boards/w65_cmn.c: 360:    i++;
 37527   01D1B2  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 37528   01D1B4  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 37529   01D1B6                     
 37530                           ;../src/boards/w65_cmn.c: 361:    ab.w++;
 37531   01D1B6  0E01               	movlw	1
 37532   01D1B8  2610               	addwf	write_sram@ab^(0+1280),f,c
 37533   01D1BA  0E00               	movlw	0
 37534   01D1BC  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 37535   01D1BE  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 37536   01D1C0  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 37537   01D1C2                     l23341:
 37538                           
 37539                           ;../src/boards/w65_cmn.c: 348:   while( i < len ) {
 37540   01D1C2  500A               	movf	write_sram@len^(0+1280),w,c
 37541   01D1C4  5C0E               	subwf	write_sram@i^(0+1280),w,c
 37542   01D1C6  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 37543   01D1C8  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 37544   01D1CA  A0D8               	btfss	status,0,c
 37545   01D1CC  EFEA  F0E8         	goto	u32151
 37546   01D1D0  EFEC  F0E8         	goto	u32150
 37547   01D1D4                     u32151:
 37548   01D1D4  EFB7  F0E8         	goto	l361
 37549   01D1D8                     u32150:
 37550   01D1D8  EF1F  F0E9         	goto	l363
 37551   01D1DC                     l365:
 37552                           
 37553                           ;../src/boards/w65_cmn.c: 367:       LATC = ab.ll;
 37554   01D1DC  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 37555                           
 37556                           ;../src/boards/w65_cmn.c: 368:    LATD = ab.lh;
 37557   01D1E0  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 37558                           
 37559                           ;../src/boards/w65_cmn.c: 370:          LATA4 = 0;
 37560   01D1E4  98BE               	bcf	1214,4,c	;volatile
 37561   01D1E6                     
 37562                           ;../src/boards/w65_cmn.c: 371:          LATB = ((uint8_t*)buf)[i];
 37563   01D1E6  500E               	movf	write_sram@i^(0+1280),w,c
 37564   01D1E8  2408               	addwf	write_sram@buf^(0+1280),w,c
 37565   01D1EA  6E0C               	movwf	??_write_sram^(0+1280),c
 37566   01D1EC  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 37567   01D1EE  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 37568   01D1F0  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 37569   01D1F2  C50C  F4F6         	movff	??_write_sram,tblptrl
 37570   01D1F6  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 37571   01D1FA  0E00               	movlw	low (__mediumconst shr (0+16))
 37572   01D1FC  6EF8               	movwf	tblptru,c
 37573   01D1FE  0E25               	movlw	(high __ramtop+-1)
 37574   01D200  64F7               	cpfsgt	tblptrh,c
 37575   01D202  D003               	bra	u32167
 37576   01D204  0008               	tblrd		*
 37577   01D206  50F5               	movf	tablat,w,c
 37578   01D208  D005               	bra	u32160
 37579   01D20A                     u32167:
 37580   01D20A  C4F6 F4E9          	movff	tblptrl,fsr0l
 37581   01D20E  C4F7 F4EA          	movff	tblptrh,fsr0h
 37582   01D212  50EF               	movf	indf0,w,c
 37583   01D214                     u32160:
 37584   01D214  6EBF               	movwf	191,c	;volatile
 37585   01D216                     
 37586                           ;../src/boards/w65_cmn.c: 372:          LATA4 = 1;
 37587   01D216  88BE               	bsf	1214,4,c	;volatile
 37588   01D218                     
 37589                           ;../src/boards/w65_cmn.c: 374:    i++;
 37590   01D218  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 37591   01D21A  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 37592   01D21C                     
 37593                           ;../src/boards/w65_cmn.c: 375:    ab.w++;
 37594   01D21C  0E01               	movlw	1
 37595   01D21E  2610               	addwf	write_sram@ab^(0+1280),f,c
 37596   01D220  0E00               	movlw	0
 37597   01D222  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 37598   01D224  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 37599   01D226  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 37600   01D228                     l23351:
 37601                           
 37602                           ;../src/boards/w65_cmn.c: 366:   while( i < len ) {
 37603   01D228  500A               	movf	write_sram@len^(0+1280),w,c
 37604   01D22A  5C0E               	subwf	write_sram@i^(0+1280),w,c
 37605   01D22C  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 37606   01D22E  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 37607   01D230  A0D8               	btfss	status,0,c
 37608   01D232  EF1D  F0E9         	goto	u32171
 37609   01D236  EF1F  F0E9         	goto	u32170
 37610   01D23A                     u32171:
 37611   01D23A  EFEE  F0E8         	goto	l365
 37612   01D23E                     u32170:
 37613   01D23E                     l363:
 37614                           
 37615                           ;../src/boards/w65_cmn.c: 378:  TRISB = 0xff;
 37616   01D23E  68C7               	setf	199,c	;volatile
 37617   01D240  0012               	return		;funcret
 37618   01D242                     __end_of_write_sram:
 37619                           	callstack 0
 37620                           
 37621 ;; *************** function _util_hexdump_sum *****************
 37622 ;; Defined at:
 37623 ;;		line 78 in file "../drivers/utils.c"
 37624 ;; Parameters:    Size  Location     Type
 37625 ;;  header          2  122[BANK5 ] PTR const unsigned char 
 37626 ;;		 -> STR_39(6), STR_35(6), 
 37627 ;;  addr            2  124[BANK5 ] PTR const void 
 37628 ;;		 -> disk_buf(128), 
 37629 ;;  size            2  126[BANK5 ] unsigned int 
 37630 ;; Auto vars:     Size  Location     Type
 37631 ;;  i               2  130[BANK5 ] int 
 37632 ;;  p               2  128[BANK5 ] PTR const unsigned char 
 37633 ;;		 -> disk_buf(128), 
 37634 ;;  sum             1  132[BANK5 ] unsigned char 
 37635 ;; Return value:  Size  Location     Type
 37636 ;;                  1    wreg      void 
 37637 ;; Registers used:
 37638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37639 ;; Tracked objects:
 37640 ;;		On entry : 0/0
 37641 ;;		On exit  : 0/0
 37642 ;;		Unchanged: 0/0
 37643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37644 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37645 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37647 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37648 ;;Total ram usage:       11 bytes
 37649 ;; Hardware stack levels used: 1
 37650 ;; Hardware stack levels required when called: 10
 37651 ;; This function calls:
 37652 ;;		_printf
 37653 ;;		_util_hexdump
 37654 ;; This function is called by:
 37655 ;;		_write_sector
 37656 ;;		_read_sector
 37657 ;; This function uses a non-reentrant model
 37658 ;;
 37659                           
 37660                           	psect	text102
 37661   01F170                     __ptext102:
 37662                           	callstack 0
 37663   01F170                     _util_hexdump_sum:
 37664                           	callstack 111
 37665   01F170                     
 37666                           ;../drivers/utils.c: 78: void util_hexdump_sum(const char *header, const void *addr, uns
      +                          igned int size);../drivers/utils.c: 79: {;../drivers/utils.c: 80:     util_hexdump(heade
      +                          r, addr, size);
 37667   01F170  C5DA  F5BD         	movff	util_hexdump_sum@header,util_hexdump@header
 37668   01F174  C5DB  F5BE         	movff	util_hexdump_sum@header+1,util_hexdump@header+1
 37669   01F178  C5DC  F5BF         	movff	util_hexdump_sum@addr,util_hexdump@addr
 37670   01F17C  C5DD  F5C0         	movff	util_hexdump_sum@addr+1,util_hexdump@addr+1
 37671   01F180  C5DE  F5C1         	movff	util_hexdump_sum@size,util_hexdump@size
 37672   01F184  C5DF  F5C2         	movff	util_hexdump_sum@size+1,util_hexdump@size+1
 37673   01F188  EC03  F0E2         	call	_util_hexdump	;wreg free
 37674   01F18C                     
 37675                           ;../drivers/utils.c: 82:     uint8_t sum = 0;
 37676   01F18C  0105               	movlb	5	; () banked
 37677   01F18E  6BE4               	clrf	util_hexdump_sum@sum& (0+255),b
 37678   01F190                     
 37679                           ; BSR set to: 5
 37680                           ;../drivers/utils.c: 83:     const uint8_t *p = addr;
 37681   01F190  C5DC  F5E0         	movff	util_hexdump_sum@addr,util_hexdump_sum@p
 37682   01F194  C5DD  F5E1         	movff	util_hexdump_sum@addr+1,util_hexdump_sum@p+1
 37683   01F198                     
 37684                           ; BSR set to: 5
 37685                           ;../drivers/utils.c: 84:     for (int i = 0; i < size; i++)
 37686   01F198  0E00               	movlw	0
 37687   01F19A  6FE3               	movwf	(util_hexdump_sum@i+1)& (0+255),b
 37688   01F19C  0E00               	movlw	0
 37689   01F19E  6FE2               	movwf	util_hexdump_sum@i& (0+255),b
 37690   01F1A0  EFDC  F0F8         	goto	l23407
 37691   01F1A4                     l23401:
 37692                           
 37693                           ; BSR set to: 5
 37694                           ;../drivers/utils.c: 85:         sum += *p++;
 37695   01F1A4  C5E0  F4D9         	movff	util_hexdump_sum@p,fsr2l
 37696   01F1A8  C5E1  F4DA         	movff	util_hexdump_sum@p+1,fsr2h
 37697   01F1AC  50DF               	movf	indf2,w,c
 37698   01F1AE  27E4               	addwf	util_hexdump_sum@sum& (0+255),f,b
 37699   01F1B0                     
 37700                           ; BSR set to: 5
 37701   01F1B0  4BE0               	infsnz	util_hexdump_sum@p& (0+255),f,b
 37702   01F1B2  2BE1               	incf	(util_hexdump_sum@p+1)& (0+255),f,b
 37703   01F1B4                     
 37704                           ; BSR set to: 5
 37705   01F1B4  4BE2               	infsnz	util_hexdump_sum@i& (0+255),f,b
 37706   01F1B6  2BE3               	incf	(util_hexdump_sum@i+1)& (0+255),f,b
 37707   01F1B8                     l23407:
 37708                           
 37709                           ; BSR set to: 5
 37710   01F1B8  51DE               	movf	util_hexdump_sum@size& (0+255),w,b
 37711   01F1BA  5DE2               	subwf	util_hexdump_sum@i& (0+255),w,b
 37712   01F1BC  51DF               	movf	(util_hexdump_sum@size+1)& (0+255),w,b
 37713   01F1BE  59E3               	subwfb	(util_hexdump_sum@i+1)& (0+255),w,b
 37714   01F1C0  A0D8               	btfss	status,0,c
 37715   01F1C2  EFE5  F0F8         	goto	u32241
 37716   01F1C6  EFE7  F0F8         	goto	u32240
 37717   01F1CA                     u32241:
 37718   01F1CA  EFD2  F0F8         	goto	l23401
 37719   01F1CE                     u32240:
 37720   01F1CE                     
 37721                           ; BSR set to: 5
 37722                           ;../drivers/utils.c: 86:     printf("%s%53s CHECKSUM: %02x\n\r", header, "", sum);
 37723   01F1CE  0E06               	movlw	low STR_198
 37724   01F1D0  6FAD               	movwf	printf@fmt& (0+255),b
 37725   01F1D2  0EFB               	movlw	high STR_198
 37726   01F1D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37727   01F1D6  C5DA  F5AF         	movff	util_hexdump_sum@header,?_printf+2
 37728   01F1DA  C5DB  F5B0         	movff	util_hexdump_sum@header+1,?_printf+3
 37729   01F1DE  0E7B               	movlw	low (STR_71+22)
 37730   01F1E0  6FB1               	movwf	(?_printf+4)& (0+255),b
 37731   01F1E2  0EFB               	movlw	high (STR_71+22)
 37732   01F1E4  6FB2               	movwf	(?_printf+5)& (0+255),b
 37733   01F1E6  C5E4  F5B3         	movff	util_hexdump_sum@sum,?_printf+6
 37734   01F1EA  6BB4               	clrf	(?_printf+7)& (0+255),b
 37735   01F1EC  ECDA  F0FF         	call	_printf	;wreg free
 37736   01F1F0  0012               	return		;funcret
 37737   01F1F2                     __end_of_util_hexdump_sum:
 37738                           	callstack 0
 37739                           
 37740 ;; *************** function _util_hexdump *****************
 37741 ;; Defined at:
 37742 ;;		line 36 in file "../drivers/utils.c"
 37743 ;; Parameters:    Size  Location     Type
 37744 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 37745 ;;		 -> STR_178(1), STR_39(6), STR_35(6), 
 37746 ;;  addr            2   95[BANK5 ] PTR const void 
 37747 ;;		 -> disk_initialize@buf(128), disk_buf(128), 
 37748 ;;  size            2   97[BANK5 ] unsigned int 
 37749 ;; Auto vars:     Size  Location     Type
 37750 ;;  i               2  120[BANK5 ] int 
 37751 ;;  chars          17  101[BANK5 ] unsigned char [17]
 37752 ;;  buf             2  118[BANK5 ] PTR const unsigned char 
 37753 ;;		 -> disk_initialize@buf(128), disk_buf(128), 
 37754 ;; Return value:  Size  Location     Type
 37755 ;;                  1    wreg      void 
 37756 ;; Registers used:
 37757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37758 ;; Tracked objects:
 37759 ;;		On entry : 0/0
 37760 ;;		On exit  : 0/0
 37761 ;;		Unchanged: 0/0
 37762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37763 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37764 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37765 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37766 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37767 ;;Total ram usage:       29 bytes
 37768 ;; Hardware stack levels used: 1
 37769 ;; Hardware stack levels required when called: 9
 37770 ;; This function calls:
 37771 ;;		_printf
 37772 ;; This function is called by:
 37773 ;;		_disk_initialize
 37774 ;;		_util_hexdump_sum
 37775 ;; This function uses a non-reentrant model
 37776 ;;
 37777                           
 37778                           	psect	text103
 37779   01C406                     __ptext103:
 37780                           	callstack 0
 37781   01C406                     _util_hexdump:
 37782                           	callstack 111
 37783   01C406                     
 37784                           ;../drivers/utils.c: 36: void util_hexdump(const char *header, const void *addr, unsigne
      +                          d int size);../drivers/utils.c: 37: {;../drivers/utils.c: 38:     char chars[17];;../dri
      +                          vers/utils.c: 39:     const uint8_t *buf = addr;
 37785   01C406  C5BF  F5D6         	movff	util_hexdump@addr,util_hexdump@buf
 37786   01C40A  C5C0  F5D7         	movff	util_hexdump@addr+1,util_hexdump@buf+1
 37787                           
 37788                           ;../drivers/utils.c: 40:     size = ((size + 15) & ~0xfU);
 37789   01C40E  0E0F               	movlw	15
 37790   01C410  0105               	movlb	5	; () banked
 37791   01C412  25C1               	addwf	util_hexdump@size& (0+255),w,b
 37792   01C414  6FC3               	movwf	??_util_hexdump& (0+255),b
 37793   01C416  0E00               	movlw	0
 37794   01C418  21C2               	addwfc	(util_hexdump@size+1)& (0+255),w,b
 37795   01C41A  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37796   01C41C  0EF0               	movlw	240
 37797   01C41E  15C3               	andwf	??_util_hexdump& (0+255),w,b
 37798   01C420  6FC1               	movwf	util_hexdump@size& (0+255),b
 37799   01C422  0EFF               	movlw	255
 37800   01C424  15C4               	andwf	(??_util_hexdump+1)& (0+255),w,b
 37801   01C426  6FC2               	movwf	(util_hexdump@size+1)& (0+255),b
 37802   01C428                     
 37803                           ; BSR set to: 5
 37804                           ;../drivers/utils.c: 41:     for (int i = 0; i < size; i++) {
 37805   01C428  0E00               	movlw	0
 37806   01C42A  6FD9               	movwf	(util_hexdump@i+1)& (0+255),b
 37807   01C42C  0E00               	movlw	0
 37808   01C42E  6FD8               	movwf	util_hexdump@i& (0+255),b
 37809   01C430  EFA8  F0E2         	goto	l21943
 37810   01C434                     l21923:
 37811                           
 37812                           ; BSR set to: 5
 37813                           ;../drivers/utils.c: 42:         if ((i % 16) == 0)
 37814   01C434  0E0F               	movlw	15
 37815   01C436  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37816   01C438  6FC3               	movwf	??_util_hexdump& (0+255),b
 37817   01C43A  0E00               	movlw	0
 37818   01C43C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37819   01C43E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37820   01C440  51C3               	movf	??_util_hexdump& (0+255),w,b
 37821   01C442  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 37822   01C444  A4D8               	btfss	status,2,c
 37823   01C446  EF27  F0E2         	goto	u29491
 37824   01C44A  EF29  F0E2         	goto	u29490
 37825   01C44E                     u29491:
 37826   01C44E  EF37  F0E2         	goto	l2531
 37827   01C452                     u29490:
 37828   01C452                     
 37829                           ; BSR set to: 5
 37830                           ;../drivers/utils.c: 43:             printf("%s%04x:", header, i);
 37831   01C452  0E30               	movlw	low STR_192
 37832   01C454  6FAD               	movwf	printf@fmt& (0+255),b
 37833   01C456  0EFF               	movlw	high STR_192
 37834   01C458  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37835   01C45A  C5BD  F5AF         	movff	util_hexdump@header,?_printf+2
 37836   01C45E  C5BE  F5B0         	movff	util_hexdump@header+1,?_printf+3
 37837   01C462  C5D8  F5B1         	movff	util_hexdump@i,?_printf+4
 37838   01C466  C5D9  F5B2         	movff	util_hexdump@i+1,?_printf+5
 37839   01C46A  ECDA  F0FF         	call	_printf	;wreg free
 37840   01C46E                     l2531:
 37841                           
 37842                           ;../drivers/utils.c: 44:         printf(" %02x", buf[i]);
 37843   01C46E  0E85               	movlw	low STR_193
 37844   01C470  0105               	movlb	5	; () banked
 37845   01C472  6FAD               	movwf	printf@fmt& (0+255),b
 37846   01C474  0EFF               	movlw	high STR_193
 37847   01C476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37848   01C478  51D8               	movf	util_hexdump@i& (0+255),w,b
 37849   01C47A  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37850   01C47C  6ED9               	movwf	fsr2l,c
 37851   01C47E  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37852   01C480  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37853   01C482  6EDA               	movwf	fsr2h,c
 37854   01C484  50DF               	movf	indf2,w,c
 37855   01C486  6FC3               	movwf	??_util_hexdump& (0+255),b
 37856   01C488  51C3               	movf	??_util_hexdump& (0+255),w,b
 37857   01C48A  6FAF               	movwf	(?_printf+2)& (0+255),b
 37858   01C48C  6BB0               	clrf	(?_printf+3)& (0+255),b
 37859   01C48E  ECDA  F0FF         	call	_printf	;wreg free
 37860   01C492                     
 37861                           ;../drivers/utils.c: 45:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 37862   01C492  0105               	movlb	5	; () banked
 37863   01C494  51D8               	movf	util_hexdump@i& (0+255),w,b
 37864   01C496  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37865   01C498  6ED9               	movwf	fsr2l,c
 37866   01C49A  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37867   01C49C  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37868   01C49E  6EDA               	movwf	fsr2h,c
 37869   01C4A0  0E1F               	movlw	31
 37870   01C4A2  64DF               	cpfsgt	indf2,c
 37871   01C4A4  EF56  F0E2         	goto	u29501
 37872   01C4A8  EF58  F0E2         	goto	u29500
 37873   01C4AC                     u29501:
 37874   01C4AC  EF7C  F0E2         	goto	l21933
 37875   01C4B0                     u29500:
 37876   01C4B0                     
 37877                           ; BSR set to: 5
 37878   01C4B0  51D8               	movf	util_hexdump@i& (0+255),w,b
 37879   01C4B2  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37880   01C4B4  6ED9               	movwf	fsr2l,c
 37881   01C4B6  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37882   01C4B8  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37883   01C4BA  6EDA               	movwf	fsr2h,c
 37884   01C4BC  0E7F               	movlw	127
 37885   01C4BE  60DF               	cpfslt	indf2,c
 37886   01C4C0  EF64  F0E2         	goto	u29511
 37887   01C4C4  EF66  F0E2         	goto	u29510
 37888   01C4C8                     u29511:
 37889   01C4C8  EF7C  F0E2         	goto	l21933
 37890   01C4CC                     u29510:
 37891   01C4CC                     
 37892                           ; BSR set to: 5
 37893                           ;../drivers/utils.c: 46:             chars[i % 16] = buf[i];
 37894   01C4CC  51D8               	movf	util_hexdump@i& (0+255),w,b
 37895   01C4CE  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 37896   01C4D0  6ED9               	movwf	fsr2l,c
 37897   01C4D2  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 37898   01C4D4  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 37899   01C4D6  6EDA               	movwf	fsr2h,c
 37900   01C4D8  0E0F               	movlw	15
 37901   01C4DA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37902   01C4DC  6FC3               	movwf	??_util_hexdump& (0+255),b
 37903   01C4DE  0E00               	movlw	0
 37904   01C4E0  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37905   01C4E2  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37906   01C4E4  0EC5               	movlw	low util_hexdump@chars
 37907   01C4E6  25C3               	addwf	??_util_hexdump& (0+255),w,b
 37908   01C4E8  6EE1               	movwf	fsr1l,c
 37909   01C4EA  0E05               	movlw	high util_hexdump@chars
 37910   01C4EC  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 37911   01C4EE  6EE2               	movwf	fsr1h,c
 37912   01C4F0  C4DF F4E7          	movff	indf2,indf1
 37913                           
 37914                           ;../drivers/utils.c: 47:         } else {
 37915   01C4F4  EF8A  F0E2         	goto	l21935
 37916   01C4F8                     l21933:
 37917                           
 37918                           ; BSR set to: 5
 37919                           ;../drivers/utils.c: 48:             chars[i % 16] = '.';
 37920   01C4F8  0E0F               	movlw	15
 37921   01C4FA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37922   01C4FC  6FC3               	movwf	??_util_hexdump& (0+255),b
 37923   01C4FE  0E00               	movlw	0
 37924   01C500  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37925   01C502  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37926   01C504  0EC5               	movlw	low util_hexdump@chars
 37927   01C506  25C3               	addwf	??_util_hexdump& (0+255),w,b
 37928   01C508  6ED9               	movwf	fsr2l,c
 37929   01C50A  0E05               	movlw	high util_hexdump@chars
 37930   01C50C  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 37931   01C50E  6EDA               	movwf	fsr2h,c
 37932   01C510  0E2E               	movlw	46
 37933   01C512  6EDF               	movwf	indf2,c
 37934   01C514                     l21935:
 37935                           
 37936                           ; BSR set to: 5
 37937                           ;../drivers/utils.c: 50:         if ((i % 16) == 15) {
 37938   01C514  0E0F               	movlw	15
 37939   01C516  15D8               	andwf	util_hexdump@i& (0+255),w,b
 37940   01C518  6FC3               	movwf	??_util_hexdump& (0+255),b
 37941   01C51A  0E00               	movlw	0
 37942   01C51C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 37943   01C51E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 37944   01C520  0E0F               	movlw	15
 37945   01C522  19C3               	xorwf	??_util_hexdump& (0+255),w,b
 37946   01C524  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 37947   01C526  A4D8               	btfss	status,2,c
 37948   01C528  EF98  F0E2         	goto	u29521
 37949   01C52C  EF9A  F0E2         	goto	u29520
 37950   01C530                     u29521:
 37951   01C530  EFA5  F0E2         	goto	l21941
 37952   01C534                     u29520:
 37953   01C534                     
 37954                           ; BSR set to: 5
 37955                           ;../drivers/utils.c: 51:             chars[16] = '\0';
 37956   01C534  6BD5               	clrf	(util_hexdump@chars+16)& (0+255),b
 37957   01C536                     
 37958                           ; BSR set to: 5
 37959                           ;../drivers/utils.c: 52:             printf(" %s\n\r", chars);
 37960   01C536  0E58               	movlw	low (STR_73+8)
 37961   01C538  6FAD               	movwf	printf@fmt& (0+255),b
 37962   01C53A  0EFE               	movlw	high (STR_73+8)
 37963   01C53C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 37964   01C53E  0EC5               	movlw	low util_hexdump@chars
 37965   01C540  6FAF               	movwf	(?_printf+2)& (0+255),b
 37966   01C542  0E05               	movlw	high util_hexdump@chars
 37967   01C544  6FB0               	movwf	(?_printf+3)& (0+255),b
 37968   01C546  ECDA  F0FF         	call	_printf	;wreg free
 37969   01C54A                     l21941:
 37970                           
 37971                           ;../drivers/utils.c: 54:     }
 37972   01C54A  0105               	movlb	5	; () banked
 37973   01C54C  4BD8               	infsnz	util_hexdump@i& (0+255),f,b
 37974   01C54E  2BD9               	incf	(util_hexdump@i+1)& (0+255),f,b
 37975   01C550                     l21943:
 37976                           
 37977                           ; BSR set to: 5
 37978   01C550  51C1               	movf	util_hexdump@size& (0+255),w,b
 37979   01C552  5DD8               	subwf	util_hexdump@i& (0+255),w,b
 37980   01C554  51C2               	movf	(util_hexdump@size+1)& (0+255),w,b
 37981   01C556  59D9               	subwfb	(util_hexdump@i+1)& (0+255),w,b
 37982   01C558  A0D8               	btfss	status,0,c
 37983   01C55A  EFB1  F0E2         	goto	u29531
 37984   01C55E  EFB3  F0E2         	goto	u29530
 37985   01C562                     u29531:
 37986   01C562  EF1A  F0E2         	goto	l21923
 37987   01C566                     u29530:
 37988   01C566                     
 37989                           ; BSR set to: 5
 37990   01C566  0012               	return		;funcret
 37991   01C568                     __end_of_util_hexdump:
 37992                           	callstack 0
 37993                           
 37994 ;; *************** function _seek_disk *****************
 37995 ;; Defined at:
 37996 ;;		line 60 in file "../src/io_dos.c"
 37997 ;; Parameters:    Size  Location     Type
 37998 ;;		None
 37999 ;; Auto vars:     Size  Location     Type
 38000 ;;  sector          4  147[BANK6 ] unsigned long 
 38001 ;;  filep           2  151[BANK6 ] PTR struct .
 38002 ;;  n               2    0        unsigned int 
 38003 ;;  fres            1  153[BANK6 ] enum E16851
 38004 ;; Return value:  Size  Location     Type
 38005 ;;                  2  139[BANK6 ] int 
 38006 ;; Registers used:
 38007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38008 ;; Tracked objects:
 38009 ;;		On entry : 0/0
 38010 ;;		On exit  : 0/0
 38011 ;;		Unchanged: 0/0
 38012 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38013 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38014 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38015 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38016 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38017 ;;Total ram usage:       15 bytes
 38018 ;; Hardware stack levels used: 1
 38019 ;; Hardware stack levels required when called: 17
 38020 ;; This function calls:
 38021 ;;		_f_lseek
 38022 ;;		_printf
 38023 ;; This function is called by:
 38024 ;;		_write_sector
 38025 ;;		_read_sector
 38026 ;; This function uses a non-reentrant model
 38027 ;;
 38028                           
 38029                           	psect	text104
 38030   01CBE8                     __ptext104:
 38031                           	callstack 0
 38032   01CBE8                     _seek_disk:
 38033                           	callstack 104
 38034   01CBE8                     
 38035                           ;../src/io_dos.c: 61:  unsigned int n;;../src/io_dos.c: 62:  FRESULT fres;;../src/io_dos
      +                          .c: 63:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 38036   01CBE8  0107               	movlb	7	; () banked
 38037   01CBEA  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38038   01CBEC  0D04               	mullw	4
 38039   01CBEE  0E4D               	movlw	low (_cpm_drives+2)
 38040   01CBF0  24F3               	addwf	243,w,c
 38041   01CBF2  6ED9               	movwf	fsr2l,c
 38042   01CBF4  0E09               	movlw	high (_cpm_drives+2)
 38043   01CBF6  20F4               	addwfc	prodh,w,c
 38044   01CBF8  6EDA               	movwf	fsr2h,c
 38045   01CBFA  C4DE F697          	movff	postinc2,seek_disk@filep
 38046   01CBFE  C4DD F698          	movff	postdec2,seek_disk@filep+1
 38047                           
 38048                           ;../src/io_dos.c: 64:  uint32_t sector;;../src/io_dos.c: 66:  if (cpm_drives[req_tbl.dis
      +                          k_drive].filep == ((void*)0)) return(-1);
 38049   01CC02  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38050   01CC04  0D04               	mullw	4
 38051   01CC06  0E4D               	movlw	low (_cpm_drives+2)
 38052   01CC08  24F3               	addwf	243,w,c
 38053   01CC0A  6ED9               	movwf	fsr2l,c
 38054   01CC0C  0E09               	movlw	high (_cpm_drives+2)
 38055   01CC0E  20F4               	addwfc	prodh,w,c
 38056   01CC10  6EDA               	movwf	fsr2h,c
 38057   01CC12  50DE               	movf	postinc2,w,c
 38058   01CC14  10DE               	iorwf	postinc2,w,c
 38059   01CC16  A4D8               	btfss	status,2,c
 38060   01CC18  EF10  F0E6         	goto	u32211
 38061   01CC1C  EF12  F0E6         	goto	u32210
 38062   01CC20                     u32211:
 38063   01CC20  EF17  F0E6         	goto	l23379
 38064   01CC24                     u32210:
 38065   01CC24                     l23377:
 38066   01CC24  0106               	movlb	6	; () banked
 38067   01CC26  698B               	setf	?_seek_disk& (0+255),b
 38068   01CC28  698C               	setf	(?_seek_disk+1)& (0+255),b
 38069   01CC2A  EF82  F0E6         	goto	l802
 38070   01CC2E                     l23379:
 38071                           
 38072                           ; BSR set to: 7
 38073                           ;../src/io_dos.c: 67:  sector = req_tbl.disk_track * cpm_drives[req_tbl.disk_drive].sect
      +                          ors + req_tbl.disk_sector - 1;
 38074   01CC2E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38075   01CC30  0D04               	mullw	4
 38076   01CC32  0E4B               	movlw	low _cpm_drives
 38077   01CC34  24F3               	addwf	243,w,c
 38078   01CC36  6ED9               	movwf	fsr2l,c
 38079   01CC38  0E09               	movlw	high _cpm_drives
 38080   01CC3A  20F4               	addwfc	prodh,w,c
 38081   01CC3C  6EDA               	movwf	fsr2h,c
 38082   01CC3E  C4DE F68D          	movff	postinc2,??_seek_disk
 38083   01CC42  C4DD F68E          	movff	postdec2,??_seek_disk+1
 38084   01CC46  0106               	movlb	6	; () banked
 38085   01CC48  518D               	movf	??_seek_disk& (0+255),w,b
 38086   01CC4A  0107               	movlb	7	; () banked
 38087   01CC4C  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 38088   01CC4E  C4F3 F68F          	movff	prodl,??_seek_disk+2
 38089   01CC52  C4F4 F690          	movff	prodh,??_seek_disk+3
 38090   01CC56  03D4               	mulwf	(_req_tbl+6)& (0+255),b
 38091   01CC58  50F3               	movf	prodl,w,c
 38092   01CC5A  0106               	movlb	6	; () banked
 38093   01CC5C  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 38094   01CC5E  518E               	movf	(??_seek_disk+1)& (0+255),w,b
 38095   01CC60  0107               	movlb	7	; () banked
 38096   01CC62  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 38097   01CC64  0106               	movlb	6	; () banked
 38098   01CC66  50F3               	movf	prodl,w,c
 38099   01CC68  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 38100   01CC6A  0107               	movlb	7	; () banked
 38101   01CC6C  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 38102   01CC6E  0106               	movlb	6	; () banked
 38103   01CC70  278F               	addwf	(??_seek_disk+2)& (0+255),f,b
 38104   01CC72  0107               	movlb	7	; () banked
 38105   01CC74  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 38106   01CC76  0106               	movlb	6	; () banked
 38107   01CC78  2390               	addwfc	(??_seek_disk+3)& (0+255),f,b
 38108   01CC7A  0EFF               	movlw	255
 38109   01CC7C  258F               	addwf	(??_seek_disk+2)& (0+255),w,b
 38110   01CC7E  6F91               	movwf	(??_seek_disk+4)& (0+255),b
 38111   01CC80  0EFF               	movlw	255
 38112   01CC82  2190               	addwfc	(??_seek_disk+3)& (0+255),w,b
 38113   01CC84  6F92               	movwf	(??_seek_disk+5)& (0+255),b
 38114   01CC86  C691  F693         	movff	??_seek_disk+4,seek_disk@sector
 38115   01CC8A  C692  F694         	movff	??_seek_disk+5,seek_disk@sector+1
 38116   01CC8E  6B95               	clrf	(seek_disk@sector+2)& (0+255),b
 38117   01CC90  6B96               	clrf	(seek_disk@sector+3)& (0+255),b
 38118   01CC92                     
 38119                           ; BSR set to: 6
 38120                           ;../src/io_dos.c: 69:  if ((fres = f_lseek(filep, sector * 128)) != FR_OK) {
 38121   01CC92  C697  F662         	movff	seek_disk@filep,f_lseek@fp
 38122   01CC96  C698  F663         	movff	seek_disk@filep+1,f_lseek@fp+1
 38123   01CC9A  C693  F68D         	movff	seek_disk@sector,??_seek_disk
 38124   01CC9E  C694  F68E         	movff	seek_disk@sector+1,??_seek_disk+1
 38125   01CCA2  C695  F68F         	movff	seek_disk@sector+2,??_seek_disk+2
 38126   01CCA6  C696  F690         	movff	seek_disk@sector+3,??_seek_disk+3
 38127   01CCAA  0E07               	movlw	7
 38128   01CCAC                     u32225:
 38129   01CCAC  90D8               	bcf	status,0,c
 38130   01CCAE  378D               	rlcf	??_seek_disk& (0+255),f,b
 38131   01CCB0  378E               	rlcf	(??_seek_disk+1)& (0+255),f,b
 38132   01CCB2  378F               	rlcf	(??_seek_disk+2)& (0+255),f,b
 38133   01CCB4  3790               	rlcf	(??_seek_disk+3)& (0+255),f,b
 38134   01CCB6  2EE8               	decfsz	wreg,f,c
 38135   01CCB8  EF56  F0E6         	goto	u32225
 38136   01CCBC  C68D  F664         	movff	??_seek_disk,f_lseek@ofs
 38137   01CCC0  C68E  F665         	movff	??_seek_disk+1,f_lseek@ofs+1
 38138   01CCC4  C68F  F666         	movff	??_seek_disk+2,f_lseek@ofs+2
 38139   01CCC8  C690  F667         	movff	??_seek_disk+3,f_lseek@ofs+3
 38140   01CCCC  ECDA  F08E         	call	_f_lseek	;wreg free
 38141   01CCD0  0106               	movlb	6	; () banked
 38142   01CCD2  6F99               	movwf	seek_disk@fres& (0+255),b
 38143   01CCD4  5199               	movf	seek_disk@fres& (0+255),w,b
 38144   01CCD6  B4D8               	btfsc	status,2,c
 38145   01CCD8  EF70  F0E6         	goto	u32231
 38146   01CCDC  EF72  F0E6         	goto	u32230
 38147   01CCE0                     u32231:
 38148   01CCE0  EF7E  F0E6         	goto	l23389
 38149   01CCE4                     u32230:
 38150   01CCE4                     
 38151                           ; BSR set to: 6
 38152                           ;../src/io_dos.c: 70:   printf("f_lseek(): ERROR %d\n\r", fres);
 38153   01CCE4  0E30               	movlw	low STR_34
 38154   01CCE6  0105               	movlb	5	; () banked
 38155   01CCE8  6FAD               	movwf	printf@fmt& (0+255),b
 38156   01CCEA  0EFC               	movlw	high STR_34
 38157   01CCEC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 38158   01CCEE  C699  F5AF         	movff	seek_disk@fres,?_printf+2
 38159   01CCF2  6BB0               	clrf	(?_printf+3)& (0+255),b
 38160   01CCF4  ECDA  F0FF         	call	_printf	;wreg free
 38161   01CCF8  EF12  F0E6         	goto	l23377
 38162   01CCFC                     l23389:
 38163                           
 38164                           ; BSR set to: 6
 38165                           ;../src/io_dos.c: 73:  return(0);
 38166   01CCFC  0E00               	movlw	0
 38167   01CCFE  6F8C               	movwf	(?_seek_disk+1)& (0+255),b
 38168   01CD00  0E00               	movlw	0
 38169   01CD02  6F8B               	movwf	?_seek_disk& (0+255),b
 38170   01CD04                     l802:
 38171                           
 38172                           ; BSR set to: 6
 38173   01CD04  0012               	return		;funcret
 38174   01CD06                     __end_of_seek_disk:
 38175                           	callstack 0
 38176                           
 38177 ;; *************** function _f_lseek *****************
 38178 ;; Defined at:
 38179 ;;		line 4435 in file "../fatfs/ff.c"
 38180 ;; Parameters:    Size  Location     Type
 38181 ;;  fp              2   98[BANK6 ] PTR struct .
 38182 ;;  ofs             4  100[BANK6 ] unsigned long 
 38183 ;; Auto vars:     Size  Location     Type
 38184 ;;  clst            4  135[BANK6 ] unsigned long 
 38185 ;;  bcs             4  129[BANK6 ] unsigned long 
 38186 ;;  nsect           4  124[BANK6 ] unsigned long 
 38187 ;;  ifptr           4  120[BANK6 ] unsigned long 
 38188 ;;  fs              2  133[BANK6 ] PTR struct .
 38189 ;;		 -> fs(564), NULL(0), 
 38190 ;;  res             1  128[BANK6 ] enum E597
 38191 ;; Return value:  Size  Location     Type
 38192 ;;                  1    wreg      enum E16851
 38193 ;; Registers used:
 38194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38195 ;; Tracked objects:
 38196 ;;		On entry : 0/0
 38197 ;;		On exit  : 0/0
 38198 ;;		Unchanged: 0/0
 38199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 38200 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38201 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38202 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38203 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38204 ;;Total ram usage:       41 bytes
 38205 ;; Hardware stack levels used: 1
 38206 ;; Hardware stack levels required when called: 16
 38207 ;; This function calls:
 38208 ;;		___lldiv
 38209 ;;		_clst2sect
 38210 ;;		_create_chain
 38211 ;;		_disk_read
 38212 ;;		_disk_write
 38213 ;;		_get_fat
 38214 ;;		_validate
 38215 ;; This function is called by:
 38216 ;;		_seek_disk
 38217 ;; This function uses a non-reentrant model
 38218 ;;
 38219                           
 38220                           	psect	text105
 38221   011DB4                     __ptext105:
 38222                           	callstack 0
 38223   011DB4                     _f_lseek:
 38224                           	callstack 104
 38225   011DB4                     
 38226                           ;../fatfs/ff.c: 4436:  FIL* fp,;../fatfs/ff.c: 4437:  FSIZE_t ofs;../fatfs/ff.c: 4439: {
      +                          ;../fatfs/ff.c: 4440:  FRESULT res;;../fatfs/ff.c: 4441:  FATFS *fs;;../fatfs/ff.c: 4442
      +                          :  DWORD clst, bcs;;../fatfs/ff.c: 4443:  LBA_t nsect;;../fatfs/ff.c: 4444:  FSIZE_t ifp
      +                          tr;;../fatfs/ff.c: 4451:  res = validate(&fp->obj, &fs);
 38227   011DB4  C662  F5BE         	movff	f_lseek@fp,validate@obj
 38228   011DB8  C663  F5BF         	movff	f_lseek@fp+1,validate@obj+1
 38229   011DBC  0E85               	movlw	low f_lseek@fs
 38230   011DBE  0105               	movlb	5	; () banked
 38231   011DC0  6FC0               	movwf	validate@rfs& (0+255),b
 38232   011DC2  0E06               	movlw	high f_lseek@fs
 38233   011DC4  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 38234   011DC6  ECA3  F0E9         	call	_validate	;wreg free
 38235   011DCA  0106               	movlb	6	; () banked
 38236   011DCC  6F80               	movwf	f_lseek@res& (0+255),b
 38237   011DCE                     
 38238                           ; BSR set to: 6
 38239                           ;../fatfs/ff.c: 4452:  if (res == FR_OK) res = (FRESULT)fp->err;
 38240   011DCE  5180               	movf	f_lseek@res& (0+255),w,b
 38241   011DD0  A4D8               	btfss	status,2,c
 38242   011DD2  EFED  F08E         	goto	u31221
 38243   011DD6  EFEF  F08E         	goto	u31220
 38244   011DDA                     u31221:
 38245   011DDA  EFF7  F08E         	goto	l22829
 38246   011DDE                     u31220:
 38247   011DDE                     
 38248                           ; BSR set to: 6
 38249   011DDE  EE20 F00F          	lfsr	2,15
 38250   011DE2  5162               	movf	f_lseek@fp& (0+255),w,b
 38251   011DE4  26D9               	addwf	fsr2l,f,c
 38252   011DE6  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38253   011DE8  22DA               	addwfc	fsr2h,f,c
 38254   011DEA  50DF               	movf	indf2,w,c
 38255   011DEC  6F80               	movwf	f_lseek@res& (0+255),b
 38256   011DEE                     l22829:
 38257                           
 38258                           ; BSR set to: 6
 38259                           ;../fatfs/ff.c: 4458:  if (res != FR_OK) return res;
 38260   011DEE  5180               	movf	f_lseek@res& (0+255),w,b
 38261   011DF0  B4D8               	btfsc	status,2,c
 38262   011DF2  EFFD  F08E         	goto	u31231
 38263   011DF6  EFFF  F08E         	goto	u31230
 38264   011DFA                     u31231:
 38265   011DFA  EF02  F08F         	goto	l22835
 38266   011DFE                     u31230:
 38267   011DFE                     l22831:
 38268                           
 38269                           ; BSR set to: 6
 38270   011DFE  5180               	movf	f_lseek@res& (0+255),w,b
 38271   011E00  EFDA  F092         	goto	l2054
 38272   011E04                     l22835:
 38273                           
 38274                           ; BSR set to: 6
 38275                           ;../fatfs/ff.c: 4513:  {;../fatfs/ff.c: 4517:   if (ofs > fp->obj.objsize && (0 || !(fp-
      +                          >flag & 0x02))) {
 38276   011E04  EE20 F00A          	lfsr	2,10
 38277   011E08  5162               	movf	f_lseek@fp& (0+255),w,b
 38278   011E0A  26D9               	addwf	fsr2l,f,c
 38279   011E0C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38280   011E0E  22DA               	addwfc	fsr2h,f,c
 38281   011E10  5164               	movf	f_lseek@ofs& (0+255),w,b
 38282   011E12  5CDE               	subwf	postinc2,w,c
 38283   011E14  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38284   011E16  58DE               	subwfb	postinc2,w,c
 38285   011E18  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38286   011E1A  58DE               	subwfb	postinc2,w,c
 38287   011E1C  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38288   011E1E  58DE               	subwfb	postinc2,w,c
 38289   011E20  B0D8               	btfsc	status,0,c
 38290   011E22  EF15  F08F         	goto	u31241
 38291   011E26  EF17  F08F         	goto	u31240
 38292   011E2A                     u31241:
 38293   011E2A  EF32  F08F         	goto	l2055
 38294   011E2E                     u31240:
 38295   011E2E                     
 38296                           ; BSR set to: 6
 38297   011E2E  EE20 F00E          	lfsr	2,14
 38298   011E32  5162               	movf	f_lseek@fp& (0+255),w,b
 38299   011E34  26D9               	addwf	fsr2l,f,c
 38300   011E36  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38301   011E38  22DA               	addwfc	fsr2h,f,c
 38302   011E3A  B2DF               	btfsc	indf2,1,c
 38303   011E3C  EF22  F08F         	goto	u31251
 38304   011E40  EF24  F08F         	goto	u31250
 38305   011E44                     u31251:
 38306   011E44  EF32  F08F         	goto	l2055
 38307   011E48                     u31250:
 38308   011E48                     
 38309                           ; BSR set to: 6
 38310                           ;../fatfs/ff.c: 4518:    ofs = fp->obj.objsize;
 38311   011E48  EE20 F00A          	lfsr	2,10
 38312   011E4C  5162               	movf	f_lseek@fp& (0+255),w,b
 38313   011E4E  26D9               	addwf	fsr2l,f,c
 38314   011E50  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38315   011E52  22DA               	addwfc	fsr2h,f,c
 38316   011E54  C4DE F664          	movff	postinc2,f_lseek@ofs
 38317   011E58  C4DE F665          	movff	postinc2,f_lseek@ofs+1
 38318   011E5C  C4DE F666          	movff	postinc2,f_lseek@ofs+2
 38319   011E60  C4DE F667          	movff	postinc2,f_lseek@ofs+3
 38320   011E64                     l2055:
 38321                           
 38322                           ; BSR set to: 6
 38323                           ;../fatfs/ff.c: 4520:   ifptr = fp->fptr;
 38324   011E64  EE20 F010          	lfsr	2,16
 38325   011E68  5162               	movf	f_lseek@fp& (0+255),w,b
 38326   011E6A  26D9               	addwf	fsr2l,f,c
 38327   011E6C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38328   011E6E  22DA               	addwfc	fsr2h,f,c
 38329   011E70  C4DE F678          	movff	postinc2,f_lseek@ifptr
 38330   011E74  C4DE F679          	movff	postinc2,f_lseek@ifptr+1
 38331   011E78  C4DE F67A          	movff	postinc2,f_lseek@ifptr+2
 38332   011E7C  C4DE F67B          	movff	postinc2,f_lseek@ifptr+3
 38333                           
 38334                           ;../fatfs/ff.c: 4521:   fp->fptr = nsect = 0;
 38335   011E80  0E00               	movlw	0
 38336   011E82  6F7C               	movwf	f_lseek@nsect& (0+255),b
 38337   011E84  0E00               	movlw	0
 38338   011E86  6F7D               	movwf	(f_lseek@nsect+1)& (0+255),b
 38339   011E88  0E00               	movlw	0
 38340   011E8A  6F7E               	movwf	(f_lseek@nsect+2)& (0+255),b
 38341   011E8C  0E00               	movlw	0
 38342   011E8E  6F7F               	movwf	(f_lseek@nsect+3)& (0+255),b
 38343   011E90  EE20 F010          	lfsr	2,16
 38344   011E94  5162               	movf	f_lseek@fp& (0+255),w,b
 38345   011E96  26D9               	addwf	fsr2l,f,c
 38346   011E98  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38347   011E9A  22DA               	addwfc	fsr2h,f,c
 38348   011E9C  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 38349   011EA0  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 38350   011EA4  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 38351   011EA8  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 38352   011EAC                     
 38353                           ; BSR set to: 6
 38354                           ;../fatfs/ff.c: 4522:   if (ofs > 0) {
 38355   011EAC  5164               	movf	f_lseek@ofs& (0+255),w,b
 38356   011EAE  1165               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 38357   011EB0  1166               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 38358   011EB2  1167               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 38359   011EB4  B4D8               	btfsc	status,2,c
 38360   011EB6  EF5F  F08F         	goto	u31261
 38361   011EBA  EF61  F08F         	goto	u31260
 38362   011EBE                     u31261:
 38363   011EBE  EFE5  F091         	goto	l22939
 38364   011EC2                     u31260:
 38365   011EC2                     
 38366                           ; BSR set to: 6
 38367                           ;../fatfs/ff.c: 4523:    bcs = (DWORD)fs->csize * ((UINT)512);
 38368   011EC2  EE20 F00A          	lfsr	2,10
 38369   011EC6  5185               	movf	f_lseek@fs& (0+255),w,b
 38370   011EC8  26D9               	addwf	fsr2l,f,c
 38371   011ECA  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 38372   011ECC  22DA               	addwfc	fsr2h,f,c
 38373   011ECE  C4DE F668          	movff	postinc2,??_f_lseek
 38374   011ED2  C4DD F669          	movff	postdec2,??_f_lseek+1
 38375   011ED6  5168               	movf	??_f_lseek& (0+255),w,b
 38376   011ED8  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38377   011EDA  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 38378   011EDC  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38379   011EDE  6B6C               	clrf	(??_f_lseek+4)& (0+255),b
 38380   011EE0  6B6D               	clrf	(??_f_lseek+5)& (0+255),b
 38381   011EE2  0E09               	movlw	9
 38382   011EE4                     u31275:
 38383   011EE4  90D8               	bcf	status,0,c
 38384   011EE6  376A               	rlcf	(??_f_lseek+2)& (0+255),f,b
 38385   011EE8  376B               	rlcf	(??_f_lseek+3)& (0+255),f,b
 38386   011EEA  376C               	rlcf	(??_f_lseek+4)& (0+255),f,b
 38387   011EEC  376D               	rlcf	(??_f_lseek+5)& (0+255),f,b
 38388   011EEE  2EE8               	decfsz	wreg,f,c
 38389   011EF0  EF72  F08F         	goto	u31275
 38390   011EF4  C66A  F681         	movff	??_f_lseek+2,f_lseek@bcs
 38391   011EF8  C66B  F682         	movff	??_f_lseek+3,f_lseek@bcs+1
 38392   011EFC  C66C  F683         	movff	??_f_lseek+4,f_lseek@bcs+2
 38393   011F00  C66D  F684         	movff	??_f_lseek+5,f_lseek@bcs+3
 38394   011F04                     
 38395                           ; BSR set to: 6
 38396                           ;../fatfs/ff.c: 4524:    if (ifptr > 0 &&
 38397   011F04  5178               	movf	f_lseek@ifptr& (0+255),w,b
 38398   011F06  1179               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 38399   011F08  117A               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 38400   011F0A  117B               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 38401   011F0C  B4D8               	btfsc	status,2,c
 38402   011F0E  EF8B  F08F         	goto	u31281
 38403   011F12  EF8D  F08F         	goto	u31280
 38404   011F16                     u31281:
 38405   011F16  EF2A  F090         	goto	l22851
 38406   011F1A                     u31280:
 38407   011F1A                     
 38408                           ; BSR set to: 6
 38409   011F1A  0EFF               	movlw	255
 38410   011F1C  2564               	addwf	f_lseek@ofs& (0+255),w,b
 38411   011F1E  6E04               	movwf	___lldiv@dividend^(0+1280),c
 38412   011F20  0EFF               	movlw	255
 38413   011F22  2165               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 38414   011F24  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38415   011F26  0EFF               	movlw	255
 38416   011F28  2166               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 38417   011F2A  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38418   011F2C  0EFF               	movlw	255
 38419   011F2E  2167               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 38420   011F30  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38421   011F32  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 38422   011F36  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 38423   011F3A  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 38424   011F3E  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 38425   011F42  EC7E  F0F5         	call	___lldiv	;wreg free
 38426   011F46  C504  F668         	movff	?___lldiv,??_f_lseek
 38427   011F4A  C505  F669         	movff	?___lldiv+1,??_f_lseek+1
 38428   011F4E  C506  F66A         	movff	?___lldiv+2,??_f_lseek+2
 38429   011F52  C507  F66B         	movff	?___lldiv+3,??_f_lseek+3
 38430   011F56  0EFF               	movlw	255
 38431   011F58  0106               	movlb	6	; () banked
 38432   011F5A  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 38433   011F5C  6E04               	movwf	___lldiv@dividend^(0+1280),c
 38434   011F5E  0EFF               	movlw	255
 38435   011F60  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 38436   011F62  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 38437   011F64  0EFF               	movlw	255
 38438   011F66  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 38439   011F68  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 38440   011F6A  0EFF               	movlw	255
 38441   011F6C  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 38442   011F6E  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 38443   011F70  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 38444   011F74  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 38445   011F78  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 38446   011F7C  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 38447   011F80  EC7E  F0F5         	call	___lldiv	;wreg free
 38448   011F84  5004               	movf	?___lldiv^(0+1280),w,c
 38449   011F86  0106               	movlb	6	; () banked
 38450   011F88  5D68               	subwf	??_f_lseek& (0+255),w,b
 38451   011F8A  5005               	movf	(?___lldiv+1)^(0+1280),w,c
 38452   011F8C  5969               	subwfb	(??_f_lseek+1)& (0+255),w,b
 38453   011F8E  5006               	movf	(?___lldiv+2)^(0+1280),w,c
 38454   011F90  596A               	subwfb	(??_f_lseek+2)& (0+255),w,b
 38455   011F92  5007               	movf	(?___lldiv+3)^(0+1280),w,c
 38456   011F94  596B               	subwfb	(??_f_lseek+3)& (0+255),w,b
 38457   011F96  A0D8               	btfss	status,0,c
 38458   011F98  EFD0  F08F         	goto	u31291
 38459   011F9C  EFD2  F08F         	goto	u31290
 38460   011FA0                     u31291:
 38461   011FA0  EF2A  F090         	goto	l22851
 38462   011FA4                     u31290:
 38463   011FA4                     
 38464                           ; BSR set to: 6
 38465                           ;../fatfs/ff.c: 4525:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;../fatfs/ff.c: 4526:  
      +                             fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 38466   011FA4  0EFF               	movlw	255
 38467   011FA6  2581               	addwf	f_lseek@bcs& (0+255),w,b
 38468   011FA8  6F68               	movwf	??_f_lseek& (0+255),b
 38469   011FAA  0EFF               	movlw	255
 38470   011FAC  2182               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 38471   011FAE  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 38472   011FB0  0EFF               	movlw	255
 38473   011FB2  2183               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 38474   011FB4  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38475   011FB6  0EFF               	movlw	255
 38476   011FB8  2184               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 38477   011FBA  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38478   011FBC  1D68               	comf	??_f_lseek& (0+255),w,b
 38479   011FBE  6F6C               	movwf	(??_f_lseek+4)& (0+255),b
 38480   011FC0  1D69               	comf	(??_f_lseek+1)& (0+255),w,b
 38481   011FC2  6F6D               	movwf	(??_f_lseek+5)& (0+255),b
 38482   011FC4  1D6A               	comf	(??_f_lseek+2)& (0+255),w,b
 38483   011FC6  6F6E               	movwf	(??_f_lseek+6)& (0+255),b
 38484   011FC8  1D6B               	comf	(??_f_lseek+3)& (0+255),w,b
 38485   011FCA  6F6F               	movwf	(??_f_lseek+7)& (0+255),b
 38486   011FCC  0EFF               	movlw	255
 38487   011FCE  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 38488   011FD0  6F70               	movwf	(??_f_lseek+8)& (0+255),b
 38489   011FD2  0EFF               	movlw	255
 38490   011FD4  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 38491   011FD6  6F71               	movwf	(??_f_lseek+9)& (0+255),b
 38492   011FD8  0EFF               	movlw	255
 38493   011FDA  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 38494   011FDC  6F72               	movwf	(??_f_lseek+10)& (0+255),b
 38495   011FDE  0EFF               	movlw	255
 38496   011FE0  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 38497   011FE2  6F73               	movwf	(??_f_lseek+11)& (0+255),b
 38498   011FE4  516C               	movf	(??_f_lseek+4)& (0+255),w,b
 38499   011FE6  1570               	andwf	(??_f_lseek+8)& (0+255),w,b
 38500   011FE8  6F74               	movwf	(??_f_lseek+12)& (0+255),b
 38501   011FEA  516D               	movf	(??_f_lseek+5)& (0+255),w,b
 38502   011FEC  1571               	andwf	(??_f_lseek+9)& (0+255),w,b
 38503   011FEE  6F75               	movwf	(??_f_lseek+13)& (0+255),b
 38504   011FF0  516E               	movf	(??_f_lseek+6)& (0+255),w,b
 38505   011FF2  1572               	andwf	(??_f_lseek+10)& (0+255),w,b
 38506   011FF4  6F76               	movwf	(??_f_lseek+14)& (0+255),b
 38507   011FF6  516F               	movf	(??_f_lseek+7)& (0+255),w,b
 38508   011FF8  1573               	andwf	(??_f_lseek+11)& (0+255),w,b
 38509   011FFA  6F77               	movwf	(??_f_lseek+15)& (0+255),b
 38510   011FFC  EE20 F010          	lfsr	2,16
 38511   012000  5162               	movf	f_lseek@fp& (0+255),w,b
 38512   012002  26D9               	addwf	fsr2l,f,c
 38513   012004  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38514   012006  22DA               	addwfc	fsr2h,f,c
 38515   012008  C674  F4DE         	movff	??_f_lseek+12,postinc2
 38516   01200C  C675  F4DE         	movff	??_f_lseek+13,postinc2
 38517   012010  C676  F4DE         	movff	??_f_lseek+14,postinc2
 38518   012014  C677  F4DE         	movff	??_f_lseek+15,postinc2
 38519                           
 38520                           ;../fatfs/ff.c: 4527:     ofs -= fp->fptr;
 38521   012018  EE20 F010          	lfsr	2,16
 38522   01201C  5162               	movf	f_lseek@fp& (0+255),w,b
 38523   01201E  26D9               	addwf	fsr2l,f,c
 38524   012020  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38525   012022  22DA               	addwfc	fsr2h,f,c
 38526   012024  50DE               	movf	postinc2,w,c
 38527   012026  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 38528   012028  50DE               	movf	postinc2,w,c
 38529   01202A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 38530   01202C  50DE               	movf	postinc2,w,c
 38531   01202E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 38532   012030  50DD               	movf	postdec2,w,c
 38533   012032  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 38534                           
 38535                           ;../fatfs/ff.c: 4528:     clst = fp->clust;
 38536   012034  EE20 F014          	lfsr	2,20
 38537   012038  5162               	movf	f_lseek@fp& (0+255),w,b
 38538   01203A  26D9               	addwf	fsr2l,f,c
 38539   01203C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38540   01203E  22DA               	addwfc	fsr2h,f,c
 38541   012040  C4DE F687          	movff	postinc2,f_lseek@clst
 38542   012044  C4DE F688          	movff	postinc2,f_lseek@clst+1
 38543   012048  C4DE F689          	movff	postinc2,f_lseek@clst+2
 38544   01204C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 38545                           
 38546                           ;../fatfs/ff.c: 4529:    } else {
 38547   012050  EFA5  F090         	goto	l22875
 38548   012054                     l22851:
 38549                           
 38550                           ; BSR set to: 6
 38551                           ;../fatfs/ff.c: 4530:     clst = fp->obj.sclust;
 38552   012054  EE20 F006          	lfsr	2,6
 38553   012058  5162               	movf	f_lseek@fp& (0+255),w,b
 38554   01205A  26D9               	addwf	fsr2l,f,c
 38555   01205C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38556   01205E  22DA               	addwfc	fsr2h,f,c
 38557   012060  C4DE F687          	movff	postinc2,f_lseek@clst
 38558   012064  C4DE F688          	movff	postinc2,f_lseek@clst+1
 38559   012068  C4DE F689          	movff	postinc2,f_lseek@clst+2
 38560   01206C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 38561   012070                     
 38562                           ; BSR set to: 6
 38563                           ;../fatfs/ff.c: 4532:     if (clst == 0) {
 38564   012070  5187               	movf	f_lseek@clst& (0+255),w,b
 38565   012072  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38566   012074  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38567   012076  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38568   012078  A4D8               	btfss	status,2,c
 38569   01207A  EF41  F090         	goto	u31301
 38570   01207E  EF43  F090         	goto	u31300
 38571   012082                     u31301:
 38572   012082  EF97  F090         	goto	l2061
 38573   012086                     u31300:
 38574   012086                     
 38575                           ; BSR set to: 6
 38576                           ;../fatfs/ff.c: 4533:      clst = create_chain(&fp->obj, 0);
 38577   012086  C662  F645         	movff	f_lseek@fp,create_chain@obj
 38578   01208A  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 38579   01208E  0E00               	movlw	0
 38580   012090  6F47               	movwf	create_chain@clst& (0+255),b
 38581   012092  0E00               	movlw	0
 38582   012094  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 38583   012096  0E00               	movlw	0
 38584   012098  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 38585   01209A  0E00               	movlw	0
 38586   01209C  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 38587   01209E  EC7C  F09D         	call	_create_chain	;wreg free
 38588   0120A2  C645  F687         	movff	?_create_chain,f_lseek@clst
 38589   0120A6  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 38590   0120AA  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 38591   0120AE  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 38592   0120B2                     
 38593                           ;../fatfs/ff.c: 4534:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_
      +                          ERR; };
 38594   0120B2  0106               	movlb	6	; () banked
 38595   0120B4  0587               	decf	f_lseek@clst& (0+255),w,b
 38596   0120B6  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38597   0120B8  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38598   0120BA  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38599   0120BC  A4D8               	btfss	status,2,c
 38600   0120BE  EF63  F090         	goto	u31311
 38601   0120C2  EF65  F090         	goto	u31310
 38602   0120C6                     u31311:
 38603   0120C6  EF70  F090         	goto	l22865
 38604   0120CA                     u31310:
 38605   0120CA                     
 38606                           ; BSR set to: 6
 38607   0120CA  EE20 F00F          	lfsr	2,15
 38608   0120CE  5162               	movf	f_lseek@fp& (0+255),w,b
 38609   0120D0  26D9               	addwf	fsr2l,f,c
 38610   0120D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38611   0120D4  22DA               	addwfc	fsr2h,f,c
 38612   0120D6  0E02               	movlw	2
 38613   0120D8  6EDF               	movwf	indf2,c
 38614   0120DA                     l22861:
 38615                           
 38616                           ; BSR set to: 6
 38617   0120DA  0E02               	movlw	2
 38618   0120DC  EFDA  F092         	goto	l2054
 38619   0120E0                     l22865:
 38620                           
 38621                           ; BSR set to: 6
 38622                           ;../fatfs/ff.c: 4535:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 38623   0120E0  2987               	incf	f_lseek@clst& (0+255),w,b
 38624   0120E2  E10A               	bnz	u31321
 38625   0120E4  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 38626   0120E6  E108               	bnz	u31321
 38627   0120E8  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 38628   0120EA  E106               	bnz	u31321
 38629   0120EC  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 38630   0120EE  A4D8               	btfss	status,2,c
 38631   0120F0  EF7C  F090         	goto	u31321
 38632   0120F4  EF7E  F090         	goto	u31320
 38633   0120F8                     u31321:
 38634   0120F8  EF89  F090         	goto	l22873
 38635   0120FC                     u31320:
 38636   0120FC                     
 38637                           ; BSR set to: 6
 38638   0120FC  EE20 F00F          	lfsr	2,15
 38639   012100  5162               	movf	f_lseek@fp& (0+255),w,b
 38640   012102  26D9               	addwf	fsr2l,f,c
 38641   012104  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38642   012106  22DA               	addwfc	fsr2h,f,c
 38643   012108  0E01               	movlw	1
 38644   01210A  6EDF               	movwf	indf2,c
 38645   01210C                     l22869:
 38646                           
 38647                           ; BSR set to: 6
 38648   01210C  0E01               	movlw	1
 38649   01210E  EFDA  F092         	goto	l2054
 38650   012112                     l22873:
 38651                           
 38652                           ; BSR set to: 6
 38653                           ;../fatfs/ff.c: 4536:      fp->obj.sclust = clst;
 38654   012112  EE20 F006          	lfsr	2,6
 38655   012116  5162               	movf	f_lseek@fp& (0+255),w,b
 38656   012118  26D9               	addwf	fsr2l,f,c
 38657   01211A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38658   01211C  22DA               	addwfc	fsr2h,f,c
 38659   01211E  C687  F4DE         	movff	f_lseek@clst,postinc2
 38660   012122  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38661   012126  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38662   01212A  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38663   01212E                     l2061:
 38664                           
 38665                           ; BSR set to: 6
 38666                           ;../fatfs/ff.c: 4539:     fp->clust = clst;
 38667   01212E  EE20 F014          	lfsr	2,20
 38668   012132  5162               	movf	f_lseek@fp& (0+255),w,b
 38669   012134  26D9               	addwf	fsr2l,f,c
 38670   012136  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38671   012138  22DA               	addwfc	fsr2h,f,c
 38672   01213A  C687  F4DE         	movff	f_lseek@clst,postinc2
 38673   01213E  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38674   012142  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38675   012146  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38676   01214A                     l22875:
 38677                           
 38678                           ; BSR set to: 6
 38679                           ;../fatfs/ff.c: 4541:    if (clst != 0) {
 38680   01214A  5187               	movf	f_lseek@clst& (0+255),w,b
 38681   01214C  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38682   01214E  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38683   012150  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38684   012152  B4D8               	btfsc	status,2,c
 38685   012154  EFAE  F090         	goto	u31331
 38686   012158  EFB0  F090         	goto	u31330
 38687   01215C                     u31331:
 38688   01215C  EFE5  F091         	goto	l22939
 38689   012160                     u31330:
 38690   012160  EF6A  F091         	goto	l22921
 38691   012164                     l22879:
 38692                           
 38693                           ; BSR set to: 6
 38694                           ;../fatfs/ff.c: 4543:      ofs -= bcs; fp->fptr += bcs;
 38695   012164  5181               	movf	f_lseek@bcs& (0+255),w,b
 38696   012166  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 38697   012168  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 38698   01216A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 38699   01216C  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 38700   01216E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 38701   012170  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 38702   012172  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 38703   012174                     
 38704                           ; BSR set to: 6
 38705   012174  EE20 F010          	lfsr	2,16
 38706   012178  5162               	movf	f_lseek@fp& (0+255),w,b
 38707   01217A  26D9               	addwf	fsr2l,f,c
 38708   01217C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38709   01217E  22DA               	addwfc	fsr2h,f,c
 38710   012180  5181               	movf	f_lseek@bcs& (0+255),w,b
 38711   012182  26DE               	addwf	postinc2,f,c
 38712   012184  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 38713   012186  22DE               	addwfc	postinc2,f,c
 38714   012188  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 38715   01218A  22DE               	addwfc	postinc2,f,c
 38716   01218C  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 38717   01218E  22DE               	addwfc	postinc2,f,c
 38718   012190                     
 38719                           ; BSR set to: 6
 38720                           ;../fatfs/ff.c: 4545:      if (fp->flag & 0x02) {
 38721   012190  EE20 F00E          	lfsr	2,14
 38722   012194  5162               	movf	f_lseek@fp& (0+255),w,b
 38723   012196  26D9               	addwf	fsr2l,f,c
 38724   012198  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38725   01219A  22DA               	addwfc	fsr2h,f,c
 38726   01219C  A2DF               	btfss	indf2,1,c
 38727   01219E  EFD3  F090         	goto	u31341
 38728   0121A2  EFD5  F090         	goto	u31340
 38729   0121A6                     u31341:
 38730   0121A6  EF01  F091         	goto	l22899
 38731   0121AA                     u31340:
 38732   0121AA                     
 38733                           ; BSR set to: 6
 38734                           ;../fatfs/ff.c: 4550:       clst = create_chain(&fp->obj, clst);
 38735   0121AA  C662  F645         	movff	f_lseek@fp,create_chain@obj
 38736   0121AE  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 38737   0121B2  C687  F647         	movff	f_lseek@clst,create_chain@clst
 38738   0121B6  C688  F648         	movff	f_lseek@clst+1,create_chain@clst+1
 38739   0121BA  C689  F649         	movff	f_lseek@clst+2,create_chain@clst+2
 38740   0121BE  C68A  F64A         	movff	f_lseek@clst+3,create_chain@clst+3
 38741   0121C2  EC7C  F09D         	call	_create_chain	;wreg free
 38742   0121C6  C645  F687         	movff	?_create_chain,f_lseek@clst
 38743   0121CA  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 38744   0121CE  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 38745   0121D2  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 38746   0121D6                     
 38747                           ;../fatfs/ff.c: 4551:       if (clst == 0) {
 38748   0121D6  0106               	movlb	6	; () banked
 38749   0121D8  5187               	movf	f_lseek@clst& (0+255),w,b
 38750   0121DA  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38751   0121DC  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38752   0121DE  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 38753   0121E0  A4D8               	btfss	status,2,c
 38754   0121E2  EFF5  F090         	goto	u31351
 38755   0121E6  EFF7  F090         	goto	u31350
 38756   0121EA                     u31351:
 38757   0121EA  EF17  F091         	goto	l22901
 38758   0121EE                     u31350:
 38759   0121EE                     
 38760                           ; BSR set to: 6
 38761                           ;../fatfs/ff.c: 4552:        ofs = 0; break;
 38762   0121EE  0E00               	movlw	0
 38763   0121F0  6F64               	movwf	f_lseek@ofs& (0+255),b
 38764   0121F2  0E00               	movlw	0
 38765   0121F4  6F65               	movwf	(f_lseek@ofs+1)& (0+255),b
 38766   0121F6  0E00               	movlw	0
 38767   0121F8  6F66               	movwf	(f_lseek@ofs+2)& (0+255),b
 38768   0121FA  0E00               	movlw	0
 38769   0121FC  6F67               	movwf	(f_lseek@ofs+3)& (0+255),b
 38770   0121FE  EF79  F091         	goto	l22923
 38771   012202                     l22899:
 38772                           
 38773                           ; BSR set to: 6
 38774                           ;../fatfs/ff.c: 4556:      {;../fatfs/ff.c: 4557:       clst = get_fat(&fp->obj, clst);
 38775   012202  C662  F624         	movff	f_lseek@fp,get_fat@obj
 38776   012206  C663  F625         	movff	f_lseek@fp+1,get_fat@obj+1
 38777   01220A  C687  F626         	movff	f_lseek@clst,get_fat@clst
 38778   01220E  C688  F627         	movff	f_lseek@clst+1,get_fat@clst+1
 38779   012212  C689  F628         	movff	f_lseek@clst+2,get_fat@clst+2
 38780   012216  C68A  F629         	movff	f_lseek@clst+3,get_fat@clst+3
 38781   01221A  ECF7  F0B4         	call	_get_fat	;wreg free
 38782   01221E  C624  F687         	movff	?_get_fat,f_lseek@clst
 38783   012222  C625  F688         	movff	?_get_fat+1,f_lseek@clst+1
 38784   012226  C626  F689         	movff	?_get_fat+2,f_lseek@clst+2
 38785   01222A  C627  F68A         	movff	?_get_fat+3,f_lseek@clst+3
 38786   01222E                     l22901:
 38787                           
 38788                           ;../fatfs/ff.c: 4559:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 38789   01222E  0106               	movlb	6	; () banked
 38790   012230  2987               	incf	f_lseek@clst& (0+255),w,b
 38791   012232  E10A               	bnz	u31361
 38792   012234  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 38793   012236  E108               	bnz	u31361
 38794   012238  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 38795   01223A  E106               	bnz	u31361
 38796   01223C  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 38797   01223E  A4D8               	btfss	status,2,c
 38798   012240  EF24  F091         	goto	u31361
 38799   012244  EF26  F091         	goto	u31360
 38800   012248                     u31361:
 38801   012248  EF30  F091         	goto	l22909
 38802   01224C                     u31360:
 38803   01224C                     
 38804                           ; BSR set to: 6
 38805   01224C  EE20 F00F          	lfsr	2,15
 38806   012250  5162               	movf	f_lseek@fp& (0+255),w,b
 38807   012252  26D9               	addwf	fsr2l,f,c
 38808   012254  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38809   012256  22DA               	addwfc	fsr2h,f,c
 38810   012258  0E01               	movlw	1
 38811   01225A  6EDF               	movwf	indf2,c
 38812   01225C  EF86  F090         	goto	l22869
 38813   012260                     l22909:
 38814                           
 38815                           ; BSR set to: 6
 38816                           ;../fatfs/ff.c: 4560:      if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_
      +                          INT_ERR); return FR_INT_ERR; };
 38817   012260  518A               	movf	(f_lseek@clst+3)& (0+255),w,b
 38818   012262  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 38819   012264  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 38820   012266  E109               	bnz	u31370
 38821   012268  0E02               	movlw	2
 38822   01226A  5D87               	subwf	f_lseek@clst& (0+255),w,b
 38823   01226C  A0D8               	btfss	status,0,c
 38824   01226E  EF3B  F091         	goto	u31371
 38825   012272  EF3D  F091         	goto	u31370
 38826   012276                     u31371:
 38827   012276  EF52  F091         	goto	l22913
 38828   01227A                     u31370:
 38829   01227A                     
 38830                           ; BSR set to: 6
 38831   01227A  EE20 F018          	lfsr	2,24
 38832   01227E  5185               	movf	f_lseek@fs& (0+255),w,b
 38833   012280  26D9               	addwf	fsr2l,f,c
 38834   012282  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 38835   012284  22DA               	addwfc	fsr2h,f,c
 38836   012286  50DE               	movf	postinc2,w,c
 38837   012288  5D87               	subwf	f_lseek@clst& (0+255),w,b
 38838   01228A  50DE               	movf	postinc2,w,c
 38839   01228C  5988               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 38840   01228E  50DE               	movf	postinc2,w,c
 38841   012290  5989               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 38842   012292  50DE               	movf	postinc2,w,c
 38843   012294  598A               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 38844   012296  A0D8               	btfss	status,0,c
 38845   012298  EF50  F091         	goto	u31381
 38846   01229C  EF52  F091         	goto	u31380
 38847   0122A0                     u31381:
 38848   0122A0  EF5C  F091         	goto	l22919
 38849   0122A4                     u31380:
 38850   0122A4                     l22913:
 38851                           
 38852                           ; BSR set to: 6
 38853   0122A4  EE20 F00F          	lfsr	2,15
 38854   0122A8  5162               	movf	f_lseek@fp& (0+255),w,b
 38855   0122AA  26D9               	addwf	fsr2l,f,c
 38856   0122AC  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38857   0122AE  22DA               	addwfc	fsr2h,f,c
 38858   0122B0  0E02               	movlw	2
 38859   0122B2  6EDF               	movwf	indf2,c
 38860   0122B4  EF6D  F090         	goto	l22861
 38861   0122B8                     l22919:
 38862                           
 38863                           ; BSR set to: 6
 38864                           ;../fatfs/ff.c: 4561:      fp->clust = clst;
 38865   0122B8  EE20 F014          	lfsr	2,20
 38866   0122BC  5162               	movf	f_lseek@fp& (0+255),w,b
 38867   0122BE  26D9               	addwf	fsr2l,f,c
 38868   0122C0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38869   0122C2  22DA               	addwfc	fsr2h,f,c
 38870   0122C4  C687  F4DE         	movff	f_lseek@clst,postinc2
 38871   0122C8  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 38872   0122CC  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 38873   0122D0  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 38874   0122D4                     l22921:
 38875                           
 38876                           ; BSR set to: 6
 38877                           ;../fatfs/ff.c: 4542:     while (ofs > bcs) {
 38878   0122D4  5164               	movf	f_lseek@ofs& (0+255),w,b
 38879   0122D6  5D81               	subwf	f_lseek@bcs& (0+255),w,b
 38880   0122D8  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38881   0122DA  5982               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 38882   0122DC  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38883   0122DE  5983               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 38884   0122E0  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38885   0122E2  5984               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 38886   0122E4  A0D8               	btfss	status,0,c
 38887   0122E6  EF77  F091         	goto	u31391
 38888   0122EA  EF79  F091         	goto	u31390
 38889   0122EE                     u31391:
 38890   0122EE  EFB2  F090         	goto	l22879
 38891   0122F2                     u31390:
 38892   0122F2                     l22923:
 38893                           
 38894                           ; BSR set to: 6
 38895                           ;../fatfs/ff.c: 4563:     fp->fptr += ofs;
 38896   0122F2  EE20 F010          	lfsr	2,16
 38897   0122F6  5162               	movf	f_lseek@fp& (0+255),w,b
 38898   0122F8  26D9               	addwf	fsr2l,f,c
 38899   0122FA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38900   0122FC  22DA               	addwfc	fsr2h,f,c
 38901   0122FE  5164               	movf	f_lseek@ofs& (0+255),w,b
 38902   012300  26DE               	addwf	postinc2,f,c
 38903   012302  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 38904   012304  22DE               	addwfc	postinc2,f,c
 38905   012306  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 38906   012308  22DE               	addwfc	postinc2,f,c
 38907   01230A  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 38908   01230C  22DE               	addwfc	postinc2,f,c
 38909   01230E                     
 38910                           ; BSR set to: 6
 38911                           ;../fatfs/ff.c: 4564:     if (ofs % ((UINT)512)) {
 38912   01230E  0EFF               	movlw	255
 38913   012310  1564               	andwf	f_lseek@ofs& (0+255),w,b
 38914   012312  6F68               	movwf	??_f_lseek& (0+255),b
 38915   012314  0E01               	movlw	1
 38916   012316  1565               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 38917   012318  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 38918   01231A  0E00               	movlw	0
 38919   01231C  1566               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 38920   01231E  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 38921   012320  0E00               	movlw	0
 38922   012322  1567               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 38923   012324  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 38924   012326  5168               	movf	??_f_lseek& (0+255),w,b
 38925   012328  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 38926   01232A  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 38927   01232C  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 38928   01232E  B4D8               	btfsc	status,2,c
 38929   012330  EF9C  F091         	goto	u31401
 38930   012334  EF9E  F091         	goto	u31400
 38931   012338                     u31401:
 38932   012338  EFE5  F091         	goto	l22939
 38933   01233C                     u31400:
 38934   01233C                     
 38935                           ; BSR set to: 6
 38936                           ;../fatfs/ff.c: 4565:      nsect = clst2sect(fs, clst);
 38937   01233C  C685  F510         	movff	f_lseek@fs,clst2sect@fs
 38938   012340  C686  F511         	movff	f_lseek@fs+1,clst2sect@fs+1
 38939   012344  C687  F512         	movff	f_lseek@clst,clst2sect@clst
 38940   012348  C688  F513         	movff	f_lseek@clst+1,clst2sect@clst+1
 38941   01234C  C689  F514         	movff	f_lseek@clst+2,clst2sect@clst+2
 38942   012350  C68A  F515         	movff	f_lseek@clst+3,clst2sect@clst+3
 38943   012354  EC7A  F0F0         	call	_clst2sect	;wreg free
 38944   012358  C510  F67C         	movff	?_clst2sect,f_lseek@nsect
 38945   01235C  C511  F67D         	movff	?_clst2sect+1,f_lseek@nsect+1
 38946   012360  C512  F67E         	movff	?_clst2sect+2,f_lseek@nsect+2
 38947   012364  C513  F67F         	movff	?_clst2sect+3,f_lseek@nsect+3
 38948   012368                     
 38949                           ;../fatfs/ff.c: 4566:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT
      +                          _ERR; };
 38950   012368  0106               	movlb	6	; () banked
 38951   01236A  517C               	movf	f_lseek@nsect& (0+255),w,b
 38952   01236C  117D               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 38953   01236E  117E               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 38954   012370  117F               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 38955   012372  A4D8               	btfss	status,2,c
 38956   012374  EFBE  F091         	goto	u31411
 38957   012378  EFC0  F091         	goto	u31410
 38958   01237C                     u31411:
 38959   01237C  EFCA  F091         	goto	l22937
 38960   012380                     u31410:
 38961   012380                     
 38962                           ; BSR set to: 6
 38963   012380  EE20 F00F          	lfsr	2,15
 38964   012384  5162               	movf	f_lseek@fp& (0+255),w,b
 38965   012386  26D9               	addwf	fsr2l,f,c
 38966   012388  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 38967   01238A  22DA               	addwfc	fsr2h,f,c
 38968   01238C  0E02               	movlw	2
 38969   01238E  6EDF               	movwf	indf2,c
 38970   012390  EF6D  F090         	goto	l22861
 38971   012394                     l22937:
 38972                           
 38973                           ; BSR set to: 6
 38974                           ;../fatfs/ff.c: 4567:      nsect += (DWORD)(ofs / ((UINT)512));
 38975   012394  C664  F668         	movff	f_lseek@ofs,??_f_lseek
 38976   012398  C665  F669         	movff	f_lseek@ofs+1,??_f_lseek+1
 38977   01239C  C666  F66A         	movff	f_lseek@ofs+2,??_f_lseek+2
 38978   0123A0  C667  F66B         	movff	f_lseek@ofs+3,??_f_lseek+3
 38979   0123A4  0E0A               	movlw	10
 38980   0123A6  EFDA  F091         	goto	u31420
 38981   0123AA                     u31425:
 38982   0123AA  90D8               	bcf	status,0,c
 38983   0123AC  336B               	rrcf	(??_f_lseek+3)& (0+255),f,b
 38984   0123AE  336A               	rrcf	(??_f_lseek+2)& (0+255),f,b
 38985   0123B0  3369               	rrcf	(??_f_lseek+1)& (0+255),f,b
 38986   0123B2  3368               	rrcf	??_f_lseek& (0+255),f,b
 38987   0123B4                     u31420:
 38988   0123B4  2EE8               	decfsz	wreg,f,c
 38989   0123B6  EFD5  F091         	goto	u31425
 38990   0123BA  5168               	movf	??_f_lseek& (0+255),w,b
 38991   0123BC  277C               	addwf	f_lseek@nsect& (0+255),f,b
 38992   0123BE  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 38993   0123C0  237D               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 38994   0123C2  516A               	movf	(??_f_lseek+2)& (0+255),w,b
 38995   0123C4  237E               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 38996   0123C6  516B               	movf	(??_f_lseek+3)& (0+255),w,b
 38997   0123C8  237F               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 38998   0123CA                     l22939:
 38999                           
 39000                           ; BSR set to: 6
 39001   0123CA  EE20 F010          	lfsr	2,16
 39002   0123CE  5162               	movf	f_lseek@fp& (0+255),w,b
 39003   0123D0  26D9               	addwf	fsr2l,f,c
 39004   0123D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39005   0123D4  22DA               	addwfc	fsr2h,f,c
 39006   0123D6  EE10 F00A          	lfsr	1,10
 39007   0123DA  5162               	movf	f_lseek@fp& (0+255),w,b
 39008   0123DC  26E1               	addwf	fsr1l,f,c
 39009   0123DE  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39010   0123E0  22E2               	addwfc	fsr1h,f,c
 39011   0123E2  50DE               	movf	postinc2,w,c
 39012   0123E4  5CE6               	subwf	postinc1,w,c
 39013   0123E6  50DE               	movf	postinc2,w,c
 39014   0123E8  58E6               	subwfb	postinc1,w,c
 39015   0123EA  50DE               	movf	postinc2,w,c
 39016   0123EC  58E6               	subwfb	postinc1,w,c
 39017   0123EE  50DE               	movf	postinc2,w,c
 39018   0123F0  58E6               	subwfb	postinc1,w,c
 39019   0123F2  B0D8               	btfsc	status,0,c
 39020   0123F4  EFFE  F091         	goto	u31431
 39021   0123F8  EF00  F092         	goto	u31430
 39022   0123FC                     u31431:
 39023   0123FC  EF1C  F092         	goto	l22945
 39024   012400                     u31430:
 39025   012400                     
 39026                           ; BSR set to: 6
 39027                           ;../fatfs/ff.c: 4572:    fp->obj.objsize = fp->fptr;
 39028   012400  EE20 F010          	lfsr	2,16
 39029   012404  5162               	movf	f_lseek@fp& (0+255),w,b
 39030   012406  26D9               	addwf	fsr2l,f,c
 39031   012408  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39032   01240A  22DA               	addwfc	fsr2h,f,c
 39033   01240C  EE10 F00A          	lfsr	1,10
 39034   012410  5162               	movf	f_lseek@fp& (0+255),w,b
 39035   012412  26E1               	addwf	fsr1l,f,c
 39036   012414  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39037   012416  22E2               	addwfc	fsr1h,f,c
 39038   012418  C4DE F4E6          	movff	postinc2,postinc1
 39039   01241C  C4DE F4E6          	movff	postinc2,postinc1
 39040   012420  C4DE F4E6          	movff	postinc2,postinc1
 39041   012424  C4DE F4E6          	movff	postinc2,postinc1
 39042   012428                     
 39043                           ; BSR set to: 6
 39044                           ;../fatfs/ff.c: 4573:    fp->flag |= 0x40;
 39045   012428  EE20 F00E          	lfsr	2,14
 39046   01242C  5162               	movf	f_lseek@fp& (0+255),w,b
 39047   01242E  26D9               	addwf	fsr2l,f,c
 39048   012430  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39049   012432  22DA               	addwfc	fsr2h,f,c
 39050   012434  0E00               	movlw	0
 39051   012436  8CDB               	bsf	plusw2,6,c
 39052   012438                     l22945:
 39053                           
 39054                           ; BSR set to: 6
 39055                           ;../fatfs/ff.c: 4575:   if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
 39056   012438  EE20 F010          	lfsr	2,16
 39057   01243C  5162               	movf	f_lseek@fp& (0+255),w,b
 39058   01243E  26D9               	addwf	fsr2l,f,c
 39059   012440  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39060   012442  22DA               	addwfc	fsr2h,f,c
 39061   012444  0EFF               	movlw	255
 39062   012446  14DE               	andwf	postinc2,w,c
 39063   012448  6F68               	movwf	??_f_lseek& (0+255),b
 39064   01244A  0E01               	movlw	1
 39065   01244C  14DE               	andwf	postinc2,w,c
 39066   01244E  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 39067   012450  0E00               	movlw	0
 39068   012452  14DE               	andwf	postinc2,w,c
 39069   012454  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 39070   012456  0E00               	movlw	0
 39071   012458  14DE               	andwf	postinc2,w,c
 39072   01245A  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 39073   01245C  5168               	movf	??_f_lseek& (0+255),w,b
 39074   01245E  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 39075   012460  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 39076   012462  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 39077   012464  B4D8               	btfsc	status,2,c
 39078   012466  EF37  F092         	goto	u31441
 39079   01246A  EF39  F092         	goto	u31440
 39080   01246E                     u31441:
 39081   01246E  EFFF  F08E         	goto	l22831
 39082   012472                     u31440:
 39083   012472                     
 39084                           ; BSR set to: 6
 39085   012472  EE20 F018          	lfsr	2,24
 39086   012476  5162               	movf	f_lseek@fp& (0+255),w,b
 39087   012478  26D9               	addwf	fsr2l,f,c
 39088   01247A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39089   01247C  22DA               	addwfc	fsr2h,f,c
 39090   01247E  517C               	movf	f_lseek@nsect& (0+255),w,b
 39091   012480  18DE               	xorwf	postinc2,w,c
 39092   012482  E10F               	bnz	u31450
 39093   012484  517D               	movf	(f_lseek@nsect+1)& (0+255),w,b
 39094   012486  18DE               	xorwf	postinc2,w,c
 39095   012488  E10C               	bnz	u31450
 39096   01248A  517E               	movf	(f_lseek@nsect+2)& (0+255),w,b
 39097   01248C  18DE               	xorwf	postinc2,w,c
 39098   01248E  E109               	bnz	u31450
 39099   012490  517F               	movf	(f_lseek@nsect+3)& (0+255),w,b
 39100   012492  18DE               	xorwf	postinc2,w,c
 39101   012494  B4D8               	btfsc	status,2,c
 39102   012496  EF4F  F092         	goto	u31451
 39103   01249A  EF51  F092         	goto	u31450
 39104   01249E                     u31451:
 39105   01249E  EFFF  F08E         	goto	l22831
 39106   0124A2                     u31450:
 39107   0124A2                     
 39108                           ; BSR set to: 6
 39109                           ;../fatfs/ff.c: 4578:    if (fp->flag & 0x80) {
 39110   0124A2  EE20 F00E          	lfsr	2,14
 39111   0124A6  5162               	movf	f_lseek@fp& (0+255),w,b
 39112   0124A8  26D9               	addwf	fsr2l,f,c
 39113   0124AA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39114   0124AC  22DA               	addwfc	fsr2h,f,c
 39115   0124AE  AEDF               	btfss	indf2,7,c
 39116   0124B0  EF5C  F092         	goto	u31461
 39117   0124B4  EF5E  F092         	goto	u31460
 39118   0124B8                     u31461:
 39119   0124B8  EF9B  F092         	goto	l22961
 39120   0124BC                     u31460:
 39121   0124BC                     
 39122                           ; BSR set to: 6
 39123                           ;../fatfs/ff.c: 4579:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 39124   0124BC  0E22               	movlw	34
 39125   0124BE  2562               	addwf	f_lseek@fp& (0+255),w,b
 39126   0124C0  6F00               	movwf	disk_write@buff& (0+255),b
 39127   0124C2  0E00               	movlw	0
 39128   0124C4  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 39129   0124C6  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 39130   0124C8  EE20 F018          	lfsr	2,24
 39131   0124CC  5162               	movf	f_lseek@fp& (0+255),w,b
 39132   0124CE  26D9               	addwf	fsr2l,f,c
 39133   0124D0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39134   0124D2  22DA               	addwfc	fsr2h,f,c
 39135   0124D4  C4DE F602          	movff	postinc2,disk_write@sector
 39136   0124D8  C4DE F603          	movff	postinc2,disk_write@sector+1
 39137   0124DC  C4DE F604          	movff	postinc2,disk_write@sector+2
 39138   0124E0  C4DE F605          	movff	postinc2,disk_write@sector+3
 39139   0124E4  0E00               	movlw	0
 39140   0124E6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 39141   0124E8  0E01               	movlw	1
 39142   0124EA  6F06               	movwf	disk_write@count& (0+255),b
 39143   0124EC  EE20 F001          	lfsr	2,1
 39144   0124F0  5185               	movf	f_lseek@fs& (0+255),w,b
 39145   0124F2  26D9               	addwf	fsr2l,f,c
 39146   0124F4  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 39147   0124F6  22DA               	addwfc	fsr2h,f,c
 39148   0124F8  50DF               	movf	indf2,w,c
 39149   0124FA  EC7E  F0F3         	call	_disk_write
 39150   0124FE  0900               	iorlw	0
 39151   012500  B4D8               	btfsc	status,2,c
 39152   012502  EF85  F092         	goto	u31471
 39153   012506  EF87  F092         	goto	u31470
 39154   01250A                     u31471:
 39155   01250A  EF92  F092         	goto	l22959
 39156   01250E                     u31470:
 39157   01250E  0106               	movlb	6	; () banked
 39158   012510  EE20 F00F          	lfsr	2,15
 39159   012514  5162               	movf	f_lseek@fp& (0+255),w,b
 39160   012516  26D9               	addwf	fsr2l,f,c
 39161   012518  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39162   01251A  22DA               	addwfc	fsr2h,f,c
 39163   01251C  0E01               	movlw	1
 39164   01251E  6EDF               	movwf	indf2,c
 39165   012520  EF86  F090         	goto	l22869
 39166   012524                     l22959:
 39167                           
 39168                           ;../fatfs/ff.c: 4580:     fp->flag &= (BYTE)~0x80;
 39169   012524  0106               	movlb	6	; () banked
 39170   012526  EE20 F00E          	lfsr	2,14
 39171   01252A  5162               	movf	f_lseek@fp& (0+255),w,b
 39172   01252C  26D9               	addwf	fsr2l,f,c
 39173   01252E  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39174   012530  22DA               	addwfc	fsr2h,f,c
 39175   012532  0E7F               	movlw	127
 39176   012534  16DF               	andwf	indf2,f,c
 39177   012536                     l22961:
 39178                           
 39179                           ; BSR set to: 6
 39180                           ;../fatfs/ff.c: 4583:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 39181   012536  0E22               	movlw	34
 39182   012538  2562               	addwf	f_lseek@fp& (0+255),w,b
 39183   01253A  6F00               	movwf	disk_read@buff& (0+255),b
 39184   01253C  0E00               	movlw	0
 39185   01253E  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 39186   012540  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 39187   012542  C67C  F602         	movff	f_lseek@nsect,disk_read@sector
 39188   012546  C67D  F603         	movff	f_lseek@nsect+1,disk_read@sector+1
 39189   01254A  C67E  F604         	movff	f_lseek@nsect+2,disk_read@sector+2
 39190   01254E  C67F  F605         	movff	f_lseek@nsect+3,disk_read@sector+3
 39191   012552  0E00               	movlw	0
 39192   012554  6F07               	movwf	(disk_read@count+1)& (0+255),b
 39193   012556  0E01               	movlw	1
 39194   012558  6F06               	movwf	disk_read@count& (0+255),b
 39195   01255A  EE20 F001          	lfsr	2,1
 39196   01255E  5185               	movf	f_lseek@fs& (0+255),w,b
 39197   012560  26D9               	addwf	fsr2l,f,c
 39198   012562  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 39199   012564  22DA               	addwfc	fsr2h,f,c
 39200   012566  50DF               	movf	indf2,w,c
 39201   012568  ECD5  F0F3         	call	_disk_read
 39202   01256C  0900               	iorlw	0
 39203   01256E  B4D8               	btfsc	status,2,c
 39204   012570  EFBC  F092         	goto	u31481
 39205   012574  EFBE  F092         	goto	u31480
 39206   012578                     u31481:
 39207   012578  EFC9  F092         	goto	l22969
 39208   01257C                     u31480:
 39209   01257C  0106               	movlb	6	; () banked
 39210   01257E  EE20 F00F          	lfsr	2,15
 39211   012582  5162               	movf	f_lseek@fp& (0+255),w,b
 39212   012584  26D9               	addwf	fsr2l,f,c
 39213   012586  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39214   012588  22DA               	addwfc	fsr2h,f,c
 39215   01258A  0E01               	movlw	1
 39216   01258C  6EDF               	movwf	indf2,c
 39217   01258E  EF86  F090         	goto	l22869
 39218   012592                     l22969:
 39219                           
 39220                           ;../fatfs/ff.c: 4585:    fp->sect = nsect;
 39221   012592  0106               	movlb	6	; () banked
 39222   012594  EE20 F018          	lfsr	2,24
 39223   012598  5162               	movf	f_lseek@fp& (0+255),w,b
 39224   01259A  26D9               	addwf	fsr2l,f,c
 39225   01259C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 39226   01259E  22DA               	addwfc	fsr2h,f,c
 39227   0125A0  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 39228   0125A4  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 39229   0125A8  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 39230   0125AC  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 39231   0125B0  EFFF  F08E         	goto	l22831
 39232   0125B4                     l2054:
 39233                           
 39234                           ; BSR set to: 6
 39235   0125B4  0012               	return		;funcret
 39236   0125B6                     __end_of_f_lseek:
 39237                           	callstack 0
 39238                           
 39239 ;; *************** function _create_chain *****************
 39240 ;; Defined at:
 39241 ;;		line 1525 in file "../fatfs/ff.c"
 39242 ;; Parameters:    Size  Location     Type
 39243 ;;  obj             2   69[BANK6 ] PTR struct .
 39244 ;;		 -> pb$fp(2), f_rename@djn(40), f_rename@djo(40), f_mkdir@sobj(14), 
 39245 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), 
 39246 ;;		 -> f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), scan_files1@dir(40), 
 39247 ;;		 -> scan_files@dir(40), 
 39248 ;;  clst            4   71[BANK6 ] unsigned long 
 39249 ;; Auto vars:     Size  Location     Type
 39250 ;;  cs              4   94[BANK6 ] unsigned long 
 39251 ;;  ncl             4   88[BANK6 ] unsigned long 
 39252 ;;  scl             4   84[BANK6 ] unsigned long 
 39253 ;;  fs              2   92[BANK6 ] PTR struct .
 39254 ;;		 -> fs(564), NULL(0), 
 39255 ;;  res             1   83[BANK6 ] enum E597
 39256 ;; Return value:  Size  Location     Type
 39257 ;;                  4   69[BANK6 ] unsigned long 
 39258 ;; Registers used:
 39259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39260 ;; Tracked objects:
 39261 ;;		On entry : 0/0
 39262 ;;		On exit  : 0/0
 39263 ;;		Unchanged: 0/0
 39264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 39265 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39266 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39267 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39268 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39269 ;;Total ram usage:       29 bytes
 39270 ;; Hardware stack levels used: 1
 39271 ;; Hardware stack levels required when called: 15
 39272 ;; This function calls:
 39273 ;;		_get_fat
 39274 ;;		_put_fat
 39275 ;; This function is called by:
 39276 ;;		_dir_next
 39277 ;;		_f_write
 39278 ;;		_f_lseek
 39279 ;;		_f_mkdir
 39280 ;; This function uses a non-reentrant model
 39281 ;;
 39282                           
 39283                           	psect	text106
 39284   013AF8                     __ptext106:
 39285                           	callstack 0
 39286   013AF8                     _create_chain:
 39287                           	callstack 104
 39288   013AF8                     
 39289                           ;../fatfs/ff.c: 1526:  FFOBJID* obj,;../fatfs/ff.c: 1527:  DWORD clst;../fatfs/ff.c: 152
      +                          9: {;../fatfs/ff.c: 1530:  DWORD cs, ncl, scl;;../fatfs/ff.c: 1531:  FRESULT res;;../fat
      +                          fs/ff.c: 1532:  FATFS *fs = obj->fs;
 39290   013AF8  C645  F4D9         	movff	create_chain@obj,fsr2l
 39291   013AFC  C646  F4DA         	movff	create_chain@obj+1,fsr2h
 39292   013B00  C4DE F65C          	movff	postinc2,create_chain@fs
 39293   013B04  C4DD F65D          	movff	postdec2,create_chain@fs+1
 39294   013B08                     
 39295                           ;../fatfs/ff.c: 1535:  if (clst == 0) {
 39296   013B08  0106               	movlb	6	; () banked
 39297   013B0A  5147               	movf	create_chain@clst& (0+255),w,b
 39298   013B0C  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 39299   013B0E  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 39300   013B10  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 39301   013B12  A4D8               	btfss	status,2,c
 39302   013B14  EF8E  F09D         	goto	u28541
 39303   013B18  EF90  F09D         	goto	u28540
 39304   013B1C                     u28541:
 39305   013B1C  EFC8  F09D         	goto	l21465
 39306   013B20                     u28540:
 39307   013B20                     
 39308                           ; BSR set to: 6
 39309                           ;../fatfs/ff.c: 1536:   scl = fs->last_clst;
 39310   013B20  EE20 F00C          	lfsr	2,12
 39311   013B24  515C               	movf	create_chain@fs& (0+255),w,b
 39312   013B26  26D9               	addwf	fsr2l,f,c
 39313   013B28  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39314   013B2A  22DA               	addwfc	fsr2h,f,c
 39315   013B2C  C4DE F654          	movff	postinc2,create_chain@scl
 39316   013B30  C4DE F655          	movff	postinc2,create_chain@scl+1
 39317   013B34  C4DE F656          	movff	postinc2,create_chain@scl+2
 39318   013B38  C4DE F657          	movff	postinc2,create_chain@scl+3
 39319   013B3C                     
 39320                           ; BSR set to: 6
 39321                           ;../fatfs/ff.c: 1537:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 39322   013B3C  5154               	movf	create_chain@scl& (0+255),w,b
 39323   013B3E  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 39324   013B40  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 39325   013B42  1157               	iorwf	(create_chain@scl+3)& (0+255),w,b
 39326   013B44  B4D8               	btfsc	status,2,c
 39327   013B46  EFA7  F09D         	goto	u28551
 39328   013B4A  EFA9  F09D         	goto	u28550
 39329   013B4E                     u28551:
 39330   013B4E  EFBE  F09D         	goto	l21463
 39331   013B52                     u28550:
 39332   013B52                     
 39333                           ; BSR set to: 6
 39334   013B52  EE20 F018          	lfsr	2,24
 39335   013B56  515C               	movf	create_chain@fs& (0+255),w,b
 39336   013B58  26D9               	addwf	fsr2l,f,c
 39337   013B5A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39338   013B5C  22DA               	addwfc	fsr2h,f,c
 39339   013B5E  50DE               	movf	postinc2,w,c
 39340   013B60  5D54               	subwf	create_chain@scl& (0+255),w,b
 39341   013B62  50DE               	movf	postinc2,w,c
 39342   013B64  5955               	subwfb	(create_chain@scl+1)& (0+255),w,b
 39343   013B66  50DE               	movf	postinc2,w,c
 39344   013B68  5956               	subwfb	(create_chain@scl+2)& (0+255),w,b
 39345   013B6A  50DE               	movf	postinc2,w,c
 39346   013B6C  5957               	subwfb	(create_chain@scl+3)& (0+255),w,b
 39347   013B6E  A0D8               	btfss	status,0,c
 39348   013B70  EFBC  F09D         	goto	u28561
 39349   013B74  EFBE  F09D         	goto	u28560
 39350   013B78                     u28561:
 39351   013B78  EF2D  F09E         	goto	l21481
 39352   013B7C                     u28560:
 39353   013B7C                     l21463:
 39354                           
 39355                           ; BSR set to: 6
 39356   013B7C  0E01               	movlw	1
 39357   013B7E  6F54               	movwf	create_chain@scl& (0+255),b
 39358   013B80  0E00               	movlw	0
 39359   013B82  6F55               	movwf	(create_chain@scl+1)& (0+255),b
 39360   013B84  0E00               	movlw	0
 39361   013B86  6F56               	movwf	(create_chain@scl+2)& (0+255),b
 39362   013B88  0E00               	movlw	0
 39363   013B8A  6F57               	movwf	(create_chain@scl+3)& (0+255),b
 39364   013B8C  EF2D  F09E         	goto	l21481
 39365   013B90                     l21465:
 39366                           
 39367                           ; BSR set to: 6
 39368                           ;../fatfs/ff.c: 1540:   cs = get_fat(obj, clst);
 39369   013B90  C645  F624         	movff	create_chain@obj,get_fat@obj
 39370   013B94  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39371   013B98  C647  F626         	movff	create_chain@clst,get_fat@clst
 39372   013B9C  C648  F627         	movff	create_chain@clst+1,get_fat@clst+1
 39373   013BA0  C649  F628         	movff	create_chain@clst+2,get_fat@clst+2
 39374   013BA4  C64A  F629         	movff	create_chain@clst+3,get_fat@clst+3
 39375   013BA8  ECF7  F0B4         	call	_get_fat	;wreg free
 39376   013BAC  C624  F65E         	movff	?_get_fat,create_chain@cs
 39377   013BB0  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39378   013BB4  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39379   013BB8  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39380   013BBC                     
 39381                           ;../fatfs/ff.c: 1541:   if (cs < 2) return 1;
 39382   013BBC  0106               	movlb	6	; () banked
 39383   013BBE  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 39384   013BC0  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39385   013BC2  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39386   013BC4  E107               	bnz	u28571
 39387   013BC6  0E02               	movlw	2
 39388   013BC8  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39389   013BCA  B0D8               	btfsc	status,0,c
 39390   013BCC  EFEA  F09D         	goto	u28571
 39391   013BD0  EFEC  F09D         	goto	u28570
 39392   013BD4                     u28571:
 39393   013BD4  EFF6  F09D         	goto	l21473
 39394   013BD8                     u28570:
 39395   013BD8                     
 39396                           ; BSR set to: 6
 39397   013BD8  0E01               	movlw	1
 39398   013BDA  6F45               	movwf	?_create_chain& (0+255),b
 39399   013BDC  0E00               	movlw	0
 39400   013BDE  6F46               	movwf	(?_create_chain+1)& (0+255),b
 39401   013BE0  0E00               	movlw	0
 39402   013BE2  6F47               	movwf	(?_create_chain+2)& (0+255),b
 39403   013BE4  0E00               	movlw	0
 39404   013BE6  6F48               	movwf	(?_create_chain+3)& (0+255),b
 39405   013BE8  EF53  F0A0         	goto	l1563
 39406   013BEC                     l21473:
 39407                           
 39408                           ; BSR set to: 6
 39409                           ;../fatfs/ff.c: 1542:   if (cs == 0xFFFFFFFF) return cs;
 39410   013BEC  295E               	incf	create_chain@cs& (0+255),w,b
 39411   013BEE  E10A               	bnz	u28581
 39412   013BF0  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39413   013BF2  E108               	bnz	u28581
 39414   013BF4  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39415   013BF6  E106               	bnz	u28581
 39416   013BF8  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39417   013BFA  A4D8               	btfss	status,2,c
 39418   013BFC  EF02  F09E         	goto	u28581
 39419   013C00  EF04  F09E         	goto	u28580
 39420   013C04                     u28581:
 39421   013C04  EF0E  F09E         	goto	l21477
 39422   013C08                     u28580:
 39423   013C08                     l21475:
 39424                           
 39425                           ; BSR set to: 6
 39426   013C08  C65E  F645         	movff	create_chain@cs,?_create_chain
 39427   013C0C  C65F  F646         	movff	create_chain@cs+1,?_create_chain+1
 39428   013C10  C660  F647         	movff	create_chain@cs+2,?_create_chain+2
 39429   013C14  C661  F648         	movff	create_chain@cs+3,?_create_chain+3
 39430   013C18  EF53  F0A0         	goto	l1563
 39431   013C1C                     l21477:
 39432                           
 39433                           ; BSR set to: 6
 39434                           ;../fatfs/ff.c: 1543:   if (cs < fs->n_fatent) return cs;
 39435   013C1C  EE20 F018          	lfsr	2,24
 39436   013C20  515C               	movf	create_chain@fs& (0+255),w,b
 39437   013C22  26D9               	addwf	fsr2l,f,c
 39438   013C24  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39439   013C26  22DA               	addwfc	fsr2h,f,c
 39440   013C28  50DE               	movf	postinc2,w,c
 39441   013C2A  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39442   013C2C  50DE               	movf	postinc2,w,c
 39443   013C2E  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 39444   013C30  50DE               	movf	postinc2,w,c
 39445   013C32  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 39446   013C34  50DE               	movf	postinc2,w,c
 39447   013C36  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 39448   013C38  B0D8               	btfsc	status,0,c
 39449   013C3A  EF21  F09E         	goto	u28591
 39450   013C3E  EF23  F09E         	goto	u28590
 39451   013C42                     u28591:
 39452   013C42  EF25  F09E         	goto	l1565
 39453   013C46                     u28590:
 39454   013C46  EF04  F09E         	goto	l21475
 39455   013C4A                     l1565:
 39456                           
 39457                           ; BSR set to: 6
 39458                           ;../fatfs/ff.c: 1544:   scl = clst;
 39459   013C4A  C647  F654         	movff	create_chain@clst,create_chain@scl
 39460   013C4E  C648  F655         	movff	create_chain@clst+1,create_chain@scl+1
 39461   013C52  C649  F656         	movff	create_chain@clst+2,create_chain@scl+2
 39462   013C56  C64A  F657         	movff	create_chain@clst+3,create_chain@scl+3
 39463   013C5A                     l21481:
 39464                           
 39465                           ; BSR set to: 6
 39466                           ;../fatfs/ff.c: 1546:  if (fs->free_clst == 0) return 0;
 39467   013C5A  EE20 F010          	lfsr	2,16
 39468   013C5E  515C               	movf	create_chain@fs& (0+255),w,b
 39469   013C60  26D9               	addwf	fsr2l,f,c
 39470   013C62  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39471   013C64  22DA               	addwfc	fsr2h,f,c
 39472   013C66  50DE               	movf	postinc2,w,c
 39473   013C68  10DE               	iorwf	postinc2,w,c
 39474   013C6A  10DE               	iorwf	postinc2,w,c
 39475   013C6C  10DE               	iorwf	postinc2,w,c
 39476   013C6E  A4D8               	btfss	status,2,c
 39477   013C70  EF3C  F09E         	goto	u28601
 39478   013C74  EF3E  F09E         	goto	u28600
 39479   013C78                     u28601:
 39480   013C78  EF48  F09E         	goto	l21487
 39481   013C7C                     u28600:
 39482   013C7C                     l21483:
 39483                           
 39484                           ; BSR set to: 6
 39485   013C7C  0E00               	movlw	0
 39486   013C7E  6F45               	movwf	?_create_chain& (0+255),b
 39487   013C80  0E00               	movlw	0
 39488   013C82  6F46               	movwf	(?_create_chain+1)& (0+255),b
 39489   013C84  0E00               	movlw	0
 39490   013C86  6F47               	movwf	(?_create_chain+2)& (0+255),b
 39491   013C88  0E00               	movlw	0
 39492   013C8A  6F48               	movwf	(?_create_chain+3)& (0+255),b
 39493   013C8C  EF53  F0A0         	goto	l1563
 39494   013C90                     l21487:
 39495                           
 39496                           ; BSR set to: 6
 39497                           ;../fatfs/ff.c: 1574:  {;../fatfs/ff.c: 1575:   ncl = 0;
 39498   013C90  0E00               	movlw	0
 39499   013C92  6F58               	movwf	create_chain@ncl& (0+255),b
 39500   013C94  0E00               	movlw	0
 39501   013C96  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39502   013C98  0E00               	movlw	0
 39503   013C9A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39504   013C9C  0E00               	movlw	0
 39505   013C9E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39506   013CA0                     
 39507                           ; BSR set to: 6
 39508                           ;../fatfs/ff.c: 1576:   if (scl == clst) {
 39509   013CA0  5147               	movf	create_chain@clst& (0+255),w,b
 39510   013CA2  1954               	xorwf	create_chain@scl& (0+255),w,b
 39511   013CA4  E10D               	bnz	u28611
 39512   013CA6  5148               	movf	(create_chain@clst+1)& (0+255),w,b
 39513   013CA8  1955               	xorwf	(create_chain@scl+1)& (0+255),w,b
 39514   013CAA  E10A               	bnz	u28611
 39515   013CAC  5149               	movf	(create_chain@clst+2)& (0+255),w,b
 39516   013CAE  1956               	xorwf	(create_chain@scl+2)& (0+255),w,b
 39517   013CB0  E107               	bnz	u28611
 39518   013CB2  514A               	movf	(create_chain@clst+3)& (0+255),w,b
 39519   013CB4  1957               	xorwf	(create_chain@scl+3)& (0+255),w,b
 39520   013CB6  A4D8               	btfss	status,2,c
 39521   013CB8  EF60  F09E         	goto	u28611
 39522   013CBC  EF62  F09E         	goto	u28610
 39523   013CC0                     u28611:
 39524   013CC0  EF08  F09F         	goto	l21515
 39525   013CC4                     u28610:
 39526   013CC4                     
 39527                           ; BSR set to: 6
 39528                           ;../fatfs/ff.c: 1577:    ncl = scl + 1;
 39529   013CC4  0E01               	movlw	1
 39530   013CC6  2554               	addwf	create_chain@scl& (0+255),w,b
 39531   013CC8  6F58               	movwf	create_chain@ncl& (0+255),b
 39532   013CCA  0E00               	movlw	0
 39533   013CCC  2155               	addwfc	(create_chain@scl+1)& (0+255),w,b
 39534   013CCE  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39535   013CD0  0E00               	movlw	0
 39536   013CD2  2156               	addwfc	(create_chain@scl+2)& (0+255),w,b
 39537   013CD4  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39538   013CD6  0E00               	movlw	0
 39539   013CD8  2157               	addwfc	(create_chain@scl+3)& (0+255),w,b
 39540   013CDA  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39541   013CDC                     
 39542                           ; BSR set to: 6
 39543                           ;../fatfs/ff.c: 1578:    if (ncl >= fs->n_fatent) ncl = 2;
 39544   013CDC  EE20 F018          	lfsr	2,24
 39545   013CE0  515C               	movf	create_chain@fs& (0+255),w,b
 39546   013CE2  26D9               	addwf	fsr2l,f,c
 39547   013CE4  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39548   013CE6  22DA               	addwfc	fsr2h,f,c
 39549   013CE8  50DE               	movf	postinc2,w,c
 39550   013CEA  5D58               	subwf	create_chain@ncl& (0+255),w,b
 39551   013CEC  50DE               	movf	postinc2,w,c
 39552   013CEE  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 39553   013CF0  50DE               	movf	postinc2,w,c
 39554   013CF2  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 39555   013CF4  50DE               	movf	postinc2,w,c
 39556   013CF6  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 39557   013CF8  A0D8               	btfss	status,0,c
 39558   013CFA  EF81  F09E         	goto	u28621
 39559   013CFE  EF83  F09E         	goto	u28620
 39560   013D02                     u28621:
 39561   013D02  EF8B  F09E         	goto	l21497
 39562   013D06                     u28620:
 39563   013D06                     
 39564                           ; BSR set to: 6
 39565   013D06  0E02               	movlw	2
 39566   013D08  6F58               	movwf	create_chain@ncl& (0+255),b
 39567   013D0A  0E00               	movlw	0
 39568   013D0C  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39569   013D0E  0E00               	movlw	0
 39570   013D10  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39571   013D12  0E00               	movlw	0
 39572   013D14  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39573   013D16                     l21497:
 39574                           
 39575                           ; BSR set to: 6
 39576                           ;../fatfs/ff.c: 1579:    cs = get_fat(obj, ncl);
 39577   013D16  C645  F624         	movff	create_chain@obj,get_fat@obj
 39578   013D1A  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39579   013D1E  C658  F626         	movff	create_chain@ncl,get_fat@clst
 39580   013D22  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 39581   013D26  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 39582   013D2A  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 39583   013D2E  ECF7  F0B4         	call	_get_fat	;wreg free
 39584   013D32  C624  F65E         	movff	?_get_fat,create_chain@cs
 39585   013D36  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39586   013D3A  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39587   013D3E  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39588   013D42                     
 39589                           ;../fatfs/ff.c: 1580:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 39590   013D42  0106               	movlb	6	; () banked
 39591   013D44  055E               	decf	create_chain@cs& (0+255),w,b
 39592   013D46  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39593   013D48  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39594   013D4A  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39595   013D4C  B4D8               	btfsc	status,2,c
 39596   013D4E  EFAB  F09E         	goto	u28631
 39597   013D52  EFAD  F09E         	goto	u28630
 39598   013D56                     u28631:
 39599   013D56  EF04  F09E         	goto	l21475
 39600   013D5A                     u28630:
 39601   013D5A                     
 39602                           ; BSR set to: 6
 39603   013D5A  295E               	incf	create_chain@cs& (0+255),w,b
 39604   013D5C  E10A               	bnz	u28641
 39605   013D5E  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39606   013D60  E108               	bnz	u28641
 39607   013D62  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39608   013D64  E106               	bnz	u28641
 39609   013D66  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39610   013D68  A4D8               	btfss	status,2,c
 39611   013D6A  EFB9  F09E         	goto	u28641
 39612   013D6E  EFBB  F09E         	goto	u28640
 39613   013D72                     u28641:
 39614   013D72  EFBD  F09E         	goto	l21503
 39615   013D76                     u28640:
 39616   013D76  EF04  F09E         	goto	l21475
 39617   013D7A                     l21503:
 39618                           
 39619                           ; BSR set to: 6
 39620                           ;../fatfs/ff.c: 1581:    if (cs != 0) {
 39621   013D7A  515E               	movf	create_chain@cs& (0+255),w,b
 39622   013D7C  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39623   013D7E  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39624   013D80  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39625   013D82  B4D8               	btfsc	status,2,c
 39626   013D84  EFC6  F09E         	goto	u28651
 39627   013D88  EFC8  F09E         	goto	u28650
 39628   013D8C                     u28651:
 39629   013D8C  EF08  F09F         	goto	l21515
 39630   013D90                     u28650:
 39631   013D90                     
 39632                           ; BSR set to: 6
 39633                           ;../fatfs/ff.c: 1582:     cs = fs->last_clst;
 39634   013D90  EE20 F00C          	lfsr	2,12
 39635   013D94  515C               	movf	create_chain@fs& (0+255),w,b
 39636   013D96  26D9               	addwf	fsr2l,f,c
 39637   013D98  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39638   013D9A  22DA               	addwfc	fsr2h,f,c
 39639   013D9C  C4DE F65E          	movff	postinc2,create_chain@cs
 39640   013DA0  C4DE F65F          	movff	postinc2,create_chain@cs+1
 39641   013DA4  C4DE F660          	movff	postinc2,create_chain@cs+2
 39642   013DA8  C4DE F661          	movff	postinc2,create_chain@cs+3
 39643   013DAC                     
 39644                           ; BSR set to: 6
 39645                           ;../fatfs/ff.c: 1583:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 39646   013DAC  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 39647   013DAE  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39648   013DB0  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39649   013DB2  E109               	bnz	u28660
 39650   013DB4  0E02               	movlw	2
 39651   013DB6  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39652   013DB8  A0D8               	btfss	status,0,c
 39653   013DBA  EFE1  F09E         	goto	u28661
 39654   013DBE  EFE3  F09E         	goto	u28660
 39655   013DC2                     u28661:
 39656   013DC2  EF00  F09F         	goto	l21513
 39657   013DC6                     u28660:
 39658   013DC6                     
 39659                           ; BSR set to: 6
 39660   013DC6  EE20 F018          	lfsr	2,24
 39661   013DCA  515C               	movf	create_chain@fs& (0+255),w,b
 39662   013DCC  26D9               	addwf	fsr2l,f,c
 39663   013DCE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39664   013DD0  22DA               	addwfc	fsr2h,f,c
 39665   013DD2  50DE               	movf	postinc2,w,c
 39666   013DD4  5D5E               	subwf	create_chain@cs& (0+255),w,b
 39667   013DD6  50DE               	movf	postinc2,w,c
 39668   013DD8  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 39669   013DDA  50DE               	movf	postinc2,w,c
 39670   013DDC  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 39671   013DDE  50DE               	movf	postinc2,w,c
 39672   013DE0  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 39673   013DE2  B0D8               	btfsc	status,0,c
 39674   013DE4  EFF6  F09E         	goto	u28671
 39675   013DE8  EFF8  F09E         	goto	u28670
 39676   013DEC                     u28671:
 39677   013DEC  EF00  F09F         	goto	l21513
 39678   013DF0                     u28670:
 39679   013DF0                     
 39680                           ; BSR set to: 6
 39681   013DF0  C65E  F654         	movff	create_chain@cs,create_chain@scl
 39682   013DF4  C65F  F655         	movff	create_chain@cs+1,create_chain@scl+1
 39683   013DF8  C660  F656         	movff	create_chain@cs+2,create_chain@scl+2
 39684   013DFC  C661  F657         	movff	create_chain@cs+3,create_chain@scl+3
 39685   013E00                     l21513:
 39686                           
 39687                           ; BSR set to: 6
 39688                           ;../fatfs/ff.c: 1584:     ncl = 0;
 39689   013E00  0E00               	movlw	0
 39690   013E02  6F58               	movwf	create_chain@ncl& (0+255),b
 39691   013E04  0E00               	movlw	0
 39692   013E06  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39693   013E08  0E00               	movlw	0
 39694   013E0A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39695   013E0C  0E00               	movlw	0
 39696   013E0E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39697   013E10                     l21515:
 39698                           
 39699                           ; BSR set to: 6
 39700                           ;../fatfs/ff.c: 1587:   if (ncl == 0) {
 39701   013E10  5158               	movf	create_chain@ncl& (0+255),w,b
 39702   013E12  1159               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 39703   013E14  115A               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 39704   013E16  115B               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 39705   013E18  A4D8               	btfss	status,2,c
 39706   013E1A  EF11  F09F         	goto	u28681
 39707   013E1E  EF13  F09F         	goto	u28680
 39708   013E22                     u28681:
 39709   013E22  EFA0  F09F         	goto	l21547
 39710   013E26                     u28680:
 39711   013E26                     
 39712                           ; BSR set to: 6
 39713                           ;../fatfs/ff.c: 1588:    ncl = scl;
 39714   013E26  C654  F658         	movff	create_chain@scl,create_chain@ncl
 39715   013E2A  C655  F659         	movff	create_chain@scl+1,create_chain@ncl+1
 39716   013E2E  C656  F65A         	movff	create_chain@scl+2,create_chain@ncl+2
 39717   013E32  C657  F65B         	movff	create_chain@scl+3,create_chain@ncl+3
 39718   013E36                     l21519:
 39719                           
 39720                           ; BSR set to: 6
 39721                           ;../fatfs/ff.c: 1590:     ncl++;
 39722   013E36  0E01               	movlw	1
 39723   013E38  2758               	addwf	create_chain@ncl& (0+255),f,b
 39724   013E3A  0E00               	movlw	0
 39725   013E3C  2359               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 39726   013E3E  235A               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 39727   013E40  235B               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 39728   013E42                     
 39729                           ; BSR set to: 6
 39730                           ;../fatfs/ff.c: 1591:     if (ncl >= fs->n_fatent) {
 39731   013E42  EE20 F018          	lfsr	2,24
 39732   013E46  515C               	movf	create_chain@fs& (0+255),w,b
 39733   013E48  26D9               	addwf	fsr2l,f,c
 39734   013E4A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39735   013E4C  22DA               	addwfc	fsr2h,f,c
 39736   013E4E  50DE               	movf	postinc2,w,c
 39737   013E50  5D58               	subwf	create_chain@ncl& (0+255),w,b
 39738   013E52  50DE               	movf	postinc2,w,c
 39739   013E54  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 39740   013E56  50DE               	movf	postinc2,w,c
 39741   013E58  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 39742   013E5A  50DE               	movf	postinc2,w,c
 39743   013E5C  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 39744   013E5E  A0D8               	btfss	status,0,c
 39745   013E60  EF34  F09F         	goto	u28691
 39746   013E64  EF36  F09F         	goto	u28690
 39747   013E68                     u28691:
 39748   013E68  EF4D  F09F         	goto	l21531
 39749   013E6C                     u28690:
 39750   013E6C                     
 39751                           ; BSR set to: 6
 39752                           ;../fatfs/ff.c: 1592:      ncl = 2;
 39753   013E6C  0E02               	movlw	2
 39754   013E6E  6F58               	movwf	create_chain@ncl& (0+255),b
 39755   013E70  0E00               	movlw	0
 39756   013E72  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 39757   013E74  0E00               	movlw	0
 39758   013E76  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 39759   013E78  0E00               	movlw	0
 39760   013E7A  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 39761   013E7C                     
 39762                           ; BSR set to: 6
 39763                           ;../fatfs/ff.c: 1593:      if (ncl > scl) return 0;
 39764   013E7C  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 39765   013E7E  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 39766   013E80  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 39767   013E82  E107               	bnz	u28701
 39768   013E84  0E02               	movlw	2
 39769   013E86  5D54               	subwf	create_chain@scl& (0+255),w,b
 39770   013E88  B0D8               	btfsc	status,0,c
 39771   013E8A  EF49  F09F         	goto	u28701
 39772   013E8E  EF4B  F09F         	goto	u28700
 39773   013E92                     u28701:
 39774   013E92  EF4D  F09F         	goto	l21531
 39775   013E96                     u28700:
 39776   013E96  EF3E  F09E         	goto	l21483
 39777   013E9A                     l21531:
 39778                           
 39779                           ; BSR set to: 6
 39780                           ;../fatfs/ff.c: 1595:     cs = get_fat(obj, ncl);
 39781   013E9A  C645  F624         	movff	create_chain@obj,get_fat@obj
 39782   013E9E  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 39783   013EA2  C658  F626         	movff	create_chain@ncl,get_fat@clst
 39784   013EA6  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 39785   013EAA  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 39786   013EAE  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 39787   013EB2  ECF7  F0B4         	call	_get_fat	;wreg free
 39788   013EB6  C624  F65E         	movff	?_get_fat,create_chain@cs
 39789   013EBA  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 39790   013EBE  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 39791   013EC2  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 39792   013EC6                     
 39793                           ;../fatfs/ff.c: 1596:     if (cs == 0) break;
 39794   013EC6  0106               	movlb	6	; () banked
 39795   013EC8  515E               	movf	create_chain@cs& (0+255),w,b
 39796   013ECA  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39797   013ECC  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39798   013ECE  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39799   013ED0  A4D8               	btfss	status,2,c
 39800   013ED2  EF6D  F09F         	goto	u28711
 39801   013ED6  EF6F  F09F         	goto	u28710
 39802   013EDA                     u28711:
 39803   013EDA  EF71  F09F         	goto	l21537
 39804   013EDE                     u28710:
 39805   013EDE  EFA0  F09F         	goto	l21547
 39806   013EE2                     l21537:
 39807                           
 39808                           ; BSR set to: 6
 39809                           ;../fatfs/ff.c: 1597:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 39810   013EE2  055E               	decf	create_chain@cs& (0+255),w,b
 39811   013EE4  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 39812   013EE6  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 39813   013EE8  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 39814   013EEA  B4D8               	btfsc	status,2,c
 39815   013EEC  EF7A  F09F         	goto	u28721
 39816   013EF0  EF7C  F09F         	goto	u28720
 39817   013EF4                     u28721:
 39818   013EF4  EF04  F09E         	goto	l21475
 39819   013EF8                     u28720:
 39820   013EF8                     
 39821                           ; BSR set to: 6
 39822   013EF8  295E               	incf	create_chain@cs& (0+255),w,b
 39823   013EFA  E10A               	bnz	u28731
 39824   013EFC  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 39825   013EFE  E108               	bnz	u28731
 39826   013F00  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 39827   013F02  E106               	bnz	u28731
 39828   013F04  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 39829   013F06  A4D8               	btfss	status,2,c
 39830   013F08  EF88  F09F         	goto	u28731
 39831   013F0C  EF8A  F09F         	goto	u28730
 39832   013F10                     u28731:
 39833   013F10  EF8C  F09F         	goto	l21541
 39834   013F14                     u28730:
 39835   013F14  EF04  F09E         	goto	l21475
 39836   013F18                     l21541:
 39837                           
 39838                           ; BSR set to: 6
 39839                           ;../fatfs/ff.c: 1598:     if (ncl == scl) return 0;
 39840   013F18  5154               	movf	create_chain@scl& (0+255),w,b
 39841   013F1A  1958               	xorwf	create_chain@ncl& (0+255),w,b
 39842   013F1C  E10D               	bnz	u28741
 39843   013F1E  5155               	movf	(create_chain@scl+1)& (0+255),w,b
 39844   013F20  1959               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 39845   013F22  E10A               	bnz	u28741
 39846   013F24  5156               	movf	(create_chain@scl+2)& (0+255),w,b
 39847   013F26  195A               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 39848   013F28  E107               	bnz	u28741
 39849   013F2A  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 39850   013F2C  195B               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 39851   013F2E  A4D8               	btfss	status,2,c
 39852   013F30  EF9C  F09F         	goto	u28741
 39853   013F34  EF9E  F09F         	goto	u28740
 39854   013F38                     u28741:
 39855   013F38  EF1B  F09F         	goto	l21519
 39856   013F3C                     u28740:
 39857   013F3C  EF3E  F09E         	goto	l21483
 39858   013F40                     l21547:
 39859                           
 39860                           ; BSR set to: 6
 39861                           ;../fatfs/ff.c: 1601:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 39862   013F40  C65C  F624         	movff	create_chain@fs,put_fat@fs
 39863   013F44  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 39864   013F48  C658  F626         	movff	create_chain@ncl,put_fat@clst
 39865   013F4C  C659  F627         	movff	create_chain@ncl+1,put_fat@clst+1
 39866   013F50  C65A  F628         	movff	create_chain@ncl+2,put_fat@clst+2
 39867   013F54  C65B  F629         	movff	create_chain@ncl+3,put_fat@clst+3
 39868   013F58  0EFF               	movlw	255
 39869   013F5A  6F2A               	movwf	put_fat@val& (0+255),b
 39870   013F5C  0EFF               	movlw	255
 39871   013F5E  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 39872   013F60  0EFF               	movlw	255
 39873   013F62  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 39874   013F64  0EFF               	movlw	255
 39875   013F66  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 39876   013F68  EC54  F0A0         	call	_put_fat	;wreg free
 39877   013F6C  0106               	movlb	6	; () banked
 39878   013F6E  6F53               	movwf	create_chain@res& (0+255),b
 39879   013F70                     
 39880                           ; BSR set to: 6
 39881                           ;../fatfs/ff.c: 1602:   if (res == FR_OK && clst != 0) {
 39882   013F70  5153               	movf	create_chain@res& (0+255),w,b
 39883   013F72  A4D8               	btfss	status,2,c
 39884   013F74  EFBE  F09F         	goto	u28751
 39885   013F78  EFC0  F09F         	goto	u28750
 39886   013F7C                     u28751:
 39887   013F7C  EFE3  F09F         	goto	l21555
 39888   013F80                     u28750:
 39889   013F80                     
 39890                           ; BSR set to: 6
 39891   013F80  5147               	movf	create_chain@clst& (0+255),w,b
 39892   013F82  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 39893   013F84  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 39894   013F86  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 39895   013F88  B4D8               	btfsc	status,2,c
 39896   013F8A  EFC9  F09F         	goto	u28761
 39897   013F8E  EFCB  F09F         	goto	u28760
 39898   013F92                     u28761:
 39899   013F92  EFE3  F09F         	goto	l21555
 39900   013F96                     u28760:
 39901   013F96                     
 39902                           ; BSR set to: 6
 39903                           ;../fatfs/ff.c: 1603:    res = put_fat(fs, clst, ncl);
 39904   013F96  C65C  F624         	movff	create_chain@fs,put_fat@fs
 39905   013F9A  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 39906   013F9E  C647  F626         	movff	create_chain@clst,put_fat@clst
 39907   013FA2  C648  F627         	movff	create_chain@clst+1,put_fat@clst+1
 39908   013FA6  C649  F628         	movff	create_chain@clst+2,put_fat@clst+2
 39909   013FAA  C64A  F629         	movff	create_chain@clst+3,put_fat@clst+3
 39910   013FAE  C658  F62A         	movff	create_chain@ncl,put_fat@val
 39911   013FB2  C659  F62B         	movff	create_chain@ncl+1,put_fat@val+1
 39912   013FB6  C65A  F62C         	movff	create_chain@ncl+2,put_fat@val+2
 39913   013FBA  C65B  F62D         	movff	create_chain@ncl+3,put_fat@val+3
 39914   013FBE  EC54  F0A0         	call	_put_fat	;wreg free
 39915   013FC2  0106               	movlb	6	; () banked
 39916   013FC4  6F53               	movwf	create_chain@res& (0+255),b
 39917   013FC6                     l21555:
 39918                           
 39919                           ; BSR set to: 6
 39920                           ;../fatfs/ff.c: 1605:  };../fatfs/ff.c: 1607:  if (res == FR_OK) {
 39921   013FC6  5153               	movf	create_chain@res& (0+255),w,b
 39922   013FC8  A4D8               	btfss	status,2,c
 39923   013FCA  EFE9  F09F         	goto	u28771
 39924   013FCE  EFEB  F09F         	goto	u28770
 39925   013FD2                     u28771:
 39926   013FD2  EF35  F0A0         	goto	l21563
 39927   013FD6                     u28770:
 39928   013FD6                     
 39929                           ; BSR set to: 6
 39930                           ;../fatfs/ff.c: 1608:   fs->last_clst = ncl;
 39931   013FD6  EE20 F00C          	lfsr	2,12
 39932   013FDA  515C               	movf	create_chain@fs& (0+255),w,b
 39933   013FDC  26D9               	addwf	fsr2l,f,c
 39934   013FDE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39935   013FE0  22DA               	addwfc	fsr2h,f,c
 39936   013FE2  C658  F4DE         	movff	create_chain@ncl,postinc2
 39937   013FE6  C659  F4DE         	movff	create_chain@ncl+1,postinc2
 39938   013FEA  C65A  F4DE         	movff	create_chain@ncl+2,postinc2
 39939   013FEE  C65B  F4DE         	movff	create_chain@ncl+3,postinc2
 39940   013FF2                     
 39941                           ; BSR set to: 6
 39942                           ;../fatfs/ff.c: 1609:   if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 39943   013FF2  EE20 F010          	lfsr	2,16
 39944   013FF6  515C               	movf	create_chain@fs& (0+255),w,b
 39945   013FF8  26D9               	addwf	fsr2l,f,c
 39946   013FFA  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39947   013FFC  22DA               	addwfc	fsr2h,f,c
 39948   013FFE  EE10 F018          	lfsr	1,24
 39949   014002  515C               	movf	create_chain@fs& (0+255),w,b
 39950   014004  26E1               	addwf	fsr1l,f,c
 39951   014006  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39952   014008  22E2               	addwfc	fsr1h,f,c
 39953   01400A  0EFE               	movlw	254
 39954   01400C  24E6               	addwf	postinc1,w,c
 39955   01400E  6F4F               	movwf	(??_create_chain+4)& (0+255),b
 39956   014010  0EFF               	movlw	255
 39957   014012  20E6               	addwfc	postinc1,w,c
 39958   014014  6F50               	movwf	(??_create_chain+5)& (0+255),b
 39959   014016  0EFF               	movlw	255
 39960   014018  20E6               	addwfc	postinc1,w,c
 39961   01401A  6F51               	movwf	(??_create_chain+6)& (0+255),b
 39962   01401C  0EFF               	movlw	255
 39963   01401E  20E6               	addwfc	postinc1,w,c
 39964   014020  6F52               	movwf	(??_create_chain+7)& (0+255),b
 39965   014022  50DE               	movf	postinc2,w,c
 39966   014024  5D4F               	subwf	(??_create_chain+4)& (0+255),w,b
 39967   014026  50DE               	movf	postinc2,w,c
 39968   014028  5950               	subwfb	(??_create_chain+5)& (0+255),w,b
 39969   01402A  50DE               	movf	postinc2,w,c
 39970   01402C  5951               	subwfb	(??_create_chain+6)& (0+255),w,b
 39971   01402E  50DE               	movf	postinc2,w,c
 39972   014030  5952               	subwfb	(??_create_chain+7)& (0+255),w,b
 39973   014032  A0D8               	btfss	status,0,c
 39974   014034  EF1E  F0A0         	goto	u28781
 39975   014038  EF20  F0A0         	goto	u28780
 39976   01403C                     u28781:
 39977   01403C  EF2B  F0A0         	goto	l1586
 39978   014040                     u28780:
 39979   014040                     
 39980                           ; BSR set to: 6
 39981   014040  EE20 F010          	lfsr	2,16
 39982   014044  515C               	movf	create_chain@fs& (0+255),w,b
 39983   014046  26D9               	addwf	fsr2l,f,c
 39984   014048  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39985   01404A  22DA               	addwfc	fsr2h,f,c
 39986   01404C  06DE               	decf	postinc2,f,c
 39987   01404E  0E00               	movlw	0
 39988   014050  5ADE               	subwfb	postinc2,f,c
 39989   014052  5ADE               	subwfb	postinc2,f,c
 39990   014054  5ADE               	subwfb	postinc2,f,c
 39991   014056                     l1586:
 39992                           
 39993                           ; BSR set to: 6
 39994                           ;../fatfs/ff.c: 1610:   fs->fsi_flag |= 1;
 39995   014056  EE20 F005          	lfsr	2,5
 39996   01405A  515C               	movf	create_chain@fs& (0+255),w,b
 39997   01405C  26D9               	addwf	fsr2l,f,c
 39998   01405E  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 39999   014060  22DA               	addwfc	fsr2h,f,c
 40000   014062  0E00               	movlw	0
 40001   014064  80DB               	bsf	plusw2,0,c
 40002                           
 40003                           ;../fatfs/ff.c: 1611:  } else {
 40004   014066  EF4B  F0A0         	goto	l1587
 40005   01406A                     l21563:
 40006                           
 40007                           ; BSR set to: 6
 40008                           ;../fatfs/ff.c: 1612:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 40009   01406A  0553               	decf	create_chain@res& (0+255),w,b
 40010   01406C  B4D8               	btfsc	status,2,c
 40011   01406E  EF3B  F0A0         	goto	u28791
 40012   014072  EF3D  F0A0         	goto	u28790
 40013   014076                     u28791:
 40014   014076  EF47  F0A0         	goto	l1589
 40015   01407A                     u28790:
 40016   01407A                     
 40017                           ; BSR set to: 6
 40018   01407A  0E01               	movlw	1
 40019   01407C  6F58               	movwf	create_chain@ncl& (0+255),b
 40020   01407E  0E00               	movlw	0
 40021   014080  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 40022   014082  0E00               	movlw	0
 40023   014084  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 40024   014086  0E00               	movlw	0
 40025   014088  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 40026   01408A  EF4B  F0A0         	goto	l1587
 40027   01408E                     l1589:
 40028                           
 40029                           ; BSR set to: 6
 40030   01408E  6958               	setf	create_chain@ncl& (0+255),b
 40031   014090  6959               	setf	(create_chain@ncl+1)& (0+255),b
 40032   014092  695A               	setf	(create_chain@ncl+2)& (0+255),b
 40033   014094  695B               	setf	(create_chain@ncl+3)& (0+255),b
 40034   014096                     l1587:
 40035                           
 40036                           ; BSR set to: 6
 40037                           ;../fatfs/ff.c: 1615:  return ncl;
 40038   014096  C658  F645         	movff	create_chain@ncl,?_create_chain
 40039   01409A  C659  F646         	movff	create_chain@ncl+1,?_create_chain+1
 40040   01409E  C65A  F647         	movff	create_chain@ncl+2,?_create_chain+2
 40041   0140A2  C65B  F648         	movff	create_chain@ncl+3,?_create_chain+3
 40042   0140A6                     l1563:
 40043                           
 40044                           ; BSR set to: 6
 40045   0140A6  0012               	return		;funcret
 40046   0140A8                     __end_of_create_chain:
 40047                           	callstack 0
 40048                           
 40049 ;; *************** function _put_fat *****************
 40050 ;; Defined at:
 40051 ;;		line 1240 in file "../fatfs/ff.c"
 40052 ;; Parameters:    Size  Location     Type
 40053 ;;  fs              2   36[BANK6 ] PTR struct .
 40054 ;;		 -> fs(564), NULL(0), 
 40055 ;;  clst            4   38[BANK6 ] unsigned long 
 40056 ;;  val             4   42[BANK6 ] unsigned long 
 40057 ;; Auto vars:     Size  Location     Type
 40058 ;;  bc              2   66[BANK6 ] unsigned int 
 40059 ;;  p               2   64[BANK6 ] PTR unsigned char 
 40060 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40061 ;;  res             1   68[BANK6 ] enum E597
 40062 ;; Return value:  Size  Location     Type
 40063 ;;                  1    wreg      enum E597
 40064 ;; Registers used:
 40065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 40066 ;; Tracked objects:
 40067 ;;		On entry : 0/0
 40068 ;;		On exit  : 0/0
 40069 ;;		Unchanged: 0/0
 40070 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40071 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40072 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40073 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40074 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40075 ;;Total ram usage:       33 bytes
 40076 ;; Hardware stack levels used: 1
 40077 ;; Hardware stack levels required when called: 14
 40078 ;; This function calls:
 40079 ;;		_ld_dword
 40080 ;;		_move_window
 40081 ;;		_st_dword
 40082 ;;		_st_word
 40083 ;; This function is called by:
 40084 ;;		_remove_chain
 40085 ;;		_create_chain
 40086 ;; This function uses a non-reentrant model
 40087 ;;
 40088                           
 40089                           	psect	text107
 40090   0140A8                     __ptext107:
 40091                           	callstack 0
 40092   0140A8                     _put_fat:
 40093                           	callstack 104
 40094   0140A8                     
 40095                           ;../fatfs/ff.c: 1241:  FATFS* fs,;../fatfs/ff.c: 1242:  DWORD clst,;../fatfs/ff.c: 1243:
      +                            DWORD val;../fatfs/ff.c: 1245: {;../fatfs/ff.c: 1246:  UINT bc;;../fatfs/ff.c: 1247:  
      +                          BYTE *p;;../fatfs/ff.c: 1248:  FRESULT res = FR_INT_ERR;
 40096   0140A8  0E02               	movlw	2
 40097   0140AA  0106               	movlb	6	; () banked
 40098   0140AC  6F44               	movwf	put_fat@res& (0+255),b
 40099   0140AE                     
 40100                           ; BSR set to: 6
 40101                           ;../fatfs/ff.c: 1251:  if (clst >= 2 && clst < fs->n_fatent) {
 40102   0140AE  5129               	movf	(put_fat@clst+3)& (0+255),w,b
 40103   0140B0  1128               	iorwf	(put_fat@clst+2)& (0+255),w,b
 40104   0140B2  1127               	iorwf	(put_fat@clst+1)& (0+255),w,b
 40105   0140B4  E109               	bnz	u28360
 40106   0140B6  0E02               	movlw	2
 40107   0140B8  5D26               	subwf	put_fat@clst& (0+255),w,b
 40108   0140BA  A0D8               	btfss	status,0,c
 40109   0140BC  EF62  F0A0         	goto	u28361
 40110   0140C0  EF64  F0A0         	goto	u28360
 40111   0140C4                     u28361:
 40112   0140C4  EFC8  F0A2         	goto	l21433
 40113   0140C8                     u28360:
 40114   0140C8                     
 40115                           ; BSR set to: 6
 40116   0140C8  EE20 F018          	lfsr	2,24
 40117   0140CC  5124               	movf	put_fat@fs& (0+255),w,b
 40118   0140CE  26D9               	addwf	fsr2l,f,c
 40119   0140D0  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40120   0140D2  22DA               	addwfc	fsr2h,f,c
 40121   0140D4  50DE               	movf	postinc2,w,c
 40122   0140D6  5D26               	subwf	put_fat@clst& (0+255),w,b
 40123   0140D8  50DE               	movf	postinc2,w,c
 40124   0140DA  5927               	subwfb	(put_fat@clst+1)& (0+255),w,b
 40125   0140DC  50DE               	movf	postinc2,w,c
 40126   0140DE  5928               	subwfb	(put_fat@clst+2)& (0+255),w,b
 40127   0140E0  50DE               	movf	postinc2,w,c
 40128   0140E2  5929               	subwfb	(put_fat@clst+3)& (0+255),w,b
 40129   0140E4  B0D8               	btfsc	status,0,c
 40130   0140E6  EF77  F0A0         	goto	u28371
 40131   0140EA  EF79  F0A0         	goto	u28370
 40132   0140EE                     u28371:
 40133   0140EE  EFC8  F0A2         	goto	l21433
 40134   0140F2                     u28370:
 40135   0140F2  EFB5  F0A2         	goto	l21431
 40136   0140F6                     l1515:
 40137                           
 40138                           ; BSR set to: 6
 40139                           ;../fatfs/ff.c: 1254:    bc = (UINT)clst; bc += bc / 2;
 40140   0140F6  C626  F642         	movff	put_fat@clst,put_fat@bc
 40141   0140FA  C627  F643         	movff	put_fat@clst+1,put_fat@bc+1
 40142   0140FE                     
 40143                           ; BSR set to: 6
 40144   0140FE  90D8               	bcf	status,0,c
 40145   014100  3143               	rrcf	(put_fat@bc+1)& (0+255),w,b
 40146   014102  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40147   014104  3142               	rrcf	put_fat@bc& (0+255),w,b
 40148   014106  6F2E               	movwf	??_put_fat& (0+255),b
 40149   014108  512E               	movf	??_put_fat& (0+255),w,b
 40150   01410A  2742               	addwf	put_fat@bc& (0+255),f,b
 40151   01410C  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40152   01410E  2343               	addwfc	(put_fat@bc+1)& (0+255),f,b
 40153   014110                     
 40154                           ; BSR set to: 6
 40155                           ;../fatfs/ff.c: 1255:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 40156   014110  C624  F61A         	movff	put_fat@fs,move_window@fs
 40157   014114  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40158   014118  EE20 F024          	lfsr	2,36
 40159   01411C  5124               	movf	put_fat@fs& (0+255),w,b
 40160   01411E  26D9               	addwf	fsr2l,f,c
 40161   014120  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40162   014122  22DA               	addwfc	fsr2h,f,c
 40163   014124  C4DE F62E          	movff	postinc2,??_put_fat
 40164   014128  C4DE F62F          	movff	postinc2,??_put_fat+1
 40165   01412C  C4DE F630          	movff	postinc2,??_put_fat+2
 40166   014130  C4DE F631          	movff	postinc2,??_put_fat+3
 40167   014134  C642  F632         	movff	put_fat@bc,??_put_fat+4
 40168   014138  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 40169   01413C  0E09               	movlw	9
 40170   01413E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40171   014140                     u28385:
 40172   014140  90D8               	bcf	status,0,c
 40173   014142  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40174   014144  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40175   014146  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 40176   014148  EFA0  F0A0         	goto	u28385
 40177   01414C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40178   01414E  252E               	addwf	??_put_fat& (0+255),w,b
 40179   014150  6F1C               	movwf	move_window@sect& (0+255),b
 40180   014152  5133               	movf	(??_put_fat+5)& (0+255),w,b
 40181   014154  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 40182   014156  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40183   014158  0E00               	movlw	0
 40184   01415A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 40185   01415C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40186   01415E  0E00               	movlw	0
 40187   014160  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40188   014162  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40189   014164  ECAB  F0EF         	call	_move_window	;wreg free
 40190   014168  0106               	movlb	6	; () banked
 40191   01416A  6F44               	movwf	put_fat@res& (0+255),b
 40192   01416C                     
 40193                           ; BSR set to: 6
 40194                           ;../fatfs/ff.c: 1256:    if (res != FR_OK) break;
 40195   01416C  5144               	movf	put_fat@res& (0+255),w,b
 40196   01416E  B4D8               	btfsc	status,2,c
 40197   014170  EFBC  F0A0         	goto	u28391
 40198   014174  EFBE  F0A0         	goto	u28390
 40199   014178                     u28391:
 40200   014178  EFC0  F0A0         	goto	l21377
 40201   01417C                     u28390:
 40202   01417C  EFC8  F0A2         	goto	l21433
 40203   014180                     l21377:
 40204                           
 40205                           ; BSR set to: 6
 40206                           ;../fatfs/ff.c: 1257:    p = fs->win + bc++ % ((UINT)512);
 40207   014180  0EFF               	movlw	255
 40208   014182  1542               	andwf	put_fat@bc& (0+255),w,b
 40209   014184  6F2E               	movwf	??_put_fat& (0+255),b
 40210   014186  0E01               	movlw	1
 40211   014188  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 40212   01418A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40213   01418C  512E               	movf	??_put_fat& (0+255),w,b
 40214   01418E  2524               	addwf	put_fat@fs& (0+255),w,b
 40215   014190  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40216   014192  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40217   014194  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40218   014196  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40219   014198  0E34               	movlw	52
 40220   01419A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 40221   01419C  6F40               	movwf	put_fat@p& (0+255),b
 40222   01419E  0E00               	movlw	0
 40223   0141A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40224   0141A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 40225   0141A4                     
 40226                           ; BSR set to: 6
 40227   0141A4  4B42               	infsnz	put_fat@bc& (0+255),f,b
 40228   0141A6  2B43               	incf	(put_fat@bc+1)& (0+255),f,b
 40229   0141A8                     
 40230                           ; BSR set to: 6
 40231                           ;../fatfs/ff.c: 1258:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 40232   0141A8  B126               	btfsc	put_fat@clst& (0+255),0,b
 40233   0141AA  EFD9  F0A0         	goto	u28401
 40234   0141AE  EFDB  F0A0         	goto	u28400
 40235   0141B2                     u28401:
 40236   0141B2  EFE0  F0A0         	goto	l21385
 40237   0141B6                     u28400:
 40238   0141B6                     
 40239                           ; BSR set to: 6
 40240   0141B6  C62A  F63C         	movff	put_fat@val,_put_fat$2200
 40241   0141BA  6B3D               	clrf	(_put_fat$2200+1)& (0+255),b
 40242   0141BC  EFFA  F0A0         	goto	l21387
 40243   0141C0                     l21385:
 40244                           
 40245                           ; BSR set to: 6
 40246   0141C0  512A               	movf	put_fat@val& (0+255),w,b
 40247   0141C2  6F2E               	movwf	??_put_fat& (0+255),b
 40248   0141C4  6B2F               	clrf	(??_put_fat+1)& (0+255),b
 40249   0141C6  3B2E               	swapf	??_put_fat& (0+255),f,b
 40250   0141C8  3B2F               	swapf	(??_put_fat+1)& (0+255),f,b
 40251   0141CA  0EF0               	movlw	240
 40252   0141CC  172F               	andwf	(??_put_fat+1)& (0+255),f,b
 40253   0141CE  512E               	movf	??_put_fat& (0+255),w,b
 40254   0141D0  0B0F               	andlw	15
 40255   0141D2  132F               	iorwf	(??_put_fat+1)& (0+255),f,b
 40256   0141D4  0EF0               	movlw	240
 40257   0141D6  172E               	andwf	??_put_fat& (0+255),f,b
 40258   0141D8  C640  F4D9         	movff	put_fat@p,fsr2l
 40259   0141DC  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40260   0141E0  50DF               	movf	indf2,w,c
 40261   0141E2  0B0F               	andlw	15
 40262   0141E4  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40263   0141E6  6B31               	clrf	(??_put_fat+3)& (0+255),b
 40264   0141E8  512E               	movf	??_put_fat& (0+255),w,b
 40265   0141EA  1130               	iorwf	(??_put_fat+2)& (0+255),w,b
 40266   0141EC  6F3C               	movwf	_put_fat$2200& (0+255),b
 40267   0141EE  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40268   0141F0  1131               	iorwf	(??_put_fat+3)& (0+255),w,b
 40269   0141F2  6F3D               	movwf	(_put_fat$2200+1)& (0+255),b
 40270   0141F4                     l21387:
 40271                           
 40272                           ; BSR set to: 6
 40273   0141F4  C640  F4D9         	movff	put_fat@p,fsr2l
 40274   0141F8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40275   0141FC  C63C  F4DF         	movff	_put_fat$2200,indf2
 40276   014200                     
 40277                           ; BSR set to: 6
 40278                           ;../fatfs/ff.c: 1259:    fs->wflag = 1;
 40279   014200  EE20 F004          	lfsr	2,4
 40280   014204  5124               	movf	put_fat@fs& (0+255),w,b
 40281   014206  26D9               	addwf	fsr2l,f,c
 40282   014208  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40283   01420A  22DA               	addwfc	fsr2h,f,c
 40284   01420C  0E01               	movlw	1
 40285   01420E  6EDF               	movwf	indf2,c
 40286   014210                     
 40287                           ; BSR set to: 6
 40288                           ;../fatfs/ff.c: 1260:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 40289   014210  C624  F61A         	movff	put_fat@fs,move_window@fs
 40290   014214  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40291   014218  EE20 F024          	lfsr	2,36
 40292   01421C  5124               	movf	put_fat@fs& (0+255),w,b
 40293   01421E  26D9               	addwf	fsr2l,f,c
 40294   014220  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40295   014222  22DA               	addwfc	fsr2h,f,c
 40296   014224  C4DE F62E          	movff	postinc2,??_put_fat
 40297   014228  C4DE F62F          	movff	postinc2,??_put_fat+1
 40298   01422C  C4DE F630          	movff	postinc2,??_put_fat+2
 40299   014230  C4DE F631          	movff	postinc2,??_put_fat+3
 40300   014234  C642  F632         	movff	put_fat@bc,??_put_fat+4
 40301   014238  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 40302   01423C  0E09               	movlw	9
 40303   01423E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40304   014240                     u28415:
 40305   014240  90D8               	bcf	status,0,c
 40306   014242  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40307   014244  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40308   014246  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 40309   014248  EF20  F0A1         	goto	u28415
 40310   01424C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40311   01424E  252E               	addwf	??_put_fat& (0+255),w,b
 40312   014250  6F1C               	movwf	move_window@sect& (0+255),b
 40313   014252  5133               	movf	(??_put_fat+5)& (0+255),w,b
 40314   014254  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 40315   014256  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40316   014258  0E00               	movlw	0
 40317   01425A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 40318   01425C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40319   01425E  0E00               	movlw	0
 40320   014260  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40321   014262  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40322   014264  ECAB  F0EF         	call	_move_window	;wreg free
 40323   014268  0106               	movlb	6	; () banked
 40324   01426A  6F44               	movwf	put_fat@res& (0+255),b
 40325   01426C                     
 40326                           ; BSR set to: 6
 40327                           ;../fatfs/ff.c: 1261:    if (res != FR_OK) break;
 40328   01426C  5144               	movf	put_fat@res& (0+255),w,b
 40329   01426E  B4D8               	btfsc	status,2,c
 40330   014270  EF3C  F0A1         	goto	u28421
 40331   014274  EF3E  F0A1         	goto	u28420
 40332   014278                     u28421:
 40333   014278  EF40  F0A1         	goto	l21397
 40334   01427C                     u28420:
 40335   01427C  EFC8  F0A2         	goto	l21433
 40336   014280                     l21397:
 40337                           
 40338                           ; BSR set to: 6
 40339                           ;../fatfs/ff.c: 1262:    p = fs->win + bc % ((UINT)512);
 40340   014280  0EFF               	movlw	255
 40341   014282  1542               	andwf	put_fat@bc& (0+255),w,b
 40342   014284  6F2E               	movwf	??_put_fat& (0+255),b
 40343   014286  0E01               	movlw	1
 40344   014288  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 40345   01428A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 40346   01428C  512E               	movf	??_put_fat& (0+255),w,b
 40347   01428E  2524               	addwf	put_fat@fs& (0+255),w,b
 40348   014290  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40349   014292  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40350   014294  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40351   014296  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40352   014298  0E34               	movlw	52
 40353   01429A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 40354   01429C  6F40               	movwf	put_fat@p& (0+255),b
 40355   01429E  0E00               	movlw	0
 40356   0142A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 40357   0142A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 40358   0142A4                     
 40359                           ; BSR set to: 6
 40360                           ;../fatfs/ff.c: 1263:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val
      +                           >> 8) & 0x0F));
 40361   0142A4  B126               	btfsc	put_fat@clst& (0+255),0,b
 40362   0142A6  EF57  F0A1         	goto	u28431
 40363   0142AA  EF59  F0A1         	goto	u28430
 40364   0142AE                     u28431:
 40365   0142AE  EF77  F0A1         	goto	l21403
 40366   0142B2                     u28430:
 40367   0142B2                     
 40368                           ; BSR set to: 6
 40369   0142B2  C62A  F62E         	movff	put_fat@val,??_put_fat
 40370   0142B6  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 40371   0142BA  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 40372   0142BE  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 40373   0142C2  C62F  F62E         	movff	??_put_fat+1,??_put_fat
 40374   0142C6  C630  F62F         	movff	??_put_fat+2,??_put_fat+1
 40375   0142CA  C631  F630         	movff	??_put_fat+3,??_put_fat+2
 40376   0142CE  6B31               	clrf	(??_put_fat+3)& (0+255),b
 40377   0142D0  0E0F               	movlw	15
 40378   0142D2  172E               	andwf	??_put_fat& (0+255),f,b
 40379   0142D4  C640  F4D9         	movff	put_fat@p,fsr2l
 40380   0142D8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40381   0142DC  50DF               	movf	indf2,w,c
 40382   0142DE  0BF0               	andlw	240
 40383   0142E0  112E               	iorwf	??_put_fat& (0+255),w,b
 40384   0142E2  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40385   0142E4  5132               	movf	(??_put_fat+4)& (0+255),w,b
 40386   0142E6  6F3E               	movwf	_put_fat$2201& (0+255),b
 40387   0142E8  6B3F               	clrf	(_put_fat$2201+1)& (0+255),b
 40388   0142EA  EF8D  F0A1         	goto	l21405
 40389   0142EE                     l21403:
 40390                           
 40391                           ; BSR set to: 6
 40392   0142EE  C62A  F62E         	movff	put_fat@val,??_put_fat
 40393   0142F2  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 40394   0142F6  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 40395   0142FA  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 40396   0142FE  0E05               	movlw	5
 40397   014300  EF87  F0A1         	goto	u28440
 40398   014304                     u28445:
 40399   014304  90D8               	bcf	status,0,c
 40400   014306  3331               	rrcf	(??_put_fat+3)& (0+255),f,b
 40401   014308  3330               	rrcf	(??_put_fat+2)& (0+255),f,b
 40402   01430A  332F               	rrcf	(??_put_fat+1)& (0+255),f,b
 40403   01430C  332E               	rrcf	??_put_fat& (0+255),f,b
 40404   01430E                     u28440:
 40405   01430E  2EE8               	decfsz	wreg,f,c
 40406   014310  EF82  F0A1         	goto	u28445
 40407   014314  512E               	movf	??_put_fat& (0+255),w,b
 40408   014316  6F3E               	movwf	_put_fat$2201& (0+255),b
 40409   014318  6B3F               	clrf	(_put_fat$2201+1)& (0+255),b
 40410   01431A                     l21405:
 40411                           
 40412                           ; BSR set to: 6
 40413   01431A  C640  F4D9         	movff	put_fat@p,fsr2l
 40414   01431E  C641  F4DA         	movff	put_fat@p+1,fsr2h
 40415   014322  C63E  F4DF         	movff	_put_fat$2201,indf2
 40416                           
 40417                           ;../fatfs/ff.c: 1264:    fs->wflag = 1;
 40418   014326  EE20 F004          	lfsr	2,4
 40419   01432A  5124               	movf	put_fat@fs& (0+255),w,b
 40420   01432C  26D9               	addwf	fsr2l,f,c
 40421   01432E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40422   014330  22DA               	addwfc	fsr2h,f,c
 40423   014332  0E01               	movlw	1
 40424   014334  6EDF               	movwf	indf2,c
 40425                           
 40426                           ;../fatfs/ff.c: 1265:    break;
 40427   014336  EFC8  F0A2         	goto	l21433
 40428   01433A                     l21407:
 40429                           
 40430                           ; BSR set to: 6
 40431                           ;../fatfs/ff.c: 1268:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)))
      +                          ;
 40432   01433A  C624  F61A         	movff	put_fat@fs,move_window@fs
 40433   01433E  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40434   014342  EE20 F024          	lfsr	2,36
 40435   014346  5124               	movf	put_fat@fs& (0+255),w,b
 40436   014348  26D9               	addwf	fsr2l,f,c
 40437   01434A  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40438   01434C  22DA               	addwfc	fsr2h,f,c
 40439   01434E  C4DE F62E          	movff	postinc2,??_put_fat
 40440   014352  C4DE F62F          	movff	postinc2,??_put_fat+1
 40441   014356  C4DE F630          	movff	postinc2,??_put_fat+2
 40442   01435A  C4DE F631          	movff	postinc2,??_put_fat+3
 40443   01435E  C626  F632         	movff	put_fat@clst,??_put_fat+4
 40444   014362  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 40445   014366  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 40446   01436A  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 40447   01436E  C633  F632         	movff	??_put_fat+5,??_put_fat+4
 40448   014372  C634  F633         	movff	??_put_fat+6,??_put_fat+5
 40449   014376  C635  F634         	movff	??_put_fat+7,??_put_fat+6
 40450   01437A  6B35               	clrf	(??_put_fat+7)& (0+255),b
 40451   01437C  512E               	movf	??_put_fat& (0+255),w,b
 40452   01437E  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40453   014380  6F1C               	movwf	move_window@sect& (0+255),b
 40454   014382  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40455   014384  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40456   014386  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40457   014388  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40458   01438A  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 40459   01438C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40460   01438E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40461   014390  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 40462   014392  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40463   014394  ECAB  F0EF         	call	_move_window	;wreg free
 40464   014398  0106               	movlb	6	; () banked
 40465   01439A  6F44               	movwf	put_fat@res& (0+255),b
 40466   01439C                     
 40467                           ; BSR set to: 6
 40468                           ;../fatfs/ff.c: 1269:    if (res != FR_OK) break;
 40469   01439C  5144               	movf	put_fat@res& (0+255),w,b
 40470   01439E  B4D8               	btfsc	status,2,c
 40471   0143A0  EFD4  F0A1         	goto	u28451
 40472   0143A4  EFD6  F0A1         	goto	u28450
 40473   0143A8                     u28451:
 40474   0143A8  EFD8  F0A1         	goto	l21413
 40475   0143AC                     u28450:
 40476   0143AC  EFC8  F0A2         	goto	l21433
 40477   0143B0                     l21413:
 40478                           
 40479                           ; BSR set to: 6
 40480                           ;../fatfs/ff.c: 1270:    st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
 40481   0143B0  C626  F62E         	movff	put_fat@clst,??_put_fat
 40482   0143B4  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40483   0143B8  90D8               	bcf	status,0,c
 40484   0143BA  372E               	rlcf	??_put_fat& (0+255),f,b
 40485   0143BC  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40486   0143BE  0EFF               	movlw	255
 40487   0143C0  152E               	andwf	??_put_fat& (0+255),w,b
 40488   0143C2  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40489   0143C4  0E01               	movlw	1
 40490   0143C6  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40491   0143C8  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40492   0143CA  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40493   0143CC  2524               	addwf	put_fat@fs& (0+255),w,b
 40494   0143CE  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40495   0143D0  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40496   0143D2  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40497   0143D4  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40498   0143D6  0E34               	movlw	52
 40499   0143D8  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40500   0143DA  6E04               	movwf	st_word@ptr^(0+1280),c
 40501   0143DC  0E00               	movlw	0
 40502   0143DE  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40503   0143E0  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 40504   0143E2  C62A  F506         	movff	put_fat@val,st_word@val
 40505   0143E6  C62B  F507         	movff	put_fat@val+1,st_word@val+1
 40506   0143EA  ECC6  F0FF         	call	_st_word	;wreg free
 40507   0143EE                     
 40508                           ;../fatfs/ff.c: 1271:    fs->wflag = 1;
 40509   0143EE  0106               	movlb	6	; () banked
 40510   0143F0  EE20 F004          	lfsr	2,4
 40511   0143F4  5124               	movf	put_fat@fs& (0+255),w,b
 40512   0143F6  26D9               	addwf	fsr2l,f,c
 40513   0143F8  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40514   0143FA  22DA               	addwfc	fsr2h,f,c
 40515   0143FC  0E01               	movlw	1
 40516   0143FE  6EDF               	movwf	indf2,c
 40517                           
 40518                           ;../fatfs/ff.c: 1272:    break;
 40519   014400  EFC8  F0A2         	goto	l21433
 40520   014404                     l21417:
 40521                           
 40522                           ; BSR set to: 6
 40523                           ;../fatfs/ff.c: 1278:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)))
      +                          ;
 40524   014404  C624  F61A         	movff	put_fat@fs,move_window@fs
 40525   014408  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 40526   01440C  EE20 F024          	lfsr	2,36
 40527   014410  5124               	movf	put_fat@fs& (0+255),w,b
 40528   014412  26D9               	addwf	fsr2l,f,c
 40529   014414  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40530   014416  22DA               	addwfc	fsr2h,f,c
 40531   014418  C4DE F62E          	movff	postinc2,??_put_fat
 40532   01441C  C4DE F62F          	movff	postinc2,??_put_fat+1
 40533   014420  C4DE F630          	movff	postinc2,??_put_fat+2
 40534   014424  C4DE F631          	movff	postinc2,??_put_fat+3
 40535   014428  C626  F632         	movff	put_fat@clst,??_put_fat+4
 40536   01442C  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 40537   014430  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 40538   014434  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 40539   014438  0E08               	movlw	8
 40540   01443A  EF24  F0A2         	goto	u28460
 40541   01443E                     u28465:
 40542   01443E  90D8               	bcf	status,0,c
 40543   014440  3335               	rrcf	(??_put_fat+7)& (0+255),f,b
 40544   014442  3334               	rrcf	(??_put_fat+6)& (0+255),f,b
 40545   014444  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 40546   014446  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 40547   014448                     u28460:
 40548   014448  2EE8               	decfsz	wreg,f,c
 40549   01444A  EF1F  F0A2         	goto	u28465
 40550   01444E  512E               	movf	??_put_fat& (0+255),w,b
 40551   014450  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40552   014452  6F1C               	movwf	move_window@sect& (0+255),b
 40553   014454  512F               	movf	(??_put_fat+1)& (0+255),w,b
 40554   014456  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40555   014458  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 40556   01445A  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40557   01445C  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 40558   01445E  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 40559   014460  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40560   014462  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 40561   014464  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 40562   014466  ECAB  F0EF         	call	_move_window	;wreg free
 40563   01446A  0106               	movlb	6	; () banked
 40564   01446C  6F44               	movwf	put_fat@res& (0+255),b
 40565   01446E                     
 40566                           ; BSR set to: 6
 40567                           ;../fatfs/ff.c: 1279:    if (res != FR_OK) break;
 40568   01446E  5144               	movf	put_fat@res& (0+255),w,b
 40569   014470  B4D8               	btfsc	status,2,c
 40570   014472  EF3D  F0A2         	goto	u28471
 40571   014476  EF3F  F0A2         	goto	u28470
 40572   01447A                     u28471:
 40573   01447A  EF41  F0A2         	goto	l21425
 40574   01447E                     u28470:
 40575   01447E  EFC8  F0A2         	goto	l21433
 40576   014482                     l21425:
 40577                           
 40578                           ; BSR set to: 6
 40579                           ;../fatfs/ff.c: 1281:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UI
      +                          NT)512)) & 0xF0000000);
 40580   014482  C626  F62E         	movff	put_fat@clst,??_put_fat
 40581   014486  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40582   01448A  90D8               	bcf	status,0,c
 40583   01448C  372E               	rlcf	??_put_fat& (0+255),f,b
 40584   01448E  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40585   014490  90D8               	bcf	status,0,c
 40586   014492  372E               	rlcf	??_put_fat& (0+255),f,b
 40587   014494  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40588   014496  0EFF               	movlw	255
 40589   014498  152E               	andwf	??_put_fat& (0+255),w,b
 40590   01449A  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40591   01449C  0E01               	movlw	1
 40592   01449E  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40593   0144A0  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40594   0144A2  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40595   0144A4  2524               	addwf	put_fat@fs& (0+255),w,b
 40596   0144A6  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40597   0144A8  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40598   0144AA  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40599   0144AC  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40600   0144AE  0E34               	movlw	52
 40601   0144B0  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40602   0144B2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 40603   0144B4  0E00               	movlw	0
 40604   0144B6  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40605   0144B8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 40606   0144BA  ECC7  F0F2         	call	_ld_dword	;wreg free
 40607   0144BE  0E00               	movlw	0
 40608   0144C0  1404               	andwf	?_ld_dword^(0+1280),w,c
 40609   0144C2  0106               	movlb	6	; () banked
 40610   0144C4  6F34               	movwf	(??_put_fat+6)& (0+255),b
 40611   0144C6  0E00               	movlw	0
 40612   0144C8  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 40613   0144CA  6F35               	movwf	(??_put_fat+7)& (0+255),b
 40614   0144CC  0E00               	movlw	0
 40615   0144CE  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 40616   0144D0  6F36               	movwf	(??_put_fat+8)& (0+255),b
 40617   0144D2  0EF0               	movlw	240
 40618   0144D4  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 40619   0144D6  6F37               	movwf	(??_put_fat+9)& (0+255),b
 40620   0144D8  0EFF               	movlw	255
 40621   0144DA  152A               	andwf	put_fat@val& (0+255),w,b
 40622   0144DC  6F38               	movwf	(??_put_fat+10)& (0+255),b
 40623   0144DE  0EFF               	movlw	255
 40624   0144E0  152B               	andwf	(put_fat@val+1)& (0+255),w,b
 40625   0144E2  6F39               	movwf	(??_put_fat+11)& (0+255),b
 40626   0144E4  0EFF               	movlw	255
 40627   0144E6  152C               	andwf	(put_fat@val+2)& (0+255),w,b
 40628   0144E8  6F3A               	movwf	(??_put_fat+12)& (0+255),b
 40629   0144EA  0E0F               	movlw	15
 40630   0144EC  152D               	andwf	(put_fat@val+3)& (0+255),w,b
 40631   0144EE  6F3B               	movwf	(??_put_fat+13)& (0+255),b
 40632   0144F0  5134               	movf	(??_put_fat+6)& (0+255),w,b
 40633   0144F2  1138               	iorwf	(??_put_fat+10)& (0+255),w,b
 40634   0144F4  6F2A               	movwf	put_fat@val& (0+255),b
 40635   0144F6  5135               	movf	(??_put_fat+7)& (0+255),w,b
 40636   0144F8  1139               	iorwf	(??_put_fat+11)& (0+255),w,b
 40637   0144FA  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 40638   0144FC  5136               	movf	(??_put_fat+8)& (0+255),w,b
 40639   0144FE  113A               	iorwf	(??_put_fat+12)& (0+255),w,b
 40640   014500  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 40641   014502  5137               	movf	(??_put_fat+9)& (0+255),w,b
 40642   014504  113B               	iorwf	(??_put_fat+13)& (0+255),w,b
 40643   014506  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 40644   014508                     
 40645                           ; BSR set to: 6
 40646                           ;../fatfs/ff.c: 1283:    st_dword(fs->win + clst * 4 % ((UINT)512), val);
 40647   014508  C626  F62E         	movff	put_fat@clst,??_put_fat
 40648   01450C  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 40649   014510  90D8               	bcf	status,0,c
 40650   014512  372E               	rlcf	??_put_fat& (0+255),f,b
 40651   014514  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40652   014516  90D8               	bcf	status,0,c
 40653   014518  372E               	rlcf	??_put_fat& (0+255),f,b
 40654   01451A  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 40655   01451C  0EFF               	movlw	255
 40656   01451E  152E               	andwf	??_put_fat& (0+255),w,b
 40657   014520  6F30               	movwf	(??_put_fat+2)& (0+255),b
 40658   014522  0E01               	movlw	1
 40659   014524  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 40660   014526  6F31               	movwf	(??_put_fat+3)& (0+255),b
 40661   014528  5130               	movf	(??_put_fat+2)& (0+255),w,b
 40662   01452A  2524               	addwf	put_fat@fs& (0+255),w,b
 40663   01452C  6F32               	movwf	(??_put_fat+4)& (0+255),b
 40664   01452E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 40665   014530  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 40666   014532  6F33               	movwf	(??_put_fat+5)& (0+255),b
 40667   014534  0E34               	movlw	52
 40668   014536  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 40669   014538  6E04               	movwf	st_dword@ptr^(0+1280),c
 40670   01453A  0E00               	movlw	0
 40671   01453C  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 40672   01453E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 40673   014540  C62A  F506         	movff	put_fat@val,st_dword@val
 40674   014544  C62B  F507         	movff	put_fat@val+1,st_dword@val+1
 40675   014548  C62C  F508         	movff	put_fat@val+2,st_dword@val+2
 40676   01454C  C62D  F509         	movff	put_fat@val+3,st_dword@val+3
 40677   014550  ECDD  F0FA         	call	_st_dword	;wreg free
 40678   014554                     
 40679                           ;../fatfs/ff.c: 1284:    fs->wflag = 1;
 40680   014554  0106               	movlb	6	; () banked
 40681   014556  EE20 F004          	lfsr	2,4
 40682   01455A  5124               	movf	put_fat@fs& (0+255),w,b
 40683   01455C  26D9               	addwf	fsr2l,f,c
 40684   01455E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 40685   014560  22DA               	addwfc	fsr2h,f,c
 40686   014562  0E01               	movlw	1
 40687   014564  6EDF               	movwf	indf2,c
 40688                           
 40689                           ;../fatfs/ff.c: 1285:    break;
 40690   014566  EFC8  F0A2         	goto	l21433
 40691   01456A                     l21431:
 40692                           
 40693                           ; BSR set to: 6
 40694   01456A  C624  F4D9         	movff	put_fat@fs,fsr2l
 40695   01456E  C625  F4DA         	movff	put_fat@fs+1,fsr2h
 40696   014572  50DF               	movf	indf2,w,c
 40697                           
 40698                           ; Switch size 1, requested type "simple"
 40699                           ; Number of cases is 3, Range of values is 1 to 3
 40700                           ; switch strategies available:
 40701                           ; Name         Instructions Cycles
 40702                           ; simple_byte           10     6 (average)
 40703                           ;	Chosen strategy is simple_byte
 40704   014574  0A01               	xorlw	1	; case 1
 40705   014576  B4D8               	btfsc	status,2,c
 40706   014578  EF7B  F0A0         	goto	l1515
 40707   01457C  0A03               	xorlw	3	; case 2
 40708   01457E  B4D8               	btfsc	status,2,c
 40709   014580  EF9D  F0A1         	goto	l21407
 40710   014584  0A01               	xorlw	1	; case 3
 40711   014586  B4D8               	btfsc	status,2,c
 40712   014588  EF02  F0A2         	goto	l21417
 40713   01458C  EFC8  F0A2         	goto	l21433
 40714   014590                     l21433:
 40715                           
 40716                           ; BSR set to: 6
 40717                           ;../fatfs/ff.c: 1288:  return res;
 40718   014590  5144               	movf	put_fat@res& (0+255),w,b
 40719   014592                     
 40720                           ; BSR set to: 6
 40721   014592  0012               	return		;funcret
 40722   014594                     __end_of_put_fat:
 40723                           	callstack 0
 40724                           
 40725 ;; *************** function _st_word *****************
 40726 ;; Defined at:
 40727 ;;		line 657 in file "../fatfs/ff.c"
 40728 ;; Parameters:    Size  Location     Type
 40729 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 40730 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40731 ;;  val             2    5[COMRAM] unsigned short 
 40732 ;; Auto vars:     Size  Location     Type
 40733 ;;		None
 40734 ;; Return value:  Size  Location     Type
 40735 ;;                  1    wreg      void 
 40736 ;; Registers used:
 40737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40738 ;; Tracked objects:
 40739 ;;		On entry : 0/0
 40740 ;;		On exit  : 0/0
 40741 ;;		Unchanged: 0/0
 40742 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40747 ;;Total ram usage:        4 bytes
 40748 ;; Hardware stack levels used: 1
 40749 ;; Hardware stack levels required when called: 1
 40750 ;; This function calls:
 40751 ;;		Nothing
 40752 ;; This function is called by:
 40753 ;;		_sync_fs
 40754 ;;		_put_fat
 40755 ;;		_st_clust
 40756 ;;		_f_sync
 40757 ;; This function uses a non-reentrant model
 40758 ;;
 40759                           
 40760                           	psect	text108
 40761   01FF8C                     __ptext108:
 40762                           	callstack 0
 40763   01FF8C                     _st_word:
 40764                           	callstack 116
 40765   01FF8C                     
 40766                           ;../fatfs/ff.c: 657: static void st_word (BYTE* ptr, WORD val);../fatfs/ff.c: 658: {;../
      +                          fatfs/ff.c: 659:  *ptr++ = (BYTE)val; val >>= 8;
 40767   01FF8C  C504  F4D9         	movff	st_word@ptr,fsr2l
 40768   01FF90  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 40769   01FF94  C506  F4DF         	movff	st_word@val,indf2
 40770   01FF98  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 40771   01FF9A  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 40772   01FF9C  5007               	movf	(st_word@val+1)^(0+1280),w,c
 40773   01FF9E  6E06               	movwf	st_word@val^(0+1280),c
 40774   01FFA0  6A07               	clrf	(st_word@val+1)^(0+1280),c
 40775   01FFA2                     
 40776                           ;../fatfs/ff.c: 660:  *ptr++ = (BYTE)val;
 40777   01FFA2  C504  F4D9         	movff	st_word@ptr,fsr2l
 40778   01FFA6  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 40779   01FFAA  C506  F4DF         	movff	st_word@val,indf2
 40780   01FFAE  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 40781   01FFB0  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 40782   01FFB2  0012               	return		;funcret
 40783   01FFB4                     __end_of_st_word:
 40784                           	callstack 0
 40785                           
 40786 ;; *************** function _st_dword *****************
 40787 ;; Defined at:
 40788 ;;		line 663 in file "../fatfs/ff.c"
 40789 ;; Parameters:    Size  Location     Type
 40790 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 40791 ;;		 -> fs$win(512), fs(564), NULL(0), 
 40792 ;;  val             4    5[COMRAM] unsigned long 
 40793 ;; Auto vars:     Size  Location     Type
 40794 ;;		None
 40795 ;; Return value:  Size  Location     Type
 40796 ;;                  1    wreg      void 
 40797 ;; Registers used:
 40798 ;;		fsr2l, fsr2h, status,2, status,0
 40799 ;; Tracked objects:
 40800 ;;		On entry : 0/0
 40801 ;;		On exit  : 0/0
 40802 ;;		Unchanged: 0/0
 40803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40808 ;;Total ram usage:        6 bytes
 40809 ;; Hardware stack levels used: 1
 40810 ;; Hardware stack levels required when called: 1
 40811 ;; This function calls:
 40812 ;;		Nothing
 40813 ;; This function is called by:
 40814 ;;		_sync_fs
 40815 ;;		_put_fat
 40816 ;;		_f_open
 40817 ;;		_f_sync
 40818 ;;		_f_mkdir
 40819 ;; This function uses a non-reentrant model
 40820 ;;
 40821                           
 40822                           	psect	text109
 40823   01F5BA                     __ptext109:
 40824                           	callstack 0
 40825   01F5BA                     _st_dword:
 40826                           	callstack 116
 40827   01F5BA                     
 40828                           ;../fatfs/ff.c: 663: static void st_dword (BYTE* ptr, DWORD val);../fatfs/ff.c: 664: {;.
      +                          ./fatfs/ff.c: 665:  *ptr++ = (BYTE)val; val >>= 8;
 40829   01F5BA  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40830   01F5BE  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40831   01F5C2  C506  F4DF         	movff	st_dword@val,indf2
 40832   01F5C6  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40833   01F5C8  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40834   01F5CA  C507  F506         	movff	st_dword@val+1,st_dword@val
 40835   01F5CE  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40836   01F5D2  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40837   01F5D6  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40838   01F5D8                     
 40839                           ;../fatfs/ff.c: 666:  *ptr++ = (BYTE)val; val >>= 8;
 40840   01F5D8  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40841   01F5DC  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40842   01F5E0  C506  F4DF         	movff	st_dword@val,indf2
 40843   01F5E4  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40844   01F5E6  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40845   01F5E8  C507  F506         	movff	st_dword@val+1,st_dword@val
 40846   01F5EC  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40847   01F5F0  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40848   01F5F4  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40849   01F5F6                     
 40850                           ;../fatfs/ff.c: 667:  *ptr++ = (BYTE)val; val >>= 8;
 40851   01F5F6  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40852   01F5FA  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40853   01F5FE  C506  F4DF         	movff	st_dword@val,indf2
 40854   01F602  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40855   01F604  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40856   01F606  C507  F506         	movff	st_dword@val+1,st_dword@val
 40857   01F60A  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 40858   01F60E  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 40859   01F612  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 40860   01F614                     
 40861                           ;../fatfs/ff.c: 668:  *ptr++ = (BYTE)val;
 40862   01F614  C504  F4D9         	movff	st_dword@ptr,fsr2l
 40863   01F618  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 40864   01F61C  C506  F4DF         	movff	st_dword@val,indf2
 40865   01F620  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 40866   01F622  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 40867   01F624  0012               	return		;funcret
 40868   01F626                     __end_of_st_dword:
 40869                           	callstack 0
 40870                           
 40871 ;; *************** function ___lldiv *****************
 40872 ;; Defined at:
 40873 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
 40874 ;; Parameters:    Size  Location     Type
 40875 ;;  dividend        4    3[COMRAM] unsigned long 
 40876 ;;  divisor         4    7[COMRAM] unsigned long 
 40877 ;; Auto vars:     Size  Location     Type
 40878 ;;  quotient        4   11[COMRAM] unsigned long 
 40879 ;;  counter         1   15[COMRAM] unsigned char 
 40880 ;; Return value:  Size  Location     Type
 40881 ;;                  4    3[COMRAM] unsigned long 
 40882 ;; Registers used:
 40883 ;;		wreg, status,2, status,0
 40884 ;; Tracked objects:
 40885 ;;		On entry : 0/0
 40886 ;;		On exit  : 0/0
 40887 ;;		Unchanged: 0/0
 40888 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 40889 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40890 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40892 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40893 ;;Total ram usage:       13 bytes
 40894 ;; Hardware stack levels used: 1
 40895 ;; Hardware stack levels required when called: 1
 40896 ;; This function calls:
 40897 ;;		Nothing
 40898 ;; This function is called by:
 40899 ;;		_mount_volume
 40900 ;;		_f_lseek
 40901 ;; This function uses a non-reentrant model
 40902 ;;
 40903                           
 40904                           	psect	text110
 40905   01EAFC                     __ptext110:
 40906                           	callstack 0
 40907   01EAFC                     ___lldiv:
 40908                           	callstack 118
 40909   01EAFC  0E00               	movlw	0
 40910   01EAFE  6E0C               	movwf	___lldiv@quotient^(0+1280),c
 40911   01EB00  0E00               	movlw	0
 40912   01EB02  6E0D               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40913   01EB04  0E00               	movlw	0
 40914   01EB06  6E0E               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40915   01EB08  0E00               	movlw	0
 40916   01EB0A  6E0F               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40917   01EB0C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40918   01EB0E  1009               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40919   01EB10  100A               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40920   01EB12  100B               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40921   01EB14  B4D8               	btfsc	status,2,c
 40922   01EB16  EF8F  F0F5         	goto	u30431
 40923   01EB1A  EF91  F0F5         	goto	u30430
 40924   01EB1E                     u30431:
 40925   01EB1E  EFC7  F0F5         	goto	l2654
 40926   01EB22                     u30430:
 40927   01EB22  0E01               	movlw	1
 40928   01EB24  6E10               	movwf	___lldiv@counter^(0+1280),c
 40929   01EB26  EF9B  F0F5         	goto	l22383
 40930   01EB2A                     l22381:
 40931   01EB2A  90D8               	bcf	status,0,c
 40932   01EB2C  3608               	rlcf	___lldiv@divisor^(0+1280),f,c
 40933   01EB2E  3609               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40934   01EB30  360A               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40935   01EB32  360B               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40936   01EB34  2A10               	incf	___lldiv@counter^(0+1280),f,c
 40937   01EB36                     l22383:
 40938   01EB36  AE0B               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40939   01EB38  EFA0  F0F5         	goto	u30441
 40940   01EB3C  EFA2  F0F5         	goto	u30440
 40941   01EB40                     u30441:
 40942   01EB40  EF95  F0F5         	goto	l22381
 40943   01EB44                     u30440:
 40944   01EB44                     l22385:
 40945   01EB44  90D8               	bcf	status,0,c
 40946   01EB46  360C               	rlcf	___lldiv@quotient^(0+1280),f,c
 40947   01EB48  360D               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40948   01EB4A  360E               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40949   01EB4C  360F               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40950   01EB4E  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40951   01EB50  5C04               	subwf	___lldiv@dividend^(0+1280),w,c
 40952   01EB52  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40953   01EB54  5805               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40954   01EB56  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40955   01EB58  5806               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40956   01EB5A  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40957   01EB5C  5807               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40958   01EB5E  A0D8               	btfss	status,0,c
 40959   01EB60  EFB4  F0F5         	goto	u30451
 40960   01EB64  EFB6  F0F5         	goto	u30450
 40961   01EB68                     u30451:
 40962   01EB68  EFBF  F0F5         	goto	l22393
 40963   01EB6C                     u30450:
 40964   01EB6C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 40965   01EB6E  5E04               	subwf	___lldiv@dividend^(0+1280),f,c
 40966   01EB70  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40967   01EB72  5A05               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40968   01EB74  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40969   01EB76  5A06               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40970   01EB78  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40971   01EB7A  5A07               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40972   01EB7C  800C               	bsf	___lldiv@quotient^(0+1280),0,c
 40973   01EB7E                     l22393:
 40974   01EB7E  90D8               	bcf	status,0,c
 40975   01EB80  320B               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40976   01EB82  320A               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40977   01EB84  3209               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40978   01EB86  3208               	rrcf	___lldiv@divisor^(0+1280),f,c
 40979   01EB88  2E10               	decfsz	___lldiv@counter^(0+1280),f,c
 40980   01EB8A  EFA2  F0F5         	goto	l22385
 40981   01EB8E                     l2654:
 40982   01EB8E  C50C  F504         	movff	___lldiv@quotient,?___lldiv
 40983   01EB92  C50D  F505         	movff	___lldiv@quotient+1,?___lldiv+1
 40984   01EB96  C50E  F506         	movff	___lldiv@quotient+2,?___lldiv+2
 40985   01EB9A  C50F  F507         	movff	___lldiv@quotient+3,?___lldiv+3
 40986   01EB9E  0012               	return		;funcret
 40987   01EBA0                     __end_of___lldiv:
 40988                           	callstack 0
 40989                           
 40990 ;; *************** function _f_read *****************
 40991 ;; Defined at:
 40992 ;;		line 3916 in file "../fatfs/ff.c"
 40993 ;; Parameters:    Size  Location     Type
 40994 ;;  fp              2   62[BANK6 ] PTR struct .
 40995 ;;		 -> in_fl(546), rom_fl(546), 
 40996 ;;  buff            2   64[BANK6 ] PTR void 
 40997 ;;		 -> f_gets@s(4), cin_file(512), disk_buf(128), tmp_buf(512), 
 40998 ;;  btr             2   66[BANK6 ] unsigned int 
 40999 ;;  br              2   68[BANK6 ] PTR unsigned int 
 41000 ;;		 -> f_gets@rc(2), see_file@br(2), fin_cnt(2), load_program@br(2), 
 41001 ;;		 -> read_sector@n(2), 
 41002 ;; Auto vars:     Size  Location     Type
 41003 ;;  sect            4   99[BANK6 ] unsigned long 
 41004 ;;  clst            4   87[BANK6 ] unsigned long 
 41005 ;;  remain          4   82[BANK6 ] unsigned long 
 41006 ;;  fs              2  103[BANK6 ] PTR struct .
 41007 ;;		 -> fs(564), NULL(0), 
 41008 ;;  rcnt            2   97[BANK6 ] unsigned int 
 41009 ;;  cc              2   95[BANK6 ] unsigned int 
 41010 ;;  csect           2   93[BANK6 ] unsigned int 
 41011 ;;  rbuff           2   91[BANK6 ] PTR unsigned char 
 41012 ;;		 -> f_gets@s(4), cin_file(512), disk_buf(128), tmp_buf(512), 
 41013 ;;  res             1   86[BANK6 ] enum E597
 41014 ;; Return value:  Size  Location     Type
 41015 ;;                  1    wreg      enum E16851
 41016 ;; Registers used:
 41017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41018 ;; Tracked objects:
 41019 ;;		On entry : 0/0
 41020 ;;		On exit  : 0/0
 41021 ;;		Unchanged: 0/0
 41022 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41023 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41024 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41025 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41026 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41027 ;;Total ram usage:       43 bytes
 41028 ;; Hardware stack levels used: 1
 41029 ;; Hardware stack levels required when called: 15
 41030 ;; This function calls:
 41031 ;;		_clst2sect
 41032 ;;		_disk_read
 41033 ;;		_disk_write
 41034 ;;		_get_fat
 41035 ;;		_memcpy
 41036 ;;		_validate
 41037 ;; This function is called by:
 41038 ;;		_read_sector
 41039 ;;		_load_program
 41040 ;;		_see_file
 41041 ;;		_in_file
 41042 ;;		_str_inf
 41043 ;;		_f_gets
 41044 ;; This function uses a non-reentrant model
 41045 ;;
 41046                           
 41047                           	psect	text111
 41048   012D36                     __ptext111:
 41049                           	callstack 0
 41050   012D36                     _f_read:
 41051                           	callstack 105
 41052   012D36                     
 41053                           ;../fatfs/ff.c: 3917:  FIL* fp,;../fatfs/ff.c: 3918:  void* buff,;../fatfs/ff.c: 3919:  
      +                          UINT btr,;../fatfs/ff.c: 3920:  UINT* br;../fatfs/ff.c: 3922: {;../fatfs/ff.c: 3923:  FR
      +                          ESULT res;;../fatfs/ff.c: 3924:  FATFS *fs;;../fatfs/ff.c: 3925:  DWORD clst;;../fatfs/f
      +                          f.c: 3926:  LBA_t sect;;../fatfs/ff.c: 3927:  FSIZE_t remain;;../fatfs/ff.c: 3928:  UINT
      +                           rcnt, cc, csect;;../fatfs/ff.c: 3929:  BYTE *rbuff = (BYTE*)buff;
 41054   012D36  C640  F65B         	movff	f_read@buff,f_read@rbuff
 41055   012D3A  C641  F65C         	movff	f_read@buff+1,f_read@rbuff+1
 41056   012D3E                     
 41057                           ;../fatfs/ff.c: 3932:  *br = 0;
 41058   012D3E  C644  F4D9         	movff	f_read@br,fsr2l
 41059   012D42  C645  F4DA         	movff	f_read@br+1,fsr2h
 41060   012D46  6ADE               	clrf	postinc2,c
 41061   012D48  6ADD               	clrf	postdec2,c
 41062   012D4A                     
 41063                           ;../fatfs/ff.c: 3933:  res = validate(&fp->obj, &fs);
 41064   012D4A  C63E  F5BE         	movff	f_read@fp,validate@obj
 41065   012D4E  C63F  F5BF         	movff	f_read@fp+1,validate@obj+1
 41066   012D52  0E67               	movlw	low f_read@fs
 41067   012D54  0105               	movlb	5	; () banked
 41068   012D56  6FC0               	movwf	validate@rfs& (0+255),b
 41069   012D58  0E06               	movlw	high f_read@fs
 41070   012D5A  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 41071   012D5C  ECA3  F0E9         	call	_validate	;wreg free
 41072   012D60  0106               	movlb	6	; () banked
 41073   012D62  6F56               	movwf	f_read@res& (0+255),b
 41074   012D64                     
 41075                           ; BSR set to: 6
 41076                           ;../fatfs/ff.c: 3934:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 41077   012D64  5156               	movf	f_read@res& (0+255),w,b
 41078   012D66  A4D8               	btfss	status,2,c
 41079   012D68  EFB8  F096         	goto	u31491
 41080   012D6C  EFBA  F096         	goto	u31490
 41081   012D70                     u31491:
 41082   012D70  EFCA  F096         	goto	l22985
 41083   012D74                     u31490:
 41084   012D74                     
 41085                           ; BSR set to: 6
 41086   012D74  EE20 F00F          	lfsr	2,15
 41087   012D78  513E               	movf	f_read@fp& (0+255),w,b
 41088   012D7A  26D9               	addwf	fsr2l,f,c
 41089   012D7C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41090   012D7E  22DA               	addwfc	fsr2h,f,c
 41091   012D80  50DF               	movf	indf2,w,c
 41092   012D82  6F56               	movwf	f_read@res& (0+255),b
 41093   012D84  5156               	movf	f_read@res& (0+255),w,b
 41094   012D86  B4D8               	btfsc	status,2,c
 41095   012D88  EFC8  F096         	goto	u31501
 41096   012D8C  EFCA  F096         	goto	u31500
 41097   012D90                     u31501:
 41098   012D90  EFCD  F096         	goto	l22989
 41099   012D94                     u31500:
 41100   012D94                     l22985:
 41101                           
 41102                           ; BSR set to: 6
 41103   012D94  5156               	movf	f_read@res& (0+255),w,b
 41104   012D96  EF24  F09A         	goto	l1935
 41105   012D9A                     l22989:
 41106                           
 41107                           ; BSR set to: 6
 41108                           ;../fatfs/ff.c: 3935:  if (!(fp->flag & 0x01)) return FR_DENIED;
 41109   012D9A  EE20 F00E          	lfsr	2,14
 41110   012D9E  513E               	movf	f_read@fp& (0+255),w,b
 41111   012DA0  26D9               	addwf	fsr2l,f,c
 41112   012DA2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41113   012DA4  22DA               	addwfc	fsr2h,f,c
 41114   012DA6  B0DF               	btfsc	indf2,0,c
 41115   012DA8  EFD8  F096         	goto	u31511
 41116   012DAC  EFDA  F096         	goto	u31510
 41117   012DB0                     u31511:
 41118   012DB0  EFDD  F096         	goto	l22995
 41119   012DB4                     u31510:
 41120   012DB4                     
 41121                           ; BSR set to: 6
 41122   012DB4  0E07               	movlw	7
 41123   012DB6  EF24  F09A         	goto	l1935
 41124   012DBA                     l22995:
 41125                           
 41126                           ; BSR set to: 6
 41127                           ;../fatfs/ff.c: 3936:  remain = fp->obj.objsize - fp->fptr;
 41128   012DBA  EE20 F010          	lfsr	2,16
 41129   012DBE  513E               	movf	f_read@fp& (0+255),w,b
 41130   012DC0  26D9               	addwf	fsr2l,f,c
 41131   012DC2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41132   012DC4  22DA               	addwfc	fsr2h,f,c
 41133   012DC6  C4DE F646          	movff	postinc2,??_f_read
 41134   012DCA  C4DE F647          	movff	postinc2,??_f_read+1
 41135   012DCE  C4DE F648          	movff	postinc2,??_f_read+2
 41136   012DD2  C4DE F649          	movff	postinc2,??_f_read+3
 41137   012DD6  EE20 F00A          	lfsr	2,10
 41138   012DDA  513E               	movf	f_read@fp& (0+255),w,b
 41139   012DDC  26D9               	addwf	fsr2l,f,c
 41140   012DDE  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41141   012DE0  22DA               	addwfc	fsr2h,f,c
 41142   012DE2  C4DE F64A          	movff	postinc2,??_f_read+4
 41143   012DE6  C4DE F64B          	movff	postinc2,??_f_read+5
 41144   012DEA  C4DE F64C          	movff	postinc2,??_f_read+6
 41145   012DEE  C4DE F64D          	movff	postinc2,??_f_read+7
 41146   012DF2  5146               	movf	??_f_read& (0+255),w,b
 41147   012DF4  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 41148   012DF6  6F52               	movwf	f_read@remain& (0+255),b
 41149   012DF8  5147               	movf	(??_f_read+1)& (0+255),w,b
 41150   012DFA  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 41151   012DFC  6F53               	movwf	(f_read@remain+1)& (0+255),b
 41152   012DFE  5148               	movf	(??_f_read+2)& (0+255),w,b
 41153   012E00  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 41154   012E02  6F54               	movwf	(f_read@remain+2)& (0+255),b
 41155   012E04  5149               	movf	(??_f_read+3)& (0+255),w,b
 41156   012E06  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 41157   012E08  6F55               	movwf	(f_read@remain+3)& (0+255),b
 41158   012E0A                     
 41159                           ; BSR set to: 6
 41160                           ;../fatfs/ff.c: 3937:  if (btr > remain) btr = (UINT)remain;
 41161   012E0A  5142               	movf	f_read@btr& (0+255),w,b
 41162   012E0C  6F46               	movwf	??_f_read& (0+255),b
 41163   012E0E  5143               	movf	(f_read@btr+1)& (0+255),w,b
 41164   012E10  6F47               	movwf	(??_f_read+1)& (0+255),b
 41165   012E12  6B48               	clrf	(??_f_read+2)& (0+255),b
 41166   012E14  6B49               	clrf	(??_f_read+3)& (0+255),b
 41167   012E16  5146               	movf	??_f_read& (0+255),w,b
 41168   012E18  5D52               	subwf	f_read@remain& (0+255),w,b
 41169   012E1A  5147               	movf	(??_f_read+1)& (0+255),w,b
 41170   012E1C  5953               	subwfb	(f_read@remain+1)& (0+255),w,b
 41171   012E1E  5148               	movf	(??_f_read+2)& (0+255),w,b
 41172   012E20  5954               	subwfb	(f_read@remain+2)& (0+255),w,b
 41173   012E22  5149               	movf	(??_f_read+3)& (0+255),w,b
 41174   012E24  5955               	subwfb	(f_read@remain+3)& (0+255),w,b
 41175   012E26  B0D8               	btfsc	status,0,c
 41176   012E28  EF18  F097         	goto	u31521
 41177   012E2C  EF1A  F097         	goto	u31520
 41178   012E30                     u31521:
 41179   012E30  EF1E  F097         	goto	l23001
 41180   012E34                     u31520:
 41181   012E34                     
 41182                           ; BSR set to: 6
 41183   012E34  C652  F642         	movff	f_read@remain,f_read@btr
 41184   012E38  C653  F643         	movff	f_read@remain+1,f_read@btr+1
 41185   012E3C                     l23001:
 41186                           
 41187                           ; BSR set to: 6
 41188                           ;../fatfs/ff.c: 3939:  for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fpt
      +                          r += rcnt) {
 41189   012E3C  5142               	movf	f_read@btr& (0+255),w,b
 41190   012E3E  1143               	iorwf	(f_read@btr+1)& (0+255),w,b
 41191   012E40  A4D8               	btfss	status,2,c
 41192   012E42  EF25  F097         	goto	u31531
 41193   012E46  EF27  F097         	goto	u31530
 41194   012E4A                     u31531:
 41195   012E4A  EF29  F097         	goto	l23005
 41196   012E4E                     u31530:
 41197   012E4E  EF23  F09A         	goto	l23111
 41198   012E52                     l23005:
 41199                           
 41200                           ; BSR set to: 6
 41201                           ;../fatfs/ff.c: 3940:   if (fp->fptr % ((UINT)512) == 0) {
 41202   012E52  EE20 F010          	lfsr	2,16
 41203   012E56  513E               	movf	f_read@fp& (0+255),w,b
 41204   012E58  26D9               	addwf	fsr2l,f,c
 41205   012E5A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41206   012E5C  22DA               	addwfc	fsr2h,f,c
 41207   012E5E  0EFF               	movlw	255
 41208   012E60  14DE               	andwf	postinc2,w,c
 41209   012E62  6F46               	movwf	??_f_read& (0+255),b
 41210   012E64  0E01               	movlw	1
 41211   012E66  14DE               	andwf	postinc2,w,c
 41212   012E68  6F47               	movwf	(??_f_read+1)& (0+255),b
 41213   012E6A  0E00               	movlw	0
 41214   012E6C  14DE               	andwf	postinc2,w,c
 41215   012E6E  6F48               	movwf	(??_f_read+2)& (0+255),b
 41216   012E70  0E00               	movlw	0
 41217   012E72  14DE               	andwf	postinc2,w,c
 41218   012E74  6F49               	movwf	(??_f_read+3)& (0+255),b
 41219   012E76  5146               	movf	??_f_read& (0+255),w,b
 41220   012E78  1147               	iorwf	(??_f_read+1)& (0+255),w,b
 41221   012E7A  1148               	iorwf	(??_f_read+2)& (0+255),w,b
 41222   012E7C  1149               	iorwf	(??_f_read+3)& (0+255),w,b
 41223   012E7E  A4D8               	btfss	status,2,c
 41224   012E80  EF44  F097         	goto	u31541
 41225   012E84  EF46  F097         	goto	u31540
 41226   012E88                     u31541:
 41227   012E88  EFB6  F099         	goto	l1940
 41228   012E8C                     u31540:
 41229   012E8C                     
 41230                           ; BSR set to: 6
 41231                           ;../fatfs/ff.c: 3941:    csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
 41232   012E8C  EE20 F010          	lfsr	2,16
 41233   012E90  513E               	movf	f_read@fp& (0+255),w,b
 41234   012E92  26D9               	addwf	fsr2l,f,c
 41235   012E94  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41236   012E96  22DA               	addwfc	fsr2h,f,c
 41237   012E98  C4DE F646          	movff	postinc2,??_f_read
 41238   012E9C  C4DE F647          	movff	postinc2,??_f_read+1
 41239   012EA0  C4DE F648          	movff	postinc2,??_f_read+2
 41240   012EA4  C4DE F649          	movff	postinc2,??_f_read+3
 41241   012EA8  0E0A               	movlw	10
 41242   012EAA  EF5C  F097         	goto	u31550
 41243   012EAE                     u31555:
 41244   012EAE  90D8               	bcf	status,0,c
 41245   012EB0  3349               	rrcf	(??_f_read+3)& (0+255),f,b
 41246   012EB2  3348               	rrcf	(??_f_read+2)& (0+255),f,b
 41247   012EB4  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 41248   012EB6  3346               	rrcf	??_f_read& (0+255),f,b
 41249   012EB8                     u31550:
 41250   012EB8  2EE8               	decfsz	wreg,f,c
 41251   012EBA  EF57  F097         	goto	u31555
 41252   012EBE  EE20 F00A          	lfsr	2,10
 41253   012EC2  5167               	movf	f_read@fs& (0+255),w,b
 41254   012EC4  26D9               	addwf	fsr2l,f,c
 41255   012EC6  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41256   012EC8  22DA               	addwfc	fsr2h,f,c
 41257   012ECA  C4DE F64A          	movff	postinc2,??_f_read+4
 41258   012ECE  C4DD F64B          	movff	postdec2,??_f_read+5
 41259   012ED2  0EFF               	movlw	255
 41260   012ED4  254A               	addwf	(??_f_read+4)& (0+255),w,b
 41261   012ED6  6F4C               	movwf	(??_f_read+6)& (0+255),b
 41262   012ED8  0EFF               	movlw	255
 41263   012EDA  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 41264   012EDC  6F4D               	movwf	(??_f_read+7)& (0+255),b
 41265   012EDE  5146               	movf	??_f_read& (0+255),w,b
 41266   012EE0  154C               	andwf	(??_f_read+6)& (0+255),w,b
 41267   012EE2  6F5D               	movwf	f_read@csect& (0+255),b
 41268   012EE4  5147               	movf	(??_f_read+1)& (0+255),w,b
 41269   012EE6  154D               	andwf	(??_f_read+7)& (0+255),w,b
 41270   012EE8  6F5E               	movwf	(f_read@csect+1)& (0+255),b
 41271   012EEA                     
 41272                           ; BSR set to: 6
 41273                           ;../fatfs/ff.c: 3942:    if (csect == 0) {
 41274   012EEA  515D               	movf	f_read@csect& (0+255),w,b
 41275   012EEC  115E               	iorwf	(f_read@csect+1)& (0+255),w,b
 41276   012EEE  A4D8               	btfss	status,2,c
 41277   012EF0  EF7C  F097         	goto	u31561
 41278   012EF4  EF7E  F097         	goto	u31560
 41279   012EF8                     u31561:
 41280   012EF8  EFFB  F097         	goto	l23035
 41281   012EFC                     u31560:
 41282   012EFC                     
 41283                           ; BSR set to: 6
 41284                           ;../fatfs/ff.c: 3943:     if (fp->fptr == 0) {
 41285   012EFC  EE20 F010          	lfsr	2,16
 41286   012F00  513E               	movf	f_read@fp& (0+255),w,b
 41287   012F02  26D9               	addwf	fsr2l,f,c
 41288   012F04  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41289   012F06  22DA               	addwfc	fsr2h,f,c
 41290   012F08  50DE               	movf	postinc2,w,c
 41291   012F0A  10DE               	iorwf	postinc2,w,c
 41292   012F0C  10DE               	iorwf	postinc2,w,c
 41293   012F0E  10DE               	iorwf	postinc2,w,c
 41294   012F10  A4D8               	btfss	status,2,c
 41295   012F12  EF8D  F097         	goto	u31571
 41296   012F16  EF8F  F097         	goto	u31570
 41297   012F1A                     u31571:
 41298   012F1A  EF9F  F097         	goto	l23015
 41299   012F1E                     u31570:
 41300   012F1E                     
 41301                           ; BSR set to: 6
 41302                           ;../fatfs/ff.c: 3944:      clst = fp->obj.sclust;
 41303   012F1E  EE20 F006          	lfsr	2,6
 41304   012F22  513E               	movf	f_read@fp& (0+255),w,b
 41305   012F24  26D9               	addwf	fsr2l,f,c
 41306   012F26  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41307   012F28  22DA               	addwfc	fsr2h,f,c
 41308   012F2A  C4DE F657          	movff	postinc2,f_read@clst
 41309   012F2E  C4DE F658          	movff	postinc2,f_read@clst+1
 41310   012F32  C4DE F659          	movff	postinc2,f_read@clst+2
 41311   012F36  C4DE F65A          	movff	postinc2,f_read@clst+3
 41312                           
 41313                           ;../fatfs/ff.c: 3945:     } else {
 41314   012F3A  EFBB  F097         	goto	l23017
 41315   012F3E                     l23015:
 41316                           
 41317                           ; BSR set to: 6
 41318                           ;../fatfs/ff.c: 3951:      {;../fatfs/ff.c: 3952:       clst = get_fat(&fp->obj, fp->clu
      +                          st);
 41319   012F3E  C63E  F624         	movff	f_read@fp,get_fat@obj
 41320   012F42  C63F  F625         	movff	f_read@fp+1,get_fat@obj+1
 41321   012F46  EE20 F014          	lfsr	2,20
 41322   012F4A  513E               	movf	f_read@fp& (0+255),w,b
 41323   012F4C  26D9               	addwf	fsr2l,f,c
 41324   012F4E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41325   012F50  22DA               	addwfc	fsr2h,f,c
 41326   012F52  C4DE F626          	movff	postinc2,get_fat@clst
 41327   012F56  C4DE F627          	movff	postinc2,get_fat@clst+1
 41328   012F5A  C4DE F628          	movff	postinc2,get_fat@clst+2
 41329   012F5E  C4DE F629          	movff	postinc2,get_fat@clst+3
 41330   012F62  ECF7  F0B4         	call	_get_fat	;wreg free
 41331   012F66  C624  F657         	movff	?_get_fat,f_read@clst
 41332   012F6A  C625  F658         	movff	?_get_fat+1,f_read@clst+1
 41333   012F6E  C626  F659         	movff	?_get_fat+2,f_read@clst+2
 41334   012F72  C627  F65A         	movff	?_get_fat+3,f_read@clst+3
 41335   012F76                     l23017:
 41336                           
 41337                           ;../fatfs/ff.c: 3955:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 41338   012F76  0106               	movlb	6	; () banked
 41339   012F78  515A               	movf	(f_read@clst+3)& (0+255),w,b
 41340   012F7A  1159               	iorwf	(f_read@clst+2)& (0+255),w,b
 41341   012F7C  1158               	iorwf	(f_read@clst+1)& (0+255),w,b
 41342   012F7E  E107               	bnz	u31581
 41343   012F80  0E02               	movlw	2
 41344   012F82  5D57               	subwf	f_read@clst& (0+255),w,b
 41345   012F84  B0D8               	btfsc	status,0,c
 41346   012F86  EFC7  F097         	goto	u31581
 41347   012F8A  EFC9  F097         	goto	u31580
 41348   012F8E                     u31581:
 41349   012F8E  EFD4  F097         	goto	l23025
 41350   012F92                     u31580:
 41351   012F92                     
 41352                           ; BSR set to: 6
 41353   012F92  EE20 F00F          	lfsr	2,15
 41354   012F96  513E               	movf	f_read@fp& (0+255),w,b
 41355   012F98  26D9               	addwf	fsr2l,f,c
 41356   012F9A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41357   012F9C  22DA               	addwfc	fsr2h,f,c
 41358   012F9E  0E02               	movlw	2
 41359   012FA0  6EDF               	movwf	indf2,c
 41360   012FA2                     l23021:
 41361                           
 41362                           ; BSR set to: 6
 41363   012FA2  0E02               	movlw	2
 41364   012FA4  EF24  F09A         	goto	l1935
 41365   012FA8                     l23025:
 41366                           
 41367                           ; BSR set to: 6
 41368                           ;../fatfs/ff.c: 3956:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 41369   012FA8  2957               	incf	f_read@clst& (0+255),w,b
 41370   012FAA  E10A               	bnz	u31591
 41371   012FAC  2958               	incf	(f_read@clst+1)& (0+255),w,b
 41372   012FAE  E108               	bnz	u31591
 41373   012FB0  2959               	incf	(f_read@clst+2)& (0+255),w,b
 41374   012FB2  E106               	bnz	u31591
 41375   012FB4  295A               	incf	(f_read@clst+3)& (0+255),w,b
 41376   012FB6  A4D8               	btfss	status,2,c
 41377   012FB8  EFE0  F097         	goto	u31591
 41378   012FBC  EFE2  F097         	goto	u31590
 41379   012FC0                     u31591:
 41380   012FC0  EFED  F097         	goto	l23033
 41381   012FC4                     u31590:
 41382   012FC4                     
 41383                           ; BSR set to: 6
 41384   012FC4  EE20 F00F          	lfsr	2,15
 41385   012FC8  513E               	movf	f_read@fp& (0+255),w,b
 41386   012FCA  26D9               	addwf	fsr2l,f,c
 41387   012FCC  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41388   012FCE  22DA               	addwfc	fsr2h,f,c
 41389   012FD0  0E01               	movlw	1
 41390   012FD2  6EDF               	movwf	indf2,c
 41391   012FD4                     l23029:
 41392                           
 41393                           ; BSR set to: 6
 41394   012FD4  0E01               	movlw	1
 41395   012FD6  EF24  F09A         	goto	l1935
 41396   012FDA                     l23033:
 41397                           
 41398                           ; BSR set to: 6
 41399                           ;../fatfs/ff.c: 3957:     fp->clust = clst;
 41400   012FDA  EE20 F014          	lfsr	2,20
 41401   012FDE  513E               	movf	f_read@fp& (0+255),w,b
 41402   012FE0  26D9               	addwf	fsr2l,f,c
 41403   012FE2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41404   012FE4  22DA               	addwfc	fsr2h,f,c
 41405   012FE6  C657  F4DE         	movff	f_read@clst,postinc2
 41406   012FEA  C658  F4DE         	movff	f_read@clst+1,postinc2
 41407   012FEE  C659  F4DE         	movff	f_read@clst+2,postinc2
 41408   012FF2  C65A  F4DE         	movff	f_read@clst+3,postinc2
 41409   012FF6                     l23035:
 41410                           
 41411                           ; BSR set to: 6
 41412                           ;../fatfs/ff.c: 3959:    sect = clst2sect(fs, fp->clust);
 41413   012FF6  C667  F510         	movff	f_read@fs,clst2sect@fs
 41414   012FFA  C668  F511         	movff	f_read@fs+1,clst2sect@fs+1
 41415   012FFE  EE20 F014          	lfsr	2,20
 41416   013002  513E               	movf	f_read@fp& (0+255),w,b
 41417   013004  26D9               	addwf	fsr2l,f,c
 41418   013006  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41419   013008  22DA               	addwfc	fsr2h,f,c
 41420   01300A  C4DE F512          	movff	postinc2,clst2sect@clst
 41421   01300E  C4DE F513          	movff	postinc2,clst2sect@clst+1
 41422   013012  C4DE F514          	movff	postinc2,clst2sect@clst+2
 41423   013016  C4DE F515          	movff	postinc2,clst2sect@clst+3
 41424   01301A  EC7A  F0F0         	call	_clst2sect	;wreg free
 41425   01301E  C510  F663         	movff	?_clst2sect,f_read@sect
 41426   013022  C511  F664         	movff	?_clst2sect+1,f_read@sect+1
 41427   013026  C512  F665         	movff	?_clst2sect+2,f_read@sect+2
 41428   01302A  C513  F666         	movff	?_clst2sect+3,f_read@sect+3
 41429   01302E                     
 41430                           ;../fatfs/ff.c: 3960:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 41431   01302E  0106               	movlb	6	; () banked
 41432   013030  5163               	movf	f_read@sect& (0+255),w,b
 41433   013032  1164               	iorwf	(f_read@sect+1)& (0+255),w,b
 41434   013034  1165               	iorwf	(f_read@sect+2)& (0+255),w,b
 41435   013036  1166               	iorwf	(f_read@sect+3)& (0+255),w,b
 41436   013038  A4D8               	btfss	status,2,c
 41437   01303A  EF21  F098         	goto	u31601
 41438   01303E  EF23  F098         	goto	u31600
 41439   013042                     u31601:
 41440   013042  EF2D  F098         	goto	l23045
 41441   013046                     u31600:
 41442   013046                     
 41443                           ; BSR set to: 6
 41444   013046  EE20 F00F          	lfsr	2,15
 41445   01304A  513E               	movf	f_read@fp& (0+255),w,b
 41446   01304C  26D9               	addwf	fsr2l,f,c
 41447   01304E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41448   013050  22DA               	addwfc	fsr2h,f,c
 41449   013052  0E02               	movlw	2
 41450   013054  6EDF               	movwf	indf2,c
 41451   013056  EFD1  F097         	goto	l23021
 41452   01305A                     l23045:
 41453                           
 41454                           ; BSR set to: 6
 41455                           ;../fatfs/ff.c: 3961:    sect += csect;
 41456   01305A  515D               	movf	f_read@csect& (0+255),w,b
 41457   01305C  2763               	addwf	f_read@sect& (0+255),f,b
 41458   01305E  515E               	movf	(f_read@csect+1)& (0+255),w,b
 41459   013060  2364               	addwfc	(f_read@sect+1)& (0+255),f,b
 41460   013062  0E00               	movlw	0
 41461   013064  2365               	addwfc	(f_read@sect+2)& (0+255),f,b
 41462   013066  0E00               	movlw	0
 41463   013068  2366               	addwfc	(f_read@sect+3)& (0+255),f,b
 41464   01306A                     
 41465                           ; BSR set to: 6
 41466                           ;../fatfs/ff.c: 3962:    cc = btr / ((UINT)512);
 41467   01306A  C642  F646         	movff	f_read@btr,??_f_read
 41468   01306E  C643  F647         	movff	f_read@btr+1,??_f_read+1
 41469   013072  0E09               	movlw	9
 41470   013074  6F48               	movwf	(??_f_read+2)& (0+255),b
 41471   013076                     u31615:
 41472   013076  90D8               	bcf	status,0,c
 41473   013078  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 41474   01307A  3346               	rrcf	??_f_read& (0+255),f,b
 41475   01307C  2F48               	decfsz	(??_f_read+2)& (0+255),f,b
 41476   01307E  EF3B  F098         	goto	u31615
 41477   013082  C646  F65F         	movff	??_f_read,f_read@cc
 41478   013086  C647  F660         	movff	??_f_read+1,f_read@cc+1
 41479   01308A                     
 41480                           ; BSR set to: 6
 41481                           ;../fatfs/ff.c: 3963:    if (cc > 0) {
 41482   01308A  515F               	movf	f_read@cc& (0+255),w,b
 41483   01308C  1160               	iorwf	(f_read@cc+1)& (0+255),w,b
 41484   01308E  B4D8               	btfsc	status,2,c
 41485   013090  EF4C  F098         	goto	u31621
 41486   013094  EF4E  F098         	goto	u31620
 41487   013098                     u31621:
 41488   013098  EF17  F099         	goto	l23071
 41489   01309C                     u31620:
 41490   01309C                     
 41491                           ; BSR set to: 6
 41492                           ;../fatfs/ff.c: 3964:     if (csect + cc > fs->csize) {
 41493   01309C  515F               	movf	f_read@cc& (0+255),w,b
 41494   01309E  255D               	addwf	f_read@csect& (0+255),w,b
 41495   0130A0  6F46               	movwf	??_f_read& (0+255),b
 41496   0130A2  5160               	movf	(f_read@cc+1)& (0+255),w,b
 41497   0130A4  215E               	addwfc	(f_read@csect+1)& (0+255),w,b
 41498   0130A6  6F47               	movwf	(??_f_read+1)& (0+255),b
 41499   0130A8  EE20 F00A          	lfsr	2,10
 41500   0130AC  5167               	movf	f_read@fs& (0+255),w,b
 41501   0130AE  26D9               	addwf	fsr2l,f,c
 41502   0130B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41503   0130B2  22DA               	addwfc	fsr2h,f,c
 41504   0130B4  5146               	movf	??_f_read& (0+255),w,b
 41505   0130B6  5CDE               	subwf	postinc2,w,c
 41506   0130B8  5147               	movf	(??_f_read+1)& (0+255),w,b
 41507   0130BA  58DE               	subwfb	postinc2,w,c
 41508   0130BC  B0D8               	btfsc	status,0,c
 41509   0130BE  EF63  F098         	goto	u31631
 41510   0130C2  EF65  F098         	goto	u31630
 41511   0130C6                     u31631:
 41512   0130C6  EF75  F098         	goto	l23055
 41513   0130CA                     u31630:
 41514   0130CA                     
 41515                           ; BSR set to: 6
 41516                           ;../fatfs/ff.c: 3965:      cc = fs->csize - csect;
 41517   0130CA  EE20 F00A          	lfsr	2,10
 41518   0130CE  5167               	movf	f_read@fs& (0+255),w,b
 41519   0130D0  26D9               	addwf	fsr2l,f,c
 41520   0130D2  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41521   0130D4  22DA               	addwfc	fsr2h,f,c
 41522   0130D6  C4DE F646          	movff	postinc2,??_f_read
 41523   0130DA  C4DD F647          	movff	postdec2,??_f_read+1
 41524   0130DE  515D               	movf	f_read@csect& (0+255),w,b
 41525   0130E0  5D46               	subwf	??_f_read& (0+255),w,b
 41526   0130E2  6F5F               	movwf	f_read@cc& (0+255),b
 41527   0130E4  515E               	movf	(f_read@csect+1)& (0+255),w,b
 41528   0130E6  5947               	subwfb	(??_f_read+1)& (0+255),w,b
 41529   0130E8  6F60               	movwf	(f_read@cc+1)& (0+255),b
 41530   0130EA                     l23055:
 41531                           
 41532                           ; BSR set to: 6
 41533                           ;../fatfs/ff.c: 3967:     if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err 
      +                          = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41534   0130EA  C65B  F600         	movff	f_read@rbuff,disk_read@buff
 41535   0130EE  C65C  F601         	movff	f_read@rbuff+1,disk_read@buff+1
 41536   0130F2  C663  F602         	movff	f_read@sect,disk_read@sector
 41537   0130F6  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 41538   0130FA  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 41539   0130FE  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 41540   013102  C65F  F606         	movff	f_read@cc,disk_read@count
 41541   013106  C660  F607         	movff	f_read@cc+1,disk_read@count+1
 41542   01310A  EE20 F001          	lfsr	2,1
 41543   01310E  5167               	movf	f_read@fs& (0+255),w,b
 41544   013110  26D9               	addwf	fsr2l,f,c
 41545   013112  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41546   013114  22DA               	addwfc	fsr2h,f,c
 41547   013116  50DF               	movf	indf2,w,c
 41548   013118  ECD5  F0F3         	call	_disk_read
 41549   01311C  0900               	iorlw	0
 41550   01311E  B4D8               	btfsc	status,2,c
 41551   013120  EF94  F098         	goto	u31641
 41552   013124  EF96  F098         	goto	u31640
 41553   013128                     u31641:
 41554   013128  EFA1  F098         	goto	l23063
 41555   01312C                     u31640:
 41556   01312C  0106               	movlb	6	; () banked
 41557   01312E  EE20 F00F          	lfsr	2,15
 41558   013132  513E               	movf	f_read@fp& (0+255),w,b
 41559   013134  26D9               	addwf	fsr2l,f,c
 41560   013136  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41561   013138  22DA               	addwfc	fsr2h,f,c
 41562   01313A  0E01               	movlw	1
 41563   01313C  6EDF               	movwf	indf2,c
 41564   01313E  EFEA  F097         	goto	l23029
 41565   013142                     l23063:
 41566                           
 41567                           ;../fatfs/ff.c: 3974:     if ((fp->flag & 0x80) && fp->sect - sect < cc) {
 41568   013142  0106               	movlb	6	; () banked
 41569   013144  EE20 F00E          	lfsr	2,14
 41570   013148  513E               	movf	f_read@fp& (0+255),w,b
 41571   01314A  26D9               	addwf	fsr2l,f,c
 41572   01314C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41573   01314E  22DA               	addwfc	fsr2h,f,c
 41574   013150  AEDF               	btfss	indf2,7,c
 41575   013152  EFAD  F098         	goto	u31651
 41576   013156  EFAF  F098         	goto	u31650
 41577   01315A                     u31651:
 41578   01315A  EF05  F099         	goto	l23069
 41579   01315E                     u31650:
 41580   01315E                     
 41581                           ; BSR set to: 6
 41582   01315E  515F               	movf	f_read@cc& (0+255),w,b
 41583   013160  6F46               	movwf	??_f_read& (0+255),b
 41584   013162  5160               	movf	(f_read@cc+1)& (0+255),w,b
 41585   013164  6F47               	movwf	(??_f_read+1)& (0+255),b
 41586   013166  6B48               	clrf	(??_f_read+2)& (0+255),b
 41587   013168  6B49               	clrf	(??_f_read+3)& (0+255),b
 41588   01316A  EE20 F018          	lfsr	2,24
 41589   01316E  513E               	movf	f_read@fp& (0+255),w,b
 41590   013170  26D9               	addwf	fsr2l,f,c
 41591   013172  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41592   013174  22DA               	addwfc	fsr2h,f,c
 41593   013176  C4DE F64A          	movff	postinc2,??_f_read+4
 41594   01317A  C4DE F64B          	movff	postinc2,??_f_read+5
 41595   01317E  C4DE F64C          	movff	postinc2,??_f_read+6
 41596   013182  C4DE F64D          	movff	postinc2,??_f_read+7
 41597   013186  5163               	movf	f_read@sect& (0+255),w,b
 41598   013188  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 41599   01318A  6F4E               	movwf	(??_f_read+8)& (0+255),b
 41600   01318C  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41601   01318E  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 41602   013190  6F4F               	movwf	(??_f_read+9)& (0+255),b
 41603   013192  5165               	movf	(f_read@sect+2)& (0+255),w,b
 41604   013194  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 41605   013196  6F50               	movwf	(??_f_read+10)& (0+255),b
 41606   013198  5166               	movf	(f_read@sect+3)& (0+255),w,b
 41607   01319A  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 41608   01319C  6F51               	movwf	(??_f_read+11)& (0+255),b
 41609   01319E  5146               	movf	??_f_read& (0+255),w,b
 41610   0131A0  5D4E               	subwf	(??_f_read+8)& (0+255),w,b
 41611   0131A2  5147               	movf	(??_f_read+1)& (0+255),w,b
 41612   0131A4  594F               	subwfb	(??_f_read+9)& (0+255),w,b
 41613   0131A6  5148               	movf	(??_f_read+2)& (0+255),w,b
 41614   0131A8  5950               	subwfb	(??_f_read+10)& (0+255),w,b
 41615   0131AA  5149               	movf	(??_f_read+3)& (0+255),w,b
 41616   0131AC  5951               	subwfb	(??_f_read+11)& (0+255),w,b
 41617   0131AE  B0D8               	btfsc	status,0,c
 41618   0131B0  EFDC  F098         	goto	u31661
 41619   0131B4  EFDE  F098         	goto	u31660
 41620   0131B8                     u31661:
 41621   0131B8  EF05  F099         	goto	l23069
 41622   0131BC                     u31660:
 41623   0131BC                     
 41624                           ; BSR set to: 6
 41625                           ;../fatfs/ff.c: 3975:      memcpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((
      +                          UINT)512));
 41626   0131BC  EE20 F018          	lfsr	2,24
 41627   0131C0  513E               	movf	f_read@fp& (0+255),w,b
 41628   0131C2  26D9               	addwf	fsr2l,f,c
 41629   0131C4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41630   0131C6  22DA               	addwfc	fsr2h,f,c
 41631   0131C8  C4DE F646          	movff	postinc2,??_f_read
 41632   0131CC  C4DD F647          	movff	postdec2,??_f_read+1
 41633   0131D0  5163               	movf	f_read@sect& (0+255),w,b
 41634   0131D2  5F46               	subwf	??_f_read& (0+255),f,b
 41635   0131D4  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41636   0131D6  5B47               	subwfb	(??_f_read+1)& (0+255),f,b
 41637   0131D8  0E09               	movlw	9
 41638   0131DA                     u31675:
 41639   0131DA  90D8               	bcf	status,0,c
 41640   0131DC  3746               	rlcf	??_f_read& (0+255),f,b
 41641   0131DE  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 41642   0131E0  2EE8               	decfsz	wreg,f,c
 41643   0131E2  EFED  F098         	goto	u31675
 41644   0131E6  5146               	movf	??_f_read& (0+255),w,b
 41645   0131E8  255B               	addwf	f_read@rbuff& (0+255),w,b
 41646   0131EA  6E04               	movwf	memcpy@d1^(0+1280),c
 41647   0131EC  5147               	movf	(??_f_read+1)& (0+255),w,b
 41648   0131EE  215C               	addwfc	(f_read@rbuff+1)& (0+255),w,b
 41649   0131F0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 41650   0131F2  0E22               	movlw	34
 41651   0131F4  253E               	addwf	f_read@fp& (0+255),w,b
 41652   0131F6  6E06               	movwf	memcpy@s1^(0+1280),c
 41653   0131F8  0E00               	movlw	0
 41654   0131FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41655   0131FC  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 41656   0131FE  0E02               	movlw	2
 41657   013200  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 41658   013202  0E00               	movlw	0
 41659   013204  6E08               	movwf	memcpy@n^(0+1280),c
 41660   013206  EC00  F0FD         	call	_memcpy	;wreg free
 41661   01320A                     l23069:
 41662                           
 41663                           ;../fatfs/ff.c: 3979:     rcnt = ((UINT)512) * cc;
 41664   01320A  C65F  F646         	movff	f_read@cc,??_f_read
 41665   01320E  C660  F647         	movff	f_read@cc+1,??_f_read+1
 41666   013212  0E09               	movlw	9
 41667   013214                     u31685:
 41668   013214  90D8               	bcf	status,0,c
 41669   013216  0106               	movlb	6	; () banked
 41670   013218  3746               	rlcf	??_f_read& (0+255),f,b
 41671   01321A  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 41672   01321C  2EE8               	decfsz	wreg,f,c
 41673   01321E  EF0A  F099         	goto	u31685
 41674   013222  C646  F661         	movff	??_f_read,f_read@rcnt
 41675   013226  C647  F662         	movff	??_f_read+1,f_read@rcnt+1
 41676                           
 41677                           ;../fatfs/ff.c: 3980:     continue;
 41678   01322A  EF03  F09A         	goto	l23101
 41679   01322E                     l23071:
 41680                           
 41681                           ; BSR set to: 6
 41682                           ;../fatfs/ff.c: 3983:    if (fp->sect != sect) {
 41683   01322E  EE20 F018          	lfsr	2,24
 41684   013232  513E               	movf	f_read@fp& (0+255),w,b
 41685   013234  26D9               	addwf	fsr2l,f,c
 41686   013236  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41687   013238  22DA               	addwfc	fsr2h,f,c
 41688   01323A  5163               	movf	f_read@sect& (0+255),w,b
 41689   01323C  18DE               	xorwf	postinc2,w,c
 41690   01323E  E10F               	bnz	u31690
 41691   013240  5164               	movf	(f_read@sect+1)& (0+255),w,b
 41692   013242  18DE               	xorwf	postinc2,w,c
 41693   013244  E10C               	bnz	u31690
 41694   013246  5165               	movf	(f_read@sect+2)& (0+255),w,b
 41695   013248  18DE               	xorwf	postinc2,w,c
 41696   01324A  E109               	bnz	u31690
 41697   01324C  5166               	movf	(f_read@sect+3)& (0+255),w,b
 41698   01324E  18DE               	xorwf	postinc2,w,c
 41699   013250  B4D8               	btfsc	status,2,c
 41700   013252  EF2D  F099         	goto	u31691
 41701   013256  EF2F  F099         	goto	u31690
 41702   01325A                     u31691:
 41703   01325A  EFA7  F099         	goto	l23093
 41704   01325E                     u31690:
 41705   01325E                     
 41706                           ; BSR set to: 6
 41707                           ;../fatfs/ff.c: 3985:     if (fp->flag & 0x80) {
 41708   01325E  EE20 F00E          	lfsr	2,14
 41709   013262  513E               	movf	f_read@fp& (0+255),w,b
 41710   013264  26D9               	addwf	fsr2l,f,c
 41711   013266  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41712   013268  22DA               	addwfc	fsr2h,f,c
 41713   01326A  AEDF               	btfss	indf2,7,c
 41714   01326C  EF3A  F099         	goto	u31701
 41715   013270  EF3C  F099         	goto	u31700
 41716   013274                     u31701:
 41717   013274  EF79  F099         	goto	l23085
 41718   013278                     u31700:
 41719   013278                     
 41720                           ; BSR set to: 6
 41721                           ;../fatfs/ff.c: 3986:      if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { f
      +                          p->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41722   013278  0E22               	movlw	34
 41723   01327A  253E               	addwf	f_read@fp& (0+255),w,b
 41724   01327C  6F00               	movwf	disk_write@buff& (0+255),b
 41725   01327E  0E00               	movlw	0
 41726   013280  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41727   013282  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 41728   013284  EE20 F018          	lfsr	2,24
 41729   013288  513E               	movf	f_read@fp& (0+255),w,b
 41730   01328A  26D9               	addwf	fsr2l,f,c
 41731   01328C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41732   01328E  22DA               	addwfc	fsr2h,f,c
 41733   013290  C4DE F602          	movff	postinc2,disk_write@sector
 41734   013294  C4DE F603          	movff	postinc2,disk_write@sector+1
 41735   013298  C4DE F604          	movff	postinc2,disk_write@sector+2
 41736   01329C  C4DE F605          	movff	postinc2,disk_write@sector+3
 41737   0132A0  0E00               	movlw	0
 41738   0132A2  6F07               	movwf	(disk_write@count+1)& (0+255),b
 41739   0132A4  0E01               	movlw	1
 41740   0132A6  6F06               	movwf	disk_write@count& (0+255),b
 41741   0132A8  EE20 F001          	lfsr	2,1
 41742   0132AC  5167               	movf	f_read@fs& (0+255),w,b
 41743   0132AE  26D9               	addwf	fsr2l,f,c
 41744   0132B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41745   0132B2  22DA               	addwfc	fsr2h,f,c
 41746   0132B4  50DF               	movf	indf2,w,c
 41747   0132B6  EC7E  F0F3         	call	_disk_write
 41748   0132BA  0900               	iorlw	0
 41749   0132BC  B4D8               	btfsc	status,2,c
 41750   0132BE  EF63  F099         	goto	u31711
 41751   0132C2  EF65  F099         	goto	u31710
 41752   0132C6                     u31711:
 41753   0132C6  EF70  F099         	goto	l23083
 41754   0132CA                     u31710:
 41755   0132CA  0106               	movlb	6	; () banked
 41756   0132CC  EE20 F00F          	lfsr	2,15
 41757   0132D0  513E               	movf	f_read@fp& (0+255),w,b
 41758   0132D2  26D9               	addwf	fsr2l,f,c
 41759   0132D4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41760   0132D6  22DA               	addwfc	fsr2h,f,c
 41761   0132D8  0E01               	movlw	1
 41762   0132DA  6EDF               	movwf	indf2,c
 41763   0132DC  EFEA  F097         	goto	l23029
 41764   0132E0                     l23083:
 41765                           
 41766                           ;../fatfs/ff.c: 3987:      fp->flag &= (BYTE)~0x80;
 41767   0132E0  0106               	movlb	6	; () banked
 41768   0132E2  EE20 F00E          	lfsr	2,14
 41769   0132E6  513E               	movf	f_read@fp& (0+255),w,b
 41770   0132E8  26D9               	addwf	fsr2l,f,c
 41771   0132EA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41772   0132EC  22DA               	addwfc	fsr2h,f,c
 41773   0132EE  0E7F               	movlw	127
 41774   0132F0  16DF               	andwf	indf2,f,c
 41775   0132F2                     l23085:
 41776                           
 41777                           ; BSR set to: 6
 41778                           ;../fatfs/ff.c: 3990:     if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 41779   0132F2  0E22               	movlw	34
 41780   0132F4  253E               	addwf	f_read@fp& (0+255),w,b
 41781   0132F6  6F00               	movwf	disk_read@buff& (0+255),b
 41782   0132F8  0E00               	movlw	0
 41783   0132FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41784   0132FC  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 41785   0132FE  C663  F602         	movff	f_read@sect,disk_read@sector
 41786   013302  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 41787   013306  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 41788   01330A  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 41789   01330E  0E00               	movlw	0
 41790   013310  6F07               	movwf	(disk_read@count+1)& (0+255),b
 41791   013312  0E01               	movlw	1
 41792   013314  6F06               	movwf	disk_read@count& (0+255),b
 41793   013316  EE20 F001          	lfsr	2,1
 41794   01331A  5167               	movf	f_read@fs& (0+255),w,b
 41795   01331C  26D9               	addwf	fsr2l,f,c
 41796   01331E  5168               	movf	(f_read@fs+1)& (0+255),w,b
 41797   013320  22DA               	addwfc	fsr2h,f,c
 41798   013322  50DF               	movf	indf2,w,c
 41799   013324  ECD5  F0F3         	call	_disk_read
 41800   013328  0900               	iorlw	0
 41801   01332A  B4D8               	btfsc	status,2,c
 41802   01332C  EF9A  F099         	goto	u31721
 41803   013330  EF9C  F099         	goto	u31720
 41804   013334                     u31721:
 41805   013334  EFA7  F099         	goto	l23093
 41806   013338                     u31720:
 41807   013338  0106               	movlb	6	; () banked
 41808   01333A  EE20 F00F          	lfsr	2,15
 41809   01333E  513E               	movf	f_read@fp& (0+255),w,b
 41810   013340  26D9               	addwf	fsr2l,f,c
 41811   013342  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41812   013344  22DA               	addwfc	fsr2h,f,c
 41813   013346  0E01               	movlw	1
 41814   013348  6EDF               	movwf	indf2,c
 41815   01334A  EFEA  F097         	goto	l23029
 41816   01334E                     l23093:
 41817                           
 41818                           ;../fatfs/ff.c: 3993:    fp->sect = sect;
 41819   01334E  0106               	movlb	6	; () banked
 41820   013350  EE20 F018          	lfsr	2,24
 41821   013354  513E               	movf	f_read@fp& (0+255),w,b
 41822   013356  26D9               	addwf	fsr2l,f,c
 41823   013358  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41824   01335A  22DA               	addwfc	fsr2h,f,c
 41825   01335C  C663  F4DE         	movff	f_read@sect,postinc2
 41826   013360  C664  F4DE         	movff	f_read@sect+1,postinc2
 41827   013364  C665  F4DE         	movff	f_read@sect+2,postinc2
 41828   013368  C666  F4DE         	movff	f_read@sect+3,postinc2
 41829   01336C                     l1940:
 41830                           
 41831                           ; BSR set to: 6
 41832                           ;../fatfs/ff.c: 3995:   rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 41833   01336C  EE20 F010          	lfsr	2,16
 41834   013370  513E               	movf	f_read@fp& (0+255),w,b
 41835   013372  26D9               	addwf	fsr2l,f,c
 41836   013374  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41837   013376  22DA               	addwfc	fsr2h,f,c
 41838   013378  C4DE F646          	movff	postinc2,??_f_read
 41839   01337C  C4DD F647          	movff	postdec2,??_f_read+1
 41840   013380  0EFF               	movlw	255
 41841   013382  1546               	andwf	??_f_read& (0+255),w,b
 41842   013384  6F48               	movwf	(??_f_read+2)& (0+255),b
 41843   013386  0E01               	movlw	1
 41844   013388  1547               	andwf	(??_f_read+1)& (0+255),w,b
 41845   01338A  6F49               	movwf	(??_f_read+3)& (0+255),b
 41846   01338C  5148               	movf	(??_f_read+2)& (0+255),w,b
 41847   01338E  0800               	sublw	0
 41848   013390  6F61               	movwf	f_read@rcnt& (0+255),b
 41849   013392  5149               	movf	(??_f_read+3)& (0+255),w,b
 41850   013394  A0D8               	btfss	status,0,c
 41851   013396  2AE8               	incf	wreg,f,c
 41852   013398  0802               	sublw	2
 41853   01339A  6F62               	movwf	(f_read@rcnt+1)& (0+255),b
 41854   01339C                     
 41855                           ; BSR set to: 6
 41856                           ;../fatfs/ff.c: 3996:   if (rcnt > btr) rcnt = btr;
 41857   01339C  5161               	movf	f_read@rcnt& (0+255),w,b
 41858   01339E  5D42               	subwf	f_read@btr& (0+255),w,b
 41859   0133A0  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41860   0133A2  5943               	subwfb	(f_read@btr+1)& (0+255),w,b
 41861   0133A4  B0D8               	btfsc	status,0,c
 41862   0133A6  EFD7  F099         	goto	u31731
 41863   0133AA  EFD9  F099         	goto	u31730
 41864   0133AE                     u31731:
 41865   0133AE  EFDD  F099         	goto	l23099
 41866   0133B2                     u31730:
 41867   0133B2                     
 41868                           ; BSR set to: 6
 41869   0133B2  C642  F661         	movff	f_read@btr,f_read@rcnt
 41870   0133B6  C643  F662         	movff	f_read@btr+1,f_read@rcnt+1
 41871   0133BA                     l23099:
 41872                           
 41873                           ; BSR set to: 6
 41874                           ;../fatfs/ff.c: 4001:   memcpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
 41875   0133BA  C65B  F504         	movff	f_read@rbuff,memcpy@d1
 41876   0133BE  C65C  F505         	movff	f_read@rbuff+1,memcpy@d1+1
 41877   0133C2  EE20 F010          	lfsr	2,16
 41878   0133C6  513E               	movf	f_read@fp& (0+255),w,b
 41879   0133C8  26D9               	addwf	fsr2l,f,c
 41880   0133CA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41881   0133CC  22DA               	addwfc	fsr2h,f,c
 41882   0133CE  C4DE F646          	movff	postinc2,??_f_read
 41883   0133D2  C4DD F647          	movff	postdec2,??_f_read+1
 41884   0133D6  0EFF               	movlw	255
 41885   0133D8  1546               	andwf	??_f_read& (0+255),w,b
 41886   0133DA  6F48               	movwf	(??_f_read+2)& (0+255),b
 41887   0133DC  0E01               	movlw	1
 41888   0133DE  1547               	andwf	(??_f_read+1)& (0+255),w,b
 41889   0133E0  6F49               	movwf	(??_f_read+3)& (0+255),b
 41890   0133E2  5148               	movf	(??_f_read+2)& (0+255),w,b
 41891   0133E4  253E               	addwf	f_read@fp& (0+255),w,b
 41892   0133E6  6F4A               	movwf	(??_f_read+4)& (0+255),b
 41893   0133E8  5149               	movf	(??_f_read+3)& (0+255),w,b
 41894   0133EA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 41895   0133EC  6F4B               	movwf	(??_f_read+5)& (0+255),b
 41896   0133EE  0E22               	movlw	34
 41897   0133F0  254A               	addwf	(??_f_read+4)& (0+255),w,b
 41898   0133F2  6E06               	movwf	memcpy@s1^(0+1280),c
 41899   0133F4  0E00               	movlw	0
 41900   0133F6  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 41901   0133F8  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 41902   0133FA  C661  F508         	movff	f_read@rcnt,memcpy@n
 41903   0133FE  C662  F509         	movff	f_read@rcnt+1,memcpy@n+1
 41904   013402  EC00  F0FD         	call	_memcpy	;wreg free
 41905   013406                     l23101:
 41906   013406  0106               	movlb	6	; () banked
 41907   013408  5161               	movf	f_read@rcnt& (0+255),w,b
 41908   01340A  5F42               	subwf	f_read@btr& (0+255),f,b
 41909   01340C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41910   01340E  5B43               	subwfb	(f_read@btr+1)& (0+255),f,b
 41911   013410                     
 41912                           ; BSR set to: 6
 41913   013410  C644  F4D9         	movff	f_read@br,fsr2l
 41914   013414  C645  F4DA         	movff	f_read@br+1,fsr2h
 41915   013418  5161               	movf	f_read@rcnt& (0+255),w,b
 41916   01341A  26DE               	addwf	postinc2,f,c
 41917   01341C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41918   01341E  22DD               	addwfc	postdec2,f,c
 41919   013420                     
 41920                           ; BSR set to: 6
 41921   013420  5161               	movf	f_read@rcnt& (0+255),w,b
 41922   013422  275B               	addwf	f_read@rbuff& (0+255),f,b
 41923   013424  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41924   013426  235C               	addwfc	(f_read@rbuff+1)& (0+255),f,b
 41925   013428                     
 41926                           ; BSR set to: 6
 41927   013428  EE20 F010          	lfsr	2,16
 41928   01342C  513E               	movf	f_read@fp& (0+255),w,b
 41929   01342E  26D9               	addwf	fsr2l,f,c
 41930   013430  513F               	movf	(f_read@fp+1)& (0+255),w,b
 41931   013432  22DA               	addwfc	fsr2h,f,c
 41932   013434  5161               	movf	f_read@rcnt& (0+255),w,b
 41933   013436  26DE               	addwf	postinc2,f,c
 41934   013438  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 41935   01343A  22DE               	addwfc	postinc2,f,c
 41936   01343C  0E00               	movlw	0
 41937   01343E  22DE               	addwfc	postinc2,f,c
 41938   013440  22DE               	addwfc	postinc2,f,c
 41939   013442  EF1E  F097         	goto	l23001
 41940   013446                     l23111:
 41941                           
 41942                           ; BSR set to: 6
 41943                           ;../fatfs/ff.c: 4005:  return FR_OK;
 41944   013446  0E00               	movlw	0
 41945   013448                     l1935:
 41946                           
 41947                           ; BSR set to: 6
 41948   013448  0012               	return		;funcret
 41949   01344A                     __end_of_f_read:
 41950                           	callstack 0
 41951                           
 41952 ;; *************** function _validate *****************
 41953 ;; Defined at:
 41954 ;;		line 3615 in file "../fatfs/ff.c"
 41955 ;; Parameters:    Size  Location     Type
 41956 ;;  obj             2   94[BANK5 ] PTR struct .
 41957 ;;		 -> pb$fp(2), in_fl(546), scan_files1@dir(40), scan_files@dir(40), 
 41958 ;;		 -> rom_fl(546), 
 41959 ;;  rfs             2   96[BANK5 ] PTR PTR struct .
 41960 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 41961 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 41962 ;; Auto vars:     Size  Location     Type
 41963 ;;  res             1  104[BANK5 ] enum E597
 41964 ;; Return value:  Size  Location     Type
 41965 ;;                  1    wreg      enum E597
 41966 ;; Registers used:
 41967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41968 ;; Tracked objects:
 41969 ;;		On entry : 0/0
 41970 ;;		On exit  : 0/0
 41971 ;;		Unchanged: 0/0
 41972 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 41973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41974 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41976 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41977 ;;Total ram usage:       11 bytes
 41978 ;; Hardware stack levels used: 1
 41979 ;; Hardware stack levels required when called: 10
 41980 ;; This function calls:
 41981 ;;		_disk_status
 41982 ;; This function is called by:
 41983 ;;		_f_read
 41984 ;;		_f_write
 41985 ;;		_f_sync
 41986 ;;		_f_close
 41987 ;;		_f_lseek
 41988 ;;		_f_closedir
 41989 ;;		_f_readdir
 41990 ;;		_f_truncate
 41991 ;; This function uses a non-reentrant model
 41992 ;;
 41993                           
 41994                           	psect	text112
 41995   01D346                     __ptext112:
 41996                           	callstack 0
 41997   01D346                     _validate:
 41998                           	callstack 109
 41999   01D346                     
 42000                           ;../fatfs/ff.c: 3616:  FFOBJID* obj,;../fatfs/ff.c: 3617:  FATFS** rfs;../fatfs/ff.c: 36
      +                          19: {;../fatfs/ff.c: 3620:  FRESULT res = FR_INVALID_OBJECT;
 42001   01D346  0E09               	movlw	9
 42002   01D348  0105               	movlb	5	; () banked
 42003   01D34A  6FC8               	movwf	validate@res& (0+255),b
 42004   01D34C                     
 42005                           ; BSR set to: 5
 42006                           ;../fatfs/ff.c: 3623:  if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id)
      +                           {
 42007   01D34C  51BE               	movf	validate@obj& (0+255),w,b
 42008   01D34E  11BF               	iorwf	(validate@obj+1)& (0+255),w,b
 42009   01D350  B4D8               	btfsc	status,2,c
 42010   01D352  EFAD  F0E9         	goto	u30371
 42011   01D356  EFAF  F0E9         	goto	u30370
 42012   01D35A                     u30371:
 42013   01D35A  EF03  F0EA         	goto	l22361
 42014   01D35E                     u30370:
 42015   01D35E                     
 42016                           ; BSR set to: 5
 42017   01D35E  C5BE  F4D9         	movff	validate@obj,fsr2l
 42018   01D362  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42019   01D366  50DE               	movf	postinc2,w,c
 42020   01D368  10DE               	iorwf	postinc2,w,c
 42021   01D36A  B4D8               	btfsc	status,2,c
 42022   01D36C  EFBA  F0E9         	goto	u30381
 42023   01D370  EFBC  F0E9         	goto	u30380
 42024   01D374                     u30381:
 42025   01D374  EF03  F0EA         	goto	l22361
 42026   01D378                     u30380:
 42027   01D378                     
 42028                           ; BSR set to: 5
 42029   01D378  C5BE  F4D9         	movff	validate@obj,fsr2l
 42030   01D37C  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42031   01D380  C4DE F5C2          	movff	postinc2,??_validate
 42032   01D384  C4DD F5C3          	movff	postdec2,??_validate+1
 42033   01D388  C5C2  F4D9         	movff	??_validate,fsr2l
 42034   01D38C  C5C3  F4DA         	movff	??_validate+1,fsr2h
 42035   01D390  50DF               	movf	indf2,w,c
 42036   01D392  B4D8               	btfsc	status,2,c
 42037   01D394  EFCE  F0E9         	goto	u30391
 42038   01D398  EFD0  F0E9         	goto	u30390
 42039   01D39C                     u30391:
 42040   01D39C  EF03  F0EA         	goto	l22361
 42041   01D3A0                     u30390:
 42042   01D3A0                     
 42043                           ; BSR set to: 5
 42044   01D3A0  C5BE  F4D9         	movff	validate@obj,fsr2l
 42045   01D3A4  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42046   01D3A8  EE10 F006          	lfsr	1,6
 42047   01D3AC  50DE               	movf	postinc2,w,c
 42048   01D3AE  26E1               	addwf	fsr1l,f,c
 42049   01D3B0  50DD               	movf	postdec2,w,c
 42050   01D3B2  22E2               	addwfc	fsr1h,f,c
 42051   01D3B4  EE20 F002          	lfsr	2,2
 42052   01D3B8  51BE               	movf	validate@obj& (0+255),w,b
 42053   01D3BA  26D9               	addwf	fsr2l,f,c
 42054   01D3BC  51BF               	movf	(validate@obj+1)& (0+255),w,b
 42055   01D3BE  22DA               	addwfc	fsr2h,f,c
 42056   01D3C0  50E6               	movf	postinc1,w,c
 42057   01D3C2  18DE               	xorwf	postinc2,w,c
 42058   01D3C4  E107               	bnz	u30401
 42059   01D3C6  50E6               	movf	postinc1,w,c
 42060   01D3C8  18DE               	xorwf	postinc2,w,c
 42061   01D3CA  A4D8               	btfss	status,2,c
 42062   01D3CC  EFEA  F0E9         	goto	u30401
 42063   01D3D0  EFEC  F0E9         	goto	u30400
 42064   01D3D4                     u30401:
 42065   01D3D4  EF03  F0EA         	goto	l22361
 42066   01D3D8                     u30400:
 42067   01D3D8                     
 42068                           ; BSR set to: 5
 42069                           ;../fatfs/ff.c: 3635:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 42070   01D3D8  C5BE  F4D9         	movff	validate@obj,fsr2l
 42071   01D3DC  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42072   01D3E0  EE10 F001          	lfsr	1,1
 42073   01D3E4  50DE               	movf	postinc2,w,c
 42074   01D3E6  26E1               	addwf	fsr1l,f,c
 42075   01D3E8  50DD               	movf	postdec2,w,c
 42076   01D3EA  22E2               	addwfc	fsr1h,f,c
 42077   01D3EC  50E7               	movf	indf1,w,c
 42078   01D3EE  EC42  F0FE         	call	_disk_status
 42079   01D3F2  0105               	movlb	5	; () banked
 42080   01D3F4  6FC2               	movwf	??_validate& (0+255),b
 42081   01D3F6  B1C2               	btfsc	??_validate& (0+255),0,b
 42082   01D3F8  EF00  F0EA         	goto	u30411
 42083   01D3FC  EF02  F0EA         	goto	u30410
 42084   01D400                     u30411:
 42085   01D400  EF03  F0EA         	goto	l22361
 42086   01D404                     u30410:
 42087   01D404                     
 42088                           ; BSR set to: 5
 42089                           ;../fatfs/ff.c: 3636:    res = FR_OK;
 42090   01D404  6BC8               	clrf	validate@res& (0+255),b
 42091   01D406                     l22361:
 42092                           
 42093                           ; BSR set to: 5
 42094                           ;../fatfs/ff.c: 3640:  *rfs = (res == FR_OK) ? obj->fs : 0;
 42095   01D406  51C8               	movf	validate@res& (0+255),w,b
 42096   01D408  B4D8               	btfsc	status,2,c
 42097   01D40A  EF09  F0EA         	goto	u30421
 42098   01D40E  EF0B  F0EA         	goto	u30420
 42099   01D412                     u30421:
 42100   01D412  EF11  F0EA         	goto	l22365
 42101   01D416                     u30420:
 42102   01D416                     
 42103                           ; BSR set to: 5
 42104   01D416  0E00               	movlw	0
 42105   01D418  6FC6               	movwf	_validate$2906& (0+255),b
 42106   01D41A  0E00               	movlw	0
 42107   01D41C  6FC7               	movwf	(_validate$2906+1)& (0+255),b
 42108   01D41E  EF19  F0EA         	goto	l1879
 42109   01D422                     l22365:
 42110                           
 42111                           ; BSR set to: 5
 42112   01D422  C5BE  F4D9         	movff	validate@obj,fsr2l
 42113   01D426  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 42114   01D42A  C4DE F5C6          	movff	postinc2,_validate$2906
 42115   01D42E  C4DD F5C7          	movff	postdec2,_validate$2906+1
 42116   01D432                     l1879:
 42117                           
 42118                           ; BSR set to: 5
 42119   01D432  C5C0  F4D9         	movff	validate@rfs,fsr2l
 42120   01D436  C5C1  F4DA         	movff	validate@rfs+1,fsr2h
 42121   01D43A  C5C6  F4DE         	movff	_validate$2906,postinc2
 42122   01D43E  C5C7  F4DD         	movff	_validate$2906+1,postdec2
 42123   01D442                     
 42124                           ; BSR set to: 5
 42125                           ;../fatfs/ff.c: 3641:  return res;
 42126   01D442  51C8               	movf	validate@res& (0+255),w,b
 42127   01D444                     
 42128                           ; BSR set to: 5
 42129   01D444  0012               	return		;funcret
 42130   01D446                     __end_of_validate:
 42131                           	callstack 0
 42132                           
 42133 ;; *************** function _disk_status *****************
 42134 ;; Defined at:
 42135 ;;		line 98 in file "../drivers/diskio.c"
 42136 ;; Parameters:    Size  Location     Type
 42137 ;;  pdrv            1    wreg     unsigned char 
 42138 ;; Auto vars:     Size  Location     Type
 42139 ;;  pdrv            1   93[BANK5 ] unsigned char 
 42140 ;; Return value:  Size  Location     Type
 42141 ;;                  1    wreg      unsigned char 
 42142 ;; Registers used:
 42143 ;;		wreg, status,2, status,0
 42144 ;; Tracked objects:
 42145 ;;		On entry : 0/0
 42146 ;;		On exit  : 0/0
 42147 ;;		Unchanged: 0/0
 42148 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42153 ;;Total ram usage:        1 bytes
 42154 ;; Hardware stack levels used: 1
 42155 ;; Hardware stack levels required when called: 9
 42156 ;; This function calls:
 42157 ;;		_printf
 42158 ;; This function is called by:
 42159 ;;		_mount_volume
 42160 ;;		_validate
 42161 ;; This function uses a non-reentrant model
 42162 ;;
 42163                           
 42164                           	psect	text113
 42165   01FC84                     __ptext113:
 42166                           	callstack 0
 42167   01FC84                     _disk_status:
 42168                           	callstack 109
 42169                           
 42170                           ; BSR set to: 5
 42171                           ;incstack = 0
 42172                           ;disk_status@pdrv stored from wreg
 42173   01FC84  0105               	movlb	5	; () banked
 42174   01FC86  6FBD               	movwf	disk_status@pdrv& (0+255),b
 42175   01FC88                     
 42176                           ;../drivers/diskio.c: 98: DSTATUS disk_status(BYTE pdrv);../drivers/diskio.c: 99: {;../d
      +                          rivers/diskio.c: 100:     if (pdrv != 0) {
 42177   01FC88  0105               	movlb	5	; () banked
 42178   01FC8A  51BD               	movf	disk_status@pdrv& (0+255),w,b
 42179   01FC8C  B4D8               	btfsc	status,2,c
 42180   01FC8E  EF4B  F0FE         	goto	u29471
 42181   01FC92  EF4D  F0FE         	goto	u29470
 42182   01FC96                     u29471:
 42183   01FC96  EF50  F0FE         	goto	l21907
 42184   01FC9A                     u29470:
 42185   01FC9A                     l21903:
 42186                           
 42187                           ;../drivers/diskio.c: 102:         return 0x02;
 42188   01FC9A  0E02               	movlw	2
 42189   01FC9C  EF62  F0FE         	goto	l2475
 42190   01FCA0                     l21907:
 42191                           
 42192                           ; BSR set to: 5
 42193                           ;../drivers/diskio.c: 104:     if (start_lba == 0xffffffff) {
 42194   01FCA0  0107               	movlb	7	; () banked
 42195   01FCA2  29EE               	incf	_start_lba& (0+255),w,b
 42196   01FCA4  E10A               	bnz	u29481
 42197   01FCA6  29EF               	incf	(_start_lba+1)& (0+255),w,b
 42198   01FCA8  E108               	bnz	u29481
 42199   01FCAA  29F0               	incf	(_start_lba+2)& (0+255),w,b
 42200   01FCAC  E106               	bnz	u29481
 42201   01FCAE  29F1               	incf	(_start_lba+3)& (0+255),w,b
 42202   01FCB0  A4D8               	btfss	status,2,c
 42203   01FCB2  EF5D  F0FE         	goto	u29481
 42204   01FCB6  EF5F  F0FE         	goto	u29480
 42205   01FCBA                     u29481:
 42206   01FCBA  EF61  F0FE         	goto	l21915
 42207   01FCBE                     u29480:
 42208   01FCBE  EF4D  F0FE         	goto	l21903
 42209   01FCC2                     l21915:
 42210                           
 42211                           ; BSR set to: 7
 42212                           ;../drivers/diskio.c: 108:     return 0;
 42213   01FCC2  0E00               	movlw	0
 42214   01FCC4                     l2475:
 42215   01FCC4  0012               	return		;funcret
 42216   01FCC6                     __end_of_disk_status:
 42217                           	callstack 0
 42218                           
 42219 ;; *************** function _get_fat *****************
 42220 ;; Defined at:
 42221 ;;		line 1162 in file "../fatfs/ff.c"
 42222 ;; Parameters:    Size  Location     Type
 42223 ;;  obj             2   36[BANK6 ] PTR struct .
 42224 ;;		 -> pb$fp(2), f_rename@djn(40), f_rename@djo(40), f_mkdir@sobj(14), 
 42225 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_getfree@obj(14), 
 42226 ;;		 -> f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), 
 42227 ;;		 -> in_fl(546), scan_files1@dir(40), scan_files@dir(40), rom_fl(546), 
 42228 ;;  clst            4   38[BANK6 ] unsigned long 
 42229 ;; Auto vars:     Size  Location     Type
 42230 ;;  val             4   54[BANK6 ] unsigned long 
 42231 ;;  fs              2   60[BANK6 ] PTR struct .
 42232 ;;		 -> fs(564), NULL(0), 
 42233 ;;  bc              2   58[BANK6 ] unsigned int 
 42234 ;;  wc              2   52[BANK6 ] unsigned int 
 42235 ;; Return value:  Size  Location     Type
 42236 ;;                  4   36[BANK6 ] unsigned long 
 42237 ;; Registers used:
 42238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42239 ;; Tracked objects:
 42240 ;;		On entry : 0/0
 42241 ;;		On exit  : 0/0
 42242 ;;		Unchanged: 0/0
 42243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42244 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42245 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42246 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42247 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42248 ;;Total ram usage:       26 bytes
 42249 ;; Hardware stack levels used: 1
 42250 ;; Hardware stack levels required when called: 14
 42251 ;; This function calls:
 42252 ;;		_ld_dword
 42253 ;;		_ld_word
 42254 ;;		_move_window
 42255 ;; This function is called by:
 42256 ;;		_remove_chain
 42257 ;;		_create_chain
 42258 ;;		_dir_sdi
 42259 ;;		_dir_next
 42260 ;;		_f_open
 42261 ;;		_f_read
 42262 ;;		_f_lseek
 42263 ;;		_f_getfree
 42264 ;;		_f_truncate
 42265 ;; This function uses a non-reentrant model
 42266 ;;
 42267                           
 42268                           	psect	text114
 42269   0169EE                     __ptext114:
 42270                           	callstack 0
 42271   0169EE                     _get_fat:
 42272                           	callstack 105
 42273   0169EE                     
 42274                           ;../fatfs/ff.c: 1163:  FFOBJID* obj,;../fatfs/ff.c: 1164:  DWORD clst;../fatfs/ff.c: 116
      +                          6: {;../fatfs/ff.c: 1167:  UINT wc, bc;;../fatfs/ff.c: 1168:  DWORD val;;../fatfs/ff.c: 
      +                          1169:  FATFS *fs = obj->fs;
 42275   0169EE  C624  F4D9         	movff	get_fat@obj,fsr2l
 42276   0169F2  C625  F4DA         	movff	get_fat@obj+1,fsr2h
 42277   0169F6  C4DE F63C          	movff	postinc2,get_fat@fs
 42278   0169FA  C4DD F63D          	movff	postdec2,get_fat@fs+1
 42279   0169FE                     
 42280                           ;../fatfs/ff.c: 1172:  if (clst < 2 || clst >= fs->n_fatent) {
 42281   0169FE  0106               	movlb	6	; () banked
 42282   016A00  5129               	movf	(get_fat@clst+3)& (0+255),w,b
 42283   016A02  1128               	iorwf	(get_fat@clst+2)& (0+255),w,b
 42284   016A04  1127               	iorwf	(get_fat@clst+1)& (0+255),w,b
 42285   016A06  E109               	bnz	u28250
 42286   016A08  0E02               	movlw	2
 42287   016A0A  5D26               	subwf	get_fat@clst& (0+255),w,b
 42288   016A0C  A0D8               	btfss	status,0,c
 42289   016A0E  EF0B  F0B5         	goto	u28251
 42290   016A12  EF0D  F0B5         	goto	u28250
 42291   016A16                     u28251:
 42292   016A16  EF22  F0B5         	goto	l21319
 42293   016A1A                     u28250:
 42294   016A1A                     
 42295                           ; BSR set to: 6
 42296   016A1A  EE20 F018          	lfsr	2,24
 42297   016A1E  513C               	movf	get_fat@fs& (0+255),w,b
 42298   016A20  26D9               	addwf	fsr2l,f,c
 42299   016A22  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42300   016A24  22DA               	addwfc	fsr2h,f,c
 42301   016A26  50DE               	movf	postinc2,w,c
 42302   016A28  5D26               	subwf	get_fat@clst& (0+255),w,b
 42303   016A2A  50DE               	movf	postinc2,w,c
 42304   016A2C  5927               	subwfb	(get_fat@clst+1)& (0+255),w,b
 42305   016A2E  50DE               	movf	postinc2,w,c
 42306   016A30  5928               	subwfb	(get_fat@clst+2)& (0+255),w,b
 42307   016A32  50DE               	movf	postinc2,w,c
 42308   016A34  5929               	subwfb	(get_fat@clst+3)& (0+255),w,b
 42309   016A36  A0D8               	btfss	status,0,c
 42310   016A38  EF20  F0B5         	goto	u28261
 42311   016A3C  EF22  F0B5         	goto	u28260
 42312   016A40                     u28261:
 42313   016A40  EF2C  F0B5         	goto	l1492
 42314   016A44                     u28260:
 42315   016A44                     l21319:
 42316                           
 42317                           ; BSR set to: 6
 42318                           ;../fatfs/ff.c: 1173:   val = 1;
 42319   016A44  0E01               	movlw	1
 42320   016A46  6F36               	movwf	get_fat@val& (0+255),b
 42321   016A48  0E00               	movlw	0
 42322   016A4A  6F37               	movwf	(get_fat@val+1)& (0+255),b
 42323   016A4C  0E00               	movlw	0
 42324   016A4E  6F38               	movwf	(get_fat@val+2)& (0+255),b
 42325   016A50  0E00               	movlw	0
 42326   016A52  6F39               	movwf	(get_fat@val+3)& (0+255),b
 42327                           
 42328                           ;../fatfs/ff.c: 1175:  } else {
 42329   016A54  EFE4  F0B6         	goto	l1495
 42330   016A58                     l1492:
 42331                           
 42332                           ; BSR set to: 6
 42333                           ;../fatfs/ff.c: 1176:   val = 0xFFFFFFFF;
 42334   016A58  6936               	setf	get_fat@val& (0+255),b
 42335   016A5A  6937               	setf	(get_fat@val+1)& (0+255),b
 42336   016A5C  6938               	setf	(get_fat@val+2)& (0+255),b
 42337   016A5E  6939               	setf	(get_fat@val+3)& (0+255),b
 42338                           
 42339                           ;../fatfs/ff.c: 1178:   switch (fs->fs_type) {
 42340   016A60  EFD1  F0B6         	goto	l21359
 42341   016A64                     l1497:
 42342                           
 42343                           ; BSR set to: 6
 42344                           ;../fatfs/ff.c: 1180:    bc = (UINT)clst; bc += bc / 2;
 42345   016A64  C626  F63A         	movff	get_fat@clst,get_fat@bc
 42346   016A68  C627  F63B         	movff	get_fat@clst+1,get_fat@bc+1
 42347   016A6C                     
 42348                           ; BSR set to: 6
 42349   016A6C  90D8               	bcf	status,0,c
 42350   016A6E  313B               	rrcf	(get_fat@bc+1)& (0+255),w,b
 42351   016A70  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42352   016A72  313A               	rrcf	get_fat@bc& (0+255),w,b
 42353   016A74  6F2A               	movwf	??_get_fat& (0+255),b
 42354   016A76  512A               	movf	??_get_fat& (0+255),w,b
 42355   016A78  273A               	addwf	get_fat@bc& (0+255),f,b
 42356   016A7A  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42357   016A7C  233B               	addwfc	(get_fat@bc+1)& (0+255),f,b
 42358   016A7E                     
 42359                           ; BSR set to: 6
 42360                           ;../fatfs/ff.c: 1181:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 42361   016A7E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42362   016A82  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42363   016A86  EE20 F024          	lfsr	2,36
 42364   016A8A  513C               	movf	get_fat@fs& (0+255),w,b
 42365   016A8C  26D9               	addwf	fsr2l,f,c
 42366   016A8E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42367   016A90  22DA               	addwfc	fsr2h,f,c
 42368   016A92  C4DE F62A          	movff	postinc2,??_get_fat
 42369   016A96  C4DE F62B          	movff	postinc2,??_get_fat+1
 42370   016A9A  C4DE F62C          	movff	postinc2,??_get_fat+2
 42371   016A9E  C4DE F62D          	movff	postinc2,??_get_fat+3
 42372   016AA2  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 42373   016AA6  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 42374   016AAA  0E09               	movlw	9
 42375   016AAC  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42376   016AAE                     u28275:
 42377   016AAE  90D8               	bcf	status,0,c
 42378   016AB0  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42379   016AB2  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42380   016AB4  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 42381   016AB6  EF57  F0B5         	goto	u28275
 42382   016ABA  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42383   016ABC  252A               	addwf	??_get_fat& (0+255),w,b
 42384   016ABE  6F1C               	movwf	move_window@sect& (0+255),b
 42385   016AC0  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42386   016AC2  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 42387   016AC4  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42388   016AC6  0E00               	movlw	0
 42389   016AC8  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 42390   016ACA  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42391   016ACC  0E00               	movlw	0
 42392   016ACE  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42393   016AD0  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42394   016AD2  ECAB  F0EF         	call	_move_window	;wreg free
 42395   016AD6  0900               	iorlw	0
 42396   016AD8  B4D8               	btfsc	status,2,c
 42397   016ADA  EF71  F0B5         	goto	u28281
 42398   016ADE  EF73  F0B5         	goto	u28280
 42399   016AE2                     u28281:
 42400   016AE2  EF75  F0B5         	goto	l21327
 42401   016AE6                     u28280:
 42402   016AE6  EFE4  F0B6         	goto	l1495
 42403   016AEA                     l21327:
 42404                           
 42405                           ;../fatfs/ff.c: 1182:    wc = fs->win[bc++ % ((UINT)512)];
 42406   016AEA  0EFF               	movlw	255
 42407   016AEC  0106               	movlb	6	; () banked
 42408   016AEE  153A               	andwf	get_fat@bc& (0+255),w,b
 42409   016AF0  6F2A               	movwf	??_get_fat& (0+255),b
 42410   016AF2  0E01               	movlw	1
 42411   016AF4  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 42412   016AF6  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42413   016AF8  512A               	movf	??_get_fat& (0+255),w,b
 42414   016AFA  253C               	addwf	get_fat@fs& (0+255),w,b
 42415   016AFC  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42416   016AFE  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42417   016B00  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42418   016B02  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42419   016B04  0E34               	movlw	52
 42420   016B06  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 42421   016B08  6ED9               	movwf	fsr2l,c
 42422   016B0A  0E00               	movlw	0
 42423   016B0C  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42424   016B0E  6EDA               	movwf	fsr2h,c
 42425   016B10  50DF               	movf	indf2,w,c
 42426   016B12  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42427   016B14  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42428   016B16  6F34               	movwf	get_fat@wc& (0+255),b
 42429   016B18  6B35               	clrf	(get_fat@wc+1)& (0+255),b
 42430   016B1A                     
 42431                           ; BSR set to: 6
 42432   016B1A  4B3A               	infsnz	get_fat@bc& (0+255),f,b
 42433   016B1C  2B3B               	incf	(get_fat@bc+1)& (0+255),f,b
 42434   016B1E                     
 42435                           ; BSR set to: 6
 42436                           ;../fatfs/ff.c: 1183:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 42437   016B1E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42438   016B22  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42439   016B26  EE20 F024          	lfsr	2,36
 42440   016B2A  513C               	movf	get_fat@fs& (0+255),w,b
 42441   016B2C  26D9               	addwf	fsr2l,f,c
 42442   016B2E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42443   016B30  22DA               	addwfc	fsr2h,f,c
 42444   016B32  C4DE F62A          	movff	postinc2,??_get_fat
 42445   016B36  C4DE F62B          	movff	postinc2,??_get_fat+1
 42446   016B3A  C4DE F62C          	movff	postinc2,??_get_fat+2
 42447   016B3E  C4DE F62D          	movff	postinc2,??_get_fat+3
 42448   016B42  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 42449   016B46  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 42450   016B4A  0E09               	movlw	9
 42451   016B4C  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42452   016B4E                     u28295:
 42453   016B4E  90D8               	bcf	status,0,c
 42454   016B50  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42455   016B52  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42456   016B54  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 42457   016B56  EFA7  F0B5         	goto	u28295
 42458   016B5A  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42459   016B5C  252A               	addwf	??_get_fat& (0+255),w,b
 42460   016B5E  6F1C               	movwf	move_window@sect& (0+255),b
 42461   016B60  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42462   016B62  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 42463   016B64  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42464   016B66  0E00               	movlw	0
 42465   016B68  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 42466   016B6A  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42467   016B6C  0E00               	movlw	0
 42468   016B6E  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42469   016B70  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42470   016B72  ECAB  F0EF         	call	_move_window	;wreg free
 42471   016B76  0900               	iorlw	0
 42472   016B78  B4D8               	btfsc	status,2,c
 42473   016B7A  EFC1  F0B5         	goto	u28301
 42474   016B7E  EFC3  F0B5         	goto	u28300
 42475   016B82                     u28301:
 42476   016B82  EFC5  F0B5         	goto	l21335
 42477   016B86                     u28300:
 42478   016B86  EFE4  F0B6         	goto	l1495
 42479   016B8A                     l21335:
 42480                           
 42481                           ;../fatfs/ff.c: 1184:    wc |= fs->win[bc % ((UINT)512)] << 8;
 42482   016B8A  0EFF               	movlw	255
 42483   016B8C  0106               	movlb	6	; () banked
 42484   016B8E  153A               	andwf	get_fat@bc& (0+255),w,b
 42485   016B90  6F2A               	movwf	??_get_fat& (0+255),b
 42486   016B92  0E01               	movlw	1
 42487   016B94  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 42488   016B96  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 42489   016B98  512A               	movf	??_get_fat& (0+255),w,b
 42490   016B9A  253C               	addwf	get_fat@fs& (0+255),w,b
 42491   016B9C  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42492   016B9E  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42493   016BA0  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42494   016BA2  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42495   016BA4  0E34               	movlw	52
 42496   016BA6  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 42497   016BA8  6ED9               	movwf	fsr2l,c
 42498   016BAA  0E00               	movlw	0
 42499   016BAC  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 42500   016BAE  6EDA               	movwf	fsr2h,c
 42501   016BB0  50DF               	movf	indf2,w,c
 42502   016BB2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42503   016BB4  512E               	movf	(??_get_fat+4)& (0+255),w,b
 42504   016BB6  6F30               	movwf	(??_get_fat+6)& (0+255),b
 42505   016BB8  6B2F               	clrf	(??_get_fat+5)& (0+255),b
 42506   016BBA  512F               	movf	(??_get_fat+5)& (0+255),w,b
 42507   016BBC  1334               	iorwf	get_fat@wc& (0+255),f,b
 42508   016BBE  5130               	movf	(??_get_fat+6)& (0+255),w,b
 42509   016BC0  1335               	iorwf	(get_fat@wc+1)& (0+255),f,b
 42510   016BC2                     
 42511                           ; BSR set to: 6
 42512                           ;../fatfs/ff.c: 1185:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 42513   016BC2  B126               	btfsc	get_fat@clst& (0+255),0,b
 42514   016BC4  EFE6  F0B5         	goto	u28311
 42515   016BC8  EFE8  F0B5         	goto	u28310
 42516   016BCC                     u28311:
 42517   016BCC  EFF0  F0B5         	goto	l21341
 42518   016BD0                     u28310:
 42519   016BD0                     
 42520                           ; BSR set to: 6
 42521   016BD0  0EFF               	movlw	255
 42522   016BD2  1534               	andwf	get_fat@wc& (0+255),w,b
 42523   016BD4  6F32               	movwf	_get_fat$2170& (0+255),b
 42524   016BD6  0E0F               	movlw	15
 42525   016BD8  1535               	andwf	(get_fat@wc+1)& (0+255),w,b
 42526   016BDA  6F33               	movwf	(_get_fat$2170+1)& (0+255),b
 42527   016BDC  EF00  F0B6         	goto	l21343
 42528   016BE0                     l21341:
 42529                           
 42530                           ; BSR set to: 6
 42531   016BE0  C634  F62A         	movff	get_fat@wc,??_get_fat
 42532   016BE4  C635  F62B         	movff	get_fat@wc+1,??_get_fat+1
 42533   016BE8  0E04               	movlw	4
 42534   016BEA  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42535   016BEC                     u28325:
 42536   016BEC  90D8               	bcf	status,0,c
 42537   016BEE  332B               	rrcf	(??_get_fat+1)& (0+255),f,b
 42538   016BF0  332A               	rrcf	??_get_fat& (0+255),f,b
 42539   016BF2  2F2C               	decfsz	(??_get_fat+2)& (0+255),f,b
 42540   016BF4  EFF6  F0B5         	goto	u28325
 42541   016BF8  C62A  F632         	movff	??_get_fat,_get_fat$2170
 42542   016BFC  C62B  F633         	movff	??_get_fat+1,_get_fat$2170+1
 42543   016C00                     l21343:
 42544                           
 42545                           ; BSR set to: 6
 42546   016C00  C632  F636         	movff	_get_fat$2170,get_fat@val
 42547   016C04  C633  F637         	movff	_get_fat$2170+1,get_fat@val+1
 42548   016C08  6B38               	clrf	(get_fat@val+2)& (0+255),b
 42549   016C0A  6B39               	clrf	(get_fat@val+3)& (0+255),b
 42550                           
 42551                           ;../fatfs/ff.c: 1186:    break;
 42552   016C0C  EFE4  F0B6         	goto	l1495
 42553   016C10                     l21345:
 42554                           
 42555                           ; BSR set to: 6
 42556                           ;../fatfs/ff.c: 1189:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) !
      +                          = FR_OK) break;
 42557   016C10  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42558   016C14  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42559   016C18  EE20 F024          	lfsr	2,36
 42560   016C1C  513C               	movf	get_fat@fs& (0+255),w,b
 42561   016C1E  26D9               	addwf	fsr2l,f,c
 42562   016C20  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42563   016C22  22DA               	addwfc	fsr2h,f,c
 42564   016C24  C4DE F62A          	movff	postinc2,??_get_fat
 42565   016C28  C4DE F62B          	movff	postinc2,??_get_fat+1
 42566   016C2C  C4DE F62C          	movff	postinc2,??_get_fat+2
 42567   016C30  C4DE F62D          	movff	postinc2,??_get_fat+3
 42568   016C34  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 42569   016C38  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 42570   016C3C  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 42571   016C40  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 42572   016C44  C62F  F62E         	movff	??_get_fat+5,??_get_fat+4
 42573   016C48  C630  F62F         	movff	??_get_fat+6,??_get_fat+5
 42574   016C4C  C631  F630         	movff	??_get_fat+7,??_get_fat+6
 42575   016C50  6B31               	clrf	(??_get_fat+7)& (0+255),b
 42576   016C52  512A               	movf	??_get_fat& (0+255),w,b
 42577   016C54  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42578   016C56  6F1C               	movwf	move_window@sect& (0+255),b
 42579   016C58  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42580   016C5A  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42581   016C5C  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42582   016C5E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42583   016C60  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 42584   016C62  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42585   016C64  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42586   016C66  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 42587   016C68  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42588   016C6A  ECAB  F0EF         	call	_move_window	;wreg free
 42589   016C6E  0900               	iorlw	0
 42590   016C70  B4D8               	btfsc	status,2,c
 42591   016C72  EF3D  F0B6         	goto	u28331
 42592   016C76  EF3F  F0B6         	goto	u28330
 42593   016C7A                     u28331:
 42594   016C7A  EF41  F0B6         	goto	l21349
 42595   016C7E                     u28330:
 42596   016C7E  EFE4  F0B6         	goto	l1495
 42597   016C82                     l21349:
 42598                           
 42599                           ;../fatfs/ff.c: 1190:    val = ld_word(fs->win + clst * 2 % ((UINT)512));
 42600   016C82  C626  F62A         	movff	get_fat@clst,??_get_fat
 42601   016C86  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 42602   016C8A  90D8               	bcf	status,0,c
 42603   016C8C  0106               	movlb	6	; () banked
 42604   016C8E  372A               	rlcf	??_get_fat& (0+255),f,b
 42605   016C90  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42606   016C92  0EFF               	movlw	255
 42607   016C94  152A               	andwf	??_get_fat& (0+255),w,b
 42608   016C96  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42609   016C98  0E01               	movlw	1
 42610   016C9A  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 42611   016C9C  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42612   016C9E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42613   016CA0  253C               	addwf	get_fat@fs& (0+255),w,b
 42614   016CA2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42615   016CA4  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42616   016CA6  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42617   016CA8  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 42618   016CAA  0E34               	movlw	52
 42619   016CAC  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42620   016CAE  6E04               	movwf	ld_word@ptr^(0+1280),c
 42621   016CB0  0E00               	movlw	0
 42622   016CB2  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42623   016CB4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 42624   016CB6  EC4C  F0FF         	call	_ld_word	;wreg free
 42625   016CBA  C504  F636         	movff	?_ld_word,get_fat@val
 42626   016CBE  C505  F637         	movff	?_ld_word+1,get_fat@val+1
 42627   016CC2  0106               	movlb	6	; () banked
 42628   016CC4  6B38               	clrf	(get_fat@val+2)& (0+255),b
 42629   016CC6  6B39               	clrf	(get_fat@val+3)& (0+255),b
 42630                           
 42631                           ;../fatfs/ff.c: 1191:    break;
 42632   016CC8  EFE4  F0B6         	goto	l1495
 42633   016CCC                     l21351:
 42634                           
 42635                           ; BSR set to: 6
 42636                           ;../fatfs/ff.c: 1194:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) !
      +                          = FR_OK) break;
 42637   016CCC  C63C  F61A         	movff	get_fat@fs,move_window@fs
 42638   016CD0  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 42639   016CD4  EE20 F024          	lfsr	2,36
 42640   016CD8  513C               	movf	get_fat@fs& (0+255),w,b
 42641   016CDA  26D9               	addwf	fsr2l,f,c
 42642   016CDC  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 42643   016CDE  22DA               	addwfc	fsr2h,f,c
 42644   016CE0  C4DE F62A          	movff	postinc2,??_get_fat
 42645   016CE4  C4DE F62B          	movff	postinc2,??_get_fat+1
 42646   016CE8  C4DE F62C          	movff	postinc2,??_get_fat+2
 42647   016CEC  C4DE F62D          	movff	postinc2,??_get_fat+3
 42648   016CF0  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 42649   016CF4  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 42650   016CF8  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 42651   016CFC  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 42652   016D00  0E08               	movlw	8
 42653   016D02  EF88  F0B6         	goto	u28340
 42654   016D06                     u28345:
 42655   016D06  90D8               	bcf	status,0,c
 42656   016D08  3331               	rrcf	(??_get_fat+7)& (0+255),f,b
 42657   016D0A  3330               	rrcf	(??_get_fat+6)& (0+255),f,b
 42658   016D0C  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 42659   016D0E  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 42660   016D10                     u28340:
 42661   016D10  2EE8               	decfsz	wreg,f,c
 42662   016D12  EF83  F0B6         	goto	u28345
 42663   016D16  512A               	movf	??_get_fat& (0+255),w,b
 42664   016D18  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42665   016D1A  6F1C               	movwf	move_window@sect& (0+255),b
 42666   016D1C  512B               	movf	(??_get_fat+1)& (0+255),w,b
 42667   016D1E  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42668   016D20  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42669   016D22  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42670   016D24  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 42671   016D26  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42672   016D28  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42673   016D2A  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 42674   016D2C  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42675   016D2E  ECAB  F0EF         	call	_move_window	;wreg free
 42676   016D32  0900               	iorlw	0
 42677   016D34  B4D8               	btfsc	status,2,c
 42678   016D36  EF9F  F0B6         	goto	u28351
 42679   016D3A  EFA1  F0B6         	goto	u28350
 42680   016D3E                     u28351:
 42681   016D3E  EFA3  F0B6         	goto	l21355
 42682   016D42                     u28350:
 42683   016D42  EFE4  F0B6         	goto	l1495
 42684   016D46                     l21355:
 42685                           
 42686                           ;../fatfs/ff.c: 1195:    val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
 42687   016D46  C626  F62A         	movff	get_fat@clst,??_get_fat
 42688   016D4A  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 42689   016D4E  0106               	movlb	6	; () banked
 42690   016D50  90D8               	bcf	status,0,c
 42691   016D52  372A               	rlcf	??_get_fat& (0+255),f,b
 42692   016D54  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42693   016D56  90D8               	bcf	status,0,c
 42694   016D58  372A               	rlcf	??_get_fat& (0+255),f,b
 42695   016D5A  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 42696   016D5C  0EFF               	movlw	255
 42697   016D5E  152A               	andwf	??_get_fat& (0+255),w,b
 42698   016D60  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 42699   016D62  0E01               	movlw	1
 42700   016D64  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 42701   016D66  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 42702   016D68  512C               	movf	(??_get_fat+2)& (0+255),w,b
 42703   016D6A  253C               	addwf	get_fat@fs& (0+255),w,b
 42704   016D6C  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 42705   016D6E  512D               	movf	(??_get_fat+3)& (0+255),w,b
 42706   016D70  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 42707   016D72  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 42708   016D74  0E34               	movlw	52
 42709   016D76  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 42710   016D78  6E04               	movwf	ld_dword@ptr^(0+1280),c
 42711   016D7A  0E00               	movlw	0
 42712   016D7C  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 42713   016D7E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 42714   016D80  ECC7  F0F2         	call	_ld_dword	;wreg free
 42715   016D84  0EFF               	movlw	255
 42716   016D86  1404               	andwf	?_ld_dword^(0+1280),w,c
 42717   016D88  0106               	movlb	6	; () banked
 42718   016D8A  6F36               	movwf	get_fat@val& (0+255),b
 42719   016D8C  0EFF               	movlw	255
 42720   016D8E  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 42721   016D90  6F37               	movwf	(get_fat@val+1)& (0+255),b
 42722   016D92  0EFF               	movlw	255
 42723   016D94  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 42724   016D96  6F38               	movwf	(get_fat@val+2)& (0+255),b
 42725   016D98  0E0F               	movlw	15
 42726   016D9A  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 42727   016D9C  6F39               	movwf	(get_fat@val+3)& (0+255),b
 42728                           
 42729                           ;../fatfs/ff.c: 1196:    break;
 42730   016D9E  EFE4  F0B6         	goto	l1495
 42731   016DA2                     l21359:
 42732                           
 42733                           ; BSR set to: 6
 42734   016DA2  C63C  F4D9         	movff	get_fat@fs,fsr2l
 42735   016DA6  C63D  F4DA         	movff	get_fat@fs+1,fsr2h
 42736   016DAA  50DF               	movf	indf2,w,c
 42737                           
 42738                           ; Switch size 1, requested type "simple"
 42739                           ; Number of cases is 3, Range of values is 1 to 3
 42740                           ; switch strategies available:
 42741                           ; Name         Instructions Cycles
 42742                           ; simple_byte           10     6 (average)
 42743                           ;	Chosen strategy is simple_byte
 42744   016DAC  0A01               	xorlw	1	; case 1
 42745   016DAE  B4D8               	btfsc	status,2,c
 42746   016DB0  EF32  F0B5         	goto	l1497
 42747   016DB4  0A03               	xorlw	3	; case 2
 42748   016DB6  B4D8               	btfsc	status,2,c
 42749   016DB8  EF08  F0B6         	goto	l21345
 42750   016DBC  0A01               	xorlw	1	; case 3
 42751   016DBE  B4D8               	btfsc	status,2,c
 42752   016DC0  EF66  F0B6         	goto	l21351
 42753   016DC4  EF22  F0B5         	goto	l21319
 42754   016DC8                     l1495:
 42755                           
 42756                           ;../fatfs/ff.c: 1229:  return val;
 42757   016DC8  C636  F624         	movff	get_fat@val,?_get_fat
 42758   016DCC  C637  F625         	movff	get_fat@val+1,?_get_fat+1
 42759   016DD0  C638  F626         	movff	get_fat@val+2,?_get_fat+2
 42760   016DD4  C639  F627         	movff	get_fat@val+3,?_get_fat+3
 42761   016DD8  0012               	return		;funcret
 42762   016DDA                     __end_of_get_fat:
 42763                           	callstack 0
 42764                           
 42765 ;; *************** function _move_window *****************
 42766 ;; Defined at:
 42767 ;;		line 1078 in file "../fatfs/ff.c"
 42768 ;; Parameters:    Size  Location     Type
 42769 ;;  fs              2   26[BANK6 ] PTR struct .
 42770 ;;		 -> fs(564), NULL(0), 
 42771 ;;  sect            4   28[BANK6 ] unsigned long 
 42772 ;; Auto vars:     Size  Location     Type
 42773 ;;  res             1  158[BANK5 ] enum E597
 42774 ;; Return value:  Size  Location     Type
 42775 ;;                  1    wreg      enum E597
 42776 ;; Registers used:
 42777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42778 ;; Tracked objects:
 42779 ;;		On entry : 0/0
 42780 ;;		On exit  : 0/0
 42781 ;;		Unchanged: 0/0
 42782 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42783 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42785 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42786 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42787 ;;Total ram usage:       11 bytes
 42788 ;; Hardware stack levels used: 1
 42789 ;; Hardware stack levels required when called: 13
 42790 ;; This function calls:
 42791 ;;		_disk_read
 42792 ;;		_sync_window
 42793 ;; This function is called by:
 42794 ;;		_get_fat
 42795 ;;		_put_fat
 42796 ;;		_dir_alloc
 42797 ;;		_dir_read
 42798 ;;		_dir_find
 42799 ;;		_dir_register
 42800 ;;		_check_fs
 42801 ;;		_mount_volume
 42802 ;;		_f_open
 42803 ;;		_f_sync
 42804 ;;		_f_getcwd
 42805 ;;		_dir_remove
 42806 ;;		_f_getfree
 42807 ;;		_f_rename
 42808 ;; This function uses a non-reentrant model
 42809 ;;
 42810                           
 42811                           	psect	text115
 42812   01DF56                     __ptext115:
 42813                           	callstack 0
 42814   01DF56                     _move_window:
 42815                           	callstack 105
 42816   01DF56                     
 42817                           ;../fatfs/ff.c: 1079:  FATFS* fs,;../fatfs/ff.c: 1080:  LBA_t sect;../fatfs/ff.c: 1082: 
      +                          {;../fatfs/ff.c: 1083:  FRESULT res = FR_OK;
 42818   01DF56  0105               	movlb	5	; () banked
 42819   01DF58  6BFE               	clrf	move_window@res& (0+255),b
 42820   01DF5A                     
 42821                           ; BSR set to: 5
 42822                           ;../fatfs/ff.c: 1086:  if (sect != fs->winsect) {
 42823   01DF5A  0106               	movlb	6	; () banked
 42824   01DF5C  EE20 F030          	lfsr	2,48
 42825   01DF60  511A               	movf	move_window@fs& (0+255),w,b
 42826   01DF62  26D9               	addwf	fsr2l,f,c
 42827   01DF64  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42828   01DF66  22DA               	addwfc	fsr2h,f,c
 42829   01DF68  511C               	movf	move_window@sect& (0+255),w,b
 42830   01DF6A  18DE               	xorwf	postinc2,w,c
 42831   01DF6C  E10F               	bnz	u28180
 42832   01DF6E  511D               	movf	(move_window@sect+1)& (0+255),w,b
 42833   01DF70  18DE               	xorwf	postinc2,w,c
 42834   01DF72  E10C               	bnz	u28180
 42835   01DF74  511E               	movf	(move_window@sect+2)& (0+255),w,b
 42836   01DF76  18DE               	xorwf	postinc2,w,c
 42837   01DF78  E109               	bnz	u28180
 42838   01DF7A  511F               	movf	(move_window@sect+3)& (0+255),w,b
 42839   01DF7C  18DE               	xorwf	postinc2,w,c
 42840   01DF7E  B4D8               	btfsc	status,2,c
 42841   01DF80  EFC4  F0EF         	goto	u28181
 42842   01DF84  EFC6  F0EF         	goto	u28180
 42843   01DF88                     u28181:
 42844   01DF88  EF11  F0F0         	goto	l21279
 42845   01DF8C                     u28180:
 42846   01DF8C                     
 42847                           ; BSR set to: 6
 42848                           ;../fatfs/ff.c: 1088:   res = sync_window(fs);
 42849   01DF8C  C61A  F608         	movff	move_window@fs,sync_window@fs
 42850   01DF90  C61B  F609         	movff	move_window@fs+1,sync_window@fs+1
 42851   01DF94  EC26  F0DB         	call	_sync_window	;wreg free
 42852   01DF98  0105               	movlb	5	; () banked
 42853   01DF9A  6FFE               	movwf	move_window@res& (0+255),b
 42854   01DF9C                     
 42855                           ; BSR set to: 5
 42856                           ;../fatfs/ff.c: 1090:   if (res == FR_OK) {
 42857   01DF9C  51FE               	movf	move_window@res& (0+255),w,b
 42858   01DF9E  A4D8               	btfss	status,2,c
 42859   01DFA0  EFD4  F0EF         	goto	u28191
 42860   01DFA4  EFD6  F0EF         	goto	u28190
 42861   01DFA8                     u28191:
 42862   01DFA8  EF11  F0F0         	goto	l21279
 42863   01DFAC                     u28190:
 42864   01DFAC                     
 42865                           ; BSR set to: 5
 42866                           ;../fatfs/ff.c: 1091:    if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 42867   01DFAC  0E34               	movlw	52
 42868   01DFAE  0106               	movlb	6	; () banked
 42869   01DFB0  251A               	addwf	move_window@fs& (0+255),w,b
 42870   01DFB2  6F00               	movwf	disk_read@buff& (0+255),b
 42871   01DFB4  0E00               	movlw	0
 42872   01DFB6  211B               	addwfc	(move_window@fs+1)& (0+255),w,b
 42873   01DFB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 42874   01DFBA  C61C  F602         	movff	move_window@sect,disk_read@sector
 42875   01DFBE  C61D  F603         	movff	move_window@sect+1,disk_read@sector+1
 42876   01DFC2  C61E  F604         	movff	move_window@sect+2,disk_read@sector+2
 42877   01DFC6  C61F  F605         	movff	move_window@sect+3,disk_read@sector+3
 42878   01DFCA  0E00               	movlw	0
 42879   01DFCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 42880   01DFCE  0E01               	movlw	1
 42881   01DFD0  6F06               	movwf	disk_read@count& (0+255),b
 42882   01DFD2  EE20 F001          	lfsr	2,1
 42883   01DFD6  511A               	movf	move_window@fs& (0+255),w,b
 42884   01DFD8  26D9               	addwf	fsr2l,f,c
 42885   01DFDA  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42886   01DFDC  22DA               	addwfc	fsr2h,f,c
 42887   01DFDE  50DF               	movf	indf2,w,c
 42888   01DFE0  ECD5  F0F3         	call	_disk_read
 42889   01DFE4  0900               	iorlw	0
 42890   01DFE6  B4D8               	btfsc	status,2,c
 42891   01DFE8  EFF8  F0EF         	goto	u28201
 42892   01DFEC  EFFA  F0EF         	goto	u28200
 42893   01DFF0                     u28201:
 42894   01DFF0  EF02  F0F0         	goto	l21277
 42895   01DFF4                     u28200:
 42896   01DFF4                     
 42897                           ;../fatfs/ff.c: 1092:     sect = (LBA_t)0 - 1;
 42898   01DFF4  0106               	movlb	6	; () banked
 42899   01DFF6  691C               	setf	move_window@sect& (0+255),b
 42900   01DFF8  691D               	setf	(move_window@sect+1)& (0+255),b
 42901   01DFFA  691E               	setf	(move_window@sect+2)& (0+255),b
 42902   01DFFC  691F               	setf	(move_window@sect+3)& (0+255),b
 42903   01DFFE                     
 42904                           ; BSR set to: 6
 42905                           ;../fatfs/ff.c: 1093:     res = FR_DISK_ERR;
 42906   01DFFE  0E01               	movlw	1
 42907   01E000  0105               	movlb	5	; () banked
 42908   01E002  6FFE               	movwf	move_window@res& (0+255),b
 42909   01E004                     l21277:
 42910                           
 42911                           ;../fatfs/ff.c: 1095:    fs->winsect = sect;
 42912   01E004  0106               	movlb	6	; () banked
 42913   01E006  EE20 F030          	lfsr	2,48
 42914   01E00A  511A               	movf	move_window@fs& (0+255),w,b
 42915   01E00C  26D9               	addwf	fsr2l,f,c
 42916   01E00E  511B               	movf	(move_window@fs+1)& (0+255),w,b
 42917   01E010  22DA               	addwfc	fsr2h,f,c
 42918   01E012  C61C  F4DE         	movff	move_window@sect,postinc2
 42919   01E016  C61D  F4DE         	movff	move_window@sect+1,postinc2
 42920   01E01A  C61E  F4DE         	movff	move_window@sect+2,postinc2
 42921   01E01E  C61F  F4DE         	movff	move_window@sect+3,postinc2
 42922   01E022                     l21279:
 42923                           
 42924                           ;../fatfs/ff.c: 1098:  return res;
 42925   01E022  0105               	movlb	5	; () banked
 42926   01E024  51FE               	movf	move_window@res& (0+255),w,b
 42927   01E026                     
 42928                           ; BSR set to: 5
 42929   01E026  0012               	return		;funcret
 42930   01E028                     __end_of_move_window:
 42931                           	callstack 0
 42932                           
 42933 ;; *************** function _sync_window *****************
 42934 ;; Defined at:
 42935 ;;		line 1056 in file "../fatfs/ff.c"
 42936 ;; Parameters:    Size  Location     Type
 42937 ;;  fs              2    8[BANK6 ] PTR struct .
 42938 ;;		 -> fs(564), NULL(0), 
 42939 ;; Auto vars:     Size  Location     Type
 42940 ;;  res             1  156[BANK5 ] enum E597
 42941 ;; Return value:  Size  Location     Type
 42942 ;;                  1    wreg      enum E597
 42943 ;; Registers used:
 42944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42945 ;; Tracked objects:
 42946 ;;		On entry : 0/0
 42947 ;;		On exit  : 0/0
 42948 ;;		Unchanged: 0/0
 42949 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 42950 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42952 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42953 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42954 ;;Total ram usage:       19 bytes
 42955 ;; Hardware stack levels used: 1
 42956 ;; Hardware stack levels required when called: 12
 42957 ;; This function calls:
 42958 ;;		_disk_write
 42959 ;; This function is called by:
 42960 ;;		_move_window
 42961 ;;		_sync_fs
 42962 ;;		_dir_clear
 42963 ;; This function uses a non-reentrant model
 42964 ;;
 42965                           
 42966                           	psect	text116
 42967   01B64C                     __ptext116:
 42968                           	callstack 0
 42969   01B64C                     _sync_window:
 42970                           	callstack 105
 42971   01B64C                     
 42972                           ;../fatfs/ff.c: 1057:  FATFS* fs;../fatfs/ff.c: 1059: {;../fatfs/ff.c: 1060:  FRESULT re
      +                          s = FR_OK;
 42973   01B64C  0105               	movlb	5	; () banked
 42974   01B64E  6BFC               	clrf	sync_window@res& (0+255),b
 42975   01B650                     
 42976                           ; BSR set to: 5
 42977                           ;../fatfs/ff.c: 1063:  if (fs->wflag) {
 42978   01B650  0106               	movlb	6	; () banked
 42979   01B652  EE20 F004          	lfsr	2,4
 42980   01B656  5108               	movf	sync_window@fs& (0+255),w,b
 42981   01B658  26D9               	addwf	fsr2l,f,c
 42982   01B65A  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 42983   01B65C  22DA               	addwfc	fsr2h,f,c
 42984   01B65E  50DF               	movf	indf2,w,c
 42985   01B660  B4D8               	btfsc	status,2,c
 42986   01B662  EF35  F0DB         	goto	u28121
 42987   01B666  EF37  F0DB         	goto	u28120
 42988   01B66A                     u28121:
 42989   01B66A  EFF4  F0DB         	goto	l1468
 42990   01B66E                     u28120:
 42991   01B66E                     
 42992                           ; BSR set to: 6
 42993                           ;../fatfs/ff.c: 1064:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
 42994   01B66E  0E34               	movlw	52
 42995   01B670  2508               	addwf	sync_window@fs& (0+255),w,b
 42996   01B672  6F00               	movwf	disk_write@buff& (0+255),b
 42997   01B674  0E00               	movlw	0
 42998   01B676  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 42999   01B678  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 43000   01B67A  EE20 F030          	lfsr	2,48
 43001   01B67E  5108               	movf	sync_window@fs& (0+255),w,b
 43002   01B680  26D9               	addwf	fsr2l,f,c
 43003   01B682  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43004   01B684  22DA               	addwfc	fsr2h,f,c
 43005   01B686  C4DE F602          	movff	postinc2,disk_write@sector
 43006   01B68A  C4DE F603          	movff	postinc2,disk_write@sector+1
 43007   01B68E  C4DE F604          	movff	postinc2,disk_write@sector+2
 43008   01B692  C4DE F605          	movff	postinc2,disk_write@sector+3
 43009   01B696  0E00               	movlw	0
 43010   01B698  6F07               	movwf	(disk_write@count+1)& (0+255),b
 43011   01B69A  0E01               	movlw	1
 43012   01B69C  6F06               	movwf	disk_write@count& (0+255),b
 43013   01B69E  EE20 F001          	lfsr	2,1
 43014   01B6A2  5108               	movf	sync_window@fs& (0+255),w,b
 43015   01B6A4  26D9               	addwf	fsr2l,f,c
 43016   01B6A6  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43017   01B6A8  22DA               	addwfc	fsr2h,f,c
 43018   01B6AA  50DF               	movf	indf2,w,c
 43019   01B6AC  EC7E  F0F3         	call	_disk_write
 43020   01B6B0  0900               	iorlw	0
 43021   01B6B2  A4D8               	btfss	status,2,c
 43022   01B6B4  EF5E  F0DB         	goto	u28131
 43023   01B6B8  EF60  F0DB         	goto	u28130
 43024   01B6BC                     u28131:
 43025   01B6BC  EFF1  F0DB         	goto	l21191
 43026   01B6C0                     u28130:
 43027   01B6C0                     
 43028                           ;../fatfs/ff.c: 1065:    fs->wflag = 0;
 43029   01B6C0  0106               	movlb	6	; () banked
 43030   01B6C2  EE20 F004          	lfsr	2,4
 43031   01B6C6  5108               	movf	sync_window@fs& (0+255),w,b
 43032   01B6C8  26D9               	addwf	fsr2l,f,c
 43033   01B6CA  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43034   01B6CC  22DA               	addwfc	fsr2h,f,c
 43035   01B6CE  6ADF               	clrf	indf2,c
 43036   01B6D0                     
 43037                           ; BSR set to: 6
 43038                           ;../fatfs/ff.c: 1066:    if (fs->winsect - fs->fatbase < fs->fsize) {
 43039   01B6D0  EE20 F01C          	lfsr	2,28
 43040   01B6D4  5108               	movf	sync_window@fs& (0+255),w,b
 43041   01B6D6  26D9               	addwf	fsr2l,f,c
 43042   01B6D8  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43043   01B6DA  22DA               	addwfc	fsr2h,f,c
 43044   01B6DC  EE10 F024          	lfsr	1,36
 43045   01B6E0  5108               	movf	sync_window@fs& (0+255),w,b
 43046   01B6E2  26E1               	addwf	fsr1l,f,c
 43047   01B6E4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43048   01B6E6  22E2               	addwfc	fsr1h,f,c
 43049   01B6E8  C4E6 F60E          	movff	postinc1,??_sync_window+4
 43050   01B6EC  C4E6 F60F          	movff	postinc1,??_sync_window+5
 43051   01B6F0  C4E6 F610          	movff	postinc1,??_sync_window+6
 43052   01B6F4  C4E6 F611          	movff	postinc1,??_sync_window+7
 43053   01B6F8  EE10 F030          	lfsr	1,48
 43054   01B6FC  5108               	movf	sync_window@fs& (0+255),w,b
 43055   01B6FE  26E1               	addwf	fsr1l,f,c
 43056   01B700  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43057   01B702  22E2               	addwfc	fsr1h,f,c
 43058   01B704  C4E6 F612          	movff	postinc1,??_sync_window+8
 43059   01B708  C4E6 F613          	movff	postinc1,??_sync_window+9
 43060   01B70C  C4E6 F614          	movff	postinc1,??_sync_window+10
 43061   01B710  C4E6 F615          	movff	postinc1,??_sync_window+11
 43062   01B714  510E               	movf	(??_sync_window+4)& (0+255),w,b
 43063   01B716  5D12               	subwf	(??_sync_window+8)& (0+255),w,b
 43064   01B718  6F16               	movwf	(??_sync_window+12)& (0+255),b
 43065   01B71A  510F               	movf	(??_sync_window+5)& (0+255),w,b
 43066   01B71C  5913               	subwfb	(??_sync_window+9)& (0+255),w,b
 43067   01B71E  6F17               	movwf	(??_sync_window+13)& (0+255),b
 43068   01B720  5110               	movf	(??_sync_window+6)& (0+255),w,b
 43069   01B722  5914               	subwfb	(??_sync_window+10)& (0+255),w,b
 43070   01B724  6F18               	movwf	(??_sync_window+14)& (0+255),b
 43071   01B726  5111               	movf	(??_sync_window+7)& (0+255),w,b
 43072   01B728  5915               	subwfb	(??_sync_window+11)& (0+255),w,b
 43073   01B72A  6F19               	movwf	(??_sync_window+15)& (0+255),b
 43074   01B72C  50DE               	movf	postinc2,w,c
 43075   01B72E  5D16               	subwf	(??_sync_window+12)& (0+255),w,b
 43076   01B730  50DE               	movf	postinc2,w,c
 43077   01B732  5917               	subwfb	(??_sync_window+13)& (0+255),w,b
 43078   01B734  50DE               	movf	postinc2,w,c
 43079   01B736  5918               	subwfb	(??_sync_window+14)& (0+255),w,b
 43080   01B738  50DE               	movf	postinc2,w,c
 43081   01B73A  5919               	subwfb	(??_sync_window+15)& (0+255),w,b
 43082   01B73C  B0D8               	btfsc	status,0,c
 43083   01B73E  EFA3  F0DB         	goto	u28141
 43084   01B742  EFA5  F0DB         	goto	u28140
 43085   01B746                     u28141:
 43086   01B746  EFF4  F0DB         	goto	l1468
 43087   01B74A                     u28140:
 43088   01B74A                     
 43089                           ; BSR set to: 6
 43090                           ;../fatfs/ff.c: 1067:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect
      +                           + fs->fsize, 1);
 43091   01B74A  EE20 F003          	lfsr	2,3
 43092   01B74E  5108               	movf	sync_window@fs& (0+255),w,b
 43093   01B750  26D9               	addwf	fsr2l,f,c
 43094   01B752  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43095   01B754  22DA               	addwfc	fsr2h,f,c
 43096   01B756  0E02               	movlw	2
 43097   01B758  18DE               	xorwf	postinc2,w,c
 43098   01B75A  A4D8               	btfss	status,2,c
 43099   01B75C  EFB2  F0DB         	goto	u28151
 43100   01B760  EFB4  F0DB         	goto	u28150
 43101   01B764                     u28151:
 43102   01B764  EFF4  F0DB         	goto	l1468
 43103   01B768                     u28150:
 43104   01B768                     
 43105                           ; BSR set to: 6
 43106   01B768  0E34               	movlw	52
 43107   01B76A  2508               	addwf	sync_window@fs& (0+255),w,b
 43108   01B76C  6F00               	movwf	disk_write@buff& (0+255),b
 43109   01B76E  0E00               	movlw	0
 43110   01B770  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 43111   01B772  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 43112   01B774  EE20 F01C          	lfsr	2,28
 43113   01B778  5108               	movf	sync_window@fs& (0+255),w,b
 43114   01B77A  26D9               	addwf	fsr2l,f,c
 43115   01B77C  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43116   01B77E  22DA               	addwfc	fsr2h,f,c
 43117   01B780  C4DE F60A          	movff	postinc2,??_sync_window
 43118   01B784  C4DE F60B          	movff	postinc2,??_sync_window+1
 43119   01B788  C4DE F60C          	movff	postinc2,??_sync_window+2
 43120   01B78C  C4DE F60D          	movff	postinc2,??_sync_window+3
 43121   01B790  EE20 F030          	lfsr	2,48
 43122   01B794  5108               	movf	sync_window@fs& (0+255),w,b
 43123   01B796  26D9               	addwf	fsr2l,f,c
 43124   01B798  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43125   01B79A  22DA               	addwfc	fsr2h,f,c
 43126   01B79C  C4DE F60E          	movff	postinc2,??_sync_window+4
 43127   01B7A0  C4DE F60F          	movff	postinc2,??_sync_window+5
 43128   01B7A4  C4DE F610          	movff	postinc2,??_sync_window+6
 43129   01B7A8  C4DE F611          	movff	postinc2,??_sync_window+7
 43130   01B7AC  510A               	movf	??_sync_window& (0+255),w,b
 43131   01B7AE  250E               	addwf	(??_sync_window+4)& (0+255),w,b
 43132   01B7B0  6F02               	movwf	disk_write@sector& (0+255),b
 43133   01B7B2  510B               	movf	(??_sync_window+1)& (0+255),w,b
 43134   01B7B4  210F               	addwfc	(??_sync_window+5)& (0+255),w,b
 43135   01B7B6  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 43136   01B7B8  510C               	movf	(??_sync_window+2)& (0+255),w,b
 43137   01B7BA  2110               	addwfc	(??_sync_window+6)& (0+255),w,b
 43138   01B7BC  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 43139   01B7BE  510D               	movf	(??_sync_window+3)& (0+255),w,b
 43140   01B7C0  2111               	addwfc	(??_sync_window+7)& (0+255),w,b
 43141   01B7C2  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 43142   01B7C4  0E00               	movlw	0
 43143   01B7C6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 43144   01B7C8  0E01               	movlw	1
 43145   01B7CA  6F06               	movwf	disk_write@count& (0+255),b
 43146   01B7CC  EE20 F001          	lfsr	2,1
 43147   01B7D0  5108               	movf	sync_window@fs& (0+255),w,b
 43148   01B7D2  26D9               	addwf	fsr2l,f,c
 43149   01B7D4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 43150   01B7D6  22DA               	addwfc	fsr2h,f,c
 43151   01B7D8  50DF               	movf	indf2,w,c
 43152   01B7DA  EC7E  F0F3         	call	_disk_write
 43153   01B7DE  EFF4  F0DB         	goto	l1468
 43154   01B7E2                     l21191:
 43155                           
 43156                           ;../fatfs/ff.c: 1070:    res = FR_DISK_ERR;
 43157   01B7E2  0E01               	movlw	1
 43158   01B7E4  0105               	movlb	5	; () banked
 43159   01B7E6  6FFC               	movwf	sync_window@res& (0+255),b
 43160   01B7E8                     l1468:
 43161                           
 43162                           ;../fatfs/ff.c: 1073:  return res;
 43163   01B7E8  0105               	movlb	5	; () banked
 43164   01B7EA  51FC               	movf	sync_window@res& (0+255),w,b
 43165   01B7EC                     
 43166                           ; BSR set to: 5
 43167   01B7EC  0012               	return		;funcret
 43168   01B7EE                     __end_of_sync_window:
 43169                           	callstack 0
 43170                           
 43171 ;; *************** function _disk_write *****************
 43172 ;; Defined at:
 43173 ;;		line 130 in file "../drivers/diskio.c"
 43174 ;; Parameters:    Size  Location     Type
 43175 ;;  pdrv            1    wreg     unsigned char 
 43176 ;;  buff            2    0[BANK6 ] PTR const unsigned char 
 43177 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 43178 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 43179 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43180 ;;  sector          4    2[BANK6 ] unsigned long 
 43181 ;;  count           2    6[BANK6 ] unsigned int 
 43182 ;; Auto vars:     Size  Location     Type
 43183 ;;  pdrv            1  153[BANK5 ] unsigned char 
 43184 ;;  i               2  154[BANK5 ] int 
 43185 ;; Return value:  Size  Location     Type
 43186 ;;                  1    wreg      enum E737
 43187 ;; Registers used:
 43188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43189 ;; Tracked objects:
 43190 ;;		On entry : 0/0
 43191 ;;		On exit  : 0/0
 43192 ;;		Unchanged: 0/0
 43193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43194 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43195 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43197 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43198 ;;Total ram usage:       11 bytes
 43199 ;; Hardware stack levels used: 1
 43200 ;; Hardware stack levels required when called: 11
 43201 ;; This function calls:
 43202 ;;		_SDCard_write512
 43203 ;;		_printf
 43204 ;;		_util_addrdump
 43205 ;; This function is called by:
 43206 ;;		_sync_window
 43207 ;;		_sync_fs
 43208 ;;		_dir_clear
 43209 ;;		_f_read
 43210 ;;		_f_write
 43211 ;;		_f_sync
 43212 ;;		_f_lseek
 43213 ;;		_f_truncate
 43214 ;; This function uses a non-reentrant model
 43215 ;;
 43216                           
 43217                           	psect	text117
 43218   01E6FC                     __ptext117:
 43219                           	callstack 0
 43220   01E6FC                     _disk_write:
 43221                           	callstack 105
 43222   01E6FC                     
 43223                           ;../drivers/diskio.c: 134:     for (int i = 0; i < count; i++) {
 43224   01E6FC  0E00               	movlw	0
 43225   01E6FE  0105               	movlb	5	; () banked
 43226   01E700  6FFB               	movwf	(disk_write@i+1)& (0+255),b
 43227   01E702  0E00               	movlw	0
 43228   01E704  6FFA               	movwf	disk_write@i& (0+255),b
 43229   01E706  EFC4  F0F3         	goto	l21171
 43230   01E70A                     l21153:
 43231                           
 43232                           ; BSR set to: 5
 43233                           ;../drivers/diskio.c: 135:         if (SDCard_write512(start_lba + sector, 0, buff, 512)
      +                           != 0) {
 43234   01E70A  0106               	movlb	6	; () banked
 43235   01E70C  5102               	movf	disk_write@sector& (0+255),w,b
 43236   01E70E  0107               	movlb	7	; () banked
 43237   01E710  25EE               	addwf	_start_lba& (0+255),w,b
 43238   01E712  0105               	movlb	5	; () banked
 43239   01E714  6FDE               	movwf	SDCard_write512@addr& (0+255),b
 43240   01E716  0106               	movlb	6	; () banked
 43241   01E718  5103               	movf	(disk_write@sector+1)& (0+255),w,b
 43242   01E71A  0107               	movlb	7	; () banked
 43243   01E71C  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 43244   01E71E  0105               	movlb	5	; () banked
 43245   01E720  6FDF               	movwf	(SDCard_write512@addr+1)& (0+255),b
 43246   01E722  0106               	movlb	6	; () banked
 43247   01E724  5104               	movf	(disk_write@sector+2)& (0+255),w,b
 43248   01E726  0107               	movlb	7	; () banked
 43249   01E728  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 43250   01E72A  0105               	movlb	5	; () banked
 43251   01E72C  6FE0               	movwf	(SDCard_write512@addr+2)& (0+255),b
 43252   01E72E  0106               	movlb	6	; () banked
 43253   01E730  5105               	movf	(disk_write@sector+3)& (0+255),w,b
 43254   01E732  0107               	movlb	7	; () banked
 43255   01E734  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 43256   01E736  0105               	movlb	5	; () banked
 43257   01E738  6FE1               	movwf	(SDCard_write512@addr+3)& (0+255),b
 43258   01E73A  0E00               	movlw	0
 43259   01E73C  6FE3               	movwf	(SDCard_write512@offs+1)& (0+255),b
 43260   01E73E  0E00               	movlw	0
 43261   01E740  6FE2               	movwf	SDCard_write512@offs& (0+255),b
 43262   01E742  C600  F5E4         	movff	disk_write@buff,SDCard_write512@buf
 43263   01E746  C601  F5E5         	movff	disk_write@buff+1,SDCard_write512@buf+1
 43264   01E74A  0E02               	movlw	2
 43265   01E74C  6FE7               	movwf	(SDCard_write512@count+1)& (0+255),b
 43266   01E74E  0E00               	movlw	0
 43267   01E750  6FE6               	movwf	SDCard_write512@count& (0+255),b
 43268   01E752  EC73  F0C1         	call	_SDCard_write512	;wreg free
 43269   01E756  0105               	movlb	5	; () banked
 43270   01E758  51DE               	movf	?_SDCard_write512& (0+255),w,b
 43271   01E75A  11DF               	iorwf	(?_SDCard_write512+1)& (0+255),w,b
 43272   01E75C  B4D8               	btfsc	status,2,c
 43273   01E75E  EFB3  F0F3         	goto	u28101
 43274   01E762  EFB5  F0F3         	goto	u28100
 43275   01E766                     u28101:
 43276   01E766  EFB8  F0F3         	goto	l21165
 43277   01E76A                     u28100:
 43278   01E76A                     
 43279                           ; BSR set to: 5
 43280                           ;../drivers/diskio.c: 137:             return RES_ERROR;
 43281   01E76A  0E01               	movlw	1
 43282   01E76C  EFD4  F0F3         	goto	l2505
 43283   01E770                     l21165:
 43284                           
 43285                           ; BSR set to: 5
 43286                           ;../drivers/diskio.c: 142:         sector++;
 43287   01E770  0E01               	movlw	1
 43288   01E772  0106               	movlb	6	; () banked
 43289   01E774  2702               	addwf	disk_write@sector& (0+255),f,b
 43290   01E776  0E00               	movlw	0
 43291   01E778  2303               	addwfc	(disk_write@sector+1)& (0+255),f,b
 43292   01E77A  2304               	addwfc	(disk_write@sector+2)& (0+255),f,b
 43293   01E77C  2305               	addwfc	(disk_write@sector+3)& (0+255),f,b
 43294   01E77E                     
 43295                           ; BSR set to: 6
 43296                           ;../drivers/diskio.c: 143:         buff += 512;
 43297   01E77E  0E02               	movlw	2
 43298   01E780  2701               	addwf	(disk_write@buff+1)& (0+255),f,b
 43299   01E782                     
 43300                           ; BSR set to: 6
 43301                           ;../drivers/diskio.c: 144:     }
 43302   01E782  0105               	movlb	5	; () banked
 43303   01E784  4BFA               	infsnz	disk_write@i& (0+255),f,b
 43304   01E786  2BFB               	incf	(disk_write@i+1)& (0+255),f,b
 43305   01E788                     l21171:
 43306                           
 43307                           ; BSR set to: 5
 43308   01E788  0106               	movlb	6	; () banked
 43309   01E78A  5106               	movf	disk_write@count& (0+255),w,b
 43310   01E78C  0105               	movlb	5	; () banked
 43311   01E78E  5DFA               	subwf	disk_write@i& (0+255),w,b
 43312   01E790  0106               	movlb	6	; () banked
 43313   01E792  5107               	movf	(disk_write@count+1)& (0+255),w,b
 43314   01E794  0105               	movlb	5	; () banked
 43315   01E796  59FB               	subwfb	(disk_write@i+1)& (0+255),w,b
 43316   01E798  A0D8               	btfss	status,0,c
 43317   01E79A  EFD1  F0F3         	goto	u28111
 43318   01E79E  EFD3  F0F3         	goto	u28110
 43319   01E7A2                     u28111:
 43320   01E7A2  EF85  F0F3         	goto	l21153
 43321   01E7A6                     u28110:
 43322   01E7A6                     
 43323                           ; BSR set to: 5
 43324                           ;../drivers/diskio.c: 146:     return RES_OK;
 43325   01E7A6  0E00               	movlw	0
 43326   01E7A8                     l2505:
 43327                           
 43328                           ; BSR set to: 5
 43329   01E7A8  0012               	return		;funcret
 43330   01E7AA                     __end_of_disk_write:
 43331                           	callstack 0
 43332                           
 43333 ;; *************** function _SDCard_write512 *****************
 43334 ;; Defined at:
 43335 ;;		line 237 in file "../src/boards/../../drivers/SDCard.c"
 43336 ;; Parameters:    Size  Location     Type
 43337 ;;  addr            4  126[BANK5 ] unsigned long 
 43338 ;;  offs            2  130[BANK5 ] unsigned int 
 43339 ;;  buf             2  132[BANK5 ] PTR const void 
 43340 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 43341 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 43342 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43343 ;;  count           2  134[BANK5 ] unsigned int 
 43344 ;; Auto vars:     Size  Location     Type
 43345 ;;  i               2  142[BANK5 ] unsigned int 
 43346 ;;  i               2  140[BANK5 ] int 
 43347 ;;  spi             2  150[BANK5 ] PTR struct SPI
 43348 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 43349 ;;  crc             2  148[BANK5 ] unsigned short 
 43350 ;;  result          2  146[BANK5 ] int 
 43351 ;;  retry           2  144[BANK5 ] int 
 43352 ;;  response        1  152[BANK5 ] unsigned char 
 43353 ;; Return value:  Size  Location     Type
 43354 ;;                  2  126[BANK5 ] int 
 43355 ;; Registers used:
 43356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43357 ;; Tracked objects:
 43358 ;;		On entry : 0/0
 43359 ;;		On exit  : 0/0
 43360 ;;		Unchanged: 0/0
 43361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43362 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43363 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43365 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43366 ;;Total ram usage:       27 bytes
 43367 ;; Hardware stack levels used: 1
 43368 ;; Hardware stack levels required when called: 10
 43369 ;; This function calls:
 43370 ;;		_SDCard_end_transaction
 43371 ;;		_SPI_SD_dummy_clocks
 43372 ;;		_SPI_SD_send
 43373 ;;		___SDCard_command_r1
 43374 ;;		___SDCard_crc16
 43375 ;;		___SDCard_wait_response
 43376 ;;		_printf
 43377 ;;		_util_addrdump
 43378 ;; This function is called by:
 43379 ;;		_disk_write
 43380 ;; This function uses a non-reentrant model
 43381 ;;
 43382                           
 43383                           	psect	text118
 43384   0182E6                     __ptext118:
 43385                           	callstack 0
 43386   0182E6                     _SDCard_write512:
 43387                           	callstack 105
 43388   0182E6                     
 43389                           ;../src/boards/../../drivers/SDCard.c: 237: int SDCard_write512(uint32_t addr, unsigned 
      +                          int offs, const void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 238
      +                          : {;../src/boards/../../drivers/SDCard.c: 239:     struct SPI *spi = ctx_.spi;
 43390   0182E6  C7A8  F5F6         	movff	_ctx_,SDCard_write512@spi
 43391   0182EA  C7A9  F5F7         	movff	_ctx_+1,SDCard_write512@spi+1
 43392   0182EE                     
 43393                           ;../src/boards/../../drivers/SDCard.c: 240:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 241:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 242:     uint
      +                          16_t crc;;../src/boards/../../drivers/SDCard.c: 243:     int retry = 5;
 43394   0182EE  0E00               	movlw	0
 43395   0182F0  0105               	movlb	5	; () banked
 43396   0182F2  6FF1               	movwf	(SDCard_write512@retry+1)& (0+255),b
 43397   0182F4  0E05               	movlw	5
 43398   0182F6  6FF0               	movwf	SDCard_write512@retry& (0+255),b
 43399   0182F8                     
 43400                           ; BSR set to: 5
 43401                           ;../src/boards/../../drivers/SDCard.c: 250:     crc = 0;
 43402   0182F8  0E00               	movlw	0
 43403   0182FA  6FF5               	movwf	(SDCard_write512@crc+1)& (0+255),b
 43404   0182FC  0E00               	movlw	0
 43405   0182FE  6FF4               	movwf	SDCard_write512@crc& (0+255),b
 43406   018300                     
 43407                           ; BSR set to: 5
 43408                           ;../src/boards/../../drivers/SDCard.c: 251:     response = 0xff;
 43409   018300  69F8               	setf	SDCard_write512@response& (0+255),b
 43410   018302                     
 43411                           ; BSR set to: 5
 43412                           ;../src/boards/../../drivers/SDCard.c: 252:     for (int i = 0; i < offs; i++) {
 43413   018302  0E00               	movlw	0
 43414   018304  6FED               	movwf	(SDCard_write512@i+1)& (0+255),b
 43415   018306  0E00               	movlw	0
 43416   018308  6FEC               	movwf	SDCard_write512@i& (0+255),b
 43417   01830A  EF9C  F0C1         	goto	l20987
 43418   01830E                     l20983:
 43419                           
 43420                           ; BSR set to: 5
 43421                           ;../src/boards/../../drivers/SDCard.c: 253:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 43422   01830E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43423   018312  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43424   018316  0EF8               	movlw	low SDCard_write512@response
 43425   018318  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 43426   01831A  0E05               	movlw	high SDCard_write512@response
 43427   01831C  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 43428   01831E  0E00               	movlw	0
 43429   018320  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 43430   018322  0E01               	movlw	1
 43431   018324  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 43432   018326  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43433   01832A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43434   01832E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43435   018332                     
 43436                           ;../src/boards/../../drivers/SDCard.c: 254:     }
 43437   018332  0105               	movlb	5	; () banked
 43438   018334  4BEC               	infsnz	SDCard_write512@i& (0+255),f,b
 43439   018336  2BED               	incf	(SDCard_write512@i+1)& (0+255),f,b
 43440   018338                     l20987:
 43441                           
 43442                           ; BSR set to: 5
 43443   018338  51E2               	movf	SDCard_write512@offs& (0+255),w,b
 43444   01833A  5DEC               	subwf	SDCard_write512@i& (0+255),w,b
 43445   01833C  51E3               	movf	(SDCard_write512@offs+1)& (0+255),w,b
 43446   01833E  59ED               	subwfb	(SDCard_write512@i+1)& (0+255),w,b
 43447   018340  A0D8               	btfss	status,0,c
 43448   018342  EFA5  F0C1         	goto	u27891
 43449   018346  EFA7  F0C1         	goto	u27890
 43450   01834A                     u27891:
 43451   01834A  EF87  F0C1         	goto	l20983
 43452   01834E                     u27890:
 43453   01834E                     
 43454                           ; BSR set to: 5
 43455                           ;../src/boards/../../drivers/SDCard.c: 255:     crc = __SDCard_crc16(crc, buf, count);
 43456   01834E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43457   018352  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43458   018356  C5E4  F506         	movff	SDCard_write512@buf,___SDCard_crc16@buf
 43459   01835A  C5E5  F507         	movff	SDCard_write512@buf+1,___SDCard_crc16@buf+1
 43460   01835E  C5E6  F508         	movff	SDCard_write512@count,___SDCard_crc16@count
 43461   018362  C5E7  F509         	movff	SDCard_write512@count+1,___SDCard_crc16@count+1
 43462   018366  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43463   01836A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43464   01836E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43465   018372                     
 43466                           ;../src/boards/../../drivers/SDCard.c: 256:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 43467   018372  0E00               	movlw	0
 43468   018374  0105               	movlb	5	; () banked
 43469   018376  6FEF               	movwf	(SDCard_write512@i_701+1)& (0+255),b
 43470   018378  0E00               	movlw	0
 43471   01837A  6FEE               	movwf	SDCard_write512@i_701& (0+255),b
 43472   01837C  EFD5  F0C1         	goto	l20997
 43473   018380                     l20993:
 43474                           
 43475                           ; BSR set to: 5
 43476                           ;../src/boards/../../drivers/SDCard.c: 257:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 43477   018380  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 43478   018384  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 43479   018388  0EF8               	movlw	low SDCard_write512@response
 43480   01838A  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 43481   01838C  0E05               	movlw	high SDCard_write512@response
 43482   01838E  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 43483   018390  0E00               	movlw	0
 43484   018392  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 43485   018394  0E01               	movlw	1
 43486   018396  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 43487   018398  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 43488   01839C  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 43489   0183A0  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 43490   0183A4                     
 43491                           ;../src/boards/../../drivers/SDCard.c: 258:     }
 43492   0183A4  0105               	movlb	5	; () banked
 43493   0183A6  4BEE               	infsnz	SDCard_write512@i_701& (0+255),f,b
 43494   0183A8  2BEF               	incf	(SDCard_write512@i_701+1)& (0+255),f,b
 43495   0183AA                     l20997:
 43496                           
 43497                           ; BSR set to: 5
 43498   0183AA  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 43499   0183AE  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 43500   0183B2  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 43501   0183B4  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 43502   0183B6  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 43503   0183B8  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 43504   0183BA  51E6               	movf	SDCard_write512@count& (0+255),w,b
 43505   0183BC  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 43506   0183BE  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 43507   0183C0  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 43508   0183C2  0E00               	movlw	0
 43509   0183C4  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 43510   0183C6  6FEA               	movwf	(??_SDCard_write512+2)& (0+255),b
 43511   0183C8  0E02               	movlw	2
 43512   0183CA  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 43513   0183CC  6FEB               	movwf	(??_SDCard_write512+3)& (0+255),b
 43514   0183CE  51EA               	movf	(??_SDCard_write512+2)& (0+255),w,b
 43515   0183D0  5DEE               	subwf	SDCard_write512@i_701& (0+255),w,b
 43516   0183D2  51EB               	movf	(??_SDCard_write512+3)& (0+255),w,b
 43517   0183D4  59EF               	subwfb	(SDCard_write512@i_701+1)& (0+255),w,b
 43518   0183D6  A0D8               	btfss	status,0,c
 43519   0183D8  EFF0  F0C1         	goto	u27901
 43520   0183DC  EFF2  F0C1         	goto	u27900
 43521   0183E0                     u27901:
 43522   0183E0  EFC0  F0C1         	goto	l20993
 43523   0183E4                     u27900:
 43524   0183E4                     l20999:
 43525                           
 43526                           ;../src/boards/../../drivers/SDCard.c: 261:     result = __SDCard_command_r1(24, addr, &
      +                          response);
 43527   0183E4  C5DE  F51B         	movff	SDCard_write512@addr,___SDCard_command_r1@argument
 43528   0183E8  C5DF  F51C         	movff	SDCard_write512@addr+1,___SDCard_command_r1@argument+1
 43529   0183EC  C5E0  F51D         	movff	SDCard_write512@addr+2,___SDCard_command_r1@argument+2
 43530   0183F0  C5E1  F51E         	movff	SDCard_write512@addr+3,___SDCard_command_r1@argument+3
 43531   0183F4  0EF8               	movlw	low SDCard_write512@response
 43532   0183F6  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 43533   0183F8  0E05               	movlw	high SDCard_write512@response
 43534   0183FA  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 43535   0183FC  0E18               	movlw	24
 43536   0183FE  EC23  F0F3         	call	___SDCard_command_r1
 43537   018402  C51B  F5F2         	movff	?___SDCard_command_r1,SDCard_write512@result
 43538   018406  C51C  F5F3         	movff	?___SDCard_command_r1+1,SDCard_write512@result+1
 43539   01840A                     
 43540                           ;../src/boards/../../drivers/SDCard.c: 262:     if (result != 0) {
 43541   01840A  0105               	movlb	5	; () banked
 43542   01840C  51F2               	movf	SDCard_write512@result& (0+255),w,b
 43543   01840E  11F3               	iorwf	(SDCard_write512@result+1)& (0+255),w,b
 43544   018410  B4D8               	btfsc	status,2,c
 43545   018412  EF0D  F0C2         	goto	u27911
 43546   018416  EF0F  F0C2         	goto	u27910
 43547   01841A                     u27911:
 43548   01841A  EF11  F0C2         	goto	l21005
 43549   01841E                     u27910:
 43550   01841E  EFE4  F0C2         	goto	l21059
 43551   018422                     l21005:
 43552                           
 43553                           ; BSR set to: 5
 43554                           ;../src/boards/../../drivers/SDCard.c: 265:     if (response != 0) {
 43555   018422  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43556   018424  B4D8               	btfsc	status,2,c
 43557   018426  EF17  F0C2         	goto	u27921
 43558   01842A  EF19  F0C2         	goto	u27920
 43559   01842E                     u27921:
 43560   01842E  EF1F  F0C2         	goto	l21009
 43561   018432                     u27920:
 43562   018432                     l21007:
 43563                           
 43564                           ; BSR set to: 5
 43565                           ;../src/boards/../../drivers/SDCard.c: 266:         result = 3;
 43566   018432  0E00               	movlw	0
 43567   018434  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43568   018436  0E03               	movlw	3
 43569   018438  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43570                           
 43571                           ;../src/boards/../../drivers/SDCard.c: 267:         goto done;
 43572   01843A  EFE4  F0C2         	goto	l21059
 43573   01843E                     l21009:
 43574                           
 43575                           ; BSR set to: 5
 43576                           ;../src/boards/../../drivers/SDCard.c: 270:     response = 0xfe;
 43577   01843E  0EFE               	movlw	254
 43578   018440  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43579   018442                     
 43580                           ; BSR set to: 5
 43581                           ;../src/boards/../../drivers/SDCard.c: 271:     SPI_SD_send(spi, &response, 1);
 43582   018442  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43583   018446  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43584   01844A  0EF8               	movlw	low SDCard_write512@response
 43585   01844C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43586   01844E  0E05               	movlw	high SDCard_write512@response
 43587   018450  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43588   018452  0E00               	movlw	0
 43589   018454  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43590   018456  0E01               	movlw	1
 43591   018458  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43592   01845A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43593   01845E                     
 43594                           ;../src/boards/../../drivers/SDCard.c: 272:     SPI_SD_dummy_clocks(spi, offs);
 43595   01845E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 43596   018462  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 43597   018466  C5E2  F510         	movff	SDCard_write512@offs,SPI_SD_dummy_clocks@clocks
 43598   01846A  C5E3  F511         	movff	SDCard_write512@offs+1,SPI_SD_dummy_clocks@clocks+1
 43599   01846E  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 43600   018472                     
 43601                           ;../src/boards/../../drivers/SDCard.c: 273:     SPI_SD_send(spi, buf, count);
 43602   018472  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43603   018476  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43604   01847A  C5E4  F506         	movff	SDCard_write512@buf,SPI_SD_send@buf
 43605   01847E  C5E5  F507         	movff	SDCard_write512@buf+1,SPI_SD_send@buf+1
 43606   018482  C5E6  F508         	movff	SDCard_write512@count,SPI_SD_send@count
 43607   018486  C5E7  F509         	movff	SDCard_write512@count+1,SPI_SD_send@count+1
 43608   01848A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43609   01848E                     
 43610                           ;../src/boards/../../drivers/SDCard.c: 274:     SPI_SD_dummy_clocks(spi, 512 - offs - co
      +                          unt);
 43611   01848E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 43612   018492  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 43613   018496  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 43614   01849A  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 43615   01849E  0105               	movlb	5	; () banked
 43616   0184A0  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 43617   0184A2  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 43618   0184A4  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 43619   0184A6  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 43620   0184A8  51E6               	movf	SDCard_write512@count& (0+255),w,b
 43621   0184AA  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 43622   0184AC  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 43623   0184AE  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 43624   0184B0  0E00               	movlw	0
 43625   0184B2  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 43626   0184B4  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 43627   0184B6  0E02               	movlw	2
 43628   0184B8  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 43629   0184BA  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 43630   0184BC  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 43631                           
 43632                           ;../src/boards/../../drivers/SDCard.c: 275:     response = (crc >> 8) & 0xff;
 43633   0184C0  0105               	movlb	5	; () banked
 43634   0184C2  51F5               	movf	(SDCard_write512@crc+1)& (0+255),w,b
 43635   0184C4  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43636   0184C6                     
 43637                           ; BSR set to: 5
 43638                           ;../src/boards/../../drivers/SDCard.c: 276:     SPI_SD_send(spi, &response, 1);
 43639   0184C6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43640   0184CA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43641   0184CE  0EF8               	movlw	low SDCard_write512@response
 43642   0184D0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43643   0184D2  0E05               	movlw	high SDCard_write512@response
 43644   0184D4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43645   0184D6  0E00               	movlw	0
 43646   0184D8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43647   0184DA  0E01               	movlw	1
 43648   0184DC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43649   0184DE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43650   0184E2                     
 43651                           ;../src/boards/../../drivers/SDCard.c: 277:     response = crc & 0xff;
 43652   0184E2  C5F4  F5F8         	movff	SDCard_write512@crc,SDCard_write512@response
 43653   0184E6                     
 43654                           ;../src/boards/../../drivers/SDCard.c: 278:     SPI_SD_send(spi, &response, 1);
 43655   0184E6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 43656   0184EA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 43657   0184EE  0EF8               	movlw	low SDCard_write512@response
 43658   0184F0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 43659   0184F2  0E05               	movlw	high SDCard_write512@response
 43660   0184F4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 43661   0184F6  0E00               	movlw	0
 43662   0184F8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 43663   0184FA  0E01               	movlw	1
 43664   0184FC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 43665   0184FE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 43666   018502                     
 43667                           ;../src/boards/../../drivers/SDCard.c: 280:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 43668   018502  0E0B               	movlw	11
 43669   018504  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43670   018506  0EB8               	movlw	184
 43671   018508  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43672   01850A  0EFF               	movlw	255
 43673   01850C  ECDC  F0FD         	call	___SDCard_wait_response
 43674   018510  0105               	movlb	5	; () banked
 43675   018512  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43676   018514                     
 43677                           ; BSR set to: 5
 43678                           ;../src/boards/../../drivers/SDCard.c: 281:     if (response == 0xff) {
 43679   018514  29F8               	incf	SDCard_write512@response& (0+255),w,b
 43680   018516  A4D8               	btfss	status,2,c
 43681   018518  EF90  F0C2         	goto	u27931
 43682   01851C  EF92  F0C2         	goto	u27930
 43683   018520                     u27931:
 43684   018520  EF98  F0C2         	goto	l21033
 43685   018524                     u27930:
 43686   018524                     l21031:
 43687                           
 43688                           ; BSR set to: 5
 43689                           ;../src/boards/../../drivers/SDCard.c: 283:         result = 1;
 43690   018524  0E00               	movlw	0
 43691   018526  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43692   018528  0E01               	movlw	1
 43693   01852A  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43694                           
 43695                           ;../src/boards/../../drivers/SDCard.c: 284:         goto done;
 43696   01852C  EFE4  F0C2         	goto	l21059
 43697   018530                     l21033:
 43698                           
 43699                           ; BSR set to: 5
 43700                           ;../src/boards/../../drivers/SDCard.c: 286:     if ((response & 0x1f) != 0x05) {
 43701   018530  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43702   018532  0B1F               	andlw	31
 43703   018534  0A05               	xorlw	5
 43704   018536  B4D8               	btfsc	status,2,c
 43705   018538  EFA0  F0C2         	goto	u27941
 43706   01853C  EFA2  F0C2         	goto	u27940
 43707   018540                     u27941:
 43708   018540  EFCD  F0C2         	goto	l21049
 43709   018544                     u27940:
 43710   018544                     
 43711                           ; BSR set to: 5
 43712                           ;../src/boards/../../drivers/SDCard.c: 288:         if ((response & 0x1f) == 0x0b) {
 43713   018544  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43714   018546  0B1F               	andlw	31
 43715   018548  0A0B               	xorlw	11
 43716   01854A  A4D8               	btfss	status,2,c
 43717   01854C  EFAA  F0C2         	goto	u27951
 43718   018550  EFAC  F0C2         	goto	u27950
 43719   018554                     u27951:
 43720   018554  EF19  F0C2         	goto	l21007
 43721   018558                     u27950:
 43722   018558                     
 43723                           ; BSR set to: 5
 43724                           ;../src/boards/../../drivers/SDCard.c: 290:             if (--retry < 1) {
 43725   018558  07F0               	decf	SDCard_write512@retry& (0+255),f,b
 43726   01855A  A0D8               	btfss	status,0,c
 43727   01855C  07F1               	decf	(SDCard_write512@retry+1)& (0+255),f,b
 43728   01855E  BFF1               	btfsc	(SDCard_write512@retry+1)& (0+255),7,b
 43729   018560  EFBC  F0C2         	goto	u27960
 43730   018564  51F1               	movf	(SDCard_write512@retry+1)& (0+255),w,b
 43731   018566  E106               	bnz	u27961
 43732   018568  05F0               	decf	SDCard_write512@retry& (0+255),w,b
 43733   01856A  B0D8               	btfsc	status,0,c
 43734   01856C  EFBA  F0C2         	goto	u27961
 43735   018570  EFBC  F0C2         	goto	u27960
 43736   018574                     u27961:
 43737   018574  EFC2  F0C2         	goto	l21045
 43738   018578                     u27960:
 43739   018578                     
 43740                           ; BSR set to: 5
 43741                           ;../src/boards/../../drivers/SDCard.c: 291:                 result = 4;
 43742   018578  0E00               	movlw	0
 43743   01857A  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43744   01857C  0E04               	movlw	4
 43745   01857E  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43746                           
 43747                           ;../src/boards/../../drivers/SDCard.c: 292:                 goto done;
 43748   018580  EFE4  F0C2         	goto	l21059
 43749   018584                     l21045:
 43750                           
 43751                           ; BSR set to: 5
 43752                           ;../src/boards/../../drivers/SDCard.c: 294:             __SDCard_wait_response(0xff, 300
      +                          00);
 43753   018584  0E75               	movlw	117
 43754   018586  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43755   018588  0E30               	movlw	48
 43756   01858A  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43757   01858C  0EFF               	movlw	255
 43758   01858E  ECDC  F0FD         	call	___SDCard_wait_response
 43759                           
 43760                           ;../src/boards/../../drivers/SDCard.c: 295:             SDCard_end_transaction();
 43761   018592  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 43762                           
 43763                           ;../src/boards/../../drivers/SDCard.c: 296:             goto retry;
 43764   018596  EFF2  F0C1         	goto	l20999
 43765   01859A                     l21049:
 43766                           
 43767                           ; BSR set to: 5
 43768                           ;../src/boards/../../drivers/SDCard.c: 302:     response = __SDCard_wait_response(0x00, 
      +                          30000);
 43769   01859A  0E75               	movlw	117
 43770   01859C  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 43771   01859E  0E30               	movlw	48
 43772   0185A0  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 43773   0185A2  0E00               	movlw	0
 43774   0185A4  ECDC  F0FD         	call	___SDCard_wait_response
 43775   0185A8  0105               	movlb	5	; () banked
 43776   0185AA  6FF8               	movwf	SDCard_write512@response& (0+255),b
 43777   0185AC                     
 43778                           ; BSR set to: 5
 43779                           ;../src/boards/../../drivers/SDCard.c: 303:     if (response == 0x00) {
 43780   0185AC  51F8               	movf	SDCard_write512@response& (0+255),w,b
 43781   0185AE  A4D8               	btfss	status,2,c
 43782   0185B0  EFDC  F0C2         	goto	u27971
 43783   0185B4  EFDE  F0C2         	goto	u27970
 43784   0185B8                     u27971:
 43785   0185B8  EFE0  F0C2         	goto	l21057
 43786   0185BC                     u27970:
 43787   0185BC  EF92  F0C2         	goto	l21031
 43788   0185C0                     l21057:
 43789                           
 43790                           ; BSR set to: 5
 43791                           ;../src/boards/../../drivers/SDCard.c: 309:     result = 0;
 43792   0185C0  0E00               	movlw	0
 43793   0185C2  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 43794   0185C4  0E00               	movlw	0
 43795   0185C6  6FF2               	movwf	SDCard_write512@result& (0+255),b
 43796   0185C8                     l21059:
 43797                           
 43798                           ; BSR set to: 5
 43799                           ;../src/boards/../../drivers/SDCard.c: 312:     SDCard_end_transaction();
 43800   0185C8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 43801   0185CC                     
 43802                           ;../src/boards/../../drivers/SDCard.c: 313:     return result;
 43803   0185CC  C5F2  F5DE         	movff	SDCard_write512@result,?_SDCard_write512
 43804   0185D0  C5F3  F5DF         	movff	SDCard_write512@result+1,?_SDCard_write512+1
 43805   0185D4  0012               	return		;funcret
 43806   0185D6                     __end_of_SDCard_write512:
 43807                           	callstack 0
 43808                           
 43809 ;; *************** function _disk_read *****************
 43810 ;; Defined at:
 43811 ;;		line 111 in file "../drivers/diskio.c"
 43812 ;; Parameters:    Size  Location     Type
 43813 ;;  pdrv            1    wreg     unsigned char 
 43814 ;;  buff            2    0[BANK6 ] PTR unsigned char 
 43815 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 43816 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 43817 ;;		 -> tmp_buf(512), 
 43818 ;;  sector          4    2[BANK6 ] unsigned long 
 43819 ;;  count           2    6[BANK6 ] unsigned int 
 43820 ;; Auto vars:     Size  Location     Type
 43821 ;;  pdrv            1  155[BANK5 ] unsigned char 
 43822 ;;  i               2  156[BANK5 ] int 
 43823 ;; Return value:  Size  Location     Type
 43824 ;;                  1    wreg      enum E737
 43825 ;; Registers used:
 43826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43827 ;; Tracked objects:
 43828 ;;		On entry : 0/0
 43829 ;;		On exit  : 0/0
 43830 ;;		Unchanged: 0/0
 43831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43832 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43835 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43836 ;;Total ram usage:       11 bytes
 43837 ;; Hardware stack levels used: 1
 43838 ;; Hardware stack levels required when called: 11
 43839 ;; This function calls:
 43840 ;;		_SDCard_read512
 43841 ;;		_printf
 43842 ;;		_util_addrdump
 43843 ;; This function is called by:
 43844 ;;		_move_window
 43845 ;;		_f_open
 43846 ;;		_f_read
 43847 ;;		_f_write
 43848 ;;		_f_lseek
 43849 ;; This function uses a non-reentrant model
 43850 ;;
 43851                           
 43852                           	psect	text119
 43853   01E7AA                     __ptext119:
 43854                           	callstack 0
 43855   01E7AA                     _disk_read:
 43856                           	callstack 106
 43857   01E7AA                     
 43858                           ;../drivers/diskio.c: 115:     for (int i = 0; i < count; i++) {
 43859   01E7AA  0E00               	movlw	0
 43860   01E7AC  0105               	movlb	5	; () banked
 43861   01E7AE  6FFD               	movwf	(disk_read@i+1)& (0+255),b
 43862   01E7B0  0E00               	movlw	0
 43863   01E7B2  6FFC               	movwf	disk_read@i& (0+255),b
 43864   01E7B4  EF1B  F0F4         	goto	l21217
 43865   01E7B8                     l21199:
 43866                           
 43867                           ; BSR set to: 5
 43868                           ;../drivers/diskio.c: 116:         if (SDCard_read512(start_lba + sector, 0, buff, 512) 
      +                          != 0) {
 43869   01E7B8  0106               	movlb	6	; () banked
 43870   01E7BA  5102               	movf	disk_read@sector& (0+255),w,b
 43871   01E7BC  0107               	movlb	7	; () banked
 43872   01E7BE  25EE               	addwf	_start_lba& (0+255),w,b
 43873   01E7C0  0105               	movlb	5	; () banked
 43874   01E7C2  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 43875   01E7C4  0106               	movlb	6	; () banked
 43876   01E7C6  5103               	movf	(disk_read@sector+1)& (0+255),w,b
 43877   01E7C8  0107               	movlb	7	; () banked
 43878   01E7CA  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 43879   01E7CC  0105               	movlb	5	; () banked
 43880   01E7CE  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 43881   01E7D0  0106               	movlb	6	; () banked
 43882   01E7D2  5104               	movf	(disk_read@sector+2)& (0+255),w,b
 43883   01E7D4  0107               	movlb	7	; () banked
 43884   01E7D6  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 43885   01E7D8  0105               	movlb	5	; () banked
 43886   01E7DA  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 43887   01E7DC  0106               	movlb	6	; () banked
 43888   01E7DE  5105               	movf	(disk_read@sector+3)& (0+255),w,b
 43889   01E7E0  0107               	movlb	7	; () banked
 43890   01E7E2  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 43891   01E7E4  0105               	movlb	5	; () banked
 43892   01E7E6  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 43893   01E7E8  0E00               	movlw	0
 43894   01E7EA  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 43895   01E7EC  0E00               	movlw	0
 43896   01E7EE  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 43897   01E7F0  C600  F5E4         	movff	disk_read@buff,SDCard_read512@buf
 43898   01E7F4  C601  F5E5         	movff	disk_read@buff+1,SDCard_read512@buf+1
 43899   01E7F8  0E02               	movlw	2
 43900   01E7FA  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 43901   01E7FC  0E00               	movlw	0
 43902   01E7FE  6FE6               	movwf	SDCard_read512@count& (0+255),b
 43903   01E800  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 43904   01E804  0105               	movlb	5	; () banked
 43905   01E806  51DE               	movf	?_SDCard_read512& (0+255),w,b
 43906   01E808  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 43907   01E80A  B4D8               	btfsc	status,2,c
 43908   01E80C  EF0A  F0F4         	goto	u28161
 43909   01E810  EF0C  F0F4         	goto	u28160
 43910   01E814                     u28161:
 43911   01E814  EF0F  F0F4         	goto	l21211
 43912   01E818                     u28160:
 43913   01E818                     
 43914                           ; BSR set to: 5
 43915                           ;../drivers/diskio.c: 118:             return RES_ERROR;
 43916   01E818  0E01               	movlw	1
 43917   01E81A  EF2B  F0F4         	goto	l2491
 43918   01E81E                     l21211:
 43919                           
 43920                           ; BSR set to: 5
 43921                           ;../drivers/diskio.c: 123:         sector++;
 43922   01E81E  0E01               	movlw	1
 43923   01E820  0106               	movlb	6	; () banked
 43924   01E822  2702               	addwf	disk_read@sector& (0+255),f,b
 43925   01E824  0E00               	movlw	0
 43926   01E826  2303               	addwfc	(disk_read@sector+1)& (0+255),f,b
 43927   01E828  2304               	addwfc	(disk_read@sector+2)& (0+255),f,b
 43928   01E82A  2305               	addwfc	(disk_read@sector+3)& (0+255),f,b
 43929   01E82C                     
 43930                           ; BSR set to: 6
 43931                           ;../drivers/diskio.c: 124:         buff += 512;
 43932   01E82C  0E02               	movlw	2
 43933   01E82E  2701               	addwf	(disk_read@buff+1)& (0+255),f,b
 43934   01E830                     
 43935                           ; BSR set to: 6
 43936                           ;../drivers/diskio.c: 125:     }
 43937   01E830  0105               	movlb	5	; () banked
 43938   01E832  4BFC               	infsnz	disk_read@i& (0+255),f,b
 43939   01E834  2BFD               	incf	(disk_read@i+1)& (0+255),f,b
 43940   01E836                     l21217:
 43941                           
 43942                           ; BSR set to: 5
 43943   01E836  0106               	movlb	6	; () banked
 43944   01E838  5106               	movf	disk_read@count& (0+255),w,b
 43945   01E83A  0105               	movlb	5	; () banked
 43946   01E83C  5DFC               	subwf	disk_read@i& (0+255),w,b
 43947   01E83E  0106               	movlb	6	; () banked
 43948   01E840  5107               	movf	(disk_read@count+1)& (0+255),w,b
 43949   01E842  0105               	movlb	5	; () banked
 43950   01E844  59FD               	subwfb	(disk_read@i+1)& (0+255),w,b
 43951   01E846  A0D8               	btfss	status,0,c
 43952   01E848  EF28  F0F4         	goto	u28171
 43953   01E84C  EF2A  F0F4         	goto	u28170
 43954   01E850                     u28171:
 43955   01E850  EFDC  F0F3         	goto	l21199
 43956   01E854                     u28170:
 43957   01E854                     
 43958                           ; BSR set to: 5
 43959                           ;../drivers/diskio.c: 127:     return RES_OK;
 43960   01E854  0E00               	movlw	0
 43961   01E856                     l2491:
 43962                           
 43963                           ; BSR set to: 5
 43964   01E856  0012               	return		;funcret
 43965   01E858                     __end_of_disk_read:
 43966                           	callstack 0
 43967                           
 43968 ;; *************** function _SDCard_read512 *****************
 43969 ;; Defined at:
 43970 ;;		line 169 in file "../src/boards/../../drivers/SDCard.c"
 43971 ;; Parameters:    Size  Location     Type
 43972 ;;  addr            4  126[BANK5 ] unsigned long 
 43973 ;;  offs            2  130[BANK5 ] unsigned int 
 43974 ;;  buf             2  132[BANK5 ] PTR void 
 43975 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 43976 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 43977 ;;		 -> NULL(0), tmp_buf(512), 
 43978 ;;  count           2  134[BANK5 ] unsigned int 
 43979 ;; Auto vars:     Size  Location     Type
 43980 ;;  i               2  142[BANK5 ] unsigned int 
 43981 ;;  i               2  140[BANK5 ] int 
 43982 ;;  crc             2  152[BANK5 ] unsigned short 
 43983 ;;  spi             2  150[BANK5 ] PTR struct SPI
 43984 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 43985 ;;  result          2  148[BANK5 ] int 
 43986 ;;  resp_crc        2  146[BANK5 ] unsigned short 
 43987 ;;  retry           2  144[BANK5 ] int 
 43988 ;;  response        1  154[BANK5 ] unsigned char 
 43989 ;; Return value:  Size  Location     Type
 43990 ;;                  2  126[BANK5 ] int 
 43991 ;; Registers used:
 43992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43993 ;; Tracked objects:
 43994 ;;		On entry : 0/0
 43995 ;;		On exit  : 0/0
 43996 ;;		Unchanged: 0/0
 43997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 43998 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43999 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44000 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44001 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44002 ;;Total ram usage:       29 bytes
 44003 ;; Hardware stack levels used: 1
 44004 ;; Hardware stack levels required when called: 10
 44005 ;; This function calls:
 44006 ;;		_SDCard_end_transaction
 44007 ;;		_SPI_SD_receive
 44008 ;;		_SPI_SD_receive_byte
 44009 ;;		___SDCard_command_r1
 44010 ;;		___SDCard_crc16
 44011 ;;		___SDCard_wait_response
 44012 ;;		_printf
 44013 ;;		_util_addrdump
 44014 ;; This function is called by:
 44015 ;;		_disk_initialize
 44016 ;;		_disk_read
 44017 ;; This function uses a non-reentrant model
 44018 ;;
 44019                           
 44020                           	psect	text120
 44021   018E56                     __ptext120:
 44022                           	callstack 0
 44023   018E56                     _SDCard_read512:
 44024                           	callstack 106
 44025   018E56                     
 44026                           ;../src/boards/../../drivers/SDCard.c: 169: int SDCard_read512(uint32_t addr, unsigned i
      +                          nt offs, void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 170: {;../
      +                          src/boards/../../drivers/SDCard.c: 171:     struct SPI *spi = ctx_.spi;
 44027   018E56  C7A8  F5F6         	movff	_ctx_,SDCard_read512@spi
 44028   018E5A  C7A9  F5F7         	movff	_ctx_+1,SDCard_read512@spi+1
 44029   018E5E                     
 44030                           ;../src/boards/../../drivers/SDCard.c: 172:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 173:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 174:     uint
      +                          16_t crc, resp_crc;;../src/boards/../../drivers/SDCard.c: 175:     int retry = 5;
 44031   018E5E  0E00               	movlw	0
 44032   018E60  0105               	movlb	5	; () banked
 44033   018E62  6FF1               	movwf	(SDCard_read512@retry+1)& (0+255),b
 44034   018E64  0E05               	movlw	5
 44035   018E66  6FF0               	movwf	SDCard_read512@retry& (0+255),b
 44036   018E68                     l21071:
 44037                           
 44038                           ;../src/boards/../../drivers/SDCard.c: 180:     result = __SDCard_command_r1(17, addr, &
      +                          response);
 44039   018E68  C5DE  F51B         	movff	SDCard_read512@addr,___SDCard_command_r1@argument
 44040   018E6C  C5DF  F51C         	movff	SDCard_read512@addr+1,___SDCard_command_r1@argument+1
 44041   018E70  C5E0  F51D         	movff	SDCard_read512@addr+2,___SDCard_command_r1@argument+2
 44042   018E74  C5E1  F51E         	movff	SDCard_read512@addr+3,___SDCard_command_r1@argument+3
 44043   018E78  0EFA               	movlw	low SDCard_read512@response
 44044   018E7A  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 44045   018E7C  0E05               	movlw	high SDCard_read512@response
 44046   018E7E  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 44047   018E80  0E11               	movlw	17
 44048   018E82  EC23  F0F3         	call	___SDCard_command_r1
 44049   018E86  C51B  F5F4         	movff	?___SDCard_command_r1,SDCard_read512@result
 44050   018E8A  C51C  F5F5         	movff	?___SDCard_command_r1+1,SDCard_read512@result+1
 44051   018E8E                     
 44052                           ;../src/boards/../../drivers/SDCard.c: 181:     if (result != 0) {
 44053   018E8E  0105               	movlb	5	; () banked
 44054   018E90  51F4               	movf	SDCard_read512@result& (0+255),w,b
 44055   018E92  11F5               	iorwf	(SDCard_read512@result+1)& (0+255),w,b
 44056   018E94  B4D8               	btfsc	status,2,c
 44057   018E96  EF4F  F0C7         	goto	u27981
 44058   018E9A  EF51  F0C7         	goto	u27980
 44059   018E9E                     u27981:
 44060   018E9E  EF53  F0C7         	goto	l21077
 44061   018EA2                     u27980:
 44062   018EA2  EF75  F0C8         	goto	l21143
 44063   018EA6                     l21077:
 44064                           
 44065                           ; BSR set to: 5
 44066                           ;../src/boards/../../drivers/SDCard.c: 184:     if (response != 0) {
 44067   018EA6  51FA               	movf	SDCard_read512@response& (0+255),w,b
 44068   018EA8  B4D8               	btfsc	status,2,c
 44069   018EAA  EF59  F0C7         	goto	u27991
 44070   018EAE  EF5B  F0C7         	goto	u27990
 44071   018EB2                     u27991:
 44072   018EB2  EF61  F0C7         	goto	l21081
 44073   018EB6                     u27990:
 44074   018EB6                     l21079:
 44075                           
 44076                           ; BSR set to: 5
 44077                           ;../src/boards/../../drivers/SDCard.c: 185:         result = 3;
 44078   018EB6  0E00               	movlw	0
 44079   018EB8  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44080   018EBA  0E03               	movlw	3
 44081   018EBC  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44082                           
 44083                           ;../src/boards/../../drivers/SDCard.c: 186:         goto done;
 44084   018EBE  EF75  F0C8         	goto	l21143
 44085   018EC2                     l21081:
 44086                           
 44087                           ; BSR set to: 5
 44088                           ;../src/boards/../../drivers/SDCard.c: 189:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 44089   018EC2  0E0B               	movlw	11
 44090   018EC4  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 44091   018EC6  0EB8               	movlw	184
 44092   018EC8  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 44093   018ECA  0EFF               	movlw	255
 44094   018ECC  ECDC  F0FD         	call	___SDCard_wait_response
 44095   018ED0  0105               	movlb	5	; () banked
 44096   018ED2  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44097   018ED4                     
 44098                           ; BSR set to: 5
 44099                           ;../src/boards/../../drivers/SDCard.c: 190:     if (response == 0xff) {
 44100   018ED4  29FA               	incf	SDCard_read512@response& (0+255),w,b
 44101   018ED6  A4D8               	btfss	status,2,c
 44102   018ED8  EF70  F0C7         	goto	u28001
 44103   018EDC  EF72  F0C7         	goto	u28000
 44104   018EE0                     u28001:
 44105   018EE0  EF78  F0C7         	goto	l21087
 44106   018EE4                     u28000:
 44107   018EE4                     
 44108                           ; BSR set to: 5
 44109                           ;../src/boards/../../drivers/SDCard.c: 191:         result = 1;
 44110   018EE4  0E00               	movlw	0
 44111   018EE6  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44112   018EE8  0E01               	movlw	1
 44113   018EEA  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44114                           
 44115                           ;../src/boards/../../drivers/SDCard.c: 192:         goto done;
 44116   018EEC  EF75  F0C8         	goto	l21143
 44117   018EF0                     l21087:
 44118                           
 44119                           ; BSR set to: 5
 44120                           ;../src/boards/../../drivers/SDCard.c: 194:     if (response != 0xfe) {
 44121   018EF0  0EFE               	movlw	254
 44122   018EF2  19FA               	xorwf	SDCard_read512@response& (0+255),w,b
 44123   018EF4  B4D8               	btfsc	status,2,c
 44124   018EF6  EF7F  F0C7         	goto	u28011
 44125   018EFA  EF81  F0C7         	goto	u28010
 44126   018EFE                     u28011:
 44127   018EFE  EF83  F0C7         	goto	l21091
 44128   018F02                     u28010:
 44129   018F02  EF5B  F0C7         	goto	l21079
 44130   018F06                     l21091:
 44131                           
 44132                           ; BSR set to: 5
 44133                           ;../src/boards/../../drivers/SDCard.c: 199:     crc = 0;
 44134   018F06  0E00               	movlw	0
 44135   018F08  6FF9               	movwf	(SDCard_read512@crc+1)& (0+255),b
 44136   018F0A  0E00               	movlw	0
 44137   018F0C  6FF8               	movwf	SDCard_read512@crc& (0+255),b
 44138                           
 44139                           ;../src/boards/../../drivers/SDCard.c: 200:     for (int i = 0; i < offs; i++) {
 44140   018F0E  0E00               	movlw	0
 44141   018F10  6FED               	movwf	(SDCard_read512@i+1)& (0+255),b
 44142   018F12  0E00               	movlw	0
 44143   018F14  6FEC               	movwf	SDCard_read512@i& (0+255),b
 44144   018F16  EFB2  F0C7         	goto	l21101
 44145   018F1A                     l21093:
 44146                           
 44147                           ; BSR set to: 5
 44148                           ;../src/boards/../../drivers/SDCard.c: 201:         response = SPI_SD_receive_byte(spi);
 44149   018F1A  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44150   018F1E  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44151   018F22  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44152   018F26  0105               	movlb	5	; () banked
 44153   018F28  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44154   018F2A                     
 44155                           ; BSR set to: 5
 44156                           ;../src/boards/../../drivers/SDCard.c: 202:         if (ctx_.calc_read_crc)
 44157   018F2A  0107               	movlb	7	; () banked
 44158   018F2C  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44159   018F2E  EF9B  F0C7         	goto	u28021
 44160   018F32  EF9D  F0C7         	goto	u28020
 44161   018F36                     u28021:
 44162   018F36  EFAF  F0C7         	goto	l21099
 44163   018F3A                     u28020:
 44164   018F3A                     
 44165                           ; BSR set to: 7
 44166                           ;../src/boards/../../drivers/SDCard.c: 203:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 44167   018F3A  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44168   018F3E  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44169   018F42  0EFA               	movlw	low SDCard_read512@response
 44170   018F44  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 44171   018F46  0E05               	movlw	high SDCard_read512@response
 44172   018F48  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 44173   018F4A  0E00               	movlw	0
 44174   018F4C  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 44175   018F4E  0E01               	movlw	1
 44176   018F50  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 44177   018F52  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44178   018F56  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44179   018F5A  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44180   018F5E                     l21099:
 44181                           
 44182                           ;../src/boards/../../drivers/SDCard.c: 204:     }
 44183   018F5E  0105               	movlb	5	; () banked
 44184   018F60  4BEC               	infsnz	SDCard_read512@i& (0+255),f,b
 44185   018F62  2BED               	incf	(SDCard_read512@i+1)& (0+255),f,b
 44186   018F64                     l21101:
 44187                           
 44188                           ; BSR set to: 5
 44189   018F64  51E2               	movf	SDCard_read512@offs& (0+255),w,b
 44190   018F66  5DEC               	subwf	SDCard_read512@i& (0+255),w,b
 44191   018F68  51E3               	movf	(SDCard_read512@offs+1)& (0+255),w,b
 44192   018F6A  59ED               	subwfb	(SDCard_read512@i+1)& (0+255),w,b
 44193   018F6C  A0D8               	btfss	status,0,c
 44194   018F6E  EFBB  F0C7         	goto	u28031
 44195   018F72  EFBD  F0C7         	goto	u28030
 44196   018F76                     u28031:
 44197   018F76  EF8D  F0C7         	goto	l21093
 44198   018F7A                     u28030:
 44199   018F7A                     
 44200                           ; BSR set to: 5
 44201                           ;../src/boards/../../drivers/SDCard.c: 205:     SPI_SD_receive(spi, buf, count);
 44202   018F7A  C5F6  F504         	movff	SDCard_read512@spi,SPI_SD_receive@ctx_
 44203   018F7E  C5F7  F505         	movff	SDCard_read512@spi+1,SPI_SD_receive@ctx_+1
 44204   018F82  C5E4  F506         	movff	SDCard_read512@buf,SPI_SD_receive@buf
 44205   018F86  C5E5  F507         	movff	SDCard_read512@buf+1,SPI_SD_receive@buf+1
 44206   018F8A  C5E6  F508         	movff	SDCard_read512@count,SPI_SD_receive@count
 44207   018F8E  C5E7  F509         	movff	SDCard_read512@count+1,SPI_SD_receive@count+1
 44208   018F92  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 44209   018F96                     
 44210                           ;../src/boards/../../drivers/SDCard.c: 206:     if (ctx_.calc_read_crc)
 44211   018F96  0107               	movlb	7	; () banked
 44212   018F98  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44213   018F9A  EFD1  F0C7         	goto	u28041
 44214   018F9E  EFD3  F0C7         	goto	u28040
 44215   018FA2                     u28041:
 44216   018FA2  EFE5  F0C7         	goto	l21109
 44217   018FA6                     u28040:
 44218   018FA6                     
 44219                           ; BSR set to: 7
 44220                           ;../src/boards/../../drivers/SDCard.c: 207:         crc = __SDCard_crc16(crc, buf, count
      +                          );
 44221   018FA6  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44222   018FAA  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44223   018FAE  C5E4  F506         	movff	SDCard_read512@buf,___SDCard_crc16@buf
 44224   018FB2  C5E5  F507         	movff	SDCard_read512@buf+1,___SDCard_crc16@buf+1
 44225   018FB6  C5E6  F508         	movff	SDCard_read512@count,___SDCard_crc16@count
 44226   018FBA  C5E7  F509         	movff	SDCard_read512@count+1,___SDCard_crc16@count+1
 44227   018FBE  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44228   018FC2  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44229   018FC6  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44230   018FCA                     l21109:
 44231                           
 44232                           ;../src/boards/../../drivers/SDCard.c: 208:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 44233   018FCA  0E00               	movlw	0
 44234   018FCC  0105               	movlb	5	; () banked
 44235   018FCE  6FEF               	movwf	(SDCard_read512@i_684+1)& (0+255),b
 44236   018FD0  0E00               	movlw	0
 44237   018FD2  6FEE               	movwf	SDCard_read512@i_684& (0+255),b
 44238   018FD4  EF11  F0C8         	goto	l21119
 44239   018FD8                     l21111:
 44240                           
 44241                           ; BSR set to: 5
 44242                           ;../src/boards/../../drivers/SDCard.c: 209:         response = SPI_SD_receive_byte(spi);
 44243   018FD8  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44244   018FDC  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44245   018FE0  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44246   018FE4  0105               	movlb	5	; () banked
 44247   018FE6  6FFA               	movwf	SDCard_read512@response& (0+255),b
 44248   018FE8                     
 44249                           ; BSR set to: 5
 44250                           ;../src/boards/../../drivers/SDCard.c: 210:         if (ctx_.calc_read_crc)
 44251   018FE8  0107               	movlb	7	; () banked
 44252   018FEA  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44253   018FEC  EFFA  F0C7         	goto	u28051
 44254   018FF0  EFFC  F0C7         	goto	u28050
 44255   018FF4                     u28051:
 44256   018FF4  EF0E  F0C8         	goto	l21117
 44257   018FF8                     u28050:
 44258   018FF8                     
 44259                           ; BSR set to: 7
 44260                           ;../src/boards/../../drivers/SDCard.c: 211:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 44261   018FF8  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 44262   018FFC  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 44263   019000  0EFA               	movlw	low SDCard_read512@response
 44264   019002  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 44265   019004  0E05               	movlw	high SDCard_read512@response
 44266   019006  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 44267   019008  0E00               	movlw	0
 44268   01900A  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 44269   01900C  0E01               	movlw	1
 44270   01900E  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 44271   019010  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 44272   019014  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 44273   019018  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 44274   01901C                     l21117:
 44275                           
 44276                           ;../src/boards/../../drivers/SDCard.c: 212:     }
 44277   01901C  0105               	movlb	5	; () banked
 44278   01901E  4BEE               	infsnz	SDCard_read512@i_684& (0+255),f,b
 44279   019020  2BEF               	incf	(SDCard_read512@i_684+1)& (0+255),f,b
 44280   019022                     l21119:
 44281                           
 44282                           ; BSR set to: 5
 44283   019022  C5E2  F5E8         	movff	SDCard_read512@offs,??_SDCard_read512
 44284   019026  C5E3  F5E9         	movff	SDCard_read512@offs+1,??_SDCard_read512+1
 44285   01902A  1FE8               	comf	??_SDCard_read512& (0+255),f,b
 44286   01902C  1FE9               	comf	(??_SDCard_read512+1)& (0+255),f,b
 44287   01902E  4BE8               	infsnz	??_SDCard_read512& (0+255),f,b
 44288   019030  2BE9               	incf	(??_SDCard_read512+1)& (0+255),f,b
 44289   019032  51E6               	movf	SDCard_read512@count& (0+255),w,b
 44290   019034  5FE8               	subwf	??_SDCard_read512& (0+255),f,b
 44291   019036  51E7               	movf	(SDCard_read512@count+1)& (0+255),w,b
 44292   019038  5BE9               	subwfb	(??_SDCard_read512+1)& (0+255),f,b
 44293   01903A  0E00               	movlw	0
 44294   01903C  25E8               	addwf	??_SDCard_read512& (0+255),w,b
 44295   01903E  6FEA               	movwf	(??_SDCard_read512+2)& (0+255),b
 44296   019040  0E02               	movlw	2
 44297   019042  21E9               	addwfc	(??_SDCard_read512+1)& (0+255),w,b
 44298   019044  6FEB               	movwf	(??_SDCard_read512+3)& (0+255),b
 44299   019046  51EA               	movf	(??_SDCard_read512+2)& (0+255),w,b
 44300   019048  5DEE               	subwf	SDCard_read512@i_684& (0+255),w,b
 44301   01904A  51EB               	movf	(??_SDCard_read512+3)& (0+255),w,b
 44302   01904C  59EF               	subwfb	(SDCard_read512@i_684+1)& (0+255),w,b
 44303   01904E  A0D8               	btfss	status,0,c
 44304   019050  EF2C  F0C8         	goto	u28061
 44305   019054  EF2E  F0C8         	goto	u28060
 44306   019058                     u28061:
 44307   019058  EFEC  F0C7         	goto	l21111
 44308   01905C                     u28060:
 44309   01905C                     
 44310                           ; BSR set to: 5
 44311                           ;../src/boards/../../drivers/SDCard.c: 217:     resp_crc = (uint16_t)SPI_SD_receive_byte
      +                          (spi) << 8;
 44312   01905C  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44313   019060  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44314   019064  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44315   019068  0105               	movlb	5	; () banked
 44316   01906A  6FF3               	movwf	(SDCard_read512@resp_crc+1)& (0+255),b
 44317   01906C  6BF2               	clrf	SDCard_read512@resp_crc& (0+255),b
 44318   01906E                     
 44319                           ; BSR set to: 5
 44320                           ;../src/boards/../../drivers/SDCard.c: 218:     resp_crc |= SPI_SD_receive_byte(spi);
 44321   01906E  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 44322   019072  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 44323   019076  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 44324   01907A  0105               	movlb	5	; () banked
 44325   01907C  6FE8               	movwf	??_SDCard_read512& (0+255),b
 44326   01907E  51E8               	movf	??_SDCard_read512& (0+255),w,b
 44327   019080  13F2               	iorwf	SDCard_read512@resp_crc& (0+255),f,b
 44328   019082                     
 44329                           ; BSR set to: 5
 44330                           ;../src/boards/../../drivers/SDCard.c: 219:     if (ctx_.calc_read_crc && resp_crc != cr
      +                          c) {
 44331   019082  0107               	movlb	7	; () banked
 44332   019084  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 44333   019086  EF47  F0C8         	goto	u28071
 44334   01908A  EF49  F0C8         	goto	u28070
 44335   01908E                     u28071:
 44336   01908E  EF70  F0C8         	goto	l21141
 44337   019092                     u28070:
 44338   019092                     
 44339                           ; BSR set to: 7
 44340   019092  0105               	movlb	5	; () banked
 44341   019094  51F8               	movf	SDCard_read512@crc& (0+255),w,b
 44342   019096  19F2               	xorwf	SDCard_read512@resp_crc& (0+255),w,b
 44343   019098  E109               	bnz	u28080
 44344   01909A  51F9               	movf	(SDCard_read512@crc+1)& (0+255),w,b
 44345   01909C  19F3               	xorwf	(SDCard_read512@resp_crc+1)& (0+255),w,b
 44346   01909E  B4D8               	btfsc	status,2,c
 44347   0190A0  EF54  F0C8         	goto	u28081
 44348   0190A4  EF56  F0C8         	goto	u28080
 44349   0190A8                     u28081:
 44350   0190A8  EF70  F0C8         	goto	l21141
 44351   0190AC                     u28080:
 44352   0190AC                     
 44353                           ; BSR set to: 5
 44354                           ;../src/boards/../../drivers/SDCard.c: 222:         if (--retry < 1) {
 44355   0190AC  07F0               	decf	SDCard_read512@retry& (0+255),f,b
 44356   0190AE  A0D8               	btfss	status,0,c
 44357   0190B0  07F1               	decf	(SDCard_read512@retry+1)& (0+255),f,b
 44358   0190B2  BFF1               	btfsc	(SDCard_read512@retry+1)& (0+255),7,b
 44359   0190B4  EF66  F0C8         	goto	u28090
 44360   0190B8  51F1               	movf	(SDCard_read512@retry+1)& (0+255),w,b
 44361   0190BA  E106               	bnz	u28091
 44362   0190BC  05F0               	decf	SDCard_read512@retry& (0+255),w,b
 44363   0190BE  B0D8               	btfsc	status,0,c
 44364   0190C0  EF64  F0C8         	goto	u28091
 44365   0190C4  EF66  F0C8         	goto	u28090
 44366   0190C8                     u28091:
 44367   0190C8  EF6C  F0C8         	goto	l21139
 44368   0190CC                     u28090:
 44369   0190CC                     
 44370                           ; BSR set to: 5
 44371                           ;../src/boards/../../drivers/SDCard.c: 223:             result = 4;
 44372   0190CC  0E00               	movlw	0
 44373   0190CE  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44374   0190D0  0E04               	movlw	4
 44375   0190D2  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44376                           
 44377                           ;../src/boards/../../drivers/SDCard.c: 224:             goto done;
 44378   0190D4  EF75  F0C8         	goto	l21143
 44379   0190D8                     l21139:
 44380                           
 44381                           ; BSR set to: 5
 44382                           ;../src/boards/../../drivers/SDCard.c: 226:         SDCard_end_transaction();
 44383   0190D8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 44384                           
 44385                           ;../src/boards/../../drivers/SDCard.c: 227:         goto retry;
 44386   0190DC  EF34  F0C7         	goto	l21071
 44387   0190E0                     l21141:
 44388                           
 44389                           ;../src/boards/../../drivers/SDCard.c: 230:     result = 0;
 44390   0190E0  0E00               	movlw	0
 44391   0190E2  0105               	movlb	5	; () banked
 44392   0190E4  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 44393   0190E6  0E00               	movlw	0
 44394   0190E8  6FF4               	movwf	SDCard_read512@result& (0+255),b
 44395   0190EA                     l21143:
 44396                           
 44397                           ; BSR set to: 5
 44398                           ;../src/boards/../../drivers/SDCard.c: 233:     SDCard_end_transaction();
 44399   0190EA  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 44400   0190EE                     
 44401                           ;../src/boards/../../drivers/SDCard.c: 234:     return result;
 44402   0190EE  C5F4  F5DE         	movff	SDCard_read512@result,?_SDCard_read512
 44403   0190F2  C5F5  F5DF         	movff	SDCard_read512@result+1,?_SDCard_read512+1
 44404   0190F6  0012               	return		;funcret
 44405   0190F8                     __end_of_SDCard_read512:
 44406                           	callstack 0
 44407                           
 44408 ;; *************** function _util_addrdump *****************
 44409 ;; Defined at:
 44410 ;;		line 57 in file "../drivers/utils.c"
 44411 ;; Parameters:    Size  Location     Type
 44412 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 44413 ;;		 -> STR_189(6), STR_186(6), STR_132(5), STR_43(5), 
 44414 ;;		 -> STR_42(5), STR_29(5), STR_26(5), 
 44415 ;;  addr_offs       4   95[BANK5 ] unsigned long 
 44416 ;;  addr            2   99[BANK5 ] PTR const void 
 44417 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 44418 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 44419 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 44420 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 44421 ;;		 -> tmp_buf(512), 
 44422 ;;  size            2  101[BANK5 ] unsigned int 
 44423 ;; Auto vars:     Size  Location     Type
 44424 ;;  i               2  124[BANK5 ] unsigned int 
 44425 ;;  chars          17  105[BANK5 ] unsigned char [17]
 44426 ;;  buf             2  122[BANK5 ] PTR const unsigned char 
 44427 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 44428 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 44429 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 44430 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 44431 ;;		 -> tmp_buf(512), 
 44432 ;; Return value:  Size  Location     Type
 44433 ;;                  1    wreg      void 
 44434 ;; Registers used:
 44435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44436 ;; Tracked objects:
 44437 ;;		On entry : 0/0
 44438 ;;		On exit  : 0/0
 44439 ;;		Unchanged: 0/0
 44440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44441 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44442 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44444 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44445 ;;Total ram usage:       33 bytes
 44446 ;; Hardware stack levels used: 1
 44447 ;; Hardware stack levels required when called: 9
 44448 ;; This function calls:
 44449 ;;		_printf
 44450 ;; This function is called by:
 44451 ;;		_SDCard_read512
 44452 ;;		_SDCard_write512
 44453 ;;		_mem_init
 44454 ;;		_mem_dump
 44455 ;;		_disk_read
 44456 ;;		_disk_write
 44457 ;; This function uses a non-reentrant model
 44458 ;;
 44459                           
 44460                           	psect	text121
 44461   01C294                     __ptext121:
 44462                           	callstack 0
 44463   01C294                     _util_addrdump:
 44464                           	callstack 106
 44465   01C294                     
 44466                           ;../drivers/utils.c: 57: void util_addrdump(const char *header, uint32_t addr_offs, cons
      +                          t void *addr, unsigned int size);../drivers/utils.c: 58: {;../drivers/utils.c: 59:     c
      +                          har chars[17];;../drivers/utils.c: 60:     const uint8_t *buf = addr;
 44467   01C294  C5C3  F5DA         	movff	util_addrdump@addr,util_addrdump@buf
 44468   01C298  C5C4  F5DB         	movff	util_addrdump@addr+1,util_addrdump@buf+1
 44469                           
 44470                           ;../drivers/utils.c: 61:     size = ((size + 15) & ~0xfU);
 44471   01C29C  0E0F               	movlw	15
 44472   01C29E  0105               	movlb	5	; () banked
 44473   01C2A0  25C5               	addwf	util_addrdump@size& (0+255),w,b
 44474   01C2A2  6FC7               	movwf	??_util_addrdump& (0+255),b
 44475   01C2A4  0E00               	movlw	0
 44476   01C2A6  21C6               	addwfc	(util_addrdump@size+1)& (0+255),w,b
 44477   01C2A8  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44478   01C2AA  0EF0               	movlw	240
 44479   01C2AC  15C7               	andwf	??_util_addrdump& (0+255),w,b
 44480   01C2AE  6FC5               	movwf	util_addrdump@size& (0+255),b
 44481   01C2B0  0EFF               	movlw	255
 44482   01C2B2  15C8               	andwf	(??_util_addrdump+1)& (0+255),w,b
 44483   01C2B4  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 44484   01C2B6                     
 44485                           ; BSR set to: 5
 44486                           ;../drivers/utils.c: 62:     for (unsigned int i = 0; i < size; i++) {
 44487   01C2B6  0E00               	movlw	0
 44488   01C2B8  6FDD               	movwf	(util_addrdump@i+1)& (0+255),b
 44489   01C2BA  0E00               	movlw	0
 44490   01C2BC  6FDC               	movwf	util_addrdump@i& (0+255),b
 44491   01C2BE  EFF7  F0E1         	goto	l20965
 44492   01C2C2                     l20945:
 44493                           
 44494                           ; BSR set to: 5
 44495                           ;../drivers/utils.c: 63:         if ((i % 16) == 0)
 44496   01C2C2  0E0F               	movlw	15
 44497   01C2C4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44498   01C2C6  6FC7               	movwf	??_util_addrdump& (0+255),b
 44499   01C2C8  0E00               	movlw	0
 44500   01C2CA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44501   01C2CC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44502   01C2CE  51C7               	movf	??_util_addrdump& (0+255),w,b
 44503   01C2D0  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 44504   01C2D2  A4D8               	btfss	status,2,c
 44505   01C2D4  EF6E  F0E1         	goto	u27841
 44506   01C2D8  EF70  F0E1         	goto	u27840
 44507   01C2DC                     u27841:
 44508   01C2DC  EF86  F0E1         	goto	l2541
 44509   01C2E0                     u27840:
 44510   01C2E0                     
 44511                           ; BSR set to: 5
 44512                           ;../drivers/utils.c: 64:             printf("%s%06lx:", header, addr_offs + i);
 44513   01C2E0  0E0C               	movlw	low STR_195
 44514   01C2E2  6FAD               	movwf	printf@fmt& (0+255),b
 44515   01C2E4  0EFF               	movlw	high STR_195
 44516   01C2E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44517   01C2E8  C5BD  F5AF         	movff	util_addrdump@header,?_printf+2
 44518   01C2EC  C5BE  F5B0         	movff	util_addrdump@header+1,?_printf+3
 44519   01C2F0  51DC               	movf	util_addrdump@i& (0+255),w,b
 44520   01C2F2  25BF               	addwf	util_addrdump@addr_offs& (0+255),w,b
 44521   01C2F4  6FB1               	movwf	(?_printf+4)& (0+255),b
 44522   01C2F6  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44523   01C2F8  21C0               	addwfc	(util_addrdump@addr_offs+1)& (0+255),w,b
 44524   01C2FA  6FB2               	movwf	(?_printf+5)& (0+255),b
 44525   01C2FC  0E00               	movlw	0
 44526   01C2FE  21C1               	addwfc	(util_addrdump@addr_offs+2)& (0+255),w,b
 44527   01C300  6FB3               	movwf	(?_printf+6)& (0+255),b
 44528   01C302  0E00               	movlw	0
 44529   01C304  21C2               	addwfc	(util_addrdump@addr_offs+3)& (0+255),w,b
 44530   01C306  6FB4               	movwf	(?_printf+7)& (0+255),b
 44531   01C308  ECDA  F0FF         	call	_printf	;wreg free
 44532   01C30C                     l2541:
 44533                           
 44534                           ;../drivers/utils.c: 65:         printf(" %02x", buf[i]);
 44535   01C30C  0E85               	movlw	low STR_193
 44536   01C30E  0105               	movlb	5	; () banked
 44537   01C310  6FAD               	movwf	printf@fmt& (0+255),b
 44538   01C312  0EFF               	movlw	high STR_193
 44539   01C314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44540   01C316  51DC               	movf	util_addrdump@i& (0+255),w,b
 44541   01C318  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44542   01C31A  6ED9               	movwf	fsr2l,c
 44543   01C31C  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44544   01C31E  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44545   01C320  6EDA               	movwf	fsr2h,c
 44546   01C322  50DF               	movf	indf2,w,c
 44547   01C324  6FC7               	movwf	??_util_addrdump& (0+255),b
 44548   01C326  51C7               	movf	??_util_addrdump& (0+255),w,b
 44549   01C328  6FAF               	movwf	(?_printf+2)& (0+255),b
 44550   01C32A  6BB0               	clrf	(?_printf+3)& (0+255),b
 44551   01C32C  ECDA  F0FF         	call	_printf	;wreg free
 44552   01C330                     
 44553                           ;../drivers/utils.c: 66:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 44554   01C330  0105               	movlb	5	; () banked
 44555   01C332  51DC               	movf	util_addrdump@i& (0+255),w,b
 44556   01C334  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44557   01C336  6ED9               	movwf	fsr2l,c
 44558   01C338  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44559   01C33A  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44560   01C33C  6EDA               	movwf	fsr2h,c
 44561   01C33E  0E1F               	movlw	31
 44562   01C340  64DF               	cpfsgt	indf2,c
 44563   01C342  EFA5  F0E1         	goto	u27851
 44564   01C346  EFA7  F0E1         	goto	u27850
 44565   01C34A                     u27851:
 44566   01C34A  EFCB  F0E1         	goto	l20955
 44567   01C34E                     u27850:
 44568   01C34E                     
 44569                           ; BSR set to: 5
 44570   01C34E  51DC               	movf	util_addrdump@i& (0+255),w,b
 44571   01C350  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44572   01C352  6ED9               	movwf	fsr2l,c
 44573   01C354  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44574   01C356  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44575   01C358  6EDA               	movwf	fsr2h,c
 44576   01C35A  0E7F               	movlw	127
 44577   01C35C  60DF               	cpfslt	indf2,c
 44578   01C35E  EFB3  F0E1         	goto	u27861
 44579   01C362  EFB5  F0E1         	goto	u27860
 44580   01C366                     u27861:
 44581   01C366  EFCB  F0E1         	goto	l20955
 44582   01C36A                     u27860:
 44583   01C36A                     
 44584                           ; BSR set to: 5
 44585                           ;../drivers/utils.c: 67:             chars[i % 16] = buf[i];
 44586   01C36A  51DC               	movf	util_addrdump@i& (0+255),w,b
 44587   01C36C  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 44588   01C36E  6ED9               	movwf	fsr2l,c
 44589   01C370  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 44590   01C372  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 44591   01C374  6EDA               	movwf	fsr2h,c
 44592   01C376  0E0F               	movlw	15
 44593   01C378  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44594   01C37A  6FC7               	movwf	??_util_addrdump& (0+255),b
 44595   01C37C  0E00               	movlw	0
 44596   01C37E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44597   01C380  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44598   01C382  0EC9               	movlw	low util_addrdump@chars
 44599   01C384  25C7               	addwf	??_util_addrdump& (0+255),w,b
 44600   01C386  6EE1               	movwf	fsr1l,c
 44601   01C388  0E05               	movlw	high util_addrdump@chars
 44602   01C38A  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 44603   01C38C  6EE2               	movwf	fsr1h,c
 44604   01C38E  C4DF F4E7          	movff	indf2,indf1
 44605                           
 44606                           ;../drivers/utils.c: 68:         } else {
 44607   01C392  EFD9  F0E1         	goto	l20957
 44608   01C396                     l20955:
 44609                           
 44610                           ; BSR set to: 5
 44611                           ;../drivers/utils.c: 69:             chars[i % 16] = '.';
 44612   01C396  0E0F               	movlw	15
 44613   01C398  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44614   01C39A  6FC7               	movwf	??_util_addrdump& (0+255),b
 44615   01C39C  0E00               	movlw	0
 44616   01C39E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44617   01C3A0  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44618   01C3A2  0EC9               	movlw	low util_addrdump@chars
 44619   01C3A4  25C7               	addwf	??_util_addrdump& (0+255),w,b
 44620   01C3A6  6ED9               	movwf	fsr2l,c
 44621   01C3A8  0E05               	movlw	high util_addrdump@chars
 44622   01C3AA  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 44623   01C3AC  6EDA               	movwf	fsr2h,c
 44624   01C3AE  0E2E               	movlw	46
 44625   01C3B0  6EDF               	movwf	indf2,c
 44626   01C3B2                     l20957:
 44627                           
 44628                           ; BSR set to: 5
 44629                           ;../drivers/utils.c: 71:         if ((i % 16) == 15) {
 44630   01C3B2  0E0F               	movlw	15
 44631   01C3B4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 44632   01C3B6  6FC7               	movwf	??_util_addrdump& (0+255),b
 44633   01C3B8  0E00               	movlw	0
 44634   01C3BA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 44635   01C3BC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 44636   01C3BE  0E0F               	movlw	15
 44637   01C3C0  19C7               	xorwf	??_util_addrdump& (0+255),w,b
 44638   01C3C2  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 44639   01C3C4  A4D8               	btfss	status,2,c
 44640   01C3C6  EFE7  F0E1         	goto	u27871
 44641   01C3CA  EFE9  F0E1         	goto	u27870
 44642   01C3CE                     u27871:
 44643   01C3CE  EFF4  F0E1         	goto	l20963
 44644   01C3D2                     u27870:
 44645   01C3D2                     
 44646                           ; BSR set to: 5
 44647                           ;../drivers/utils.c: 72:             chars[16] = '\0';
 44648   01C3D2  6BD9               	clrf	(util_addrdump@chars+16)& (0+255),b
 44649   01C3D4                     
 44650                           ; BSR set to: 5
 44651                           ;../drivers/utils.c: 73:             printf(" %s\n\r", chars);
 44652   01C3D4  0E58               	movlw	low (STR_73+8)
 44653   01C3D6  6FAD               	movwf	printf@fmt& (0+255),b
 44654   01C3D8  0EFE               	movlw	high (STR_73+8)
 44655   01C3DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 44656   01C3DC  0EC9               	movlw	low util_addrdump@chars
 44657   01C3DE  6FAF               	movwf	(?_printf+2)& (0+255),b
 44658   01C3E0  0E05               	movlw	high util_addrdump@chars
 44659   01C3E2  6FB0               	movwf	(?_printf+3)& (0+255),b
 44660   01C3E4  ECDA  F0FF         	call	_printf	;wreg free
 44661   01C3E8                     l20963:
 44662                           
 44663                           ;../drivers/utils.c: 75:     }
 44664   01C3E8  0105               	movlb	5	; () banked
 44665   01C3EA  4BDC               	infsnz	util_addrdump@i& (0+255),f,b
 44666   01C3EC  2BDD               	incf	(util_addrdump@i+1)& (0+255),f,b
 44667   01C3EE                     l20965:
 44668                           
 44669                           ; BSR set to: 5
 44670   01C3EE  51C5               	movf	util_addrdump@size& (0+255),w,b
 44671   01C3F0  5DDC               	subwf	util_addrdump@i& (0+255),w,b
 44672   01C3F2  51C6               	movf	(util_addrdump@size+1)& (0+255),w,b
 44673   01C3F4  59DD               	subwfb	(util_addrdump@i+1)& (0+255),w,b
 44674   01C3F6  A0D8               	btfss	status,0,c
 44675   01C3F8  EF00  F0E2         	goto	u27881
 44676   01C3FC  EF02  F0E2         	goto	u27880
 44677   01C400                     u27881:
 44678   01C400  EF61  F0E1         	goto	l20945
 44679   01C404                     u27880:
 44680   01C404                     
 44681                           ; BSR set to: 5
 44682   01C404  0012               	return		;funcret
 44683   01C406                     __end_of_util_addrdump:
 44684                           	callstack 0
 44685                           
 44686 ;; *************** function _printf *****************
 44687 ;; Defined at:
 44688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 44689 ;; Parameters:    Size  Location     Type
 44690 ;;  fmt             2   77[BANK5 ] PTR const unsigned char 
 44691 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44692 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44693 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44694 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44695 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44696 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44697 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44698 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44699 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44700 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44701 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44702 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44703 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44704 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44705 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44706 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44707 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44708 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44709 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_106(20), 
 44710 ;;		 -> STR_105(20), STR_104(3), STR_103(8), STR_102(8), 
 44711 ;;		 -> STR_101(3), STR_100(12), STR_99(10), STR_98(9), 
 44712 ;;		 -> STR_97(20), STR_96(20), STR_95(15), STR_94(12), 
 44713 ;;		 -> STR_93(10), STR_92(9), STR_91(3), STR_90(19), 
 44714 ;;		 -> STR_89(14), STR_88(23), STR_87(25), STR_86(12), 
 44715 ;;		 -> STR_85(27), STR_83(19), STR_82(39), STR_80(25), 
 44716 ;;		 -> STR_79(24), STR_78(19), STR_77(36), STR_76(40), 
 44717 ;;		 -> STR_75(26), STR_74(5), STR_73(14), STR_72(14), 
 44718 ;;		 -> STR_71(23), STR_70(23), STR_69(22), STR_45(35), 
 44719 ;;		 -> STR_44(23), STR_41(26), STR_40(25), STR_38(31), 
 44720 ;;		 -> STR_37(21), STR_36(32), STR_34(22), STR_33(47), 
 44721 ;;		 -> STR_32(42), STR_31(35), STR_30(50), STR_28(50), 
 44722 ;;		 -> STR_27(55), STR_25(50), STR_24(36), STR_23(34), 
 44723 ;;		 -> STR_22(18), STR_21(41), STR_20(38), STR_19(43), 
 44724 ;;		 -> STR_18(36), STR_17(46), STR_16(35), STR_15(27), 
 44725 ;;		 -> STR_14(25), STR_13(45), STR_12(19), STR_11(25), 
 44726 ;;		 -> STR_10(28), STR_8(45), STR_6(38), STR_5(14), 
 44727 ;;		 -> STR_4(21), STR_3(3), STR_2(26), STR_1(3), 
 44728 ;; Auto vars:     Size  Location     Type
 44729 ;;  ap              2   91[BANK5 ] PTR void [1]
 44730 ;;		 -> ?_printf(2), ?_sprintf(2), 
 44731 ;;  ret             2    0        int 
 44732 ;; Return value:  Size  Location     Type
 44733 ;;                  2   77[BANK5 ] int 
 44734 ;; Registers used:
 44735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44736 ;; Tracked objects:
 44737 ;;		On entry : 0/0
 44738 ;;		On exit  : 0/0
 44739 ;;		Unchanged: 0/0
 44740 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44741 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44744 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44745 ;;Total ram usage:       16 bytes
 44746 ;; Hardware stack levels used: 1
 44747 ;; Hardware stack levels required when called: 8
 44748 ;; This function calls:
 44749 ;;		_vfprintf
 44750 ;; This function is called by:
 44751 ;;		_wait_for_programmer
 44752 ;;		_reset_cpu
 44753 ;;		_setup_sd
 44754 ;;		_SPI_SD_configure
 44755 ;;		_SDCard_init
 44756 ;;		_SDCard_read512
 44757 ;;		_SDCard_write512
 44758 ;;		_seek_disk
 44759 ;;		_write_sector
 44760 ;;		_read_sector
 44761 ;;		_mem_init
 44762 ;;		_main
 44763 ;;		_setup_monitor
 44764 ;;		_load_program
 44765 ;;		_disk_init
 44766 ;;		_load_config
 44767 ;;		_get_line
 44768 ;;		_scan_files
 44769 ;;		_scan_files1
 44770 ;;		_prt_reload
 44771 ;;		_boot_file
 44772 ;;		_print_reg
 44773 ;;		_print_com
 44774 ;;		_mon_prog
 44775 ;;		_see_file
 44776 ;;		_flash_apl
 44777 ;;		_in_file
 44778 ;;		_str_inf
 44779 ;;		_disk_initialize
 44780 ;;		_disk_status
 44781 ;;		_disk_read
 44782 ;;		_disk_write
 44783 ;;		_disk_ioctl
 44784 ;;		_util_hexdump
 44785 ;;		_util_addrdump
 44786 ;;		_util_hexdump_sum
 44787 ;; This function uses a non-reentrant model
 44788 ;;
 44789                           
 44790                           	psect	text122
 44791   01FFB4                     __ptext122:
 44792                           	callstack 0
 44793   01FFB4                     _printf:
 44794                           	callstack 111
 44795   01FFB4  0EAF               	movlw	low (?_printf+2)
 44796   01FFB6  0105               	movlb	5	; () banked
 44797   01FFB8  6FBB               	movwf	printf@ap& (0+255),b
 44798   01FFBA  0E05               	movlw	high (?_printf+2)
 44799   01FFBC  6FBC               	movwf	(printf@ap+1)& (0+255),b
 44800   01FFBE                     
 44801                           ; BSR set to: 5
 44802   01FFBE  0E00               	movlw	0
 44803   01FFC0  6FA5               	movwf	vfprintf@fp& (0+255),b
 44804   01FFC2  0E00               	movlw	0
 44805   01FFC4  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 44806   01FFC6  C5AD  F5A7         	movff	printf@fmt,vfprintf@fmt
 44807   01FFCA  C5AE  F5A8         	movff	printf@fmt+1,vfprintf@fmt+1
 44808   01FFCE  0EBB               	movlw	low printf@ap
 44809   01FFD0  6FA9               	movwf	vfprintf@ap& (0+255),b
 44810   01FFD2  0E05               	movlw	high printf@ap
 44811   01FFD4  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 44812   01FFD6  EC07  F0FC         	call	_vfprintf	;wreg free
 44813   01FFDA  0012               	return		;funcret
 44814   01FFDC                     __end_of_printf:
 44815                           	callstack 0
 44816                           
 44817 ;; *************** function _vfprintf *****************
 44818 ;; Defined at:
 44819 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 44820 ;; Parameters:    Size  Location     Type
 44821 ;;  fp              2   69[BANK5 ] PTR struct _IO_FILE
 44822 ;;		 -> sprintf@f(11), NULL(0), 
 44823 ;;  fmt             2   71[BANK5 ] PTR const unsigned char 
 44824 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44825 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44826 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44827 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44828 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44829 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44830 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44831 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44832 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44833 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44834 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44835 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44836 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44837 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44838 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44839 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44840 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44841 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44842 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 44843 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 44844 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 44845 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 44846 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 44847 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 44848 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 44849 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 44850 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 44851 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 44852 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 44853 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 44854 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 44855 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 44856 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 44857 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 44858 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 44859 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 44860 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 44861 ;;		 -> STR_2(26), STR_1(3), 
 44862 ;;  ap              2   73[BANK5 ] PTR PTR void 
 44863 ;;		 -> printf@ap(2), sprintf@ap(2), 
 44864 ;; Auto vars:     Size  Location     Type
 44865 ;;  cfmt            2   75[BANK5 ] PTR unsigned char 
 44866 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 44867 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 44868 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 44869 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 44870 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 44871 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 44872 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 44873 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 44874 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 44875 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 44876 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 44877 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 44878 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 44879 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 44880 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 44881 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 44882 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 44883 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 44884 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 44885 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 44886 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 44887 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 44888 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 44889 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 44890 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 44891 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 44892 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 44893 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 44894 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 44895 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 44896 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 44897 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 44898 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 44899 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 44900 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 44901 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 44902 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 44903 ;;		 -> STR_2(26), STR_1(3), 
 44904 ;; Return value:  Size  Location     Type
 44905 ;;                  2   69[BANK5 ] int 
 44906 ;; Registers used:
 44907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44908 ;; Tracked objects:
 44909 ;;		On entry : 0/0
 44910 ;;		On exit  : 0/0
 44911 ;;		Unchanged: 0/0
 44912 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 44913 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44917 ;;Total ram usage:        8 bytes
 44918 ;; Hardware stack levels used: 1
 44919 ;; Hardware stack levels required when called: 7
 44920 ;; This function calls:
 44921 ;;		_vfpfcnvrt
 44922 ;; This function is called by:
 44923 ;;		_sprintf
 44924 ;;		_printf
 44925 ;; This function uses a non-reentrant model
 44926 ;;
 44927                           
 44928                           	psect	text123
 44929   01F80E                     __ptext123:
 44930                           	callstack 0
 44931   01F80E                     _vfprintf:
 44932                           	callstack 111
 44933   01F80E                     
 44934                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 44935   01F80E  C5A7  F5AB         	movff	vfprintf@fmt,vfprintf@cfmt
 44936   01F812  C5A8  F5AC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 44937                           
 44938                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 44939   01F816  EF1C  F0FC         	goto	l20813
 44940   01F81A                     l20811:
 44941                           
 44942                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 44943   01F81A  C5A5  F593         	movff	vfprintf@fp,vfpfcnvrt@fp
 44944   01F81E  C5A6  F594         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 44945   01F822  0EAB               	movlw	low vfprintf@cfmt
 44946   01F824  0105               	movlb	5	; () banked
 44947   01F826  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
 44948   01F828  0E05               	movlw	high vfprintf@cfmt
 44949   01F82A  6F96               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 44950   01F82C  C5A9  F597         	movff	vfprintf@ap,vfpfcnvrt@ap
 44951   01F830  C5AA  F598         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 44952   01F834  EC25  F09A         	call	_vfpfcnvrt	;wreg free
 44953   01F838                     l20813:
 44954                           
 44955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 44956   01F838  C5AB  F4F6         	movff	vfprintf@cfmt,tblptrl
 44957   01F83C  C5AC  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 44958   01F840                     	if	0	;tblptru may be non-zero
 44959   01F840                     	endif
 44960   01F840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 44961   01F840  0E00               	movlw	low (__mediumconst shr (0+16))
 44962   01F842  6EF8               	movwf	tblptru,c
 44963   01F844                     	endif
 44964   01F844  0008               	tblrd		*
 44965   01F846  50F5               	movf	tablat,w,c
 44966   01F848  0900               	iorlw	0
 44967   01F84A  A4D8               	btfss	status,2,c
 44968   01F84C  EF2A  F0FC         	goto	u27721
 44969   01F850  EF2C  F0FC         	goto	u27720
 44970   01F854                     u27721:
 44971   01F854  EF0D  F0FC         	goto	l20811
 44972   01F858                     u27720:
 44973   01F858                     
 44974                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 44975   01F858  0E00               	movlw	0
 44976   01F85A  0105               	movlb	5	; () banked
 44977   01F85C  6FA6               	movwf	(?_vfprintf+1)& (0+255),b
 44978   01F85E  0E00               	movlw	0
 44979   01F860  6FA5               	movwf	?_vfprintf& (0+255),b
 44980   01F862                     
 44981                           ; BSR set to: 5
 44982   01F862  0012               	return		;funcret
 44983   01F864                     __end_of_vfprintf:
 44984                           	callstack 0
 44985                           
 44986 ;; *************** function _vfpfcnvrt *****************
 44987 ;; Defined at:
 44988 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 44989 ;; Parameters:    Size  Location     Type
 44990 ;;  fp              2   51[BANK5 ] PTR struct _IO_FILE
 44991 ;;		 -> sprintf@f(11), NULL(0), 
 44992 ;;  fmt             2   53[BANK5 ] PTR PTR unsigned char 
 44993 ;;		 -> vfprintf@cfmt(2), 
 44994 ;;  ap              2   55[BANK5 ] PTR PTR void 
 44995 ;;		 -> printf@ap(2), sprintf@ap(2), 
 44996 ;; Auto vars:     Size  Location     Type
 44997 ;;  convarg         4   62[BANK5 ] struct .
 44998 ;;  cp              2   67[BANK5 ] PTR unsigned char 
 44999 ;;		 -> STR_198(24), STR_197(6), STR_196(6), STR_195(9), 
 45000 ;;		 -> STR_194(6), STR_193(6), STR_192(8), STR_191(50), 
 45001 ;;		 -> STR_190(44), STR_188(29), STR_187(44), STR_185(28), 
 45002 ;;		 -> STR_184(44), STR_183(18), STR_182(23), STR_181(33), 
 45003 ;;		 -> STR_180(21), STR_179(19), STR_177(26), STR_176(39), 
 45004 ;;		 -> STR_175(23), STR_174(25), STR_165(19), STR_164(22), 
 45005 ;;		 -> STR_163(19), STR_162(22), STR_161(27), STR_160(15), 
 45006 ;;		 -> STR_159(3), STR_158(38), STR_157(17), STR_156(17), 
 45007 ;;		 -> STR_155(26), STR_154(22), STR_153(26), STR_152(20), 
 45008 ;;		 -> STR_151(18), STR_150(19), STR_149(16), STR_148(19), 
 45009 ;;		 -> STR_147(16), STR_146(33), STR_145(34), STR_144(17), 
 45010 ;;		 -> STR_143(17), STR_142(22), STR_141(26), STR_140(20), 
 45011 ;;		 -> STR_139(10), STR_138(14), STR_137(13), STR_136(29), 
 45012 ;;		 -> STR_135(31), STR_134(29), STR_133(21), STR_131(3), 
 45013 ;;		 -> STR_126(13), STR_125(10), STR_124(19), STR_123(8), 
 45014 ;;		 -> STR_122(9), STR_121(11), STR_120(11), STR_119(16), 
 45015 ;;		 -> STR_118(23), STR_117(41), STR_116(24), STR_115(41), 
 45016 ;;		 -> STR_114(48), STR_113(56), STR_112(32), STR_111(54), 
 45017 ;;		 -> STR_110(31), STR_109(34), STR_108(22), STR_107(3), 
 45018 ;;		 -> STR_106(20), STR_105(20), STR_104(3), STR_103(8), 
 45019 ;;		 -> STR_102(8), STR_101(3), STR_100(12), STR_99(10), 
 45020 ;;		 -> STR_98(9), STR_97(20), STR_96(20), STR_95(15), 
 45021 ;;		 -> STR_94(12), STR_93(10), STR_92(9), STR_91(3), 
 45022 ;;		 -> STR_90(19), STR_89(14), STR_88(23), STR_87(25), 
 45023 ;;		 -> STR_86(12), STR_85(27), STR_83(19), STR_82(39), 
 45024 ;;		 -> STR_81(3), STR_80(25), STR_79(24), STR_78(19), 
 45025 ;;		 -> STR_77(36), STR_76(40), STR_75(26), STR_74(5), 
 45026 ;;		 -> STR_73(14), STR_72(14), STR_71(23), STR_70(23), 
 45027 ;;		 -> STR_69(22), STR_45(35), STR_44(23), STR_41(26), 
 45028 ;;		 -> STR_40(25), STR_38(31), STR_37(21), STR_36(32), 
 45029 ;;		 -> STR_34(22), STR_33(47), STR_32(42), STR_31(35), 
 45030 ;;		 -> STR_30(50), STR_28(50), STR_27(55), STR_25(50), 
 45031 ;;		 -> STR_24(36), STR_23(34), STR_22(18), STR_21(41), 
 45032 ;;		 -> STR_20(38), STR_19(43), STR_18(36), STR_17(46), 
 45033 ;;		 -> STR_16(35), STR_15(27), STR_14(25), STR_13(45), 
 45034 ;;		 -> STR_12(19), STR_11(25), STR_10(28), STR_8(45), 
 45035 ;;		 -> STR_6(38), STR_5(14), STR_4(21), STR_3(3), 
 45036 ;;		 -> STR_2(26), STR_1(3), 
 45037 ;;  c               1   66[BANK5 ] unsigned char 
 45038 ;;  done            1   61[BANK5 ] _Bool 
 45039 ;; Return value:  Size  Location     Type
 45040 ;;                  1    wreg      void 
 45041 ;; Registers used:
 45042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45043 ;; Tracked objects:
 45044 ;;		On entry : 0/0
 45045 ;;		On exit  : 0/0
 45046 ;;		Unchanged: 0/0
 45047 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 45048 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45049 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45051 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45052 ;;Total ram usage:       18 bytes
 45053 ;; Hardware stack levels used: 1
 45054 ;; Hardware stack levels required when called: 6
 45055 ;; This function calls:
 45056 ;;		_dtoa
 45057 ;;		_efgtoa
 45058 ;;		_fputc
 45059 ;;		_read_prec_or_width
 45060 ;;		_stoa
 45061 ;;		_xtoa
 45062 ;; This function is called by:
 45063 ;;		_vfprintf
 45064 ;; This function uses a non-reentrant model
 45065 ;;
 45066                           
 45067                           	psect	text124
 45068   01344A                     __ptext124:
 45069                           	callstack 0
 45070   01344A                     _vfpfcnvrt:
 45071                           	callstack 111
 45072   01344A                     
 45073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 45074   01344A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45075   01344E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45076   013452  C4DE F4F6          	movff	postinc2,tblptrl
 45077   013456  C4DD F4F7          	movff	postdec2,tblptrh
 45078   01345A                     	if	0	;tblptru may be non-zero
 45079   01345A                     	endif
 45080   01345A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45081   01345A  0E00               	movlw	low (__mediumconst shr (0+16))
 45082   01345C  6EF8               	movwf	tblptru,c
 45083   01345E                     	endif
 45084   01345E  0008               	tblrd		*
 45085   013460  50F5               	movf	tablat,w,c
 45086   013462  0A25               	xorlw	37
 45087   013464  A4D8               	btfss	status,2,c
 45088   013466  EF37  F09A         	goto	u27501
 45089   01346A  EF39  F09A         	goto	u27500
 45090   01346E                     u27501:
 45091   01346E  EF65  F09D         	goto	l20747
 45092   013472                     u27500:
 45093   013472                     
 45094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 45095   013472  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45096   013476  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45097   01347A  2ADE               	incf	postinc2,f,c
 45098   01347C  0E00               	movlw	0
 45099   01347E  22DD               	addwfc	postdec2,f,c
 45100   013480                     
 45101                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 45102   013480  0E00               	movlw	0
 45103   013482  0107               	movlb	7	; () banked
 45104   013484  6FB2               	movwf	(_width+1)& (0+255),b
 45105   013486  0E00               	movlw	0
 45106   013488  6FB1               	movwf	_width& (0+255),b
 45107   01348A  C7B1  F55C         	movff	_width,_flags
 45108   01348E                     
 45109                           ; BSR set to: 7
 45110                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 45111   01348E  685A               	setf	_prec^(0+1280),c
 45112   013490  685B               	setf	(_prec+1)^(0+1280),c
 45113   013492                     
 45114                           ; BSR set to: 7
 45115                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 45116   013492  0105               	movlb	5	; () banked
 45117   013494  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 45118                           
 45119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 45120   013496  EF6D  F09A         	goto	l20623
 45121   01349A                     l20613:
 45122                           
 45123                           ; BSR set to: 5
 45124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 45125   01349A  825C               	bsf	_flags^(0+1280),1,c
 45126   01349C                     
 45127                           ; BSR set to: 5
 45128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 45129   01349C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45130   0134A0  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45131   0134A4  2ADE               	incf	postinc2,f,c
 45132   0134A6  0E00               	movlw	0
 45133   0134A8  22DD               	addwfc	postdec2,f,c
 45134                           
 45135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 45136   0134AA  EF6D  F09A         	goto	l20623
 45137   0134AE                     l20617:
 45138                           
 45139                           ; BSR set to: 5
 45140                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 45141   0134AE  0E01               	movlw	1
 45142   0134B0  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 45143                           
 45144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 45145   0134B2  EF6D  F09A         	goto	l20623
 45146   0134B6                     l20621:
 45147                           
 45148                           ; BSR set to: 5
 45149   0134B6  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45150   0134BA  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45151   0134BE  C4DE F4F6          	movff	postinc2,tblptrl
 45152   0134C2  C4DD F4F7          	movff	postdec2,tblptrh
 45153   0134C6                     	if	0	;tblptru may be non-zero
 45154   0134C6                     	endif
 45155   0134C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45156   0134C6  0E00               	movlw	low (__mediumconst shr (0+16))
 45157   0134C8  6EF8               	movwf	tblptru,c
 45158   0134CA                     	endif
 45159   0134CA  0008               	tblrd		*
 45160   0134CC  50F5               	movf	tablat,w,c
 45161                           
 45162                           ; Switch size 1, requested type "simple"
 45163                           ; Number of cases is 1, Range of values is 48 to 48
 45164                           ; switch strategies available:
 45165                           ; Name         Instructions Cycles
 45166                           ; simple_byte            4     3 (average)
 45167                           ;	Chosen strategy is simple_byte
 45168   0134CE  0A30               	xorlw	48	; case 48
 45169   0134D0  B4D8               	btfsc	status,2,c
 45170   0134D2  EF4D  F09A         	goto	l20613
 45171   0134D6  EF57  F09A         	goto	l20617
 45172   0134DA                     l20623:
 45173                           
 45174                           ; BSR set to: 5
 45175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 45176   0134DA  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 45177   0134DC  B4D8               	btfsc	status,2,c
 45178   0134DE  EF73  F09A         	goto	u27511
 45179   0134E2  EF75  F09A         	goto	u27510
 45180   0134E6                     u27511:
 45181   0134E6  EF5B  F09A         	goto	l20621
 45182   0134EA                     u27510:
 45183   0134EA                     
 45184                           ; BSR set to: 5
 45185                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 45186   0134EA  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 45187   0134EE  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 45188   0134F2  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 45189   0134F6  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 45190   0134FA  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 45191   0134FE  C504  F7B1         	movff	?_read_prec_or_width,_width
 45192   013502  C505  F7B2         	movff	?_read_prec_or_width+1,_width+1
 45193   013506                     
 45194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 45195   013506  0107               	movlb	7	; () banked
 45196   013508  BFB2               	btfsc	(_width+1)& (0+255),7,b
 45197   01350A  EF8B  F09A         	goto	u27520
 45198   01350E  EF89  F09A         	goto	u27521
 45199   013512                     u27521:
 45200   013512  EF90  F09A         	goto	l20631
 45201   013516                     u27520:
 45202   013516                     
 45203                           ; BSR set to: 7
 45204                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 45205   013516  805C               	bsf	_flags^(0+1280),0,c
 45206                           
 45207                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 45208   013518  6DB1               	negf	_width& (0+255),b
 45209   01351A  1FB2               	comf	(_width+1)& (0+255),f,b
 45210   01351C  B0D8               	btfsc	status,0,c
 45211   01351E  2BB2               	incf	(_width+1)& (0+255),f,b
 45212   013520                     l20631:
 45213                           
 45214                           ; BSR set to: 7
 45215                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 45216   013520  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45217   013524  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45218   013528  C4DE F4F6          	movff	postinc2,tblptrl
 45219   01352C  C4DD F4F7          	movff	postdec2,tblptrh
 45220   013530                     	if	0	;tblptru may be non-zero
 45221   013530                     	endif
 45222   013530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45223   013530  0E00               	movlw	low (__mediumconst shr (0+16))
 45224   013532  6EF8               	movwf	tblptru,c
 45225   013534                     	endif
 45226   013534  0008               	tblrd		*
 45227   013536  50F5               	movf	tablat,w,c
 45228   013538  0A2E               	xorlw	46
 45229   01353A  A4D8               	btfss	status,2,c
 45230   01353C  EFA2  F09A         	goto	u27531
 45231   013540  EFA4  F09A         	goto	u27530
 45232   013544                     u27531:
 45233   013544  EFB9  F09A         	goto	l20637
 45234   013548                     u27530:
 45235   013548                     
 45236                           ; BSR set to: 7
 45237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 45238   013548  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45239   01354C  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45240   013550  2ADE               	incf	postinc2,f,c
 45241   013552  0E00               	movlw	0
 45242   013554  22DD               	addwfc	postdec2,f,c
 45243   013556                     
 45244                           ; BSR set to: 7
 45245                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 45246   013556  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 45247   01355A  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 45248   01355E  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 45249   013562  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 45250   013566  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 45251   01356A  C504  F55A         	movff	?_read_prec_or_width,_prec
 45252   01356E  C505  F55B         	movff	?_read_prec_or_width+1,_prec+1
 45253   013572                     l20637:
 45254                           
 45255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 45256   013572  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45257   013576  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45258   01357A  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 45259   01357E  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 45260   013582                     
 45261                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 45262   013582  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45263   013586  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45264   01358A                     	if	0	;tblptru may be non-zero
 45265   01358A                     	endif
 45266   01358A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45267   01358A  0E00               	movlw	low (__mediumconst shr (0+16))
 45268   01358C  6EF8               	movwf	tblptru,c
 45269   01358E                     	endif
 45270   01358E  0008               	tblrd		*
 45271   013590  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 45272                           
 45273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 45274   013594  EFD7  F09A         	goto	l20647
 45275   013598                     l20641:
 45276                           
 45277                           ; BSR set to: 5
 45278                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 45279   013598  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 45280   01359A  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 45281                           
 45282                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1316:     break;
 45283   01359C  EFEF  F09A         	goto	l20649
 45284   0135A0                     l3583:
 45285   0135A0                     l20643:
 45286                           
 45287                           ; BSR set to: 5
 45288                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 45289   0135A0  0E69               	movlw	105
 45290   0135A2  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 45291                           
 45292                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
 45293   0135A4  EFEF  F09A         	goto	l20649
 45294   0135A8                     l3585:
 45295                           
 45296                           ; BSR set to: 5
 45297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 45298   0135A8  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 45299                           
 45300                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
 45301   0135AA  EFEF  F09A         	goto	l20649
 45302   0135AE                     l20647:
 45303   0135AE  0105               	movlb	5	; () banked
 45304   0135B0  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45305                           
 45306                           ; Switch size 1, requested type "simple"
 45307                           ; Number of cases is 5, Range of values is 88 to 120
 45308                           ; switch strategies available:
 45309                           ; Name         Instructions Cycles
 45310                           ; simple_byte           16     9 (average)
 45311                           ;	Chosen strategy is simple_byte
 45312   0135B2  0A58               	xorlw	88	; case 88
 45313   0135B4  B4D8               	btfsc	status,2,c
 45314   0135B6  EFD0  F09A         	goto	l20643
 45315   0135BA  0A3C               	xorlw	60	; case 100
 45316   0135BC  B4D8               	btfsc	status,2,c
 45317   0135BE  EFD0  F09A         	goto	l20643
 45318   0135C2  0A0D               	xorlw	13	; case 105
 45319   0135C4  B4D8               	btfsc	status,2,c
 45320   0135C6  EFD0  F09A         	goto	l3583
 45321   0135CA  0A05               	xorlw	5	; case 108
 45322   0135CC  B4D8               	btfsc	status,2,c
 45323   0135CE  EFCC  F09A         	goto	l20641
 45324   0135D2  0A14               	xorlw	20	; case 120
 45325   0135D4  B4D8               	btfsc	status,2,c
 45326   0135D6  EFD0  F09A         	goto	l20643
 45327   0135DA  EFD4  F09A         	goto	l3585
 45328   0135DE                     l20649:
 45329                           
 45330                           ; BSR set to: 5
 45331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 45332   0135DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45333   0135E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45334   0135E6                     	if	0	;tblptru may be non-zero
 45335   0135E6                     	endif
 45336   0135E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45337   0135E6  0E00               	movlw	low (__mediumconst shr (0+16))
 45338   0135E8  6EF8               	movwf	tblptru,c
 45339   0135EA                     	endif
 45340   0135EA  0008               	tblrd		*
 45341   0135EC  50F5               	movf	tablat,w,c
 45342   0135EE  0A64               	xorlw	100
 45343   0135F0  B4D8               	btfsc	status,2,c
 45344   0135F2  EFFD  F09A         	goto	u27541
 45345   0135F6  EFFF  F09A         	goto	u27540
 45346   0135FA                     u27541:
 45347   0135FA  EF46  F09B         	goto	l20659
 45348   0135FE                     u27540:
 45349   0135FE                     
 45350                           ; BSR set to: 5
 45351   0135FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45352   013602  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45353   013606                     	if	0	;tblptru may be non-zero
 45354   013606                     	endif
 45355   013606                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45356   013606  0E00               	movlw	low (__mediumconst shr (0+16))
 45357   013608  6EF8               	movwf	tblptru,c
 45358   01360A                     	endif
 45359   01360A  0008               	tblrd		*
 45360   01360C  50F5               	movf	tablat,w,c
 45361   01360E  0A69               	xorlw	105
 45362   013610  A4D8               	btfss	status,2,c
 45363   013612  EF0D  F09B         	goto	u27551
 45364   013616  EF0F  F09B         	goto	u27550
 45365   01361A                     u27551:
 45366   01361A  EF6F  F09B         	goto	l20667
 45367   01361E                     u27550:
 45368   01361E  EF46  F09B         	goto	l20659
 45369   013622                     l20653:
 45370                           
 45371                           ; BSR set to: 5
 45372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 45373   013622  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45374   013626  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45375   01362A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45376   01362E  0E02               	movlw	2
 45377   013630  26DE               	addwf	postinc2,f,c
 45378   013632  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45379   013636  0E00               	movlw	0
 45380   013638  22DD               	addwfc	postdec2,f,c
 45381   01363A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45382   01363E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45383   013642  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45384   013646  C4DD F59F          	movff	postdec2,vfpfcnvrt@convarg+1
 45385   01364A  0E00               	movlw	0
 45386   01364C  BF9F               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 45387   01364E  0EFF               	movlw	-1
 45388   013650  6FA0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 45389   013652  6FA1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 45390                           
 45391                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
 45392   013654  EF51  F09B         	goto	l20661
 45393   013658                     l20655:
 45394                           
 45395                           ; BSR set to: 5
 45396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 45397   013658  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45398   01365C  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45399   013660  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45400   013664  0E04               	movlw	4
 45401   013666  26DE               	addwf	postinc2,f,c
 45402   013668  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45403   01366C  0E00               	movlw	0
 45404   01366E  22DD               	addwfc	postdec2,f,c
 45405   013670  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45406   013674  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45407   013678  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45408   01367C  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45409   013680  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45410   013684  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45411                           
 45412                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1380:      break;
 45413   013688  EF51  F09B         	goto	l20661
 45414   01368C                     l20659:
 45415                           
 45416                           ; BSR set to: 5
 45417   01368C  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45418                           
 45419                           ; Switch size 1, requested type "simple"
 45420                           ; Number of cases is 2, Range of values is 105 to 108
 45421                           ; switch strategies available:
 45422                           ; Name         Instructions Cycles
 45423                           ; simple_byte            7     4 (average)
 45424                           ;	Chosen strategy is simple_byte
 45425   01368E  0A69               	xorlw	105	; case 105
 45426   013690  B4D8               	btfsc	status,2,c
 45427   013692  EF11  F09B         	goto	l20653
 45428   013696  0A05               	xorlw	5	; case 108
 45429   013698  B4D8               	btfsc	status,2,c
 45430   01369A  EF2C  F09B         	goto	l20655
 45431   01369E  EF51  F09B         	goto	l20661
 45432   0136A2                     l20661:
 45433                           
 45434                           ; BSR set to: 5
 45435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 45436   0136A2  0E01               	movlw	1
 45437   0136A4  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45438   0136A6  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45439   0136A8  0E00               	movlw	0
 45440   0136AA  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45441   0136AC  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45442   0136AE  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45443   0136B2  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45444   0136B6  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45445   0136BA  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45446   0136BE                     
 45447                           ; BSR set to: 5
 45448                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 45449   0136BE  C593  F51E         	movff	vfpfcnvrt@fp,dtoa@fp
 45450   0136C2  C594  F51F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 45451   0136C6  C59E  F520         	movff	vfpfcnvrt@convarg,dtoa@d
 45452   0136CA  C59F  F521         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 45453   0136CE  C5A0  F522         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 45454   0136D2  C5A1  F523         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 45455   0136D6  EC81  F0D3         	call	_dtoa	;wreg free
 45456   0136DA  EF7B  F09D         	goto	l3593
 45457   0136DE                     l20667:
 45458                           
 45459                           ; BSR set to: 5
 45460   0136DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45461   0136E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45462   0136E6                     	if	0	;tblptru may be non-zero
 45463   0136E6                     	endif
 45464   0136E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45465   0136E6  0E00               	movlw	low (__mediumconst shr (0+16))
 45466   0136E8  6EF8               	movwf	tblptru,c
 45467   0136EA                     	endif
 45468   0136EA  0008               	tblrd		*
 45469   0136EC  50F5               	movf	tablat,w,c
 45470   0136EE  0A78               	xorlw	120
 45471   0136F0  B4D8               	btfsc	status,2,c
 45472   0136F2  EF7D  F09B         	goto	u27561
 45473   0136F6  EF7F  F09B         	goto	u27560
 45474   0136FA                     u27561:
 45475   0136FA  EFC7  F09B         	goto	l20677
 45476   0136FE                     u27560:
 45477   0136FE                     
 45478                           ; BSR set to: 5
 45479   0136FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45480   013702  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45481   013706                     	if	0	;tblptru may be non-zero
 45482   013706                     	endif
 45483   013706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45484   013706  0E00               	movlw	low (__mediumconst shr (0+16))
 45485   013708  6EF8               	movwf	tblptru,c
 45486   01370A                     	endif
 45487   01370A  0008               	tblrd		*
 45488   01370C  50F5               	movf	tablat,w,c
 45489   01370E  0A58               	xorlw	88
 45490   013710  A4D8               	btfss	status,2,c
 45491   013712  EF8D  F09B         	goto	u27571
 45492   013716  EF8F  F09B         	goto	u27570
 45493   01371A                     u27571:
 45494   01371A  EF0D  F09C         	goto	l3594
 45495   01371E                     u27570:
 45496   01371E  EFC7  F09B         	goto	l20677
 45497   013722                     l20671:
 45498                           
 45499                           ; BSR set to: 5
 45500                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 45501   013722  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45502   013726  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45503   01372A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45504   01372E  0E02               	movlw	2
 45505   013730  26DE               	addwf	postinc2,f,c
 45506   013732  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45507   013736  0E00               	movlw	0
 45508   013738  22DD               	addwfc	postdec2,f,c
 45509   01373A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45510   01373E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45511   013742  C4DE F59B          	movff	postinc2,??_vfpfcnvrt+2
 45512   013746  C4DD F59C          	movff	postdec2,??_vfpfcnvrt+3
 45513   01374A  C59B  F59E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
 45514   01374E  C59C  F59F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
 45515   013752  6BA0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 45516   013754  6BA1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 45517                           
 45518                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
 45519   013756  EFD2  F09B         	goto	l20679
 45520   01375A                     l20673:
 45521                           
 45522                           ; BSR set to: 5
 45523                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 45524   01375A  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45525   01375E  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45526   013762  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45527   013766  0E04               	movlw	4
 45528   013768  26DE               	addwf	postinc2,f,c
 45529   01376A  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45530   01376E  0E00               	movlw	0
 45531   013770  22DD               	addwfc	postdec2,f,c
 45532   013772  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45533   013776  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45534   01377A  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45535   01377E  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45536   013782  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45537   013786  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45538                           
 45539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1471:      break;
 45540   01378A  EFD2  F09B         	goto	l20679
 45541   01378E                     l20677:
 45542                           
 45543                           ; BSR set to: 5
 45544   01378E  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45545                           
 45546                           ; Switch size 1, requested type "simple"
 45547                           ; Number of cases is 2, Range of values is 105 to 108
 45548                           ; switch strategies available:
 45549                           ; Name         Instructions Cycles
 45550                           ; simple_byte            7     4 (average)
 45551                           ;	Chosen strategy is simple_byte
 45552   013790  0A69               	xorlw	105	; case 105
 45553   013792  B4D8               	btfsc	status,2,c
 45554   013794  EF91  F09B         	goto	l20671
 45555   013798  0A05               	xorlw	5	; case 108
 45556   01379A  B4D8               	btfsc	status,2,c
 45557   01379C  EFAD  F09B         	goto	l20673
 45558   0137A0  EFD2  F09B         	goto	l20679
 45559   0137A4                     l20679:
 45560                           
 45561                           ; BSR set to: 5
 45562                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 45563   0137A4  0E01               	movlw	1
 45564   0137A6  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45565   0137A8  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45566   0137AA  0E00               	movlw	0
 45567   0137AC  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45568   0137AE  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45569   0137B0  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45570   0137B4  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45571   0137B8  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45572   0137BC  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45573                           
 45574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 45575   0137C0  EFFB  F09B         	goto	l20687
 45576   0137C4                     l20681:
 45577                           
 45578                           ; BSR set to: 5
 45579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 45580   0137C4  C593  F51E         	movff	vfpfcnvrt@fp,xtoa@fp
 45581   0137C8  C594  F51F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 45582   0137CC  C59E  F520         	movff	vfpfcnvrt@convarg,xtoa@d
 45583   0137D0  C59F  F521         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 45584   0137D4  C5A0  F522         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 45585   0137D8  C5A1  F523         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 45586   0137DC  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45587   0137E0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45588   0137E4                     	if	0	;tblptru may be non-zero
 45589   0137E4                     	endif
 45590   0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45591   0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 45592   0137E6  6EF8               	movwf	tblptru,c
 45593   0137E8                     	endif
 45594   0137E8  0008               	tblrd		*
 45595   0137EA  C4F5 F524          	movff	tablat,xtoa@x
 45596   0137EE  EC8F  F0DD         	call	_xtoa	;wreg free
 45597   0137F2  EF7B  F09D         	goto	l3593
 45598   0137F6                     l20687:
 45599                           
 45600                           ; BSR set to: 5
 45601   0137F6  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45602   0137FA  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45603   0137FE                     	if	0	;tblptru may be non-zero
 45604   0137FE                     	endif
 45605   0137FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45606   0137FE  0E00               	movlw	low (__mediumconst shr (0+16))
 45607   013800  6EF8               	movwf	tblptru,c
 45608   013802                     	endif
 45609   013802  0008               	tblrd		*
 45610   013804  50F5               	movf	tablat,w,c
 45611                           
 45612                           ; Switch size 1, requested type "simple"
 45613                           ; Number of cases is 2, Range of values is 88 to 120
 45614                           ; switch strategies available:
 45615                           ; Name         Instructions Cycles
 45616                           ; simple_byte            7     4 (average)
 45617                           ;	Chosen strategy is simple_byte
 45618   013806  0A58               	xorlw	88	; case 88
 45619   013808  B4D8               	btfsc	status,2,c
 45620   01380A  EFE2  F09B         	goto	l20681
 45621   01380E  0A20               	xorlw	32	; case 120
 45622   013810  B4D8               	btfsc	status,2,c
 45623   013812  EFE2  F09B         	goto	l20681
 45624   013816  EF0D  F09C         	goto	l3594
 45625   01381A                     l3594:
 45626                           
 45627                           ; BSR set to: 5
 45628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 45629   01381A  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 45630   01381C                     
 45631                           ; BSR set to: 5
 45632                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 45633   01381C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45634   013820  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45635   013824  C4DE F4F6          	movff	postinc2,tblptrl
 45636   013828  C4DD F4F7          	movff	postdec2,tblptrh
 45637   01382C                     	if	0	;tblptru may be non-zero
 45638   01382C                     	endif
 45639   01382C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45640   01382C  0E00               	movlw	low (__mediumconst shr (0+16))
 45641   01382E  6EF8               	movwf	tblptru,c
 45642   013830                     	endif
 45643   013830  0008               	tblrd		*
 45644   013832  50F5               	movf	tablat,w,c
 45645   013834  0A73               	xorlw	115
 45646   013836  A4D8               	btfss	status,2,c
 45647   013838  EF20  F09C         	goto	u27581
 45648   01383C  EF22  F09C         	goto	u27580
 45649   013840                     u27581:
 45650   013840  EF2D  F09C         	goto	l20695
 45651   013844                     u27580:
 45652   013844                     
 45653                           ; BSR set to: 5
 45654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 45655   013844  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45656   013848  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45657   01384C  2ADE               	incf	postinc2,f,c
 45658   01384E  0E00               	movlw	0
 45659   013850  22DD               	addwfc	postdec2,f,c
 45660   013852                     l20693:
 45661                           
 45662                           ; BSR set to: 5
 45663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 45664   013852  0E01               	movlw	1
 45665   013854  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 45666                           
 45667                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 45668   013856  EF83  F09C         	goto	l20705
 45669   01385A                     l20695:
 45670                           
 45671                           ; BSR set to: 5
 45672   01385A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45673   01385E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45674   013862  C4DE F4F6          	movff	postinc2,tblptrl
 45675   013866  C4DD F4F7          	movff	postdec2,tblptrh
 45676   01386A                     	if	0	;tblptru may be non-zero
 45677   01386A                     	endif
 45678   01386A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45679   01386A  0E00               	movlw	low (__mediumconst shr (0+16))
 45680   01386C  6EF8               	movwf	tblptru,c
 45681   01386E                     	endif
 45682   01386E  0008               	tblrd		*
 45683   013870  50F5               	movf	tablat,w,c
 45684   013872  0A6C               	xorlw	108
 45685   013874  A4D8               	btfss	status,2,c
 45686   013876  EF3F  F09C         	goto	u27591
 45687   01387A  EF41  F09C         	goto	u27590
 45688   01387E                     u27591:
 45689   01387E  EF83  F09C         	goto	l20705
 45690   013882                     u27590:
 45691   013882                     
 45692                           ; BSR set to: 5
 45693   013882  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45694   013886  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45695   01388A  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 45696   01388E  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 45697   013892  0E01               	movlw	1
 45698   013894  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 45699   013896  0E00               	movlw	0
 45700   013898  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 45701   01389A  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 45702   01389E  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 45703   0138A2                     	if	0	;tblptru may be non-zero
 45704   0138A2                     	endif
 45705   0138A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45706   0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 45707   0138A4  6EF8               	movwf	tblptru,c
 45708   0138A6                     	endif
 45709   0138A6  0008               	tblrd		*
 45710   0138A8  50F5               	movf	tablat,w,c
 45711   0138AA  0A6C               	xorlw	108
 45712   0138AC  A4D8               	btfss	status,2,c
 45713   0138AE  EF5B  F09C         	goto	u27601
 45714   0138B2  EF5D  F09C         	goto	u27600
 45715   0138B6                     u27601:
 45716   0138B6  EF83  F09C         	goto	l20705
 45717   0138BA                     u27600:
 45718   0138BA                     
 45719                           ; BSR set to: 5
 45720   0138BA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45721   0138BE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45722   0138C2  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 45723   0138C6  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 45724   0138CA  0E02               	movlw	2
 45725   0138CC  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 45726   0138CE  0E00               	movlw	0
 45727   0138D0  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 45728   0138D2  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 45729   0138D6  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 45730   0138DA                     	if	0	;tblptru may be non-zero
 45731   0138DA                     	endif
 45732   0138DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45733   0138DA  0E00               	movlw	low (__mediumconst shr (0+16))
 45734   0138DC  6EF8               	movwf	tblptru,c
 45735   0138DE                     	endif
 45736   0138DE  0008               	tblrd		*
 45737   0138E0  50F5               	movf	tablat,w,c
 45738   0138E2  0A73               	xorlw	115
 45739   0138E4  A4D8               	btfss	status,2,c
 45740   0138E6  EF77  F09C         	goto	u27611
 45741   0138EA  EF79  F09C         	goto	u27610
 45742   0138EE                     u27611:
 45743   0138EE  EF83  F09C         	goto	l20705
 45744   0138F2                     u27610:
 45745   0138F2                     
 45746                           ; BSR set to: 5
 45747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 45748   0138F2  0E03               	movlw	3
 45749   0138F4  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45750   0138F8  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45751   0138FC  26DE               	addwf	postinc2,f,c
 45752   0138FE  0E00               	movlw	0
 45753   013900  22DD               	addwfc	postdec2,f,c
 45754   013902  EF29  F09C         	goto	l20693
 45755   013906                     l20705:
 45756                           
 45757                           ; BSR set to: 5
 45758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 45759   013906  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 45760   013908  B4D8               	btfsc	status,2,c
 45761   01390A  EF89  F09C         	goto	u27621
 45762   01390E  EF8B  F09C         	goto	u27620
 45763   013912                     u27621:
 45764   013912  EFA7  F09C         	goto	l20711
 45765   013916                     u27620:
 45766   013916                     
 45767                           ; BSR set to: 5
 45768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 45769   013916  C593  F50E         	movff	vfpfcnvrt@fp,stoa@fp
 45770   01391A  C594  F50F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 45771   01391E  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45772   013922  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45773   013926  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45774   01392A  0E02               	movlw	2
 45775   01392C  26DE               	addwf	postinc2,f,c
 45776   01392E  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45777   013932  0E00               	movlw	0
 45778   013934  22DD               	addwfc	postdec2,f,c
 45779   013936  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45780   01393A  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45781   01393E  C4DE F510          	movff	postinc2,stoa@s
 45782   013942  C4DD F511          	movff	postdec2,stoa@s+1
 45783   013946  ECF7  F0DB         	call	_stoa	;wreg free
 45784   01394A  EF7B  F09D         	goto	l3593
 45785   01394E                     l20711:
 45786                           
 45787                           ; BSR set to: 5
 45788                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 45789   01394E  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45790   013952  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45791   013956  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 45792   01395A  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 45793   01395E                     
 45794                           ; BSR set to: 5
 45795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 45796   01395E  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45797   013962  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45798   013966                     	if	0	;tblptru may be non-zero
 45799   013966                     	endif
 45800   013966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45801   013966  0E00               	movlw	low (__mediumconst shr (0+16))
 45802   013968  6EF8               	movwf	tblptru,c
 45803   01396A                     	endif
 45804   01396A  0008               	tblrd		*
 45805   01396C  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 45806                           
 45807                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 45808   013970  EFC5  F09C         	goto	l20721
 45809   013974                     l20715:
 45810                           
 45811                           ; BSR set to: 5
 45812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 45813   013974  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 45814   013976  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 45815                           
 45816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
 45817   013978  EFD4  F09C         	goto	l20723
 45818   01397C                     l20717:
 45819                           
 45820                           ; BSR set to: 5
 45821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 45822   01397C  0E6C               	movlw	108
 45823   01397E  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 45824                           
 45825                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
 45826   013980  EFD4  F09C         	goto	l20723
 45827   013984                     l3614:
 45828                           
 45829                           ; BSR set to: 5
 45830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 45831   013984  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 45832                           
 45833                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
 45834   013986  EFD4  F09C         	goto	l20723
 45835   01398A                     l20721:
 45836                           
 45837                           ; BSR set to: 5
 45838   01398A  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45839                           
 45840                           ; Switch size 1, requested type "simple"
 45841                           ; Number of cases is 3, Range of values is 76 to 108
 45842                           ; switch strategies available:
 45843                           ; Name         Instructions Cycles
 45844                           ; simple_byte           10     6 (average)
 45845                           ;	Chosen strategy is simple_byte
 45846   01398C  0A4C               	xorlw	76	; case 76
 45847   01398E  B4D8               	btfsc	status,2,c
 45848   013990  EFBA  F09C         	goto	l20715
 45849   013994  0A2A               	xorlw	42	; case 102
 45850   013996  B4D8               	btfsc	status,2,c
 45851   013998  EFBE  F09C         	goto	l20717
 45852   01399C  0A0A               	xorlw	10	; case 108
 45853   01399E  B4D8               	btfsc	status,2,c
 45854   0139A0  EFBA  F09C         	goto	l20715
 45855   0139A4  EFC2  F09C         	goto	l3614
 45856   0139A8                     l20723:
 45857                           
 45858                           ; BSR set to: 5
 45859   0139A8  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45860   0139AC  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45861   0139B0                     	if	0	;tblptru may be non-zero
 45862   0139B0                     	endif
 45863   0139B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45864   0139B0  0E00               	movlw	low (__mediumconst shr (0+16))
 45865   0139B2  6EF8               	movwf	tblptru,c
 45866   0139B4                     	endif
 45867   0139B4  0008               	tblrd		*
 45868   0139B6  50F5               	movf	tablat,w,c
 45869   0139B8  0A66               	xorlw	102
 45870   0139BA  A4D8               	btfss	status,2,c
 45871   0139BC  EFE2  F09C         	goto	u27631
 45872   0139C0  EFE4  F09C         	goto	u27630
 45873   0139C4                     u27631:
 45874   0139C4  EF5C  F09D         	goto	l20743
 45875   0139C8                     u27630:
 45876   0139C8  EF1A  F09D         	goto	l20731
 45877   0139CC                     l20725:
 45878                           
 45879                           ; BSR set to: 5
 45880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 45881   0139CC  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45882   0139D0  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45883   0139D4  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45884   0139D8  0E04               	movlw	4
 45885   0139DA  26DE               	addwf	postinc2,f,c
 45886   0139DC  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45887   0139E0  0E00               	movlw	0
 45888   0139E2  22DD               	addwfc	postdec2,f,c
 45889   0139E4  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45890   0139E8  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45891   0139EC  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45892   0139F0  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45893   0139F4  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45894   0139F8  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45895                           
 45896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
 45897   0139FC  EF25  F09D         	goto	l20733
 45898   013A00                     l20727:
 45899                           
 45900                           ; BSR set to: 5
 45901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 45902   013A00  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 45903   013A04  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 45904   013A08  C4DF F599          	movff	indf2,??_vfpfcnvrt
 45905   013A0C  0E04               	movlw	4
 45906   013A0E  26DE               	addwf	postinc2,f,c
 45907   013A10  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 45908   013A14  0E00               	movlw	0
 45909   013A16  22DD               	addwfc	postdec2,f,c
 45910   013A18  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 45911   013A1C  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 45912   013A20  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 45913   013A24  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 45914   013A28  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 45915   013A2C  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 45916                           
 45917                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
 45918   013A30  EF25  F09D         	goto	l20733
 45919   013A34                     l20731:
 45920                           
 45921                           ; BSR set to: 5
 45922   013A34  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 45923                           
 45924                           ; Switch size 1, requested type "simple"
 45925                           ; Number of cases is 2, Range of values is 76 to 108
 45926                           ; switch strategies available:
 45927                           ; Name         Instructions Cycles
 45928                           ; simple_byte            7     4 (average)
 45929                           ;	Chosen strategy is simple_byte
 45930   013A36  0A4C               	xorlw	76	; case 76
 45931   013A38  B4D8               	btfsc	status,2,c
 45932   013A3A  EF00  F09D         	goto	l20727
 45933   013A3E  0A20               	xorlw	32	; case 108
 45934   013A40  B4D8               	btfsc	status,2,c
 45935   013A42  EFE6  F09C         	goto	l20725
 45936   013A46  EF25  F09D         	goto	l20733
 45937   013A4A                     l20733:
 45938                           
 45939                           ; BSR set to: 5
 45940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 45941   013A4A  0E01               	movlw	1
 45942   013A4C  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 45943   013A4E  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 45944   013A50  0E00               	movlw	0
 45945   013A52  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 45946   013A54  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 45947   013A56  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 45948   013A5A  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 45949   013A5E  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 45950   013A62  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 45951                           
 45952                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 45953   013A66  EF4E  F09D         	goto	l20741
 45954   013A6A                     l20735:
 45955                           
 45956                           ; BSR set to: 5
 45957                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 45958   013A6A  C593  F560         	movff	vfpfcnvrt@fp,efgtoa@fp
 45959   013A6E  C594  F561         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 45960   013A72  C59E  F562         	movff	vfpfcnvrt@convarg,efgtoa@f
 45961   013A76  C59F  F563         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 45962   013A7A  C5A0  F564         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 45963   013A7E  C5A1  F565         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 45964   013A82  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45965   013A86  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45966   013A8A                     	if	0	;tblptru may be non-zero
 45967   013A8A                     	endif
 45968   013A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45969   013A8A  0E00               	movlw	low (__mediumconst shr (0+16))
 45970   013A8C  6EF8               	movwf	tblptru,c
 45971   013A8E                     	endif
 45972   013A8E  0008               	tblrd		*
 45973   013A90  C4F5 F566          	movff	tablat,efgtoa@c
 45974   013A94  EC6C  F085         	call	_efgtoa	;wreg free
 45975   013A98  EF7B  F09D         	goto	l3593
 45976   013A9C                     l20741:
 45977                           
 45978                           ; BSR set to: 5
 45979   013A9C  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 45980   013AA0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 45981   013AA4                     	if	0	;tblptru may be non-zero
 45982   013AA4                     	endif
 45983   013AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45984   013AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 45985   013AA6  6EF8               	movwf	tblptru,c
 45986   013AA8                     	endif
 45987   013AA8  0008               	tblrd		*
 45988   013AAA  50F5               	movf	tablat,w,c
 45989                           
 45990                           ; Switch size 1, requested type "simple"
 45991                           ; Number of cases is 1, Range of values is 102 to 102
 45992                           ; switch strategies available:
 45993                           ; Name         Instructions Cycles
 45994                           ; simple_byte            4     3 (average)
 45995                           ;	Chosen strategy is simple_byte
 45996   013AAC  0A66               	xorlw	102	; case 102
 45997   013AAE  B4D8               	btfsc	status,2,c
 45998   013AB0  EF35  F09D         	goto	l20735
 45999   013AB4  EF5C  F09D         	goto	l20743
 46000   013AB8                     l20743:
 46001                           
 46002                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 46003   013AB8  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46004   013ABC  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46005   013AC0  2ADE               	incf	postinc2,f,c
 46006   013AC2  0E00               	movlw	0
 46007   013AC4  22DD               	addwfc	postdec2,f,c
 46008   013AC6  EF7B  F09D         	goto	l3593
 46009   013ACA                     l20747:
 46010                           
 46011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 46012   013ACA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46013   013ACE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46014   013AD2  C4DE F4F6          	movff	postinc2,tblptrl
 46015   013AD6  C4DD F4F7          	movff	postdec2,tblptrh
 46016   013ADA                     	if	0	;tblptru may be non-zero
 46017   013ADA                     	endif
 46018   013ADA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46019   013ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 46020   013ADC  6EF8               	movwf	tblptru,c
 46021   013ADE                     	endif
 46022   013ADE  0008               	tblrd		*
 46023   013AE0  50F5               	movf	tablat,w,c
 46024   013AE2  6E05               	movwf	fputc@c^(0+1280),c
 46025   013AE4  6A06               	clrf	(fputc@c+1)^(0+1280),c
 46026   013AE6  C593  F507         	movff	vfpfcnvrt@fp,fputc@fp
 46027   013AEA  C594  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 46028   013AEE  EC45  F0F1         	call	_fputc	;wreg free
 46029   013AF2  EF5C  F09D         	goto	l20743
 46030   013AF6                     l3593:
 46031   013AF6  0012               	return		;funcret
 46032   013AF8                     __end_of_vfpfcnvrt:
 46033                           	callstack 0
 46034                           
 46035 ;; *************** function _xtoa *****************
 46036 ;; Defined at:
 46037 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46038 ;; Parameters:    Size  Location     Type
 46039 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 46040 ;;		 -> sprintf@f(11), NULL(0), 
 46041 ;;  d               4   31[COMRAM] unsigned long 
 46042 ;;  x               1   35[COMRAM] unsigned char 
 46043 ;; Auto vars:     Size  Location     Type
 46044 ;;  i               2   48[COMRAM] int 
 46045 ;;  w               2   45[COMRAM] int 
 46046 ;;  p               2   43[COMRAM] int 
 46047 ;;  c               1   47[COMRAM] unsigned char 
 46048 ;;  a               1   40[COMRAM] unsigned char 
 46049 ;; Return value:  Size  Location     Type
 46050 ;;                  1    wreg      void 
 46051 ;; Registers used:
 46052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 46053 ;; Tracked objects:
 46054 ;;		On entry : 0/0
 46055 ;;		On exit  : 0/0
 46056 ;;		Unchanged: 0/0
 46057 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46058 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46059 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46061 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46062 ;;Total ram usage:       21 bytes
 46063 ;; Hardware stack levels used: 1
 46064 ;; Hardware stack levels required when called: 5
 46065 ;; This function calls:
 46066 ;;		_pad
 46067 ;; This function is called by:
 46068 ;;		_vfpfcnvrt
 46069 ;; This function uses a non-reentrant model
 46070 ;;
 46071                           
 46072                           	psect	text125
 46073   01BB1E                     __ptext125:
 46074                           	callstack 0
 46075   01BB1E                     _xtoa:
 46076                           	callstack 111
 46077   01BB1E                     
 46078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.50\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 46079   01BB1E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46080   01BB20  EF94  F0DD         	goto	u27151
 46081   01BB24  EF96  F0DD         	goto	u27150
 46082   01BB28                     u27151:
 46083   01BB28  EF97  F0DD         	goto	l20421
 46084   01BB2C                     u27150:
 46085   01BB2C                     
 46086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 46087   01BB2C  925C               	bcf	_flags^(0+1280),1,c
 46088   01BB2E                     l20421:
 46089                           
 46090                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 46091   01BB2E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46092   01BB30  EF9E  F0DD         	goto	u27160
 46093   01BB34  EF9C  F0DD         	goto	u27161
 46094   01BB38                     u27161:
 46095   01BB38  EFA4  F0DD         	goto	l3541
 46096   01BB3C                     u27160:
 46097   01BB3C  0E00               	movlw	0
 46098   01BB3E  6E2D               	movwf	(xtoa@p+1)^(0+1280),c
 46099   01BB40  0E01               	movlw	1
 46100   01BB42  6E2C               	movwf	xtoa@p^(0+1280),c
 46101   01BB44  EFA8  F0DD         	goto	l3543
 46102   01BB48                     l3541:
 46103   01BB48  C55A  F52C         	movff	_prec,xtoa@p
 46104   01BB4C  C55B  F52D         	movff	_prec+1,xtoa@p+1
 46105   01BB50                     l3543:
 46106                           
 46107                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 46108   01BB50  C7B1  F52E         	movff	_width,xtoa@w
 46109   01BB54  C7B2  F52F         	movff	_width+1,xtoa@w+1
 46110   01BB58                     
 46111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 46112   01BB58  0E78               	movlw	120
 46113   01BB5A  1824               	xorwf	xtoa@x^(0+1280),w,c
 46114   01BB5C  B4D8               	btfsc	status,2,c
 46115   01BB5E  EFB3  F0DD         	goto	u27171
 46116   01BB62  EFB5  F0DD         	goto	u27170
 46117   01BB66                     u27171:
 46118   01BB66  EFBB  F0DD         	goto	l20429
 46119   01BB6A                     u27170:
 46120   01BB6A  0E00               	movlw	0
 46121   01BB6C  6E2B               	movwf	(_xtoa$4849+1)^(0+1280),c
 46122   01BB6E  0E41               	movlw	65
 46123   01BB70  6E2A               	movwf	_xtoa$4849^(0+1280),c
 46124   01BB72  EFBF  F0DD         	goto	l20431
 46125   01BB76                     l20429:
 46126   01BB76  0E00               	movlw	0
 46127   01BB78  6E2B               	movwf	(_xtoa$4849+1)^(0+1280),c
 46128   01BB7A  0E61               	movlw	97
 46129   01BB7C  6E2A               	movwf	_xtoa$4849^(0+1280),c
 46130   01BB7E                     l20431:
 46131   01BB7E  C52A  F529         	movff	_xtoa$4849,xtoa@a
 46132                           
 46133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 46134   01BB82  0E00               	movlw	0
 46135   01BB84  6E32               	movwf	(xtoa@i+1)^(0+1280),c
 46136   01BB86  0E4F               	movlw	79
 46137   01BB88  6E31               	movwf	xtoa@i^(0+1280),c
 46138   01BB8A                     
 46139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 46140   01BB8A  0108               	movlb	8	; () banked
 46141   01BB8C  6B77               	clrf	(_dbuf+79)& (0+255),b
 46142                           
 46143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 46144   01BB8E  EF07  F0DE         	goto	l20453
 46145   01BB92                     l20435:
 46146                           
 46147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 46148   01BB92  0631               	decf	xtoa@i^(0+1280),f,c
 46149   01BB94  A0D8               	btfss	status,0,c
 46150   01BB96  0632               	decf	(xtoa@i+1)^(0+1280),f,c
 46151   01BB98                     
 46152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 46153   01BB98  5020               	movf	xtoa@d^(0+1280),w,c
 46154   01BB9A  0B0F               	andlw	15
 46155   01BB9C  6E30               	movwf	xtoa@c^(0+1280),c
 46156   01BB9E                     
 46157                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 46158   01BB9E  0E0A               	movlw	10
 46159   01BBA0  6030               	cpfslt	xtoa@c^(0+1280),c
 46160   01BBA2  EFD5  F0DD         	goto	u27181
 46161   01BBA6  EFD7  F0DD         	goto	u27180
 46162   01BBAA                     u27181:
 46163   01BBAA  EFDB  F0DD         	goto	l20443
 46164   01BBAE                     u27180:
 46165   01BBAE                     
 46166                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 46167   01BBAE  0E30               	movlw	48
 46168   01BBB0  2630               	addwf	xtoa@c^(0+1280),f,c
 46169                           
 46170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 46171   01BBB2  EFDE  F0DD         	goto	l20445
 46172   01BBB6                     l20443:
 46173                           
 46174                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 46175   01BBB6  5029               	movf	xtoa@a^(0+1280),w,c
 46176   01BBB8  0FF6               	addlw	246
 46177   01BBBA  2630               	addwf	xtoa@c^(0+1280),f,c
 46178   01BBBC                     l20445:
 46179                           
 46180                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 46181   01BBBC  0E28               	movlw	low _dbuf
 46182   01BBBE  2431               	addwf	xtoa@i^(0+1280),w,c
 46183   01BBC0  6ED9               	movwf	fsr2l,c
 46184   01BBC2  0E08               	movlw	high _dbuf
 46185   01BBC4  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 46186   01BBC6  6EDA               	movwf	fsr2h,c
 46187   01BBC8  C530  F4DF         	movff	xtoa@c,indf2
 46188   01BBCC                     
 46189                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 46190   01BBCC  062C               	decf	xtoa@p^(0+1280),f,c
 46191   01BBCE  A0D8               	btfss	status,0,c
 46192   01BBD0  062D               	decf	(xtoa@p+1)^(0+1280),f,c
 46193   01BBD2                     
 46194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 46195   01BBD2  062E               	decf	xtoa@w^(0+1280),f,c
 46196   01BBD4  A0D8               	btfss	status,0,c
 46197   01BBD6  062F               	decf	(xtoa@w+1)^(0+1280),f,c
 46198   01BBD8                     
 46199                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 46200   01BBD8  C520  F525         	movff	xtoa@d,??_xtoa
 46201   01BBDC  C521  F526         	movff	xtoa@d+1,??_xtoa+1
 46202   01BBE0  C522  F527         	movff	xtoa@d+2,??_xtoa+2
 46203   01BBE4  C523  F528         	movff	xtoa@d+3,??_xtoa+3
 46204   01BBE8  0E05               	movlw	5
 46205   01BBEA  EFFC  F0DD         	goto	u27190
 46206   01BBEE                     u27195:
 46207   01BBEE  90D8               	bcf	status,0,c
 46208   01BBF0  3228               	rrcf	(??_xtoa+3)^(0+1280),f,c
 46209   01BBF2  3227               	rrcf	(??_xtoa+2)^(0+1280),f,c
 46210   01BBF4  3226               	rrcf	(??_xtoa+1)^(0+1280),f,c
 46211   01BBF6  3225               	rrcf	??_xtoa^(0+1280),f,c
 46212   01BBF8                     u27190:
 46213   01BBF8  2EE8               	decfsz	wreg,f,c
 46214   01BBFA  EFF7  F0DD         	goto	u27195
 46215   01BBFE  C525  F520         	movff	??_xtoa,xtoa@d
 46216   01BC02  C526  F521         	movff	??_xtoa+1,xtoa@d+1
 46217   01BC06  C527  F522         	movff	??_xtoa+2,xtoa@d+2
 46218   01BC0A  C528  F523         	movff	??_xtoa+3,xtoa@d+3
 46219   01BC0E                     l20453:
 46220                           
 46221                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 46222   01BC0E  BE32               	btfsc	(xtoa@i+1)^(0+1280),7,c
 46223   01BC10  EF13  F0DE         	goto	u27201
 46224   01BC14  5032               	movf	(xtoa@i+1)^(0+1280),w,c
 46225   01BC16  E109               	bnz	u27200
 46226   01BC18  0E02               	movlw	2
 46227   01BC1A  5C31               	subwf	xtoa@i^(0+1280),w,c
 46228   01BC1C  A0D8               	btfss	status,0,c
 46229   01BC1E  EF13  F0DE         	goto	u27201
 46230   01BC22  EF15  F0DE         	goto	u27200
 46231   01BC26                     u27201:
 46232   01BC26  EF41  F0DE         	goto	l20463
 46233   01BC2A                     u27200:
 46234   01BC2A  5020               	movf	xtoa@d^(0+1280),w,c
 46235   01BC2C  1021               	iorwf	(xtoa@d+1)^(0+1280),w,c
 46236   01BC2E  1022               	iorwf	(xtoa@d+2)^(0+1280),w,c
 46237   01BC30  1023               	iorwf	(xtoa@d+3)^(0+1280),w,c
 46238   01BC32  A4D8               	btfss	status,2,c
 46239   01BC34  EF1E  F0DE         	goto	u27211
 46240   01BC38  EF20  F0DE         	goto	u27210
 46241   01BC3C                     u27211:
 46242   01BC3C  EFC9  F0DD         	goto	l20435
 46243   01BC40                     u27210:
 46244   01BC40  BE2D               	btfsc	(xtoa@p+1)^(0+1280),7,c
 46245   01BC42  EF2D  F0DE         	goto	u27220
 46246   01BC46  502D               	movf	(xtoa@p+1)^(0+1280),w,c
 46247   01BC48  E106               	bnz	u27221
 46248   01BC4A  042C               	decf	xtoa@p^(0+1280),w,c
 46249   01BC4C  B0D8               	btfsc	status,0,c
 46250   01BC4E  EF2B  F0DE         	goto	u27221
 46251   01BC52  EF2D  F0DE         	goto	u27220
 46252   01BC56                     u27221:
 46253   01BC56  EFC9  F0DD         	goto	l20435
 46254   01BC5A                     u27220:
 46255   01BC5A  BE2F               	btfsc	(xtoa@w+1)^(0+1280),7,c
 46256   01BC5C  EF38  F0DE         	goto	u27231
 46257   01BC60  502F               	movf	(xtoa@w+1)^(0+1280),w,c
 46258   01BC62  E108               	bnz	u27230
 46259   01BC64  042E               	decf	xtoa@w^(0+1280),w,c
 46260   01BC66  A0D8               	btfss	status,0,c
 46261   01BC68  EF38  F0DE         	goto	u27231
 46262   01BC6C  EF3A  F0DE         	goto	u27230
 46263   01BC70                     u27231:
 46264   01BC70  EF41  F0DE         	goto	l20463
 46265   01BC74                     u27230:
 46266   01BC74  B25C               	btfsc	_flags^(0+1280),1,c
 46267   01BC76  EF3F  F0DE         	goto	u27241
 46268   01BC7A  EF41  F0DE         	goto	u27240
 46269   01BC7E                     u27241:
 46270   01BC7E  EFC9  F0DD         	goto	l20435
 46271   01BC82                     u27240:
 46272   01BC82                     l20463:
 46273                           
 46274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 46275   01BC82  C51E  F515         	movff	xtoa@fp,pad@fp
 46276   01BC86  C51F  F516         	movff	xtoa@fp+1,pad@fp+1
 46277   01BC8A  0E28               	movlw	low _dbuf
 46278   01BC8C  2431               	addwf	xtoa@i^(0+1280),w,c
 46279   01BC8E  6E17               	movwf	pad@buf^(0+1280),c
 46280   01BC90  0E08               	movlw	high _dbuf
 46281   01BC92  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 46282   01BC94  6E18               	movwf	(pad@buf+1)^(0+1280),c
 46283   01BC96  C52E  F519         	movff	xtoa@w,pad@p
 46284   01BC9A  C52F  F51A         	movff	xtoa@w+1,pad@p+1
 46285   01BC9E  EC1F  F0F6         	call	_pad	;wreg free
 46286   01BCA2  0012               	return		;funcret
 46287   01BCA4                     __end_of_xtoa:
 46288                           	callstack 0
 46289                           
 46290 ;; *************** function _stoa *****************
 46291 ;; Defined at:
 46292 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46293 ;; Parameters:    Size  Location     Type
 46294 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 46295 ;;		 -> sprintf@f(11), NULL(0), 
 46296 ;;  s               2   15[COMRAM] PTR unsigned char 
 46297 ;;		 -> rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), in_fl$sect(4), 
 46298 ;;		 -> rom_fl$dir_sect(4), in_fl$dir_sect(4), dir$sect(4), sdj$sect(4), 
 46299 ;;		 -> djo$sect(4), djn$sect(4), tmp_buf$REGDP(2), tmp_buf$REGDB(1), 
 46300 ;;		 -> tmp_buf$REGPB(1), tmp_buf$REGPSR(1), tmp_buf$REGPC(2), tmp_buf$REGSP(2), 
 46301 ;;		 -> tmp_buf$REGY(2), tmp_buf$REGX(2), tmp_buf$REGA(2), tmp_buf$picif_p(4), 
 46302 ;;		 -> tmp_buf$op2(1), tmp_buf$op1(1), tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), 
 46303 ;;		 -> tmp_buf$cstart_addr(2), tmp_buf$load_p(4), tmp_buf$mezID(8), fs$win(512), 
 46304 ;;		 -> fs$winsect(4), fs$fatbase(4), fs$volbase(4), fs$csize(2), 
 46305 ;;		 -> fs$pdrv(1), pb$idx(2), ?_printf(2), ?_sprintf(2), 
 46306 ;;		 -> STR_199(1), util_addrdump@chars(17), util_hexdump@chars(17), STR_189(6), 
 46307 ;;		 -> STR_186(6), STR_178(1), disk_initialize@buf(128), f_printf@pb(70), 
 46308 ;;		 -> f_puts@pb(70), f_putc@pb(70), pb$fp(2), dj$sect(4), 
 46309 ;;		 -> STR_167(15), in_fl$obj$fs$objsize(4), in_fl(546), STR_132(5), 
 46310 ;;		 -> fin_name(13), fno$fname(13), scan_files@fno(22), rom_fl$obj$fs$objsize(4), 
 46311 ;;		 -> rom_fl(546), line_buf(81), binv(42), STR_53(8), 
 46312 ;;		 -> STR_52(8), STR_51(11), STR_50(11), STR_49(11), 
 46313 ;;		 -> STR_48(11), STR_47(43), STR_43(5), STR_42(5), 
 46314 ;;		 -> STR_39(6), STR_35(6), STR_29(5), STR_26(5), 
 46315 ;;		 -> NULL(0), STR_9(17), STR_7(17), clk_fs(4), 
 46316 ;;		 -> tmp_buf(512), 
 46317 ;; Auto vars:     Size  Location     Type
 46318 ;;  l               2   25[COMRAM] int 
 46319 ;;  cp              2   23[COMRAM] PTR unsigned char 
 46320 ;;		 -> rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), in_fl$sect(4), 
 46321 ;;		 -> rom_fl$dir_sect(4), in_fl$dir_sect(4), dir$sect(4), sdj$sect(4), 
 46322 ;;		 -> djo$sect(4), djn$sect(4), tmp_buf$REGDP(2), tmp_buf$REGDB(1), 
 46323 ;;		 -> tmp_buf$REGPB(1), tmp_buf$REGPSR(1), tmp_buf$REGPC(2), tmp_buf$REGSP(2), 
 46324 ;;		 -> tmp_buf$REGY(2), tmp_buf$REGX(2), tmp_buf$REGA(2), tmp_buf$picif_p(4), 
 46325 ;;		 -> tmp_buf$op2(1), tmp_buf$op1(1), tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), 
 46326 ;;		 -> tmp_buf$cstart_addr(2), tmp_buf$load_p(4), tmp_buf$mezID(8), fs$win(512), 
 46327 ;;		 -> fs$winsect(4), fs$fatbase(4), fs$volbase(4), fs$csize(2), 
 46328 ;;		 -> fs$pdrv(1), pb$idx(2), ?_printf(2), STR_206(7), 
 46329 ;;		 -> ?_sprintf(2), STR_199(1), util_addrdump@chars(17), util_hexdump@chars(17), 
 46330 ;;		 -> STR_189(6), STR_186(6), STR_178(1), disk_initialize@buf(128), 
 46331 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), pb$fp(2), 
 46332 ;;		 -> dj$sect(4), STR_167(15), in_fl$obj$fs$objsize(4), in_fl(546), 
 46333 ;;		 -> STR_132(5), fin_name(13), fno$fname(13), scan_files@fno(22), 
 46334 ;;		 -> rom_fl$obj$fs$objsize(4), rom_fl(546), line_buf(81), binv(42), 
 46335 ;;		 -> STR_53(8), STR_52(8), STR_51(11), STR_50(11), 
 46336 ;;		 -> STR_49(11), STR_48(11), STR_47(43), STR_43(5), 
 46337 ;;		 -> STR_42(5), STR_39(6), STR_35(6), STR_29(5), 
 46338 ;;		 -> STR_26(5), NULL(0), STR_9(17), STR_7(17), 
 46339 ;;		 -> clk_fs(4), tmp_buf(512), 
 46340 ;;  w               2   21[COMRAM] int 
 46341 ;;  p               2   19[COMRAM] int 
 46342 ;; Return value:  Size  Location     Type
 46343 ;;                  1    wreg      void 
 46344 ;; Registers used:
 46345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46346 ;; Tracked objects:
 46347 ;;		On entry : 0/0
 46348 ;;		On exit  : 0/0
 46349 ;;		Unchanged: 0/0
 46350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46352 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46354 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46355 ;;Total ram usage:       14 bytes
 46356 ;; Hardware stack levels used: 1
 46357 ;; Hardware stack levels required when called: 3
 46358 ;; This function calls:
 46359 ;;		_fputc
 46360 ;; This function is called by:
 46361 ;;		_vfpfcnvrt
 46362 ;; This function uses a non-reentrant model
 46363 ;;
 46364                           
 46365                           	psect	text126
 46366   01B7EE                     __ptext126:
 46367                           	callstack 0
 46368   01B7EE                     _stoa:
 46369                           	callstack 113
 46370   01B7EE                     
 46371                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 46372   01B7EE  C510  F518         	movff	stoa@s,stoa@cp
 46373   01B7F2  C511  F519         	movff	stoa@s+1,stoa@cp+1
 46374                           
 46375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 46376   01B7F6  5018               	movf	stoa@cp^(0+1280),w,c
 46377   01B7F8  1019               	iorwf	(stoa@cp+1)^(0+1280),w,c
 46378   01B7FA  A4D8               	btfss	status,2,c
 46379   01B7FC  EF02  F0DC         	goto	u27041
 46380   01B800  EF04  F0DC         	goto	u27040
 46381   01B804                     u27041:
 46382   01B804  EF08  F0DC         	goto	l20383
 46383   01B808                     u27040:
 46384   01B808                     
 46385                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 46386   01B808  0E70               	movlw	low STR_206
 46387   01B80A  6E18               	movwf	stoa@cp^(0+1280),c
 46388   01B80C  0EFF               	movlw	high STR_206
 46389   01B80E  6E19               	movwf	(stoa@cp+1)^(0+1280),c
 46390   01B810                     l20383:
 46391                           
 46392                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 46393   01B810  0E00               	movlw	0
 46394   01B812  6E1B               	movwf	(stoa@l+1)^(0+1280),c
 46395   01B814  0E00               	movlw	0
 46396   01B816  6E1A               	movwf	stoa@l^(0+1280),c
 46397   01B818  EF10  F0DC         	goto	l20387
 46398   01B81C                     l20385:
 46399   01B81C  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46400   01B81E  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46401   01B820                     l20387:
 46402   01B820  501A               	movf	stoa@l^(0+1280),w,c
 46403   01B822  2418               	addwf	stoa@cp^(0+1280),w,c
 46404   01B824  6E12               	movwf	??_stoa^(0+1280),c
 46405   01B826  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46406   01B828  2019               	addwfc	(stoa@cp+1)^(0+1280),w,c
 46407   01B82A  6E13               	movwf	(??_stoa+1)^(0+1280),c
 46408   01B82C  C512  F4F6         	movff	??_stoa,tblptrl
 46409   01B830  C513  F4F7         	movff	??_stoa+1,tblptrh
 46410   01B834  0E00               	movlw	low (__mediumconst shr (0+16))
 46411   01B836  6EF8               	movwf	tblptru,c
 46412   01B838  0E25               	movlw	(high __ramtop+-1)
 46413   01B83A  64F7               	cpfsgt	tblptrh,c
 46414   01B83C  D003               	bra	u27057
 46415   01B83E  0008               	tblrd		*
 46416   01B840  50F5               	movf	tablat,w,c
 46417   01B842  D005               	bra	u27050
 46418   01B844                     u27057:
 46419   01B844  C4F6 F4E9          	movff	tblptrl,fsr0l
 46420   01B848  C4F7 F4EA          	movff	tblptrh,fsr0h
 46421   01B84C  50EF               	movf	indf0,w,c
 46422   01B84E                     u27050:
 46423   01B84E  0900               	iorlw	0
 46424   01B850  A4D8               	btfss	status,2,c
 46425   01B852  EF2D  F0DC         	goto	u27061
 46426   01B856  EF2F  F0DC         	goto	u27060
 46427   01B85A                     u27061:
 46428   01B85A  EF0E  F0DC         	goto	l20385
 46429   01B85E                     u27060:
 46430   01B85E                     
 46431                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 46432   01B85E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 46433   01B860  EF34  F0DC         	goto	u27071
 46434   01B864  EF36  F0DC         	goto	u27070
 46435   01B868                     u27071:
 46436   01B868  EF49  F0DC         	goto	l3524
 46437   01B86C                     u27070:
 46438   01B86C  501A               	movf	stoa@l^(0+1280),w,c
 46439   01B86E  5C5A               	subwf	_prec^(0+1280),w,c
 46440   01B870  505B               	movf	(_prec+1)^(0+1280),w,c
 46441   01B872  0A80               	xorlw	128
 46442   01B874  6E12               	movwf	??_stoa^(0+1280),c
 46443   01B876  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46444   01B878  0A80               	xorlw	128
 46445   01B87A  5812               	subwfb	??_stoa^(0+1280),w,c
 46446   01B87C  B0D8               	btfsc	status,0,c
 46447   01B87E  EF43  F0DC         	goto	u27081
 46448   01B882  EF45  F0DC         	goto	u27080
 46449   01B886                     u27081:
 46450   01B886  EF49  F0DC         	goto	l3524
 46451   01B88A                     u27080:
 46452   01B88A                     
 46453                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 46454   01B88A  C55A  F51A         	movff	_prec,stoa@l
 46455   01B88E  C55B  F51B         	movff	_prec+1,stoa@l+1
 46456   01B892                     l3524:
 46457                           
 46458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 46459   01B892  C51A  F514         	movff	stoa@l,stoa@p
 46460   01B896  C51B  F515         	movff	stoa@l+1,stoa@p+1
 46461                           
 46462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 46463   01B89A  C7B1  F516         	movff	_width,stoa@w
 46464   01B89E  C7B2  F517         	movff	_width+1,stoa@w+1
 46465                           
 46466                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 46467   01B8A2  B05C               	btfsc	_flags^(0+1280),0,c
 46468   01B8A4  EF56  F0DC         	goto	u27091
 46469   01B8A8  EF58  F0DC         	goto	u27090
 46470   01B8AC                     u27091:
 46471   01B8AC  EF94  F0DC         	goto	l20407
 46472   01B8B0                     u27090:
 46473   01B8B0  EF66  F0DC         	goto	l20401
 46474   01B8B4                     l20397:
 46475                           
 46476                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 46477   01B8B4  0E00               	movlw	0
 46478   01B8B6  6E06               	movwf	(fputc@c+1)^(0+1280),c
 46479   01B8B8  0E20               	movlw	32
 46480   01B8BA  6E05               	movwf	fputc@c^(0+1280),c
 46481   01B8BC  C50E  F507         	movff	stoa@fp,fputc@fp
 46482   01B8C0  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46483   01B8C4  EC45  F0F1         	call	_fputc	;wreg free
 46484   01B8C8                     
 46485                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 46486   01B8C8  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46487   01B8CA  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46488   01B8CC                     l20401:
 46489                           
 46490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 46491   01B8CC  5016               	movf	stoa@w^(0+1280),w,c
 46492   01B8CE  5C1A               	subwf	stoa@l^(0+1280),w,c
 46493   01B8D0  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46494   01B8D2  0A80               	xorlw	128
 46495   01B8D4  6E12               	movwf	??_stoa^(0+1280),c
 46496   01B8D6  5017               	movf	(stoa@w+1)^(0+1280),w,c
 46497   01B8D8  0A80               	xorlw	128
 46498   01B8DA  5812               	subwfb	??_stoa^(0+1280),w,c
 46499   01B8DC  A0D8               	btfss	status,0,c
 46500   01B8DE  EF73  F0DC         	goto	u27101
 46501   01B8E2  EF75  F0DC         	goto	u27100
 46502   01B8E6                     u27101:
 46503   01B8E6  EF5A  F0DC         	goto	l20397
 46504   01B8EA                     u27100:
 46505   01B8EA  EF94  F0DC         	goto	l20407
 46506   01B8EE                     l20403:
 46507                           
 46508                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 46509   01B8EE  C518  F4F6         	movff	stoa@cp,tblptrl
 46510   01B8F2  C519  F4F7         	movff	stoa@cp+1,tblptrh
 46511   01B8F6  0E00               	movlw	low (__mediumconst shr (0+16))
 46512   01B8F8  6EF8               	movwf	tblptru,c
 46513   01B8FA  0E25               	movlw	(high __ramtop+-1)
 46514   01B8FC  64F7               	cpfsgt	tblptrh,c
 46515   01B8FE  D003               	bra	u27117
 46516   01B900  0008               	tblrd		*
 46517   01B902  50F5               	movf	tablat,w,c
 46518   01B904  D005               	bra	u27110
 46519   01B906                     u27117:
 46520   01B906  C4F6 F4E9          	movff	tblptrl,fsr0l
 46521   01B90A  C4F7 F4EA          	movff	tblptrh,fsr0h
 46522   01B90E  50EF               	movf	indf0,w,c
 46523   01B910                     u27110:
 46524   01B910  6E12               	movwf	??_stoa^(0+1280),c
 46525   01B912  5012               	movf	??_stoa^(0+1280),w,c
 46526   01B914  6E05               	movwf	fputc@c^(0+1280),c
 46527   01B916  6A06               	clrf	(fputc@c+1)^(0+1280),c
 46528   01B918  C50E  F507         	movff	stoa@fp,fputc@fp
 46529   01B91C  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46530   01B920  EC45  F0F1         	call	_fputc	;wreg free
 46531   01B924                     
 46532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 46533   01B924  4A18               	infsnz	stoa@cp^(0+1280),f,c
 46534   01B926  2A19               	incf	(stoa@cp+1)^(0+1280),f,c
 46535   01B928                     l20407:
 46536                           
 46537                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 46538   01B928  0614               	decf	stoa@p^(0+1280),f,c
 46539   01B92A  A0D8               	btfss	status,0,c
 46540   01B92C  0615               	decf	(stoa@p+1)^(0+1280),f,c
 46541   01B92E  2814               	incf	stoa@p^(0+1280),w,c
 46542   01B930  E106               	bnz	u27121
 46543   01B932  2815               	incf	(stoa@p+1)^(0+1280),w,c
 46544   01B934  A4D8               	btfss	status,2,c
 46545   01B936  EF9F  F0DC         	goto	u27121
 46546   01B93A  EFA1  F0DC         	goto	u27120
 46547   01B93E                     u27121:
 46548   01B93E  EF77  F0DC         	goto	l20403
 46549   01B942                     u27120:
 46550   01B942                     
 46551                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 46552   01B942  A05C               	btfss	_flags^(0+1280),0,c
 46553   01B944  EFA6  F0DC         	goto	u27131
 46554   01B948  EFA8  F0DC         	goto	u27130
 46555   01B94C                     u27131:
 46556   01B94C  EFC5  F0DC         	goto	l3536
 46557   01B950                     u27130:
 46558   01B950  EFB6  F0DC         	goto	l20415
 46559   01B954                     l20411:
 46560                           
 46561                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 46562   01B954  0E00               	movlw	0
 46563   01B956  6E06               	movwf	(fputc@c+1)^(0+1280),c
 46564   01B958  0E20               	movlw	32
 46565   01B95A  6E05               	movwf	fputc@c^(0+1280),c
 46566   01B95C  C50E  F507         	movff	stoa@fp,fputc@fp
 46567   01B960  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 46568   01B964  EC45  F0F1         	call	_fputc	;wreg free
 46569   01B968                     
 46570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 46571   01B968  4A1A               	infsnz	stoa@l^(0+1280),f,c
 46572   01B96A  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 46573   01B96C                     l20415:
 46574                           
 46575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 46576   01B96C  5016               	movf	stoa@w^(0+1280),w,c
 46577   01B96E  5C1A               	subwf	stoa@l^(0+1280),w,c
 46578   01B970  501B               	movf	(stoa@l+1)^(0+1280),w,c
 46579   01B972  0A80               	xorlw	128
 46580   01B974  6E12               	movwf	??_stoa^(0+1280),c
 46581   01B976  5017               	movf	(stoa@w+1)^(0+1280),w,c
 46582   01B978  0A80               	xorlw	128
 46583   01B97A  5812               	subwfb	??_stoa^(0+1280),w,c
 46584   01B97C  A0D8               	btfss	status,0,c
 46585   01B97E  EFC3  F0DC         	goto	u27141
 46586   01B982  EFC5  F0DC         	goto	u27140
 46587   01B986                     u27141:
 46588   01B986  EFAA  F0DC         	goto	l20411
 46589   01B98A                     u27140:
 46590   01B98A                     l3536:
 46591   01B98A  0012               	return		;funcret
 46592   01B98C                     __end_of_stoa:
 46593                           	callstack 0
 46594                           
 46595 ;; *************** function _read_prec_or_width *****************
 46596 ;; Defined at:
 46597 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46598 ;; Parameters:    Size  Location     Type
 46599 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 46600 ;;		 -> vfprintf@cfmt(2), 
 46601 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 46602 ;;		 -> printf@ap(2), sprintf@ap(2), 
 46603 ;; Auto vars:     Size  Location     Type
 46604 ;;  c               1    9[COMRAM] unsigned char 
 46605 ;;  n               2   10[COMRAM] int 
 46606 ;; Return value:  Size  Location     Type
 46607 ;;                  2    3[COMRAM] int 
 46608 ;; Registers used:
 46609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46610 ;; Tracked objects:
 46611 ;;		On entry : 0/0
 46612 ;;		On exit  : 0/0
 46613 ;;		Unchanged: 0/0
 46614 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46616 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46619 ;;Total ram usage:        9 bytes
 46620 ;; Hardware stack levels used: 1
 46621 ;; Hardware stack levels required when called: 1
 46622 ;; This function calls:
 46623 ;;		Nothing
 46624 ;; This function is called by:
 46625 ;;		_vfpfcnvrt
 46626 ;; This function uses a non-reentrant model
 46627 ;;
 46628                           
 46629                           	psect	text127
 46630   01E028                     __ptext127:
 46631                           	callstack 0
 46632   01E028                     _read_prec_or_width:
 46633                           	callstack 115
 46634   01E028                     
 46635                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 46636   01E028  0E00               	movlw	0
 46637   01E02A  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 46638   01E02C  0E00               	movlw	0
 46639   01E02E  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 46640   01E030                     
 46641                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 46642   01E030  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46643   01E034  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46644   01E038  C4DE F4F6          	movff	postinc2,tblptrl
 46645   01E03C  C4DD F4F7          	movff	postdec2,tblptrh
 46646   01E040                     	if	0	;tblptru may be non-zero
 46647   01E040                     	endif
 46648   01E040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46649   01E040  0E00               	movlw	low (__mediumconst shr (0+16))
 46650   01E042  6EF8               	movwf	tblptru,c
 46651   01E044                     	endif
 46652   01E044  0008               	tblrd		*
 46653   01E046  50F5               	movf	tablat,w,c
 46654   01E048  0A2A               	xorlw	42
 46655   01E04A  A4D8               	btfss	status,2,c
 46656   01E04C  EF2A  F0F0         	goto	u27251
 46657   01E050  EF2C  F0F0         	goto	u27250
 46658   01E054                     u27251:
 46659   01E054  EF5F  F0F0         	goto	l20477
 46660   01E058                     u27250:
 46661   01E058                     
 46662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 46663   01E058  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46664   01E05C  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46665   01E060  2ADE               	incf	postinc2,f,c
 46666   01E062  0E00               	movlw	0
 46667   01E064  22DD               	addwfc	postdec2,f,c
 46668                           
 46669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 46670   01E066  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 46671   01E06A  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 46672   01E06E  C4DF F508          	movff	indf2,??_read_prec_or_width
 46673   01E072  0E02               	movlw	2
 46674   01E074  26DE               	addwf	postinc2,f,c
 46675   01E076  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 46676   01E07A  0E00               	movlw	0
 46677   01E07C  22DD               	addwfc	postdec2,f,c
 46678   01E07E  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 46679   01E082  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 46680   01E086  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 46681   01E08A  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 46682                           
 46683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 46684   01E08E  EF75  F0F0         	goto	l3561
 46685   01E092                     l20473:
 46686                           
 46687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 46688   01E092  0E0A               	movlw	10
 46689   01E094  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 46690   01E096  C4F3 F508          	movff	prodl,??_read_prec_or_width
 46691   01E09A  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 46692   01E09E  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 46693   01E0A0  50F3               	movf	prodl,w,c
 46694   01E0A2  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 46695   01E0A4  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 46696   01E0A6  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 46697   01E0A8  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 46698   01E0AA  0E00               	movlw	0
 46699   01E0AC  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 46700   01E0AE  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 46701   01E0B0                     
 46702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 46703   01E0B0  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46704   01E0B4  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46705   01E0B8  2ADE               	incf	postinc2,f,c
 46706   01E0BA  0E00               	movlw	0
 46707   01E0BC  22DD               	addwfc	postdec2,f,c
 46708   01E0BE                     l20477:
 46709                           
 46710                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 46711   01E0BE  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 46712   01E0C2  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 46713   01E0C6  C4DE F4F6          	movff	postinc2,tblptrl
 46714   01E0CA  C4DD F4F7          	movff	postdec2,tblptrh
 46715   01E0CE                     	if	0	;tblptru may be non-zero
 46716   01E0CE                     	endif
 46717   01E0CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46718   01E0CE  0E00               	movlw	low (__mediumconst shr (0+16))
 46719   01E0D0  6EF8               	movwf	tblptru,c
 46720   01E0D2                     	endif
 46721   01E0D2  0008               	tblrd		*
 46722   01E0D4  50F5               	movf	tablat,w,c
 46723   01E0D6  0FD0               	addlw	208
 46724   01E0D8  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 46725   01E0DA  0E09               	movlw	9
 46726   01E0DC  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 46727   01E0DE  EF73  F0F0         	goto	u27261
 46728   01E0E2  EF75  F0F0         	goto	u27260
 46729   01E0E6                     u27261:
 46730   01E0E6  EF49  F0F0         	goto	l20473
 46731   01E0EA                     u27260:
 46732   01E0EA                     l3561:
 46733                           
 46734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 46735   01E0EA  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 46736   01E0EE  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 46737   01E0F2  0012               	return		;funcret
 46738   01E0F4                     __end_of_read_prec_or_width:
 46739                           	callstack 0
 46740                           
 46741 ;; *************** function _efgtoa *****************
 46742 ;; Defined at:
 46743 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46744 ;; Parameters:    Size  Location     Type
 46745 ;;  fp              2    0[BANK5 ] PTR struct _IO_FILE
 46746 ;;		 -> sprintf@f(11), NULL(0), 
 46747 ;;  f               4    2[BANK5 ] PTR struct _IO_FILE
 46748 ;;  c               1    6[BANK5 ] unsigned char 
 46749 ;; Auto vars:     Size  Location     Type
 46750 ;;  u               4   47[BANK5 ] struct flui
 46751 ;;  g               4   41[BANK5 ] struct flui
 46752 ;;  l               4   34[BANK5 ] struct flui
 46753 ;;  h               4   30[BANK5 ] struct flui
 46754 ;;  ou              4   24[BANK5 ] struct flui
 46755 ;;  n               2   45[BANK5 ] int 
 46756 ;;  i               2   38[BANK5 ] int 
 46757 ;;  w               2   28[BANK5 ] int 
 46758 ;;  e               2   22[BANK5 ] int 
 46759 ;;  m               2   20[BANK5 ] int 
 46760 ;;  d               2   18[BANK5 ] int 
 46761 ;;  t               2   11[BANK5 ] int 
 46762 ;;  p               2    9[BANK5 ] int 
 46763 ;;  ne              2    7[BANK5 ] int 
 46764 ;;  sign            1   40[BANK5 ] unsigned char 
 46765 ;;  nmode           1   17[BANK5 ] unsigned char 
 46766 ;;  mode            1   16[BANK5 ] unsigned char 
 46767 ;;  pp              1   15[BANK5 ] unsigned char 
 46768 ;;  esign           1    0        unsigned char 
 46769 ;; Return value:  Size  Location     Type
 46770 ;;                  1    wreg      void 
 46771 ;; Registers used:
 46772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46773 ;; Tracked objects:
 46774 ;;		On entry : 0/0
 46775 ;;		On exit  : 0/0
 46776 ;;		Unchanged: 0/0
 46777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 46778 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46779 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46781 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46782 ;;Total ram usage:       53 bytes
 46783 ;; Hardware stack levels used: 1
 46784 ;; Hardware stack levels required when called: 5
 46785 ;; This function calls:
 46786 ;;		___fladd
 46787 ;;		___fldiv
 46788 ;;		___fleq
 46789 ;;		___flge
 46790 ;;		___flmul
 46791 ;;		___flneg
 46792 ;;		___flsub
 46793 ;;		___fltol
 46794 ;;		___fpclassifyf
 46795 ;;		_floorf
 46796 ;;		_labs
 46797 ;;		_memcpy
 46798 ;;		_pad
 46799 ;;		_strcpy
 46800 ;; This function is called by:
 46801 ;;		_vfpfcnvrt
 46802 ;; This function uses a non-reentrant model
 46803 ;;
 46804                           
 46805                           	psect	text128
 46806   010AD8                     __ptext128:
 46807                           	callstack 0
 46808   010AD8                     _efgtoa:
 46809                           	callstack 111
 46810   010AD8                     
 46811                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 46812   010AD8  0105               	movlb	5	; () banked
 46813   010ADA  6B88               	clrf	efgtoa@sign& (0+255),b
 46814                           
 46815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 46816   010ADC  C562  F589         	movff	efgtoa@f,efgtoa@g
 46817   010AE0  C563  F58A         	movff	efgtoa@f+1,efgtoa@g+1
 46818   010AE4  C564  F58B         	movff	efgtoa@f+2,efgtoa@g+2
 46819   010AE8  C565  F58C         	movff	efgtoa@f+3,efgtoa@g+3
 46820   010AEC                     
 46821                           ; BSR set to: 5
 46822                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 46823   010AEC  BF8C               	btfsc	(efgtoa@g+3)& (0+255),7,b
 46824   010AEE  EF7D  F085         	goto	u26690
 46825   010AF2  EF7B  F085         	goto	u26691
 46826   010AF6                     u26691:
 46827   010AF6  EF91  F085         	goto	l20155
 46828   010AFA                     u26690:
 46829   010AFA                     
 46830                           ; BSR set to: 5
 46831                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 46832   010AFA  0E01               	movlw	1
 46833   010AFC  6F88               	movwf	efgtoa@sign& (0+255),b
 46834   010AFE                     
 46835                           ; BSR set to: 5
 46836                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 46837   010AFE  C589  F504         	movff	efgtoa@g,___flneg@f1
 46838   010B02  C58A  F505         	movff	efgtoa@g+1,___flneg@f1+1
 46839   010B06  C58B  F506         	movff	efgtoa@g+2,___flneg@f1+2
 46840   010B0A  C58C  F507         	movff	efgtoa@g+3,___flneg@f1+3
 46841   010B0E  EC30  F0FF         	call	___flneg	;wreg free
 46842   010B12  C504  F589         	movff	?___flneg,efgtoa@g
 46843   010B16  C505  F58A         	movff	?___flneg+1,efgtoa@g+1
 46844   010B1A  C506  F58B         	movff	?___flneg+2,efgtoa@g+2
 46845   010B1E  C507  F58C         	movff	?___flneg+3,efgtoa@g+3
 46846   010B22                     l20155:
 46847                           
 46848                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 46849   010B22  0E00               	movlw	0
 46850   010B24  0105               	movlb	5	; () banked
 46851   010B26  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 46852   010B28  0E00               	movlw	0
 46853   010B2A  6F8D               	movwf	efgtoa@n& (0+255),b
 46854   010B2C                     
 46855                           ; BSR set to: 5
 46856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 46857   010B2C  C7B1  F57C         	movff	_width,efgtoa@w
 46858   010B30  C7B2  F57D         	movff	_width+1,efgtoa@w+1
 46859   010B34                     
 46860                           ; BSR set to: 5
 46861                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
 46862   010B34  5188               	movf	efgtoa@sign& (0+255),w,b
 46863   010B36  B4D8               	btfsc	status,2,c
 46864   010B38  EFA0  F085         	goto	u26701
 46865   010B3C  EFA2  F085         	goto	u26700
 46866   010B40                     u26701:
 46867   010B40  EFB6  F085         	goto	l20169
 46868   010B44                     u26700:
 46869   010B44                     
 46870                           ; BSR set to: 5
 46871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 46872   010B44  5188               	movf	efgtoa@sign& (0+255),w,b
 46873   010B46  A4D8               	btfss	status,2,c
 46874   010B48  EFA8  F085         	goto	u26711
 46875   010B4C  EFAA  F085         	goto	u26710
 46876   010B50                     u26711:
 46877   010B50  EFB0  F085         	goto	l20165
 46878   010B54                     u26710:
 46879   010B54                     
 46880                           ; BSR set to: 5
 46881   010B54  0E00               	movlw	0
 46882   010B56  6F6E               	movwf	(_efgtoa$4827+1)& (0+255),b
 46883   010B58  0E2B               	movlw	43
 46884   010B5A  6F6D               	movwf	_efgtoa$4827& (0+255),b
 46885   010B5C  EFB4  F085         	goto	l20167
 46886   010B60                     l20165:
 46887                           
 46888                           ; BSR set to: 5
 46889   010B60  0E00               	movlw	0
 46890   010B62  6F6E               	movwf	(_efgtoa$4827+1)& (0+255),b
 46891   010B64  0E2D               	movlw	45
 46892   010B66  6F6D               	movwf	_efgtoa$4827& (0+255),b
 46893   010B68                     l20167:
 46894                           
 46895                           ; BSR set to: 5
 46896   010B68  C56D  F588         	movff	_efgtoa$4827,efgtoa@sign
 46897   010B6C                     l20169:
 46898                           
 46899                           ; BSR set to: 5
 46900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 46901   010B6C  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 46902   010B70  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 46903   010B74  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 46904   010B78  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 46905   010B7C  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 46906   010B80  0404               	decf	?___fpclassifyf^(0+1280),w,c
 46907   010B82  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 46908   010B84  A4D8               	btfss	status,2,c
 46909   010B86  EFC7  F085         	goto	u26721
 46910   010B8A  EFC9  F085         	goto	u26720
 46911   010B8E                     u26721:
 46912   010B8E  EFFC  F085         	goto	l20187
 46913   010B92                     u26720:
 46914   010B92                     
 46915                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 46916   010B92  0105               	movlb	5	; () banked
 46917   010B94  5188               	movf	efgtoa@sign& (0+255),w,b
 46918   010B96  B4D8               	btfsc	status,2,c
 46919   010B98  EFD0  F085         	goto	u26731
 46920   010B9C  EFD2  F085         	goto	u26730
 46921   010BA0                     u26731:
 46922   010BA0  EFDB  F085         	goto	l20179
 46923   010BA4                     u26730:
 46924   010BA4                     
 46925                           ; BSR set to: 5
 46926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 46927   010BA4  C588  F828         	movff	efgtoa@sign,_dbuf
 46928   010BA8                     
 46929                           ; BSR set to: 5
 46930                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
 46931   010BA8  077C               	decf	efgtoa@w& (0+255),f,b
 46932   010BAA  A0D8               	btfss	status,0,c
 46933   010BAC  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 46934   010BAE                     
 46935                           ; BSR set to: 5
 46936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 46937   010BAE  0E00               	movlw	0
 46938   010BB0  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 46939   010BB2  0E01               	movlw	1
 46940   010BB4  6F8D               	movwf	efgtoa@n& (0+255),b
 46941   010BB6                     l20179:
 46942                           
 46943                           ; BSR set to: 5
 46944                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 46945   010BB6  0E28               	movlw	low _dbuf
 46946   010BB8  258D               	addwf	efgtoa@n& (0+255),w,b
 46947   010BBA  6E04               	movwf	strcpy@dest^(0+1280),c
 46948   010BBC  0E08               	movlw	high _dbuf
 46949   010BBE  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 46950   010BC0  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 46951   010BC2  0ED5               	movlw	low STR_200
 46952   010BC4  6E06               	movwf	strcpy@src^(0+1280),c
 46953   010BC6  0EFF               	movlw	high STR_200
 46954   010BC8  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 46955   010BCA  ECBE  F0FE         	call	_strcpy	;wreg free
 46956   010BCE                     l20181:
 46957                           
 46958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 46959   010BCE  0105               	movlb	5	; () banked
 46960   010BD0  0EFD               	movlw	253
 46961   010BD2  277C               	addwf	efgtoa@w& (0+255),f,b
 46962   010BD4  0EFF               	movlw	255
 46963   010BD6  237D               	addwfc	(efgtoa@w+1)& (0+255),f,b
 46964   010BD8                     
 46965                           ; BSR set to: 5
 46966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 46967   010BD8  C560  F515         	movff	efgtoa@fp,pad@fp
 46968   010BDC  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 46969   010BE0  0E28               	movlw	low _dbuf
 46970   010BE2  6E17               	movwf	pad@buf^(0+1280),c
 46971   010BE4  0E08               	movlw	high _dbuf
 46972   010BE6  6E18               	movwf	(pad@buf+1)^(0+1280),c
 46973   010BE8  C57C  F519         	movff	efgtoa@w,pad@p
 46974   010BEC  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 46975   010BF0  EC1F  F0F6         	call	_pad	;wreg free
 46976   010BF4  EF9B  F08A         	goto	l3469
 46977   010BF8                     l20187:
 46978                           
 46979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 46980   010BF8  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 46981   010BFC  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 46982   010C00  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 46983   010C04  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 46984   010C08  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 46985   010C0C  5004               	movf	?___fpclassifyf^(0+1280),w,c
 46986   010C0E  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 46987   010C10  A4D8               	btfss	status,2,c
 46988   010C12  EF0D  F086         	goto	u26741
 46989   010C16  EF0F  F086         	goto	u26740
 46990   010C1A                     u26741:
 46991   010C1A  EF2F  F086         	goto	l20205
 46992   010C1E                     u26740:
 46993   010C1E                     
 46994                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 46995   010C1E  0105               	movlb	5	; () banked
 46996   010C20  5188               	movf	efgtoa@sign& (0+255),w,b
 46997   010C22  B4D8               	btfsc	status,2,c
 46998   010C24  EF16  F086         	goto	u26751
 46999   010C28  EF18  F086         	goto	u26750
 47000   010C2C                     u26751:
 47001   010C2C  EF21  F086         	goto	l20197
 47002   010C30                     u26750:
 47003   010C30                     
 47004                           ; BSR set to: 5
 47005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 47006   010C30  C588  F828         	movff	efgtoa@sign,_dbuf
 47007   010C34                     
 47008                           ; BSR set to: 5
 47009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
 47010   010C34  077C               	decf	efgtoa@w& (0+255),f,b
 47011   010C36  A0D8               	btfss	status,0,c
 47012   010C38  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47013   010C3A                     
 47014                           ; BSR set to: 5
 47015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 47016   010C3A  0E00               	movlw	0
 47017   010C3C  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 47018   010C3E  0E01               	movlw	1
 47019   010C40  6F8D               	movwf	efgtoa@n& (0+255),b
 47020   010C42                     l20197:
 47021                           
 47022                           ; BSR set to: 5
 47023                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 47024   010C42  0E28               	movlw	low _dbuf
 47025   010C44  258D               	addwf	efgtoa@n& (0+255),w,b
 47026   010C46  6E04               	movwf	strcpy@dest^(0+1280),c
 47027   010C48  0E08               	movlw	high _dbuf
 47028   010C4A  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47029   010C4C  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 47030   010C4E  0ED9               	movlw	low STR_203
 47031   010C50  6E06               	movwf	strcpy@src^(0+1280),c
 47032   010C52  0EFF               	movlw	high STR_203
 47033   010C54  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 47034   010C56  ECBE  F0FE         	call	_strcpy	;wreg free
 47035   010C5A  EFE7  F085         	goto	l20181
 47036   010C5E                     l20205:
 47037                           
 47038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 47039   010C5E  0E00               	movlw	0
 47040   010C60  0105               	movlb	5	; () banked
 47041   010C62  6F8F               	movwf	efgtoa@u& (0+255),b
 47042   010C64  0E00               	movlw	0
 47043   010C66  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 47044   010C68  0E80               	movlw	128
 47045   010C6A  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 47046   010C6C  0E3F               	movlw	63
 47047   010C6E  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 47048                           
 47049                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 47050   010C70  0E00               	movlw	0
 47051   010C72  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 47052   010C74  0E00               	movlw	0
 47053   010C76  6F76               	movwf	efgtoa@e& (0+255),b
 47054   010C78                     
 47055                           ; BSR set to: 5
 47056                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 47057   010C78  C589  F504         	movff	efgtoa@g,___fleq@ff1
 47058   010C7C  C58A  F505         	movff	efgtoa@g+1,___fleq@ff1+1
 47059   010C80  C58B  F506         	movff	efgtoa@g+2,___fleq@ff1+2
 47060   010C84  C58C  F507         	movff	efgtoa@g+3,___fleq@ff1+3
 47061   010C88  0E00               	movlw	0
 47062   010C8A  6E08               	movwf	___fleq@ff2^(0+1280),c
 47063   010C8C  0E00               	movlw	0
 47064   010C8E  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 47065   010C90  0E00               	movlw	0
 47066   010C92  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 47067   010C94  0E00               	movlw	0
 47068   010C96  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 47069   010C98  EC81  F0F4         	call	___fleq	;wreg free
 47070   010C9C  B0D8               	btfsc	status,0,c
 47071   010C9E  EF53  F086         	goto	u26761
 47072   010CA2  EF55  F086         	goto	u26760
 47073   010CA6                     u26761:
 47074   010CA6  EF34  F087         	goto	l3472
 47075   010CAA                     u26760:
 47076   010CAA  EF62  F086         	goto	l20213
 47077   010CAE                     l3474:
 47078                           
 47079                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 47080   010CAE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 47081   010CB2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 47082   010CB6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 47083   010CBA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 47084   010CBE                     
 47085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 47086   010CBE  0105               	movlb	5	; () banked
 47087   010CC0  4B76               	infsnz	efgtoa@e& (0+255),f,b
 47088   010CC2  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 47089   010CC4                     l20213:
 47090                           
 47091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 47092   010CC4  C58F  F512         	movff	efgtoa@u,___flmul@b
 47093   010CC8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47094   010CCC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47095   010CD0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47096   010CD4  0E00               	movlw	0
 47097   010CD6  6E16               	movwf	___flmul@a^(0+1280),c
 47098   010CD8  0E00               	movlw	0
 47099   010CDA  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47100   010CDC  0E20               	movlw	32
 47101   010CDE  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47102   010CE0  0E41               	movlw	65
 47103   010CE2  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47104   010CE4  ECE4  F0B2         	call	___flmul	;wreg free
 47105   010CE8  C512  F578         	movff	?___flmul,efgtoa@ou
 47106   010CEC  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 47107   010CF0  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 47108   010CF4  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 47109   010CF8  0105               	movlb	5	; () banked
 47110   010CFA  5178               	movf	efgtoa@ou& (0+255),w,b
 47111   010CFC  5D89               	subwf	efgtoa@g& (0+255),w,b
 47112   010CFE  6E04               	movwf	labs@a^(0+1280),c
 47113   010D00  5179               	movf	(efgtoa@ou+1)& (0+255),w,b
 47114   010D02  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47115   010D04  6E05               	movwf	(labs@a+1)^(0+1280),c
 47116   010D06  517A               	movf	(efgtoa@ou+2)& (0+255),w,b
 47117   010D08  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47118   010D0A  6E06               	movwf	(labs@a+2)^(0+1280),c
 47119   010D0C  517B               	movf	(efgtoa@ou+3)& (0+255),w,b
 47120   010D0E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47121   010D10  6E07               	movwf	(labs@a+3)^(0+1280),c
 47122   010D12  EC32  F0FC         	call	_labs	;wreg free
 47123   010D16  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47124   010D18  EF99  F086         	goto	u26771
 47125   010D1C  5007               	movf	(?_labs+3)^(0+1280),w,c
 47126   010D1E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47127   010D20  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47128   010D22  E109               	bnz	u26770
 47129   010D24  0E02               	movlw	2
 47130   010D26  5C04               	subwf	?_labs^(0+1280),w,c
 47131   010D28  A0D8               	btfss	status,0,c
 47132   010D2A  EF99  F086         	goto	u26771
 47133   010D2E  EF9B  F086         	goto	u26770
 47134   010D32                     u26771:
 47135   010D32  EF57  F086         	goto	l3474
 47136   010D36                     u26770:
 47137   010D36  C578  F52B         	movff	efgtoa@ou,___flge@ff1
 47138   010D3A  C579  F52C         	movff	efgtoa@ou+1,___flge@ff1+1
 47139   010D3E  C57A  F52D         	movff	efgtoa@ou+2,___flge@ff1+2
 47140   010D42  C57B  F52E         	movff	efgtoa@ou+3,___flge@ff1+3
 47141   010D46  C589  F52F         	movff	efgtoa@g,___flge@ff2
 47142   010D4A  C58A  F530         	movff	efgtoa@g+1,___flge@ff2+1
 47143   010D4E  C58B  F531         	movff	efgtoa@g+2,___flge@ff2+2
 47144   010D52  C58C  F532         	movff	efgtoa@g+3,___flge@ff2+3
 47145   010D56  EC21  F0E9         	call	___flge	;wreg free
 47146   010D5A  A0D8               	btfss	status,0,c
 47147   010D5C  EFB2  F086         	goto	u26781
 47148   010D60  EFB4  F086         	goto	u26780
 47149   010D64                     u26781:
 47150   010D64  EF57  F086         	goto	l3474
 47151   010D68                     u26780:
 47152   010D68                     
 47153                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 47154   010D68  0105               	movlb	5	; () banked
 47155   010D6A  518F               	movf	efgtoa@u& (0+255),w,b
 47156   010D6C  5D89               	subwf	efgtoa@g& (0+255),w,b
 47157   010D6E  6E04               	movwf	labs@a^(0+1280),c
 47158   010D70  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 47159   010D72  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47160   010D74  6E05               	movwf	(labs@a+1)^(0+1280),c
 47161   010D76  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 47162   010D78  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47163   010D7A  6E06               	movwf	(labs@a+2)^(0+1280),c
 47164   010D7C  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 47165   010D7E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47166   010D80  6E07               	movwf	(labs@a+3)^(0+1280),c
 47167   010D82  EC32  F0FC         	call	_labs	;wreg free
 47168   010D86  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47169   010D88  EFD3  F086         	goto	u26790
 47170   010D8C  5007               	movf	(?_labs+3)^(0+1280),w,c
 47171   010D8E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47172   010D90  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47173   010D92  E107               	bnz	u26791
 47174   010D94  0E02               	movlw	2
 47175   010D96  5C04               	subwf	?_labs^(0+1280),w,c
 47176   010D98  B0D8               	btfsc	status,0,c
 47177   010D9A  EFD1  F086         	goto	u26791
 47178   010D9E  EFD3  F086         	goto	u26790
 47179   010DA2                     u26791:
 47180   010DA2  EF1B  F087         	goto	l20231
 47181   010DA6                     u26790:
 47182   010DA6                     l20221:
 47183                           
 47184                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 47185   010DA6  C58F  F589         	movff	efgtoa@u,efgtoa@g
 47186   010DAA  C590  F58A         	movff	efgtoa@u+1,efgtoa@g+1
 47187   010DAE  C591  F58B         	movff	efgtoa@u+2,efgtoa@g+2
 47188   010DB2  C592  F58C         	movff	efgtoa@u+3,efgtoa@g+3
 47189                           
 47190                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 47191   010DB6  EF34  F087         	goto	l3472
 47192   010DBA                     l20223:
 47193                           
 47194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 47195   010DBA  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47196   010DBE  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47197   010DC2  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47198   010DC6  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47199   010DCA  0E00               	movlw	0
 47200   010DCC  6E2F               	movwf	___fldiv@a^(0+1280),c
 47201   010DCE  0E00               	movlw	0
 47202   010DD0  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47203   010DD2  0E20               	movlw	32
 47204   010DD4  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47205   010DD6  0E41               	movlw	65
 47206   010DD8  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47207   010DDA  ECAA  F0BA         	call	___fldiv	;wreg free
 47208   010DDE  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47209   010DE2  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47210   010DE6  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47211   010DEA  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47212   010DEE                     
 47213                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 47214   010DEE  0105               	movlb	5	; () banked
 47215   010DF0  0776               	decf	efgtoa@e& (0+255),f,b
 47216   010DF2  A0D8               	btfss	status,0,c
 47217   010DF4  0777               	decf	(efgtoa@e+1)& (0+255),f,b
 47218   010DF6                     
 47219                           ; BSR set to: 5
 47220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 47221   010DF6  518F               	movf	efgtoa@u& (0+255),w,b
 47222   010DF8  5D89               	subwf	efgtoa@g& (0+255),w,b
 47223   010DFA  6E04               	movwf	labs@a^(0+1280),c
 47224   010DFC  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 47225   010DFE  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 47226   010E00  6E05               	movwf	(labs@a+1)^(0+1280),c
 47227   010E02  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 47228   010E04  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 47229   010E06  6E06               	movwf	(labs@a+2)^(0+1280),c
 47230   010E08  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 47231   010E0A  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 47232   010E0C  6E07               	movwf	(labs@a+3)^(0+1280),c
 47233   010E0E  EC32  F0FC         	call	_labs	;wreg free
 47234   010E12  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 47235   010E14  EF19  F087         	goto	u26800
 47236   010E18  5007               	movf	(?_labs+3)^(0+1280),w,c
 47237   010E1A  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 47238   010E1C  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 47239   010E1E  E107               	bnz	u26801
 47240   010E20  0E02               	movlw	2
 47241   010E22  5C04               	subwf	?_labs^(0+1280),w,c
 47242   010E24  B0D8               	btfsc	status,0,c
 47243   010E26  EF17  F087         	goto	u26801
 47244   010E2A  EF19  F087         	goto	u26800
 47245   010E2E                     u26801:
 47246   010E2E  EF1B  F087         	goto	l20231
 47247   010E32                     u26800:
 47248   010E32  EFD3  F086         	goto	l20221
 47249   010E36                     l20231:
 47250                           
 47251                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 47252   010E36  C589  F52B         	movff	efgtoa@g,___flge@ff1
 47253   010E3A  C58A  F52C         	movff	efgtoa@g+1,___flge@ff1+1
 47254   010E3E  C58B  F52D         	movff	efgtoa@g+2,___flge@ff1+2
 47255   010E42  C58C  F52E         	movff	efgtoa@g+3,___flge@ff1+3
 47256   010E46  C58F  F52F         	movff	efgtoa@u,___flge@ff2
 47257   010E4A  C590  F530         	movff	efgtoa@u+1,___flge@ff2+1
 47258   010E4E  C591  F531         	movff	efgtoa@u+2,___flge@ff2+2
 47259   010E52  C592  F532         	movff	efgtoa@u+3,___flge@ff2+3
 47260   010E56  EC21  F0E9         	call	___flge	;wreg free
 47261   010E5A  A0D8               	btfss	status,0,c
 47262   010E5C  EF32  F087         	goto	u26811
 47263   010E60  EF34  F087         	goto	u26810
 47264   010E64                     u26811:
 47265   010E64  EFDD  F086         	goto	l20223
 47266   010E68                     u26810:
 47267   010E68                     l3472:
 47268                           
 47269                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 47270   010E68  C566  F570         	movff	efgtoa@c,efgtoa@mode
 47271                           
 47272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 47273   010E6C  C570  F571         	movff	efgtoa@mode,efgtoa@nmode
 47274   010E70                     
 47275                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 47276   010E70  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 47277   010E72  EF3D  F087         	goto	u26821
 47278   010E76  EF3F  F087         	goto	u26820
 47279   010E7A                     u26821:
 47280   010E7A  EF45  F087         	goto	l20237
 47281   010E7E                     u26820:
 47282   010E7E  C55A  F569         	movff	_prec,efgtoa@p
 47283   010E82  C55B  F56A         	movff	_prec+1,efgtoa@p+1
 47284   010E86  EF4A  F087         	goto	l20239
 47285   010E8A                     l20237:
 47286   010E8A  0E00               	movlw	0
 47287   010E8C  0105               	movlb	5	; () banked
 47288   010E8E  6F6A               	movwf	(efgtoa@p+1)& (0+255),b
 47289   010E90  0E06               	movlw	6
 47290   010E92  6F69               	movwf	efgtoa@p& (0+255),b
 47291   010E94                     l20239:
 47292                           
 47293                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 47294   010E94  C569  F574         	movff	efgtoa@p,efgtoa@m
 47295   010E98  C56A  F575         	movff	efgtoa@p+1,efgtoa@m+1
 47296   010E9C                     
 47297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 47298   010E9C  0105               	movlb	5	; () banked
 47299   010E9E  4B74               	infsnz	efgtoa@m& (0+255),f,b
 47300   010EA0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 47301   010EA2                     
 47302                           ; BSR set to: 5
 47303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 47304   010EA2  0E66               	movlw	102
 47305   010EA4  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 47306   010EA6  A4D8               	btfss	status,2,c
 47307   010EA8  EF58  F087         	goto	u26831
 47308   010EAC  EF5A  F087         	goto	u26830
 47309   010EB0                     u26831:
 47310   010EB0  EF7A  F087         	goto	l20253
 47311   010EB4                     u26830:
 47312   010EB4                     
 47313                           ; BSR set to: 5
 47314                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 47315   010EB4  BF77               	btfsc	(efgtoa@e+1)& (0+255),7,b
 47316   010EB6  EF61  F087         	goto	u26840
 47317   010EBA  EF5F  F087         	goto	u26841
 47318   010EBE                     u26841:
 47319   010EBE  EF6D  F087         	goto	l20249
 47320   010EC2                     u26840:
 47321   010EC2                     
 47322                           ; BSR set to: 5
 47323                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 47324   010EC2  0E00               	movlw	0
 47325   010EC4  6F8F               	movwf	efgtoa@u& (0+255),b
 47326   010EC6  0E00               	movlw	0
 47327   010EC8  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 47328   010ECA  0E80               	movlw	128
 47329   010ECC  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 47330   010ECE  0E3F               	movlw	63
 47331   010ED0  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 47332                           
 47333                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 47334   010ED2  0E00               	movlw	0
 47335   010ED4  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 47336   010ED6  0E00               	movlw	0
 47337   010ED8  6F76               	movwf	efgtoa@e& (0+255),b
 47338   010EDA                     l20249:
 47339                           
 47340                           ; BSR set to: 5
 47341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 47342   010EDA  0E67               	movlw	103
 47343   010EDC  1970               	xorwf	efgtoa@mode& (0+255),w,b
 47344   010EDE  B4D8               	btfsc	status,2,c
 47345   010EE0  EF74  F087         	goto	u26851
 47346   010EE4  EF76  F087         	goto	u26850
 47347   010EE8                     u26851:
 47348   010EE8  EF7A  F087         	goto	l20253
 47349   010EEC                     u26850:
 47350   010EEC                     
 47351                           ; BSR set to: 5
 47352                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 47353   010EEC  5176               	movf	efgtoa@e& (0+255),w,b
 47354   010EEE  2774               	addwf	efgtoa@m& (0+255),f,b
 47355   010EF0  5177               	movf	(efgtoa@e+1)& (0+255),w,b
 47356   010EF2  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
 47357   010EF4                     l20253:
 47358                           
 47359                           ; BSR set to: 5
 47360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 47361   010EF4  0E00               	movlw	0
 47362   010EF6  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47363   010EF8  0E00               	movlw	0
 47364   010EFA  6F86               	movwf	efgtoa@i& (0+255),b
 47365   010EFC                     
 47366                           ; BSR set to: 5
 47367                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 47368   010EFC  C589  F57E         	movff	efgtoa@g,efgtoa@h
 47369   010F00  C58A  F57F         	movff	efgtoa@g+1,efgtoa@h+1
 47370   010F04  C58B  F580         	movff	efgtoa@g+2,efgtoa@h+2
 47371   010F08  C58C  F581         	movff	efgtoa@g+3,efgtoa@h+3
 47372   010F0C                     
 47373                           ; BSR set to: 5
 47374                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 47375   010F0C  C58F  F578         	movff	efgtoa@u,efgtoa@ou
 47376   010F10  C590  F579         	movff	efgtoa@u+1,efgtoa@ou+1
 47377   010F14  C591  F57A         	movff	efgtoa@u+2,efgtoa@ou+2
 47378   010F18  C592  F57B         	movff	efgtoa@u+3,efgtoa@ou+3
 47379                           
 47380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 47381   010F1C  EF0B  F088         	goto	l20267
 47382   010F20                     l20259:
 47383                           
 47384                           ; BSR set to: 5
 47385                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 47386   010F20  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 47387   010F24  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 47388   010F28  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 47389   010F2C  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 47390   010F30  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 47391   010F34  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 47392   010F38  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 47393   010F3C  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 47394   010F40  ECAA  F0BA         	call	___fldiv	;wreg free
 47395   010F44  C52B  F544         	movff	?___fldiv,floorf@x
 47396   010F48  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 47397   010F4C  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 47398   010F50  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 47399   010F54  EC82  F0D0         	call	_floorf	;wreg free
 47400   010F58  C544  F582         	movff	?_floorf,efgtoa@l
 47401   010F5C  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 47402   010F60  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 47403   010F64  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 47404                           
 47405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 47406   010F68  C582  F504         	movff	efgtoa@l,___fltol@f1
 47407   010F6C  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47408   010F70  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47409   010F74  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47410   010F78  EC1C  F0E8         	call	___fltol	;wreg free
 47411   010F7C  C504  F572         	movff	?___fltol,efgtoa@d
 47412   010F80  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 47413   010F84                     
 47414                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 47415   010F84  C57E  F52B         	movff	efgtoa@h,___flsub@b
 47416   010F88  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 47417   010F8C  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 47418   010F90  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 47419   010F94  C582  F516         	movff	efgtoa@l,___flmul@a
 47420   010F98  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 47421   010F9C  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 47422   010FA0  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 47423   010FA4  C58F  F512         	movff	efgtoa@u,___flmul@b
 47424   010FA8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47425   010FAC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47426   010FB0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47427   010FB4  ECE4  F0B2         	call	___flmul	;wreg free
 47428   010FB8  C512  F52F         	movff	?___flmul,___flsub@a
 47429   010FBC  C513  F530         	movff	?___flmul+1,___flsub@a+1
 47430   010FC0  C514  F531         	movff	?___flmul+2,___flsub@a+2
 47431   010FC4  C515  F532         	movff	?___flmul+3,___flsub@a+3
 47432   010FC8  ECB9  F0FD         	call	___flsub	;wreg free
 47433   010FCC  C52B  F57E         	movff	?___flsub,efgtoa@h
 47434   010FD0  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 47435   010FD4  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 47436   010FD8  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 47437   010FDC                     
 47438                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 47439   010FDC  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47440   010FE0  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47441   010FE4  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47442   010FE8  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47443   010FEC  0E00               	movlw	0
 47444   010FEE  6E2F               	movwf	___fldiv@a^(0+1280),c
 47445   010FF0  0E00               	movlw	0
 47446   010FF2  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47447   010FF4  0E20               	movlw	32
 47448   010FF6  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47449   010FF8  0E41               	movlw	65
 47450   010FFA  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47451   010FFC  ECAA  F0BA         	call	___fldiv	;wreg free
 47452   011000  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47453   011004  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47454   011008  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47455   01100C  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47456   011010                     
 47457                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 47458   011010  0105               	movlb	5	; () banked
 47459   011012  4B86               	infsnz	efgtoa@i& (0+255),f,b
 47460   011014  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 47461   011016                     l20267:
 47462                           
 47463                           ; BSR set to: 5
 47464                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 47465   011016  5174               	movf	efgtoa@m& (0+255),w,b
 47466   011018  5D86               	subwf	efgtoa@i& (0+255),w,b
 47467   01101A  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47468   01101C  0A80               	xorlw	128
 47469   01101E  6E58               	movwf	??_efgtoa^(0+1280),c
 47470   011020  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 47471   011022  0A80               	xorlw	128
 47472   011024  5858               	subwfb	??_efgtoa^(0+1280),w,c
 47473   011026  A0D8               	btfss	status,0,c
 47474   011028  EF18  F088         	goto	u26861
 47475   01102C  EF1A  F088         	goto	u26860
 47476   011030                     u26861:
 47477   011030  EF90  F087         	goto	l20259
 47478   011034                     u26860:
 47479   011034                     
 47480                           ; BSR set to: 5
 47481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 47482   011034  C58F  F512         	movff	efgtoa@u,___flmul@b
 47483   011038  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47484   01103C  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47485   011040  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47486   011044  0E00               	movlw	0
 47487   011046  6E16               	movwf	___flmul@a^(0+1280),c
 47488   011048  0E00               	movlw	0
 47489   01104A  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47490   01104C  0EA0               	movlw	160
 47491   01104E  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47492   011050  0E40               	movlw	64
 47493   011052  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47494   011054  ECE4  F0B2         	call	___flmul	;wreg free
 47495   011058  C512  F582         	movff	?___flmul,efgtoa@l
 47496   01105C  C513  F583         	movff	?___flmul+1,efgtoa@l+1
 47497   011060  C514  F584         	movff	?___flmul+2,efgtoa@l+2
 47498   011064  C515  F585         	movff	?___flmul+3,efgtoa@l+3
 47499   011068                     
 47500                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 47501   011068  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 47502   01106C  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 47503   011070  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 47504   011074  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 47505   011078  C582  F52F         	movff	efgtoa@l,___flge@ff2
 47506   01107C  C583  F530         	movff	efgtoa@l+1,___flge@ff2+1
 47507   011080  C584  F531         	movff	efgtoa@l+2,___flge@ff2+2
 47508   011084  C585  F532         	movff	efgtoa@l+3,___flge@ff2+3
 47509   011088  EC21  F0E9         	call	___flge	;wreg free
 47510   01108C  B0D8               	btfsc	status,0,c
 47511   01108E  EF4B  F088         	goto	u26871
 47512   011092  EF4D  F088         	goto	u26870
 47513   011096                     u26871:
 47514   011096  EF58  F088         	goto	l20275
 47515   01109A                     u26870:
 47516   01109A                     
 47517                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 47518   01109A  0E00               	movlw	0
 47519   01109C  0105               	movlb	5	; () banked
 47520   01109E  6F82               	movwf	efgtoa@l& (0+255),b
 47521   0110A0  0E00               	movlw	0
 47522   0110A2  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 47523   0110A4  0E00               	movlw	0
 47524   0110A6  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 47525   0110A8  0E00               	movlw	0
 47526   0110AA  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 47527                           
 47528                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 47529   0110AC  EF81  F088         	goto	l20281
 47530   0110B0                     l20275:
 47531                           
 47532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 47533   0110B0  C57E  F504         	movff	efgtoa@h,___fleq@ff1
 47534   0110B4  C57F  F505         	movff	efgtoa@h+1,___fleq@ff1+1
 47535   0110B8  C580  F506         	movff	efgtoa@h+2,___fleq@ff1+2
 47536   0110BC  C581  F507         	movff	efgtoa@h+3,___fleq@ff1+3
 47537   0110C0  C582  F508         	movff	efgtoa@l,___fleq@ff2
 47538   0110C4  C583  F509         	movff	efgtoa@l+1,___fleq@ff2+1
 47539   0110C8  C584  F50A         	movff	efgtoa@l+2,___fleq@ff2+2
 47540   0110CC  C585  F50B         	movff	efgtoa@l+3,___fleq@ff2+3
 47541   0110D0  EC81  F0F4         	call	___fleq	;wreg free
 47542   0110D4  A0D8               	btfss	status,0,c
 47543   0110D6  EF6F  F088         	goto	u26881
 47544   0110DA  EF71  F088         	goto	u26880
 47545   0110DE                     u26881:
 47546   0110DE  EF81  F088         	goto	l20281
 47547   0110E2                     u26880:
 47548   0110E2  0105               	movlb	5	; () banked
 47549   0110E4  B172               	btfsc	efgtoa@d& (0+255),0,b
 47550   0110E6  EF77  F088         	goto	u26891
 47551   0110EA  EF79  F088         	goto	u26890
 47552   0110EE                     u26891:
 47553   0110EE  EF81  F088         	goto	l20281
 47554   0110F2                     u26890:
 47555   0110F2                     
 47556                           ; BSR set to: 5
 47557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 47558   0110F2  0E00               	movlw	0
 47559   0110F4  6F82               	movwf	efgtoa@l& (0+255),b
 47560   0110F6  0E00               	movlw	0
 47561   0110F8  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 47562   0110FA  0E00               	movlw	0
 47563   0110FC  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 47564   0110FE  0E00               	movlw	0
 47565   011100  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 47566   011102                     l20281:
 47567                           
 47568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 47569   011102  C589  F504         	movff	efgtoa@g,___fladd@b
 47570   011106  C58A  F505         	movff	efgtoa@g+1,___fladd@b+1
 47571   01110A  C58B  F506         	movff	efgtoa@g+2,___fladd@b+2
 47572   01110E  C58C  F507         	movff	efgtoa@g+3,___fladd@b+3
 47573   011112  C582  F508         	movff	efgtoa@l,___fladd@a
 47574   011116  C583  F509         	movff	efgtoa@l+1,___fladd@a+1
 47575   01111A  C584  F50A         	movff	efgtoa@l+2,___fladd@a+2
 47576   01111E  C585  F50B         	movff	efgtoa@l+3,___fladd@a+3
 47577   011122  EC38  F0A5         	call	___fladd	;wreg free
 47578   011126  C504  F57E         	movff	?___fladd,efgtoa@h
 47579   01112A  C505  F57F         	movff	?___fladd+1,efgtoa@h+1
 47580   01112E  C506  F580         	movff	?___fladd+2,efgtoa@h+2
 47581   011132  C507  F581         	movff	?___fladd+3,efgtoa@h+3
 47582   011136                     
 47583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 47584   011136  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 47585   01113A  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 47586   01113E  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 47587   011142  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 47588   011146  0E00               	movlw	0
 47589   011148  6E16               	movwf	___flmul@a^(0+1280),c
 47590   01114A  0E00               	movlw	0
 47591   01114C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47592   01114E  0E20               	movlw	32
 47593   011150  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47594   011152  0E41               	movlw	65
 47595   011154  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47596   011156  C578  F512         	movff	efgtoa@ou,___flmul@b
 47597   01115A  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 47598   01115E  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 47599   011162  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 47600   011166  ECE4  F0B2         	call	___flmul	;wreg free
 47601   01116A  C512  F52F         	movff	?___flmul,___flge@ff2
 47602   01116E  C513  F530         	movff	?___flmul+1,___flge@ff2+1
 47603   011172  C514  F531         	movff	?___flmul+2,___flge@ff2+2
 47604   011176  C515  F532         	movff	?___flmul+3,___flge@ff2+3
 47605   01117A  EC21  F0E9         	call	___flge	;wreg free
 47606   01117E  A0D8               	btfss	status,0,c
 47607   011180  EFC4  F088         	goto	u26901
 47608   011184  EFC6  F088         	goto	u26900
 47609   011188                     u26901:
 47610   011188  EFEF  F088         	goto	l20293
 47611   01118C                     u26900:
 47612   01118C                     
 47613                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 47614   01118C  0105               	movlb	5	; () banked
 47615   01118E  4B76               	infsnz	efgtoa@e& (0+255),f,b
 47616   011190  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 47617   011192                     
 47618                           ; BSR set to: 5
 47619                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 47620   011192  C578  F512         	movff	efgtoa@ou,___flmul@b
 47621   011196  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 47622   01119A  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 47623   01119E  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 47624   0111A2  0E00               	movlw	0
 47625   0111A4  6E16               	movwf	___flmul@a^(0+1280),c
 47626   0111A6  0E00               	movlw	0
 47627   0111A8  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 47628   0111AA  0E20               	movlw	32
 47629   0111AC  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 47630   0111AE  0E41               	movlw	65
 47631   0111B0  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 47632   0111B2  ECE4  F0B2         	call	___flmul	;wreg free
 47633   0111B6  C512  F578         	movff	?___flmul,efgtoa@ou
 47634   0111BA  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 47635   0111BE  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 47636   0111C2  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 47637   0111C6                     
 47638                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 47639   0111C6  0E66               	movlw	102
 47640   0111C8  0105               	movlb	5	; () banked
 47641   0111CA  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 47642   0111CC  A4D8               	btfss	status,2,c
 47643   0111CE  EFEB  F088         	goto	u26911
 47644   0111D2  EFED  F088         	goto	u26910
 47645   0111D6                     u26911:
 47646   0111D6  EFEF  F088         	goto	l20293
 47647   0111DA                     u26910:
 47648   0111DA                     
 47649                           ; BSR set to: 5
 47650                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 47651   0111DA  4B74               	infsnz	efgtoa@m& (0+255),f,b
 47652   0111DC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 47653   0111DE                     l20293:
 47654                           
 47655                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 47656   0111DE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 47657   0111E2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 47658   0111E6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 47659   0111EA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 47660   0111EE                     
 47661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 47662   0111EE  C576  F567         	movff	efgtoa@e,efgtoa@ne
 47663   0111F2  C577  F568         	movff	efgtoa@e+1,efgtoa@ne+1
 47664   0111F6                     
 47665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 47666   0111F6  0105               	movlb	5	; () banked
 47667   0111F8  6B6F               	clrf	efgtoa@pp& (0+255),b
 47668   0111FA                     
 47669                           ; BSR set to: 5
 47670                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 47671   0111FA  0E00               	movlw	0
 47672   0111FC  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
 47673   0111FE  0E00               	movlw	0
 47674   011200  6F6B               	movwf	efgtoa@t& (0+255),b
 47675   011202                     
 47676                           ; BSR set to: 5
 47677                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 47678   011202  0E00               	movlw	0
 47679   011204  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47680   011206  0E00               	movlw	0
 47681   011208  6F86               	movwf	efgtoa@i& (0+255),b
 47682                           
 47683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 47684   01120A  EFEC  F089         	goto	l20343
 47685   01120E                     l20303:
 47686                           
 47687                           ; BSR set to: 5
 47688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 47689   01120E  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 47690   011212  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 47691   011216  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 47692   01121A  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 47693   01121E  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 47694   011222  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 47695   011226  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 47696   01122A  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 47697   01122E  ECAA  F0BA         	call	___fldiv	;wreg free
 47698   011232  C52B  F544         	movff	?___fldiv,floorf@x
 47699   011236  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 47700   01123A  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 47701   01123E  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 47702   011242  EC82  F0D0         	call	_floorf	;wreg free
 47703   011246  C544  F582         	movff	?_floorf,efgtoa@l
 47704   01124A  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 47705   01124E  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 47706   011252  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 47707                           
 47708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 47709   011256  C582  F504         	movff	efgtoa@l,___fltol@f1
 47710   01125A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47711   01125E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47712   011262  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47713   011266  EC1C  F0E8         	call	___fltol	;wreg free
 47714   01126A  BE05               	btfsc	(?___fltol+1)^(0+1280),7,c
 47715   01126C  EF43  F089         	goto	u26920
 47716   011270  5005               	movf	(?___fltol+1)^(0+1280),w,c
 47717   011272  E107               	bnz	u26921
 47718   011274  0E0A               	movlw	10
 47719   011276  5C04               	subwf	?___fltol^(0+1280),w,c
 47720   011278  B0D8               	btfsc	status,0,c
 47721   01127A  EF41  F089         	goto	u26921
 47722   01127E  EF43  F089         	goto	u26920
 47723   011282                     u26921:
 47724   011282  EF53  F089         	goto	l20307
 47725   011286                     u26920:
 47726   011286  C582  F504         	movff	efgtoa@l,___fltol@f1
 47727   01128A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 47728   01128E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 47729   011292  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 47730   011296  EC1C  F0E8         	call	___fltol	;wreg free
 47731   01129A  C504  F572         	movff	?___fltol,efgtoa@d
 47732   01129E  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 47733   0112A2  EF58  F089         	goto	l3502
 47734   0112A6                     l20307:
 47735   0112A6  0E00               	movlw	0
 47736   0112A8  0105               	movlb	5	; () banked
 47737   0112AA  6F73               	movwf	(efgtoa@d+1)& (0+255),b
 47738   0112AC  0E09               	movlw	9
 47739   0112AE  6F72               	movwf	efgtoa@d& (0+255),b
 47740   0112B0                     l3502:
 47741                           
 47742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 47743   0112B0  0105               	movlb	5	; () banked
 47744   0112B2  516F               	movf	efgtoa@pp& (0+255),w,b
 47745   0112B4  A4D8               	btfss	status,2,c
 47746   0112B6  EF5F  F089         	goto	u26931
 47747   0112BA  EF61  F089         	goto	u26930
 47748   0112BE                     u26931:
 47749   0112BE  EF89  F089         	goto	l20327
 47750   0112C2                     u26930:
 47751   0112C2                     
 47752                           ; BSR set to: 5
 47753   0112C2  BF68               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 47754   0112C4  EF68  F089         	goto	u26940
 47755   0112C8  EF66  F089         	goto	u26941
 47756   0112CC                     u26941:
 47757   0112CC  EF89  F089         	goto	l20327
 47758   0112D0                     u26940:
 47759   0112D0                     
 47760                           ; BSR set to: 5
 47761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 47762   0112D0  0E28               	movlw	low _dbuf
 47763   0112D2  258D               	addwf	efgtoa@n& (0+255),w,b
 47764   0112D4  6ED9               	movwf	fsr2l,c
 47765   0112D6  0E08               	movlw	high _dbuf
 47766   0112D8  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47767   0112DA  6EDA               	movwf	fsr2h,c
 47768   0112DC  0E2E               	movlw	46
 47769   0112DE  6EDF               	movwf	indf2,c
 47770   0112E0                     
 47771                           ; BSR set to: 5
 47772   0112E0  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47773   0112E2  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47774   0112E4                     
 47775                           ; BSR set to: 5
 47776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 47777   0112E4  077C               	decf	efgtoa@w& (0+255),f,b
 47778   0112E6  A0D8               	btfss	status,0,c
 47779   0112E8  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47780   0112EA                     
 47781                           ; BSR set to: 5
 47782                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 47783   0112EA  0E01               	movlw	1
 47784   0112EC  6F6F               	movwf	efgtoa@pp& (0+255),b
 47785   0112EE  EF89  F089         	goto	l20327
 47786   0112F2                     l20319:
 47787                           
 47788                           ; BSR set to: 5
 47789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 47790   0112F2  0E28               	movlw	low _dbuf
 47791   0112F4  258D               	addwf	efgtoa@n& (0+255),w,b
 47792   0112F6  6ED9               	movwf	fsr2l,c
 47793   0112F8  0E08               	movlw	high _dbuf
 47794   0112FA  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47795   0112FC  6EDA               	movwf	fsr2h,c
 47796   0112FE  0E30               	movlw	48
 47797   011300  6EDF               	movwf	indf2,c
 47798   011302                     
 47799                           ; BSR set to: 5
 47800   011302  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47801   011304  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47802   011306                     
 47803                           ; BSR set to: 5
 47804                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 47805   011306  077C               	decf	efgtoa@w& (0+255),f,b
 47806   011308  A0D8               	btfss	status,0,c
 47807   01130A  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47808   01130C                     
 47809                           ; BSR set to: 5
 47810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 47811   01130C  076B               	decf	efgtoa@t& (0+255),f,b
 47812   01130E  A0D8               	btfss	status,0,c
 47813   011310  076C               	decf	(efgtoa@t+1)& (0+255),f,b
 47814   011312                     l20327:
 47815                           
 47816                           ; BSR set to: 5
 47817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 47818   011312  516B               	movf	efgtoa@t& (0+255),w,b
 47819   011314  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
 47820   011316  A4D8               	btfss	status,2,c
 47821   011318  EF90  F089         	goto	u26951
 47822   01131C  EF92  F089         	goto	u26950
 47823   011320                     u26951:
 47824   011320  EF79  F089         	goto	l20319
 47825   011324                     u26950:
 47826   011324                     
 47827                           ; BSR set to: 5
 47828                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 47829   011324  0E28               	movlw	low _dbuf
 47830   011326  258D               	addwf	efgtoa@n& (0+255),w,b
 47831   011328  6ED9               	movwf	fsr2l,c
 47832   01132A  0E08               	movlw	high _dbuf
 47833   01132C  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 47834   01132E  6EDA               	movwf	fsr2h,c
 47835   011330  5172               	movf	efgtoa@d& (0+255),w,b
 47836   011332  0F30               	addlw	48
 47837   011334  6EDF               	movwf	indf2,c
 47838   011336                     
 47839                           ; BSR set to: 5
 47840   011336  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 47841   011338  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 47842   01133A                     
 47843                           ; BSR set to: 5
 47844                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 47845   01133A  077C               	decf	efgtoa@w& (0+255),f,b
 47846   01133C  A0D8               	btfss	status,0,c
 47847   01133E  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 47848   011340                     
 47849                           ; BSR set to: 5
 47850                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 47851   011340  C57E  F52B         	movff	efgtoa@h,___flsub@b
 47852   011344  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 47853   011348  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 47854   01134C  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 47855   011350  C582  F516         	movff	efgtoa@l,___flmul@a
 47856   011354  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 47857   011358  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 47858   01135C  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 47859   011360  C58F  F512         	movff	efgtoa@u,___flmul@b
 47860   011364  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 47861   011368  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 47862   01136C  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 47863   011370  ECE4  F0B2         	call	___flmul	;wreg free
 47864   011374  C512  F52F         	movff	?___flmul,___flsub@a
 47865   011378  C513  F530         	movff	?___flmul+1,___flsub@a+1
 47866   01137C  C514  F531         	movff	?___flmul+2,___flsub@a+2
 47867   011380  C515  F532         	movff	?___flmul+3,___flsub@a+3
 47868   011384  ECB9  F0FD         	call	___flsub	;wreg free
 47869   011388  C52B  F57E         	movff	?___flsub,efgtoa@h
 47870   01138C  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 47871   011390  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 47872   011394  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 47873   011398                     
 47874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 47875   011398  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 47876   01139C  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 47877   0113A0  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 47878   0113A4  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 47879   0113A8  0E00               	movlw	0
 47880   0113AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 47881   0113AC  0E00               	movlw	0
 47882   0113AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 47883   0113B0  0E20               	movlw	32
 47884   0113B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 47885   0113B4  0E41               	movlw	65
 47886   0113B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 47887   0113B8  ECAA  F0BA         	call	___fldiv	;wreg free
 47888   0113BC  C52B  F58F         	movff	?___fldiv,efgtoa@u
 47889   0113C0  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 47890   0113C4  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 47891   0113C8  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 47892   0113CC                     
 47893                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 47894   0113CC  0105               	movlb	5	; () banked
 47895   0113CE  0767               	decf	efgtoa@ne& (0+255),f,b
 47896   0113D0  A0D8               	btfss	status,0,c
 47897   0113D2  0768               	decf	(efgtoa@ne+1)& (0+255),f,b
 47898   0113D4                     
 47899                           ; BSR set to: 5
 47900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 47901   0113D4  4B86               	infsnz	efgtoa@i& (0+255),f,b
 47902   0113D6  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 47903   0113D8                     l20343:
 47904                           
 47905                           ; BSR set to: 5
 47906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 47907   0113D8  5174               	movf	efgtoa@m& (0+255),w,b
 47908   0113DA  5D86               	subwf	efgtoa@i& (0+255),w,b
 47909   0113DC  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47910   0113DE  0A80               	xorlw	128
 47911   0113E0  6E58               	movwf	??_efgtoa^(0+1280),c
 47912   0113E2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 47913   0113E4  0A80               	xorlw	128
 47914   0113E6  5858               	subwfb	??_efgtoa^(0+1280),w,c
 47915   0113E8  B0D8               	btfsc	status,0,c
 47916   0113EA  EFF9  F089         	goto	u26961
 47917   0113EE  EFFB  F089         	goto	u26960
 47918   0113F2                     u26961:
 47919   0113F2  EF09  F08A         	goto	l20347
 47920   0113F6                     u26960:
 47921   0113F6                     
 47922                           ; BSR set to: 5
 47923   0113F6  BF8E               	btfsc	(efgtoa@n+1)& (0+255),7,b
 47924   0113F8  EF07  F08A         	goto	u26971
 47925   0113FC  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47926   0113FE  E109               	bnz	u26970
 47927   011400  0E4B               	movlw	75
 47928   011402  5D8D               	subwf	efgtoa@n& (0+255),w,b
 47929   011404  A0D8               	btfss	status,0,c
 47930   011406  EF07  F08A         	goto	u26971
 47931   01140A  EF09  F08A         	goto	u26970
 47932   01140E                     u26971:
 47933   01140E  EF07  F089         	goto	l20303
 47934   011412                     u26970:
 47935   011412                     l20347:
 47936                           
 47937                           ; BSR set to: 5
 47938                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 47939   011412  0E00               	movlw	0
 47940   011414  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 47941   011416  0E4F               	movlw	79
 47942   011418  6F86               	movwf	efgtoa@i& (0+255),b
 47943   01141A                     
 47944                           ; BSR set to: 5
 47945                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 47946   01141A  0E28               	movlw	low _dbuf
 47947   01141C  2586               	addwf	efgtoa@i& (0+255),w,b
 47948   01141E  6ED9               	movwf	fsr2l,c
 47949   011420  0E08               	movlw	high _dbuf
 47950   011422  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 47951   011424  6EDA               	movwf	fsr2h,c
 47952   011426  6ADF               	clrf	indf2,c
 47953   011428                     
 47954                           ; BSR set to: 5
 47955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 47956   011428  0E28               	movlw	low _dbuf
 47957   01142A  6E58               	movwf	??_efgtoa^(0+1280),c
 47958   01142C  0E08               	movlw	high _dbuf
 47959   01142E  6E59               	movwf	(??_efgtoa+1)^(0+1280),c
 47960   011430  518D               	movf	efgtoa@n& (0+255),w,b
 47961   011432  5E58               	subwf	??_efgtoa^(0+1280),f,c
 47962   011434  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47963   011436  5A59               	subwfb	(??_efgtoa+1)^(0+1280),f,c
 47964   011438  5186               	movf	efgtoa@i& (0+255),w,b
 47965   01143A  2458               	addwf	??_efgtoa^(0+1280),w,c
 47966   01143C  6E04               	movwf	memcpy@d1^(0+1280),c
 47967   01143E  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 47968   011440  2059               	addwfc	(??_efgtoa+1)^(0+1280),w,c
 47969   011442  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 47970   011444  0E28               	movlw	low _dbuf
 47971   011446  6E06               	movwf	memcpy@s1^(0+1280),c
 47972   011448  0E08               	movlw	high _dbuf
 47973   01144A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 47974   01144C  C58D  F508         	movff	efgtoa@n,memcpy@n
 47975   011450  C58E  F509         	movff	efgtoa@n+1,memcpy@n+1
 47976   011454  EC00  F0FD         	call	_memcpy	;wreg free
 47977   011458                     
 47978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 47979   011458  0105               	movlb	5	; () banked
 47980   01145A  518D               	movf	efgtoa@n& (0+255),w,b
 47981   01145C  5D86               	subwf	efgtoa@i& (0+255),w,b
 47982   01145E  6F8D               	movwf	efgtoa@n& (0+255),b
 47983   011460  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 47984   011462  5987               	subwfb	(efgtoa@i+1)& (0+255),w,b
 47985   011464  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 47986   011466                     
 47987                           ; BSR set to: 5
 47988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 47989   011466  5188               	movf	efgtoa@sign& (0+255),w,b
 47990   011468  A4D8               	btfss	status,2,c
 47991   01146A  EF39  F08A         	goto	u26981
 47992   01146E  EF3C  F08A         	goto	u26980
 47993   011472                     u26981:
 47994   011472  0E01               	movlw	1
 47995   011474  EF3D  F08A         	goto	u26990
 47996   011478                     u26980:
 47997   011478  0E00               	movlw	0
 47998   01147A                     u26990:
 47999   01147A  6F86               	movwf	efgtoa@i& (0+255),b
 48000   01147C  6B87               	clrf	(efgtoa@i+1)& (0+255),b
 48001   01147E                     
 48002                           ; BSR set to: 5
 48003                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 48004   01147E  A25C               	btfss	_flags^(0+1280),1,c
 48005   011480  EF44  F08A         	goto	u27001
 48006   011484  EF46  F08A         	goto	u27000
 48007   011488                     u27001:
 48008   011488  EF74  F08A         	goto	l20369
 48009   01148C                     u27000:
 48010   01148C  EF56  F08A         	goto	l20365
 48011   011490                     l20361:
 48012                           
 48013                           ; BSR set to: 5
 48014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 48015   011490  078D               	decf	efgtoa@n& (0+255),f,b
 48016   011492  A0D8               	btfss	status,0,c
 48017   011494  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 48018   011496  0E28               	movlw	low _dbuf
 48019   011498  258D               	addwf	efgtoa@n& (0+255),w,b
 48020   01149A  6ED9               	movwf	fsr2l,c
 48021   01149C  0E08               	movlw	high _dbuf
 48022   01149E  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48023   0114A0  6EDA               	movwf	fsr2h,c
 48024   0114A2  0E30               	movlw	48
 48025   0114A4  6EDF               	movwf	indf2,c
 48026   0114A6                     
 48027                           ; BSR set to: 5
 48028                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 856:    w--;
 48029   0114A6  077C               	decf	efgtoa@w& (0+255),f,b
 48030   0114A8  A0D8               	btfss	status,0,c
 48031   0114AA  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 48032   0114AC                     l20365:
 48033                           
 48034                           ; BSR set to: 5
 48035                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 48036   0114AC  517C               	movf	efgtoa@w& (0+255),w,b
 48037   0114AE  5D86               	subwf	efgtoa@i& (0+255),w,b
 48038   0114B0  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48039   0114B2  0A80               	xorlw	128
 48040   0114B4  6E58               	movwf	??_efgtoa^(0+1280),c
 48041   0114B6  517D               	movf	(efgtoa@w+1)& (0+255),w,b
 48042   0114B8  0A80               	xorlw	128
 48043   0114BA  5858               	subwfb	??_efgtoa^(0+1280),w,c
 48044   0114BC  B0D8               	btfsc	status,0,c
 48045   0114BE  EF63  F08A         	goto	u27011
 48046   0114C2  EF65  F08A         	goto	u27010
 48047   0114C6                     u27011:
 48048   0114C6  EF74  F08A         	goto	l20369
 48049   0114CA                     u27010:
 48050   0114CA                     
 48051                           ; BSR set to: 5
 48052   0114CA  518D               	movf	efgtoa@n& (0+255),w,b
 48053   0114CC  5D86               	subwf	efgtoa@i& (0+255),w,b
 48054   0114CE  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48055   0114D0  0A80               	xorlw	128
 48056   0114D2  6E58               	movwf	??_efgtoa^(0+1280),c
 48057   0114D4  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 48058   0114D6  0A80               	xorlw	128
 48059   0114D8  5858               	subwfb	??_efgtoa^(0+1280),w,c
 48060   0114DA  A0D8               	btfss	status,0,c
 48061   0114DC  EF72  F08A         	goto	u27021
 48062   0114E0  EF74  F08A         	goto	u27020
 48063   0114E4                     u27021:
 48064   0114E4  EF48  F08A         	goto	l20361
 48065   0114E8                     u27020:
 48066   0114E8                     l20369:
 48067                           
 48068                           ; BSR set to: 5
 48069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 48070   0114E8  5188               	movf	efgtoa@sign& (0+255),w,b
 48071   0114EA  B4D8               	btfsc	status,2,c
 48072   0114EC  EF7A  F08A         	goto	u27031
 48073   0114F0  EF7C  F08A         	goto	u27030
 48074   0114F4                     u27031:
 48075   0114F4  EF87  F08A         	goto	l20373
 48076   0114F8                     u27030:
 48077   0114F8                     
 48078                           ; BSR set to: 5
 48079                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 48080   0114F8  078D               	decf	efgtoa@n& (0+255),f,b
 48081   0114FA  A0D8               	btfss	status,0,c
 48082   0114FC  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 48083   0114FE  0E28               	movlw	low _dbuf
 48084   011500  258D               	addwf	efgtoa@n& (0+255),w,b
 48085   011502  6ED9               	movwf	fsr2l,c
 48086   011504  0E08               	movlw	high _dbuf
 48087   011506  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48088   011508  6EDA               	movwf	fsr2h,c
 48089   01150A  C588  F4DF         	movff	efgtoa@sign,indf2
 48090   01150E                     l20373:
 48091                           
 48092                           ; BSR set to: 5
 48093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 48094   01150E  5186               	movf	efgtoa@i& (0+255),w,b
 48095   011510  5F7C               	subwf	efgtoa@w& (0+255),f,b
 48096   011512  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 48097   011514  5B7D               	subwfb	(efgtoa@w+1)& (0+255),f,b
 48098   011516                     
 48099                           ; BSR set to: 5
 48100                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 48101   011516  C560  F515         	movff	efgtoa@fp,pad@fp
 48102   01151A  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 48103   01151E  0E28               	movlw	low _dbuf
 48104   011520  258D               	addwf	efgtoa@n& (0+255),w,b
 48105   011522  6E17               	movwf	pad@buf^(0+1280),c
 48106   011524  0E08               	movlw	high _dbuf
 48107   011526  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48108   011528  6E18               	movwf	(pad@buf+1)^(0+1280),c
 48109   01152A  C57C  F519         	movff	efgtoa@w,pad@p
 48110   01152E  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 48111   011532  EC1F  F0F6         	call	_pad	;wreg free
 48112   011536                     l3469:
 48113   011536  0012               	return		;funcret
 48114   011538                     __end_of_efgtoa:
 48115                           	callstack 0
 48116                           
 48117 ;; *************** function _strcpy *****************
 48118 ;; Defined at:
 48119 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
 48120 ;; Parameters:    Size  Location     Type
 48121 ;;  dest            2    3[COMRAM] PTR unsigned char 
 48122 ;;		 -> dbuf(80), 
 48123 ;;  src             2    5[COMRAM] PTR const unsigned char 
 48124 ;;		 -> STR_203(4), STR_200(4), 
 48125 ;; Auto vars:     Size  Location     Type
 48126 ;;  d               2    7[COMRAM] PTR unsigned char 
 48127 ;;		 -> dbuf(80), 
 48128 ;; Return value:  Size  Location     Type
 48129 ;;                  2    3[COMRAM] PTR unsigned char 
 48130 ;; Registers used:
 48131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 48132 ;; Tracked objects:
 48133 ;;		On entry : 0/0
 48134 ;;		On exit  : 0/0
 48135 ;;		Unchanged: 0/0
 48136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48141 ;;Total ram usage:        6 bytes
 48142 ;; Hardware stack levels used: 1
 48143 ;; Hardware stack levels required when called: 1
 48144 ;; This function calls:
 48145 ;;		Nothing
 48146 ;; This function is called by:
 48147 ;;		_efgtoa
 48148 ;; This function uses a non-reentrant model
 48149 ;;
 48150                           
 48151                           	psect	text129
 48152   01FD7C                     __ptext129:
 48153                           	callstack 0
 48154   01FD7C                     _strcpy:
 48155                           	callstack 114
 48156   01FD7C  C504  F508         	movff	strcpy@dest,strcpy@d
 48157   01FD80  C505  F509         	movff	strcpy@dest+1,strcpy@d+1
 48158   01FD84                     l20057:
 48159   01FD84  C506  F4F6         	movff	strcpy@src,tblptrl
 48160   01FD88  C507  F4F7         	movff	strcpy@src+1,tblptrh
 48161   01FD8C  4A06               	infsnz	strcpy@src^(0+1280),f,c
 48162   01FD8E  2A07               	incf	(strcpy@src+1)^(0+1280),f,c
 48163   01FD90                     	if	0	;tblptru may be non-zero
 48164   01FD90                     	endif
 48165   01FD90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48166   01FD90  0E00               	movlw	low (__mediumconst shr (0+16))
 48167   01FD92  6EF8               	movwf	tblptru,c
 48168   01FD94                     	endif
 48169   01FD94  C508  F4D9         	movff	strcpy@d,fsr2l
 48170   01FD98  C509  F4DA         	movff	strcpy@d+1,fsr2h
 48171   01FD9C  4A08               	infsnz	strcpy@d^(0+1280),f,c
 48172   01FD9E  2A09               	incf	(strcpy@d+1)^(0+1280),f,c
 48173   01FDA0  0008               	tblrd		*
 48174   01FDA2  C4F5 F4DF          	movff	tablat,indf2
 48175   01FDA6  50DF               	movf	indf2,w,c
 48176   01FDA8  A4D8               	btfss	status,2,c
 48177   01FDAA  EFD9  F0FE         	goto	u26451
 48178   01FDAE  EFDB  F0FE         	goto	u26450
 48179   01FDB2                     u26451:
 48180   01FDB2  EFC2  F0FE         	goto	l20057
 48181   01FDB6                     u26450:
 48182   01FDB6  0012               	return		;funcret
 48183   01FDB8                     __end_of_strcpy:
 48184                           	callstack 0
 48185                           
 48186 ;; *************** function _memcpy *****************
 48187 ;; Defined at:
 48188 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
 48189 ;; Parameters:    Size  Location     Type
 48190 ;;  d1              2    3[COMRAM] PTR void 
 48191 ;;		 -> fs$win(512), dbuf(80), pb$fp(2), f_gets@s(4), 
 48192 ;;		 -> f_rename@djn(40), f_rename@buf(32), cin_file(512), fs(564), 
 48193 ;;		 -> disk_buf(128), NULL(0), tmp_buf(512), 
 48194 ;;  s1              2    5[COMRAM] PTR const void 
 48195 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), fs$win(512), 
 48196 ;;		 -> pb$buf(64), dbuf(80), f_printf@pb(70), f_puts@pb(70), 
 48197 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 48198 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), in_fl(546), 
 48199 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 48200 ;;  n               2    7[COMRAM] unsigned int 
 48201 ;; Auto vars:     Size  Location     Type
 48202 ;;  s               2   12[COMRAM] PTR const unsigned char 
 48203 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), fs$win(512), 
 48204 ;;		 -> pb$buf(64), dbuf(80), f_printf@pb(70), f_puts@pb(70), 
 48205 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 48206 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), in_fl(546), 
 48207 ;;		 -> fs(564), rom_fl(546), disk_buf(128), NULL(0), 
 48208 ;;  d               2   10[COMRAM] PTR unsigned char 
 48209 ;;		 -> fs$win(512), dbuf(80), pb$fp(2), f_gets@s(4), 
 48210 ;;		 -> f_rename@djn(40), f_rename@buf(32), cin_file(512), fs(564), 
 48211 ;;		 -> disk_buf(128), NULL(0), tmp_buf(512), 
 48212 ;;  tmp             1    9[COMRAM] unsigned char 
 48213 ;; Return value:  Size  Location     Type
 48214 ;;                  2    3[COMRAM] PTR void 
 48215 ;; Registers used:
 48216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48217 ;; Tracked objects:
 48218 ;;		On entry : 0/0
 48219 ;;		On exit  : 0/0
 48220 ;;		Unchanged: 0/0
 48221 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48225 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48226 ;;Total ram usage:       11 bytes
 48227 ;; Hardware stack levels used: 1
 48228 ;; Hardware stack levels required when called: 1
 48229 ;; This function calls:
 48230 ;;		Nothing
 48231 ;; This function is called by:
 48232 ;;		_dir_register
 48233 ;;		_f_read
 48234 ;;		_f_write
 48235 ;;		_efgtoa
 48236 ;;		_f_mkdir
 48237 ;;		_f_rename
 48238 ;; This function uses a non-reentrant model
 48239 ;;
 48240                           
 48241                           	psect	text130
 48242   01FA00                     __ptext130:
 48243                           	callstack 0
 48244   01FA00                     _memcpy:
 48245                           	callstack 114
 48246   01FA00  C506  F50D         	movff	memcpy@s1,memcpy@s
 48247   01FA04  C507  F50E         	movff	memcpy@s1+1,memcpy@s+1
 48248   01FA08  C504  F50B         	movff	memcpy@d1,memcpy@d
 48249   01FA0C  C505  F50C         	movff	memcpy@d1+1,memcpy@d+1
 48250   01FA10  EF1A  F0FD         	goto	l19571
 48251   01FA14                     l19563:
 48252   01FA14  C50D  F4D9         	movff	memcpy@s,fsr2l
 48253   01FA18  C50E  F4DA         	movff	memcpy@s+1,fsr2h
 48254   01FA1C  50DF               	movf	indf2,w,c
 48255   01FA1E  6E0A               	movwf	memcpy@tmp^(0+1280),c
 48256   01FA20  4A0D               	infsnz	memcpy@s^(0+1280),f,c
 48257   01FA22  2A0E               	incf	(memcpy@s+1)^(0+1280),f,c
 48258   01FA24  C50B  F4D9         	movff	memcpy@d,fsr2l
 48259   01FA28  C50C  F4DA         	movff	memcpy@d+1,fsr2h
 48260   01FA2C  C50A  F4DF         	movff	memcpy@tmp,indf2
 48261   01FA30  4A0B               	infsnz	memcpy@d^(0+1280),f,c
 48262   01FA32  2A0C               	incf	(memcpy@d+1)^(0+1280),f,c
 48263   01FA34                     l19571:
 48264   01FA34  0608               	decf	memcpy@n^(0+1280),f,c
 48265   01FA36  A0D8               	btfss	status,0,c
 48266   01FA38  0609               	decf	(memcpy@n+1)^(0+1280),f,c
 48267   01FA3A  2808               	incf	memcpy@n^(0+1280),w,c
 48268   01FA3C  E106               	bnz	u25621
 48269   01FA3E  2809               	incf	(memcpy@n+1)^(0+1280),w,c
 48270   01FA40  A4D8               	btfss	status,2,c
 48271   01FA42  EF25  F0FD         	goto	u25621
 48272   01FA46  EF27  F0FD         	goto	u25620
 48273   01FA4A                     u25621:
 48274   01FA4A  EF0A  F0FD         	goto	l19563
 48275   01FA4E                     u25620:
 48276   01FA4E  0012               	return		;funcret
 48277   01FA50                     __end_of_memcpy:
 48278                           	callstack 0
 48279                           
 48280 ;; *************** function _labs *****************
 48281 ;; Defined at:
 48282 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
 48283 ;; Parameters:    Size  Location     Type
 48284 ;;  a               4    3[COMRAM] long 
 48285 ;; Auto vars:     Size  Location     Type
 48286 ;;		None
 48287 ;; Return value:  Size  Location     Type
 48288 ;;                  4    3[COMRAM] long 
 48289 ;; Registers used:
 48290 ;;		wreg, status,2, status,0
 48291 ;; Tracked objects:
 48292 ;;		On entry : 0/0
 48293 ;;		On exit  : 0/0
 48294 ;;		Unchanged: 0/0
 48295 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48300 ;;Total ram usage:        8 bytes
 48301 ;; Hardware stack levels used: 1
 48302 ;; Hardware stack levels required when called: 1
 48303 ;; This function calls:
 48304 ;;		Nothing
 48305 ;; This function is called by:
 48306 ;;		_efgtoa
 48307 ;; This function uses a non-reentrant model
 48308 ;;
 48309                           
 48310                           	psect	text131
 48311   01F864                     __ptext131:
 48312                           	callstack 0
 48313   01F864                     _labs:
 48314                           	callstack 114
 48315   01F864  BE07               	btfsc	(labs@a+3)^(0+1280),7,c
 48316   01F866  EF37  F0FC         	goto	u26461
 48317   01F86A  EF39  F0FC         	goto	u26460
 48318   01F86E                     u26461:
 48319   01F86E  EF43  F0FC         	goto	l20063
 48320   01F872                     u26460:
 48321   01F872  C504  F504         	movff	labs@a,?_labs
 48322   01F876  C505  F505         	movff	labs@a+1,?_labs+1
 48323   01F87A  C506  F506         	movff	labs@a+2,?_labs+2
 48324   01F87E  C507  F507         	movff	labs@a+3,?_labs+3
 48325   01F882  EF5C  F0FC         	goto	l3657
 48326   01F886                     l20063:
 48327   01F886  C504  F508         	movff	labs@a,??_labs
 48328   01F88A  C505  F509         	movff	labs@a+1,??_labs+1
 48329   01F88E  C506  F50A         	movff	labs@a+2,??_labs+2
 48330   01F892  C507  F50B         	movff	labs@a+3,??_labs+3
 48331   01F896  1E08               	comf	??_labs^(0+1280),f,c
 48332   01F898  1E09               	comf	(??_labs+1)^(0+1280),f,c
 48333   01F89A  1E0A               	comf	(??_labs+2)^(0+1280),f,c
 48334   01F89C  1E0B               	comf	(??_labs+3)^(0+1280),f,c
 48335   01F89E  2A08               	incf	??_labs^(0+1280),f,c
 48336   01F8A0  0E00               	movlw	0
 48337   01F8A2  2209               	addwfc	(??_labs+1)^(0+1280),f,c
 48338   01F8A4  220A               	addwfc	(??_labs+2)^(0+1280),f,c
 48339   01F8A6  220B               	addwfc	(??_labs+3)^(0+1280),f,c
 48340   01F8A8  C508  F504         	movff	??_labs,?_labs
 48341   01F8AC  C509  F505         	movff	??_labs+1,?_labs+1
 48342   01F8B0  C50A  F506         	movff	??_labs+2,?_labs+2
 48343   01F8B4  C50B  F507         	movff	??_labs+3,?_labs+3
 48344   01F8B8                     l3657:
 48345   01F8B8  0012               	return		;funcret
 48346   01F8BA                     __end_of_labs:
 48347                           	callstack 0
 48348                           
 48349 ;; *************** function _floorf *****************
 48350 ;; Defined at:
 48351 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
 48352 ;; Parameters:    Size  Location     Type
 48353 ;;  x               4   67[COMRAM] float 
 48354 ;; Auto vars:     Size  Location     Type
 48355 ;;  u               4   83[COMRAM] struct .
 48356 ;;  m               4   77[COMRAM] unsigned long 
 48357 ;;  e               2   81[COMRAM] int 
 48358 ;; Return value:  Size  Location     Type
 48359 ;;                  4   67[COMRAM] float 
 48360 ;; Registers used:
 48361 ;;		wreg, status,2, status,0
 48362 ;; Tracked objects:
 48363 ;;		On entry : 0/0
 48364 ;;		On exit  : 0/0
 48365 ;;		Unchanged: 0/0
 48366 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48368 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48369 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48370 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48371 ;;Total ram usage:       20 bytes
 48372 ;; Hardware stack levels used: 1
 48373 ;; Hardware stack levels required when called: 1
 48374 ;; This function calls:
 48375 ;;		Nothing
 48376 ;; This function is called by:
 48377 ;;		_efgtoa
 48378 ;; This function uses a non-reentrant model
 48379 ;;
 48380                           
 48381                           	psect	text132
 48382   01A104                     __ptext132:
 48383                           	callstack 0
 48384   01A104                     _floorf:
 48385                           	callstack 114
 48386   01A104  C81C  F554         	movff	floorf@F521,floorf@u
 48387   01A108  C81D  F555         	movff	floorf@F521+1,floorf@u+1
 48388   01A10C  C81E  F556         	movff	floorf@F521+2,floorf@u+2
 48389   01A110  C81F  F557         	movff	floorf@F521+3,floorf@u+3
 48390   01A114  C544  F554         	movff	floorf@x,floorf@u
 48391   01A118  C545  F555         	movff	floorf@x+1,floorf@u+1
 48392   01A11C  C546  F556         	movff	floorf@x+2,floorf@u+2
 48393   01A120  C547  F557         	movff	floorf@x+3,floorf@u+3
 48394   01A124  0E81               	movlw	129
 48395   01A126  6E48               	movwf	??_floorf^(0+1280),c
 48396   01A128  0EFF               	movlw	255
 48397   01A12A  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48398   01A12C  C554  F54A         	movff	floorf@u,??_floorf+2
 48399   01A130  C555  F54B         	movff	floorf@u+1,??_floorf+3
 48400   01A134  C556  F54C         	movff	floorf@u+2,??_floorf+4
 48401   01A138  C557  F54D         	movff	floorf@u+3,??_floorf+5
 48402   01A13C  0E18               	movlw	24
 48403   01A13E  EFA6  F0D0         	goto	u26470
 48404   01A142                     u26475:
 48405   01A142  90D8               	bcf	status,0,c
 48406   01A144  324D               	rrcf	(??_floorf+5)^(0+1280),f,c
 48407   01A146  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 48408   01A148  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48409   01A14A  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48410   01A14C                     u26470:
 48411   01A14C  2EE8               	decfsz	wreg,f,c
 48412   01A14E  EFA1  F0D0         	goto	u26475
 48413   01A152  504A               	movf	(??_floorf+2)^(0+1280),w,c
 48414   01A154  2448               	addwf	??_floorf^(0+1280),w,c
 48415   01A156  6E52               	movwf	floorf@e^(0+1280),c
 48416   01A158  0E00               	movlw	0
 48417   01A15A  2049               	addwfc	(??_floorf+1)^(0+1280),w,c
 48418   01A15C  6E53               	movwf	(floorf@e+1)^(0+1280),c
 48419   01A15E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 48420   01A160  EFBB  F0D0         	goto	u26481
 48421   01A164  5053               	movf	(floorf@e+1)^(0+1280),w,c
 48422   01A166  E109               	bnz	u26480
 48423   01A168  0E17               	movlw	23
 48424   01A16A  5C52               	subwf	floorf@e^(0+1280),w,c
 48425   01A16C  A0D8               	btfss	status,0,c
 48426   01A16E  EFBB  F0D0         	goto	u26481
 48427   01A172  EFBD  F0D0         	goto	u26480
 48428   01A176                     u26481:
 48429   01A176  EFC7  F0D0         	goto	l20073
 48430   01A17A                     u26480:
 48431   01A17A                     l20071:
 48432   01A17A  C544  F544         	movff	floorf@x,?_floorf
 48433   01A17E  C545  F545         	movff	floorf@x+1,?_floorf+1
 48434   01A182  C546  F546         	movff	floorf@x+2,?_floorf+2
 48435   01A186  C547  F547         	movff	floorf@x+3,?_floorf+3
 48436   01A18A  EF8A  F0D1         	goto	l3643
 48437   01A18E                     l20073:
 48438   01A18E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 48439   01A190  EFCC  F0D0         	goto	u26491
 48440   01A194  EFCE  F0D0         	goto	u26490
 48441   01A198                     u26491:
 48442   01A198  EF3E  F0D1         	goto	l20083
 48443   01A19C                     u26490:
 48444   01A19C  C552  F548         	movff	floorf@e,??_floorf
 48445   01A1A0  0EFF               	movlw	255
 48446   01A1A2  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48447   01A1A4  0EFF               	movlw	255
 48448   01A1A6  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48449   01A1A8  0E7F               	movlw	127
 48450   01A1AA  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48451   01A1AC  0E00               	movlw	0
 48452   01A1AE  6E4C               	movwf	(??_floorf+4)^(0+1280),c
 48453   01A1B0                     u26505:
 48454   01A1B0  6648               	tstfsz	??_floorf^(0+1280),c
 48455   01A1B2  EFDD  F0D0         	goto	u26506
 48456   01A1B6  EFE5  F0D0         	goto	u26507
 48457   01A1BA                     u26506:
 48458   01A1BA  344C               	rlcf	(??_floorf+4)^(0+1280),w,c
 48459   01A1BC  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 48460   01A1BE  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48461   01A1C0  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48462   01A1C2  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48463   01A1C4  2E48               	decfsz	??_floorf^(0+1280),f,c
 48464   01A1C6  EFD8  F0D0         	goto	u26505
 48465   01A1CA                     u26507:
 48466   01A1CA  C549  F54E         	movff	??_floorf+1,floorf@m
 48467   01A1CE  C54A  F54F         	movff	??_floorf+2,floorf@m+1
 48468   01A1D2  C54B  F550         	movff	??_floorf+3,floorf@m+2
 48469   01A1D6  C54C  F551         	movff	??_floorf+4,floorf@m+3
 48470   01A1DA  504E               	movf	floorf@m^(0+1280),w,c
 48471   01A1DC  1454               	andwf	floorf@u^(0+1280),w,c
 48472   01A1DE  6E48               	movwf	??_floorf^(0+1280),c
 48473   01A1E0  504F               	movf	(floorf@m+1)^(0+1280),w,c
 48474   01A1E2  1455               	andwf	(floorf@u+1)^(0+1280),w,c
 48475   01A1E4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48476   01A1E6  5050               	movf	(floorf@m+2)^(0+1280),w,c
 48477   01A1E8  1456               	andwf	(floorf@u+2)^(0+1280),w,c
 48478   01A1EA  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48479   01A1EC  5051               	movf	(floorf@m+3)^(0+1280),w,c
 48480   01A1EE  1457               	andwf	(floorf@u+3)^(0+1280),w,c
 48481   01A1F0  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48482   01A1F2  5048               	movf	??_floorf^(0+1280),w,c
 48483   01A1F4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48484   01A1F6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48485   01A1F8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48486   01A1FA  A4D8               	btfss	status,2,c
 48487   01A1FC  EF02  F0D1         	goto	u26511
 48488   01A200  EF04  F0D1         	goto	u26510
 48489   01A204                     u26511:
 48490   01A204  EF06  F0D1         	goto	l20079
 48491   01A208                     u26510:
 48492   01A208  EFBD  F0D0         	goto	l20071
 48493   01A20C                     l20079:
 48494   01A20C  C554  F548         	movff	floorf@u,??_floorf
 48495   01A210  C555  F549         	movff	floorf@u+1,??_floorf+1
 48496   01A214  C556  F54A         	movff	floorf@u+2,??_floorf+2
 48497   01A218  C557  F54B         	movff	floorf@u+3,??_floorf+3
 48498   01A21C  0E20               	movlw	32
 48499   01A21E  EF16  F0D1         	goto	u26520
 48500   01A222                     u26525:
 48501   01A222  90D8               	bcf	status,0,c
 48502   01A224  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48503   01A226  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48504   01A228  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48505   01A22A  3248               	rrcf	??_floorf^(0+1280),f,c
 48506   01A22C                     u26520:
 48507   01A22C  2EE8               	decfsz	wreg,f,c
 48508   01A22E  EF11  F0D1         	goto	u26525
 48509   01A232  5048               	movf	??_floorf^(0+1280),w,c
 48510   01A234  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48511   01A236  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48512   01A238  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48513   01A23A  B4D8               	btfsc	status,2,c
 48514   01A23C  EF22  F0D1         	goto	u26531
 48515   01A240  EF24  F0D1         	goto	u26530
 48516   01A244                     u26531:
 48517   01A244  EF2C  F0D1         	goto	l3646
 48518   01A248                     u26530:
 48519   01A248  504E               	movf	floorf@m^(0+1280),w,c
 48520   01A24A  2654               	addwf	floorf@u^(0+1280),f,c
 48521   01A24C  504F               	movf	(floorf@m+1)^(0+1280),w,c
 48522   01A24E  2255               	addwfc	(floorf@u+1)^(0+1280),f,c
 48523   01A250  5050               	movf	(floorf@m+2)^(0+1280),w,c
 48524   01A252  2256               	addwfc	(floorf@u+2)^(0+1280),f,c
 48525   01A254  5051               	movf	(floorf@m+3)^(0+1280),w,c
 48526   01A256  2257               	addwfc	(floorf@u+3)^(0+1280),f,c
 48527   01A258                     l3646:
 48528   01A258  1C4E               	comf	floorf@m^(0+1280),w,c
 48529   01A25A  6E48               	movwf	??_floorf^(0+1280),c
 48530   01A25C  1C4F               	comf	(floorf@m+1)^(0+1280),w,c
 48531   01A25E  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48532   01A260  1C50               	comf	(floorf@m+2)^(0+1280),w,c
 48533   01A262  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48534   01A264  1C51               	comf	(floorf@m+3)^(0+1280),w,c
 48535   01A266  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48536   01A268  5048               	movf	??_floorf^(0+1280),w,c
 48537   01A26A  1654               	andwf	floorf@u^(0+1280),f,c
 48538   01A26C  5049               	movf	(??_floorf+1)^(0+1280),w,c
 48539   01A26E  1655               	andwf	(floorf@u+1)^(0+1280),f,c
 48540   01A270  504A               	movf	(??_floorf+2)^(0+1280),w,c
 48541   01A272  1656               	andwf	(floorf@u+2)^(0+1280),f,c
 48542   01A274  504B               	movf	(??_floorf+3)^(0+1280),w,c
 48543   01A276  1657               	andwf	(floorf@u+3)^(0+1280),f,c
 48544   01A278  EF82  F0D1         	goto	l20091
 48545   01A27C                     l20083:
 48546   01A27C  C554  F548         	movff	floorf@u,??_floorf
 48547   01A280  C555  F549         	movff	floorf@u+1,??_floorf+1
 48548   01A284  C556  F54A         	movff	floorf@u+2,??_floorf+2
 48549   01A288  C557  F54B         	movff	floorf@u+3,??_floorf+3
 48550   01A28C  0E20               	movlw	32
 48551   01A28E  EF4E  F0D1         	goto	u26540
 48552   01A292                     u26545:
 48553   01A292  90D8               	bcf	status,0,c
 48554   01A294  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 48555   01A296  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 48556   01A298  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 48557   01A29A  3248               	rrcf	??_floorf^(0+1280),f,c
 48558   01A29C                     u26540:
 48559   01A29C  2EE8               	decfsz	wreg,f,c
 48560   01A29E  EF49  F0D1         	goto	u26545
 48561   01A2A2  5048               	movf	??_floorf^(0+1280),w,c
 48562   01A2A4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48563   01A2A6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48564   01A2A8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48565   01A2AA  A4D8               	btfss	status,2,c
 48566   01A2AC  EF5A  F0D1         	goto	u26551
 48567   01A2B0  EF5C  F0D1         	goto	u26550
 48568   01A2B4                     u26551:
 48569   01A2B4  EF66  F0D1         	goto	l20087
 48570   01A2B8                     u26550:
 48571   01A2B8  0E00               	movlw	0
 48572   01A2BA  6E54               	movwf	floorf@u^(0+1280),c
 48573   01A2BC  0E00               	movlw	0
 48574   01A2BE  6E55               	movwf	(floorf@u+1)^(0+1280),c
 48575   01A2C0  0E00               	movlw	0
 48576   01A2C2  6E56               	movwf	(floorf@u+2)^(0+1280),c
 48577   01A2C4  0E00               	movlw	0
 48578   01A2C6  6E57               	movwf	(floorf@u+3)^(0+1280),c
 48579   01A2C8  EF82  F0D1         	goto	l20091
 48580   01A2CC                     l20087:
 48581   01A2CC  90D8               	bcf	status,0,c
 48582   01A2CE  3454               	rlcf	floorf@u^(0+1280),w,c
 48583   01A2D0  6E48               	movwf	??_floorf^(0+1280),c
 48584   01A2D2  3455               	rlcf	(floorf@u+1)^(0+1280),w,c
 48585   01A2D4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 48586   01A2D6  3456               	rlcf	(floorf@u+2)^(0+1280),w,c
 48587   01A2D8  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 48588   01A2DA  3457               	rlcf	(floorf@u+3)^(0+1280),w,c
 48589   01A2DC  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 48590   01A2DE  5048               	movf	??_floorf^(0+1280),w,c
 48591   01A2E0  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 48592   01A2E2  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 48593   01A2E4  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 48594   01A2E6  B4D8               	btfsc	status,2,c
 48595   01A2E8  EF78  F0D1         	goto	u26561
 48596   01A2EC  EF7A  F0D1         	goto	u26560
 48597   01A2F0                     u26561:
 48598   01A2F0  EF82  F0D1         	goto	l20091
 48599   01A2F4                     u26560:
 48600   01A2F4  0E00               	movlw	0
 48601   01A2F6  6E54               	movwf	floorf@u^(0+1280),c
 48602   01A2F8  0E00               	movlw	0
 48603   01A2FA  6E55               	movwf	(floorf@u+1)^(0+1280),c
 48604   01A2FC  0E80               	movlw	128
 48605   01A2FE  6E56               	movwf	(floorf@u+2)^(0+1280),c
 48606   01A300  0EBF               	movlw	191
 48607   01A302  6E57               	movwf	(floorf@u+3)^(0+1280),c
 48608   01A304                     l20091:
 48609   01A304  C554  F544         	movff	floorf@u,?_floorf
 48610   01A308  C555  F545         	movff	floorf@u+1,?_floorf+1
 48611   01A30C  C556  F546         	movff	floorf@u+2,?_floorf+2
 48612   01A310  C557  F547         	movff	floorf@u+3,?_floorf+3
 48613   01A314                     l3643:
 48614   01A314  0012               	return		;funcret
 48615   01A316                     __end_of_floorf:
 48616                           	callstack 0
 48617                           
 48618 ;; *************** function ___fpclassifyf *****************
 48619 ;; Defined at:
 48620 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
 48621 ;; Parameters:    Size  Location     Type
 48622 ;;  x               4    3[COMRAM] float 
 48623 ;; Auto vars:     Size  Location     Type
 48624 ;;  u               4   13[COMRAM] struct .
 48625 ;;  e               2   11[COMRAM] int 
 48626 ;; Return value:  Size  Location     Type
 48627 ;;                  2    3[COMRAM] int 
 48628 ;; Registers used:
 48629 ;;		wreg, status,2, status,0
 48630 ;; Tracked objects:
 48631 ;;		On entry : 0/0
 48632 ;;		On exit  : 0/0
 48633 ;;		Unchanged: 0/0
 48634 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48636 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48638 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48639 ;;Total ram usage:       14 bytes
 48640 ;; Hardware stack levels used: 1
 48641 ;; Hardware stack levels required when called: 1
 48642 ;; This function calls:
 48643 ;;		Nothing
 48644 ;; This function is called by:
 48645 ;;		_efgtoa
 48646 ;;		_ftoa
 48647 ;; This function uses a non-reentrant model
 48648 ;;
 48649                           
 48650                           	psect	text133
 48651   01D544                     __ptext133:
 48652                           	callstack 0
 48653   01D544                     ___fpclassifyf:
 48654                           	callstack 114
 48655   01D544  C820  F50E         	movff	___fpclassifyf@F465,___fpclassifyf@u
 48656   01D548  C821  F50F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 48657   01D54C  C822  F510         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 48658   01D550  C823  F511         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 48659   01D554  C504  F50E         	movff	___fpclassifyf@x,___fpclassifyf@u
 48660   01D558  C505  F50F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 48661   01D55C  C506  F510         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 48662   01D560  C507  F511         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 48663   01D564  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 48664   01D568  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 48665   01D56C  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 48666   01D570  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 48667   01D574  0E18               	movlw	24
 48668   01D576  EFC2  F0EA         	goto	u25630
 48669   01D57A                     u25635:
 48670   01D57A  90D8               	bcf	status,0,c
 48671   01D57C  320B               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 48672   01D57E  320A               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 48673   01D580  3209               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 48674   01D582  3208               	rrcf	??___fpclassifyf^(0+1280),f,c
 48675   01D584                     u25630:
 48676   01D584  2EE8               	decfsz	wreg,f,c
 48677   01D586  EFBD  F0EA         	goto	u25635
 48678   01D58A  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48679   01D58C  6E0C               	movwf	___fpclassifyf@e^(0+1280),c
 48680   01D58E  6A0D               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 48681   01D590  500C               	movf	___fpclassifyf@e^(0+1280),w,c
 48682   01D592  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 48683   01D594  A4D8               	btfss	status,2,c
 48684   01D596  EFCF  F0EA         	goto	u25641
 48685   01D59A  EFD1  F0EA         	goto	u25640
 48686   01D59E                     u25641:
 48687   01D59E  EFF1  F0EA         	goto	l19585
 48688   01D5A2                     u25640:
 48689   01D5A2  90D8               	bcf	status,0,c
 48690   01D5A4  340E               	rlcf	___fpclassifyf@u^(0+1280),w,c
 48691   01D5A6  6E08               	movwf	??___fpclassifyf^(0+1280),c
 48692   01D5A8  340F               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 48693   01D5AA  6E09               	movwf	(??___fpclassifyf+1)^(0+1280),c
 48694   01D5AC  3410               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 48695   01D5AE  6E0A               	movwf	(??___fpclassifyf+2)^(0+1280),c
 48696   01D5B0  3411               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 48697   01D5B2  6E0B               	movwf	(??___fpclassifyf+3)^(0+1280),c
 48698   01D5B4  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48699   01D5B6  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 48700   01D5B8  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 48701   01D5BA  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 48702   01D5BC  A4D8               	btfss	status,2,c
 48703   01D5BE  EFE3  F0EA         	goto	u25651
 48704   01D5C2  EFE5  F0EA         	goto	u25650
 48705   01D5C6                     u25651:
 48706   01D5C6  EFEB  F0EA         	goto	l19581
 48707   01D5CA                     u25650:
 48708   01D5CA  0E00               	movlw	0
 48709   01D5CC  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48710   01D5CE  0E02               	movlw	2
 48711   01D5D0  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48712   01D5D2  EF20  F0EB         	goto	l3308
 48713   01D5D6                     l19581:
 48714   01D5D6  0E00               	movlw	0
 48715   01D5D8  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48716   01D5DA  0E03               	movlw	3
 48717   01D5DC  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48718   01D5DE  EF20  F0EB         	goto	l3308
 48719   01D5E2                     l19585:
 48720   01D5E2  280C               	incf	___fpclassifyf@e^(0+1280),w,c
 48721   01D5E4  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 48722   01D5E6  A4D8               	btfss	status,2,c
 48723   01D5E8  EFF8  F0EA         	goto	u25661
 48724   01D5EC  EFFA  F0EA         	goto	u25660
 48725   01D5F0                     u25661:
 48726   01D5F0  EF1C  F0EB         	goto	l19591
 48727   01D5F4                     u25660:
 48728   01D5F4  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 48729   01D5F8  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 48730   01D5FC  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 48731   01D600  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 48732   01D604  0E09               	movlw	9
 48733   01D606                     u25675:
 48734   01D606  90D8               	bcf	status,0,c
 48735   01D608  3608               	rlcf	??___fpclassifyf^(0+1280),f,c
 48736   01D60A  3609               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 48737   01D60C  360A               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 48738   01D60E  360B               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 48739   01D610  2EE8               	decfsz	wreg,f,c
 48740   01D612  EF03  F0EB         	goto	u25675
 48741   01D616  5008               	movf	??___fpclassifyf^(0+1280),w,c
 48742   01D618  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 48743   01D61A  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 48744   01D61C  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 48745   01D61E  B4D8               	btfsc	status,2,c
 48746   01D620  EF14  F0EB         	goto	u25681
 48747   01D624  EF17  F0EB         	goto	u25680
 48748   01D628                     u25681:
 48749   01D628  0E01               	movlw	1
 48750   01D62A  EF18  F0EB         	goto	u25690
 48751   01D62E                     u25680:
 48752   01D62E  0E00               	movlw	0
 48753   01D630                     u25690:
 48754   01D630  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48755   01D632  6A05               	clrf	(?___fpclassifyf+1)^(0+1280),c
 48756   01D634  EF20  F0EB         	goto	l3308
 48757   01D638                     l19591:
 48758   01D638  0E00               	movlw	0
 48759   01D63A  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 48760   01D63C  0E04               	movlw	4
 48761   01D63E  6E04               	movwf	?___fpclassifyf^(0+1280),c
 48762   01D640                     l3308:
 48763   01D640  0012               	return		;funcret
 48764   01D642                     __end_of___fpclassifyf:
 48765                           	callstack 0
 48766                           
 48767 ;; *************** function ___fltol *****************
 48768 ;; Defined at:
 48769 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 48770 ;; Parameters:    Size  Location     Type
 48771 ;;  f1              4    3[COMRAM] int 
 48772 ;; Auto vars:     Size  Location     Type
 48773 ;;  exp1            1   12[COMRAM] unsigned char 
 48774 ;;  sign1           1   11[COMRAM] unsigned char 
 48775 ;; Return value:  Size  Location     Type
 48776 ;;                  4    3[COMRAM] long 
 48777 ;; Registers used:
 48778 ;;		wreg, status,2, status,0
 48779 ;; Tracked objects:
 48780 ;;		On entry : 0/0
 48781 ;;		On exit  : 0/0
 48782 ;;		Unchanged: 0/0
 48783 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48787 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48788 ;;Total ram usage:       10 bytes
 48789 ;; Hardware stack levels used: 1
 48790 ;; Hardware stack levels required when called: 1
 48791 ;; This function calls:
 48792 ;;		Nothing
 48793 ;; This function is called by:
 48794 ;;		_efgtoa
 48795 ;;		_ftoa
 48796 ;; This function uses a non-reentrant model
 48797 ;;
 48798                           
 48799                           	psect	text134
 48800   01D038                     __ptext134:
 48801                           	callstack 0
 48802   01D038                     ___fltol:
 48803                           	callstack 114
 48804   01D038  3406               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 48805   01D03A  3407               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 48806   01D03C  6E0D               	movwf	___fltol@exp1^(0+1280),c
 48807   01D03E  500D               	movf	___fltol@exp1^(0+1280),w,c
 48808   01D040  A4D8               	btfss	status,2,c
 48809   01D042  EF25  F0E8         	goto	u26331
 48810   01D046  EF27  F0E8         	goto	u26330
 48811   01D04A                     u26331:
 48812   01D04A  EF31  F0E8         	goto	l19997
 48813   01D04E                     u26330:
 48814   01D04E                     l19993:
 48815   01D04E  0E00               	movlw	0
 48816   01D050  6E04               	movwf	?___fltol^(0+1280),c
 48817   01D052  0E00               	movlw	0
 48818   01D054  6E05               	movwf	(?___fltol+1)^(0+1280),c
 48819   01D056  0E00               	movlw	0
 48820   01D058  6E06               	movwf	(?___fltol+2)^(0+1280),c
 48821   01D05A  0E00               	movlw	0
 48822   01D05C  6E07               	movwf	(?___fltol+3)^(0+1280),c
 48823   01D05E  EF9E  F0E8         	goto	l2924
 48824   01D062                     l19997:
 48825   01D062  C504  F508         	movff	___fltol@f1,??___fltol
 48826   01D066  C505  F509         	movff	___fltol@f1+1,??___fltol+1
 48827   01D06A  C506  F50A         	movff	___fltol@f1+2,??___fltol+2
 48828   01D06E  C507  F50B         	movff	___fltol@f1+3,??___fltol+3
 48829   01D072  0E20               	movlw	32
 48830   01D074  EF41  F0E8         	goto	u26340
 48831   01D078                     u26345:
 48832   01D078  90D8               	bcf	status,0,c
 48833   01D07A  320B               	rrcf	(??___fltol+3)^(0+1280),f,c
 48834   01D07C  320A               	rrcf	(??___fltol+2)^(0+1280),f,c
 48835   01D07E  3209               	rrcf	(??___fltol+1)^(0+1280),f,c
 48836   01D080  3208               	rrcf	??___fltol^(0+1280),f,c
 48837   01D082                     u26340:
 48838   01D082  2EE8               	decfsz	wreg,f,c
 48839   01D084  EF3C  F0E8         	goto	u26345
 48840   01D088  5008               	movf	??___fltol^(0+1280),w,c
 48841   01D08A  6E0C               	movwf	___fltol@sign1^(0+1280),c
 48842   01D08C  8E06               	bsf	(___fltol@f1+2)^(0+1280),7,c
 48843   01D08E  0EFF               	movlw	255
 48844   01D090  1604               	andwf	___fltol@f1^(0+1280),f,c
 48845   01D092  0EFF               	movlw	255
 48846   01D094  1605               	andwf	(___fltol@f1+1)^(0+1280),f,c
 48847   01D096  0EFF               	movlw	255
 48848   01D098  1606               	andwf	(___fltol@f1+2)^(0+1280),f,c
 48849   01D09A  0E00               	movlw	0
 48850   01D09C  1607               	andwf	(___fltol@f1+3)^(0+1280),f,c
 48851   01D09E  0E96               	movlw	150
 48852   01D0A0  5E0D               	subwf	___fltol@exp1^(0+1280),f,c
 48853   01D0A2  BE0D               	btfsc	___fltol@exp1^(0+1280),7,c
 48854   01D0A4  EF58  F0E8         	goto	u26350
 48855   01D0A8  EF56  F0E8         	goto	u26351
 48856   01D0AC                     u26351:
 48857   01D0AC  EF6E  F0E8         	goto	l20017
 48858   01D0B0                     u26350:
 48859   01D0B0  500D               	movf	___fltol@exp1^(0+1280),w,c
 48860   01D0B2  0A80               	xorlw	128
 48861   01D0B4  0F97               	addlw	151
 48862   01D0B6  B0D8               	btfsc	status,0,c
 48863   01D0B8  EF60  F0E8         	goto	u26361
 48864   01D0BC  EF62  F0E8         	goto	u26360
 48865   01D0C0                     u26361:
 48866   01D0C0  EF64  F0E8         	goto	l20013
 48867   01D0C4                     u26360:
 48868   01D0C4  EF27  F0E8         	goto	l19993
 48869   01D0C8                     l20013:
 48870   01D0C8  90D8               	bcf	status,0,c
 48871   01D0CA  3207               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 48872   01D0CC  3206               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 48873   01D0CE  3205               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 48874   01D0D0  3204               	rrcf	___fltol@f1^(0+1280),f,c
 48875   01D0D2  3E0D               	incfsz	___fltol@exp1^(0+1280),f,c
 48876   01D0D4  EF64  F0E8         	goto	l20013
 48877   01D0D8  EF86  F0E8         	goto	l20027
 48878   01D0DC                     l20017:
 48879   01D0DC  0E1F               	movlw	31
 48880   01D0DE  640D               	cpfsgt	___fltol@exp1^(0+1280),c
 48881   01D0E0  EF74  F0E8         	goto	u26371
 48882   01D0E4  EF76  F0E8         	goto	u26370
 48883   01D0E8                     u26371:
 48884   01D0E8  EF7E  F0E8         	goto	l20025
 48885   01D0EC                     u26370:
 48886   01D0EC  EF27  F0E8         	goto	l19993
 48887   01D0F0                     l20023:
 48888   01D0F0  90D8               	bcf	status,0,c
 48889   01D0F2  3604               	rlcf	___fltol@f1^(0+1280),f,c
 48890   01D0F4  3605               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 48891   01D0F6  3606               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 48892   01D0F8  3607               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 48893   01D0FA  060D               	decf	___fltol@exp1^(0+1280),f,c
 48894   01D0FC                     l20025:
 48895   01D0FC  500D               	movf	___fltol@exp1^(0+1280),w,c
 48896   01D0FE  A4D8               	btfss	status,2,c
 48897   01D100  EF84  F0E8         	goto	u26381
 48898   01D104  EF86  F0E8         	goto	u26380
 48899   01D108                     u26381:
 48900   01D108  EF78  F0E8         	goto	l20023
 48901   01D10C                     u26380:
 48902   01D10C                     l20027:
 48903   01D10C  500C               	movf	___fltol@sign1^(0+1280),w,c
 48904   01D10E  B4D8               	btfsc	status,2,c
 48905   01D110  EF8C  F0E8         	goto	u26391
 48906   01D114  EF8E  F0E8         	goto	u26390
 48907   01D118                     u26391:
 48908   01D118  EF96  F0E8         	goto	l20031
 48909   01D11C                     u26390:
 48910   01D11C  1E07               	comf	(___fltol@f1+3)^(0+1280),f,c
 48911   01D11E  1E06               	comf	(___fltol@f1+2)^(0+1280),f,c
 48912   01D120  1E05               	comf	(___fltol@f1+1)^(0+1280),f,c
 48913   01D122  6C04               	negf	___fltol@f1^(0+1280),c
 48914   01D124  0E00               	movlw	0
 48915   01D126  2205               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 48916   01D128  2206               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 48917   01D12A  2207               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 48918   01D12C                     l20031:
 48919   01D12C  C504  F504         	movff	___fltol@f1,?___fltol
 48920   01D130  C505  F505         	movff	___fltol@f1+1,?___fltol+1
 48921   01D134  C506  F506         	movff	___fltol@f1+2,?___fltol+2
 48922   01D138  C507  F507         	movff	___fltol@f1+3,?___fltol+3
 48923   01D13C                     l2924:
 48924   01D13C  0012               	return		;funcret
 48925   01D13E                     __end_of___fltol:
 48926                           	callstack 0
 48927                           
 48928 ;; *************** function ___flsub *****************
 48929 ;; Defined at:
 48930 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 48931 ;; Parameters:    Size  Location     Type
 48932 ;;  b               4   42[COMRAM] long 
 48933 ;;  a               4   46[COMRAM] long 
 48934 ;; Auto vars:     Size  Location     Type
 48935 ;;		None
 48936 ;; Return value:  Size  Location     Type
 48937 ;;                  4   42[COMRAM] long 
 48938 ;; Registers used:
 48939 ;;		wreg, status,2, status,0, cstack
 48940 ;; Tracked objects:
 48941 ;;		On entry : 0/0
 48942 ;;		On exit  : 0/0
 48943 ;;		Unchanged: 0/0
 48944 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 48945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48949 ;;Total ram usage:        8 bytes
 48950 ;; Hardware stack levels used: 1
 48951 ;; Hardware stack levels required when called: 2
 48952 ;; This function calls:
 48953 ;;		___fladd
 48954 ;; This function is called by:
 48955 ;;		_efgtoa
 48956 ;;		_ftoa
 48957 ;; This function uses a non-reentrant model
 48958 ;;
 48959                           
 48960                           	psect	text135
 48961   01FB72                     __ptext135:
 48962                           	callstack 0
 48963   01FB72                     ___flsub:
 48964                           	callstack 113
 48965   01FB72  0E00               	movlw	0
 48966   01FB74  1A2F               	xorwf	___flsub@a^(0+1280),f,c
 48967   01FB76  0E00               	movlw	0
 48968   01FB78  1A30               	xorwf	(___flsub@a+1)^(0+1280),f,c
 48969   01FB7A  0E00               	movlw	0
 48970   01FB7C  1A31               	xorwf	(___flsub@a+2)^(0+1280),f,c
 48971   01FB7E  0E80               	movlw	128
 48972   01FB80  1A32               	xorwf	(___flsub@a+3)^(0+1280),f,c
 48973   01FB82  C52B  F504         	movff	___flsub@b,___fladd@b
 48974   01FB86  C52C  F505         	movff	___flsub@b+1,___fladd@b+1
 48975   01FB8A  C52D  F506         	movff	___flsub@b+2,___fladd@b+2
 48976   01FB8E  C52E  F507         	movff	___flsub@b+3,___fladd@b+3
 48977   01FB92  C52F  F508         	movff	___flsub@a,___fladd@a
 48978   01FB96  C530  F509         	movff	___flsub@a+1,___fladd@a+1
 48979   01FB9A  C531  F50A         	movff	___flsub@a+2,___fladd@a+2
 48980   01FB9E  C532  F50B         	movff	___flsub@a+3,___fladd@a+3
 48981   01FBA2  EC38  F0A5         	call	___fladd	;wreg free
 48982   01FBA6  C504  F52B         	movff	?___fladd,?___flsub
 48983   01FBAA  C505  F52C         	movff	?___fladd+1,?___flsub+1
 48984   01FBAE  C506  F52D         	movff	?___fladd+2,?___flsub+2
 48985   01FBB2  C507  F52E         	movff	?___fladd+3,?___flsub+3
 48986   01FBB6  0012               	return		;funcret
 48987   01FBB8                     __end_of___flsub:
 48988                           	callstack 0
 48989                           
 48990 ;; *************** function ___fladd *****************
 48991 ;; Defined at:
 48992 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 48993 ;; Parameters:    Size  Location     Type
 48994 ;;  b               4    3[COMRAM] long 
 48995 ;;  a               4    7[COMRAM] long 
 48996 ;; Auto vars:     Size  Location     Type
 48997 ;;  grs             1   18[COMRAM] unsigned char 
 48998 ;;  bexp            1   17[COMRAM] unsigned char 
 48999 ;;  aexp            1   16[COMRAM] unsigned char 
 49000 ;;  signs           1   15[COMRAM] unsigned char 
 49001 ;; Return value:  Size  Location     Type
 49002 ;;                  4    3[COMRAM] unsigned char 
 49003 ;; Registers used:
 49004 ;;		wreg, status,2, status,0
 49005 ;; Tracked objects:
 49006 ;;		On entry : 0/0
 49007 ;;		On exit  : 0/0
 49008 ;;		Unchanged: 0/0
 49009 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 49010 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49013 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49014 ;;Total ram usage:       16 bytes
 49015 ;; Hardware stack levels used: 1
 49016 ;; Hardware stack levels required when called: 1
 49017 ;; This function calls:
 49018 ;;		Nothing
 49019 ;; This function is called by:
 49020 ;;		___flsub
 49021 ;;		_efgtoa
 49022 ;;		_ftoa
 49023 ;; This function uses a non-reentrant model
 49024 ;;
 49025                           
 49026                           	psect	text136
 49027   014A70                     __ptext136:
 49028                           	callstack 0
 49029   014A70                     ___fladd:
 49030                           	callstack 113
 49031   014A70  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49032   014A72  0B80               	andlw	128
 49033   014A74  6E10               	movwf	___fladd@signs^(0+1280),c
 49034   014A76  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49035   014A78  2407               	addwf	(___fladd@b+3)^(0+1280),w,c
 49036   014A7A  6E12               	movwf	___fladd@bexp^(0+1280),c
 49037   014A7C  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 49038   014A7E  EF43  F0A5         	goto	u25221
 49039   014A82  EF45  F0A5         	goto	u25220
 49040   014A86                     u25221:
 49041   014A86  EF46  F0A5         	goto	l19365
 49042   014A8A                     u25220:
 49043   014A8A  8012               	bsf	___fladd@bexp^(0+1280),0,c
 49044   014A8C                     l19365:
 49045   014A8C  5012               	movf	___fladd@bexp^(0+1280),w,c
 49046   014A8E  B4D8               	btfsc	status,2,c
 49047   014A90  EF4C  F0A5         	goto	u25231
 49048   014A94  EF4E  F0A5         	goto	u25230
 49049   014A98                     u25231:
 49050   014A98  EF62  F0A5         	goto	l19375
 49051   014A9C                     u25230:
 49052   014A9C  2812               	incf	___fladd@bexp^(0+1280),w,c
 49053   014A9E  A4D8               	btfss	status,2,c
 49054   014AA0  EF54  F0A5         	goto	u25241
 49055   014AA4  EF56  F0A5         	goto	u25240
 49056   014AA8                     u25241:
 49057   014AA8  EF5E  F0A5         	goto	l19371
 49058   014AAC                     u25240:
 49059   014AAC  0E00               	movlw	0
 49060   014AAE  6E04               	movwf	___fladd@b^(0+1280),c
 49061   014AB0  0E00               	movlw	0
 49062   014AB2  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49063   014AB4  0E00               	movlw	0
 49064   014AB6  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49065   014AB8  0E00               	movlw	0
 49066   014ABA  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49067   014ABC                     l19371:
 49068   014ABC  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 49069   014ABE  6A07               	clrf	(___fladd@b+3)^(0+1280),c
 49070   014AC0  EF6A  F0A5         	goto	l19377
 49071   014AC4                     l19375:
 49072   014AC4  0E00               	movlw	0
 49073   014AC6  6E04               	movwf	___fladd@b^(0+1280),c
 49074   014AC8  0E00               	movlw	0
 49075   014ACA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49076   014ACC  0E00               	movlw	0
 49077   014ACE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49078   014AD0  0E00               	movlw	0
 49079   014AD2  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49080   014AD4                     l19377:
 49081   014AD4  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49082   014AD6  0B80               	andlw	128
 49083   014AD8  6E11               	movwf	___fladd@aexp^(0+1280),c
 49084   014ADA  5010               	movf	___fladd@signs^(0+1280),w,c
 49085   014ADC  1811               	xorwf	___fladd@aexp^(0+1280),w,c
 49086   014ADE  B4D8               	btfsc	status,2,c
 49087   014AE0  EF74  F0A5         	goto	u25251
 49088   014AE4  EF76  F0A5         	goto	u25250
 49089   014AE8                     u25251:
 49090   014AE8  EF77  F0A5         	goto	l19383
 49091   014AEC                     u25250:
 49092   014AEC  8C10               	bsf	___fladd@signs^(0+1280),6,c
 49093   014AEE                     l19383:
 49094   014AEE  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49095   014AF0  240B               	addwf	(___fladd@a+3)^(0+1280),w,c
 49096   014AF2  6E11               	movwf	___fladd@aexp^(0+1280),c
 49097   014AF4  AE0A               	btfss	(___fladd@a+2)^(0+1280),7,c
 49098   014AF6  EF7F  F0A5         	goto	u25261
 49099   014AFA  EF81  F0A5         	goto	u25260
 49100   014AFE                     u25261:
 49101   014AFE  EF82  F0A5         	goto	l19389
 49102   014B02                     u25260:
 49103   014B02  8011               	bsf	___fladd@aexp^(0+1280),0,c
 49104   014B04                     l19389:
 49105   014B04  5011               	movf	___fladd@aexp^(0+1280),w,c
 49106   014B06  B4D8               	btfsc	status,2,c
 49107   014B08  EF88  F0A5         	goto	u25271
 49108   014B0C  EF8A  F0A5         	goto	u25270
 49109   014B10                     u25271:
 49110   014B10  EF9E  F0A5         	goto	l19399
 49111   014B14                     u25270:
 49112   014B14  2811               	incf	___fladd@aexp^(0+1280),w,c
 49113   014B16  A4D8               	btfss	status,2,c
 49114   014B18  EF90  F0A5         	goto	u25281
 49115   014B1C  EF92  F0A5         	goto	u25280
 49116   014B20                     u25281:
 49117   014B20  EF9A  F0A5         	goto	l19395
 49118   014B24                     u25280:
 49119   014B24  0E00               	movlw	0
 49120   014B26  6E08               	movwf	___fladd@a^(0+1280),c
 49121   014B28  0E00               	movlw	0
 49122   014B2A  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 49123   014B2C  0E00               	movlw	0
 49124   014B2E  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 49125   014B30  0E00               	movlw	0
 49126   014B32  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 49127   014B34                     l19395:
 49128   014B34  8E0A               	bsf	(___fladd@a+2)^(0+1280),7,c
 49129   014B36  6A0B               	clrf	(___fladd@a+3)^(0+1280),c
 49130   014B38  EFA6  F0A5         	goto	l19401
 49131   014B3C                     l19399:
 49132   014B3C  0E00               	movlw	0
 49133   014B3E  6E08               	movwf	___fladd@a^(0+1280),c
 49134   014B40  0E00               	movlw	0
 49135   014B42  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 49136   014B44  0E00               	movlw	0
 49137   014B46  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 49138   014B48  0E00               	movlw	0
 49139   014B4A  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 49140   014B4C                     l19401:
 49141   014B4C  5012               	movf	___fladd@bexp^(0+1280),w,c
 49142   014B4E  5C11               	subwf	___fladd@aexp^(0+1280),w,c
 49143   014B50  B0D8               	btfsc	status,0,c
 49144   014B52  EFAD  F0A5         	goto	u25291
 49145   014B56  EFAF  F0A5         	goto	u25290
 49146   014B5A                     u25291:
 49147   014B5A  EFD6  F0A5         	goto	l19437
 49148   014B5E                     u25290:
 49149   014B5E  AC10               	btfss	___fladd@signs^(0+1280),6,c
 49150   014B60  EFB4  F0A5         	goto	u25301
 49151   014B64  EFB6  F0A5         	goto	u25300
 49152   014B68                     u25301:
 49153   014B68  EFB8  F0A5         	goto	l19407
 49154   014B6C                     u25300:
 49155   014B6C  0E80               	movlw	128
 49156   014B6E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 49157   014B70                     l19407:
 49158   014B70  C512  F513         	movff	___fladd@bexp,___fladd@grs
 49159   014B74  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 49160   014B78  C513  F511         	movff	___fladd@grs,___fladd@aexp
 49161   014B7C  C504  F513         	movff	___fladd@b,___fladd@grs
 49162   014B80  C508  F504         	movff	___fladd@a,___fladd@b
 49163   014B84  C513  F508         	movff	___fladd@grs,___fladd@a
 49164   014B88  C505  F513         	movff	___fladd@b+1,___fladd@grs
 49165   014B8C  C509  F505         	movff	___fladd@a+1,___fladd@b+1
 49166   014B90  C513  F509         	movff	___fladd@grs,___fladd@a+1
 49167   014B94  C506  F513         	movff	___fladd@b+2,___fladd@grs
 49168   014B98  C50A  F506         	movff	___fladd@a+2,___fladd@b+2
 49169   014B9C  C513  F50A         	movff	___fladd@grs,___fladd@a+2
 49170   014BA0  C507  F513         	movff	___fladd@b+3,___fladd@grs
 49171   014BA4  C50B  F507         	movff	___fladd@a+3,___fladd@b+3
 49172   014BA8  C513  F50B         	movff	___fladd@grs,___fladd@a+3
 49173   014BAC                     l19437:
 49174   014BAC  6A13               	clrf	___fladd@grs^(0+1280),c
 49175   014BAE  5012               	movf	___fladd@bexp^(0+1280),w,c
 49176   014BB0  C511  F50C         	movff	___fladd@aexp,??___fladd
 49177   014BB4  6A0D               	clrf	(??___fladd+1)^(0+1280),c
 49178   014BB6  5E0C               	subwf	??___fladd^(0+1280),f,c
 49179   014BB8  0E00               	movlw	0
 49180   014BBA  5A0D               	subwfb	(??___fladd+1)^(0+1280),f,c
 49181   014BBC  BE0D               	btfsc	(??___fladd+1)^(0+1280),7,c
 49182   014BBE  EFEA  F0A5         	goto	u25311
 49183   014BC2  500D               	movf	(??___fladd+1)^(0+1280),w,c
 49184   014BC4  E109               	bnz	u25310
 49185   014BC6  0E1A               	movlw	26
 49186   014BC8  5C0C               	subwf	??___fladd^(0+1280),w,c
 49187   014BCA  A0D8               	btfss	status,0,c
 49188   014BCC  EFEA  F0A5         	goto	u25311
 49189   014BD0  EFEC  F0A5         	goto	u25310
 49190   014BD4                     u25311:
 49191   014BD4  EF23  F0A6         	goto	l3156
 49192   014BD8                     u25310:
 49193   014BD8  5004               	movf	___fladd@b^(0+1280),w,c
 49194   014BDA  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 49195   014BDC  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 49196   014BDE  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 49197   014BE0  A4D8               	btfss	status,2,c
 49198   014BE2  EFF5  F0A5         	goto	u25321
 49199   014BE6  EFF8  F0A5         	goto	u25320
 49200   014BEA                     u25321:
 49201   014BEA  0E01               	movlw	1
 49202   014BEC  EFF9  F0A5         	goto	u25330
 49203   014BF0                     u25320:
 49204   014BF0  0E00               	movlw	0
 49205   014BF2                     u25330:
 49206   014BF2  6E13               	movwf	___fladd@grs^(0+1280),c
 49207   014BF4  0E00               	movlw	0
 49208   014BF6  6E04               	movwf	___fladd@b^(0+1280),c
 49209   014BF8  0E00               	movlw	0
 49210   014BFA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49211   014BFC  0E00               	movlw	0
 49212   014BFE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49213   014C00  0E00               	movlw	0
 49214   014C02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49215   014C04  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 49216   014C08  EF2C  F0A6         	goto	l3155
 49217   014C0C                     l3157:
 49218   014C0C  A013               	btfss	___fladd@grs^(0+1280),0,c
 49219   014C0E  EF0B  F0A6         	goto	u25341
 49220   014C12  EF0D  F0A6         	goto	u25340
 49221   014C16                     u25341:
 49222   014C16  EF13  F0A6         	goto	l19447
 49223   014C1A                     u25340:
 49224   014C1A  90D8               	bcf	status,0,c
 49225   014C1C  3013               	rrcf	___fladd@grs^(0+1280),w,c
 49226   014C1E  0901               	iorlw	1
 49227   014C20  6E13               	movwf	___fladd@grs^(0+1280),c
 49228   014C22  EF15  F0A6         	goto	l19449
 49229   014C26                     l19447:
 49230   014C26  90D8               	bcf	status,0,c
 49231   014C28  3213               	rrcf	___fladd@grs^(0+1280),f,c
 49232   014C2A                     l19449:
 49233   014C2A  A004               	btfss	___fladd@b^(0+1280),0,c
 49234   014C2C  EF1A  F0A6         	goto	u25351
 49235   014C30  EF1C  F0A6         	goto	u25350
 49236   014C34                     u25351:
 49237   014C34  EF1D  F0A6         	goto	l19453
 49238   014C38                     u25350:
 49239   014C38  8E13               	bsf	___fladd@grs^(0+1280),7,c
 49240   014C3A                     l19453:
 49241   014C3A  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 49242   014C3C  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 49243   014C3E  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 49244   014C40  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 49245   014C42  3204               	rrcf	___fladd@b^(0+1280),f,c
 49246   014C44  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49247   014C46                     l3156:
 49248   014C46  5011               	movf	___fladd@aexp^(0+1280),w,c
 49249   014C48  5C12               	subwf	___fladd@bexp^(0+1280),w,c
 49250   014C4A  A0D8               	btfss	status,0,c
 49251   014C4C  EF2A  F0A6         	goto	u25361
 49252   014C50  EF2C  F0A6         	goto	u25360
 49253   014C54                     u25361:
 49254   014C54  EF06  F0A6         	goto	l3157
 49255   014C58                     u25360:
 49256   014C58                     l3155:
 49257   014C58  BC10               	btfsc	___fladd@signs^(0+1280),6,c
 49258   014C5A  EF31  F0A6         	goto	u25371
 49259   014C5E  EF33  F0A6         	goto	u25370
 49260   014C62                     u25371:
 49261   014C62  EF73  F0A6         	goto	l19481
 49262   014C66                     u25370:
 49263   014C66  5012               	movf	___fladd@bexp^(0+1280),w,c
 49264   014C68  A4D8               	btfss	status,2,c
 49265   014C6A  EF39  F0A6         	goto	u25381
 49266   014C6E  EF3B  F0A6         	goto	u25380
 49267   014C72                     u25381:
 49268   014C72  EF45  F0A6         	goto	l19463
 49269   014C76                     u25380:
 49270   014C76  0E00               	movlw	0
 49271   014C78  6E04               	movwf	?___fladd^(0+1280),c
 49272   014C7A  0E00               	movlw	0
 49273   014C7C  6E05               	movwf	(?___fladd+1)^(0+1280),c
 49274   014C7E  0E00               	movlw	0
 49275   014C80  6E06               	movwf	(?___fladd+2)^(0+1280),c
 49276   014C82  0E00               	movlw	0
 49277   014C84  6E07               	movwf	(?___fladd+3)^(0+1280),c
 49278   014C86  EF92  F0A7         	goto	l3164
 49279   014C8A                     l19463:
 49280   014C8A  5008               	movf	___fladd@a^(0+1280),w,c
 49281   014C8C  2604               	addwf	___fladd@b^(0+1280),f,c
 49282   014C8E  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49283   014C90  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49284   014C92  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49285   014C94  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49286   014C96  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49287   014C98  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49288   014C9A  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 49289   014C9C  EF52  F0A6         	goto	u25391
 49290   014CA0  EF54  F0A6         	goto	u25390
 49291   014CA4                     u25391:
 49292   014CA4  EF00  F0A7         	goto	l3169
 49293   014CA8                     u25390:
 49294   014CA8  A013               	btfss	___fladd@grs^(0+1280),0,c
 49295   014CAA  EF59  F0A6         	goto	u25401
 49296   014CAE  EF5B  F0A6         	goto	u25400
 49297   014CB2                     u25401:
 49298   014CB2  EF61  F0A6         	goto	l19471
 49299   014CB6                     u25400:
 49300   014CB6  90D8               	bcf	status,0,c
 49301   014CB8  3013               	rrcf	___fladd@grs^(0+1280),w,c
 49302   014CBA  0901               	iorlw	1
 49303   014CBC  6E13               	movwf	___fladd@grs^(0+1280),c
 49304   014CBE  EF63  F0A6         	goto	l19473
 49305   014CC2                     l19471:
 49306   014CC2  90D8               	bcf	status,0,c
 49307   014CC4  3213               	rrcf	___fladd@grs^(0+1280),f,c
 49308   014CC6                     l19473:
 49309   014CC6  A004               	btfss	___fladd@b^(0+1280),0,c
 49310   014CC8  EF68  F0A6         	goto	u25411
 49311   014CCC  EF6A  F0A6         	goto	u25410
 49312   014CD0                     u25411:
 49313   014CD0  EF6B  F0A6         	goto	l19477
 49314   014CD4                     u25410:
 49315   014CD4  8E13               	bsf	___fladd@grs^(0+1280),7,c
 49316   014CD6                     l19477:
 49317   014CD6  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 49318   014CD8  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 49319   014CDA  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 49320   014CDC  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 49321   014CDE  3204               	rrcf	___fladd@b^(0+1280),f,c
 49322   014CE0  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49323   014CE2  EF00  F0A7         	goto	l3169
 49324   014CE6                     l19481:
 49325   014CE6  5008               	movf	___fladd@a^(0+1280),w,c
 49326   014CE8  5C04               	subwf	___fladd@b^(0+1280),w,c
 49327   014CEA  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49328   014CEC  5805               	subwfb	(___fladd@b+1)^(0+1280),w,c
 49329   014CEE  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49330   014CF0  5806               	subwfb	(___fladd@b+2)^(0+1280),w,c
 49331   014CF2  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49332   014CF4  0A80               	xorlw	128
 49333   014CF6  6E0C               	movwf	??___fladd^(0+1280),c
 49334   014CF8  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49335   014CFA  0A80               	xorlw	128
 49336   014CFC  580C               	subwfb	??___fladd^(0+1280),w,c
 49337   014CFE  B0D8               	btfsc	status,0,c
 49338   014D00  EF84  F0A6         	goto	u25421
 49339   014D04  EF86  F0A6         	goto	u25420
 49340   014D08                     u25421:
 49341   014D08  EFB1  F0A6         	goto	l19491
 49342   014D0C                     u25420:
 49343   014D0C  5004               	movf	___fladd@b^(0+1280),w,c
 49344   014D0E  5C08               	subwf	___fladd@a^(0+1280),w,c
 49345   014D10  6E0C               	movwf	??___fladd^(0+1280),c
 49346   014D12  5005               	movf	(___fladd@b+1)^(0+1280),w,c
 49347   014D14  5809               	subwfb	(___fladd@a+1)^(0+1280),w,c
 49348   014D16  6E0D               	movwf	(??___fladd+1)^(0+1280),c
 49349   014D18  5006               	movf	(___fladd@b+2)^(0+1280),w,c
 49350   014D1A  580A               	subwfb	(___fladd@a+2)^(0+1280),w,c
 49351   014D1C  6E0E               	movwf	(??___fladd+2)^(0+1280),c
 49352   014D1E  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 49353   014D20  580B               	subwfb	(___fladd@a+3)^(0+1280),w,c
 49354   014D22  6E0F               	movwf	(??___fladd+3)^(0+1280),c
 49355   014D24  0EFF               	movlw	255
 49356   014D26  240C               	addwf	??___fladd^(0+1280),w,c
 49357   014D28  6E04               	movwf	___fladd@b^(0+1280),c
 49358   014D2A  0EFF               	movlw	255
 49359   014D2C  200D               	addwfc	(??___fladd+1)^(0+1280),w,c
 49360   014D2E  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49361   014D30  0EFF               	movlw	255
 49362   014D32  200E               	addwfc	(??___fladd+2)^(0+1280),w,c
 49363   014D34  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49364   014D36  0EFF               	movlw	255
 49365   014D38  200F               	addwfc	(??___fladd+3)^(0+1280),w,c
 49366   014D3A  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49367   014D3C  0E80               	movlw	128
 49368   014D3E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 49369   014D40  6C13               	negf	___fladd@grs^(0+1280),c
 49370   014D42  5013               	movf	___fladd@grs^(0+1280),w,c
 49371   014D44  A4D8               	btfss	status,2,c
 49372   014D46  EFA7  F0A6         	goto	u25431
 49373   014D4A  EFA9  F0A6         	goto	u25430
 49374   014D4E                     u25431:
 49375   014D4E  EFB9  F0A6         	goto	l3172
 49376   014D52                     u25430:
 49377   014D52  0E01               	movlw	1
 49378   014D54  2604               	addwf	___fladd@b^(0+1280),f,c
 49379   014D56  0E00               	movlw	0
 49380   014D58  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49381   014D5A  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49382   014D5C  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49383   014D5E  EFB9  F0A6         	goto	l3172
 49384   014D62                     l19491:
 49385   014D62  5008               	movf	___fladd@a^(0+1280),w,c
 49386   014D64  5E04               	subwf	___fladd@b^(0+1280),f,c
 49387   014D66  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 49388   014D68  5A05               	subwfb	(___fladd@b+1)^(0+1280),f,c
 49389   014D6A  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 49390   014D6C  5A06               	subwfb	(___fladd@b+2)^(0+1280),f,c
 49391   014D6E  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 49392   014D70  5A07               	subwfb	(___fladd@b+3)^(0+1280),f,c
 49393   014D72                     l3172:
 49394   014D72  5004               	movf	___fladd@b^(0+1280),w,c
 49395   014D74  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 49396   014D76  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 49397   014D78  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 49398   014D7A  A4D8               	btfss	status,2,c
 49399   014D7C  EFC2  F0A6         	goto	u25441
 49400   014D80  EFC4  F0A6         	goto	u25440
 49401   014D84                     u25441:
 49402   014D84  EFF9  F0A6         	goto	l19515
 49403   014D88                     u25440:
 49404   014D88  5013               	movf	___fladd@grs^(0+1280),w,c
 49405   014D8A  A4D8               	btfss	status,2,c
 49406   014D8C  EFCA  F0A6         	goto	u25451
 49407   014D90  EFCC  F0A6         	goto	u25450
 49408   014D94                     u25451:
 49409   014D94  EFF9  F0A6         	goto	l19515
 49410   014D98                     u25450:
 49411   014D98  0E00               	movlw	0
 49412   014D9A  6E04               	movwf	?___fladd^(0+1280),c
 49413   014D9C  0E00               	movlw	0
 49414   014D9E  6E05               	movwf	(?___fladd+1)^(0+1280),c
 49415   014DA0  0E00               	movlw	0
 49416   014DA2  6E06               	movwf	(?___fladd+2)^(0+1280),c
 49417   014DA4  0E00               	movlw	0
 49418   014DA6  6E07               	movwf	(?___fladd+3)^(0+1280),c
 49419   014DA8  EF92  F0A7         	goto	l3164
 49420   014DAC                     l19499:
 49421   014DAC  90D8               	bcf	status,0,c
 49422   014DAE  3604               	rlcf	___fladd@b^(0+1280),f,c
 49423   014DB0  3605               	rlcf	(___fladd@b+1)^(0+1280),f,c
 49424   014DB2  3606               	rlcf	(___fladd@b+2)^(0+1280),f,c
 49425   014DB4  3607               	rlcf	(___fladd@b+3)^(0+1280),f,c
 49426   014DB6  AE13               	btfss	___fladd@grs^(0+1280),7,c
 49427   014DB8  EFE0  F0A6         	goto	u25461
 49428   014DBC  EFE2  F0A6         	goto	u25460
 49429   014DC0                     u25461:
 49430   014DC0  EFE3  F0A6         	goto	l19505
 49431   014DC4                     u25460:
 49432   014DC4  8004               	bsf	___fladd@b^(0+1280),0,c
 49433   014DC6                     l19505:
 49434   014DC6  A013               	btfss	___fladd@grs^(0+1280),0,c
 49435   014DC8  EFE8  F0A6         	goto	u25471
 49436   014DCC  EFEA  F0A6         	goto	u25470
 49437   014DD0                     u25471:
 49438   014DD0  EFEE  F0A6         	goto	l19509
 49439   014DD4                     u25470:
 49440   014DD4  80D8               	bsf	status,0,c
 49441   014DD6  3613               	rlcf	___fladd@grs^(0+1280),f,c
 49442   014DD8  EFF0  F0A6         	goto	l19511
 49443   014DDC                     l19509:
 49444   014DDC  90D8               	bcf	status,0,c
 49445   014DDE  3613               	rlcf	___fladd@grs^(0+1280),f,c
 49446   014DE0                     l19511:
 49447   014DE0  5012               	movf	___fladd@bexp^(0+1280),w,c
 49448   014DE2  B4D8               	btfsc	status,2,c
 49449   014DE4  EFF6  F0A6         	goto	u25481
 49450   014DE8  EFF8  F0A6         	goto	u25480
 49451   014DEC                     u25481:
 49452   014DEC  EFF9  F0A6         	goto	l19515
 49453   014DF0                     u25480:
 49454   014DF0  0612               	decf	___fladd@bexp^(0+1280),f,c
 49455   014DF2                     l19515:
 49456   014DF2  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 49457   014DF4  EFFE  F0A6         	goto	u25491
 49458   014DF8  EF00  F0A7         	goto	u25490
 49459   014DFC                     u25491:
 49460   014DFC  EFD6  F0A6         	goto	l19499
 49461   014E00                     u25490:
 49462   014E00                     l3169:
 49463   014E00  6A11               	clrf	___fladd@aexp^(0+1280),c
 49464   014E02  AE13               	btfss	___fladd@grs^(0+1280),7,c
 49465   014E04  EF06  F0A7         	goto	u25501
 49466   014E08  EF08  F0A7         	goto	u25500
 49467   014E0C                     u25501:
 49468   014E0C  EF20  F0A7         	goto	l3181
 49469   014E10                     u25500:
 49470   014E10  C513  F50C         	movff	___fladd@grs,??___fladd
 49471   014E14  0E7F               	movlw	127
 49472   014E16  160C               	andwf	??___fladd^(0+1280),f,c
 49473   014E18  B4D8               	btfsc	status,2,c
 49474   014E1A  EF11  F0A7         	goto	u25511
 49475   014E1E  EF13  F0A7         	goto	u25510
 49476   014E22                     u25511:
 49477   014E22  EF17  F0A7         	goto	l3182
 49478   014E26                     u25510:
 49479   014E26                     l19519:
 49480   014E26  0E01               	movlw	1
 49481   014E28  6E11               	movwf	___fladd@aexp^(0+1280),c
 49482   014E2A  EF20  F0A7         	goto	l3181
 49483   014E2E                     l3182:
 49484   014E2E  A004               	btfss	___fladd@b^(0+1280),0,c
 49485   014E30  EF1C  F0A7         	goto	u25521
 49486   014E34  EF1E  F0A7         	goto	u25520
 49487   014E38                     u25521:
 49488   014E38  EF20  F0A7         	goto	l3181
 49489   014E3C                     u25520:
 49490   014E3C  EF13  F0A7         	goto	l19519
 49491   014E40                     l3181:
 49492   014E40  5011               	movf	___fladd@aexp^(0+1280),w,c
 49493   014E42  B4D8               	btfsc	status,2,c
 49494   014E44  EF26  F0A7         	goto	u25531
 49495   014E48  EF28  F0A7         	goto	u25530
 49496   014E4C                     u25531:
 49497   014E4C  EF53  F0A7         	goto	l19531
 49498   014E50                     u25530:
 49499   014E50  0E01               	movlw	1
 49500   014E52  2604               	addwf	___fladd@b^(0+1280),f,c
 49501   014E54  0E00               	movlw	0
 49502   014E56  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 49503   014E58  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 49504   014E5A  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 49505   014E5C  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 49506   014E5E  EF33  F0A7         	goto	u25541
 49507   014E62  EF35  F0A7         	goto	u25540
 49508   014E66                     u25541:
 49509   014E66  EF53  F0A7         	goto	l19531
 49510   014E6A                     u25540:
 49511   014E6A  C504  F50C         	movff	___fladd@b,??___fladd
 49512   014E6E  C505  F50D         	movff	___fladd@b+1,??___fladd+1
 49513   014E72  C506  F50E         	movff	___fladd@b+2,??___fladd+2
 49514   014E76  C507  F50F         	movff	___fladd@b+3,??___fladd+3
 49515   014E7A  340F               	rlcf	(??___fladd+3)^(0+1280),w,c
 49516   014E7C  320F               	rrcf	(??___fladd+3)^(0+1280),f,c
 49517   014E7E  320E               	rrcf	(??___fladd+2)^(0+1280),f,c
 49518   014E80  320D               	rrcf	(??___fladd+1)^(0+1280),f,c
 49519   014E82  320C               	rrcf	??___fladd^(0+1280),f,c
 49520   014E84  C50C  F504         	movff	??___fladd,___fladd@b
 49521   014E88  C50D  F505         	movff	??___fladd+1,___fladd@b+1
 49522   014E8C  C50E  F506         	movff	??___fladd+2,___fladd@b+2
 49523   014E90  C50F  F507         	movff	??___fladd+3,___fladd@b+3
 49524   014E94  2812               	incf	___fladd@bexp^(0+1280),w,c
 49525   014E96  B4D8               	btfsc	status,2,c
 49526   014E98  EF50  F0A7         	goto	u25551
 49527   014E9C  EF52  F0A7         	goto	u25550
 49528   014EA0                     u25551:
 49529   014EA0  EF53  F0A7         	goto	l19531
 49530   014EA4                     u25550:
 49531   014EA4  2A12               	incf	___fladd@bexp^(0+1280),f,c
 49532   014EA6                     l19531:
 49533   014EA6  2812               	incf	___fladd@bexp^(0+1280),w,c
 49534   014EA8  B4D8               	btfsc	status,2,c
 49535   014EAA  EF59  F0A7         	goto	u25561
 49536   014EAE  EF5B  F0A7         	goto	u25560
 49537   014EB2                     u25561:
 49538   014EB2  EF63  F0A7         	goto	l19535
 49539   014EB6                     u25560:
 49540   014EB6  5012               	movf	___fladd@bexp^(0+1280),w,c
 49541   014EB8  A4D8               	btfss	status,2,c
 49542   014EBA  EF61  F0A7         	goto	u25571
 49543   014EBE  EF63  F0A7         	goto	u25570
 49544   014EC2                     u25571:
 49545   014EC2  EF74  F0A7         	goto	l3188
 49546   014EC6                     u25570:
 49547   014EC6                     l19535:
 49548   014EC6  0E00               	movlw	0
 49549   014EC8  6E04               	movwf	___fladd@b^(0+1280),c
 49550   014ECA  0E00               	movlw	0
 49551   014ECC  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 49552   014ECE  0E00               	movlw	0
 49553   014ED0  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 49554   014ED2  0E00               	movlw	0
 49555   014ED4  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49556   014ED6  5012               	movf	___fladd@bexp^(0+1280),w,c
 49557   014ED8  A4D8               	btfss	status,2,c
 49558   014EDA  EF71  F0A7         	goto	u25581
 49559   014EDE  EF73  F0A7         	goto	u25580
 49560   014EE2                     u25581:
 49561   014EE2  EF74  F0A7         	goto	l3188
 49562   014EE6                     u25580:
 49563   014EE6  6A10               	clrf	___fladd@signs^(0+1280),c
 49564   014EE8                     l3188:
 49565   014EE8  A012               	btfss	___fladd@bexp^(0+1280),0,c
 49566   014EEA  EF79  F0A7         	goto	u25591
 49567   014EEE  EF7B  F0A7         	goto	u25590
 49568   014EF2                     u25591:
 49569   014EF2  EF7E  F0A7         	goto	l19541
 49570   014EF6                     u25590:
 49571   014EF6  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 49572   014EF8  EF7F  F0A7         	goto	l19543
 49573   014EFC                     l19541:
 49574   014EFC  9E06               	bcf	(___fladd@b+2)^(0+1280),7,c
 49575   014EFE                     l19543:
 49576   014EFE  90D8               	bcf	status,0,c
 49577   014F00  3012               	rrcf	___fladd@bexp^(0+1280),w,c
 49578   014F02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 49579   014F04  AE10               	btfss	___fladd@signs^(0+1280),7,c
 49580   014F06  EF87  F0A7         	goto	u25601
 49581   014F0A  EF89  F0A7         	goto	u25600
 49582   014F0E                     u25601:
 49583   014F0E  EF8A  F0A7         	goto	l19549
 49584   014F12                     u25600:
 49585   014F12  8E07               	bsf	(___fladd@b+3)^(0+1280),7,c
 49586   014F14                     l19549:
 49587   014F14  C504  F504         	movff	___fladd@b,?___fladd
 49588   014F18  C505  F505         	movff	___fladd@b+1,?___fladd+1
 49589   014F1C  C506  F506         	movff	___fladd@b+2,?___fladd+2
 49590   014F20  C507  F507         	movff	___fladd@b+3,?___fladd+3
 49591   014F24                     l3164:
 49592   014F24  0012               	return		;funcret
 49593   014F26                     __end_of___fladd:
 49594                           	callstack 0
 49595                           
 49596 ;; *************** function ___flneg *****************
 49597 ;; Defined at:
 49598 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
 49599 ;; Parameters:    Size  Location     Type
 49600 ;;  f1              4    3[COMRAM] unsigned char 
 49601 ;; Auto vars:     Size  Location     Type
 49602 ;;		None
 49603 ;; Return value:  Size  Location     Type
 49604 ;;                  4    3[COMRAM] unsigned char 
 49605 ;; Registers used:
 49606 ;;		wreg, status,2, status,0
 49607 ;; Tracked objects:
 49608 ;;		On entry : 0/0
 49609 ;;		On exit  : 0/0
 49610 ;;		Unchanged: 0/0
 49611 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 49612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49616 ;;Total ram usage:        4 bytes
 49617 ;; Hardware stack levels used: 1
 49618 ;; Hardware stack levels required when called: 1
 49619 ;; This function calls:
 49620 ;;		Nothing
 49621 ;; This function is called by:
 49622 ;;		_efgtoa
 49623 ;; This function uses a non-reentrant model
 49624 ;;
 49625                           
 49626                           	psect	text137
 49627   01FE60                     __ptext137:
 49628                           	callstack 0
 49629   01FE60                     ___flneg:
 49630                           	callstack 114
 49631   01FE60  5004               	movf	___flneg@f1^(0+1280),w,c
 49632   01FE62  1005               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 49633   01FE64  1006               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 49634   01FE66  1007               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 49635   01FE68  B4D8               	btfsc	status,2,c
 49636   01FE6A  EF39  F0FF         	goto	u26321
 49637   01FE6E  EF3B  F0FF         	goto	u26320
 49638   01FE72                     u26321:
 49639   01FE72  EF43  F0FF         	goto	l19987
 49640   01FE76                     u26320:
 49641   01FE76  0E00               	movlw	0
 49642   01FE78  1A04               	xorwf	___flneg@f1^(0+1280),f,c
 49643   01FE7A  0E00               	movlw	0
 49644   01FE7C  1A05               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 49645   01FE7E  0E00               	movlw	0
 49646   01FE80  1A06               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 49647   01FE82  0E80               	movlw	128
 49648   01FE84  1A07               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 49649   01FE86                     l19987:
 49650   01FE86  C504  F504         	movff	___flneg@f1,?___flneg
 49651   01FE8A  C505  F505         	movff	___flneg@f1+1,?___flneg+1
 49652   01FE8E  C506  F506         	movff	___flneg@f1+2,?___flneg+2
 49653   01FE92  C507  F507         	movff	___flneg@f1+3,?___flneg+3
 49654   01FE96  0012               	return		;funcret
 49655   01FE98                     __end_of___flneg:
 49656                           	callstack 0
 49657                           
 49658 ;; *************** function ___flmul *****************
 49659 ;; Defined at:
 49660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 49661 ;; Parameters:    Size  Location     Type
 49662 ;;  b               4   17[COMRAM] unsigned char 
 49663 ;;  a               4   21[COMRAM] unsigned char 
 49664 ;; Auto vars:     Size  Location     Type
 49665 ;;  prod            4   36[COMRAM] struct .
 49666 ;;  grs             4   31[COMRAM] unsigned long 
 49667 ;;  temp            2   40[COMRAM] struct .
 49668 ;;  bexp            1   35[COMRAM] unsigned char 
 49669 ;;  aexp            1   30[COMRAM] unsigned char 
 49670 ;;  sign            1   29[COMRAM] unsigned char 
 49671 ;; Return value:  Size  Location     Type
 49672 ;;                  4   17[COMRAM] unsigned char 
 49673 ;; Registers used:
 49674 ;;		wreg, status,2, status,0, prodl, prodh
 49675 ;; Tracked objects:
 49676 ;;		On entry : 0/0
 49677 ;;		On exit  : 0/0
 49678 ;;		Unchanged: 0/0
 49679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 49680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49681 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49683 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49684 ;;Total ram usage:       25 bytes
 49685 ;; Hardware stack levels used: 1
 49686 ;; Hardware stack levels required when called: 1
 49687 ;; This function calls:
 49688 ;;		Nothing
 49689 ;; This function is called by:
 49690 ;;		_main
 49691 ;;		_efgtoa
 49692 ;;		_ilog10
 49693 ;;		_i10x
 49694 ;;		_ftoa
 49695 ;; This function uses a non-reentrant model
 49696 ;;
 49697                           
 49698                           	psect	text138
 49699   0165C8                     __ptext138:
 49700                           	callstack 0
 49701   0165C8                     ___flmul:
 49702                           	callstack 114
 49703   0165C8  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 49704   0165CA  0B80               	andlw	128
 49705   0165CC  6E1E               	movwf	___flmul@sign^(0+1280),c
 49706   0165CE  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 49707   0165D0  2415               	addwf	(___flmul@b+3)^(0+1280),w,c
 49708   0165D2  6E24               	movwf	___flmul@bexp^(0+1280),c
 49709   0165D4  AE14               	btfss	(___flmul@b+2)^(0+1280),7,c
 49710   0165D6  EFEF  F0B2         	goto	u26051
 49711   0165DA  EFF1  F0B2         	goto	u26050
 49712   0165DE                     u26051:
 49713   0165DE  EFF2  F0B2         	goto	l19817
 49714   0165E2                     u26050:
 49715   0165E2  8024               	bsf	___flmul@bexp^(0+1280),0,c
 49716   0165E4                     l19817:
 49717   0165E4  5024               	movf	___flmul@bexp^(0+1280),w,c
 49718   0165E6  B4D8               	btfsc	status,2,c
 49719   0165E8  EFF8  F0B2         	goto	u26061
 49720   0165EC  EFFA  F0B2         	goto	u26060
 49721   0165F0                     u26061:
 49722   0165F0  EF0D  F0B3         	goto	l19825
 49723   0165F4                     u26060:
 49724   0165F4  2824               	incf	___flmul@bexp^(0+1280),w,c
 49725   0165F6  A4D8               	btfss	status,2,c
 49726   0165F8  EF00  F0B3         	goto	u26071
 49727   0165FC  EF02  F0B3         	goto	u26070
 49728   016600                     u26071:
 49729   016600  EF0A  F0B3         	goto	l19823
 49730   016604                     u26070:
 49731   016604  0E00               	movlw	0
 49732   016606  6E12               	movwf	___flmul@b^(0+1280),c
 49733   016608  0E00               	movlw	0
 49734   01660A  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 49735   01660C  0E00               	movlw	0
 49736   01660E  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 49737   016610  0E00               	movlw	0
 49738   016612  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 49739   016614                     l19823:
 49740   016614  8E14               	bsf	(___flmul@b+2)^(0+1280),7,c
 49741   016616  EF15  F0B3         	goto	l19827
 49742   01661A                     l19825:
 49743   01661A  0E00               	movlw	0
 49744   01661C  6E12               	movwf	___flmul@b^(0+1280),c
 49745   01661E  0E00               	movlw	0
 49746   016620  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 49747   016622  0E00               	movlw	0
 49748   016624  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 49749   016626  0E00               	movlw	0
 49750   016628  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 49751   01662A                     l19827:
 49752   01662A  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 49753   01662C  0B80               	andlw	128
 49754   01662E  1A1E               	xorwf	___flmul@sign^(0+1280),f,c
 49755   016630  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 49756   016632  2419               	addwf	(___flmul@a+3)^(0+1280),w,c
 49757   016634  6E1F               	movwf	___flmul@aexp^(0+1280),c
 49758   016636  AE18               	btfss	(___flmul@a+2)^(0+1280),7,c
 49759   016638  EF20  F0B3         	goto	u26081
 49760   01663C  EF22  F0B3         	goto	u26080
 49761   016640                     u26081:
 49762   016640  EF23  F0B3         	goto	l19835
 49763   016644                     u26080:
 49764   016644  801F               	bsf	___flmul@aexp^(0+1280),0,c
 49765   016646                     l19835:
 49766   016646  501F               	movf	___flmul@aexp^(0+1280),w,c
 49767   016648  B4D8               	btfsc	status,2,c
 49768   01664A  EF29  F0B3         	goto	u26091
 49769   01664E  EF2B  F0B3         	goto	u26090
 49770   016652                     u26091:
 49771   016652  EF3E  F0B3         	goto	l19843
 49772   016656                     u26090:
 49773   016656  281F               	incf	___flmul@aexp^(0+1280),w,c
 49774   016658  A4D8               	btfss	status,2,c
 49775   01665A  EF31  F0B3         	goto	u26101
 49776   01665E  EF33  F0B3         	goto	u26100
 49777   016662                     u26101:
 49778   016662  EF3B  F0B3         	goto	l19841
 49779   016666                     u26100:
 49780   016666  0E00               	movlw	0
 49781   016668  6E16               	movwf	___flmul@a^(0+1280),c
 49782   01666A  0E00               	movlw	0
 49783   01666C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49784   01666E  0E00               	movlw	0
 49785   016670  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49786   016672  0E00               	movlw	0
 49787   016674  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49788   016676                     l19841:
 49789   016676  8E18               	bsf	(___flmul@a+2)^(0+1280),7,c
 49790   016678  EF46  F0B3         	goto	l3241
 49791   01667C                     l19843:
 49792   01667C  0E00               	movlw	0
 49793   01667E  6E16               	movwf	___flmul@a^(0+1280),c
 49794   016680  0E00               	movlw	0
 49795   016682  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49796   016684  0E00               	movlw	0
 49797   016686  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49798   016688  0E00               	movlw	0
 49799   01668A  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49800   01668C                     l3241:
 49801   01668C  501F               	movf	___flmul@aexp^(0+1280),w,c
 49802   01668E  B4D8               	btfsc	status,2,c
 49803   016690  EF4C  F0B3         	goto	u26111
 49804   016694  EF4E  F0B3         	goto	u26110
 49805   016698                     u26111:
 49806   016698  EF56  F0B3         	goto	l19847
 49807   01669C                     u26110:
 49808   01669C  5024               	movf	___flmul@bexp^(0+1280),w,c
 49809   01669E  A4D8               	btfss	status,2,c
 49810   0166A0  EF54  F0B3         	goto	u26121
 49811   0166A4  EF56  F0B3         	goto	u26120
 49812   0166A8                     u26121:
 49813   0166A8  EF60  F0B3         	goto	l19851
 49814   0166AC                     u26120:
 49815   0166AC                     l19847:
 49816   0166AC  0E00               	movlw	0
 49817   0166AE  6E12               	movwf	?___flmul^(0+1280),c
 49818   0166B0  0E00               	movlw	0
 49819   0166B2  6E13               	movwf	(?___flmul+1)^(0+1280),c
 49820   0166B4  0E00               	movlw	0
 49821   0166B6  6E14               	movwf	(?___flmul+2)^(0+1280),c
 49822   0166B8  0E00               	movlw	0
 49823   0166BA  6E15               	movwf	(?___flmul+3)^(0+1280),c
 49824   0166BC  EFF6  F0B4         	goto	l3245
 49825   0166C0                     l19851:
 49826   0166C0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49827   0166C2  0212               	mulwf	___flmul@b^(0+1280),c
 49828   0166C4  C4F3 F529          	movff	prodl,___flmul@temp
 49829   0166C8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49830   0166CC  5029               	movf	___flmul@temp^(0+1280),w,c
 49831   0166CE  6E20               	movwf	___flmul@grs^(0+1280),c
 49832   0166D0  6A21               	clrf	(___flmul@grs+1)^(0+1280),c
 49833   0166D2  6A22               	clrf	(___flmul@grs+2)^(0+1280),c
 49834   0166D4  6A23               	clrf	(___flmul@grs+3)^(0+1280),c
 49835   0166D6  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49836   0166D8  6E25               	movwf	___flmul@prod^(0+1280),c
 49837   0166DA  6A26               	clrf	(___flmul@prod+1)^(0+1280),c
 49838   0166DC  6A27               	clrf	(___flmul@prod+2)^(0+1280),c
 49839   0166DE  6A28               	clrf	(___flmul@prod+3)^(0+1280),c
 49840   0166E0  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49841   0166E2  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49842   0166E4  C4F3 F529          	movff	prodl,___flmul@temp
 49843   0166E8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49844   0166EC  5029               	movf	___flmul@temp^(0+1280),w,c
 49845   0166EE  2620               	addwf	___flmul@grs^(0+1280),f,c
 49846   0166F0  0E00               	movlw	0
 49847   0166F2  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49848   0166F4  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49849   0166F6  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49850   0166F8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49851   0166FA  2625               	addwf	___flmul@prod^(0+1280),f,c
 49852   0166FC  0E00               	movlw	0
 49853   0166FE  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49854   016700  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49855   016702  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49856   016704  5016               	movf	___flmul@a^(0+1280),w,c
 49857   016706  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49858   016708  C4F3 F529          	movff	prodl,___flmul@temp
 49859   01670C  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49860   016710  5029               	movf	___flmul@temp^(0+1280),w,c
 49861   016712  2620               	addwf	___flmul@grs^(0+1280),f,c
 49862   016714  0E00               	movlw	0
 49863   016716  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49864   016718  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49865   01671A  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49866   01671C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49867   01671E  2625               	addwf	___flmul@prod^(0+1280),f,c
 49868   016720  0E00               	movlw	0
 49869   016722  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49870   016724  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49871   016726  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49872   016728  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49873   01672C  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49874   016730  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49875   016734  6A20               	clrf	___flmul@grs^(0+1280),c
 49876   016736  5016               	movf	___flmul@a^(0+1280),w,c
 49877   016738  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49878   01673A  C4F3 F529          	movff	prodl,___flmul@temp
 49879   01673E  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49880   016742  5029               	movf	___flmul@temp^(0+1280),w,c
 49881   016744  2620               	addwf	___flmul@grs^(0+1280),f,c
 49882   016746  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49883   016748  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49884   01674A  0E00               	movlw	0
 49885   01674C  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49886   01674E  0E00               	movlw	0
 49887   016750  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49888   016752  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49889   016754  0212               	mulwf	___flmul@b^(0+1280),c
 49890   016756  C4F3 F529          	movff	prodl,___flmul@temp
 49891   01675A  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49892   01675E  5029               	movf	___flmul@temp^(0+1280),w,c
 49893   016760  2620               	addwf	___flmul@grs^(0+1280),f,c
 49894   016762  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49895   016764  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49896   016766  0E00               	movlw	0
 49897   016768  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49898   01676A  0E00               	movlw	0
 49899   01676C  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49900   01676E  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49901   016772  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49902   016776  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49903   01677A  6A20               	clrf	___flmul@grs^(0+1280),c
 49904   01677C  5016               	movf	___flmul@a^(0+1280),w,c
 49905   01677E  0212               	mulwf	___flmul@b^(0+1280),c
 49906   016780  C4F3 F529          	movff	prodl,___flmul@temp
 49907   016784  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49908   016788  5029               	movf	___flmul@temp^(0+1280),w,c
 49909   01678A  2620               	addwf	___flmul@grs^(0+1280),f,c
 49910   01678C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49911   01678E  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 49912   016790  0E00               	movlw	0
 49913   016792  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 49914   016794  0E00               	movlw	0
 49915   016796  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 49916   016798  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49917   01679A  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 49918   01679C  C4F3 F529          	movff	prodl,___flmul@temp
 49919   0167A0  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49920   0167A4  5029               	movf	___flmul@temp^(0+1280),w,c
 49921   0167A6  2625               	addwf	___flmul@prod^(0+1280),f,c
 49922   0167A8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49923   0167AA  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49924   0167AC  0E00               	movlw	0
 49925   0167AE  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49926   0167B0  0E00               	movlw	0
 49927   0167B2  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49928   0167B4  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 49929   0167B6  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49930   0167B8  C4F3 F529          	movff	prodl,___flmul@temp
 49931   0167BC  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49932   0167C0  5029               	movf	___flmul@temp^(0+1280),w,c
 49933   0167C2  2625               	addwf	___flmul@prod^(0+1280),f,c
 49934   0167C4  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49935   0167C6  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49936   0167C8  0E00               	movlw	0
 49937   0167CA  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49938   0167CC  0E00               	movlw	0
 49939   0167CE  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49940   0167D0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 49941   0167D2  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 49942   0167D4  C4F3 F529          	movff	prodl,___flmul@temp
 49943   0167D8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 49944   0167DC  5029               	movf	___flmul@temp^(0+1280),w,c
 49945   0167DE  6E1A               	movwf	??___flmul^(0+1280),c
 49946   0167E0  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 49947   0167E2  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 49948   0167E4  6A1C               	clrf	(??___flmul+2)^(0+1280),c
 49949   0167E6  6A1D               	clrf	(??___flmul+3)^(0+1280),c
 49950   0167E8  C51C  F51D         	movff	??___flmul+2,??___flmul+3
 49951   0167EC  C51B  F51C         	movff	??___flmul+1,??___flmul+2
 49952   0167F0  C51A  F51B         	movff	??___flmul,??___flmul+1
 49953   0167F4  6A1A               	clrf	??___flmul^(0+1280),c
 49954   0167F6  501A               	movf	??___flmul^(0+1280),w,c
 49955   0167F8  2625               	addwf	___flmul@prod^(0+1280),f,c
 49956   0167FA  501B               	movf	(??___flmul+1)^(0+1280),w,c
 49957   0167FC  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49958   0167FE  501C               	movf	(??___flmul+2)^(0+1280),w,c
 49959   016800  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49960   016802  501D               	movf	(??___flmul+3)^(0+1280),w,c
 49961   016804  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49962   016806  C520  F51A         	movff	___flmul@grs,??___flmul
 49963   01680A  C521  F51B         	movff	___flmul@grs+1,??___flmul+1
 49964   01680E  C522  F51C         	movff	___flmul@grs+2,??___flmul+2
 49965   016812  C523  F51D         	movff	___flmul@grs+3,??___flmul+3
 49966   016816  0E19               	movlw	25
 49967   016818  EF13  F0B4         	goto	u26130
 49968   01681C                     u26135:
 49969   01681C  90D8               	bcf	status,0,c
 49970   01681E  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 49971   016820  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 49972   016822  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 49973   016824  321A               	rrcf	??___flmul^(0+1280),f,c
 49974   016826                     u26130:
 49975   016826  2EE8               	decfsz	wreg,f,c
 49976   016828  EF0E  F0B4         	goto	u26135
 49977   01682C  501A               	movf	??___flmul^(0+1280),w,c
 49978   01682E  2625               	addwf	___flmul@prod^(0+1280),f,c
 49979   016830  501B               	movf	(??___flmul+1)^(0+1280),w,c
 49980   016832  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 49981   016834  501C               	movf	(??___flmul+2)^(0+1280),w,c
 49982   016836  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 49983   016838  501D               	movf	(??___flmul+3)^(0+1280),w,c
 49984   01683A  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 49985   01683C  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 49986   016840  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 49987   016844  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 49988   016848  6A20               	clrf	___flmul@grs^(0+1280),c
 49989   01684A  501F               	movf	___flmul@aexp^(0+1280),w,c
 49990   01684C  C524  F51A         	movff	___flmul@bexp,??___flmul
 49991   016850  6A1B               	clrf	(??___flmul+1)^(0+1280),c
 49992   016852  261A               	addwf	??___flmul^(0+1280),f,c
 49993   016854  0E00               	movlw	0
 49994   016856  221B               	addwfc	(??___flmul+1)^(0+1280),f,c
 49995   016858  0E82               	movlw	130
 49996   01685A  241A               	addwf	??___flmul^(0+1280),w,c
 49997   01685C  6E29               	movwf	___flmul@temp^(0+1280),c
 49998   01685E  0EFF               	movlw	255
 49999   016860  201B               	addwfc	(??___flmul+1)^(0+1280),w,c
 50000   016862  6E2A               	movwf	(___flmul@temp+1)^(0+1280),c
 50001   016864  EF49  F0B4         	goto	l19899
 50002   016868                     l19893:
 50003   016868  90D8               	bcf	status,0,c
 50004   01686A  3625               	rlcf	___flmul@prod^(0+1280),f,c
 50005   01686C  3626               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 50006   01686E  3627               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 50007   016870  3628               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 50008   016872  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 50009   016874  EF3E  F0B4         	goto	u26141
 50010   016878  EF40  F0B4         	goto	u26140
 50011   01687C                     u26141:
 50012   01687C  EF41  F0B4         	goto	l3248
 50013   016880                     u26140:
 50014   016880  8025               	bsf	___flmul@prod^(0+1280),0,c
 50015   016882                     l3248:
 50016   016882  90D8               	bcf	status,0,c
 50017   016884  3620               	rlcf	___flmul@grs^(0+1280),f,c
 50018   016886  3621               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 50019   016888  3622               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 50020   01688A  3623               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 50021   01688C  0629               	decf	___flmul@temp^(0+1280),f,c
 50022   01688E  A0D8               	btfss	status,0,c
 50023   016890  062A               	decf	(___flmul@temp+1)^(0+1280),f,c
 50024   016892                     l19899:
 50025   016892  AE27               	btfss	(___flmul@prod+2)^(0+1280),7,c
 50026   016894  EF4E  F0B4         	goto	u26151
 50027   016898  EF50  F0B4         	goto	u26150
 50028   01689C                     u26151:
 50029   01689C  EF34  F0B4         	goto	l19893
 50030   0168A0                     u26150:
 50031   0168A0  6A1F               	clrf	___flmul@aexp^(0+1280),c
 50032   0168A2  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 50033   0168A4  EF56  F0B4         	goto	u26161
 50034   0168A8  EF58  F0B4         	goto	u26160
 50035   0168AC                     u26161:
 50036   0168AC  EF7C  F0B4         	goto	l3250
 50037   0168B0                     u26160:
 50038   0168B0  0EFF               	movlw	255
 50039   0168B2  1420               	andwf	___flmul@grs^(0+1280),w,c
 50040   0168B4  6E1A               	movwf	??___flmul^(0+1280),c
 50041   0168B6  0EFF               	movlw	255
 50042   0168B8  1421               	andwf	(___flmul@grs+1)^(0+1280),w,c
 50043   0168BA  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 50044   0168BC  0EFF               	movlw	255
 50045   0168BE  1422               	andwf	(___flmul@grs+2)^(0+1280),w,c
 50046   0168C0  6E1C               	movwf	(??___flmul+2)^(0+1280),c
 50047   0168C2  0E7F               	movlw	127
 50048   0168C4  1423               	andwf	(___flmul@grs+3)^(0+1280),w,c
 50049   0168C6  6E1D               	movwf	(??___flmul+3)^(0+1280),c
 50050   0168C8  501A               	movf	??___flmul^(0+1280),w,c
 50051   0168CA  101B               	iorwf	(??___flmul+1)^(0+1280),w,c
 50052   0168CC  101C               	iorwf	(??___flmul+2)^(0+1280),w,c
 50053   0168CE  101D               	iorwf	(??___flmul+3)^(0+1280),w,c
 50054   0168D0  B4D8               	btfsc	status,2,c
 50055   0168D2  EF6D  F0B4         	goto	u26171
 50056   0168D6  EF6F  F0B4         	goto	u26170
 50057   0168DA                     u26171:
 50058   0168DA  EF73  F0B4         	goto	l3251
 50059   0168DE                     u26170:
 50060   0168DE                     l19903:
 50061   0168DE  0E01               	movlw	1
 50062   0168E0  6E1F               	movwf	___flmul@aexp^(0+1280),c
 50063   0168E2  EF7C  F0B4         	goto	l3250
 50064   0168E6                     l3251:
 50065   0168E6  A025               	btfss	___flmul@prod^(0+1280),0,c
 50066   0168E8  EF78  F0B4         	goto	u26181
 50067   0168EC  EF7A  F0B4         	goto	u26180
 50068   0168F0                     u26181:
 50069   0168F0  EF7C  F0B4         	goto	l3250
 50070   0168F4                     u26180:
 50071   0168F4  EF6F  F0B4         	goto	l19903
 50072   0168F8                     l3250:
 50073   0168F8  501F               	movf	___flmul@aexp^(0+1280),w,c
 50074   0168FA  B4D8               	btfsc	status,2,c
 50075   0168FC  EF82  F0B4         	goto	u26191
 50076   016900  EF84  F0B4         	goto	u26190
 50077   016904                     u26191:
 50078   016904  EFA8  F0B4         	goto	l19915
 50079   016908                     u26190:
 50080   016908  0E01               	movlw	1
 50081   01690A  2625               	addwf	___flmul@prod^(0+1280),f,c
 50082   01690C  0E00               	movlw	0
 50083   01690E  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 50084   016910  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 50085   016912  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 50086   016914  A028               	btfss	(___flmul@prod+3)^(0+1280),0,c
 50087   016916  EF8F  F0B4         	goto	u26201
 50088   01691A  EF91  F0B4         	goto	u26200
 50089   01691E                     u26201:
 50090   01691E  EFA8  F0B4         	goto	l19915
 50091   016922                     u26200:
 50092   016922  C525  F51A         	movff	___flmul@prod,??___flmul
 50093   016926  C526  F51B         	movff	___flmul@prod+1,??___flmul+1
 50094   01692A  C527  F51C         	movff	___flmul@prod+2,??___flmul+2
 50095   01692E  C528  F51D         	movff	___flmul@prod+3,??___flmul+3
 50096   016932  341D               	rlcf	(??___flmul+3)^(0+1280),w,c
 50097   016934  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 50098   016936  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 50099   016938  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 50100   01693A  321A               	rrcf	??___flmul^(0+1280),f,c
 50101   01693C  C51A  F525         	movff	??___flmul,___flmul@prod
 50102   016940  C51B  F526         	movff	??___flmul+1,___flmul@prod+1
 50103   016944  C51C  F527         	movff	??___flmul+2,___flmul@prod+2
 50104   016948  C51D  F528         	movff	??___flmul+3,___flmul@prod+3
 50105   01694C  4A29               	infsnz	___flmul@temp^(0+1280),f,c
 50106   01694E  2A2A               	incf	(___flmul@temp+1)^(0+1280),f,c
 50107   016950                     l19915:
 50108   016950  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 50109   016952  EFB3  F0B4         	goto	u26211
 50110   016956  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 50111   016958  E108               	bnz	u26210
 50112   01695A  2829               	incf	___flmul@temp^(0+1280),w,c
 50113   01695C  A0D8               	btfss	status,0,c
 50114   01695E  EFB3  F0B4         	goto	u26211
 50115   016962  EFB5  F0B4         	goto	u26210
 50116   016966                     u26211:
 50117   016966  EFBF  F0B4         	goto	l19919
 50118   01696A                     u26210:
 50119   01696A  0E00               	movlw	0
 50120   01696C  6E25               	movwf	___flmul@prod^(0+1280),c
 50121   01696E  0E00               	movlw	0
 50122   016970  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 50123   016972  0E80               	movlw	128
 50124   016974  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 50125   016976  0E7F               	movlw	127
 50126   016978  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50127   01697A  EFEC  F0B4         	goto	l19933
 50128   01697E                     l19919:
 50129   01697E  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 50130   016980  EFCC  F0B4         	goto	u26220
 50131   016984  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 50132   016986  E106               	bnz	u26221
 50133   016988  0429               	decf	___flmul@temp^(0+1280),w,c
 50134   01698A  B0D8               	btfsc	status,0,c
 50135   01698C  EFCA  F0B4         	goto	u26221
 50136   016990  EFCC  F0B4         	goto	u26220
 50137   016994                     u26221:
 50138   016994  EFD7  F0B4         	goto	l3258
 50139   016998                     u26220:
 50140   016998  0E00               	movlw	0
 50141   01699A  6E25               	movwf	___flmul@prod^(0+1280),c
 50142   01699C  0E00               	movlw	0
 50143   01699E  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 50144   0169A0  0E00               	movlw	0
 50145   0169A2  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 50146   0169A4  0E00               	movlw	0
 50147   0169A6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50148   0169A8  6A1E               	clrf	___flmul@sign^(0+1280),c
 50149   0169AA  EFEC  F0B4         	goto	l19933
 50150   0169AE                     l3258:
 50151   0169AE  C529  F524         	movff	___flmul@temp,___flmul@bexp
 50152   0169B2  0EFF               	movlw	255
 50153   0169B4  1625               	andwf	___flmul@prod^(0+1280),f,c
 50154   0169B6  0EFF               	movlw	255
 50155   0169B8  1626               	andwf	(___flmul@prod+1)^(0+1280),f,c
 50156   0169BA  0E7F               	movlw	127
 50157   0169BC  1627               	andwf	(___flmul@prod+2)^(0+1280),f,c
 50158   0169BE  0E00               	movlw	0
 50159   0169C0  1628               	andwf	(___flmul@prod+3)^(0+1280),f,c
 50160   0169C2  A024               	btfss	___flmul@bexp^(0+1280),0,c
 50161   0169C4  EFE6  F0B4         	goto	u26231
 50162   0169C8  EFE8  F0B4         	goto	u26230
 50163   0169CC                     u26231:
 50164   0169CC  EFE9  F0B4         	goto	l19931
 50165   0169D0                     u26230:
 50166   0169D0  8E27               	bsf	(___flmul@prod+2)^(0+1280),7,c
 50167   0169D2                     l19931:
 50168   0169D2  90D8               	bcf	status,0,c
 50169   0169D4  3024               	rrcf	___flmul@bexp^(0+1280),w,c
 50170   0169D6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 50171   0169D8                     l19933:
 50172   0169D8  501E               	movf	___flmul@sign^(0+1280),w,c
 50173   0169DA  1228               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 50174   0169DC  C525  F512         	movff	___flmul@prod,?___flmul
 50175   0169E0  C526  F513         	movff	___flmul@prod+1,?___flmul+1
 50176   0169E4  C527  F514         	movff	___flmul@prod+2,?___flmul+2
 50177   0169E8  C528  F515         	movff	___flmul@prod+3,?___flmul+3
 50178   0169EC                     l3245:
 50179   0169EC  0012               	return		;funcret
 50180   0169EE                     __end_of___flmul:
 50181                           	callstack 0
 50182                           
 50183 ;; *************** function ___flge *****************
 50184 ;; Defined at:
 50185 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
 50186 ;; Parameters:    Size  Location     Type
 50187 ;;  ff1             4   42[COMRAM] unsigned char 
 50188 ;;  ff2             4   46[COMRAM] unsigned char 
 50189 ;; Auto vars:     Size  Location     Type
 50190 ;;		None
 50191 ;; Return value:  Size  Location     Type
 50192 ;;		None               void
 50193 ;; Registers used:
 50194 ;;		wreg, status,2, status,0
 50195 ;; Tracked objects:
 50196 ;;		On entry : 0/0
 50197 ;;		On exit  : 0/0
 50198 ;;		Unchanged: 0/0
 50199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50200 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50203 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50204 ;;Total ram usage:       12 bytes
 50205 ;; Hardware stack levels used: 1
 50206 ;; Hardware stack levels required when called: 1
 50207 ;; This function calls:
 50208 ;;		Nothing
 50209 ;; This function is called by:
 50210 ;;		_efgtoa
 50211 ;;		_ilog10
 50212 ;; This function uses a non-reentrant model
 50213 ;;
 50214                           
 50215                           	psect	text139
 50216   01D242                     __ptext139:
 50217                           	callstack 0
 50218   01D242                     ___flge:
 50219                           	callstack 114
 50220   01D242  0E00               	movlw	0
 50221   01D244  142B               	andwf	___flge@ff1^(0+1280),w,c
 50222   01D246  6E33               	movwf	??___flge^(0+1280),c
 50223   01D248  0E00               	movlw	0
 50224   01D24A  142C               	andwf	(___flge@ff1+1)^(0+1280),w,c
 50225   01D24C  6E34               	movwf	(??___flge+1)^(0+1280),c
 50226   01D24E  0E80               	movlw	128
 50227   01D250  142D               	andwf	(___flge@ff1+2)^(0+1280),w,c
 50228   01D252  6E35               	movwf	(??___flge+2)^(0+1280),c
 50229   01D254  0E7F               	movlw	127
 50230   01D256  142E               	andwf	(___flge@ff1+3)^(0+1280),w,c
 50231   01D258  6E36               	movwf	(??___flge+3)^(0+1280),c
 50232   01D25A  5033               	movf	??___flge^(0+1280),w,c
 50233   01D25C  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 50234   01D25E  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 50235   01D260  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 50236   01D262  A4D8               	btfss	status,2,c
 50237   01D264  EF36  F0E9         	goto	u26271
 50238   01D268  EF38  F0E9         	goto	u26270
 50239   01D26C                     u26271:
 50240   01D26C  EF40  F0E9         	goto	l19965
 50241   01D270                     u26270:
 50242   01D270  0E00               	movlw	0
 50243   01D272  6E2B               	movwf	___flge@ff1^(0+1280),c
 50244   01D274  0E00               	movlw	0
 50245   01D276  6E2C               	movwf	(___flge@ff1+1)^(0+1280),c
 50246   01D278  0E00               	movlw	0
 50247   01D27A  6E2D               	movwf	(___flge@ff1+2)^(0+1280),c
 50248   01D27C  0E00               	movlw	0
 50249   01D27E  6E2E               	movwf	(___flge@ff1+3)^(0+1280),c
 50250   01D280                     l19965:
 50251   01D280  0E00               	movlw	0
 50252   01D282  142F               	andwf	___flge@ff2^(0+1280),w,c
 50253   01D284  6E33               	movwf	??___flge^(0+1280),c
 50254   01D286  0E00               	movlw	0
 50255   01D288  1430               	andwf	(___flge@ff2+1)^(0+1280),w,c
 50256   01D28A  6E34               	movwf	(??___flge+1)^(0+1280),c
 50257   01D28C  0E80               	movlw	128
 50258   01D28E  1431               	andwf	(___flge@ff2+2)^(0+1280),w,c
 50259   01D290  6E35               	movwf	(??___flge+2)^(0+1280),c
 50260   01D292  0E7F               	movlw	127
 50261   01D294  1432               	andwf	(___flge@ff2+3)^(0+1280),w,c
 50262   01D296  6E36               	movwf	(??___flge+3)^(0+1280),c
 50263   01D298  5033               	movf	??___flge^(0+1280),w,c
 50264   01D29A  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 50265   01D29C  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 50266   01D29E  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 50267   01D2A0  A4D8               	btfss	status,2,c
 50268   01D2A2  EF55  F0E9         	goto	u26281
 50269   01D2A6  EF57  F0E9         	goto	u26280
 50270   01D2AA                     u26281:
 50271   01D2AA  EF5F  F0E9         	goto	l19969
 50272   01D2AE                     u26280:
 50273   01D2AE  0E00               	movlw	0
 50274   01D2B0  6E2F               	movwf	___flge@ff2^(0+1280),c
 50275   01D2B2  0E00               	movlw	0
 50276   01D2B4  6E30               	movwf	(___flge@ff2+1)^(0+1280),c
 50277   01D2B6  0E00               	movlw	0
 50278   01D2B8  6E31               	movwf	(___flge@ff2+2)^(0+1280),c
 50279   01D2BA  0E00               	movlw	0
 50280   01D2BC  6E32               	movwf	(___flge@ff2+3)^(0+1280),c
 50281   01D2BE                     l19969:
 50282   01D2BE  AE2E               	btfss	(___flge@ff1+3)^(0+1280),7,c
 50283   01D2C0  EF64  F0E9         	goto	u26291
 50284   01D2C4  EF66  F0E9         	goto	u26290
 50285   01D2C8                     u26291:
 50286   01D2C8  EF6F  F0E9         	goto	l19973
 50287   01D2CC                     u26290:
 50288   01D2CC  6C2B               	negf	___flge@ff1^(0+1280),c
 50289   01D2CE  1E2C               	comf	(___flge@ff1+1)^(0+1280),f,c
 50290   01D2D0  B0D8               	btfsc	status,0,c
 50291   01D2D2  2A2C               	incf	(___flge@ff1+1)^(0+1280),f,c
 50292   01D2D4  1E2D               	comf	(___flge@ff1+2)^(0+1280),f,c
 50293   01D2D6  B0D8               	btfsc	status,0,c
 50294   01D2D8  2A2D               	incf	(___flge@ff1+2)^(0+1280),f,c
 50295   01D2DA  0E80               	movlw	128
 50296   01D2DC  562E               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 50297   01D2DE                     l19973:
 50298   01D2DE  AE32               	btfss	(___flge@ff2+3)^(0+1280),7,c
 50299   01D2E0  EF74  F0E9         	goto	u26301
 50300   01D2E4  EF76  F0E9         	goto	u26300
 50301   01D2E8                     u26301:
 50302   01D2E8  EF7F  F0E9         	goto	l2892
 50303   01D2EC                     u26300:
 50304   01D2EC  6C2F               	negf	___flge@ff2^(0+1280),c
 50305   01D2EE  1E30               	comf	(___flge@ff2+1)^(0+1280),f,c
 50306   01D2F0  B0D8               	btfsc	status,0,c
 50307   01D2F2  2A30               	incf	(___flge@ff2+1)^(0+1280),f,c
 50308   01D2F4  1E31               	comf	(___flge@ff2+2)^(0+1280),f,c
 50309   01D2F6  B0D8               	btfsc	status,0,c
 50310   01D2F8  2A31               	incf	(___flge@ff2+2)^(0+1280),f,c
 50311   01D2FA  0E80               	movlw	128
 50312   01D2FC  5632               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 50313   01D2FE                     l2892:
 50314   01D2FE  0E00               	movlw	0
 50315   01D300  1A2B               	xorwf	___flge@ff1^(0+1280),f,c
 50316   01D302  0E00               	movlw	0
 50317   01D304  1A2C               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 50318   01D306  0E00               	movlw	0
 50319   01D308  1A2D               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 50320   01D30A  0E80               	movlw	128
 50321   01D30C  1A2E               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 50322   01D30E  0E00               	movlw	0
 50323   01D310  1A2F               	xorwf	___flge@ff2^(0+1280),f,c
 50324   01D312  0E00               	movlw	0
 50325   01D314  1A30               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 50326   01D316  0E00               	movlw	0
 50327   01D318  1A31               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 50328   01D31A  0E80               	movlw	128
 50329   01D31C  1A32               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 50330   01D31E  502F               	movf	___flge@ff2^(0+1280),w,c
 50331   01D320  5C2B               	subwf	___flge@ff1^(0+1280),w,c
 50332   01D322  5030               	movf	(___flge@ff2+1)^(0+1280),w,c
 50333   01D324  582C               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 50334   01D326  5031               	movf	(___flge@ff2+2)^(0+1280),w,c
 50335   01D328  582D               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 50336   01D32A  5032               	movf	(___flge@ff2+3)^(0+1280),w,c
 50337   01D32C  582E               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 50338   01D32E  B0D8               	btfsc	status,0,c
 50339   01D330  EF9C  F0E9         	goto	u26311
 50340   01D334  EF9E  F0E9         	goto	u26310
 50341   01D338                     u26311:
 50342   01D338  EFA1  F0E9         	goto	l19979
 50343   01D33C                     u26310:
 50344   01D33C  90D8               	bcf	status,0,c
 50345   01D33E  EFA2  F0E9         	goto	l2897
 50346   01D342                     l19979:
 50347   01D342  80D8               	bsf	status,0,c
 50348   01D344                     l2897:
 50349   01D344  0012               	return		;funcret
 50350   01D346                     __end_of___flge:
 50351                           	callstack 0
 50352                           
 50353 ;; *************** function ___fleq *****************
 50354 ;; Defined at:
 50355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
 50356 ;; Parameters:    Size  Location     Type
 50357 ;;  ff1             4    3[COMRAM] unsigned char 
 50358 ;;  ff2             4    7[COMRAM] unsigned char 
 50359 ;; Auto vars:     Size  Location     Type
 50360 ;;		None
 50361 ;; Return value:  Size  Location     Type
 50362 ;;		None               void
 50363 ;; Registers used:
 50364 ;;		wreg, status,2, status,0
 50365 ;; Tracked objects:
 50366 ;;		On entry : 0/0
 50367 ;;		On exit  : 0/0
 50368 ;;		Unchanged: 0/0
 50369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50370 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50373 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50374 ;;Total ram usage:       12 bytes
 50375 ;; Hardware stack levels used: 1
 50376 ;; Hardware stack levels required when called: 1
 50377 ;; This function calls:
 50378 ;;		Nothing
 50379 ;; This function is called by:
 50380 ;;		_efgtoa
 50381 ;;		_ftoa
 50382 ;; This function uses a non-reentrant model
 50383 ;;
 50384                           
 50385                           	psect	text140
 50386   01E902                     __ptext140:
 50387                           	callstack 0
 50388   01E902                     ___fleq:
 50389                           	callstack 114
 50390   01E902  0E00               	movlw	0
 50391   01E904  1404               	andwf	___fleq@ff1^(0+1280),w,c
 50392   01E906  6E0C               	movwf	??___fleq^(0+1280),c
 50393   01E908  0E00               	movlw	0
 50394   01E90A  1405               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 50395   01E90C  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 50396   01E90E  0E80               	movlw	128
 50397   01E910  1406               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 50398   01E912  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 50399   01E914  0E7F               	movlw	127
 50400   01E916  1407               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 50401   01E918  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 50402   01E91A  500C               	movf	??___fleq^(0+1280),w,c
 50403   01E91C  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 50404   01E91E  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 50405   01E920  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 50406   01E922  A4D8               	btfss	status,2,c
 50407   01E924  EF96  F0F4         	goto	u26241
 50408   01E928  EF98  F0F4         	goto	u26240
 50409   01E92C                     u26241:
 50410   01E92C  EFA0  F0F4         	goto	l19949
 50411   01E930                     u26240:
 50412   01E930  0E00               	movlw	0
 50413   01E932  6E04               	movwf	___fleq@ff1^(0+1280),c
 50414   01E934  0E00               	movlw	0
 50415   01E936  6E05               	movwf	(___fleq@ff1+1)^(0+1280),c
 50416   01E938  0E00               	movlw	0
 50417   01E93A  6E06               	movwf	(___fleq@ff1+2)^(0+1280),c
 50418   01E93C  0E00               	movlw	0
 50419   01E93E  6E07               	movwf	(___fleq@ff1+3)^(0+1280),c
 50420   01E940                     l19949:
 50421   01E940  0E00               	movlw	0
 50422   01E942  1408               	andwf	___fleq@ff2^(0+1280),w,c
 50423   01E944  6E0C               	movwf	??___fleq^(0+1280),c
 50424   01E946  0E00               	movlw	0
 50425   01E948  1409               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 50426   01E94A  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 50427   01E94C  0E80               	movlw	128
 50428   01E94E  140A               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 50429   01E950  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 50430   01E952  0E7F               	movlw	127
 50431   01E954  140B               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 50432   01E956  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 50433   01E958  500C               	movf	??___fleq^(0+1280),w,c
 50434   01E95A  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 50435   01E95C  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 50436   01E95E  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 50437   01E960  A4D8               	btfss	status,2,c
 50438   01E962  EFB5  F0F4         	goto	u26251
 50439   01E966  EFB7  F0F4         	goto	u26250
 50440   01E96A                     u26251:
 50441   01E96A  EFBF  F0F4         	goto	l19953
 50442   01E96E                     u26250:
 50443   01E96E  0E00               	movlw	0
 50444   01E970  6E08               	movwf	___fleq@ff2^(0+1280),c
 50445   01E972  0E00               	movlw	0
 50446   01E974  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 50447   01E976  0E00               	movlw	0
 50448   01E978  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 50449   01E97A  0E00               	movlw	0
 50450   01E97C  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 50451   01E97E                     l19953:
 50452   01E97E  5008               	movf	___fleq@ff2^(0+1280),w,c
 50453   01E980  1804               	xorwf	___fleq@ff1^(0+1280),w,c
 50454   01E982  E10F               	bnz	u26260
 50455   01E984  5009               	movf	(___fleq@ff2+1)^(0+1280),w,c
 50456   01E986  1805               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 50457   01E988  E10C               	bnz	u26260
 50458   01E98A  500A               	movf	(___fleq@ff2+2)^(0+1280),w,c
 50459   01E98C  1806               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 50460   01E98E  E109               	bnz	u26260
 50461   01E990  500B               	movf	(___fleq@ff2+3)^(0+1280),w,c
 50462   01E992  1807               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 50463   01E994  B4D8               	btfsc	status,2,c
 50464   01E996  EFCF  F0F4         	goto	u26261
 50465   01E99A  EFD1  F0F4         	goto	u26260
 50466   01E99E                     u26261:
 50467   01E99E  EFD4  F0F4         	goto	l19957
 50468   01E9A2                     u26260:
 50469   01E9A2  90D8               	bcf	status,0,c
 50470   01E9A4  EFD5  F0F4         	goto	l2886
 50471   01E9A8                     l19957:
 50472   01E9A8  80D8               	bsf	status,0,c
 50473   01E9AA                     l2886:
 50474   01E9AA  0012               	return		;funcret
 50475   01E9AC                     __end_of___fleq:
 50476                           	callstack 0
 50477                           
 50478 ;; *************** function ___fldiv *****************
 50479 ;; Defined at:
 50480 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 50481 ;; Parameters:    Size  Location     Type
 50482 ;;  b               4   42[COMRAM] unsigned char 
 50483 ;;  a               4   46[COMRAM] unsigned char 
 50484 ;; Auto vars:     Size  Location     Type
 50485 ;;  grs             4   61[COMRAM] unsigned long 
 50486 ;;  rem             4   54[COMRAM] unsigned long 
 50487 ;;  new_exp         2   59[COMRAM] short 
 50488 ;;  aexp            1   66[COMRAM] unsigned char 
 50489 ;;  bexp            1   65[COMRAM] unsigned char 
 50490 ;;  sign            1   58[COMRAM] unsigned char 
 50491 ;; Return value:  Size  Location     Type
 50492 ;;                  4   42[COMRAM] unsigned char 
 50493 ;; Registers used:
 50494 ;;		wreg, status,2, status,0
 50495 ;; Tracked objects:
 50496 ;;		On entry : 0/0
 50497 ;;		On exit  : 0/0
 50498 ;;		Unchanged: 0/0
 50499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50500 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50501 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50503 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50504 ;;Total ram usage:       25 bytes
 50505 ;; Hardware stack levels used: 1
 50506 ;; Hardware stack levels required when called: 1
 50507 ;; This function calls:
 50508 ;;		Nothing
 50509 ;; This function is called by:
 50510 ;;		_main
 50511 ;;		_efgtoa
 50512 ;;		_ilog10
 50513 ;;		_i10x
 50514 ;;		_ftoa
 50515 ;; This function uses a non-reentrant model
 50516 ;;
 50517                           
 50518                           	psect	text141
 50519   017554                     __ptext141:
 50520                           	callstack 0
 50521   017554                     ___fldiv:
 50522                           	callstack 114
 50523   017554  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 50524   017556  0B80               	andlw	128
 50525   017558  6E3B               	movwf	___fldiv@sign^(0+1280),c
 50526   01755A  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 50527   01755C  242E               	addwf	(___fldiv@b+3)^(0+1280),w,c
 50528   01755E  6E42               	movwf	___fldiv@bexp^(0+1280),c
 50529   017560  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 50530   017562  EFB5  F0BA         	goto	u25821
 50531   017566  EFB7  F0BA         	goto	u25820
 50532   01756A                     u25821:
 50533   01756A  EFB8  F0BA         	goto	l19681
 50534   01756E                     u25820:
 50535   01756E  8042               	bsf	___fldiv@bexp^(0+1280),0,c
 50536   017570                     l19681:
 50537   017570  5042               	movf	___fldiv@bexp^(0+1280),w,c
 50538   017572  B4D8               	btfsc	status,2,c
 50539   017574  EFBE  F0BA         	goto	u25831
 50540   017578  EFC0  F0BA         	goto	u25830
 50541   01757C                     u25831:
 50542   01757C  EFD4  F0BA         	goto	l19691
 50543   017580                     u25830:
 50544   017580  2842               	incf	___fldiv@bexp^(0+1280),w,c
 50545   017582  A4D8               	btfss	status,2,c
 50546   017584  EFC6  F0BA         	goto	u25841
 50547   017588  EFC8  F0BA         	goto	u25840
 50548   01758C                     u25841:
 50549   01758C  EFD0  F0BA         	goto	l19687
 50550   017590                     u25840:
 50551   017590  0E00               	movlw	0
 50552   017592  6E2B               	movwf	___fldiv@b^(0+1280),c
 50553   017594  0E00               	movlw	0
 50554   017596  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50555   017598  0E00               	movlw	0
 50556   01759A  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50557   01759C  0E00               	movlw	0
 50558   01759E  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50559   0175A0                     l19687:
 50560   0175A0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 50561   0175A2  6A2E               	clrf	(___fldiv@b+3)^(0+1280),c
 50562   0175A4  EFDC  F0BA         	goto	l19693
 50563   0175A8                     l19691:
 50564   0175A8  0E00               	movlw	0
 50565   0175AA  6E2B               	movwf	___fldiv@b^(0+1280),c
 50566   0175AC  0E00               	movlw	0
 50567   0175AE  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50568   0175B0  0E00               	movlw	0
 50569   0175B2  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50570   0175B4  0E00               	movlw	0
 50571   0175B6  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50572   0175B8                     l19693:
 50573   0175B8  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50574   0175BA  0B80               	andlw	128
 50575   0175BC  1A3B               	xorwf	___fldiv@sign^(0+1280),f,c
 50576   0175BE  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50577   0175C0  2432               	addwf	(___fldiv@a+3)^(0+1280),w,c
 50578   0175C2  6E43               	movwf	___fldiv@aexp^(0+1280),c
 50579   0175C4  AE31               	btfss	(___fldiv@a+2)^(0+1280),7,c
 50580   0175C6  EFE7  F0BA         	goto	u25851
 50581   0175CA  EFE9  F0BA         	goto	u25850
 50582   0175CE                     u25851:
 50583   0175CE  EFEA  F0BA         	goto	l19701
 50584   0175D2                     u25850:
 50585   0175D2  8043               	bsf	___fldiv@aexp^(0+1280),0,c
 50586   0175D4                     l19701:
 50587   0175D4  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50588   0175D6  B4D8               	btfsc	status,2,c
 50589   0175D8  EFF0  F0BA         	goto	u25861
 50590   0175DC  EFF2  F0BA         	goto	u25860
 50591   0175E0                     u25861:
 50592   0175E0  EF06  F0BB         	goto	l19711
 50593   0175E4                     u25860:
 50594   0175E4  2843               	incf	___fldiv@aexp^(0+1280),w,c
 50595   0175E6  A4D8               	btfss	status,2,c
 50596   0175E8  EFF8  F0BA         	goto	u25871
 50597   0175EC  EFFA  F0BA         	goto	u25870
 50598   0175F0                     u25871:
 50599   0175F0  EF02  F0BB         	goto	l19707
 50600   0175F4                     u25870:
 50601   0175F4  0E00               	movlw	0
 50602   0175F6  6E2F               	movwf	___fldiv@a^(0+1280),c
 50603   0175F8  0E00               	movlw	0
 50604   0175FA  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 50605   0175FC  0E00               	movlw	0
 50606   0175FE  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 50607   017600  0E00               	movlw	0
 50608   017602  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 50609   017604                     l19707:
 50610   017604  8E31               	bsf	(___fldiv@a+2)^(0+1280),7,c
 50611   017606  6A32               	clrf	(___fldiv@a+3)^(0+1280),c
 50612   017608  EF0E  F0BB         	goto	l19713
 50613   01760C                     l19711:
 50614   01760C  0E00               	movlw	0
 50615   01760E  6E2F               	movwf	___fldiv@a^(0+1280),c
 50616   017610  0E00               	movlw	0
 50617   017612  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 50618   017614  0E00               	movlw	0
 50619   017616  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 50620   017618  0E00               	movlw	0
 50621   01761A  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 50622   01761C                     l19713:
 50623   01761C  502F               	movf	___fldiv@a^(0+1280),w,c
 50624   01761E  1030               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 50625   017620  1031               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 50626   017622  1032               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 50627   017624  A4D8               	btfss	status,2,c
 50628   017626  EF17  F0BB         	goto	u25881
 50629   01762A  EF19  F0BB         	goto	u25880
 50630   01762E                     u25881:
 50631   01762E  EF31  F0BB         	goto	l19725
 50632   017632                     u25880:
 50633   017632  0E00               	movlw	0
 50634   017634  6E2B               	movwf	___fldiv@b^(0+1280),c
 50635   017636  0E00               	movlw	0
 50636   017638  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50637   01763A  0E00               	movlw	0
 50638   01763C  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50639   01763E  0E00               	movlw	0
 50640   017640  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50641   017642  0E80               	movlw	128
 50642   017644  122D               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 50643   017646  0E7F               	movlw	127
 50644   017648  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 50645   01764A                     l19719:
 50646   01764A  503B               	movf	___fldiv@sign^(0+1280),w,c
 50647   01764C  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 50648   01764E  C52B  F52B         	movff	___fldiv@b,?___fldiv
 50649   017652  C52C  F52C         	movff	___fldiv@b+1,?___fldiv+1
 50650   017656  C52D  F52D         	movff	___fldiv@b+2,?___fldiv+2
 50651   01765A  C52E  F52E         	movff	___fldiv@b+3,?___fldiv+3
 50652   01765E  EF71  F0BC         	goto	l3209
 50653   017662                     l19725:
 50654   017662  5042               	movf	___fldiv@bexp^(0+1280),w,c
 50655   017664  A4D8               	btfss	status,2,c
 50656   017666  EF37  F0BB         	goto	u25891
 50657   01766A  EF39  F0BB         	goto	u25890
 50658   01766E                     u25891:
 50659   01766E  EF43  F0BB         	goto	l19733
 50660   017672                     u25890:
 50661   017672  0E00               	movlw	0
 50662   017674  6E2B               	movwf	?___fldiv^(0+1280),c
 50663   017676  0E00               	movlw	0
 50664   017678  6E2C               	movwf	(?___fldiv+1)^(0+1280),c
 50665   01767A  0E00               	movlw	0
 50666   01767C  6E2D               	movwf	(?___fldiv+2)^(0+1280),c
 50667   01767E  0E00               	movlw	0
 50668   017680  6E2E               	movwf	(?___fldiv+3)^(0+1280),c
 50669   017682  EF71  F0BC         	goto	l3209
 50670   017686                     l19733:
 50671   017686  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50672   017688  C542  F533         	movff	___fldiv@bexp,??___fldiv
 50673   01768C  6A34               	clrf	(??___fldiv+1)^(0+1280),c
 50674   01768E  5E33               	subwf	??___fldiv^(0+1280),f,c
 50675   017690  0E00               	movlw	0
 50676   017692  5A34               	subwfb	(??___fldiv+1)^(0+1280),f,c
 50677   017694  0E7F               	movlw	127
 50678   017696  2433               	addwf	??___fldiv^(0+1280),w,c
 50679   017698  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 50680   01769A  0E00               	movlw	0
 50681   01769C  2034               	addwfc	(??___fldiv+1)^(0+1280),w,c
 50682   01769E  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50683   0176A0  C52B  F537         	movff	___fldiv@b,___fldiv@rem
 50684   0176A4  C52C  F538         	movff	___fldiv@b+1,___fldiv@rem+1
 50685   0176A8  C52D  F539         	movff	___fldiv@b+2,___fldiv@rem+2
 50686   0176AC  C52E  F53A         	movff	___fldiv@b+3,___fldiv@rem+3
 50687   0176B0  0E00               	movlw	0
 50688   0176B2  6E2B               	movwf	___fldiv@b^(0+1280),c
 50689   0176B4  0E00               	movlw	0
 50690   0176B6  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50691   0176B8  0E00               	movlw	0
 50692   0176BA  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50693   0176BC  0E00               	movlw	0
 50694   0176BE  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50695   0176C0  0E00               	movlw	0
 50696   0176C2  6E3E               	movwf	___fldiv@grs^(0+1280),c
 50697   0176C4  0E00               	movlw	0
 50698   0176C6  6E3F               	movwf	(___fldiv@grs+1)^(0+1280),c
 50699   0176C8  0E00               	movlw	0
 50700   0176CA  6E40               	movwf	(___fldiv@grs+2)^(0+1280),c
 50701   0176CC  0E00               	movlw	0
 50702   0176CE  6E41               	movwf	(___fldiv@grs+3)^(0+1280),c
 50703   0176D0  6A43               	clrf	___fldiv@aexp^(0+1280),c
 50704   0176D2  EFA3  F0BB         	goto	l3211
 50705   0176D6                     l19743:
 50706   0176D6  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50707   0176D8  B4D8               	btfsc	status,2,c
 50708   0176DA  EF71  F0BB         	goto	u25901
 50709   0176DE  EF73  F0BB         	goto	u25900
 50710   0176E2                     u25901:
 50711   0176E2  EF8A  F0BB         	goto	l19751
 50712   0176E6                     u25900:
 50713   0176E6  90D8               	bcf	status,0,c
 50714   0176E8  3637               	rlcf	___fldiv@rem^(0+1280),f,c
 50715   0176EA  3638               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 50716   0176EC  3639               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 50717   0176EE  363A               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 50718   0176F0  90D8               	bcf	status,0,c
 50719   0176F2  362B               	rlcf	___fldiv@b^(0+1280),f,c
 50720   0176F4  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 50721   0176F6  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 50722   0176F8  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 50723   0176FA  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50724   0176FC  EF82  F0BB         	goto	u25911
 50725   017700  EF84  F0BB         	goto	u25910
 50726   017704                     u25911:
 50727   017704  EF85  F0BB         	goto	l3214
 50728   017708                     u25910:
 50729   017708  802B               	bsf	___fldiv@b^(0+1280),0,c
 50730   01770A                     l3214:
 50731   01770A  90D8               	bcf	status,0,c
 50732   01770C  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 50733   01770E  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 50734   017710  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 50735   017712  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 50736   017714                     l19751:
 50737   017714  502F               	movf	___fldiv@a^(0+1280),w,c
 50738   017716  5C37               	subwf	___fldiv@rem^(0+1280),w,c
 50739   017718  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 50740   01771A  5838               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 50741   01771C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 50742   01771E  5839               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 50743   017720  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50744   017722  583A               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 50745   017724  A0D8               	btfss	status,0,c
 50746   017726  EF97  F0BB         	goto	u25921
 50747   01772A  EF99  F0BB         	goto	u25920
 50748   01772E                     u25921:
 50749   01772E  EFA2  F0BB         	goto	l19757
 50750   017732                     u25920:
 50751   017732  8C41               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 50752   017734  502F               	movf	___fldiv@a^(0+1280),w,c
 50753   017736  5E37               	subwf	___fldiv@rem^(0+1280),f,c
 50754   017738  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 50755   01773A  5A38               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 50756   01773C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 50757   01773E  5A39               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 50758   017740  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 50759   017742  5A3A               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 50760   017744                     l19757:
 50761   017744  2A43               	incf	___fldiv@aexp^(0+1280),f,c
 50762   017746                     l3211:
 50763   017746  0E19               	movlw	25
 50764   017748  6443               	cpfsgt	___fldiv@aexp^(0+1280),c
 50765   01774A  EFA9  F0BB         	goto	u25931
 50766   01774E  EFAB  F0BB         	goto	u25930
 50767   017752                     u25931:
 50768   017752  EF6B  F0BB         	goto	l19743
 50769   017756                     u25930:
 50770   017756  5037               	movf	___fldiv@rem^(0+1280),w,c
 50771   017758  1038               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 50772   01775A  1039               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 50773   01775C  103A               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 50774   01775E  B4D8               	btfsc	status,2,c
 50775   017760  EFB4  F0BB         	goto	u25941
 50776   017764  EFB6  F0BB         	goto	u25940
 50777   017768                     u25941:
 50778   017768  EFCE  F0BB         	goto	l19769
 50779   01776C                     u25940:
 50780   01776C  803E               	bsf	___fldiv@grs^(0+1280),0,c
 50781   01776E  EFCE  F0BB         	goto	l19769
 50782   017772                     l19763:
 50783   017772  90D8               	bcf	status,0,c
 50784   017774  362B               	rlcf	___fldiv@b^(0+1280),f,c
 50785   017776  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 50786   017778  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 50787   01777A  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 50788   01777C  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50789   01777E  EFC3  F0BB         	goto	u25951
 50790   017782  EFC5  F0BB         	goto	u25950
 50791   017786                     u25951:
 50792   017786  EFC6  F0BB         	goto	l3220
 50793   01778A                     u25950:
 50794   01778A  802B               	bsf	___fldiv@b^(0+1280),0,c
 50795   01778C                     l3220:
 50796   01778C  90D8               	bcf	status,0,c
 50797   01778E  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 50798   017790  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 50799   017792  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 50800   017794  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 50801   017796  063C               	decf	___fldiv@new_exp^(0+1280),f,c
 50802   017798  A0D8               	btfss	status,0,c
 50803   01779A  063D               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 50804   01779C                     l19769:
 50805   01779C  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 50806   01779E  EFD3  F0BB         	goto	u25961
 50807   0177A2  EFD5  F0BB         	goto	u25960
 50808   0177A6                     u25961:
 50809   0177A6  EFB9  F0BB         	goto	l19763
 50810   0177AA                     u25960:
 50811   0177AA  6A43               	clrf	___fldiv@aexp^(0+1280),c
 50812   0177AC  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 50813   0177AE  EFDB  F0BB         	goto	u25971
 50814   0177B2  EFDD  F0BB         	goto	u25970
 50815   0177B6                     u25971:
 50816   0177B6  EF01  F0BC         	goto	l3222
 50817   0177BA                     u25970:
 50818   0177BA  0EFF               	movlw	255
 50819   0177BC  143E               	andwf	___fldiv@grs^(0+1280),w,c
 50820   0177BE  6E33               	movwf	??___fldiv^(0+1280),c
 50821   0177C0  0EFF               	movlw	255
 50822   0177C2  143F               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 50823   0177C4  6E34               	movwf	(??___fldiv+1)^(0+1280),c
 50824   0177C6  0EFF               	movlw	255
 50825   0177C8  1440               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 50826   0177CA  6E35               	movwf	(??___fldiv+2)^(0+1280),c
 50827   0177CC  0E7F               	movlw	127
 50828   0177CE  1441               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 50829   0177D0  6E36               	movwf	(??___fldiv+3)^(0+1280),c
 50830   0177D2  5033               	movf	??___fldiv^(0+1280),w,c
 50831   0177D4  1034               	iorwf	(??___fldiv+1)^(0+1280),w,c
 50832   0177D6  1035               	iorwf	(??___fldiv+2)^(0+1280),w,c
 50833   0177D8  1036               	iorwf	(??___fldiv+3)^(0+1280),w,c
 50834   0177DA  B4D8               	btfsc	status,2,c
 50835   0177DC  EFF2  F0BB         	goto	u25981
 50836   0177E0  EFF4  F0BB         	goto	u25980
 50837   0177E4                     u25981:
 50838   0177E4  EFF8  F0BB         	goto	l3223
 50839   0177E8                     u25980:
 50840   0177E8                     l19773:
 50841   0177E8  0E01               	movlw	1
 50842   0177EA  6E43               	movwf	___fldiv@aexp^(0+1280),c
 50843   0177EC  EF01  F0BC         	goto	l3222
 50844   0177F0                     l3223:
 50845   0177F0  A02B               	btfss	___fldiv@b^(0+1280),0,c
 50846   0177F2  EFFD  F0BB         	goto	u25991
 50847   0177F6  EFFF  F0BB         	goto	u25990
 50848   0177FA                     u25991:
 50849   0177FA  EF01  F0BC         	goto	l3222
 50850   0177FE                     u25990:
 50851   0177FE  EFF4  F0BB         	goto	l19773
 50852   017802                     l3222:
 50853   017802  5043               	movf	___fldiv@aexp^(0+1280),w,c
 50854   017804  B4D8               	btfsc	status,2,c
 50855   017806  EF07  F0BC         	goto	u26001
 50856   01780A  EF09  F0BC         	goto	u26000
 50857   01780E                     u26001:
 50858   01780E  EF2D  F0BC         	goto	l19785
 50859   017812                     u26000:
 50860   017812  0E01               	movlw	1
 50861   017814  262B               	addwf	___fldiv@b^(0+1280),f,c
 50862   017816  0E00               	movlw	0
 50863   017818  222C               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 50864   01781A  222D               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 50865   01781C  222E               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 50866   01781E  A02E               	btfss	(___fldiv@b+3)^(0+1280),0,c
 50867   017820  EF14  F0BC         	goto	u26011
 50868   017824  EF16  F0BC         	goto	u26010
 50869   017828                     u26011:
 50870   017828  EF2D  F0BC         	goto	l19785
 50871   01782C                     u26010:
 50872   01782C  C52B  F533         	movff	___fldiv@b,??___fldiv
 50873   017830  C52C  F534         	movff	___fldiv@b+1,??___fldiv+1
 50874   017834  C52D  F535         	movff	___fldiv@b+2,??___fldiv+2
 50875   017838  C52E  F536         	movff	___fldiv@b+3,??___fldiv+3
 50876   01783C  3436               	rlcf	(??___fldiv+3)^(0+1280),w,c
 50877   01783E  3236               	rrcf	(??___fldiv+3)^(0+1280),f,c
 50878   017840  3235               	rrcf	(??___fldiv+2)^(0+1280),f,c
 50879   017842  3234               	rrcf	(??___fldiv+1)^(0+1280),f,c
 50880   017844  3233               	rrcf	??___fldiv^(0+1280),f,c
 50881   017846  C533  F52B         	movff	??___fldiv,___fldiv@b
 50882   01784A  C534  F52C         	movff	??___fldiv+1,___fldiv@b+1
 50883   01784E  C535  F52D         	movff	??___fldiv+2,___fldiv@b+2
 50884   017852  C536  F52E         	movff	??___fldiv+3,___fldiv@b+3
 50885   017856  4A3C               	infsnz	___fldiv@new_exp^(0+1280),f,c
 50886   017858  2A3D               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 50887   01785A                     l19785:
 50888   01785A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 50889   01785C  EF38  F0BC         	goto	u26021
 50890   017860  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 50891   017862  E108               	bnz	u26020
 50892   017864  283C               	incf	___fldiv@new_exp^(0+1280),w,c
 50893   017866  A0D8               	btfss	status,0,c
 50894   017868  EF38  F0BC         	goto	u26021
 50895   01786C  EF3A  F0BC         	goto	u26020
 50896   017870                     u26021:
 50897   017870  EF45  F0BC         	goto	l19789
 50898   017874                     u26020:
 50899   017874  0E00               	movlw	0
 50900   017876  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50901   017878  683C               	setf	___fldiv@new_exp^(0+1280),c
 50902   01787A  0E00               	movlw	0
 50903   01787C  6E2B               	movwf	___fldiv@b^(0+1280),c
 50904   01787E  0E00               	movlw	0
 50905   017880  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50906   017882  0E00               	movlw	0
 50907   017884  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50908   017886  0E00               	movlw	0
 50909   017888  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50910   01788A                     l19789:
 50911   01788A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 50912   01788C  EF52  F0BC         	goto	u26030
 50913   017890  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 50914   017892  E106               	bnz	u26031
 50915   017894  043C               	decf	___fldiv@new_exp^(0+1280),w,c
 50916   017896  B0D8               	btfsc	status,0,c
 50917   017898  EF50  F0BC         	goto	u26031
 50918   01789C  EF52  F0BC         	goto	u26030
 50919   0178A0                     u26031:
 50920   0178A0  EF5F  F0BC         	goto	l19795
 50921   0178A4                     u26030:
 50922   0178A4  0E00               	movlw	0
 50923   0178A6  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 50924   0178A8  0E00               	movlw	0
 50925   0178AA  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 50926   0178AC  0E00               	movlw	0
 50927   0178AE  6E2B               	movwf	___fldiv@b^(0+1280),c
 50928   0178B0  0E00               	movlw	0
 50929   0178B2  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 50930   0178B4  0E00               	movlw	0
 50931   0178B6  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 50932   0178B8  0E00               	movlw	0
 50933   0178BA  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50934   0178BC  6A3B               	clrf	___fldiv@sign^(0+1280),c
 50935   0178BE                     l19795:
 50936   0178BE  C53C  F542         	movff	___fldiv@new_exp,___fldiv@bexp
 50937   0178C2  A042               	btfss	___fldiv@bexp^(0+1280),0,c
 50938   0178C4  EF66  F0BC         	goto	u26041
 50939   0178C8  EF68  F0BC         	goto	u26040
 50940   0178CC                     u26041:
 50941   0178CC  EF6B  F0BC         	goto	l19801
 50942   0178D0                     u26040:
 50943   0178D0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 50944   0178D2  EF6C  F0BC         	goto	l19803
 50945   0178D6                     l19801:
 50946   0178D6  9E2D               	bcf	(___fldiv@b+2)^(0+1280),7,c
 50947   0178D8                     l19803:
 50948   0178D8  90D8               	bcf	status,0,c
 50949   0178DA  3042               	rrcf	___fldiv@bexp^(0+1280),w,c
 50950   0178DC  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 50951   0178DE  EF25  F0BB         	goto	l19719
 50952   0178E2                     l3209:
 50953   0178E2  0012               	return		;funcret
 50954   0178E4                     __end_of___fldiv:
 50955                           	callstack 0
 50956                           
 50957 ;; *************** function _dtoa *****************
 50958 ;; Defined at:
 50959 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 50960 ;; Parameters:    Size  Location     Type
 50961 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 50962 ;;		 -> sprintf@f(11), NULL(0), 
 50963 ;;  d               4   31[COMRAM] long 
 50964 ;; Auto vars:     Size  Location     Type
 50965 ;;  i               2   42[COMRAM] int 
 50966 ;;  w               2   39[COMRAM] int 
 50967 ;;  p               2   37[COMRAM] int 
 50968 ;;  s               1   41[COMRAM] unsigned char 
 50969 ;; Return value:  Size  Location     Type
 50970 ;;                  1    wreg      void 
 50971 ;; Registers used:
 50972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 50973 ;; Tracked objects:
 50974 ;;		On entry : 0/0
 50975 ;;		On exit  : 0/0
 50976 ;;		Unchanged: 0/0
 50977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 50978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50979 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50981 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50982 ;;Total ram usage:       15 bytes
 50983 ;; Hardware stack levels used: 1
 50984 ;; Hardware stack levels required when called: 5
 50985 ;; This function calls:
 50986 ;;		___aldiv
 50987 ;;		___almod
 50988 ;;		_abs
 50989 ;;		_pad
 50990 ;; This function is called by:
 50991 ;;		_vfpfcnvrt
 50992 ;; This function uses a non-reentrant model
 50993 ;;
 50994                           
 50995                           	psect	text142
 50996   01A702                     __ptext142:
 50997                           	callstack 0
 50998   01A702                     _dtoa:
 50999                           	callstack 111
 51000   01A702                     
 51001                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 51002   01A702  BE23               	btfsc	(dtoa@d+3)^(0+1280),7,c
 51003   01A704  EF86  F0D3         	goto	u26571
 51004   01A708  EF89  F0D3         	goto	u26570
 51005   01A70C                     u26571:
 51006   01A70C  0E01               	movlw	1
 51007   01A70E  EF8A  F0D3         	goto	u26580
 51008   01A712                     u26570:
 51009   01A712  0E00               	movlw	0
 51010   01A714                     u26580:
 51011   01A714  6E2A               	movwf	dtoa@s^(0+1280),c
 51012                           
 51013                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 51014   01A716  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 51015   01A718  EF90  F0D3         	goto	u26591
 51016   01A71C  EF92  F0D3         	goto	u26590
 51017   01A720                     u26591:
 51018   01A720  EF93  F0D3         	goto	l20099
 51019   01A724                     u26590:
 51020   01A724                     
 51021                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 51022   01A724  925C               	bcf	_flags^(0+1280),1,c
 51023   01A726                     l20099:
 51024                           
 51025                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 51026   01A726  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 51027   01A728  EF9A  F0D3         	goto	u26600
 51028   01A72C  EF98  F0D3         	goto	u26601
 51029   01A730                     u26601:
 51030   01A730  EFA0  F0D3         	goto	l3442
 51031   01A734                     u26600:
 51032   01A734  0E00               	movlw	0
 51033   01A736  6E27               	movwf	(dtoa@p+1)^(0+1280),c
 51034   01A738  0E01               	movlw	1
 51035   01A73A  6E26               	movwf	dtoa@p^(0+1280),c
 51036   01A73C  EFA4  F0D3         	goto	l3444
 51037   01A740                     l3442:
 51038   01A740  C55A  F526         	movff	_prec,dtoa@p
 51039   01A744  C55B  F527         	movff	_prec+1,dtoa@p+1
 51040   01A748                     l3444:
 51041                           
 51042                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 51043   01A748  C7B1  F528         	movff	_width,dtoa@w
 51044   01A74C  C7B2  F529         	movff	_width+1,dtoa@w+1
 51045   01A750                     
 51046                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 51047   01A750  502A               	movf	dtoa@s^(0+1280),w,c
 51048   01A752  B4D8               	btfsc	status,2,c
 51049   01A754  EFAE  F0D3         	goto	u26611
 51050   01A758  EFB0  F0D3         	goto	u26610
 51051   01A75C                     u26611:
 51052   01A75C  EFC7  F0D3         	goto	l3445
 51053   01A760                     u26610:
 51054   01A760                     
 51055                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 51056   01A760  0628               	decf	dtoa@w^(0+1280),f,c
 51057   01A762  A0D8               	btfss	status,0,c
 51058   01A764  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 51059   01A766                     
 51060                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 51061   01A766  502A               	movf	dtoa@s^(0+1280),w,c
 51062   01A768  A4D8               	btfss	status,2,c
 51063   01A76A  EFB9  F0D3         	goto	u26621
 51064   01A76E  EFBB  F0D3         	goto	u26620
 51065   01A772                     u26621:
 51066   01A772  EFC1  F0D3         	goto	l20111
 51067   01A776                     u26620:
 51068   01A776  0E00               	movlw	0
 51069   01A778  6E25               	movwf	(_dtoa$4796+1)^(0+1280),c
 51070   01A77A  0E2B               	movlw	43
 51071   01A77C  6E24               	movwf	_dtoa$4796^(0+1280),c
 51072   01A77E  EFC5  F0D3         	goto	l20113
 51073   01A782                     l20111:
 51074   01A782  0E00               	movlw	0
 51075   01A784  6E25               	movwf	(_dtoa$4796+1)^(0+1280),c
 51076   01A786  0E2D               	movlw	45
 51077   01A788  6E24               	movwf	_dtoa$4796^(0+1280),c
 51078   01A78A                     l20113:
 51079   01A78A  C524  F52A         	movff	_dtoa$4796,dtoa@s
 51080   01A78E                     l3445:
 51081                           
 51082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 51083   01A78E  0E00               	movlw	0
 51084   01A790  6E2C               	movwf	(dtoa@i+1)^(0+1280),c
 51085   01A792  0E4F               	movlw	79
 51086   01A794  6E2B               	movwf	dtoa@i^(0+1280),c
 51087   01A796                     
 51088                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 51089   01A796  0108               	movlb	8	; () banked
 51090   01A798  6B77               	clrf	(_dbuf+79)& (0+255),b
 51091                           
 51092                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 51093   01A79A  EF13  F0D4         	goto	l20127
 51094   01A79E                     l20117:
 51095                           
 51096                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 51097   01A79E  062B               	decf	dtoa@i^(0+1280),f,c
 51098   01A7A0  A0D8               	btfss	status,0,c
 51099   01A7A2  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 51100   01A7A4                     
 51101                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 51102   01A7A4  0E28               	movlw	low _dbuf
 51103   01A7A6  242B               	addwf	dtoa@i^(0+1280),w,c
 51104   01A7A8  6ED9               	movwf	fsr2l,c
 51105   01A7AA  0E08               	movlw	high _dbuf
 51106   01A7AC  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51107   01A7AE  6EDA               	movwf	fsr2h,c
 51108   01A7B0  C520  F504         	movff	dtoa@d,___almod@dividend
 51109   01A7B4  C521  F505         	movff	dtoa@d+1,___almod@dividend+1
 51110   01A7B8  C522  F506         	movff	dtoa@d+2,___almod@dividend+2
 51111   01A7BC  C523  F507         	movff	dtoa@d+3,___almod@dividend+3
 51112   01A7C0  0E0A               	movlw	10
 51113   01A7C2  6E08               	movwf	___almod@divisor^(0+1280),c
 51114   01A7C4  0E00               	movlw	0
 51115   01A7C6  6E09               	movwf	(___almod@divisor+1)^(0+1280),c
 51116   01A7C8  0E00               	movlw	0
 51117   01A7CA  6E0A               	movwf	(___almod@divisor+2)^(0+1280),c
 51118   01A7CC  0E00               	movlw	0
 51119   01A7CE  6E0B               	movwf	(___almod@divisor+3)^(0+1280),c
 51120   01A7D0  EC06  F0ED         	call	___almod	;wreg free
 51121   01A7D4  C504  F50E         	movff	?___almod,abs@a
 51122   01A7D8  C505  F50F         	movff	?___almod+1,abs@a+1
 51123   01A7DC  EC68  F0FF         	call	_abs	;wreg free
 51124   01A7E0  500E               	movf	?_abs^(0+1280),w,c
 51125   01A7E2  0F30               	addlw	48
 51126   01A7E4  6EDF               	movwf	indf2,c
 51127   01A7E6                     
 51128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
 51129   01A7E6  0626               	decf	dtoa@p^(0+1280),f,c
 51130   01A7E8  A0D8               	btfss	status,0,c
 51131   01A7EA  0627               	decf	(dtoa@p+1)^(0+1280),f,c
 51132   01A7EC                     
 51133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 51134   01A7EC  0628               	decf	dtoa@w^(0+1280),f,c
 51135   01A7EE  A0D8               	btfss	status,0,c
 51136   01A7F0  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 51137   01A7F2                     
 51138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 51139   01A7F2  C520  F504         	movff	dtoa@d,___aldiv@dividend
 51140   01A7F6  C521  F505         	movff	dtoa@d+1,___aldiv@dividend+1
 51141   01A7FA  C522  F506         	movff	dtoa@d+2,___aldiv@dividend+2
 51142   01A7FE  C523  F507         	movff	dtoa@d+3,___aldiv@dividend+3
 51143   01A802  0E0A               	movlw	10
 51144   01A804  6E08               	movwf	___aldiv@divisor^(0+1280),c
 51145   01A806  0E00               	movlw	0
 51146   01A808  6E09               	movwf	(___aldiv@divisor+1)^(0+1280),c
 51147   01A80A  0E00               	movlw	0
 51148   01A80C  6E0A               	movwf	(___aldiv@divisor+2)^(0+1280),c
 51149   01A80E  0E00               	movlw	0
 51150   01A810  6E0B               	movwf	(___aldiv@divisor+3)^(0+1280),c
 51151   01A812  EC97  F0E7         	call	___aldiv	;wreg free
 51152   01A816  C504  F520         	movff	?___aldiv,dtoa@d
 51153   01A81A  C505  F521         	movff	?___aldiv+1,dtoa@d+1
 51154   01A81E  C506  F522         	movff	?___aldiv+2,dtoa@d+2
 51155   01A822  C507  F523         	movff	?___aldiv+3,dtoa@d+3
 51156   01A826                     l20127:
 51157                           
 51158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 51159   01A826  BE2C               	btfsc	(dtoa@i+1)^(0+1280),7,c
 51160   01A828  EF1E  F0D4         	goto	u26631
 51161   01A82C  502C               	movf	(dtoa@i+1)^(0+1280),w,c
 51162   01A82E  E108               	bnz	u26630
 51163   01A830  042B               	decf	dtoa@i^(0+1280),w,c
 51164   01A832  A0D8               	btfss	status,0,c
 51165   01A834  EF1E  F0D4         	goto	u26631
 51166   01A838  EF20  F0D4         	goto	u26630
 51167   01A83C                     u26631:
 51168   01A83C  EF4C  F0D4         	goto	l20137
 51169   01A840                     u26630:
 51170   01A840  5020               	movf	dtoa@d^(0+1280),w,c
 51171   01A842  1021               	iorwf	(dtoa@d+1)^(0+1280),w,c
 51172   01A844  1022               	iorwf	(dtoa@d+2)^(0+1280),w,c
 51173   01A846  1023               	iorwf	(dtoa@d+3)^(0+1280),w,c
 51174   01A848  A4D8               	btfss	status,2,c
 51175   01A84A  EF29  F0D4         	goto	u26641
 51176   01A84E  EF2B  F0D4         	goto	u26640
 51177   01A852                     u26641:
 51178   01A852  EFCF  F0D3         	goto	l20117
 51179   01A856                     u26640:
 51180   01A856  BE27               	btfsc	(dtoa@p+1)^(0+1280),7,c
 51181   01A858  EF38  F0D4         	goto	u26650
 51182   01A85C  5027               	movf	(dtoa@p+1)^(0+1280),w,c
 51183   01A85E  E106               	bnz	u26651
 51184   01A860  0426               	decf	dtoa@p^(0+1280),w,c
 51185   01A862  B0D8               	btfsc	status,0,c
 51186   01A864  EF36  F0D4         	goto	u26651
 51187   01A868  EF38  F0D4         	goto	u26650
 51188   01A86C                     u26651:
 51189   01A86C  EFCF  F0D3         	goto	l20117
 51190   01A870                     u26650:
 51191   01A870  BE29               	btfsc	(dtoa@w+1)^(0+1280),7,c
 51192   01A872  EF43  F0D4         	goto	u26661
 51193   01A876  5029               	movf	(dtoa@w+1)^(0+1280),w,c
 51194   01A878  E108               	bnz	u26660
 51195   01A87A  0428               	decf	dtoa@w^(0+1280),w,c
 51196   01A87C  A0D8               	btfss	status,0,c
 51197   01A87E  EF43  F0D4         	goto	u26661
 51198   01A882  EF45  F0D4         	goto	u26660
 51199   01A886                     u26661:
 51200   01A886  EF4C  F0D4         	goto	l20137
 51201   01A88A                     u26660:
 51202   01A88A  B25C               	btfsc	_flags^(0+1280),1,c
 51203   01A88C  EF4A  F0D4         	goto	u26671
 51204   01A890  EF4C  F0D4         	goto	u26670
 51205   01A894                     u26671:
 51206   01A894  EFCF  F0D3         	goto	l20117
 51207   01A898                     u26670:
 51208   01A898                     l20137:
 51209                           
 51210                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 51211   01A898  502A               	movf	dtoa@s^(0+1280),w,c
 51212   01A89A  B4D8               	btfsc	status,2,c
 51213   01A89C  EF52  F0D4         	goto	u26681
 51214   01A8A0  EF54  F0D4         	goto	u26680
 51215   01A8A4                     u26681:
 51216   01A8A4  EF5F  F0D4         	goto	l20143
 51217   01A8A8                     u26680:
 51218   01A8A8                     
 51219                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 51220   01A8A8  062B               	decf	dtoa@i^(0+1280),f,c
 51221   01A8AA  A0D8               	btfss	status,0,c
 51222   01A8AC  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 51223   01A8AE                     
 51224                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 51225   01A8AE  0E28               	movlw	low _dbuf
 51226   01A8B0  242B               	addwf	dtoa@i^(0+1280),w,c
 51227   01A8B2  6ED9               	movwf	fsr2l,c
 51228   01A8B4  0E08               	movlw	high _dbuf
 51229   01A8B6  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51230   01A8B8  6EDA               	movwf	fsr2h,c
 51231   01A8BA  C52A  F4DF         	movff	dtoa@s,indf2
 51232   01A8BE                     l20143:
 51233                           
 51234                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 51235   01A8BE  C51E  F515         	movff	dtoa@fp,pad@fp
 51236   01A8C2  C51F  F516         	movff	dtoa@fp+1,pad@fp+1
 51237   01A8C6  0E28               	movlw	low _dbuf
 51238   01A8C8  242B               	addwf	dtoa@i^(0+1280),w,c
 51239   01A8CA  6E17               	movwf	pad@buf^(0+1280),c
 51240   01A8CC  0E08               	movlw	high _dbuf
 51241   01A8CE  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 51242   01A8D0  6E18               	movwf	(pad@buf+1)^(0+1280),c
 51243   01A8D2  C528  F519         	movff	dtoa@w,pad@p
 51244   01A8D6  C529  F51A         	movff	dtoa@w+1,pad@p+1
 51245   01A8DA  EC1F  F0F6         	call	_pad	;wreg free
 51246   01A8DE  0012               	return		;funcret
 51247   01A8E0                     __end_of_dtoa:
 51248                           	callstack 0
 51249                           
 51250 ;; *************** function _pad *****************
 51251 ;; Defined at:
 51252 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 51253 ;; Parameters:    Size  Location     Type
 51254 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 51255 ;;		 -> sprintf@f(11), NULL(0), 
 51256 ;;  buf             2   22[COMRAM] PTR unsigned char 
 51257 ;;		 -> dbuf(80), 
 51258 ;;  p               2   24[COMRAM] int 
 51259 ;; Auto vars:     Size  Location     Type
 51260 ;;  i               2   27[COMRAM] int 
 51261 ;; Return value:  Size  Location     Type
 51262 ;;                  1    wreg      void 
 51263 ;; Registers used:
 51264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51265 ;; Tracked objects:
 51266 ;;		On entry : 0/0
 51267 ;;		On exit  : 0/0
 51268 ;;		Unchanged: 0/0
 51269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51273 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51274 ;;Total ram usage:        9 bytes
 51275 ;; Hardware stack levels used: 1
 51276 ;; Hardware stack levels required when called: 4
 51277 ;; This function calls:
 51278 ;;		_fputc
 51279 ;;		_fputs
 51280 ;; This function is called by:
 51281 ;;		_dtoa
 51282 ;;		_efgtoa
 51283 ;;		_xtoa
 51284 ;; This function uses a non-reentrant model
 51285 ;;
 51286                           
 51287                           	psect	text143
 51288   01EC3E                     __ptext143:
 51289                           	callstack 0
 51290   01EC3E                     _pad:
 51291                           	callstack 111
 51292   01EC3E                     
 51293                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 51294   01EC3E  A05C               	btfss	_flags^(0+1280),0,c
 51295   01EC40  EF24  F0F6         	goto	u26401
 51296   01EC44  EF26  F0F6         	goto	u26400
 51297   01EC48                     u26401:
 51298   01EC48  EF30  F0F6         	goto	l20039
 51299   01EC4C                     u26400:
 51300   01EC4C                     
 51301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 51302   01EC4C  C517  F50E         	movff	pad@buf,fputs@s
 51303   01EC50  C518  F50F         	movff	pad@buf+1,fputs@s+1
 51304   01EC54  C515  F510         	movff	pad@fp,fputs@fp
 51305   01EC58  C516  F511         	movff	pad@fp+1,fputs@fp+1
 51306   01EC5C  ECFF  F0FD         	call	_fputs	;wreg free
 51307   01EC60                     l20039:
 51308                           
 51309                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 51310   01EC60  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
 51311   01EC62  EF37  F0F6         	goto	u26410
 51312   01EC66  EF35  F0F6         	goto	u26411
 51313   01EC6A                     u26411:
 51314   01EC6A  EF3B  F0F6         	goto	l3432
 51315   01EC6E                     u26410:
 51316   01EC6E                     
 51317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 51318   01EC6E  0E00               	movlw	0
 51319   01EC70  6E1A               	movwf	(pad@p+1)^(0+1280),c
 51320   01EC72  0E00               	movlw	0
 51321   01EC74  6E19               	movwf	pad@p^(0+1280),c
 51322   01EC76                     l3432:
 51323                           
 51324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 51325   01EC76  0E00               	movlw	0
 51326   01EC78  6E1D               	movwf	(pad@i+1)^(0+1280),c
 51327   01EC7A  0E00               	movlw	0
 51328   01EC7C  6E1C               	movwf	pad@i^(0+1280),c
 51329                           
 51330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 51331   01EC7E  EF4D  F0F6         	goto	l20047
 51332   01EC82                     l20043:
 51333                           
 51334                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 51335   01EC82  0E00               	movlw	0
 51336   01EC84  6E06               	movwf	(fputc@c+1)^(0+1280),c
 51337   01EC86  0E20               	movlw	32
 51338   01EC88  6E05               	movwf	fputc@c^(0+1280),c
 51339   01EC8A  C515  F507         	movff	pad@fp,fputc@fp
 51340   01EC8E  C516  F508         	movff	pad@fp+1,fputc@fp+1
 51341   01EC92  EC45  F0F1         	call	_fputc	;wreg free
 51342   01EC96                     
 51343                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 51344   01EC96  4A1C               	infsnz	pad@i^(0+1280),f,c
 51345   01EC98  2A1D               	incf	(pad@i+1)^(0+1280),f,c
 51346   01EC9A                     l20047:
 51347                           
 51348                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 51349   01EC9A  5019               	movf	pad@p^(0+1280),w,c
 51350   01EC9C  5C1C               	subwf	pad@i^(0+1280),w,c
 51351   01EC9E  501D               	movf	(pad@i+1)^(0+1280),w,c
 51352   01ECA0  0A80               	xorlw	128
 51353   01ECA2  6E1B               	movwf	??_pad^(0+1280),c
 51354   01ECA4  501A               	movf	(pad@p+1)^(0+1280),w,c
 51355   01ECA6  0A80               	xorlw	128
 51356   01ECA8  581B               	subwfb	??_pad^(0+1280),w,c
 51357   01ECAA  A0D8               	btfss	status,0,c
 51358   01ECAC  EF5A  F0F6         	goto	u26421
 51359   01ECB0  EF5C  F0F6         	goto	u26420
 51360   01ECB4                     u26421:
 51361   01ECB4  EF41  F0F6         	goto	l20043
 51362   01ECB8                     u26420:
 51363   01ECB8                     
 51364                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 51365   01ECB8  B05C               	btfsc	_flags^(0+1280),0,c
 51366   01ECBA  EF61  F0F6         	goto	u26431
 51367   01ECBE  EF63  F0F6         	goto	u26430
 51368   01ECC2                     u26431:
 51369   01ECC2  EF6D  F0F6         	goto	l3437
 51370   01ECC6                     u26430:
 51371   01ECC6                     
 51372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 51373   01ECC6  C517  F50E         	movff	pad@buf,fputs@s
 51374   01ECCA  C518  F50F         	movff	pad@buf+1,fputs@s+1
 51375   01ECCE  C515  F510         	movff	pad@fp,fputs@fp
 51376   01ECD2  C516  F511         	movff	pad@fp+1,fputs@fp+1
 51377   01ECD6  ECFF  F0FD         	call	_fputs	;wreg free
 51378   01ECDA                     l3437:
 51379   01ECDA  0012               	return		;funcret
 51380   01ECDC                     __end_of_pad:
 51381                           	callstack 0
 51382                           
 51383 ;; *************** function _fputs *****************
 51384 ;; Defined at:
 51385 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 51386 ;; Parameters:    Size  Location     Type
 51387 ;;  s               2   13[COMRAM] PTR const unsigned char 
 51388 ;;		 -> dbuf(80), 
 51389 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 51390 ;;		 -> sprintf@f(11), NULL(0), 
 51391 ;; Auto vars:     Size  Location     Type
 51392 ;;  i               2   18[COMRAM] int 
 51393 ;;  c               1   17[COMRAM] unsigned char 
 51394 ;; Return value:  Size  Location     Type
 51395 ;;                  2   13[COMRAM] int 
 51396 ;; Registers used:
 51397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51398 ;; Tracked objects:
 51399 ;;		On entry : 0/0
 51400 ;;		On exit  : 0/0
 51401 ;;		Unchanged: 0/0
 51402 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51404 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51406 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51407 ;;Total ram usage:        7 bytes
 51408 ;; Hardware stack levels used: 1
 51409 ;; Hardware stack levels required when called: 3
 51410 ;; This function calls:
 51411 ;;		_fputc
 51412 ;; This function is called by:
 51413 ;;		_pad
 51414 ;; This function uses a non-reentrant model
 51415 ;;
 51416                           
 51417                           	psect	text144
 51418   01FBFE                     __ptext144:
 51419                           	callstack 0
 51420   01FBFE                     _fputs:
 51421                           	callstack 111
 51422   01FBFE  0E00               	movlw	0
 51423   01FC00  6E14               	movwf	(fputs@i+1)^(0+1280),c
 51424   01FC02  0E00               	movlw	0
 51425   01FC04  6E13               	movwf	fputs@i^(0+1280),c
 51426   01FC06  EF10  F0FE         	goto	l19559
 51427   01FC0A                     l19555:
 51428   01FC0A  C512  F505         	movff	fputs@c,fputc@c
 51429   01FC0E  6A06               	clrf	(fputc@c+1)^(0+1280),c
 51430   01FC10  C510  F507         	movff	fputs@fp,fputc@fp
 51431   01FC14  C511  F508         	movff	fputs@fp+1,fputc@fp+1
 51432   01FC18  EC45  F0F1         	call	_fputc	;wreg free
 51433   01FC1C  4A13               	infsnz	fputs@i^(0+1280),f,c
 51434   01FC1E  2A14               	incf	(fputs@i+1)^(0+1280),f,c
 51435   01FC20                     l19559:
 51436   01FC20  5013               	movf	fputs@i^(0+1280),w,c
 51437   01FC22  240E               	addwf	fputs@s^(0+1280),w,c
 51438   01FC24  6ED9               	movwf	fsr2l,c
 51439   01FC26  5014               	movf	(fputs@i+1)^(0+1280),w,c
 51440   01FC28  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
 51441   01FC2A  6EDA               	movwf	fsr2h,c
 51442   01FC2C  50DF               	movf	indf2,w,c
 51443   01FC2E  6E12               	movwf	fputs@c^(0+1280),c
 51444   01FC30  5012               	movf	fputs@c^(0+1280),w,c
 51445   01FC32  A4D8               	btfss	status,2,c
 51446   01FC34  EF1E  F0FE         	goto	u25611
 51447   01FC38  EF20  F0FE         	goto	u25610
 51448   01FC3C                     u25611:
 51449   01FC3C  EF05  F0FE         	goto	l19555
 51450   01FC40                     u25610:
 51451   01FC40  0012               	return		;funcret
 51452   01FC42                     __end_of_fputs:
 51453                           	callstack 0
 51454                           
 51455 ;; *************** function _fputc *****************
 51456 ;; Defined at:
 51457 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 51458 ;; Parameters:    Size  Location     Type
 51459 ;;  c               2    4[COMRAM] int 
 51460 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 51461 ;;		 -> sprintf@f(11), NULL(0), 
 51462 ;; Auto vars:     Size  Location     Type
 51463 ;;		None
 51464 ;; Return value:  Size  Location     Type
 51465 ;;                  2    4[COMRAM] int 
 51466 ;; Registers used:
 51467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 51468 ;; Tracked objects:
 51469 ;;		On entry : 0/0
 51470 ;;		On exit  : 0/0
 51471 ;;		Unchanged: 0/0
 51472 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51475 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51476 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51477 ;;Total ram usage:        9 bytes
 51478 ;; Hardware stack levels used: 1
 51479 ;; Hardware stack levels required when called: 2
 51480 ;; This function calls:
 51481 ;;		_putch
 51482 ;; This function is called by:
 51483 ;;		_pad
 51484 ;;		_stoa
 51485 ;;		_vfpfcnvrt
 51486 ;;		_fputs
 51487 ;; This function uses a non-reentrant model
 51488 ;;
 51489                           
 51490                           	psect	text145
 51491   01E28A                     __ptext145:
 51492                           	callstack 0
 51493   01E28A                     _fputc:
 51494                           	callstack 111
 51495   01E28A  5007               	movf	fputc@fp^(0+1280),w,c
 51496   01E28C  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 51497   01E28E  B4D8               	btfsc	status,2,c
 51498   01E290  EF4C  F0F1         	goto	u25181
 51499   01E294  EF4E  F0F1         	goto	u25180
 51500   01E298                     u25181:
 51501   01E298  EF57  F0F1         	goto	l19349
 51502   01E29C                     u25180:
 51503   01E29C  5007               	movf	fputc@fp^(0+1280),w,c
 51504   01E29E  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 51505   01E2A0  A4D8               	btfss	status,2,c
 51506   01E2A2  EF55  F0F1         	goto	u25191
 51507   01E2A6  EF57  F0F1         	goto	u25190
 51508   01E2AA                     u25191:
 51509   01E2AA  EF5C  F0F1         	goto	l19351
 51510   01E2AE                     u25190:
 51511   01E2AE                     l19349:
 51512   01E2AE  5005               	movf	fputc@c^(0+1280),w,c
 51513   01E2B0  EC03  F001         	call	_putch
 51514   01E2B4  EFA9  F0F1         	goto	l3669
 51515   01E2B8                     l19351:
 51516   01E2B8  EE20 F009          	lfsr	2,9
 51517   01E2BC  5007               	movf	fputc@fp^(0+1280),w,c
 51518   01E2BE  26D9               	addwf	fsr2l,f,c
 51519   01E2C0  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51520   01E2C2  22DA               	addwfc	fsr2h,f,c
 51521   01E2C4  50DE               	movf	postinc2,w,c
 51522   01E2C6  10DE               	iorwf	postinc2,w,c
 51523   01E2C8  B4D8               	btfsc	status,2,c
 51524   01E2CA  EF69  F0F1         	goto	u25201
 51525   01E2CE  EF6B  F0F1         	goto	u25200
 51526   01E2D2                     u25201:
 51527   01E2D2  EF86  F0F1         	goto	l19355
 51528   01E2D6                     u25200:
 51529   01E2D6  EE20 F009          	lfsr	2,9
 51530   01E2DA  5007               	movf	fputc@fp^(0+1280),w,c
 51531   01E2DC  26D9               	addwf	fsr2l,f,c
 51532   01E2DE  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51533   01E2E0  22DA               	addwfc	fsr2h,f,c
 51534   01E2E2  EE10 F002          	lfsr	1,2
 51535   01E2E6  5007               	movf	fputc@fp^(0+1280),w,c
 51536   01E2E8  26E1               	addwf	fsr1l,f,c
 51537   01E2EA  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51538   01E2EC  22E2               	addwfc	fsr1h,f,c
 51539   01E2EE  50DE               	movf	postinc2,w,c
 51540   01E2F0  5CE6               	subwf	postinc1,w,c
 51541   01E2F2  50E6               	movf	postinc1,w,c
 51542   01E2F4  0A80               	xorlw	128
 51543   01E2F6  6E0D               	movwf	(??_fputc+4)^(0+1280),c
 51544   01E2F8  50DE               	movf	postinc2,w,c
 51545   01E2FA  0A80               	xorlw	128
 51546   01E2FC  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
 51547   01E2FE  B0D8               	btfsc	status,0,c
 51548   01E300  EF84  F0F1         	goto	u25211
 51549   01E304  EF86  F0F1         	goto	u25210
 51550   01E308                     u25211:
 51551   01E308  EFA9  F0F1         	goto	l3669
 51552   01E30C                     u25210:
 51553   01E30C                     l19355:
 51554   01E30C  EE20 F002          	lfsr	2,2
 51555   01E310  5007               	movf	fputc@fp^(0+1280),w,c
 51556   01E312  26D9               	addwf	fsr2l,f,c
 51557   01E314  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51558   01E316  22DA               	addwfc	fsr2h,f,c
 51559   01E318  C4DE F509          	movff	postinc2,??_fputc
 51560   01E31C  C4DD F50A          	movff	postdec2,??_fputc+1
 51561   01E320  C507  F4D9         	movff	fputc@fp,fsr2l
 51562   01E324  C508  F4DA         	movff	fputc@fp+1,fsr2h
 51563   01E328  C4DE F50B          	movff	postinc2,??_fputc+2
 51564   01E32C  C4DD F50C          	movff	postdec2,??_fputc+3
 51565   01E330  5009               	movf	??_fputc^(0+1280),w,c
 51566   01E332  240B               	addwf	(??_fputc+2)^(0+1280),w,c
 51567   01E334  6ED9               	movwf	fsr2l,c
 51568   01E336  500A               	movf	(??_fputc+1)^(0+1280),w,c
 51569   01E338  200C               	addwfc	(??_fputc+3)^(0+1280),w,c
 51570   01E33A  6EDA               	movwf	fsr2h,c
 51571   01E33C  C505  F4DF         	movff	fputc@c,indf2
 51572   01E340  EE20 F002          	lfsr	2,2
 51573   01E344  5007               	movf	fputc@fp^(0+1280),w,c
 51574   01E346  26D9               	addwf	fsr2l,f,c
 51575   01E348  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 51576   01E34A  22DA               	addwfc	fsr2h,f,c
 51577   01E34C  2ADE               	incf	postinc2,f,c
 51578   01E34E  0E00               	movlw	0
 51579   01E350  22DD               	addwfc	postdec2,f,c
 51580   01E352                     l3669:
 51581   01E352  0012               	return		;funcret
 51582   01E354                     __end_of_fputc:
 51583                           	callstack 0
 51584                           
 51585 ;; *************** function _putch *****************
 51586 ;; Defined at:
 51587 ;;		line 132 in file "../src/boards/w65_cmn.c"
 51588 ;; Parameters:    Size  Location     Type
 51589 ;;  c               1    wreg     unsigned char 
 51590 ;; Auto vars:     Size  Location     Type
 51591 ;;  c               1    3[COMRAM] unsigned char 
 51592 ;; Return value:  Size  Location     Type
 51593 ;;                  1    wreg      void 
 51594 ;; Registers used:
 51595 ;;		wreg
 51596 ;; Tracked objects:
 51597 ;;		On entry : 0/0
 51598 ;;		On exit  : 0/0
 51599 ;;		Unchanged: 0/0
 51600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51605 ;;Total ram usage:        1 bytes
 51606 ;; Hardware stack levels used: 1
 51607 ;; Hardware stack levels required when called: 1
 51608 ;; This function calls:
 51609 ;;		Nothing
 51610 ;; This function is called by:
 51611 ;;		_unimon_console
 51612 ;;		_bus_master_operation
 51613 ;;		_get_line
 51614 ;;		_fputc
 51615 ;; This function uses a non-reentrant model
 51616 ;;
 51617                           
 51618                           	psect	text146
 51619   000206                     __ptext146:
 51620                           	callstack 0
 51621   000206                     _putch:
 51622                           	callstack 111
 51623                           
 51624                           ;incstack = 0
 51625                           ;putch@c stored from wreg
 51626   000206  6E04               	movwf	putch@c^(0+1280),c
 51627   000208                     l311:
 51628   000208  A2B7               	btfss	1207,1,c	;volatile
 51629   00020A  EF09  F001         	goto	u25171
 51630   00020E  EF0B  F001         	goto	u25170
 51631   000212                     u25171:
 51632   000212  EF04  F001         	goto	l311
 51633   000216                     u25170:
 51634   000216                     
 51635                           ;../src/boards/w65_cmn.c: 134:     U3TXB = c;
 51636   000216  C504  F2C9         	movff	putch@c,713	;volatile
 51637   00021A  0012               	return		;funcret
 51638   00021C                     __end_of_putch:
 51639                           	callstack 0
 51640                           
 51641 ;; *************** function _abs *****************
 51642 ;; Defined at:
 51643 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 51644 ;; Parameters:    Size  Location     Type
 51645 ;;  a               2   13[COMRAM] int 
 51646 ;; Auto vars:     Size  Location     Type
 51647 ;;		None
 51648 ;; Return value:  Size  Location     Type
 51649 ;;                  2   13[COMRAM] int 
 51650 ;; Registers used:
 51651 ;;		wreg, status,2, status,0
 51652 ;; Tracked objects:
 51653 ;;		On entry : 0/0
 51654 ;;		On exit  : 0/0
 51655 ;;		Unchanged: 0/0
 51656 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51661 ;;Total ram usage:        4 bytes
 51662 ;; Hardware stack levels used: 1
 51663 ;; Hardware stack levels required when called: 1
 51664 ;; This function calls:
 51665 ;;		Nothing
 51666 ;; This function is called by:
 51667 ;;		_dtoa
 51668 ;; This function uses a non-reentrant model
 51669 ;;
 51670                           
 51671                           	psect	text147
 51672   01FED0                     __ptext147:
 51673                           	callstack 0
 51674   01FED0                     _abs:
 51675                           	callstack 114
 51676   01FED0  BE0F               	btfsc	(abs@a+1)^(0+1280),7,c
 51677   01FED2  EF6D  F0FF         	goto	u26441
 51678   01FED6  EF6F  F0FF         	goto	u26440
 51679   01FEDA                     u26441:
 51680   01FEDA  EF75  F0FF         	goto	l3634
 51681   01FEDE                     u26440:
 51682   01FEDE  C50E  F50E         	movff	abs@a,?_abs
 51683   01FEE2  C50F  F50F         	movff	abs@a+1,?_abs+1
 51684   01FEE6  EF81  F0FF         	goto	l3637
 51685   01FEEA                     l3634:
 51686   01FEEA  C50E  F510         	movff	abs@a,??_abs
 51687   01FEEE  C50F  F511         	movff	abs@a+1,??_abs+1
 51688   01FEF2  1E10               	comf	??_abs^(0+1280),f,c
 51689   01FEF4  1E11               	comf	(??_abs+1)^(0+1280),f,c
 51690   01FEF6  4A10               	infsnz	??_abs^(0+1280),f,c
 51691   01FEF8  2A11               	incf	(??_abs+1)^(0+1280),f,c
 51692   01FEFA  C510  F50E         	movff	??_abs,?_abs
 51693   01FEFE  C511  F50F         	movff	??_abs+1,?_abs+1
 51694   01FF02                     l3637:
 51695   01FF02  0012               	return		;funcret
 51696   01FF04                     __end_of_abs:
 51697                           	callstack 0
 51698                           
 51699 ;; *************** function ___almod *****************
 51700 ;; Defined at:
 51701 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
 51702 ;; Parameters:    Size  Location     Type
 51703 ;;  dividend        4    3[COMRAM] long 
 51704 ;;  divisor         4    7[COMRAM] long 
 51705 ;; Auto vars:     Size  Location     Type
 51706 ;;  sign            1   12[COMRAM] unsigned char 
 51707 ;;  counter         1   11[COMRAM] unsigned char 
 51708 ;; Return value:  Size  Location     Type
 51709 ;;                  4    3[COMRAM] long 
 51710 ;; Registers used:
 51711 ;;		wreg, status,2, status,0
 51712 ;; Tracked objects:
 51713 ;;		On entry : 0/0
 51714 ;;		On exit  : 0/0
 51715 ;;		Unchanged: 0/0
 51716 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51720 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51721 ;;Total ram usage:       10 bytes
 51722 ;; Hardware stack levels used: 1
 51723 ;; Hardware stack levels required when called: 1
 51724 ;; This function calls:
 51725 ;;		Nothing
 51726 ;; This function is called by:
 51727 ;;		_dtoa
 51728 ;; This function uses a non-reentrant model
 51729 ;;
 51730                           
 51731                           	psect	text148
 51732   01DA0C                     __ptext148:
 51733                           	callstack 0
 51734   01DA0C                     ___almod:
 51735                           	callstack 114
 51736   01DA0C  6A0D               	clrf	___almod@sign^(0+1280),c
 51737   01DA0E  BE07               	btfsc	(___almod@dividend+3)^(0+1280),7,c
 51738   01DA10  EF0E  F0ED         	goto	u25760
 51739   01DA14  EF0C  F0ED         	goto	u25761
 51740   01DA18                     u25761:
 51741   01DA18  EF18  F0ED         	goto	l19647
 51742   01DA1C                     u25760:
 51743   01DA1C  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 51744   01DA1E  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 51745   01DA20  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 51746   01DA22  6C04               	negf	___almod@dividend^(0+1280),c
 51747   01DA24  0E00               	movlw	0
 51748   01DA26  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 51749   01DA28  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 51750   01DA2A  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 51751   01DA2C  0E01               	movlw	1
 51752   01DA2E  6E0D               	movwf	___almod@sign^(0+1280),c
 51753   01DA30                     l19647:
 51754   01DA30  BE0B               	btfsc	(___almod@divisor+3)^(0+1280),7,c
 51755   01DA32  EF1F  F0ED         	goto	u25770
 51756   01DA36  EF1D  F0ED         	goto	u25771
 51757   01DA3A                     u25771:
 51758   01DA3A  EF27  F0ED         	goto	l19651
 51759   01DA3E                     u25770:
 51760   01DA3E  1E0B               	comf	(___almod@divisor+3)^(0+1280),f,c
 51761   01DA40  1E0A               	comf	(___almod@divisor+2)^(0+1280),f,c
 51762   01DA42  1E09               	comf	(___almod@divisor+1)^(0+1280),f,c
 51763   01DA44  6C08               	negf	___almod@divisor^(0+1280),c
 51764   01DA46  0E00               	movlw	0
 51765   01DA48  2209               	addwfc	(___almod@divisor+1)^(0+1280),f,c
 51766   01DA4A  220A               	addwfc	(___almod@divisor+2)^(0+1280),f,c
 51767   01DA4C  220B               	addwfc	(___almod@divisor+3)^(0+1280),f,c
 51768   01DA4E                     l19651:
 51769   01DA4E  5008               	movf	___almod@divisor^(0+1280),w,c
 51770   01DA50  1009               	iorwf	(___almod@divisor+1)^(0+1280),w,c
 51771   01DA52  100A               	iorwf	(___almod@divisor+2)^(0+1280),w,c
 51772   01DA54  100B               	iorwf	(___almod@divisor+3)^(0+1280),w,c
 51773   01DA56  B4D8               	btfsc	status,2,c
 51774   01DA58  EF30  F0ED         	goto	u25781
 51775   01DA5C  EF32  F0ED         	goto	u25780
 51776   01DA60                     u25781:
 51777   01DA60  EF62  F0ED         	goto	l19667
 51778   01DA64                     u25780:
 51779   01DA64  0E01               	movlw	1
 51780   01DA66  6E0C               	movwf	___almod@counter^(0+1280),c
 51781   01DA68  EF3C  F0ED         	goto	l19657
 51782   01DA6C                     l19655:
 51783   01DA6C  90D8               	bcf	status,0,c
 51784   01DA6E  3608               	rlcf	___almod@divisor^(0+1280),f,c
 51785   01DA70  3609               	rlcf	(___almod@divisor+1)^(0+1280),f,c
 51786   01DA72  360A               	rlcf	(___almod@divisor+2)^(0+1280),f,c
 51787   01DA74  360B               	rlcf	(___almod@divisor+3)^(0+1280),f,c
 51788   01DA76  2A0C               	incf	___almod@counter^(0+1280),f,c
 51789   01DA78                     l19657:
 51790   01DA78  AE0B               	btfss	(___almod@divisor+3)^(0+1280),7,c
 51791   01DA7A  EF41  F0ED         	goto	u25791
 51792   01DA7E  EF43  F0ED         	goto	u25790
 51793   01DA82                     u25791:
 51794   01DA82  EF36  F0ED         	goto	l19655
 51795   01DA86                     u25790:
 51796   01DA86                     l19659:
 51797   01DA86  5008               	movf	___almod@divisor^(0+1280),w,c
 51798   01DA88  5C04               	subwf	___almod@dividend^(0+1280),w,c
 51799   01DA8A  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 51800   01DA8C  5805               	subwfb	(___almod@dividend+1)^(0+1280),w,c
 51801   01DA8E  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 51802   01DA90  5806               	subwfb	(___almod@dividend+2)^(0+1280),w,c
 51803   01DA92  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 51804   01DA94  5807               	subwfb	(___almod@dividend+3)^(0+1280),w,c
 51805   01DA96  A0D8               	btfss	status,0,c
 51806   01DA98  EF50  F0ED         	goto	u25801
 51807   01DA9C  EF52  F0ED         	goto	u25800
 51808   01DAA0                     u25801:
 51809   01DAA0  EF5A  F0ED         	goto	l19663
 51810   01DAA4                     u25800:
 51811   01DAA4  5008               	movf	___almod@divisor^(0+1280),w,c
 51812   01DAA6  5E04               	subwf	___almod@dividend^(0+1280),f,c
 51813   01DAA8  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 51814   01DAAA  5A05               	subwfb	(___almod@dividend+1)^(0+1280),f,c
 51815   01DAAC  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 51816   01DAAE  5A06               	subwfb	(___almod@dividend+2)^(0+1280),f,c
 51817   01DAB0  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 51818   01DAB2  5A07               	subwfb	(___almod@dividend+3)^(0+1280),f,c
 51819   01DAB4                     l19663:
 51820   01DAB4  90D8               	bcf	status,0,c
 51821   01DAB6  320B               	rrcf	(___almod@divisor+3)^(0+1280),f,c
 51822   01DAB8  320A               	rrcf	(___almod@divisor+2)^(0+1280),f,c
 51823   01DABA  3209               	rrcf	(___almod@divisor+1)^(0+1280),f,c
 51824   01DABC  3208               	rrcf	___almod@divisor^(0+1280),f,c
 51825   01DABE  2E0C               	decfsz	___almod@counter^(0+1280),f,c
 51826   01DAC0  EF43  F0ED         	goto	l19659
 51827   01DAC4                     l19667:
 51828   01DAC4  500D               	movf	___almod@sign^(0+1280),w,c
 51829   01DAC6  B4D8               	btfsc	status,2,c
 51830   01DAC8  EF68  F0ED         	goto	u25811
 51831   01DACC  EF6A  F0ED         	goto	u25810
 51832   01DAD0                     u25811:
 51833   01DAD0  EF72  F0ED         	goto	l19671
 51834   01DAD4                     u25810:
 51835   01DAD4  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 51836   01DAD6  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 51837   01DAD8  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 51838   01DADA  6C04               	negf	___almod@dividend^(0+1280),c
 51839   01DADC  0E00               	movlw	0
 51840   01DADE  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 51841   01DAE0  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 51842   01DAE2  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 51843   01DAE4                     l19671:
 51844   01DAE4  C504  F504         	movff	___almod@dividend,?___almod
 51845   01DAE8  C505  F505         	movff	___almod@dividend+1,?___almod+1
 51846   01DAEC  C506  F506         	movff	___almod@dividend+2,?___almod+2
 51847   01DAF0  C507  F507         	movff	___almod@dividend+3,?___almod+3
 51848   01DAF4  0012               	return		;funcret
 51849   01DAF6                     __end_of___almod:
 51850                           	callstack 0
 51851                           
 51852 ;; *************** function ___aldiv *****************
 51853 ;; Defined at:
 51854 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
 51855 ;; Parameters:    Size  Location     Type
 51856 ;;  dividend        4    3[COMRAM] long 
 51857 ;;  divisor         4    7[COMRAM] long 
 51858 ;; Auto vars:     Size  Location     Type
 51859 ;;  quotient        4   13[COMRAM] long 
 51860 ;;  sign            1   12[COMRAM] unsigned char 
 51861 ;;  counter         1   11[COMRAM] unsigned char 
 51862 ;; Return value:  Size  Location     Type
 51863 ;;                  4    3[COMRAM] long 
 51864 ;; Registers used:
 51865 ;;		wreg, status,2, status,0
 51866 ;; Tracked objects:
 51867 ;;		On entry : 0/0
 51868 ;;		On exit  : 0/0
 51869 ;;		Unchanged: 0/0
 51870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 51871 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51872 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51874 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51875 ;;Total ram usage:       14 bytes
 51876 ;; Hardware stack levels used: 1
 51877 ;; Hardware stack levels required when called: 1
 51878 ;; This function calls:
 51879 ;;		Nothing
 51880 ;; This function is called by:
 51881 ;;		_dtoa
 51882 ;; This function uses a non-reentrant model
 51883 ;;
 51884                           
 51885                           	psect	text149
 51886   01CF2E                     __ptext149:
 51887                           	callstack 0
 51888   01CF2E                     ___aldiv:
 51889                           	callstack 114
 51890   01CF2E  6A0D               	clrf	___aldiv@sign^(0+1280),c
 51891   01CF30  BE0B               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
 51892   01CF32  EF9F  F0E7         	goto	u25700
 51893   01CF36  EF9D  F0E7         	goto	u25701
 51894   01CF3A                     u25701:
 51895   01CF3A  EFA9  F0E7         	goto	l19603
 51896   01CF3E                     u25700:
 51897   01CF3E  1E0B               	comf	(___aldiv@divisor+3)^(0+1280),f,c
 51898   01CF40  1E0A               	comf	(___aldiv@divisor+2)^(0+1280),f,c
 51899   01CF42  1E09               	comf	(___aldiv@divisor+1)^(0+1280),f,c
 51900   01CF44  6C08               	negf	___aldiv@divisor^(0+1280),c
 51901   01CF46  0E00               	movlw	0
 51902   01CF48  2209               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
 51903   01CF4A  220A               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
 51904   01CF4C  220B               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
 51905   01CF4E  0E01               	movlw	1
 51906   01CF50  6E0D               	movwf	___aldiv@sign^(0+1280),c
 51907   01CF52                     l19603:
 51908   01CF52  BE07               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
 51909   01CF54  EFB0  F0E7         	goto	u25710
 51910   01CF58  EFAE  F0E7         	goto	u25711
 51911   01CF5C                     u25711:
 51912   01CF5C  EFBA  F0E7         	goto	l19609
 51913   01CF60                     u25710:
 51914   01CF60  1E07               	comf	(___aldiv@dividend+3)^(0+1280),f,c
 51915   01CF62  1E06               	comf	(___aldiv@dividend+2)^(0+1280),f,c
 51916   01CF64  1E05               	comf	(___aldiv@dividend+1)^(0+1280),f,c
 51917   01CF66  6C04               	negf	___aldiv@dividend^(0+1280),c
 51918   01CF68  0E00               	movlw	0
 51919   01CF6A  2205               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
 51920   01CF6C  2206               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
 51921   01CF6E  2207               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
 51922   01CF70  0E01               	movlw	1
 51923   01CF72  1A0D               	xorwf	___aldiv@sign^(0+1280),f,c
 51924   01CF74                     l19609:
 51925   01CF74  0E00               	movlw	0
 51926   01CF76  6E0E               	movwf	___aldiv@quotient^(0+1280),c
 51927   01CF78  0E00               	movlw	0
 51928   01CF7A  6E0F               	movwf	(___aldiv@quotient+1)^(0+1280),c
 51929   01CF7C  0E00               	movlw	0
 51930   01CF7E  6E10               	movwf	(___aldiv@quotient+2)^(0+1280),c
 51931   01CF80  0E00               	movlw	0
 51932   01CF82  6E11               	movwf	(___aldiv@quotient+3)^(0+1280),c
 51933   01CF84  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51934   01CF86  1009               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
 51935   01CF88  100A               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
 51936   01CF8A  100B               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
 51937   01CF8C  B4D8               	btfsc	status,2,c
 51938   01CF8E  EFCB  F0E7         	goto	u25721
 51939   01CF92  EFCD  F0E7         	goto	u25720
 51940   01CF96                     u25721:
 51941   01CF96  EF03  F0E8         	goto	l19631
 51942   01CF9A                     u25720:
 51943   01CF9A  0E01               	movlw	1
 51944   01CF9C  6E0C               	movwf	___aldiv@counter^(0+1280),c
 51945   01CF9E  EFD7  F0E7         	goto	l19617
 51946   01CFA2                     l19615:
 51947   01CFA2  90D8               	bcf	status,0,c
 51948   01CFA4  3608               	rlcf	___aldiv@divisor^(0+1280),f,c
 51949   01CFA6  3609               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
 51950   01CFA8  360A               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
 51951   01CFAA  360B               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
 51952   01CFAC  2A0C               	incf	___aldiv@counter^(0+1280),f,c
 51953   01CFAE                     l19617:
 51954   01CFAE  AE0B               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 51955   01CFB0  EFDC  F0E7         	goto	u25731
 51956   01CFB4  EFDE  F0E7         	goto	u25730
 51957   01CFB8                     u25731:
 51958   01CFB8  EFD1  F0E7         	goto	l19615
 51959   01CFBC                     u25730:
 51960   01CFBC                     l19619:
 51961   01CFBC  90D8               	bcf	status,0,c
 51962   01CFBE  360E               	rlcf	___aldiv@quotient^(0+1280),f,c
 51963   01CFC0  360F               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
 51964   01CFC2  3610               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
 51965   01CFC4  3611               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
 51966   01CFC6  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51967   01CFC8  5C04               	subwf	___aldiv@dividend^(0+1280),w,c
 51968   01CFCA  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 51969   01CFCC  5805               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
 51970   01CFCE  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 51971   01CFD0  5806               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
 51972   01CFD2  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 51973   01CFD4  5807               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
 51974   01CFD6  A0D8               	btfss	status,0,c
 51975   01CFD8  EFF0  F0E7         	goto	u25741
 51976   01CFDC  EFF2  F0E7         	goto	u25740
 51977   01CFE0                     u25741:
 51978   01CFE0  EFFB  F0E7         	goto	l19627
 51979   01CFE4                     u25740:
 51980   01CFE4  5008               	movf	___aldiv@divisor^(0+1280),w,c
 51981   01CFE6  5E04               	subwf	___aldiv@dividend^(0+1280),f,c
 51982   01CFE8  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 51983   01CFEA  5A05               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
 51984   01CFEC  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 51985   01CFEE  5A06               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
 51986   01CFF0  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 51987   01CFF2  5A07               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
 51988   01CFF4  800E               	bsf	___aldiv@quotient^(0+1280),0,c
 51989   01CFF6                     l19627:
 51990   01CFF6  90D8               	bcf	status,0,c
 51991   01CFF8  320B               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
 51992   01CFFA  320A               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
 51993   01CFFC  3209               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
 51994   01CFFE  3208               	rrcf	___aldiv@divisor^(0+1280),f,c
 51995   01D000  2E0C               	decfsz	___aldiv@counter^(0+1280),f,c
 51996   01D002  EFDE  F0E7         	goto	l19619
 51997   01D006                     l19631:
 51998   01D006  500D               	movf	___aldiv@sign^(0+1280),w,c
 51999   01D008  B4D8               	btfsc	status,2,c
 52000   01D00A  EF09  F0E8         	goto	u25751
 52001   01D00E  EF0B  F0E8         	goto	u25750
 52002   01D012                     u25751:
 52003   01D012  EF13  F0E8         	goto	l19635
 52004   01D016                     u25750:
 52005   01D016  1E11               	comf	(___aldiv@quotient+3)^(0+1280),f,c
 52006   01D018  1E10               	comf	(___aldiv@quotient+2)^(0+1280),f,c
 52007   01D01A  1E0F               	comf	(___aldiv@quotient+1)^(0+1280),f,c
 52008   01D01C  6C0E               	negf	___aldiv@quotient^(0+1280),c
 52009   01D01E  0E00               	movlw	0
 52010   01D020  220F               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
 52011   01D022  2210               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
 52012   01D024  2211               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
 52013   01D026                     l19635:
 52014   01D026  C50E  F504         	movff	___aldiv@quotient,?___aldiv
 52015   01D02A  C50F  F505         	movff	___aldiv@quotient+1,?___aldiv+1
 52016   01D02E  C510  F506         	movff	___aldiv@quotient+2,?___aldiv+2
 52017   01D032  C511  F507         	movff	___aldiv@quotient+3,?___aldiv+3
 52018   01D036  0012               	return		;funcret
 52019   01D038                     __end_of___aldiv:
 52020                           	callstack 0
 52021                           
 52022 ;; *************** function ___SDCard_crc16 *****************
 52023 ;; Defined at:
 52024 ;;		line 352 in file "../src/boards/../../drivers/SDCard.c"
 52025 ;; Parameters:    Size  Location     Type
 52026 ;;  crc             2    3[COMRAM] unsigned short 
 52027 ;;  buf             2    5[COMRAM] PTR const void 
 52028 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52029 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52030 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52031 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52032 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52033 ;;  count           2    7[COMRAM] unsigned int 
 52034 ;; Auto vars:     Size  Location     Type
 52035 ;;  p               2   14[COMRAM] PTR unsigned char 
 52036 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52037 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52038 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52039 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52040 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52041 ;;  endp            2   12[COMRAM] PTR unsigned char 
 52042 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 52043 ;;		 -> disk_initialize@buf(128), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 52044 ;;		 -> pb$fp(2), f_gets@s(4), cin_file(512), in_fl(546), 
 52045 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 52046 ;;		 -> SDCard_read512@response(1), NULL(0), tmp_buf(512), 
 52047 ;; Return value:  Size  Location     Type
 52048 ;;                  2    3[COMRAM] unsigned short 
 52049 ;; Registers used:
 52050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52051 ;; Tracked objects:
 52052 ;;		On entry : 0/0
 52053 ;;		On exit  : 0/0
 52054 ;;		Unchanged: 0/0
 52055 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52059 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52060 ;;Total ram usage:       13 bytes
 52061 ;; Hardware stack levels used: 1
 52062 ;; Hardware stack levels required when called: 1
 52063 ;; This function calls:
 52064 ;;		Nothing
 52065 ;; This function is called by:
 52066 ;;		_SDCard_read512
 52067 ;;		_SDCard_write512
 52068 ;;		_SDCard_crc16
 52069 ;; This function uses a non-reentrant model
 52070 ;;
 52071                           
 52072                           	psect	text150
 52073   01E354                     __ptext150:
 52074                           	callstack 0
 52075   01E354                     ___SDCard_crc16:
 52076                           	callstack 113
 52077   01E354                     
 52078                           ;../src/boards/../../drivers/SDCard.c: 352: uint16_t __SDCard_crc16(uint16_t crc, const 
      +                          void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 353: {;../src/board
      +                          s/../../drivers/SDCard.c: 354:     uint8_t *p = (uint8_t*)buf;
 52079   01E354  C506  F50F         	movff	___SDCard_crc16@buf,___SDCard_crc16@p
 52080   01E358  C507  F510         	movff	___SDCard_crc16@buf+1,___SDCard_crc16@p+1
 52081                           
 52082                           ;../src/boards/../../drivers/SDCard.c: 355:     uint8_t *endp = p + count;
 52083   01E35C  5008               	movf	___SDCard_crc16@count^(0+1280),w,c
 52084   01E35E  240F               	addwf	___SDCard_crc16@p^(0+1280),w,c
 52085   01E360  6E0D               	movwf	___SDCard_crc16@endp^(0+1280),c
 52086   01E362  5009               	movf	(___SDCard_crc16@count+1)^(0+1280),w,c
 52087   01E364  2010               	addwfc	(___SDCard_crc16@p+1)^(0+1280),w,c
 52088   01E366  6E0E               	movwf	(___SDCard_crc16@endp+1)^(0+1280),c
 52089                           
 52090                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 52091   01E368  EFFC  F0F1         	goto	l20939
 52092   01E36C                     l20927:
 52093                           
 52094                           ;../src/boards/../../drivers/SDCard.c: 358:         crc = (crc >> 8)|(crc << 8);
 52095   01E36C  5004               	movf	___SDCard_crc16@crc^(0+1280),w,c
 52096   01E36E  C505  F50A         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16
 52097   01E372  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 52098   01E374  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52099   01E376  6E04               	movwf	___SDCard_crc16@crc^(0+1280),c
 52100   01E378  C50B  F505         	movff	??___SDCard_crc16+1,___SDCard_crc16@crc+1
 52101   01E37C                     
 52102                           ;../src/boards/../../drivers/SDCard.c: 359:         crc ^= *p++;
 52103   01E37C  C50F  F4D9         	movff	___SDCard_crc16@p,fsr2l
 52104   01E380  C510  F4DA         	movff	___SDCard_crc16@p+1,fsr2h
 52105   01E384  50DF               	movf	indf2,w,c
 52106   01E386  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 52107   01E388  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52108   01E38A  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52109   01E38C  4A0F               	infsnz	___SDCard_crc16@p^(0+1280),f,c
 52110   01E38E  2A10               	incf	(___SDCard_crc16@p+1)^(0+1280),f,c
 52111   01E390                     
 52112                           ;../src/boards/../../drivers/SDCard.c: 360:         crc ^= ((crc & 0xff) >> 4);
 52113   01E390  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 52114   01E394  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 52115   01E398  0E04               	movlw	4
 52116   01E39A  6E0C               	movwf	(??___SDCard_crc16+2)^(0+1280),c
 52117   01E39C                     u27805:
 52118   01E39C  90D8               	bcf	status,0,c
 52119   01E39E  320B               	rrcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52120   01E3A0  320A               	rrcf	??___SDCard_crc16^(0+1280),f,c
 52121   01E3A2  2E0C               	decfsz	(??___SDCard_crc16+2)^(0+1280),f,c
 52122   01E3A4  EFCE  F0F1         	goto	u27805
 52123   01E3A8  0E0F               	movlw	15
 52124   01E3AA  160A               	andwf	??___SDCard_crc16^(0+1280),f,c
 52125   01E3AC  0E00               	movlw	0
 52126   01E3AE  160B               	andwf	(??___SDCard_crc16+1)^(0+1280),f,c
 52127   01E3B0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52128   01E3B2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52129   01E3B4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52130   01E3B6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52131   01E3B8                     
 52132                           ;../src/boards/../../drivers/SDCard.c: 361:         crc ^= (crc << 12);
 52133   01E3B8  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 52134   01E3BC  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 52135   01E3C0  0E0C               	movlw	12
 52136   01E3C2                     u27815:
 52137   01E3C2  90D8               	bcf	status,0,c
 52138   01E3C4  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 52139   01E3C6  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52140   01E3C8  2EE8               	decfsz	wreg,f,c
 52141   01E3CA  EFE1  F0F1         	goto	u27815
 52142   01E3CE  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52143   01E3D0  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52144   01E3D2  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52145   01E3D4  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52146   01E3D6                     
 52147                           ;../src/boards/../../drivers/SDCard.c: 362:         crc ^= ((crc & 0xff) << 5);
 52148   01E3D6  0EFF               	movlw	255
 52149   01E3D8  1404               	andwf	___SDCard_crc16@crc^(0+1280),w,c
 52150   01E3DA  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 52151   01E3DC  0E00               	movlw	0
 52152   01E3DE  1405               	andwf	(___SDCard_crc16@crc+1)^(0+1280),w,c
 52153   01E3E0  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 52154   01E3E2  0E05               	movlw	5
 52155   01E3E4                     u27825:
 52156   01E3E4  90D8               	bcf	status,0,c
 52157   01E3E6  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 52158   01E3E8  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 52159   01E3EA  2EE8               	decfsz	wreg,f,c
 52160   01E3EC  EFF2  F0F1         	goto	u27825
 52161   01E3F0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 52162   01E3F2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 52163   01E3F4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 52164   01E3F6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 52165   01E3F8                     l20939:
 52166                           
 52167                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 52168   01E3F8  500D               	movf	___SDCard_crc16@endp^(0+1280),w,c
 52169   01E3FA  5C0F               	subwf	___SDCard_crc16@p^(0+1280),w,c
 52170   01E3FC  500E               	movf	(___SDCard_crc16@endp+1)^(0+1280),w,c
 52171   01E3FE  5810               	subwfb	(___SDCard_crc16@p+1)^(0+1280),w,c
 52172   01E400  A0D8               	btfss	status,0,c
 52173   01E402  EF05  F0F2         	goto	u27831
 52174   01E406  EF07  F0F2         	goto	u27830
 52175   01E40A                     u27831:
 52176   01E40A  EFB6  F0F1         	goto	l20927
 52177   01E40E                     u27830:
 52178   01E40E                     
 52179                           ;../src/boards/../../drivers/SDCard.c: 365:     return crc;
 52180   01E40E  C504  F504         	movff	___SDCard_crc16@crc,?___SDCard_crc16
 52181   01E412  C505  F505         	movff	___SDCard_crc16@crc+1,?___SDCard_crc16+1
 52182   01E416  0012               	return		;funcret
 52183   01E418                     __end_of___SDCard_crc16:
 52184                           	callstack 0
 52185                           
 52186 ;; *************** function ___SDCard_command_r1 *****************
 52187 ;; Defined at:
 52188 ;;		line 143 in file "../src/boards/../../drivers/SDCard.c"
 52189 ;; Parameters:    Size  Location     Type
 52190 ;;  command         1    wreg     unsigned char 
 52191 ;;  argument        4   26[COMRAM] unsigned long 
 52192 ;;  r1              2   30[COMRAM] PTR unsigned char 
 52193 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), SDCard_init@buf(5), 
 52194 ;; Auto vars:     Size  Location     Type
 52195 ;;  command         1   32[COMRAM] unsigned char 
 52196 ;;  buf             6   33[COMRAM] unsigned char [6]
 52197 ;;  spi             2   40[COMRAM] PTR struct SPI
 52198 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52199 ;;  response        1   39[COMRAM] unsigned char 
 52200 ;; Return value:  Size  Location     Type
 52201 ;;                  2   26[COMRAM] int 
 52202 ;; Registers used:
 52203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52204 ;; Tracked objects:
 52205 ;;		On entry : 0/0
 52206 ;;		On exit  : 0/0
 52207 ;;		Unchanged: 0/0
 52208 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52209 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52210 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52212 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52213 ;;Total ram usage:       16 bytes
 52214 ;; Hardware stack levels used: 1
 52215 ;; Hardware stack levels required when called: 4
 52216 ;; This function calls:
 52217 ;;		_SDCard_crc
 52218 ;;		_SPI_SD_begin_transaction
 52219 ;;		_SPI_SD_dummy_clocks
 52220 ;;		_SPI_SD_send
 52221 ;;		___SDCard_wait_response
 52222 ;; This function is called by:
 52223 ;;		_SDCard_read512
 52224 ;;		_SDCard_write512
 52225 ;;		_SDCard_command
 52226 ;; This function uses a non-reentrant model
 52227 ;;
 52228                           
 52229                           	psect	text151
 52230   01E646                     __ptext151:
 52231                           	callstack 0
 52232   01E646                     ___SDCard_command_r1:
 52233                           	callstack 110
 52234                           
 52235                           ;incstack = 0
 52236                           ;___SDCard_command_r1@command stored from wreg
 52237   01E646  6E21               	movwf	___SDCard_command_r1@command^(0+1280),c
 52238   01E648                     
 52239                           ;../src/boards/../../drivers/SDCard.c: 143: static int __SDCard_command_r1(uint8_t comma
      +                          nd, uint32_t argument, uint8_t *r1);../src/boards/../../drivers/SDCard.c: 144: {;../src/
      +                          boards/../../drivers/SDCard.c: 145:     struct SPI *spi = ctx_.spi;
 52240   01E648  C7A8  F529         	movff	_ctx_,___SDCard_command_r1@spi
 52241   01E64C  C7A9  F52A         	movff	_ctx_+1,___SDCard_command_r1@spi+1
 52242   01E650                     
 52243                           ;../src/boards/../../drivers/SDCard.c: 146:     uint8_t buf[6];;../src/boards/../../driv
      +                          ers/SDCard.c: 147:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 149:     
      +                          buf[0] = command | 0x40;
 52244   01E650  5021               	movf	___SDCard_command_r1@command^(0+1280),w,c
 52245   01E652  0940               	iorlw	64
 52246   01E654  6E22               	movwf	___SDCard_command_r1@buf^(0+1280),c
 52247   01E656                     
 52248                           ;../src/boards/../../drivers/SDCard.c: 150:     buf[1] = (argument >> 24) & 0xff;
 52249   01E656  C51E  F523         	movff	___SDCard_command_r1@argument+3,___SDCard_command_r1@buf+1
 52250   01E65A                     
 52251                           ;../src/boards/../../drivers/SDCard.c: 151:     buf[2] = (argument >> 16) & 0xff;
 52252   01E65A  C51D  F524         	movff	___SDCard_command_r1@argument+2,___SDCard_command_r1@buf+2
 52253   01E65E                     
 52254                           ;../src/boards/../../drivers/SDCard.c: 152:     buf[3] = (argument >> 8) & 0xff;
 52255   01E65E  C51C  F525         	movff	___SDCard_command_r1@argument+1,___SDCard_command_r1@buf+3
 52256   01E662                     
 52257                           ;../src/boards/../../drivers/SDCard.c: 153:     buf[4] = (argument >> 0) & 0xff;
 52258   01E662  C51B  F526         	movff	___SDCard_command_r1@argument,___SDCard_command_r1@buf+4
 52259   01E666                     
 52260                           ;../src/boards/../../drivers/SDCard.c: 154:     buf[5] = SDCard_crc(buf, 5) | 0x01;
 52261   01E666  0E22               	movlw	low ___SDCard_command_r1@buf
 52262   01E668  6E04               	movwf	SDCard_crc@buf^(0+1280),c
 52263   01E66A  0E05               	movlw	high ___SDCard_command_r1@buf
 52264   01E66C  6E05               	movwf	(SDCard_crc@buf+1)^(0+1280),c
 52265   01E66E  0E00               	movlw	0
 52266   01E670  6E07               	movwf	(SDCard_crc@count+1)^(0+1280),c
 52267   01E672  0E05               	movlw	5
 52268   01E674  6E06               	movwf	SDCard_crc@count^(0+1280),c
 52269   01E676  ECF9  F0F8         	call	_SDCard_crc	;wreg free
 52270   01E67A  0901               	iorlw	1
 52271   01E67C  6E27               	movwf	(___SDCard_command_r1@buf+5)^(0+1280),c
 52272   01E67E                     
 52273                           ;../src/boards/../../drivers/SDCard.c: 156:     SPI_SD_begin_transaction(spi);
 52274   01E67E  C529  F508         	movff	___SDCard_command_r1@spi,SPI_SD_begin_transaction@ctx_
 52275   01E682  C52A  F509         	movff	___SDCard_command_r1@spi+1,SPI_SD_begin_transaction@ctx_+1
 52276   01E686  EC94  F000         	call	_SPI_SD_begin_transaction	;wreg free
 52277   01E68A                     
 52278                           ;../src/boards/../../drivers/SDCard.c: 157:     SPI_SD_dummy_clocks(spi, 1);
 52279   01E68A  C529  F50E         	movff	___SDCard_command_r1@spi,SPI_SD_dummy_clocks@ctx_
 52280   01E68E  C52A  F50F         	movff	___SDCard_command_r1@spi+1,SPI_SD_dummy_clocks@ctx_+1
 52281   01E692  0E00               	movlw	0
 52282   01E694  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 52283   01E696  0E01               	movlw	1
 52284   01E698  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 52285   01E69A  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 52286   01E69E                     
 52287                           ;../src/boards/../../drivers/SDCard.c: 158:     SPI_SD_send(spi, buf, 6);
 52288   01E69E  C529  F504         	movff	___SDCard_command_r1@spi,SPI_SD_send@ctx_
 52289   01E6A2  C52A  F505         	movff	___SDCard_command_r1@spi+1,SPI_SD_send@ctx_+1
 52290   01E6A6  0E22               	movlw	low ___SDCard_command_r1@buf
 52291   01E6A8  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 52292   01E6AA  0E05               	movlw	high ___SDCard_command_r1@buf
 52293   01E6AC  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 52294   01E6AE  0E00               	movlw	0
 52295   01E6B0  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 52296   01E6B2  0E06               	movlw	6
 52297   01E6B4  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 52298   01E6B6  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 52299   01E6BA                     
 52300                           ;../src/boards/../../drivers/SDCard.c: 160:     response = __SDCard_wait_response(0xff, 
      +                          ctx_.timeout);
 52301   01E6BA  C7AA  F515         	movff	_ctx_+2,___SDCard_wait_response@attempts
 52302   01E6BE  C7AB  F516         	movff	_ctx_+3,___SDCard_wait_response@attempts+1
 52303   01E6C2  0EFF               	movlw	255
 52304   01E6C4  ECDC  F0FD         	call	___SDCard_wait_response
 52305   01E6C8  6E28               	movwf	___SDCard_command_r1@response^(0+1280),c
 52306   01E6CA                     
 52307                           ;../src/boards/../../drivers/SDCard.c: 161:     *r1 = response;
 52308   01E6CA  C51F  F4D9         	movff	___SDCard_command_r1@r1,fsr2l
 52309   01E6CE  C520  F4DA         	movff	___SDCard_command_r1@r1+1,fsr2h
 52310   01E6D2  C528  F4DF         	movff	___SDCard_command_r1@response,indf2
 52311   01E6D6                     
 52312                           ;../src/boards/../../drivers/SDCard.c: 162:     if (response == 0xff) {
 52313   01E6D6  2828               	incf	___SDCard_command_r1@response^(0+1280),w,c
 52314   01E6D8  A4D8               	btfss	status,2,c
 52315   01E6DA  EF71  F0F3         	goto	u27791
 52316   01E6DE  EF73  F0F3         	goto	u27790
 52317   01E6E2                     u27791:
 52318   01E6E2  EF79  F0F3         	goto	l20921
 52319   01E6E6                     u27790:
 52320   01E6E6                     
 52321                           ;../src/boards/../../drivers/SDCard.c: 163:         return 1;
 52322   01E6E6  0E00               	movlw	0
 52323   01E6E8  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 52324   01E6EA  0E01               	movlw	1
 52325   01E6EC  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 52326   01E6EE  EF7D  F0F3         	goto	l670
 52327   01E6F2                     l20921:
 52328                           
 52329                           ;../src/boards/../../drivers/SDCard.c: 166:     return 0;
 52330   01E6F2  0E00               	movlw	0
 52331   01E6F4  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 52332   01E6F6  0E00               	movlw	0
 52333   01E6F8  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 52334   01E6FA                     l670:
 52335   01E6FA  0012               	return		;funcret
 52336   01E6FC                     __end_of___SDCard_command_r1:
 52337                           	callstack 0
 52338                           
 52339 ;; *************** function ___SDCard_wait_response *****************
 52340 ;; Defined at:
 52341 ;;		line 133 in file "../src/boards/../../drivers/SDCard.c"
 52342 ;; Parameters:    Size  Location     Type
 52343 ;;  no_response     1    wreg     unsigned char 
 52344 ;;  attempts        2   20[COMRAM] unsigned int 
 52345 ;; Auto vars:     Size  Location     Type
 52346 ;;  no_response     1   22[COMRAM] unsigned char 
 52347 ;;  spi             2   23[COMRAM] PTR struct SPI
 52348 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52349 ;;  response        1   25[COMRAM] unsigned char 
 52350 ;; Return value:  Size  Location     Type
 52351 ;;                  1    wreg      unsigned char 
 52352 ;; Registers used:
 52353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52354 ;; Tracked objects:
 52355 ;;		On entry : 0/0
 52356 ;;		On exit  : 0/0
 52357 ;;		Unchanged: 0/0
 52358 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52363 ;;Total ram usage:        6 bytes
 52364 ;; Hardware stack levels used: 1
 52365 ;; Hardware stack levels required when called: 3
 52366 ;; This function calls:
 52367 ;;		_SPI_SD_receive_byte
 52368 ;; This function is called by:
 52369 ;;		___SDCard_command_r1
 52370 ;;		_SDCard_read512
 52371 ;;		_SDCard_write512
 52372 ;; This function uses a non-reentrant model
 52373 ;;
 52374                           
 52375                           	psect	text152
 52376   01FBB8                     __ptext152:
 52377                           	callstack 0
 52378   01FBB8                     ___SDCard_wait_response:
 52379                           	callstack 111
 52380                           
 52381                           ;incstack = 0
 52382                           ;___SDCard_wait_response@no_response stored from wreg
 52383   01FBB8  6E17               	movwf	___SDCard_wait_response@no_response^(0+1280),c
 52384   01FBBA                     
 52385                           ;../src/boards/../../drivers/SDCard.c: 133: static uint8_t __SDCard_wait_response(uint8_
      +                          t no_response, unsigned int attempts);../src/boards/../../drivers/SDCard.c: 134: {;../sr
      +                          c/boards/../../drivers/SDCard.c: 135:     struct SPI *spi = ctx_.spi;
 52386   01FBBA  C7A8  F518         	movff	_ctx_,___SDCard_wait_response@spi
 52387   01FBBE  C7A9  F519         	movff	_ctx_+1,___SDCard_wait_response@spi+1
 52388   01FBC2                     l20849:
 52389                           
 52390                           ;../src/boards/../../drivers/SDCard.c: 138:         response = SPI_SD_receive_byte(spi);
 52391   01FBC2  C518  F512         	movff	___SDCard_wait_response@spi,SPI_SD_receive_byte@ctx_
 52392   01FBC6  C519  F513         	movff	___SDCard_wait_response@spi+1,SPI_SD_receive_byte@ctx_+1
 52393   01FBCA  EC83  F000         	call	_SPI_SD_receive_byte	;wreg free
 52394   01FBCE  6E1A               	movwf	___SDCard_wait_response@response^(0+1280),c
 52395   01FBD0                     
 52396                           ;../src/boards/../../drivers/SDCard.c: 139:     } while ((response == no_response) && 0 
      +                          < --attempts);
 52397   01FBD0  5017               	movf	___SDCard_wait_response@no_response^(0+1280),w,c
 52398   01FBD2  181A               	xorwf	___SDCard_wait_response@response^(0+1280),w,c
 52399   01FBD4  A4D8               	btfss	status,2,c
 52400   01FBD6  EFEF  F0FD         	goto	u27741
 52401   01FBDA  EFF1  F0FD         	goto	u27740
 52402   01FBDE                     u27741:
 52403   01FBDE  EFFD  F0FD         	goto	l20855
 52404   01FBE2                     u27740:
 52405   01FBE2  0615               	decf	___SDCard_wait_response@attempts^(0+1280),f,c
 52406   01FBE4  A0D8               	btfss	status,0,c
 52407   01FBE6  0616               	decf	(___SDCard_wait_response@attempts+1)^(0+1280),f,c
 52408   01FBE8  5015               	movf	___SDCard_wait_response@attempts^(0+1280),w,c
 52409   01FBEA  1016               	iorwf	(___SDCard_wait_response@attempts+1)^(0+1280),w,c
 52410   01FBEC  A4D8               	btfss	status,2,c
 52411   01FBEE  EFFB  F0FD         	goto	u27751
 52412   01FBF2  EFFD  F0FD         	goto	u27750
 52413   01FBF6                     u27751:
 52414   01FBF6  EFE1  F0FD         	goto	l20849
 52415   01FBFA                     u27750:
 52416   01FBFA                     l20855:
 52417                           
 52418                           ;../src/boards/../../drivers/SDCard.c: 140:     return response;
 52419   01FBFA  501A               	movf	___SDCard_wait_response@response^(0+1280),w,c
 52420   01FBFC  0012               	return		;funcret
 52421   01FBFE                     __end_of___SDCard_wait_response:
 52422                           	callstack 0
 52423                           
 52424 ;; *************** function _SPI_SD_receive_byte *****************
 52425 ;; Defined at:
 52426 ;;		line 269 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52427 ;; Parameters:    Size  Location     Type
 52428 ;;  ctx_            2   17[COMRAM] PTR struct SPI
 52429 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52430 ;; Auto vars:     Size  Location     Type
 52431 ;;  dummy           1   19[COMRAM] unsigned char 
 52432 ;; Return value:  Size  Location     Type
 52433 ;;                  1    wreg      unsigned char 
 52434 ;; Registers used:
 52435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52436 ;; Tracked objects:
 52437 ;;		On entry : 0/0
 52438 ;;		On exit  : 0/0
 52439 ;;		Unchanged: 0/0
 52440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52445 ;;Total ram usage:        3 bytes
 52446 ;; Hardware stack levels used: 1
 52447 ;; Hardware stack levels required when called: 2
 52448 ;; This function calls:
 52449 ;;		_SPI_SD_receive
 52450 ;; This function is called by:
 52451 ;;		___SDCard_wait_response
 52452 ;;		_SDCard_read512
 52453 ;; This function uses a non-reentrant model
 52454 ;;
 52455                           
 52456                           	psect	text153
 52457   000106                     __ptext153:
 52458                           	callstack 0
 52459   000106                     _SPI_SD_receive_byte:
 52460                           	callstack 111
 52461   000106                     
 52462                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 269: uint8_t SPI_SD_receive_byte(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 270: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 271:     uint8_t dummy = 0xff;
 52463   000106  6814               	setf	SPI_SD_receive_byte@dummy^(0+1280),c
 52464   000108                     
 52465                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 272:     SPI_SD_receive(ctx_, &dummy, 1)
      +                          ;
 52466   000108  C512  F504         	movff	SPI_SD_receive_byte@ctx_,SPI_SD_receive@ctx_
 52467   00010C  C513  F505         	movff	SPI_SD_receive_byte@ctx_+1,SPI_SD_receive@ctx_+1
 52468   000110  0E14               	movlw	low SPI_SD_receive_byte@dummy
 52469   000112  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 52470   000114  0E05               	movlw	high SPI_SD_receive_byte@dummy
 52471   000116  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 52472   000118  0E00               	movlw	0
 52473   00011A  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 52474   00011C  0E01               	movlw	1
 52475   00011E  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 52476   000120  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 52477   000124                     
 52478                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 273:     return dummy;
 52479   000124  5014               	movf	SPI_SD_receive_byte@dummy^(0+1280),w,c
 52480   000126  0012               	return		;funcret
 52481   000128                     __end_of_SPI_SD_receive_byte:
 52482                           	callstack 0
 52483                           
 52484 ;; *************** function _SPI_SD_receive *****************
 52485 ;; Defined at:
 52486 ;;		line 185 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52487 ;; Parameters:    Size  Location     Type
 52488 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 52489 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52490 ;;  buf             2    5[COMRAM] PTR void 
 52491 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 52492 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 52493 ;;		 -> SDCard_init@buf(5), NULL(0), SPI_SD_receive_byte@dummy(1), tmp_buf(512), 
 52494 ;;  count           2    7[COMRAM] unsigned int 
 52495 ;; Auto vars:     Size  Location     Type
 52496 ;;  i               1   14[COMRAM] unsigned char 
 52497 ;;  i               2   12[COMRAM] int 
 52498 ;;  repeat          1   11[COMRAM] unsigned char 
 52499 ;;  p               2   15[COMRAM] PTR unsigned char 
 52500 ;;		 -> disk_initialize@buf(128), pb$fp(2), f_gets@s(4), cin_file(512), 
 52501 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 52502 ;;		 -> SDCard_init@buf(5), NULL(0), SPI_SD_receive_byte@dummy(1), tmp_buf(512), 
 52503 ;; Return value:  Size  Location     Type
 52504 ;;                  1    wreg      void 
 52505 ;; Registers used:
 52506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52507 ;; Tracked objects:
 52508 ;;		On entry : 0/0
 52509 ;;		On exit  : 0/0
 52510 ;;		Unchanged: 0/0
 52511 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52512 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52513 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52515 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52516 ;;Total ram usage:       14 bytes
 52517 ;; Hardware stack levels used: 1
 52518 ;; Hardware stack levels required when called: 1
 52519 ;; This function calls:
 52520 ;;		Nothing
 52521 ;; This function is called by:
 52522 ;;		_SPI_SD_receive_byte
 52523 ;;		_SDCard_read512
 52524 ;;		_SDCard_command
 52525 ;; This function uses a non-reentrant model
 52526 ;;
 52527                           
 52528                           	psect	text154
 52529   017FBE                     __ptext154:
 52530                           	callstack 0
 52531   017FBE                     _SPI_SD_receive:
 52532                           	callstack 111
 52533   017FBE                     
 52534                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 185: void SPI_SD_receive(struct SPI *ctx
      +                          _, void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 186: {;
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 187:     uint8_t *p = (uint8_t*)buf;
 52535   017FBE  C506  F510         	movff	SPI_SD_receive@buf,SPI_SD_receive@p
 52536   017FC2  C507  F511         	movff	SPI_SD_receive@buf+1,SPI_SD_receive@p+1
 52537                           
 52538                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 189:     if (count == 0)
 52539   017FC6  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 52540   017FC8  1009               	iorwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52541   017FCA  A4D8               	btfss	status,2,c
 52542   017FCC  EFEA  F0BF         	goto	u27271
 52543   017FD0  EFEC  F0BF         	goto	u27270
 52544   017FD4                     u27271:
 52545   017FD4  EFEE  F0BF         	goto	l20483
 52546   017FD8                     u27270:
 52547   017FD8  EF72  F0C1         	goto	l516
 52548   017FDC                     l20483:
 52549                           
 52550                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 192:     SPI1TCNTH = (count >> 8);
 52551   017FDC  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52552   017FDE  0100               	movlb	0	; () banked
 52553   017FE0  6F83               	movwf	131,b	;volatile
 52554   017FE2                     
 52555                           ; BSR set to: 0
 52556                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 193:     SPI1TCNTL = (count & 0xff);
 52557   017FE2  C508  F082         	movff	SPI_SD_receive@count,130	;volatile
 52558   017FE6                     
 52559                           ; BSR set to: 0
 52560                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 195:     if ((count & 0x07) || 255 < cou
      +                          nt / 8) {
 52561   017FE6  0E07               	movlw	7
 52562   017FE8  1408               	andwf	SPI_SD_receive@count^(0+1280),w,c
 52563   017FEA  6E0A               	movwf	??_SPI_SD_receive^(0+1280),c
 52564   017FEC  0E00               	movlw	0
 52565   017FEE  1409               	andwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52566   017FF0  6E0B               	movwf	(??_SPI_SD_receive+1)^(0+1280),c
 52567   017FF2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 52568   017FF4  100B               	iorwf	(??_SPI_SD_receive+1)^(0+1280),w,c
 52569   017FF6  A4D8               	btfss	status,2,c
 52570   017FF8  EF00  F0C0         	goto	u27281
 52571   017FFC  EF02  F0C0         	goto	u27280
 52572   018000                     u27281:
 52573   018000  EF17  F0C0         	goto	l519
 52574   018004                     u27280:
 52575   018004                     
 52576                           ; BSR set to: 0
 52577   018004  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 52578   018008  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 52579   01800C  90D8               	bcf	status,0,c
 52580   01800E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52581   018010  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52582   018012  90D8               	bcf	status,0,c
 52583   018014  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52584   018016  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52585   018018  90D8               	bcf	status,0,c
 52586   01801A  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52587   01801C  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52588   01801E  040B               	decf	(??_SPI_SD_receive+1)^(0+1280),w,c
 52589   018020  A0D8               	btfss	status,0,c
 52590   018022  EF15  F0C0         	goto	u27291
 52591   018026  EF17  F0C0         	goto	u27290
 52592   01802A                     u27291:
 52593   01802A  EF4D  F0C0         	goto	l517
 52594   01802E                     u27290:
 52595   01802E                     l519:
 52596                           
 52597                           ; BSR set to: 0
 52598                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 196:         SPI1TXB = 0xff;
 52599   01802E  6981               	setf	129,b	;volatile
 52600   018030                     
 52601                           ; BSR set to: 0
 52602                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 197:         for (int i = 1; i < count; 
      +                          i++) {
 52603   018030  0E00               	movlw	0
 52604   018032  6E0E               	movwf	(SPI_SD_receive@i+1)^(0+1280),c
 52605   018034  0E01               	movlw	1
 52606   018036  6E0D               	movwf	SPI_SD_receive@i^(0+1280),c
 52607   018038  EF31  F0C0         	goto	l20499
 52608   01803C                     l521:
 52609                           
 52610                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 198:             SPI1TXB = 0xff;
 52611   01803C  0100               	movlb	0	; () banked
 52612   01803E  6981               	setf	129,b	;volatile
 52613   018040                     l522:
 52614   018040  A0B1               	btfss	1201,0,c	;volatile
 52615   018042  EF25  F0C0         	goto	u27301
 52616   018046  EF27  F0C0         	goto	u27300
 52617   01804A                     u27301:
 52618   01804A  EF20  F0C0         	goto	l522
 52619   01804E                     u27300:
 52620   01804E                     
 52621                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 200:             *p++ = SPI1RXB;
 52622   01804E  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52623   018052  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52624   018056  C080 F4DF          	movff	128,indf2	;volatile
 52625   01805A  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52626   01805C  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52627   01805E                     
 52628                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 201:         }
 52629   01805E  4A0D               	infsnz	SPI_SD_receive@i^(0+1280),f,c
 52630   018060  2A0E               	incf	(SPI_SD_receive@i+1)^(0+1280),f,c
 52631   018062                     l20499:
 52632   018062  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 52633   018064  5C0D               	subwf	SPI_SD_receive@i^(0+1280),w,c
 52634   018066  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 52635   018068  580E               	subwfb	(SPI_SD_receive@i+1)^(0+1280),w,c
 52636   01806A  A0D8               	btfss	status,0,c
 52637   01806C  EF3A  F0C0         	goto	u27311
 52638   018070  EF3C  F0C0         	goto	u27310
 52639   018074                     u27311:
 52640   018074  EF1E  F0C0         	goto	l521
 52641   018078                     u27310:
 52642   018078                     l526:
 52643   018078  A0B1               	btfss	1201,0,c	;volatile
 52644   01807A  EF41  F0C0         	goto	u27321
 52645   01807E  EF43  F0C0         	goto	u27320
 52646   018082                     u27321:
 52647   018082  EF3C  F0C0         	goto	l526
 52648   018086                     u27320:
 52649   018086                     l20501:
 52650                           
 52651                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 203:         *p++ = SPI1RXB;
 52652   018086  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52653   01808A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52654   01808E  C080 F4DF          	movff	128,indf2	;volatile
 52655   018092  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52656   018094  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52657                           
 52658                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 204:     } else {
 52659   018096  EF72  F0C1         	goto	l516
 52660   01809A                     l517:
 52661                           
 52662                           ; BSR set to: 0
 52663                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 205:         SPI1TXB = 0xff;
 52664   01809A  6981               	setf	129,b	;volatile
 52665                           
 52666                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 206:         SPI1TXB = 0xff;
 52667   01809C  6981               	setf	129,b	;volatile
 52668   01809E                     l530:
 52669   01809E  A0B1               	btfss	1201,0,c	;volatile
 52670   0180A0  EF54  F0C0         	goto	u27331
 52671   0180A4  EF56  F0C0         	goto	u27330
 52672   0180A8                     u27331:
 52673   0180A8  EF4F  F0C0         	goto	l530
 52674   0180AC                     u27330:
 52675   0180AC                     
 52676                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 208:         *p++ = SPI1RXB;
 52677   0180AC  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52678   0180B0  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52679   0180B4  C080 F4DF          	movff	128,indf2	;volatile
 52680   0180B8  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52681   0180BA  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52682   0180BC                     
 52683                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 209:         SPI1TXB = 0xff;
 52684   0180BC  0100               	movlb	0	; () banked
 52685   0180BE  6981               	setf	129,b	;volatile
 52686   0180C0                     l533:
 52687   0180C0  A0B1               	btfss	1201,0,c	;volatile
 52688   0180C2  EF65  F0C0         	goto	u27341
 52689   0180C6  EF67  F0C0         	goto	u27340
 52690   0180CA                     u27341:
 52691   0180CA  EF60  F0C0         	goto	l533
 52692   0180CE                     u27340:
 52693   0180CE                     
 52694                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 211:         *p++ = SPI1RXB;
 52695   0180CE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52696   0180D2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52697   0180D6  C080 F4DF          	movff	128,indf2	;volatile
 52698   0180DA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52699   0180DC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52700   0180DE                     
 52701                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 212:         SPI1TXB = 0xff;
 52702   0180DE  0100               	movlb	0	; () banked
 52703   0180E0  6981               	setf	129,b	;volatile
 52704   0180E2                     l536:
 52705   0180E2  A0B1               	btfss	1201,0,c	;volatile
 52706   0180E4  EF76  F0C0         	goto	u27351
 52707   0180E8  EF78  F0C0         	goto	u27350
 52708   0180EC                     u27351:
 52709   0180EC  EF71  F0C0         	goto	l536
 52710   0180F0                     u27350:
 52711   0180F0                     
 52712                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 214:         *p++ = SPI1RXB;
 52713   0180F0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52714   0180F4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52715   0180F8  C080 F4DF          	movff	128,indf2	;volatile
 52716   0180FC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52717   0180FE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52718   018100                     
 52719                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 215:         SPI1TXB = 0xff;
 52720   018100  0100               	movlb	0	; () banked
 52721   018102  6981               	setf	129,b	;volatile
 52722   018104                     l539:
 52723   018104  A0B1               	btfss	1201,0,c	;volatile
 52724   018106  EF87  F0C0         	goto	u27361
 52725   01810A  EF89  F0C0         	goto	u27360
 52726   01810E                     u27361:
 52727   01810E  EF82  F0C0         	goto	l539
 52728   018112                     u27360:
 52729   018112                     
 52730                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 217:         *p++ = SPI1RXB;
 52731   018112  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52732   018116  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52733   01811A  C080 F4DF          	movff	128,indf2	;volatile
 52734   01811E  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52735   018120  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52736   018122                     
 52737                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 218:         SPI1TXB = 0xff;
 52738   018122  0100               	movlb	0	; () banked
 52739   018124  6981               	setf	129,b	;volatile
 52740   018126                     l542:
 52741   018126  A0B1               	btfss	1201,0,c	;volatile
 52742   018128  EF98  F0C0         	goto	u27371
 52743   01812C  EF9A  F0C0         	goto	u27370
 52744   018130                     u27371:
 52745   018130  EF93  F0C0         	goto	l542
 52746   018134                     u27370:
 52747   018134                     
 52748                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 220:         *p++ = SPI1RXB;
 52749   018134  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52750   018138  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52751   01813C  C080 F4DF          	movff	128,indf2	;volatile
 52752   018140  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52753   018142  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52754   018144                     
 52755                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 221:         SPI1TXB = 0xff;
 52756   018144  0100               	movlb	0	; () banked
 52757   018146  6981               	setf	129,b	;volatile
 52758   018148                     l545:
 52759   018148  A0B1               	btfss	1201,0,c	;volatile
 52760   01814A  EFA9  F0C0         	goto	u27381
 52761   01814E  EFAB  F0C0         	goto	u27380
 52762   018152                     u27381:
 52763   018152  EFA4  F0C0         	goto	l545
 52764   018156                     u27380:
 52765   018156                     
 52766                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 223:         *p++ = SPI1RXB;
 52767   018156  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52768   01815A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52769   01815E  C080 F4DF          	movff	128,indf2	;volatile
 52770   018162  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52771   018164  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52772   018166                     
 52773                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 224:         SPI1TXB = 0xff;
 52774   018166  0100               	movlb	0	; () banked
 52775   018168  6981               	setf	129,b	;volatile
 52776   01816A                     l548:
 52777   01816A  A0B1               	btfss	1201,0,c	;volatile
 52778   01816C  EFBA  F0C0         	goto	u27391
 52779   018170  EFBC  F0C0         	goto	u27390
 52780   018174                     u27391:
 52781   018174  EFB5  F0C0         	goto	l548
 52782   018178                     u27390:
 52783   018178                     
 52784                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 226:         *p++ = SPI1RXB;
 52785   018178  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52786   01817C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52787   018180  C080 F4DF          	movff	128,indf2	;volatile
 52788   018184  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52789   018186  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52790   018188                     
 52791                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 227:         uint8_t repeat = (uint8_t)(
      +                          count / 8);
 52792   018188  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 52793   01818C  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 52794   018190  90D8               	bcf	status,0,c
 52795   018192  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52796   018194  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52797   018196  90D8               	bcf	status,0,c
 52798   018198  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52799   01819A  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52800   01819C  90D8               	bcf	status,0,c
 52801   01819E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 52802   0181A0  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 52803   0181A2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 52804   0181A4  6E0C               	movwf	SPI_SD_receive@repeat^(0+1280),c
 52805   0181A6                     
 52806                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 228:         for (uint8_t i = 1; i < rep
      +                          eat; i++) {
 52807   0181A6  0E01               	movlw	1
 52808   0181A8  6E0F               	movwf	SPI_SD_receive@i_600^(0+1280),c
 52809   0181AA  EF60  F0C1         	goto	l20597
 52810   0181AE                     l552:
 52811                           
 52812                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 229:             SPI1TXB = 0xff;
 52813   0181AE  0100               	movlb	0	; () banked
 52814   0181B0  6981               	setf	129,b	;volatile
 52815   0181B2                     l553:
 52816   0181B2  A0B1               	btfss	1201,0,c	;volatile
 52817   0181B4  EFDE  F0C0         	goto	u27401
 52818   0181B8  EFE0  F0C0         	goto	u27400
 52819   0181BC                     u27401:
 52820   0181BC  EFD9  F0C0         	goto	l553
 52821   0181C0                     u27400:
 52822   0181C0                     
 52823                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 231:             *p++ = SPI1RXB;
 52824   0181C0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52825   0181C4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52826   0181C8  C080 F4DF          	movff	128,indf2	;volatile
 52827   0181CC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52828   0181CE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52829   0181D0                     
 52830                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 232:             SPI1TXB = 0xff;
 52831   0181D0  0100               	movlb	0	; () banked
 52832   0181D2  6981               	setf	129,b	;volatile
 52833   0181D4                     l556:
 52834   0181D4  A0B1               	btfss	1201,0,c	;volatile
 52835   0181D6  EFEF  F0C0         	goto	u27411
 52836   0181DA  EFF1  F0C0         	goto	u27410
 52837   0181DE                     u27411:
 52838   0181DE  EFEA  F0C0         	goto	l556
 52839   0181E2                     u27410:
 52840   0181E2                     
 52841                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 234:             *p++ = SPI1RXB;
 52842   0181E2  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52843   0181E6  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52844   0181EA  C080 F4DF          	movff	128,indf2	;volatile
 52845   0181EE  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52846   0181F0  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52847   0181F2                     
 52848                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 235:             SPI1TXB = 0xff;
 52849   0181F2  0100               	movlb	0	; () banked
 52850   0181F4  6981               	setf	129,b	;volatile
 52851   0181F6                     l559:
 52852   0181F6  A0B1               	btfss	1201,0,c	;volatile
 52853   0181F8  EF00  F0C1         	goto	u27421
 52854   0181FC  EF02  F0C1         	goto	u27420
 52855   018200                     u27421:
 52856   018200  EFFB  F0C0         	goto	l559
 52857   018204                     u27420:
 52858   018204                     
 52859                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 237:             *p++ = SPI1RXB;
 52860   018204  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52861   018208  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52862   01820C  C080 F4DF          	movff	128,indf2	;volatile
 52863   018210  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52864   018212  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52865   018214                     
 52866                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 238:             SPI1TXB = 0xff;
 52867   018214  0100               	movlb	0	; () banked
 52868   018216  6981               	setf	129,b	;volatile
 52869   018218                     l562:
 52870   018218  A0B1               	btfss	1201,0,c	;volatile
 52871   01821A  EF11  F0C1         	goto	u27431
 52872   01821E  EF13  F0C1         	goto	u27430
 52873   018222                     u27431:
 52874   018222  EF0C  F0C1         	goto	l562
 52875   018226                     u27430:
 52876   018226                     
 52877                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 240:             *p++ = SPI1RXB;
 52878   018226  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52879   01822A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52880   01822E  C080 F4DF          	movff	128,indf2	;volatile
 52881   018232  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52882   018234  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52883   018236                     
 52884                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 241:             SPI1TXB = 0xff;
 52885   018236  0100               	movlb	0	; () banked
 52886   018238  6981               	setf	129,b	;volatile
 52887   01823A                     l565:
 52888   01823A  A0B1               	btfss	1201,0,c	;volatile
 52889   01823C  EF22  F0C1         	goto	u27441
 52890   018240  EF24  F0C1         	goto	u27440
 52891   018244                     u27441:
 52892   018244  EF1D  F0C1         	goto	l565
 52893   018248                     u27440:
 52894   018248                     
 52895                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 243:             *p++ = SPI1RXB;
 52896   018248  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52897   01824C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52898   018250  C080 F4DF          	movff	128,indf2	;volatile
 52899   018254  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52900   018256  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52901   018258                     
 52902                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 244:             SPI1TXB = 0xff;
 52903   018258  0100               	movlb	0	; () banked
 52904   01825A  6981               	setf	129,b	;volatile
 52905   01825C                     l568:
 52906   01825C  A0B1               	btfss	1201,0,c	;volatile
 52907   01825E  EF33  F0C1         	goto	u27451
 52908   018262  EF35  F0C1         	goto	u27450
 52909   018266                     u27451:
 52910   018266  EF2E  F0C1         	goto	l568
 52911   01826A                     u27450:
 52912   01826A                     
 52913                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 246:             *p++ = SPI1RXB;
 52914   01826A  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52915   01826E  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52916   018272  C080 F4DF          	movff	128,indf2	;volatile
 52917   018276  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52918   018278  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52919   01827A                     
 52920                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 247:             SPI1TXB = 0xff;
 52921   01827A  0100               	movlb	0	; () banked
 52922   01827C  6981               	setf	129,b	;volatile
 52923   01827E                     l571:
 52924   01827E  A0B1               	btfss	1201,0,c	;volatile
 52925   018280  EF44  F0C1         	goto	u27461
 52926   018284  EF46  F0C1         	goto	u27460
 52927   018288                     u27461:
 52928   018288  EF3F  F0C1         	goto	l571
 52929   01828C                     u27460:
 52930   01828C                     
 52931                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 249:             *p++ = SPI1RXB;
 52932   01828C  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52933   018290  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52934   018294  C080 F4DF          	movff	128,indf2	;volatile
 52935   018298  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52936   01829A  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52937   01829C                     
 52938                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 250:             SPI1TXB = 0xff;
 52939   01829C  0100               	movlb	0	; () banked
 52940   01829E  6981               	setf	129,b	;volatile
 52941   0182A0                     l574:
 52942   0182A0  A0B1               	btfss	1201,0,c	;volatile
 52943   0182A2  EF55  F0C1         	goto	u27471
 52944   0182A6  EF57  F0C1         	goto	u27470
 52945   0182AA                     u27471:
 52946   0182AA  EF50  F0C1         	goto	l574
 52947   0182AE                     u27470:
 52948   0182AE                     
 52949                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 252:             *p++ = SPI1RXB;
 52950   0182AE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 52951   0182B2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 52952   0182B6  C080 F4DF          	movff	128,indf2	;volatile
 52953   0182BA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 52954   0182BC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 52955   0182BE                     
 52956                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 253:         }
 52957   0182BE  2A0F               	incf	SPI_SD_receive@i_600^(0+1280),f,c
 52958   0182C0                     l20597:
 52959   0182C0  500C               	movf	SPI_SD_receive@repeat^(0+1280),w,c
 52960   0182C2  5C0F               	subwf	SPI_SD_receive@i_600^(0+1280),w,c
 52961   0182C4  A0D8               	btfss	status,0,c
 52962   0182C6  EF67  F0C1         	goto	u27481
 52963   0182CA  EF69  F0C1         	goto	u27480
 52964   0182CE                     u27481:
 52965   0182CE  EFD7  F0C0         	goto	l552
 52966   0182D2                     u27480:
 52967   0182D2                     l578:
 52968   0182D2  A0B1               	btfss	1201,0,c	;volatile
 52969   0182D4  EF6E  F0C1         	goto	u27491
 52970   0182D8  EF70  F0C1         	goto	u27490
 52971   0182DC                     u27491:
 52972   0182DC  EF69  F0C1         	goto	l578
 52973   0182E0                     u27490:
 52974   0182E0  EF43  F0C0         	goto	l20501
 52975   0182E4                     l516:
 52976   0182E4  0012               	return		;funcret
 52977   0182E6                     __end_of_SPI_SD_receive:
 52978                           	callstack 0
 52979                           
 52980 ;; *************** function _SPI_SD_begin_transaction *****************
 52981 ;; Defined at:
 52982 ;;		line 134 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 52983 ;; Parameters:    Size  Location     Type
 52984 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 52985 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 52986 ;; Auto vars:     Size  Location     Type
 52987 ;;		None
 52988 ;; Return value:  Size  Location     Type
 52989 ;;                  1    wreg      void 
 52990 ;; Registers used:
 52991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52992 ;; Tracked objects:
 52993 ;;		On entry : 0/0
 52994 ;;		On exit  : 0/0
 52995 ;;		Unchanged: 0/0
 52996 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 52997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 52999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53001 ;;Total ram usage:        2 bytes
 53002 ;; Hardware stack levels used: 1
 53003 ;; Hardware stack levels required when called: 2
 53004 ;; This function calls:
 53005 ;;		_SPI_SD_select
 53006 ;;		_acquire_bus
 53007 ;; This function is called by:
 53008 ;;		_SDCard_init
 53009 ;;		___SDCard_command_r1
 53010 ;; This function uses a non-reentrant model
 53011 ;;
 53012                           
 53013                           	psect	text155
 53014   000128                     __ptext155:
 53015                           	callstack 0
 53016   000128                     _SPI_SD_begin_transaction:
 53017                           	callstack 111
 53018   000128                     
 53019                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 134: void SPI_SD_begin_transaction(struc
      +                          t SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 135: {;../src/boards/../../d
      +                          rivers/pic18f57q43_spi.c: 136:     acquire_bus(ctx_);
 53020   000128  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,acquire_bus@ctx_
 53021   00012C  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,acquire_bus@ctx_+1
 53022   000130  EC5D  F0FC         	call	_acquire_bus	;wreg free
 53023   000134                     
 53024                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 137:     SPI_SD_select(ctx_, 1);
 53025   000134  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,SPI_SD_select@ctx_
 53026   000138  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,SPI_SD_select@ctx_+1
 53027   00013C  0E00               	movlw	0
 53028   00013E  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 53029   000140  0E01               	movlw	1
 53030   000142  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 53031   000144  ECF7  F000         	call	_SPI_SD_select	;wreg free
 53032   000148  0012               	return		;funcret
 53033   00014A                     __end_of_SPI_SD_begin_transaction:
 53034                           	callstack 0
 53035                           
 53036 ;; *************** function _SDCard_crc *****************
 53037 ;; Defined at:
 53038 ;;		line 334 in file "../src/boards/../../drivers/SDCard.c"
 53039 ;; Parameters:    Size  Location     Type
 53040 ;;  buf             2    3[COMRAM] PTR const void 
 53041 ;;		 -> __SDCard_command_r1@buf(6), 
 53042 ;;  count           2    5[COMRAM] unsigned int 
 53043 ;; Auto vars:     Size  Location     Type
 53044 ;;  i               2    9[COMRAM] int 
 53045 ;;  p               2   12[COMRAM] PTR unsigned char 
 53046 ;;		 -> __SDCard_command_r1@buf(6), 
 53047 ;;  endp            2    7[COMRAM] PTR unsigned char 
 53048 ;;		 -> __SDCard_command_r1@buf(6), 
 53049 ;;  crc             1   11[COMRAM] unsigned char 
 53050 ;; Return value:  Size  Location     Type
 53051 ;;                  1    wreg      unsigned char 
 53052 ;; Registers used:
 53053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53054 ;; Tracked objects:
 53055 ;;		On entry : 0/0
 53056 ;;		On exit  : 0/0
 53057 ;;		Unchanged: 0/0
 53058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53060 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53062 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53063 ;;Total ram usage:       11 bytes
 53064 ;; Hardware stack levels used: 1
 53065 ;; Hardware stack levels required when called: 1
 53066 ;; This function calls:
 53067 ;;		Nothing
 53068 ;; This function is called by:
 53069 ;;		___SDCard_command_r1
 53070 ;; This function uses a non-reentrant model
 53071 ;;
 53072                           
 53073                           	psect	text156
 53074   01F1F2                     __ptext156:
 53075                           	callstack 0
 53076   01F1F2                     _SDCard_crc:
 53077                           	callstack 112
 53078   01F1F2                     
 53079                           ;../src/boards/../../drivers/SDCard.c: 334: uint8_t SDCard_crc(const void *buf, unsigned
      +                           int count);../src/boards/../../drivers/SDCard.c: 335: {;../src/boards/../../drivers/SDC
      +                          ard.c: 336:     uint8_t crc = 0;
 53080   01F1F2  6A0C               	clrf	SDCard_crc@crc^(0+1280),c
 53081   01F1F4                     
 53082                           ;../src/boards/../../drivers/SDCard.c: 337:     uint8_t *p = (uint8_t*)buf;
 53083   01F1F4  C504  F50D         	movff	SDCard_crc@buf,SDCard_crc@p
 53084   01F1F8  C505  F50E         	movff	SDCard_crc@buf+1,SDCard_crc@p+1
 53085                           
 53086                           ;../src/boards/../../drivers/SDCard.c: 338:     uint8_t *endp = p + count;
 53087   01F1FC  5006               	movf	SDCard_crc@count^(0+1280),w,c
 53088   01F1FE  240D               	addwf	SDCard_crc@p^(0+1280),w,c
 53089   01F200  6E08               	movwf	SDCard_crc@endp^(0+1280),c
 53090   01F202  5007               	movf	(SDCard_crc@count+1)^(0+1280),w,c
 53091   01F204  200E               	addwfc	(SDCard_crc@p+1)^(0+1280),w,c
 53092   01F206  6E09               	movwf	(SDCard_crc@endp+1)^(0+1280),c
 53093                           
 53094                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 53095   01F208  EF2D  F0F9         	goto	l20879
 53096   01F20C                     l20863:
 53097                           
 53098                           ;../src/boards/../../drivers/SDCard.c: 341:         crc ^= *p++;
 53099   01F20C  C50D  F4D9         	movff	SDCard_crc@p,fsr2l
 53100   01F210  C50E  F4DA         	movff	SDCard_crc@p+1,fsr2h
 53101   01F214  50DF               	movf	indf2,w,c
 53102   01F216  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 53103   01F218  4A0D               	infsnz	SDCard_crc@p^(0+1280),f,c
 53104   01F21A  2A0E               	incf	(SDCard_crc@p+1)^(0+1280),f,c
 53105   01F21C                     
 53106                           ;../src/boards/../../drivers/SDCard.c: 342:         for (int i = 0; i < 8; i++) {
 53107   01F21C  0E00               	movlw	0
 53108   01F21E  6E0B               	movwf	(SDCard_crc@i+1)^(0+1280),c
 53109   01F220  0E00               	movlw	0
 53110   01F222  6E0A               	movwf	SDCard_crc@i^(0+1280),c
 53111   01F224                     l740:
 53112                           
 53113                           ;../src/boards/../../drivers/SDCard.c: 343:             if (crc & 0x80)
 53114   01F224  AE0C               	btfss	SDCard_crc@crc^(0+1280),7,c
 53115   01F226  EF17  F0F9         	goto	u27761
 53116   01F22A  EF19  F0F9         	goto	u27760
 53117   01F22E                     u27761:
 53118   01F22E  EF1B  F0F9         	goto	l742
 53119   01F232                     u27760:
 53120   01F232                     
 53121                           ;../src/boards/../../drivers/SDCard.c: 344:                 crc ^= 0x89;
 53122   01F232  0E89               	movlw	137
 53123   01F234  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 53124   01F236                     l742:
 53125                           
 53126                           ;../src/boards/../../drivers/SDCard.c: 345:             crc <<= 1;
 53127   01F236  90D8               	bcf	status,0,c
 53128   01F238  360C               	rlcf	SDCard_crc@crc^(0+1280),f,c
 53129   01F23A                     
 53130                           ;../src/boards/../../drivers/SDCard.c: 346:         }
 53131   01F23A  4A0A               	infsnz	SDCard_crc@i^(0+1280),f,c
 53132   01F23C  2A0B               	incf	(SDCard_crc@i+1)^(0+1280),f,c
 53133   01F23E  BE0B               	btfsc	(SDCard_crc@i+1)^(0+1280),7,c
 53134   01F240  EF2B  F0F9         	goto	u27771
 53135   01F244  500B               	movf	(SDCard_crc@i+1)^(0+1280),w,c
 53136   01F246  E109               	bnz	u27770
 53137   01F248  0E08               	movlw	8
 53138   01F24A  5C0A               	subwf	SDCard_crc@i^(0+1280),w,c
 53139   01F24C  A0D8               	btfss	status,0,c
 53140   01F24E  EF2B  F0F9         	goto	u27771
 53141   01F252  EF2D  F0F9         	goto	u27770
 53142   01F256                     u27771:
 53143   01F256  EF12  F0F9         	goto	l740
 53144   01F25A                     u27770:
 53145   01F25A                     l20879:
 53146                           
 53147                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 53148   01F25A  5008               	movf	SDCard_crc@endp^(0+1280),w,c
 53149   01F25C  5C0D               	subwf	SDCard_crc@p^(0+1280),w,c
 53150   01F25E  5009               	movf	(SDCard_crc@endp+1)^(0+1280),w,c
 53151   01F260  580E               	subwfb	(SDCard_crc@p+1)^(0+1280),w,c
 53152   01F262  A0D8               	btfss	status,0,c
 53153   01F264  EF36  F0F9         	goto	u27781
 53154   01F268  EF38  F0F9         	goto	u27780
 53155   01F26C                     u27781:
 53156   01F26C  EF06  F0F9         	goto	l20863
 53157   01F270                     u27780:
 53158   01F270                     
 53159                           ;../src/boards/../../drivers/SDCard.c: 349:     return crc;
 53160   01F270  500C               	movf	SDCard_crc@crc^(0+1280),w,c
 53161   01F272  0012               	return		;funcret
 53162   01F274                     __end_of_SDCard_crc:
 53163                           	callstack 0
 53164                           
 53165 ;; *************** function _SDCard_end_transaction *****************
 53166 ;; Defined at:
 53167 ;;		line 46 in file "../src/boards/../../drivers/SDCard.c"
 53168 ;; Parameters:    Size  Location     Type
 53169 ;;		None
 53170 ;; Auto vars:     Size  Location     Type
 53171 ;;  spi             2   20[COMRAM] PTR struct SPI
 53172 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53173 ;; Return value:  Size  Location     Type
 53174 ;;                  1    wreg      void 
 53175 ;; Registers used:
 53176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53177 ;; Tracked objects:
 53178 ;;		On entry : 0/0
 53179 ;;		On exit  : 0/0
 53180 ;;		Unchanged: 0/0
 53181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53186 ;;Total ram usage:        2 bytes
 53187 ;; Hardware stack levels used: 1
 53188 ;; Hardware stack levels required when called: 3
 53189 ;; This function calls:
 53190 ;;		_SPI_SD_dummy_clocks
 53191 ;;		_SPI_SD_end_transaction
 53192 ;; This function is called by:
 53193 ;;		_SDCard_init
 53194 ;;		_SDCard_read512
 53195 ;;		_SDCard_write512
 53196 ;;		_SDCard_command
 53197 ;; This function uses a non-reentrant model
 53198 ;;
 53199                           
 53200                           	psect	text157
 53201   01FF62                     __ptext157:
 53202                           	callstack 0
 53203   01FF62                     _SDCard_end_transaction:
 53204                           	callstack 111
 53205   01FF62                     
 53206                           ;../src/boards/../../drivers/SDCard.c: 48:     struct SPI *spi = ctx_.spi;
 53207   01FF62  C7A8  F515         	movff	_ctx_,SDCard_end_transaction@spi
 53208   01FF66  C7A9  F516         	movff	_ctx_+1,SDCard_end_transaction@spi+1
 53209   01FF6A                     
 53210                           ;../src/boards/../../drivers/SDCard.c: 49:     SPI_SD_end_transaction(spi);
 53211   01FF6A  C515  F508         	movff	SDCard_end_transaction@spi,SPI_SD_end_transaction@ctx_
 53212   01FF6E  C516  F509         	movff	SDCard_end_transaction@spi+1,SPI_SD_end_transaction@ctx_+1
 53213   01FF72  ECA5  F000         	call	_SPI_SD_end_transaction	;wreg free
 53214   01FF76                     
 53215                           ;../src/boards/../../drivers/SDCard.c: 50:     SPI_SD_dummy_clocks(spi, 1);
 53216   01FF76  C515  F50E         	movff	SDCard_end_transaction@spi,SPI_SD_dummy_clocks@ctx_
 53217   01FF7A  C516  F50F         	movff	SDCard_end_transaction@spi+1,SPI_SD_dummy_clocks@ctx_+1
 53218   01FF7E  0E00               	movlw	0
 53219   01FF80  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 53220   01FF82  0E01               	movlw	1
 53221   01FF84  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 53222   01FF86  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 53223   01FF8A  0012               	return		;funcret
 53224   01FF8C                     __end_of_SDCard_end_transaction:
 53225                           	callstack 0
 53226                           
 53227 ;; *************** function _SPI_SD_end_transaction *****************
 53228 ;; Defined at:
 53229 ;;		line 140 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53230 ;; Parameters:    Size  Location     Type
 53231 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 53232 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53233 ;; Auto vars:     Size  Location     Type
 53234 ;;		None
 53235 ;; Return value:  Size  Location     Type
 53236 ;;                  1    wreg      void 
 53237 ;; Registers used:
 53238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53239 ;; Tracked objects:
 53240 ;;		On entry : 0/0
 53241 ;;		On exit  : 0/0
 53242 ;;		Unchanged: 0/0
 53243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53248 ;;Total ram usage:        2 bytes
 53249 ;; Hardware stack levels used: 1
 53250 ;; Hardware stack levels required when called: 2
 53251 ;; This function calls:
 53252 ;;		_SPI_SD_select
 53253 ;;		_release_bus
 53254 ;; This function is called by:
 53255 ;;		_SDCard_end_transaction
 53256 ;; This function uses a non-reentrant model
 53257 ;;
 53258                           
 53259                           	psect	text158
 53260   00014A                     __ptext158:
 53261                           	callstack 0
 53262   00014A                     _SPI_SD_end_transaction:
 53263                           	callstack 111
 53264   00014A                     
 53265                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 140: void SPI_SD_end_transaction(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 141: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 142:     SPI_SD_select(ctx_, 0);
 53266   00014A  C508  F504         	movff	SPI_SD_end_transaction@ctx_,SPI_SD_select@ctx_
 53267   00014E  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,SPI_SD_select@ctx_+1
 53268   000152  0E00               	movlw	0
 53269   000154  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 53270   000156  0E00               	movlw	0
 53271   000158  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 53272   00015A  ECF7  F000         	call	_SPI_SD_select	;wreg free
 53273   00015E                     
 53274                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 143:     release_bus(ctx_);
 53275   00015E  C508  F504         	movff	SPI_SD_end_transaction@ctx_,release_bus@ctx_
 53276   000162  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,release_bus@ctx_+1
 53277   000166  EC63  F0FE         	call	_release_bus	;wreg free
 53278   00016A  0012               	return		;funcret
 53279   00016C                     __end_of_SPI_SD_end_transaction:
 53280                           	callstack 0
 53281                           
 53282 ;; *************** function _SPI_SD_select *****************
 53283 ;; Defined at:
 53284 ;;		line 276 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53285 ;; Parameters:    Size  Location     Type
 53286 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53287 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53288 ;;  select          2    5[COMRAM] int 
 53289 ;; Auto vars:     Size  Location     Type
 53290 ;;		None
 53291 ;; Return value:  Size  Location     Type
 53292 ;;                  1    wreg      void 
 53293 ;; Registers used:
 53294 ;;		wreg, status,2, status,0
 53295 ;; Tracked objects:
 53296 ;;		On entry : 0/0
 53297 ;;		On exit  : 0/0
 53298 ;;		Unchanged: 0/0
 53299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53304 ;;Total ram usage:        4 bytes
 53305 ;; Hardware stack levels used: 1
 53306 ;; Hardware stack levels required when called: 1
 53307 ;; This function calls:
 53308 ;;		Nothing
 53309 ;; This function is called by:
 53310 ;;		_SPI_SD_begin_transaction
 53311 ;;		_SPI_SD_end_transaction
 53312 ;; This function uses a non-reentrant model
 53313 ;;
 53314                           
 53315                           	psect	text159
 53316   0001EE                     __ptext159:
 53317                           	callstack 0
 53318   0001EE                     _SPI_SD_select:
 53319                           	callstack 111
 53320   0001EE                     
 53321                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 276: void SPI_SD_select(struct SPI *ctx_
      +                          , int select);../src/boards/../../drivers/pic18f57q43_spi.c: 277: {;../src/boards/../../
      +                          drivers/pic18f57q43_spi.c: 278:     LATE2 = select ? 0 : 1;
 53322   0001EE  5006               	movf	SPI_SD_select@select^(0+1280),w,c
 53323   0001F0  1007               	iorwf	(SPI_SD_select@select+1)^(0+1280),w,c
 53324   0001F2  B4D8               	btfsc	status,2,c
 53325   0001F4  EFFE  F000         	goto	u27661
 53326   0001F8  EF01  F001         	goto	u27660
 53327   0001FC                     u27661:
 53328   0001FC  84C2               	bsf	1218,2,c	;volatile
 53329   0001FE  EF02  F001         	goto	u27675
 53330   000202                     u27660:
 53331   000202  94C2               	bcf	1218,2,c	;volatile
 53332   000204                     u27675:
 53333   000204  0012               	return		;funcret
 53334   000206                     __end_of_SPI_SD_select:
 53335                           	callstack 0
 53336                           
 53337 ;; *************** function _SPI_SD_dummy_clocks *****************
 53338 ;; Defined at:
 53339 ;;		line 259 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53340 ;; Parameters:    Size  Location     Type
 53341 ;;  ctx_            2   13[COMRAM] PTR struct SPI
 53342 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53343 ;;  clocks          2   15[COMRAM] unsigned int 
 53344 ;; Auto vars:     Size  Location     Type
 53345 ;;  i               2   17[COMRAM] int 
 53346 ;;  dummy           1   19[COMRAM] unsigned char 
 53347 ;; Return value:  Size  Location     Type
 53348 ;;                  1    wreg      void 
 53349 ;; Registers used:
 53350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53351 ;; Tracked objects:
 53352 ;;		On entry : 0/0
 53353 ;;		On exit  : 0/0
 53354 ;;		Unchanged: 0/0
 53355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53357 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53359 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53360 ;;Total ram usage:        7 bytes
 53361 ;; Hardware stack levels used: 1
 53362 ;; Hardware stack levels required when called: 2
 53363 ;; This function calls:
 53364 ;;		_SPI_SD_send
 53365 ;;		_acquire_bus
 53366 ;;		_release_bus
 53367 ;; This function is called by:
 53368 ;;		_SDCard_end_transaction
 53369 ;;		_SDCard_init
 53370 ;;		___SDCard_command_r1
 53371 ;;		_SDCard_write512
 53372 ;; This function uses a non-reentrant model
 53373 ;;
 53374                           
 53375                           	psect	text160
 53376   01F758                     __ptext160:
 53377                           	callstack 0
 53378   01F758                     _SPI_SD_dummy_clocks:
 53379                           	callstack 111
 53380   01F758                     
 53381                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 259: void SPI_SD_dummy_clocks(struct SPI
      +                           *ctx_, unsigned int clocks);../src/boards/../../drivers/pic18f57q43_spi.c: 260: {;../sr
      +                          c/boards/../../drivers/pic18f57q43_spi.c: 261:     uint8_t dummy = 0xff;
 53382   01F758  6814               	setf	SPI_SD_dummy_clocks@dummy^(0+1280),c
 53383   01F75A                     
 53384                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 262:     acquire_bus(ctx_);
 53385   01F75A  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,acquire_bus@ctx_
 53386   01F75E  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,acquire_bus@ctx_+1
 53387   01F762  EC5D  F0FC         	call	_acquire_bus	;wreg free
 53388   01F766                     
 53389                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 263:     for (int i = 0; i < clocks; i++
      +                          ) {
 53390   01F766  0E00               	movlw	0
 53391   01F768  6E13               	movwf	(SPI_SD_dummy_clocks@i+1)^(0+1280),c
 53392   01F76A  0E00               	movlw	0
 53393   01F76C  6E12               	movwf	SPI_SD_dummy_clocks@i^(0+1280),c
 53394   01F76E  EFC9  F0FB         	goto	l20843
 53395   01F772                     l20839:
 53396                           
 53397                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 264:         SPI_SD_send(ctx_, &dummy, 1
      +                          );
 53398   01F772  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,SPI_SD_send@ctx_
 53399   01F776  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,SPI_SD_send@ctx_+1
 53400   01F77A  0E14               	movlw	low SPI_SD_dummy_clocks@dummy
 53401   01F77C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 53402   01F77E  0E05               	movlw	high SPI_SD_dummy_clocks@dummy
 53403   01F780  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 53404   01F782  0E00               	movlw	0
 53405   01F784  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 53406   01F786  0E01               	movlw	1
 53407   01F788  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 53408   01F78A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 53409   01F78E                     
 53410                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 265:     }
 53411   01F78E  4A12               	infsnz	SPI_SD_dummy_clocks@i^(0+1280),f,c
 53412   01F790  2A13               	incf	(SPI_SD_dummy_clocks@i+1)^(0+1280),f,c
 53413   01F792                     l20843:
 53414   01F792  5010               	movf	SPI_SD_dummy_clocks@clocks^(0+1280),w,c
 53415   01F794  5C12               	subwf	SPI_SD_dummy_clocks@i^(0+1280),w,c
 53416   01F796  5011               	movf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),w,c
 53417   01F798  5813               	subwfb	(SPI_SD_dummy_clocks@i+1)^(0+1280),w,c
 53418   01F79A  A0D8               	btfss	status,0,c
 53419   01F79C  EFD2  F0FB         	goto	u27731
 53420   01F7A0  EFD4  F0FB         	goto	u27730
 53421   01F7A4                     u27731:
 53422   01F7A4  EFB9  F0FB         	goto	l20839
 53423   01F7A8                     u27730:
 53424   01F7A8                     
 53425                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 266:     release_bus(ctx_);
 53426   01F7A8  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,release_bus@ctx_
 53427   01F7AC  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,release_bus@ctx_+1
 53428   01F7B0  EC63  F0FE         	call	_release_bus	;wreg free
 53429   01F7B4  0012               	return		;funcret
 53430   01F7B6                     __end_of_SPI_SD_dummy_clocks:
 53431                           	callstack 0
 53432                           
 53433 ;; *************** function _release_bus *****************
 53434 ;; Defined at:
 53435 ;;		line 55 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53436 ;; Parameters:    Size  Location     Type
 53437 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53438 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53439 ;; Auto vars:     Size  Location     Type
 53440 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 53441 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53442 ;; Return value:  Size  Location     Type
 53443 ;;                  1    wreg      void 
 53444 ;; Registers used:
 53445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53446 ;; Tracked objects:
 53447 ;;		On entry : 0/0
 53448 ;;		On exit  : 0/0
 53449 ;;		Unchanged: 0/0
 53450 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53455 ;;Total ram usage:        4 bytes
 53456 ;; Hardware stack levels used: 1
 53457 ;; Hardware stack levels required when called: 1
 53458 ;; This function calls:
 53459 ;;		Nothing
 53460 ;; This function is called by:
 53461 ;;		_SPI_SD_end_transaction
 53462 ;;		_SPI_SD_dummy_clocks
 53463 ;; This function uses a non-reentrant model
 53464 ;;
 53465                           
 53466                           	psect	text161
 53467   01FCC6                     __ptext161:
 53468                           	callstack 0
 53469   01FCC6                     _release_bus:
 53470                           	callstack 111
 53471   01FCC6                     
 53472                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 55: static void release_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 56: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 57:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 53473   01FCC6  C504  F506         	movff	release_bus@ctx_,release_bus@ctx
 53474   01FCCA  C505  F507         	movff	release_bus@ctx_+1,release_bus@ctx+1
 53475   01FCCE                     
 53476                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 58:     if (--ctx->bus_acquired <= 0) {
 53477   01FCCE  EE20 F002          	lfsr	2,2
 53478   01FCD2  5006               	movf	release_bus@ctx^(0+1280),w,c
 53479   01FCD4  26D9               	addwf	fsr2l,f,c
 53480   01FCD6  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 53481   01FCD8  22DA               	addwfc	fsr2h,f,c
 53482   01FCDA  06DF               	decf	indf2,f,c
 53483   01FCDC  50DF               	movf	indf2,w,c
 53484   01FCDE  A4D8               	btfss	status,2,c
 53485   01FCE0  EF74  F0FE         	goto	u27651
 53486   01FCE4  EF76  F0FE         	goto	u27650
 53487   01FCE8                     u27651:
 53488   01FCE8  EF81  F0FE         	goto	l458
 53489   01FCEC                     u27650:
 53490   01FCEC                     
 53491                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 59:         RB1PPS = 0x00;
 53492   01FCEC  0102               	movlb	2	; () banked
 53493   01FCEE  6B0A               	clrf	10,b	;volatile
 53494                           
 53495                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 60:         RB0PPS = 0x00;
 53496   01FCF0  6B09               	clrf	9,b	;volatile
 53497   01FCF2                     
 53498                           ; BSR set to: 2
 53499                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 61:         TRISB = ctx->tris;
 53500   01FCF2  EE20 F003          	lfsr	2,3
 53501   01FCF6  5006               	movf	release_bus@ctx^(0+1280),w,c
 53502   01FCF8  26D9               	addwf	fsr2l,f,c
 53503   01FCFA  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 53504   01FCFC  22DA               	addwfc	fsr2h,f,c
 53505   01FCFE  50DF               	movf	indf2,w,c
 53506   01FD00  6EC7               	movwf	199,c	;volatile
 53507   01FD02                     l458:
 53508   01FD02  0012               	return		;funcret
 53509   01FD04                     __end_of_release_bus:
 53510                           	callstack 0
 53511                           
 53512 ;; *************** function _acquire_bus *****************
 53513 ;; Defined at:
 53514 ;;		line 39 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53515 ;; Parameters:    Size  Location     Type
 53516 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53517 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53518 ;; Auto vars:     Size  Location     Type
 53519 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 53520 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53521 ;; Return value:  Size  Location     Type
 53522 ;;                  1    wreg      void 
 53523 ;; Registers used:
 53524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53525 ;; Tracked objects:
 53526 ;;		On entry : 0/0
 53527 ;;		On exit  : 0/0
 53528 ;;		Unchanged: 0/0
 53529 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53533 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53534 ;;Total ram usage:        4 bytes
 53535 ;; Hardware stack levels used: 1
 53536 ;; Hardware stack levels required when called: 1
 53537 ;; This function calls:
 53538 ;;		Nothing
 53539 ;; This function is called by:
 53540 ;;		_SPI_SD_begin_transaction
 53541 ;;		_SPI_SD_dummy_clocks
 53542 ;; This function uses a non-reentrant model
 53543 ;;
 53544                           
 53545                           	psect	text162
 53546   01F8BA                     __ptext162:
 53547                           	callstack 0
 53548   01F8BA                     _acquire_bus:
 53549                           	callstack 111
 53550   01F8BA                     
 53551                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 39: static void acquire_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 40: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 41:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 53552   01F8BA  C504  F506         	movff	acquire_bus@ctx_,acquire_bus@ctx
 53553   01F8BE  C505  F507         	movff	acquire_bus@ctx_+1,acquire_bus@ctx+1
 53554   01F8C2                     
 53555                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 42:     if (ctx->bus_acquired == 0) {
 53556   01F8C2  EE20 F002          	lfsr	2,2
 53557   01F8C6  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53558   01F8C8  26D9               	addwf	fsr2l,f,c
 53559   01F8CA  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53560   01F8CC  22DA               	addwfc	fsr2h,f,c
 53561   01F8CE  50DF               	movf	indf2,w,c
 53562   01F8D0  A4D8               	btfss	status,2,c
 53563   01F8D2  EF6D  F0FC         	goto	u27641
 53564   01F8D6  EF6F  F0FC         	goto	u27640
 53565   01F8DA                     u27641:
 53566   01F8DA  EF7F  F0FC         	goto	l20767
 53567   01F8DE                     u27640:
 53568   01F8DE                     
 53569                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 43:         RB1PPS = 0x31;
 53570   01F8DE  0E31               	movlw	49
 53571   01F8E0  0102               	movlb	2	; () banked
 53572   01F8E2  6F0A               	movwf	10,b	;volatile
 53573                           
 53574                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 45:         RB0PPS = 0x32;
 53575   01F8E4  0E32               	movlw	50
 53576   01F8E6  6F09               	movwf	9,b	;volatile
 53577   01F8E8                     
 53578                           ; BSR set to: 2
 53579                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 47:         ctx->tris = TRISB;
 53580   01F8E8  EE20 F003          	lfsr	2,3
 53581   01F8EC  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53582   01F8EE  26D9               	addwf	fsr2l,f,c
 53583   01F8F0  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53584   01F8F2  22DA               	addwfc	fsr2h,f,c
 53585   01F8F4  C4C7 F4DF          	movff	1223,indf2	;volatile
 53586   01F8F8                     
 53587                           ; BSR set to: 2
 53588                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 48:         TRISB0 = 0;
 53589   01F8F8  90C7               	bcf	1223,0,c	;volatile
 53590   01F8FA                     
 53591                           ; BSR set to: 2
 53592                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 49:         TRISB1 = 0;
 53593   01F8FA  92C7               	bcf	1223,1,c	;volatile
 53594   01F8FC                     
 53595                           ; BSR set to: 2
 53596                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 50:         TRISB2 = 1;
 53597   01F8FC  84C7               	bsf	1223,2,c	;volatile
 53598   01F8FE                     l20767:
 53599                           
 53600                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 52:     ctx->bus_acquired++;
 53601   01F8FE  EE20 F002          	lfsr	2,2
 53602   01F902  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 53603   01F904  26D9               	addwf	fsr2l,f,c
 53604   01F906  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 53605   01F908  22DA               	addwfc	fsr2h,f,c
 53606   01F90A  2ADF               	incf	indf2,f,c
 53607   01F90C  0012               	return		;funcret
 53608   01F90E                     __end_of_acquire_bus:
 53609                           	callstack 0
 53610                           
 53611 ;; *************** function _SPI_SD_send *****************
 53612 ;; Defined at:
 53613 ;;		line 164 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 53614 ;; Parameters:    Size  Location     Type
 53615 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 53616 ;;		 -> NULL(0), pic18f47q43_spi_ctx(4), 
 53617 ;;  buf             2    5[COMRAM] PTR const void 
 53618 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 53619 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 53620 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 53621 ;;		 -> __SDCard_command_r1@buf(6), NULL(0), SPI_SD_dummy_clocks@dummy(1), 
 53622 ;;  count           2    7[COMRAM] unsigned int 
 53623 ;; Auto vars:     Size  Location     Type
 53624 ;;  i               2    9[COMRAM] int 
 53625 ;;  p               2   11[COMRAM] PTR unsigned char 
 53626 ;;		 -> rom_fl$buf(512), in_fl$buf(512), fs$win(512), pb$buf(64), 
 53627 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), in_fl(546), 
 53628 ;;		 -> fs(564), rom_fl(546), disk_buf(128), SDCard_write512@response(1), 
 53629 ;;		 -> __SDCard_command_r1@buf(6), NULL(0), SPI_SD_dummy_clocks@dummy(1), 
 53630 ;;  dummy           1    0        unsigned char 
 53631 ;; Return value:  Size  Location     Type
 53632 ;;                  1    wreg      void 
 53633 ;; Registers used:
 53634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53635 ;; Tracked objects:
 53636 ;;		On entry : 0/0
 53637 ;;		On exit  : 0/0
 53638 ;;		Unchanged: 0/0
 53639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53640 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53641 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53643 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53644 ;;Total ram usage:       10 bytes
 53645 ;; Hardware stack levels used: 1
 53646 ;; Hardware stack levels required when called: 1
 53647 ;; This function calls:
 53648 ;;		Nothing
 53649 ;; This function is called by:
 53650 ;;		_SPI_SD_dummy_clocks
 53651 ;;		___SDCard_command_r1
 53652 ;;		_SDCard_write512
 53653 ;; This function uses a non-reentrant model
 53654 ;;
 53655                           
 53656                           	psect	text163
 53657   01EEAC                     __ptext163:
 53658                           	callstack 0
 53659   01EEAC                     _SPI_SD_send:
 53660                           	callstack 112
 53661   01EEAC                     
 53662                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 164: void SPI_SD_send(struct SPI *ctx_, 
      +                          const void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 165:
      +                           {;../src/boards/../../drivers/pic18f57q43_spi.c: 166:     uint8_t *p = (uint8_t*)buf;
 53663   01EEAC  C506  F50C         	movff	SPI_SD_send@buf,SPI_SD_send@p
 53664   01EEB0  C507  F50D         	movff	SPI_SD_send@buf+1,SPI_SD_send@p+1
 53665                           
 53666                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 167:     uint8_t dummy;;../src/boards/..
      +                          /../drivers/pic18f57q43_spi.c: 169:     if (count == 0)
 53667   01EEB4  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 53668   01EEB6  1009               	iorwf	(SPI_SD_send@count+1)^(0+1280),w,c
 53669   01EEB8  A4D8               	btfss	status,2,c
 53670   01EEBA  EF61  F0F7         	goto	u27681
 53671   01EEBE  EF63  F0F7         	goto	u27680
 53672   01EEC2                     u27681:
 53673   01EEC2  EF65  F0F7         	goto	l20783
 53674   01EEC6                     u27680:
 53675   01EEC6  EF9F  F0F7         	goto	l503
 53676   01EECA                     l20783:
 53677                           
 53678                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 172:     SPI1TCNTH = (count >> 8);
 53679   01EECA  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 53680   01EECC  0100               	movlb	0	; () banked
 53681   01EECE  6F83               	movwf	131,b	;volatile
 53682   01EED0                     
 53683                           ; BSR set to: 0
 53684                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 173:     SPI1TCNTL = (count & 0xff);
 53685   01EED0  C508  F082         	movff	SPI_SD_send@count,130	;volatile
 53686   01EED4                     
 53687                           ; BSR set to: 0
 53688                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 175:     SPI1TXB = *p++;
 53689   01EED4  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 53690   01EED8  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 53691   01EEDC  50DF               	movf	indf2,w,c
 53692   01EEDE  6F81               	movwf	129,b	;volatile
 53693   01EEE0                     
 53694                           ; BSR set to: 0
 53695   01EEE0  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 53696   01EEE2  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 53697   01EEE4                     
 53698                           ; BSR set to: 0
 53699                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 176:     for (int i = 1; i < count; i++)
      +                           {
 53700   01EEE4  0E00               	movlw	0
 53701   01EEE6  6E0B               	movwf	(SPI_SD_send@i+1)^(0+1280),c
 53702   01EEE8  0E01               	movlw	1
 53703   01EEEA  6E0A               	movwf	SPI_SD_send@i^(0+1280),c
 53704   01EEEC  EF8B  F0F7         	goto	l20799
 53705   01EEF0                     l20793:
 53706                           
 53707                           ; BSR set to: 0
 53708                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 177:         SPI1TXB = *p++;
 53709   01EEF0  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 53710   01EEF4  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 53711   01EEF8  50DF               	movf	indf2,w,c
 53712   01EEFA  6F81               	movwf	129,b	;volatile
 53713   01EEFC                     
 53714                           ; BSR set to: 0
 53715   01EEFC  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 53716   01EEFE  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 53717   01EF00                     l506:
 53718   01EF00  A0B1               	btfss	1201,0,c	;volatile
 53719   01EF02  EF85  F0F7         	goto	u27691
 53720   01EF06  EF87  F0F7         	goto	u27690
 53721   01EF0A                     u27691:
 53722   01EF0A  EF80  F0F7         	goto	l506
 53723   01EF0E                     u27690:
 53724   01EF0E  0100               	movlb	0	; () banked
 53725   01EF10  5180               	movf	128,w,b	;volatile
 53726   01EF12                     
 53727                           ; BSR set to: 0
 53728                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 180:     }
 53729   01EF12  4A0A               	infsnz	SPI_SD_send@i^(0+1280),f,c
 53730   01EF14  2A0B               	incf	(SPI_SD_send@i+1)^(0+1280),f,c
 53731   01EF16                     l20799:
 53732                           
 53733                           ; BSR set to: 0
 53734   01EF16  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 53735   01EF18  5C0A               	subwf	SPI_SD_send@i^(0+1280),w,c
 53736   01EF1A  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 53737   01EF1C  580B               	subwfb	(SPI_SD_send@i+1)^(0+1280),w,c
 53738   01EF1E  A0D8               	btfss	status,0,c
 53739   01EF20  EF94  F0F7         	goto	u27701
 53740   01EF24  EF96  F0F7         	goto	u27700
 53741   01EF28                     u27701:
 53742   01EF28  EF78  F0F7         	goto	l20793
 53743   01EF2C                     u27700:
 53744   01EF2C                     l510:
 53745   01EF2C  A0B1               	btfss	1201,0,c	;volatile
 53746   01EF2E  EF9B  F0F7         	goto	u27711
 53747   01EF32  EF9D  F0F7         	goto	u27710
 53748   01EF36                     u27711:
 53749   01EF36  EF96  F0F7         	goto	l510
 53750   01EF3A                     u27710:
 53751   01EF3A  0100               	movlb	0	; () banked
 53752   01EF3C  5180               	movf	128,w,b	;volatile
 53753   01EF3E                     l503:
 53754   01EF3E  0012               	return		;funcret
 53755   01EF40                     __end_of_SPI_SD_send:
 53756                           	callstack 0
 53757                           
 53758 ;; *************** function _ld_word *****************
 53759 ;; Defined at:
 53760 ;;		line 619 in file "../fatfs/ff.c"
 53761 ;; Parameters:    Size  Location     Type
 53762 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 53763 ;;		 -> fs$win(512), fs(564), NULL(0), 
 53764 ;; Auto vars:     Size  Location     Type
 53765 ;;  rv              2    8[COMRAM] unsigned short 
 53766 ;; Return value:  Size  Location     Type
 53767 ;;                  2    3[COMRAM] unsigned short 
 53768 ;; Registers used:
 53769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53770 ;; Tracked objects:
 53771 ;;		On entry : 0/0
 53772 ;;		On exit  : 0/0
 53773 ;;		Unchanged: 0/0
 53774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53778 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53779 ;;Total ram usage:        7 bytes
 53780 ;; Hardware stack levels used: 1
 53781 ;; Hardware stack levels required when called: 1
 53782 ;; This function calls:
 53783 ;;		Nothing
 53784 ;; This function is called by:
 53785 ;;		_get_fat
 53786 ;;		_ld_clust
 53787 ;;		_get_fileinfo
 53788 ;;		_check_fs
 53789 ;;		_mount_volume
 53790 ;;		_f_getfree
 53791 ;; This function uses a non-reentrant model
 53792 ;;
 53793                           
 53794                           	psect	text164
 53795   01FE98                     __ptext164:
 53796                           	callstack 0
 53797   01FE98                     _ld_word:
 53798                           	callstack 117
 53799   01FE98                     
 53800                           ;../fatfs/ff.c: 619: static WORD ld_word (const BYTE* ptr);../fatfs/ff.c: 620: {;../fatf
      +                          s/ff.c: 621:  WORD rv;;../fatfs/ff.c: 623:  rv = ptr[1];
 53801   01FE98  EE20 F001          	lfsr	2,1
 53802   01FE9C  5004               	movf	ld_word@ptr^(0+1280),w,c
 53803   01FE9E  26D9               	addwf	fsr2l,f,c
 53804   01FEA0  5005               	movf	(ld_word@ptr+1)^(0+1280),w,c
 53805   01FEA2  22DA               	addwfc	fsr2h,f,c
 53806   01FEA4  50DF               	movf	indf2,w,c
 53807   01FEA6  6E06               	movwf	??_ld_word^(0+1280),c
 53808   01FEA8  5006               	movf	??_ld_word^(0+1280),w,c
 53809   01FEAA  6E09               	movwf	ld_word@rv^(0+1280),c
 53810   01FEAC  6A0A               	clrf	(ld_word@rv+1)^(0+1280),c
 53811                           
 53812                           ;../fatfs/ff.c: 624:  rv = rv << 8 | ptr[0];
 53813   01FEAE  C504  F4D9         	movff	ld_word@ptr,fsr2l
 53814   01FEB2  C505  F4DA         	movff	ld_word@ptr+1,fsr2h
 53815   01FEB6  50DF               	movf	indf2,w,c
 53816   01FEB8  6E06               	movwf	??_ld_word^(0+1280),c
 53817   01FEBA  5009               	movf	ld_word@rv^(0+1280),w,c
 53818   01FEBC  6E07               	movwf	(??_ld_word+1)^(0+1280),c
 53819   01FEBE  5006               	movf	??_ld_word^(0+1280),w,c
 53820   01FEC0  6E09               	movwf	ld_word@rv^(0+1280),c
 53821   01FEC2  C507  F50A         	movff	??_ld_word+1,ld_word@rv+1
 53822   01FEC6                     
 53823                           ;../fatfs/ff.c: 625:  return rv;
 53824   01FEC6  C509  F504         	movff	ld_word@rv,?_ld_word
 53825   01FECA  C50A  F505         	movff	ld_word@rv+1,?_ld_word+1
 53826   01FECE  0012               	return		;funcret
 53827   01FED0                     __end_of_ld_word:
 53828                           	callstack 0
 53829                           
 53830 ;; *************** function _ld_dword *****************
 53831 ;; Defined at:
 53832 ;;		line 628 in file "../fatfs/ff.c"
 53833 ;; Parameters:    Size  Location     Type
 53834 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 53835 ;;		 -> fs$win(512), fs(564), NULL(0), 
 53836 ;; Auto vars:     Size  Location     Type
 53837 ;;  rv              4   12[COMRAM] unsigned long 
 53838 ;; Return value:  Size  Location     Type
 53839 ;;                  4    3[COMRAM] unsigned long 
 53840 ;; Registers used:
 53841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53842 ;; Tracked objects:
 53843 ;;		On entry : 0/0
 53844 ;;		On exit  : 0/0
 53845 ;;		Unchanged: 0/0
 53846 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53849 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53850 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53851 ;;Total ram usage:       13 bytes
 53852 ;; Hardware stack levels used: 1
 53853 ;; Hardware stack levels required when called: 1
 53854 ;; This function calls:
 53855 ;;		Nothing
 53856 ;; This function is called by:
 53857 ;;		_get_fat
 53858 ;;		_put_fat
 53859 ;;		_get_fileinfo
 53860 ;;		_check_fs
 53861 ;;		_find_volume
 53862 ;;		_mount_volume
 53863 ;;		_f_open
 53864 ;;		_f_getfree
 53865 ;; This function uses a non-reentrant model
 53866 ;;
 53867                           
 53868                           	psect	text165
 53869   01E58E                     __ptext165:
 53870                           	callstack 0
 53871   01E58E                     _ld_dword:
 53872                           	callstack 117
 53873   01E58E                     
 53874                           ;../fatfs/ff.c: 628: static DWORD ld_dword (const BYTE* ptr);../fatfs/ff.c: 629: {;../fa
      +                          tfs/ff.c: 630:  DWORD rv;;../fatfs/ff.c: 632:  rv = ptr[3];
 53875   01E58E  EE20 F003          	lfsr	2,3
 53876   01E592  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53877   01E594  26D9               	addwf	fsr2l,f,c
 53878   01E596  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53879   01E598  22DA               	addwfc	fsr2h,f,c
 53880   01E59A  50DF               	movf	indf2,w,c
 53881   01E59C  6E08               	movwf	??_ld_dword^(0+1280),c
 53882   01E59E  5008               	movf	??_ld_dword^(0+1280),w,c
 53883   01E5A0  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53884   01E5A2  6A0E               	clrf	(ld_dword@rv+1)^(0+1280),c
 53885   01E5A4  6A0F               	clrf	(ld_dword@rv+2)^(0+1280),c
 53886   01E5A6  6A10               	clrf	(ld_dword@rv+3)^(0+1280),c
 53887                           
 53888                           ;../fatfs/ff.c: 633:  rv = rv << 8 | ptr[2];
 53889   01E5A8  EE20 F002          	lfsr	2,2
 53890   01E5AC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53891   01E5AE  26D9               	addwf	fsr2l,f,c
 53892   01E5B0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53893   01E5B2  22DA               	addwfc	fsr2h,f,c
 53894   01E5B4  50DF               	movf	indf2,w,c
 53895   01E5B6  6E08               	movwf	??_ld_dword^(0+1280),c
 53896   01E5B8  5008               	movf	??_ld_dword^(0+1280),w,c
 53897   01E5BA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53898   01E5BE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53899   01E5C2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53900   01E5C6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53901   01E5C8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53902   01E5CA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53903   01E5CC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53904   01E5CE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53905   01E5D0  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53906   01E5D2  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53907   01E5D4  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53908   01E5D6  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53909                           
 53910                           ;../fatfs/ff.c: 634:  rv = rv << 8 | ptr[1];
 53911   01E5D8  EE20 F001          	lfsr	2,1
 53912   01E5DC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 53913   01E5DE  26D9               	addwf	fsr2l,f,c
 53914   01E5E0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 53915   01E5E2  22DA               	addwfc	fsr2h,f,c
 53916   01E5E4  50DF               	movf	indf2,w,c
 53917   01E5E6  6E08               	movwf	??_ld_dword^(0+1280),c
 53918   01E5E8  5008               	movf	??_ld_dword^(0+1280),w,c
 53919   01E5EA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53920   01E5EE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53921   01E5F2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53922   01E5F6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53923   01E5F8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53924   01E5FA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53925   01E5FC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53926   01E5FE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53927   01E600  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53928   01E602  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53929   01E604  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53930   01E606  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53931                           
 53932                           ;../fatfs/ff.c: 635:  rv = rv << 8 | ptr[0];
 53933   01E608  C504  F4D9         	movff	ld_dword@ptr,fsr2l
 53934   01E60C  C505  F4DA         	movff	ld_dword@ptr+1,fsr2h
 53935   01E610  50DF               	movf	indf2,w,c
 53936   01E612  6E08               	movwf	??_ld_dword^(0+1280),c
 53937   01E614  5008               	movf	??_ld_dword^(0+1280),w,c
 53938   01E616  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 53939   01E61A  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 53940   01E61E  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 53941   01E622  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 53942   01E624  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 53943   01E626  6E0D               	movwf	ld_dword@rv^(0+1280),c
 53944   01E628  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 53945   01E62A  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 53946   01E62C  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 53947   01E62E  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 53948   01E630  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 53949   01E632  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 53950   01E634                     
 53951                           ;../fatfs/ff.c: 636:  return rv;
 53952   01E634  C50D  F504         	movff	ld_dword@rv,?_ld_dword
 53953   01E638  C50E  F505         	movff	ld_dword@rv+1,?_ld_dword+1
 53954   01E63C  C50F  F506         	movff	ld_dword@rv+2,?_ld_dword+2
 53955   01E640  C510  F507         	movff	ld_dword@rv+3,?_ld_dword+3
 53956   01E644  0012               	return		;funcret
 53957   01E646                     __end_of_ld_dword:
 53958                           	callstack 0
 53959                           
 53960 ;; *************** function _clst2sect *****************
 53961 ;; Defined at:
 53962 ;;		line 1145 in file "../fatfs/ff.c"
 53963 ;; Parameters:    Size  Location     Type
 53964 ;;  fs              2   15[COMRAM] PTR struct .
 53965 ;;		 -> fs(564), NULL(0), 
 53966 ;;  clst            4   17[COMRAM] unsigned long 
 53967 ;; Auto vars:     Size  Location     Type
 53968 ;;		None
 53969 ;; Return value:  Size  Location     Type
 53970 ;;                  4   15[COMRAM] unsigned long 
 53971 ;; Registers used:
 53972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53973 ;; Tracked objects:
 53974 ;;		On entry : 0/0
 53975 ;;		On exit  : 0/0
 53976 ;;		Unchanged: 0/0
 53977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 53978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53980 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53981 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 53982 ;;Total ram usage:       12 bytes
 53983 ;; Hardware stack levels used: 1
 53984 ;; Hardware stack levels required when called: 2
 53985 ;; This function calls:
 53986 ;;		___lmul
 53987 ;; This function is called by:
 53988 ;;		_dir_clear
 53989 ;;		_dir_sdi
 53990 ;;		_dir_next
 53991 ;;		_f_open
 53992 ;;		_f_read
 53993 ;;		_f_write
 53994 ;;		_f_lseek
 53995 ;;		_f_rename
 53996 ;; This function uses a non-reentrant model
 53997 ;;
 53998                           
 53999                           	psect	text166
 54000   01E0F4                     __ptext166:
 54001                           	callstack 0
 54002   01E0F4                     _clst2sect:
 54003                           	callstack 117
 54004   01E0F4                     
 54005                           ;../fatfs/ff.c: 1146:  FATFS* fs,;../fatfs/ff.c: 1147:  DWORD clst;../fatfs/ff.c: 1149: 
      +                          {;../fatfs/ff.c: 1150:  clst -= 2;
 54006   01E0F4  0E02               	movlw	2
 54007   01E0F6  5E12               	subwf	clst2sect@clst^(0+1280),f,c
 54008   01E0F8  0E00               	movlw	0
 54009   01E0FA  5A13               	subwfb	(clst2sect@clst+1)^(0+1280),f,c
 54010   01E0FC  5A14               	subwfb	(clst2sect@clst+2)^(0+1280),f,c
 54011   01E0FE  5A15               	subwfb	(clst2sect@clst+3)^(0+1280),f,c
 54012   01E100                     
 54013                           ;../fatfs/ff.c: 1151:  if (clst >= fs->n_fatent - 2) return 0;
 54014   01E100  EE20 F018          	lfsr	2,24
 54015   01E104  5010               	movf	clst2sect@fs^(0+1280),w,c
 54016   01E106  26D9               	addwf	fsr2l,f,c
 54017   01E108  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54018   01E10A  22DA               	addwfc	fsr2h,f,c
 54019   01E10C  0EFE               	movlw	254
 54020   01E10E  24DE               	addwf	postinc2,w,c
 54021   01E110  6E16               	movwf	??_clst2sect^(0+1280),c
 54022   01E112  0EFF               	movlw	255
 54023   01E114  20DE               	addwfc	postinc2,w,c
 54024   01E116  6E17               	movwf	(??_clst2sect+1)^(0+1280),c
 54025   01E118  0EFF               	movlw	255
 54026   01E11A  20DE               	addwfc	postinc2,w,c
 54027   01E11C  6E18               	movwf	(??_clst2sect+2)^(0+1280),c
 54028   01E11E  0EFF               	movlw	255
 54029   01E120  20DE               	addwfc	postinc2,w,c
 54030   01E122  6E19               	movwf	(??_clst2sect+3)^(0+1280),c
 54031   01E124  5016               	movf	??_clst2sect^(0+1280),w,c
 54032   01E126  5C12               	subwf	clst2sect@clst^(0+1280),w,c
 54033   01E128  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 54034   01E12A  5813               	subwfb	(clst2sect@clst+1)^(0+1280),w,c
 54035   01E12C  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 54036   01E12E  5814               	subwfb	(clst2sect@clst+2)^(0+1280),w,c
 54037   01E130  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 54038   01E132  5815               	subwfb	(clst2sect@clst+3)^(0+1280),w,c
 54039   01E134  A0D8               	btfss	status,0,c
 54040   01E136  EF9F  F0F0         	goto	u28241
 54041   01E13A  EFA1  F0F0         	goto	u28240
 54042   01E13E                     u28241:
 54043   01E13E  EFAB  F0F0         	goto	l21309
 54044   01E142                     u28240:
 54045   01E142  0E00               	movlw	0
 54046   01E144  6E10               	movwf	?_clst2sect^(0+1280),c
 54047   01E146  0E00               	movlw	0
 54048   01E148  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 54049   01E14A  0E00               	movlw	0
 54050   01E14C  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 54051   01E14E  0E00               	movlw	0
 54052   01E150  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 54053   01E152  EFDF  F0F0         	goto	l1489
 54054   01E156                     l21309:
 54055                           
 54056                           ;../fatfs/ff.c: 1152:  return fs->database + (LBA_t)fs->csize * clst;
 54057   01E156  EE20 F02C          	lfsr	2,44
 54058   01E15A  5010               	movf	clst2sect@fs^(0+1280),w,c
 54059   01E15C  26D9               	addwf	fsr2l,f,c
 54060   01E15E  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54061   01E160  22DA               	addwfc	fsr2h,f,c
 54062   01E162  C4DE F516          	movff	postinc2,??_clst2sect
 54063   01E166  C4DE F517          	movff	postinc2,??_clst2sect+1
 54064   01E16A  C4DE F518          	movff	postinc2,??_clst2sect+2
 54065   01E16E  C4DE F519          	movff	postinc2,??_clst2sect+3
 54066   01E172  EE20 F00A          	lfsr	2,10
 54067   01E176  5010               	movf	clst2sect@fs^(0+1280),w,c
 54068   01E178  26D9               	addwf	fsr2l,f,c
 54069   01E17A  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 54070   01E17C  22DA               	addwfc	fsr2h,f,c
 54071   01E17E  C4DE F51A          	movff	postinc2,??_clst2sect+4
 54072   01E182  C4DD F51B          	movff	postdec2,??_clst2sect+5
 54073   01E186  C51A  F504         	movff	??_clst2sect+4,___lmul@multiplier
 54074   01E18A  C51B  F505         	movff	??_clst2sect+5,___lmul@multiplier+1
 54075   01E18E  6A06               	clrf	(___lmul@multiplier+2)^(0+1280),c
 54076   01E190  6A07               	clrf	(___lmul@multiplier+3)^(0+1280),c
 54077   01E192  C512  F508         	movff	clst2sect@clst,___lmul@multiplicand
 54078   01E196  C513  F509         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 54079   01E19A  C514  F50A         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 54080   01E19E  C515  F50B         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 54081   01E1A2  EC13  F0FB         	call	___lmul	;wreg free
 54082   01E1A6  5016               	movf	??_clst2sect^(0+1280),w,c
 54083   01E1A8  2404               	addwf	?___lmul^(0+1280),w,c
 54084   01E1AA  6E10               	movwf	?_clst2sect^(0+1280),c
 54085   01E1AC  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 54086   01E1AE  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 54087   01E1B0  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 54088   01E1B2  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 54089   01E1B4  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 54090   01E1B6  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 54091   01E1B8  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 54092   01E1BA  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 54093   01E1BC  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 54094   01E1BE                     l1489:
 54095   01E1BE  0012               	return		;funcret
 54096   01E1C0                     __end_of_clst2sect:
 54097                           	callstack 0
 54098                           
 54099 ;; *************** function ___lmul *****************
 54100 ;; Defined at:
 54101 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
 54102 ;; Parameters:    Size  Location     Type
 54103 ;;  multiplier      4    3[COMRAM] unsigned long 
 54104 ;;  multiplicand    4    7[COMRAM] unsigned long 
 54105 ;; Auto vars:     Size  Location     Type
 54106 ;;  product         4   11[COMRAM] unsigned long 
 54107 ;; Return value:  Size  Location     Type
 54108 ;;                  4    3[COMRAM] unsigned long 
 54109 ;; Registers used:
 54110 ;;		wreg, status,2, status,0
 54111 ;; Tracked objects:
 54112 ;;		On entry : 0/0
 54113 ;;		On exit  : 0/0
 54114 ;;		Unchanged: 0/0
 54115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54116 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54119 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54120 ;;Total ram usage:       12 bytes
 54121 ;; Hardware stack levels used: 1
 54122 ;; Hardware stack levels required when called: 1
 54123 ;; This function calls:
 54124 ;;		Nothing
 54125 ;; This function is called by:
 54126 ;;		_clst2sect
 54127 ;;		_mount_volume
 54128 ;;		___strtoxl
 54129 ;; This function uses a non-reentrant model
 54130 ;;
 54131                           
 54132                           	psect	text167
 54133   01F626                     __ptext167:
 54134                           	callstack 0
 54135   01F626                     ___lmul:
 54136                           	callstack 117
 54137   01F626  0E00               	movlw	0
 54138   01F628  6E0C               	movwf	___lmul@product^(0+1280),c
 54139   01F62A  0E00               	movlw	0
 54140   01F62C  6E0D               	movwf	(___lmul@product+1)^(0+1280),c
 54141   01F62E  0E00               	movlw	0
 54142   01F630  6E0E               	movwf	(___lmul@product+2)^(0+1280),c
 54143   01F632  0E00               	movlw	0
 54144   01F634  6E0F               	movwf	(___lmul@product+3)^(0+1280),c
 54145   01F636                     l21285:
 54146   01F636  A004               	btfss	___lmul@multiplier^(0+1280),0,c
 54147   01F638  EF20  F0FB         	goto	u28211
 54148   01F63C  EF22  F0FB         	goto	u28210
 54149   01F640                     u28211:
 54150   01F640  EF2A  F0FB         	goto	l21289
 54151   01F644                     u28210:
 54152   01F644  5008               	movf	___lmul@multiplicand^(0+1280),w,c
 54153   01F646  260C               	addwf	___lmul@product^(0+1280),f,c
 54154   01F648  5009               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 54155   01F64A  220D               	addwfc	(___lmul@product+1)^(0+1280),f,c
 54156   01F64C  500A               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 54157   01F64E  220E               	addwfc	(___lmul@product+2)^(0+1280),f,c
 54158   01F650  500B               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 54159   01F652  220F               	addwfc	(___lmul@product+3)^(0+1280),f,c
 54160   01F654                     l21289:
 54161   01F654  90D8               	bcf	status,0,c
 54162   01F656  3608               	rlcf	___lmul@multiplicand^(0+1280),f,c
 54163   01F658  3609               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 54164   01F65A  360A               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 54165   01F65C  360B               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 54166   01F65E  90D8               	bcf	status,0,c
 54167   01F660  3207               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 54168   01F662  3206               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 54169   01F664  3205               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 54170   01F666  3204               	rrcf	___lmul@multiplier^(0+1280),f,c
 54171   01F668  5004               	movf	___lmul@multiplier^(0+1280),w,c
 54172   01F66A  1005               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 54173   01F66C  1006               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 54174   01F66E  1007               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 54175   01F670  A4D8               	btfss	status,2,c
 54176   01F672  EF3D  F0FB         	goto	u28221
 54177   01F676  EF3F  F0FB         	goto	u28220
 54178   01F67A                     u28221:
 54179   01F67A  EF1B  F0FB         	goto	l21285
 54180   01F67E                     u28220:
 54181   01F67E  C50C  F504         	movff	___lmul@product,?___lmul
 54182   01F682  C50D  F505         	movff	___lmul@product+1,?___lmul+1
 54183   01F686  C50E  F506         	movff	___lmul@product+2,?___lmul+2
 54184   01F68A  C50F  F507         	movff	___lmul@product+3,?___lmul+3
 54185   01F68E  0012               	return		;funcret
 54186   01F690                     __end_of___lmul:
 54187                           	callstack 0
 54188                           
 54189 ;; *************** function _dsk_err *****************
 54190 ;; Defined at:
 54191 ;;		line 138 in file "../src/io_dos.c"
 54192 ;; Parameters:    Size  Location     Type
 54193 ;;		None
 54194 ;; Auto vars:     Size  Location     Type
 54195 ;;		None
 54196 ;; Return value:  Size  Location     Type
 54197 ;;                  1    wreg      void 
 54198 ;; Registers used:
 54199 ;;		wreg, status,2
 54200 ;; Tracked objects:
 54201 ;;		On entry : 0/0
 54202 ;;		On exit  : 0/0
 54203 ;;		Unchanged: 0/0
 54204 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54209 ;;Total ram usage:        0 bytes
 54210 ;; Hardware stack levels used: 1
 54211 ;; Hardware stack levels required when called: 1
 54212 ;; This function calls:
 54213 ;;		Nothing
 54214 ;; This function is called by:
 54215 ;;		_bus_master_operation
 54216 ;; This function uses a non-reentrant model
 54217 ;;
 54218                           
 54219                           	psect	text168
 54220   00026E                     __ptext168:
 54221                           	callstack 0
 54222   00026E                     _dsk_err:
 54223                           	callstack 121
 54224   00026E                     
 54225                           ;../src/io_dos.c: 139:  req_tbl.UNI_CHR = 1;
 54226   00026E  0E01               	movlw	1
 54227   000270  0107               	movlb	7	; () banked
 54228   000272  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 54229   000274                     
 54230                           ; BSR set to: 7
 54231   000274  0012               	return		;funcret
 54232   000276                     __end_of_dsk_err:
 54233                           	callstack 0
 54234                           
 54235 ;; *************** function _bus_hold_req *****************
 54236 ;; Defined at:
 54237 ;;		line 284 in file "../src/boards/w65_bd.c"
 54238 ;; Parameters:    Size  Location     Type
 54239 ;;		None
 54240 ;; Auto vars:     Size  Location     Type
 54241 ;;		None
 54242 ;; Return value:  Size  Location     Type
 54243 ;;                  1    wreg      void 
 54244 ;; Registers used:
 54245 ;;		None
 54246 ;; Tracked objects:
 54247 ;;		On entry : 0/0
 54248 ;;		On exit  : 0/0
 54249 ;;		Unchanged: 0/0
 54250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54255 ;;Total ram usage:        0 bytes
 54256 ;; Hardware stack levels used: 1
 54257 ;; Hardware stack levels required when called: 1
 54258 ;; This function calls:
 54259 ;;		Nothing
 54260 ;; This function is called by:
 54261 ;;		_reset_cpu
 54262 ;;		_board_event_loop
 54263 ;;		_board_event_loop1
 54264 ;; This function uses a non-reentrant model
 54265 ;;
 54266                           
 54267                           	psect	text169
 54268   000258                     __ptext169:
 54269                           	callstack 0
 54270   000258                     _bus_hold_req:
 54271                           	callstack 122
 54272   000258                     
 54273                           ;../src/boards/w65_bd.c: 286:  TRISC = 0x00;
 54274   000258  6AC8               	clrf	200,c	;volatile
 54275                           
 54276                           ;../src/boards/w65_bd.c: 287:  TRISD = 0x00;
 54277   00025A  6AC9               	clrf	201,c	;volatile
 54278                           
 54279                           ;../src/boards/w65_bd.c: 289:  LATA4 = 1;
 54280   00025C  88BE               	bsf	1214,4,c	;volatile
 54281                           
 54282                           ;../src/boards/w65_bd.c: 290:  TRISA4 = 0;
 54283   00025E  98C6               	bcf	1222,4,c	;volatile
 54284                           
 54285                           ;../src/boards/w65_bd.c: 291:  TRISA1 = 0;
 54286   000260  92C6               	bcf	1222,1,c	;volatile
 54287   000262  0012               	return		;funcret
 54288   000264                     __end_of_bus_hold_req:
 54289                           	callstack 0
 54290                           
 54291 ;; *************** function ___xxtofl *****************
 54292 ;; Defined at:
 54293 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 54294 ;; Parameters:    Size  Location     Type
 54295 ;;  sign            1    wreg     unsigned char 
 54296 ;;  val             4    3[COMRAM] long 
 54297 ;; Auto vars:     Size  Location     Type
 54298 ;;  sign            1   11[COMRAM] unsigned char 
 54299 ;;  arg             4   13[COMRAM] unsigned long 
 54300 ;;  exp             1   12[COMRAM] unsigned char 
 54301 ;; Return value:  Size  Location     Type
 54302 ;;                  4    3[COMRAM] unsigned char 
 54303 ;; Registers used:
 54304 ;;		wreg, status,2, status,0
 54305 ;; Tracked objects:
 54306 ;;		On entry : 0/0
 54307 ;;		On exit  : 0/0
 54308 ;;		Unchanged: 0/0
 54309 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54311 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54313 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54314 ;;Total ram usage:       14 bytes
 54315 ;; Hardware stack levels used: 1
 54316 ;; Hardware stack levels required when called: 1
 54317 ;; This function calls:
 54318 ;;		Nothing
 54319 ;; This function is called by:
 54320 ;;		_main
 54321 ;;		_ftoa
 54322 ;; This function uses a non-reentrant model
 54323 ;;
 54324                           
 54325                           	psect	text170
 54326   01AAA6                     __ptext170:
 54327                           	callstack 0
 54328   01AAA6                     ___xxtofl:
 54329                           	callstack 125
 54330                           
 54331                           ;incstack = 0
 54332                           ;___xxtofl@sign stored from wreg
 54333   01AAA6  6E0C               	movwf	___xxtofl@sign^(0+1280),c
 54334   01AAA8  500C               	movf	___xxtofl@sign^(0+1280),w,c
 54335   01AAAA  B4D8               	btfsc	status,2,c
 54336   01AAAC  EF5A  F0D5         	goto	u23501
 54337   01AAB0  EF5C  F0D5         	goto	u23500
 54338   01AAB4                     u23501:
 54339   01AAB4  EF7E  F0D5         	goto	l3282
 54340   01AAB8                     u23500:
 54341   01AAB8  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 54342   01AABA  EF63  F0D5         	goto	u23510
 54343   01AABE  EF61  F0D5         	goto	u23511
 54344   01AAC2                     u23511:
 54345   01AAC2  EF7E  F0D5         	goto	l3282
 54346   01AAC6                     u23510:
 54347   01AAC6  C504  F508         	movff	___xxtofl@val,??___xxtofl
 54348   01AACA  C505  F509         	movff	___xxtofl@val+1,??___xxtofl+1
 54349   01AACE  C506  F50A         	movff	___xxtofl@val+2,??___xxtofl+2
 54350   01AAD2  C507  F50B         	movff	___xxtofl@val+3,??___xxtofl+3
 54351   01AAD6  1E08               	comf	??___xxtofl^(0+1280),f,c
 54352   01AAD8  1E09               	comf	(??___xxtofl+1)^(0+1280),f,c
 54353   01AADA  1E0A               	comf	(??___xxtofl+2)^(0+1280),f,c
 54354   01AADC  1E0B               	comf	(??___xxtofl+3)^(0+1280),f,c
 54355   01AADE  2A08               	incf	??___xxtofl^(0+1280),f,c
 54356   01AAE0  0E00               	movlw	0
 54357   01AAE2  2209               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 54358   01AAE4  220A               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 54359   01AAE6  220B               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 54360   01AAE8  C508  F50E         	movff	??___xxtofl,___xxtofl@arg
 54361   01AAEC  C509  F50F         	movff	??___xxtofl+1,___xxtofl@arg+1
 54362   01AAF0  C50A  F510         	movff	??___xxtofl+2,___xxtofl@arg+2
 54363   01AAF4  C50B  F511         	movff	??___xxtofl+3,___xxtofl@arg+3
 54364   01AAF8  EF86  F0D5         	goto	l18363
 54365   01AAFC                     l3282:
 54366   01AAFC  C504  F50E         	movff	___xxtofl@val,___xxtofl@arg
 54367   01AB00  C505  F50F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 54368   01AB04  C506  F510         	movff	___xxtofl@val+2,___xxtofl@arg+2
 54369   01AB08  C507  F511         	movff	___xxtofl@val+3,___xxtofl@arg+3
 54370   01AB0C                     l18363:
 54371   01AB0C  5004               	movf	___xxtofl@val^(0+1280),w,c
 54372   01AB0E  1005               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 54373   01AB10  1006               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 54374   01AB12  1007               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 54375   01AB14  A4D8               	btfss	status,2,c
 54376   01AB16  EF8F  F0D5         	goto	u23521
 54377   01AB1A  EF91  F0D5         	goto	u23520
 54378   01AB1E                     u23521:
 54379   01AB1E  EF9B  F0D5         	goto	l18369
 54380   01AB22                     u23520:
 54381   01AB22  0E00               	movlw	0
 54382   01AB24  6E04               	movwf	?___xxtofl^(0+1280),c
 54383   01AB26  0E00               	movlw	0
 54384   01AB28  6E05               	movwf	(?___xxtofl+1)^(0+1280),c
 54385   01AB2A  0E00               	movlw	0
 54386   01AB2C  6E06               	movwf	(?___xxtofl+2)^(0+1280),c
 54387   01AB2E  0E00               	movlw	0
 54388   01AB30  6E07               	movwf	(?___xxtofl+3)^(0+1280),c
 54389   01AB32  EF2C  F0D6         	goto	l3285
 54390   01AB36                     l18369:
 54391   01AB36  0E96               	movlw	150
 54392   01AB38  6E0D               	movwf	___xxtofl@exp^(0+1280),c
 54393   01AB3A  EFA5  F0D5         	goto	l18373
 54394   01AB3E                     l18371:
 54395   01AB3E  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 54396   01AB40  90D8               	bcf	status,0,c
 54397   01AB42  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 54398   01AB44  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 54399   01AB46  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 54400   01AB48  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 54401   01AB4A                     l18373:
 54402   01AB4A  0E00               	movlw	0
 54403   01AB4C  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 54404   01AB4E  6E08               	movwf	??___xxtofl^(0+1280),c
 54405   01AB50  0E00               	movlw	0
 54406   01AB52  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 54407   01AB54  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 54408   01AB56  0E00               	movlw	0
 54409   01AB58  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 54410   01AB5A  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 54411   01AB5C  0EFE               	movlw	254
 54412   01AB5E  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 54413   01AB60  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 54414   01AB62  5008               	movf	??___xxtofl^(0+1280),w,c
 54415   01AB64  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 54416   01AB66  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 54417   01AB68  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 54418   01AB6A  A4D8               	btfss	status,2,c
 54419   01AB6C  EFBA  F0D5         	goto	u23531
 54420   01AB70  EFBC  F0D5         	goto	u23530
 54421   01AB74                     u23531:
 54422   01AB74  EF9F  F0D5         	goto	l18371
 54423   01AB78                     u23530:
 54424   01AB78  EFCA  F0D5         	goto	l3289
 54425   01AB7C                     l18375:
 54426   01AB7C  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 54427   01AB7E  0E01               	movlw	1
 54428   01AB80  260E               	addwf	___xxtofl@arg^(0+1280),f,c
 54429   01AB82  0E00               	movlw	0
 54430   01AB84  220F               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 54431   01AB86  2210               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 54432   01AB88  2211               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 54433   01AB8A  90D8               	bcf	status,0,c
 54434   01AB8C  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 54435   01AB8E  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 54436   01AB90  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 54437   01AB92  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 54438   01AB94                     l3289:
 54439   01AB94  0E00               	movlw	0
 54440   01AB96  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 54441   01AB98  6E08               	movwf	??___xxtofl^(0+1280),c
 54442   01AB9A  0E00               	movlw	0
 54443   01AB9C  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 54444   01AB9E  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 54445   01ABA0  0E00               	movlw	0
 54446   01ABA2  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 54447   01ABA4  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 54448   01ABA6  0EFF               	movlw	255
 54449   01ABA8  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 54450   01ABAA  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 54451   01ABAC  5008               	movf	??___xxtofl^(0+1280),w,c
 54452   01ABAE  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 54453   01ABB0  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 54454   01ABB2  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 54455   01ABB4  A4D8               	btfss	status,2,c
 54456   01ABB6  EFDF  F0D5         	goto	u23541
 54457   01ABBA  EFE1  F0D5         	goto	u23540
 54458   01ABBE                     u23541:
 54459   01ABBE  EFBE  F0D5         	goto	l18375
 54460   01ABC2                     u23540:
 54461   01ABC2  EFE9  F0D5         	goto	l18383
 54462   01ABC6                     l18381:
 54463   01ABC6  060D               	decf	___xxtofl@exp^(0+1280),f,c
 54464   01ABC8  90D8               	bcf	status,0,c
 54465   01ABCA  360E               	rlcf	___xxtofl@arg^(0+1280),f,c
 54466   01ABCC  360F               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 54467   01ABCE  3610               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 54468   01ABD0  3611               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 54469   01ABD2                     l18383:
 54470   01ABD2  BE10               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 54471   01ABD4  EFEE  F0D5         	goto	u23551
 54472   01ABD8  EFF0  F0D5         	goto	u23550
 54473   01ABDC                     u23551:
 54474   01ABDC  EFF8  F0D5         	goto	l3296
 54475   01ABE0                     u23550:
 54476   01ABE0  0E02               	movlw	2
 54477   01ABE2  600D               	cpfslt	___xxtofl@exp^(0+1280),c
 54478   01ABE4  EFF6  F0D5         	goto	u23561
 54479   01ABE8  EFF8  F0D5         	goto	u23560
 54480   01ABEC                     u23561:
 54481   01ABEC  EFE3  F0D5         	goto	l18381
 54482   01ABF0                     u23560:
 54483   01ABF0                     l3296:
 54484   01ABF0  B00D               	btfsc	___xxtofl@exp^(0+1280),0,c
 54485   01ABF2  EFFD  F0D5         	goto	u23571
 54486   01ABF6  EFFF  F0D5         	goto	u23570
 54487   01ABFA                     u23571:
 54488   01ABFA  EF00  F0D6         	goto	l18389
 54489   01ABFE                     u23570:
 54490   01ABFE  9E10               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 54491   01AC00                     l18389:
 54492   01AC00  90D8               	bcf	status,0,c
 54493   01AC02  320D               	rrcf	___xxtofl@exp^(0+1280),f,c
 54494   01AC04  C50D  F508         	movff	___xxtofl@exp,??___xxtofl
 54495   01AC08  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 54496   01AC0A  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 54497   01AC0C  6A0B               	clrf	(??___xxtofl+3)^(0+1280),c
 54498   01AC0E  C508  F50B         	movff	??___xxtofl,??___xxtofl+3
 54499   01AC12  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 54500   01AC14  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 54501   01AC16  6A08               	clrf	??___xxtofl^(0+1280),c
 54502   01AC18  5008               	movf	??___xxtofl^(0+1280),w,c
 54503   01AC1A  120E               	iorwf	___xxtofl@arg^(0+1280),f,c
 54504   01AC1C  5009               	movf	(??___xxtofl+1)^(0+1280),w,c
 54505   01AC1E  120F               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 54506   01AC20  500A               	movf	(??___xxtofl+2)^(0+1280),w,c
 54507   01AC22  1210               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 54508   01AC24  500B               	movf	(??___xxtofl+3)^(0+1280),w,c
 54509   01AC26  1211               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 54510   01AC28  500C               	movf	___xxtofl@sign^(0+1280),w,c
 54511   01AC2A  B4D8               	btfsc	status,2,c
 54512   01AC2C  EF1A  F0D6         	goto	u23581
 54513   01AC30  EF1C  F0D6         	goto	u23580
 54514   01AC34                     u23581:
 54515   01AC34  EF24  F0D6         	goto	l18399
 54516   01AC38                     u23580:
 54517   01AC38  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 54518   01AC3A  EF23  F0D6         	goto	u23590
 54519   01AC3E  EF21  F0D6         	goto	u23591
 54520   01AC42                     u23591:
 54521   01AC42  EF24  F0D6         	goto	l18399
 54522   01AC46                     u23590:
 54523   01AC46  8E11               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 54524   01AC48                     l18399:
 54525   01AC48  C50E  F504         	movff	___xxtofl@arg,?___xxtofl
 54526   01AC4C  C50F  F505         	movff	___xxtofl@arg+1,?___xxtofl+1
 54527   01AC50  C510  F506         	movff	___xxtofl@arg+2,?___xxtofl+2
 54528   01AC54  C511  F507         	movff	___xxtofl@arg+3,?___xxtofl+3
 54529   01AC58                     l3285:
 54530   01AC58  0012               	return		;funcret
 54531   01AC5A                     __end_of___xxtofl:
 54532                           	callstack 0
 54533                           
 54534 ;; *************** function _Default_ISR *****************
 54535 ;; Defined at:
 54536 ;;		line 81 in file "../src/boards/w65_cmn.c"
 54537 ;; Parameters:    Size  Location     Type
 54538 ;;		None
 54539 ;; Auto vars:     Size  Location     Type
 54540 ;;		None
 54541 ;; Return value:  Size  Location     Type
 54542 ;;                  1    wreg      void 
 54543 ;; Registers used:
 54544 ;;		None
 54545 ;; Tracked objects:
 54546 ;;		On entry : 0/0
 54547 ;;		On exit  : 0/0
 54548 ;;		Unchanged: 0/0
 54549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54554 ;;Total ram usage:        0 bytes
 54555 ;; Hardware stack levels used: 1
 54556 ;; This function calls:
 54557 ;;		Nothing
 54558 ;; This function is called by:
 54559 ;;		Interrupt level 2
 54560 ;; This function uses a non-reentrant model
 54561 ;;
 54562                           
 54563                           	psect	text171
 54564   000288                     __ptext171:
 54565                           	callstack 0
 54566   000288                     _Default_ISR:
 54567                           	callstack 101
 54568   000288  0011               	retfie		f
 54569   00028A                     __end_of_Default_ISR:
 54570                           	callstack 0
 54571                           
 54572 ;; *************** function _TIMER0_ISR *****************
 54573 ;; Defined at:
 54574 ;;		line 86 in file "../src/boards/w65_cmn.c"
 54575 ;; Parameters:    Size  Location     Type
 54576 ;;		None
 54577 ;; Auto vars:     Size  Location     Type
 54578 ;;		None
 54579 ;; Return value:  Size  Location     Type
 54580 ;;                  1    wreg      void 
 54581 ;; Registers used:
 54582 ;;		status,2, status,0
 54583 ;; Tracked objects:
 54584 ;;		On entry : 0/0
 54585 ;;		On exit  : 0/0
 54586 ;;		Unchanged: 0/0
 54587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54592 ;;Total ram usage:        0 bytes
 54593 ;; Hardware stack levels used: 1
 54594 ;; This function calls:
 54595 ;;		Nothing
 54596 ;; This function is called by:
 54597 ;;		Interrupt level 2
 54598 ;; This function uses a non-reentrant model
 54599 ;;
 54600                           
 54601                           	psect	text172
 54602   000278                     __ptext172:
 54603                           	callstack 0
 54604   000278                     _TIMER0_ISR:
 54605                           	callstack 101
 54606   000278                     
 54607                           ;../src/boards/w65_cmn.c: 94:  irq_flg++;
 54608   000278  0107               	movlb	7	; () banked
 54609   00027A  2BCB               	incf	_irq_flg& (0+255),f,b
 54610   00027C                     
 54611                           ; BSR set to: 7
 54612                           ;../src/boards/w65_cmn.c: 96:  TMR0IF =0;
 54613   00027C  9EB1               	bcf	1201,7,c	;volatile
 54614   00027E                     
 54615                           ; BSR set to: 7
 54616   00027E  0011               	retfie		f
 54617   000280                     __end_of_TIMER0_ISR:
 54618                           	callstack 0
 54619                           
 54620 ;; *************** function _URT3Rx_ISR *****************
 54621 ;; Defined at:
 54622 ;;		line 103 in file "../src/boards/w65_cmn.c"
 54623 ;; Parameters:    Size  Location     Type
 54624 ;;		None
 54625 ;; Auto vars:     Size  Location     Type
 54626 ;;  rx_data         1    2[COMRAM] unsigned char 
 54627 ;; Return value:  Size  Location     Type
 54628 ;;                  1    wreg      void 
 54629 ;; Registers used:
 54630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54631 ;; Tracked objects:
 54632 ;;		On entry : 0/0
 54633 ;;		On exit  : 0/0
 54634 ;;		Unchanged: 0/0
 54635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 54636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 54640 ;;Total ram usage:        3 bytes
 54641 ;; Hardware stack levels used: 1
 54642 ;; This function calls:
 54643 ;;		Nothing
 54644 ;; This function is called by:
 54645 ;;		Interrupt level 2
 54646 ;; This function uses a non-reentrant model
 54647 ;;
 54648                           
 54649                           	psect	text173
 54650   01F4D8                     __ptext173:
 54651                           	callstack 0
 54652   01F4D8                     _URT3Rx_ISR:
 54653                           	callstack 101
 54654   01F4D8                     
 54655                           ;../src/boards/w65_cmn.c: 105:  unsigned char rx_data;;../src/boards/w65_cmn.c: 107:  rx
      +                          _data = U3RXB;
 54656   01F4D8  C2C7 F503          	movff	711,URT3Rx_ISR@rx_data	;volatile
 54657   01F4DC                     
 54658                           ;../src/boards/w65_cmn.c: 109:  if ( rx_data == 0x11 && fh.nmi_sw ) {
 54659   01F4DC  0E11               	movlw	17
 54660   01F4DE  1803               	xorwf	URT3Rx_ISR@rx_data^(0+1280),w,c
 54661   01F4E0  A4D8               	btfss	status,2,c
 54662   01F4E2  EF75  F0FA         	goto	i2u2360_41
 54663   01F4E6  EF77  F0FA         	goto	i2u2360_40
 54664   01F4EA                     i2u2360_41:
 54665   01F4EA  EF85  F0FA         	goto	i2l18415
 54666   01F4EE                     i2u2360_40:
 54667   01F4EE  0108               	movlb	8	; () banked
 54668   01F4F0  51C0               	movf	(_fh+30)& (0+255),w,b
 54669   01F4F2  B4D8               	btfsc	status,2,c
 54670   01F4F4  EF7E  F0FA         	goto	i2u2361_41
 54671   01F4F8  EF80  F0FA         	goto	i2u2361_40
 54672   01F4FC                     i2u2361_41:
 54673   01F4FC  EF85  F0FA         	goto	i2l18415
 54674   01F500                     i2u2361_40:
 54675   01F500                     
 54676                           ; BSR set to: 8
 54677                           ;../src/boards/w65_cmn.c: 110:   nmi_sig = 1;
 54678   01F500  0E01               	movlw	1
 54679   01F502  0107               	movlb	7	; () banked
 54680   01F504  6FCD               	movwf	_nmi_sig& (0+255),b
 54681                           
 54682                           ;../src/boards/w65_cmn.c: 111:  }
 54683   01F506  EFA5  F0FA         	goto	i2l305
 54684   01F50A                     i2l18415:
 54685   01F50A  0107               	movlb	7	; () banked
 54686   01F50C  51C2               	movf	(_rx_cnt+1)& (0+255),w,b
 54687   01F50E  E107               	bnz	i2u2362_41
 54688   01F510  0E80               	movlw	128
 54689   01F512  5DC1               	subwf	_rx_cnt& (0+255),w,b
 54690   01F514  B0D8               	btfsc	status,0,c
 54691   01F516  EF8F  F0FA         	goto	i2u2362_41
 54692   01F51A  EF91  F0FA         	goto	i2u2362_40
 54693   01F51E                     i2u2362_41:
 54694   01F51E  EFA5  F0FA         	goto	i2l305
 54695   01F522                     i2u2362_40:
 54696   01F522                     
 54697                           ; BSR set to: 7
 54698                           ;../src/boards/w65_cmn.c: 113:   rx_buf[rx_wp] = rx_data;
 54699   01F522  0E00               	movlw	low _rx_buf
 54700   01F524  25C5               	addwf	_rx_wp& (0+255),w,b
 54701   01F526  6ED9               	movwf	fsr2l,c
 54702   01F528  0E0B               	movlw	high _rx_buf
 54703   01F52A  21C6               	addwfc	(_rx_wp+1)& (0+255),w,b
 54704   01F52C  6EDA               	movwf	fsr2h,c
 54705   01F52E  C503  F4DF         	movff	URT3Rx_ISR@rx_data,indf2
 54706   01F532                     
 54707                           ; BSR set to: 7
 54708                           ;../src/boards/w65_cmn.c: 114:   rx_wp = (rx_wp + 1) & (128 - 1);
 54709   01F532  0E01               	movlw	1
 54710   01F534  25C5               	addwf	_rx_wp& (0+255),w,b
 54711   01F536  6E01               	movwf	??_URT3Rx_ISR^(0+1280),c
 54712   01F538  0E00               	movlw	0
 54713   01F53A  21C6               	addwfc	(_rx_wp+1)& (0+255),w,b
 54714   01F53C  6E02               	movwf	(??_URT3Rx_ISR+1)^(0+1280),c
 54715   01F53E  0E7F               	movlw	127
 54716   01F540  1401               	andwf	??_URT3Rx_ISR^(0+1280),w,c
 54717   01F542  6FC5               	movwf	_rx_wp& (0+255),b
 54718   01F544  6BC6               	clrf	(_rx_wp+1)& (0+255),b
 54719   01F546                     
 54720                           ; BSR set to: 7
 54721                           ;../src/boards/w65_cmn.c: 115:   rx_cnt++;
 54722   01F546  4BC1               	infsnz	_rx_cnt& (0+255),f,b
 54723   01F548  2BC2               	incf	(_rx_cnt+1)& (0+255),f,b
 54724   01F54A                     i2l305:
 54725                           
 54726                           ; BSR set to: 7
 54727   01F54A  0011               	retfie		f
 54728   01F54C                     __end_of_URT3Rx_ISR:
 54729                           	callstack 0
 54730                           
 54731                           ;
 54732                           ; H/W Interrupt Vector Table @ 0x8
 54733                           ;
 54734                           
 54735                           	psect	ivt0x8
 54736   000008                     __pivt0x8:
 54737                           	callstack 0
 54738   000008                     ivt0x8_base:
 54739                           	callstack 0
 54740                           
 54741                           ; Vector 0 : SWINT
 54742   000008  00A2               	dw	_Default_ISR shr (0+2)
 54743                           
 54744                           ; Vector 1 : HLVD
 54745   00000A  00A2               	dw	_Default_ISR shr (0+2)
 54746                           
 54747                           ; Vector 2 : OSF
 54748   00000C  00A2               	dw	_Default_ISR shr (0+2)
 54749                           
 54750                           ; Vector 3 : CSW
 54751   00000E  00A2               	dw	_Default_ISR shr (0+2)
 54752                           
 54753                           ; Vector 4 : Undefined
 54754   000010  0040               	dw	ivt0x8_undefint shr (0+2)
 54755                           
 54756                           ; Vector 5 : CLC1
 54757   000012  00A2               	dw	_Default_ISR shr (0+2)
 54758                           
 54759                           ; Vector 6 : Undefined
 54760   000014  0040               	dw	ivt0x8_undefint shr (0+2)
 54761                           
 54762                           ; Vector 7 : IOC
 54763   000016  00A2               	dw	_Default_ISR shr (0+2)
 54764                           
 54765                           ; Vector 8 : INT0
 54766   000018  00A2               	dw	_Default_ISR shr (0+2)
 54767                           
 54768                           ; Vector 9 : ZCD
 54769   00001A  00A2               	dw	_Default_ISR shr (0+2)
 54770                           
 54771                           ; Vector 10 : AD
 54772   00001C  00A2               	dw	_Default_ISR shr (0+2)
 54773                           
 54774                           ; Vector 11 : ACT
 54775   00001E  00A2               	dw	_Default_ISR shr (0+2)
 54776                           
 54777                           ; Vector 12 : CMP1
 54778   000020  00A2               	dw	_Default_ISR shr (0+2)
 54779                           
 54780                           ; Vector 13 : SMT1
 54781   000022  00A2               	dw	_Default_ISR shr (0+2)
 54782                           
 54783                           ; Vector 14 : SMT1PRA
 54784   000024  00A2               	dw	_Default_ISR shr (0+2)
 54785                           
 54786                           ; Vector 15 : SMT1PRW
 54787   000026  00A2               	dw	_Default_ISR shr (0+2)
 54788                           
 54789                           ; Vector 16 : ADT
 54790   000028  00A2               	dw	_Default_ISR shr (0+2)
 54791                           
 54792                           ; Vector 17 : Undefined
 54793   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
 54794                           
 54795                           ; Vector 18 : Undefined
 54796   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
 54797                           
 54798                           ; Vector 19 : Undefined
 54799   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
 54800                           
 54801                           ; Vector 20 : DMA1SCNT
 54802   000030  00A2               	dw	_Default_ISR shr (0+2)
 54803                           
 54804                           ; Vector 21 : DMA1DCNT
 54805   000032  00A2               	dw	_Default_ISR shr (0+2)
 54806                           
 54807                           ; Vector 22 : DMA1OR
 54808   000034  00A2               	dw	_Default_ISR shr (0+2)
 54809                           
 54810                           ; Vector 23 : DMA1A
 54811   000036  00A2               	dw	_Default_ISR shr (0+2)
 54812                           
 54813                           ; Vector 24 : SPI1RX
 54814   000038  00A2               	dw	_Default_ISR shr (0+2)
 54815                           
 54816                           ; Vector 25 : SPI1TX
 54817   00003A  00A2               	dw	_Default_ISR shr (0+2)
 54818                           
 54819                           ; Vector 26 : SPI1
 54820   00003C  00A2               	dw	_Default_ISR shr (0+2)
 54821                           
 54822                           ; Vector 27 : TMR2
 54823   00003E  00A2               	dw	_Default_ISR shr (0+2)
 54824                           
 54825                           ; Vector 28 : TMR1
 54826   000040  00A2               	dw	_Default_ISR shr (0+2)
 54827                           
 54828                           ; Vector 29 : TMR1G
 54829   000042  00A2               	dw	_Default_ISR shr (0+2)
 54830                           
 54831                           ; Vector 30 : CCP1
 54832   000044  00A2               	dw	_Default_ISR shr (0+2)
 54833                           
 54834                           ; Vector 31 : TMR0
 54835   000046  009E               	dw	_TIMER0_ISR shr (0+2)
 54836                           
 54837                           ; Vector 32 : U1RX
 54838   000048  00A2               	dw	_Default_ISR shr (0+2)
 54839                           
 54840                           ; Vector 33 : U1TX
 54841   00004A  00A2               	dw	_Default_ISR shr (0+2)
 54842                           
 54843                           ; Vector 34 : U1E
 54844   00004C  00A2               	dw	_Default_ISR shr (0+2)
 54845                           
 54846                           ; Vector 35 : U1
 54847   00004E  00A2               	dw	_Default_ISR shr (0+2)
 54848                           
 54849                           ; Vector 36 : Undefined
 54850   000050  0040               	dw	ivt0x8_undefint shr (0+2)
 54851                           
 54852                           ; Vector 37 : Undefined
 54853   000052  0040               	dw	ivt0x8_undefint shr (0+2)
 54854                           
 54855                           ; Vector 38 : PWM1PR
 54856   000054  00A2               	dw	_Default_ISR shr (0+2)
 54857                           
 54858                           ; Vector 39 : PWM1
 54859   000056  00A2               	dw	_Default_ISR shr (0+2)
 54860                           
 54861                           ; Vector 40 : SPI2RX
 54862   000058  00A2               	dw	_Default_ISR shr (0+2)
 54863                           
 54864                           ; Vector 41 : SPI2TX
 54865   00005A  00A2               	dw	_Default_ISR shr (0+2)
 54866                           
 54867                           ; Vector 42 : SPI2
 54868   00005C  00A2               	dw	_Default_ISR shr (0+2)
 54869                           
 54870                           ; Vector 43 : Undefined
 54871   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
 54872                           
 54873                           ; Vector 44 : TMR3
 54874   000060  00A2               	dw	_Default_ISR shr (0+2)
 54875                           
 54876                           ; Vector 45 : TMR3G
 54877   000062  00A2               	dw	_Default_ISR shr (0+2)
 54878                           
 54879                           ; Vector 46 : PWM2PR
 54880   000064  00A2               	dw	_Default_ISR shr (0+2)
 54881                           
 54882                           ; Vector 47 : PWM2
 54883   000066  00A2               	dw	_Default_ISR shr (0+2)
 54884                           
 54885                           ; Vector 48 : INT1
 54886   000068  00A2               	dw	_Default_ISR shr (0+2)
 54887                           
 54888                           ; Vector 49 : CLC2
 54889   00006A  00A2               	dw	_Default_ISR shr (0+2)
 54890                           
 54891                           ; Vector 50 : CWG1
 54892   00006C  00A2               	dw	_Default_ISR shr (0+2)
 54893                           
 54894                           ; Vector 51 : NCO1
 54895   00006E  00A2               	dw	_Default_ISR shr (0+2)
 54896                           
 54897                           ; Vector 52 : DMA2SCNT
 54898   000070  00A2               	dw	_Default_ISR shr (0+2)
 54899                           
 54900                           ; Vector 53 : DMA2DCNT
 54901   000072  00A2               	dw	_Default_ISR shr (0+2)
 54902                           
 54903                           ; Vector 54 : DMA2OR
 54904   000074  00A2               	dw	_Default_ISR shr (0+2)
 54905                           
 54906                           ; Vector 55 : DMA2A
 54907   000076  00A2               	dw	_Default_ISR shr (0+2)
 54908                           
 54909                           ; Vector 56 : I2C1RX
 54910   000078  00A2               	dw	_Default_ISR shr (0+2)
 54911                           
 54912                           ; Vector 57 : I2C1TX
 54913   00007A  00A2               	dw	_Default_ISR shr (0+2)
 54914                           
 54915                           ; Vector 58 : I2C1
 54916   00007C  00A2               	dw	_Default_ISR shr (0+2)
 54917                           
 54918                           ; Vector 59 : I2C1E
 54919   00007E  00A2               	dw	_Default_ISR shr (0+2)
 54920                           
 54921                           ; Vector 60 : Undefined
 54922   000080  0040               	dw	ivt0x8_undefint shr (0+2)
 54923                           
 54924                           ; Vector 61 : CLC3
 54925   000082  00A2               	dw	_Default_ISR shr (0+2)
 54926                           
 54927                           ; Vector 62 : PWM3PR
 54928   000084  00A2               	dw	_Default_ISR shr (0+2)
 54929                           
 54930                           ; Vector 63 : PWM3
 54931   000086  00A2               	dw	_Default_ISR shr (0+2)
 54932                           
 54933                           ; Vector 64 : U2RX
 54934   000088  00A2               	dw	_Default_ISR shr (0+2)
 54935                           
 54936                           ; Vector 65 : U2TX
 54937   00008A  00A2               	dw	_Default_ISR shr (0+2)
 54938                           
 54939                           ; Vector 66 : U2E
 54940   00008C  00A2               	dw	_Default_ISR shr (0+2)
 54941                           
 54942                           ; Vector 67 : U2
 54943   00008E  00A2               	dw	_Default_ISR shr (0+2)
 54944                           
 54945                           ; Vector 68 : TMR5
 54946   000090  00A2               	dw	_Default_ISR shr (0+2)
 54947                           
 54948                           ; Vector 69 : TMR5G
 54949   000092  00A2               	dw	_Default_ISR shr (0+2)
 54950                           
 54951                           ; Vector 70 : CCP2
 54952   000094  00A2               	dw	_Default_ISR shr (0+2)
 54953                           
 54954                           ; Vector 71 : SCAN
 54955   000096  00A2               	dw	_Default_ISR shr (0+2)
 54956                           
 54957                           ; Vector 72 : U3RX
 54958   000098  7D36               	dw	_URT3Rx_ISR shr (0+2)
 54959                           
 54960                           ; Vector 73 : U3TX
 54961   00009A  00A2               	dw	_Default_ISR shr (0+2)
 54962                           
 54963                           ; Vector 74 : U3E
 54964   00009C  00A2               	dw	_Default_ISR shr (0+2)
 54965                           
 54966                           ; Vector 75 : U3
 54967   00009E  00A2               	dw	_Default_ISR shr (0+2)
 54968                           
 54969                           ; Vector 76 : Undefined
 54970   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
 54971                           
 54972                           ; Vector 77 : CLC4
 54973   0000A2  00A2               	dw	_Default_ISR shr (0+2)
 54974                           
 54975                           ; Vector 78 : Undefined
 54976   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
 54977                           
 54978                           ; Vector 79 : Undefined
 54979   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
 54980                           
 54981                           ; Vector 80 : INT2
 54982   0000A8  00A2               	dw	_Default_ISR shr (0+2)
 54983                           
 54984                           ; Vector 81 : CLC5
 54985   0000AA  00A2               	dw	_Default_ISR shr (0+2)
 54986                           
 54987                           ; Vector 82 : CWG2
 54988   0000AC  00A2               	dw	_Default_ISR shr (0+2)
 54989                           
 54990                           ; Vector 83 : NCO2
 54991   0000AE  00A2               	dw	_Default_ISR shr (0+2)
 54992                           
 54993                           ; Vector 84 : DMA3SCNT
 54994   0000B0  00A2               	dw	_Default_ISR shr (0+2)
 54995                           
 54996                           ; Vector 85 : DMA3DCNT
 54997   0000B2  00A2               	dw	_Default_ISR shr (0+2)
 54998                           
 54999                           ; Vector 86 : DMA3OR
 55000   0000B4  00A2               	dw	_Default_ISR shr (0+2)
 55001                           
 55002                           ; Vector 87 : DMA3A
 55003   0000B6  00A2               	dw	_Default_ISR shr (0+2)
 55004                           
 55005                           ; Vector 88 : CCP3
 55006   0000B8  00A2               	dw	_Default_ISR shr (0+2)
 55007                           
 55008                           ; Vector 89 : CLC6
 55009   0000BA  00A2               	dw	_Default_ISR shr (0+2)
 55010                           
 55011                           ; Vector 90 : CWG3
 55012   0000BC  00A2               	dw	_Default_ISR shr (0+2)
 55013                           
 55014                           ; Vector 91 : TMR4
 55015   0000BE  00A2               	dw	_Default_ISR shr (0+2)
 55016                           
 55017                           ; Vector 92 : DMA4SCNT
 55018   0000C0  00A2               	dw	_Default_ISR shr (0+2)
 55019                           
 55020                           ; Vector 93 : DMA4DCNT
 55021   0000C2  00A2               	dw	_Default_ISR shr (0+2)
 55022                           
 55023                           ; Vector 94 : DMA4OR
 55024   0000C4  00A2               	dw	_Default_ISR shr (0+2)
 55025                           
 55026                           ; Vector 95 : DMA4A
 55027   0000C6  00A2               	dw	_Default_ISR shr (0+2)
 55028                           
 55029                           ; Vector 96 : U4RX
 55030   0000C8  00A2               	dw	_Default_ISR shr (0+2)
 55031                           
 55032                           ; Vector 97 : U4TX
 55033   0000CA  00A2               	dw	_Default_ISR shr (0+2)
 55034                           
 55035                           ; Vector 98 : U4E
 55036   0000CC  00A2               	dw	_Default_ISR shr (0+2)
 55037                           
 55038                           ; Vector 99 : U4
 55039   0000CE  00A2               	dw	_Default_ISR shr (0+2)
 55040                           
 55041                           ; Vector 100 : DMA5SCNT
 55042   0000D0  00A2               	dw	_Default_ISR shr (0+2)
 55043                           
 55044                           ; Vector 101 : DMA5DCNT
 55045   0000D2  00A2               	dw	_Default_ISR shr (0+2)
 55046                           
 55047                           ; Vector 102 : DMA5OR
 55048   0000D4  00A2               	dw	_Default_ISR shr (0+2)
 55049                           
 55050                           ; Vector 103 : DMA5A
 55051   0000D6  00A2               	dw	_Default_ISR shr (0+2)
 55052                           
 55053                           ; Vector 104 : U5RX
 55054   0000D8  00A2               	dw	_Default_ISR shr (0+2)
 55055                           
 55056                           ; Vector 105 : U5TX
 55057   0000DA  00A2               	dw	_Default_ISR shr (0+2)
 55058                           
 55059                           ; Vector 106 : U5E
 55060   0000DC  00A2               	dw	_Default_ISR shr (0+2)
 55061                           
 55062                           ; Vector 107 : U5
 55063   0000DE  00A2               	dw	_Default_ISR shr (0+2)
 55064                           
 55065                           ; Vector 108 : DMA6SCNT
 55066   0000E0  00A2               	dw	_Default_ISR shr (0+2)
 55067                           
 55068                           ; Vector 109 : DMA6DCNT
 55069   0000E2  00A2               	dw	_Default_ISR shr (0+2)
 55070                           
 55071                           ; Vector 110 : DMA6OR
 55072   0000E4  00A2               	dw	_Default_ISR shr (0+2)
 55073                           
 55074                           ; Vector 111 : DMA6A
 55075   0000E6  00A2               	dw	_Default_ISR shr (0+2)
 55076                           
 55077                           ; Vector 112 : Undefined
 55078   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
 55079                           
 55080                           ; Vector 113 : CLC7
 55081   0000EA  00A2               	dw	_Default_ISR shr (0+2)
 55082                           
 55083                           ; Vector 114 : CMP2
 55084   0000EC  00A2               	dw	_Default_ISR shr (0+2)
 55085                           
 55086                           ; Vector 115 : NCO3
 55087   0000EE  00A2               	dw	_Default_ISR shr (0+2)
 55088                           
 55089                           ; Vector 116 : Undefined
 55090   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
 55091                           
 55092                           ; Vector 117 : Undefined
 55093   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
 55094                           
 55095                           ; Vector 118 : Undefined
 55096   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
 55097                           
 55098                           ; Vector 119 : Undefined
 55099   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
 55100                           
 55101                           ; Vector 120 : NVM
 55102   0000F8  00A2               	dw	_Default_ISR shr (0+2)
 55103                           
 55104                           ; Vector 121 : CLC8
 55105   0000FA  00A2               	dw	_Default_ISR shr (0+2)
 55106                           
 55107                           ; Vector 122 : CRC
 55108   0000FC  00A2               	dw	_Default_ISR shr (0+2)
 55109                           
 55110                           ; Vector 123 : TMR6
 55111   0000FE  00A2               	dw	_Default_ISR shr (0+2)
 55112   000100                     ivt0x8_undefint:
 55113                           	callstack 0
 55114   000100  00FF               	reset	
 55115                           
 55116                           	psect	rparam
 55117   000001                     ___rparam_used  equ	1
 55118   000000                     ___param_bank   equ	0
 55119   000000                     __Lparam        equ	__Lrparam
 55120   000000                     __Hparam        equ	__Hrparam
 55121                           
 55122                           	psect	config
 55123                           
 55124                           ;Config register CONFIG1 @ 0x300000
 55125                           ;	External Oscillator Selection
 55126                           ;	FEXTOSC = OFF, Oscillator not enabled
 55127                           ;	Reset Oscillator Selection
 55128                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 55129   300000                     	org	3145728
 55130   300000  8C                 	db	140
 55131                           
 55132                           ;Config register CONFIG2 @ 0x300001
 55133                           ;	Clock out Enable bit
 55134                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 55135                           ;	PRLOCKED One-Way Set Enable bit
 55136                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 55137                           ;	Clock Switch Enable bit
 55138                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 55139                           ;	Fail-Safe Clock Monitor Enable bit
 55140                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 55141   300001                     	org	3145729
 55142   300001  FF                 	db	255
 55143                           
 55144                           ;Config register CONFIG3 @ 0x300002
 55145                           ;	MCLR Enable bit
 55146                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 55147                           ;	Power-up timer selection bits
 55148                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 55149                           ;	Multi-vector enable bit
 55150                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 55151                           ;	IVTLOCK bit One-way set enable bit
 55152                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 55153                           ;	Low Power BOR Enable bit
 55154                           ;	LPBOREN = OFF, Low-Power BOR disabled
 55155                           ;	Brown-out Reset Enable bits
 55156                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 55157   300002                     	org	3145730
 55158   300002  FF                 	db	255
 55159                           
 55160                           ;Config register CONFIG4 @ 0x300003
 55161                           ;	Brown-out Reset Voltage Selection bits
 55162                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 55163                           ;	ZCD Disable bit
 55164                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 55165                           ;	PPSLOCK bit One-Way Set Enable bit
 55166                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
 55167                           ;	Stack Full/Underflow Reset Enable bit
 55168                           ;	STVREN = ON, Stack full/underflow will cause Reset
 55169                           ;	Low Voltage Programming Enable bit
 55170                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 55171                           ;	Extended Instruction Set Enable bit
 55172                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 55173   300003                     	org	3145731
 55174   300003  F7                 	db	247
 55175                           
 55176                           ;Config register CONFIG5 @ 0x300004
 55177                           ;	WDT Period selection bits
 55178                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 55179                           ;	WDT operating mode
 55180                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 55181   300004                     	org	3145732
 55182   300004  9F                 	db	159
 55183                           
 55184                           ;Config register CONFIG6 @ 0x300005
 55185                           ;	WDT Window Select bits
 55186                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 55187                           ;	WDT input clock selector
 55188                           ;	WDTCCS = SC, Software Control
 55189   300005                     	org	3145733
 55190   300005  FF                 	db	255
 55191                           
 55192                           ;Config register CONFIG7 @ 0x300006
 55193                           ;	Boot Block Size selection bits
 55194                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 55195                           ;	Boot Block enable bit
 55196                           ;	BBEN = OFF, Boot block disabled
 55197                           ;	Storage Area Flash enable bit
 55198                           ;	SAFEN = OFF, SAF disabled
 55199                           ;	Background Debugger
 55200                           ;	DEBUG = OFF, Background Debugger disabled
 55201   300006                     	org	3145734
 55202   300006  FF                 	db	255
 55203                           
 55204                           ;Config register CONFIG8 @ 0x300007
 55205                           ;	Boot Block Write Protection bit
 55206                           ;	WRTB = OFF, Boot Block not Write protected
 55207                           ;	Configuration Register Write Protection bit
 55208                           ;	WRTC = OFF, Configuration registers not Write protected
 55209                           ;	Data EEPROM Write Protection bit
 55210                           ;	WRTD = OFF, Data EEPROM not Write protected
 55211                           ;	SAF Write protection bit
 55212                           ;	WRTSAF = OFF, SAF not Write Protected
 55213                           ;	Application Block write protection bit
 55214                           ;	WRTAPP = OFF, Application Block not write protected
 55215   300007                     	org	3145735
 55216   300007  FF                 	db	255
 55217                           
 55218                           ;Config register CONFIG10 @ 0x300009
 55219                           ;	PFM and Data EEPROM Code Protection bit
 55220                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 55221   300009                     	org	3145737
 55222   300009  FF                 	db	255
 55223                           tosu	equ	0x4FF
 55224                           tosh	equ	0x4FE
 55225                           tosl	equ	0x4FD
 55226                           stkptr	equ	0x4FC
 55227                           pclatu	equ	0x4FB
 55228                           pclath	equ	0x4FA
 55229                           pcl	equ	0x4F9
 55230                           tblptru	equ	0x4F8
 55231                           tblptrh	equ	0x4F7
 55232                           tblptrl	equ	0x4F6
 55233                           tablat	equ	0x4F5
 55234                           prodh	equ	0x4F4
 55235                           prodl	equ	0x4F3
 55236                           indf0	equ	0x4EF
 55237                           postinc0	equ	0x4EE
 55238                           postdec0	equ	0x4ED
 55239                           preinc0	equ	0x4EC
 55240                           plusw0	equ	0x4EB
 55241                           fsr0h	equ	0x4EA
 55242                           fsr0l	equ	0x4E9
 55243                           wreg	equ	0x4E8
 55244                           indf1	equ	0x4E7
 55245                           postinc1	equ	0x4E6
 55246                           postdec1	equ	0x4E5
 55247                           preinc1	equ	0x4E4
 55248                           plusw1	equ	0x4E3
 55249                           fsr1h	equ	0x4E2
 55250                           fsr1l	equ	0x4E1
 55251                           bsr	equ	0x4E0
 55252                           indf2	equ	0x4DF
 55253                           postinc2	equ	0x4DE
 55254                           postdec2	equ	0x4DD
 55255                           preinc2	equ	0x4DC
 55256                           plusw2	equ	0x4DB
 55257                           fsr2h	equ	0x4DA
 55258                           fsr2l	equ	0x4D9
 55259                           status	equ	0x4D8

Data Sizes:
    Strings     3551
    Constant    54
    Data        177
    BSS         3343
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160    160     160
    BANK6           256    256     256
    BANK7           256    158     256
    BANK8           256      0     223
    BANK9           256      0     179
    BANK10          256      0     209
    BANK11          256      0     128
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    acquire_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    acquire_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    arg	PTR unsigned char [5] size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    board_name	PTR unsigned char  size(2) Largest target is 43
		 -> STR_47(CODE[43]), 

    bus_master_operation@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    check_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    cmd$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    cmd$func	PTR FTN()enum E17409 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    conf02	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_48(CODE[11]), 

    conf16	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_49(CODE[11]), 

    cpm_drives$filep	PTR struct . size(2) Largest target is 0

    create_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), pb$fp(COMRAM[2]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK6[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    ctx_$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    del_space@bytes	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    dir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_read@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), fs(BIGRAM[564]), 
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_closedir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@buff	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_getcwd@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@tp	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_gets@buff	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_gets@fp	PTR struct . size(2) Largest target is 548
		 -> rom_fl(BIGRAM[546]), 

    f_gets@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 0

    f_lseek@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mkdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_opendir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_opendir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> f_gets@rc(BANK6[2]), fin_cnt(BANK7[2]), load_program@br(BANK7[2]), read_sector@n(BANK6[2]), 
		 -> see_file@br(BANK7[2]), 

    f_read@buff	PTR void  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_read@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_readdir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_readdir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    f_readdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djn$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djo$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_stat@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@sdj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), write_sector@n(BANK6[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 2
		 -> pb$fp(COMRAM[2]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    FatFs	PTR struct .[1] size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    fsdir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    fsdir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_char	PTR FTN()int [2] size(3) Largest target is 2
		 -> in_file(), u_getch(), 

    get_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_getfree@obj(COMRAM[14]), f_mkdir@dj(COMRAM[40]), 
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), in_fl(BIGRAM[546]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_stat@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fileinfo@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> f_getcwd@fno(BANK7[22]), scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    get_hex@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_chdrive@path(COMRAM[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), 
		 -> f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_mount@rp(BANK6[2]), f_open@path(BANK6[2]), 
		 -> f_opendir@path(BANK6[2]), f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), f_stat@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_167(CODE[15]), STR_48(CODE[11]), 
		 -> STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), STR_84(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_line@s	PTR unsigned char  size(2) Largest target is 81
		 -> line_buf(BANK10[81]), 

    get_str@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    in_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    load_config@a	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@conf	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_48(CODE[11]), STR_49(CODE[11]), 

    load_config@str	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_file@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@fname	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_program@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    main@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    main@res	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mem_dump@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_169(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcmp@vl	PTR const void  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_169(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    mezID	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_46(CODE[8]), 

    mon02	PTR unsigned char  size(2) Largest target is 11
		 -> STR_50(CODE[11]), 

    mon16	PTR unsigned char  size(2) Largest target is 11
		 -> STR_51(CODE[11]), 

    mon_prog@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mount_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    mount_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_mount@path(BANK6[2]), f_open@path(BANK6[2]), f_opendir@path(BANK6[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    mount_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> dj$obj(COMRAM[15]), dj$obj$fs(COMRAM[2]), f_chdir@fs(BANK6[2]), f_getcwd@fs(BANK7[2]), 
		 -> f_getfree@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_mount@fs(BANK6[2]), f_open@dj(BANK6[40]), 
		 -> f_open@fs(BANK6[2]), f_opendir@fs(BANK6[2]), f_rename@fs(COMRAM[2]), f_unlink@fs(COMRAM[2]), 

    move_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    print_reg@reg_02	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    print_reg@reg_816	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_108(CODE[22]), STR_109(CODE[34]), STR_11(CODE[25]), 
		 -> STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), STR_113(CODE[56]), 
		 -> STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), STR_117(CODE[41]), 
		 -> STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), STR_120(CODE[11]), 
		 -> STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), STR_124(CODE[19]), 
		 -> STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), STR_131(CODE[3]), 
		 -> STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), STR_136(CODE[29]), 
		 -> STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), STR_14(CODE[25]), 
		 -> STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), STR_143(CODE[17]), 
		 -> STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), STR_147(CODE[16]), 
		 -> STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), STR_150(CODE[19]), 
		 -> STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), STR_154(CODE[22]), 
		 -> STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), STR_158(CODE[38]), 
		 -> STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), STR_161(CODE[27]), 
		 -> STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), STR_165(CODE[19]), 
		 -> STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), STR_176(CODE[39]), 
		 -> STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), STR_180(CODE[21]), 
		 -> STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), STR_184(CODE[44]), 
		 -> STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), STR_19(CODE[43]), 
		 -> STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), STR_193(CODE[6]), 
		 -> STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), STR_197(CODE[6]), 
		 -> STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), STR_21(CODE[41]), 
		 -> STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), STR_25(CODE[50]), 
		 -> STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), STR_30(CODE[50]), 
		 -> STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), STR_34(CODE[22]), 
		 -> STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), STR_4(CODE[21]), 
		 -> STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), STR_45(CODE[35]), 
		 -> STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), STR_70(CODE[23]), 
		 -> STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), STR_74(CODE[5]), 
		 -> STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), STR_78(CODE[19]), 
		 -> STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), STR_82(CODE[39]), 
		 -> STR_83(CODE[19]), STR_85(CODE[27]), STR_86(CODE[12]), STR_87(CODE[25]), 
		 -> STR_88(CODE[23]), STR_89(CODE[14]), STR_90(CODE[19]), STR_91(CODE[3]), 
		 -> STR_92(CODE[9]), STR_93(CODE[10]), STR_94(CODE[12]), STR_95(CODE[15]), 
		 -> STR_96(CODE[20]), STR_97(CODE[20]), STR_98(CODE[9]), STR_99(CODE[10]), 

    put_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    read_sector@filep	PTR struct . size(2) Largest target is 0

    read_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> disk_buf(BANK10[128]), req_tbl(BANK7[13]), tmp_buf(BIGRAM[512]), 

    release_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    release_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_unlink@dj(COMRAM[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S1127$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S1150$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_52(CODE[8]), STR_53(CODE[8]), 

    S1150$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    S1175$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    S1175$func	PTR FTN()enum E17409 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    S2000$fp	PTR struct . size(2) Largest target is 0

    S375SDCard$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    S4703$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    S4703$source	PTR const unsigned char  size(2) Largest target is 0

    S755$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S762$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S772$filep	PTR struct . size(2) Largest target is 0

    scan_files1@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files1@fn	PTR unsigned char  size(2) Largest target is 22
		 -> fno$fname(COMRAM[13]), scan_files@fno(BANK7[22]), 

    scan_files1@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files1@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    scan_files@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files@fn	PTR unsigned char  size(2) Largest target is 22
		 -> fno$fname(COMRAM[13]), scan_files@fno(BANK7[22]), 

    scan_files@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SDCard_command@response_buffer	PTR void  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@responsep	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_command_r1@r1	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 

    __SDCard_command_r1@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_crc16@buf	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@endp	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_crc@buf	PTR const void  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@endp	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@p	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_end_transaction@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_init@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_read512@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_read512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_wait_response@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_write512@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_write512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    sdj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    see_file@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    see_file@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    seek_disk@filep	PTR struct . size(2) Largest target is 0

    seek_disk@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    set_arg@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sobj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sp__f_gets	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SPI_SD_begin@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_ctx	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), 

    SPI_SD_dummy_clocks@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_end_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive_byte@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_select@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_send@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@p	PTR unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_107(CODE[3]), STR_81(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), fno$fname(COMRAM[13]), 
		 -> fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), 
		 -> fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), line_buf(BANK10[81]), 
		 -> pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), rom_fl(BIGRAM[546]), 
		 -> rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), rom_fl$sect(BIGRAM[4]), 
		 -> scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), STR_132(CODE[5]), 
		 -> STR_167(CODE[15]), STR_178(CODE[1]), STR_186(CODE[6]), STR_189(CODE[6]), 
		 -> STR_199(CODE[1]), STR_206(CODE[7]), STR_26(CODE[5]), STR_29(CODE[5]), 
		 -> STR_35(CODE[6]), STR_39(CODE[6]), STR_42(CODE[5]), STR_43(CODE[5]), 
		 -> STR_47(CODE[43]), STR_48(CODE[11]), STR_49(CODE[11]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_7(CODE[17]), 
		 -> STR_9(CODE[17]), tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), tmp_buf$direct_page(UNKNOWN), 
		 -> tmp_buf$load_p(UNKNOWN), tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), tmp_buf$op2(UNKNOWN), 
		 -> tmp_buf$picif_p(UNKNOWN), tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), tmp_buf$REGDP(UNKNOWN), 
		 -> tmp_buf$REGPB(UNKNOWN), tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), tmp_buf$REGSP(UNKNOWN), 
		 -> tmp_buf$REGX(UNKNOWN), tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), util_addrdump@chars(BANK5[17]), 
		 -> util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), fno$fname(COMRAM[13]), 
		 -> fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), fs$volbase(BIGRAM[4]), 
		 -> fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), line_buf(BANK10[81]), 
		 -> pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), rom_fl(BIGRAM[546]), 
		 -> rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), rom_fl$sect(BIGRAM[4]), 
		 -> scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), STR_132(CODE[5]), 
		 -> STR_167(CODE[15]), STR_178(CODE[1]), STR_186(CODE[6]), STR_189(CODE[6]), 
		 -> STR_199(CODE[1]), STR_26(CODE[5]), STR_29(CODE[5]), STR_35(CODE[6]), 
		 -> STR_39(CODE[6]), STR_42(CODE[5]), STR_43(CODE[5]), STR_47(CODE[43]), 
		 -> STR_48(CODE[11]), STR_49(CODE[11]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> STR_52(CODE[8]), STR_53(CODE[8]), STR_7(CODE[17]), STR_9(CODE[17]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), tmp_buf$direct_page(UNKNOWN), tmp_buf$load_p(UNKNOWN), 
		 -> tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), tmp_buf$op2(UNKNOWN), tmp_buf$picif_p(UNKNOWN), 
		 -> tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), tmp_buf$REGDP(UNKNOWN), tmp_buf$REGPB(UNKNOWN), 
		 -> tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), tmp_buf$REGSP(UNKNOWN), tmp_buf$REGX(UNKNOWN), 
		 -> tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), 
		 -> NULL(NULL[0]), 

    str_inf@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_200(CODE[4]), STR_203(CODE[4]), 

    strin_func	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned int [2] size(3) Largest target is 2
		 -> get_str(), str_inf(), 

    strin_func$0	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), 
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), 
		 -> STR_54(CODE[3]), STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), 
		 -> STR_58(CODE[7]), STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), 
		 -> STR_62(CODE[8]), STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), 
		 -> STR_66(CODE[5]), STR_67(CODE[2]), STR_68(CODE[1]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_54(CODE[3]), 
		 -> STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), STR_58(CODE[7]), 
		 -> STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), STR_62(CODE[8]), 
		 -> STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), STR_66(CODE[5]), 
		 -> STR_67(CODE[2]), STR_68(CODE[1]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_167(CODE[15]), STR_50(CODE[11]), STR_51(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_128(CODE[3]), STR_130(CODE[2]), STR_46(CODE[8]), STR_50(CODE[11]), 
		 -> STR_51(CODE[11]), STR_52(CODE[8]), STR_53(CODE[8]), STR_54(CODE[3]), 
		 -> STR_55(CODE[4]), STR_56(CODE[3]), STR_57(CODE[5]), STR_58(CODE[7]), 
		 -> STR_59(CODE[7]), STR_60(CODE[5]), STR_61(CODE[4]), STR_62(CODE[8]), 
		 -> STR_63(CODE[6]), STR_64(CODE[5]), STR_65(CODE[6]), STR_66(CODE[5]), 
		 -> STR_67(CODE[2]), STR_68(CODE[1]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> load_config@a(BANK7[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    t_conf$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_52(CODE[8]), STR_53(CODE[8]), 

    t_conf$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    unimon_console@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    util_addrdump@addr	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@buf	PTR const unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_132(CODE[5]), STR_186(CODE[6]), STR_189(CODE[6]), STR_26(CODE[5]), 
		 -> STR_29(CODE[5]), STR_42(CODE[5]), STR_43(CODE[5]), 

    util_hexdump@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@buf	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_178(CODE[1]), STR_35(CODE[6]), STR_39(CODE[6]), 

    util_hexdump_sum@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    util_hexdump_sum@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_35(CODE[6]), STR_39(CODE[6]), 

    util_hexdump_sum@p	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    validate$2906	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK6[2]), f_closedir@fs(BANK5[2]), f_lseek@fs(BANK6[2]), f_read@fs(BANK6[2]), 
		 -> f_readdir@fs(BANK6[2]), f_sync@fs(BANK6[2]), f_truncate@fs(COMRAM[2]), f_write@fs(BANK6[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[3]), STR_10(CODE[28]), STR_100(CODE[12]), STR_101(CODE[3]), 
		 -> STR_102(CODE[8]), STR_103(CODE[8]), STR_104(CODE[3]), STR_105(CODE[20]), 
		 -> STR_106(CODE[20]), STR_107(CODE[3]), STR_108(CODE[22]), STR_109(CODE[34]), 
		 -> STR_11(CODE[25]), STR_110(CODE[31]), STR_111(CODE[54]), STR_112(CODE[32]), 
		 -> STR_113(CODE[56]), STR_114(CODE[48]), STR_115(CODE[41]), STR_116(CODE[24]), 
		 -> STR_117(CODE[41]), STR_118(CODE[23]), STR_119(CODE[16]), STR_12(CODE[19]), 
		 -> STR_120(CODE[11]), STR_121(CODE[11]), STR_122(CODE[9]), STR_123(CODE[8]), 
		 -> STR_124(CODE[19]), STR_125(CODE[10]), STR_126(CODE[13]), STR_13(CODE[45]), 
		 -> STR_131(CODE[3]), STR_133(CODE[21]), STR_134(CODE[29]), STR_135(CODE[31]), 
		 -> STR_136(CODE[29]), STR_137(CODE[13]), STR_138(CODE[14]), STR_139(CODE[10]), 
		 -> STR_14(CODE[25]), STR_140(CODE[20]), STR_141(CODE[26]), STR_142(CODE[22]), 
		 -> STR_143(CODE[17]), STR_144(CODE[17]), STR_145(CODE[34]), STR_146(CODE[33]), 
		 -> STR_147(CODE[16]), STR_148(CODE[19]), STR_149(CODE[16]), STR_15(CODE[27]), 
		 -> STR_150(CODE[19]), STR_151(CODE[18]), STR_152(CODE[20]), STR_153(CODE[26]), 
		 -> STR_154(CODE[22]), STR_155(CODE[26]), STR_156(CODE[17]), STR_157(CODE[17]), 
		 -> STR_158(CODE[38]), STR_159(CODE[3]), STR_16(CODE[35]), STR_160(CODE[15]), 
		 -> STR_161(CODE[27]), STR_162(CODE[22]), STR_163(CODE[19]), STR_164(CODE[22]), 
		 -> STR_165(CODE[19]), STR_17(CODE[46]), STR_174(CODE[25]), STR_175(CODE[23]), 
		 -> STR_176(CODE[39]), STR_177(CODE[26]), STR_179(CODE[19]), STR_18(CODE[36]), 
		 -> STR_180(CODE[21]), STR_181(CODE[33]), STR_182(CODE[23]), STR_183(CODE[18]), 
		 -> STR_184(CODE[44]), STR_185(CODE[28]), STR_187(CODE[44]), STR_188(CODE[29]), 
		 -> STR_19(CODE[43]), STR_190(CODE[44]), STR_191(CODE[50]), STR_192(CODE[8]), 
		 -> STR_193(CODE[6]), STR_194(CODE[6]), STR_195(CODE[9]), STR_196(CODE[6]), 
		 -> STR_197(CODE[6]), STR_198(CODE[24]), STR_2(CODE[26]), STR_20(CODE[38]), 
		 -> STR_21(CODE[41]), STR_22(CODE[18]), STR_23(CODE[34]), STR_24(CODE[36]), 
		 -> STR_25(CODE[50]), STR_27(CODE[55]), STR_28(CODE[50]), STR_3(CODE[3]), 
		 -> STR_30(CODE[50]), STR_31(CODE[35]), STR_32(CODE[42]), STR_33(CODE[47]), 
		 -> STR_34(CODE[22]), STR_36(CODE[32]), STR_37(CODE[21]), STR_38(CODE[31]), 
		 -> STR_4(CODE[21]), STR_40(CODE[25]), STR_41(CODE[26]), STR_44(CODE[23]), 
		 -> STR_45(CODE[35]), STR_5(CODE[14]), STR_6(CODE[38]), STR_69(CODE[22]), 
		 -> STR_70(CODE[23]), STR_71(CODE[23]), STR_72(CODE[14]), STR_73(CODE[14]), 
		 -> STR_74(CODE[5]), STR_75(CODE[26]), STR_76(CODE[40]), STR_77(CODE[36]), 
		 -> STR_78(CODE[19]), STR_79(CODE[24]), STR_8(CODE[45]), STR_80(CODE[25]), 
		 -> STR_81(CODE[3]), STR_82(CODE[39]), STR_83(CODE[19]), STR_85(CODE[27]), 
		 -> STR_86(CODE[12]), STR_87(CODE[25]), STR_88(CODE[23]), STR_89(CODE[14]), 
		 -> STR_90(CODE[19]), STR_91(CODE[3]), STR_92(CODE[9]), STR_93(CODE[10]), 
		 -> STR_94(CODE[12]), STR_95(CODE[15]), STR_96(CODE[20]), STR_97(CODE[20]), 
		 -> STR_98(CODE[9]), STR_99(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    write_sector@filep	PTR struct . size(2) Largest target is 0

    write_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> binv(BANK8[42]), cpu_flg(BANK7[1]), disk_buf(BANK10[128]), fh(BANK8[32]), 
		 -> mon_prog@sw(BANK7[1]), req_tbl(BANK7[13]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _SDCard_command->___SDCard_command_r1
    _get_fileinfo->_ld_dword
    ___strtoxl->___lmul
    _strstr->_strncmp
    _ld_clust->_ld_word
    _create_name->_memset
    _st_clust->_st_word
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___almod
    ___SDCard_command_r1->___SDCard_wait_response
    ___SDCard_wait_response->_SPI_SD_receive_byte
    _SPI_SD_receive_byte->_SPI_SD_receive
    _SPI_SD_begin_transaction->_SPI_SD_select
    _SPI_SD_begin_transaction->_acquire_bus
    _SDCard_end_transaction->_SPI_SD_dummy_clocks
    _SPI_SD_end_transaction->_SPI_SD_select
    _SPI_SD_end_transaction->_release_bus
    _SPI_SD_dummy_clocks->_SPI_SD_send
    _clst2sect->___lmul

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    None.

Critical Paths under _URT3Rx_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _wait_for_programmer->_printf
    _setup_sd->_SDCard_init
    _SDCard_init->_SPI_SD_configure
    _SPI_SD_configure->_printf
    _setup_monitor->_load_program
    _f_getcwd->_move_window
    _dir_read->_move_window
    _f_closedir->_validate
    _reset_cpu->_printf
    _print_reg->_printf
    _print_com->_printf
    _mem_init->_util_addrdump
    _mem_dump->_util_addrdump
    _load_file->_load_program
    _load_config->_f_gets
    _get_line->_printf
    _flash_apl->_printf
    _boot_file->_load_program
    _prt_reload->_printf
    _sprintf->_vfprintf
    _bus_master_operation->_in_file
    _bus_master_operation->_u_getch
    _unimon_console->_in_file
    _unimon_console->_u_getch
    _f_open->_move_window
    _mount_volume->_disk_initialize
    _mount_volume->_move_window
    _check_fs->_move_window
    _disk_initialize->_SDCard_read512
    _dir_find->_move_window
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_next->_dir_clear
    _dir_clear->_sync_window
    _f_sync->_move_window
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _util_hexdump_sum->_util_hexdump
    _util_hexdump->_printf
    _put_fat->_move_window
    _validate->_disk_status
    _disk_status->_printf
    _get_fat->_move_window
    _move_window->_disk_read
    _sync_window->_disk_write
    _disk_write->_SDCard_write512
    _SDCard_write512->_util_addrdump
    _disk_read->_SDCard_read512
    _SDCard_read512->_util_addrdump
    _util_addrdump->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _URT3Rx_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _wstart_prog->_drive_cpu
    _setup_monitor->_drive_cpu
    _see_file->_f_open
    _scan_files1->_f_open
    _scan_files->_f_open
    _f_readdir->_dir_read
    _f_opendir->_mount_volume
    _f_getcwd->_mount_volume
    _dir_read->_dir_next
    _return_cpu->_drive_cpu
    _restart_prog->_drive_cpu
    _mon_prog->_drive_cpu
    _load_config->_f_open
    _f_gets->_f_read
    _disk_init->_f_mount
    _f_mount->_mount_volume
    _change_directory->_f_chdir
    _f_chdir->_mount_volume
    _boot_file->_drive_cpu
    _load_program->_f_open
    _write_sector->_seek_disk
    _f_write->_create_chain
    _str_inf->_f_open
    _in_file->_f_open
    _f_open->_mount_volume
    _remove_chain->_put_fat
    _mount_volume->_disk_initialize
    _find_volume->_check_fs
    _check_fs->_move_window
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _read_sector->_seek_disk
    _seek_disk->_f_lseek
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _f_read->_get_fat
    _get_fat->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _URT3Rx_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    _main->_scan_files1
    _scan_files1->_f_getcwd
    _scan_files->_f_getcwd
    _load_file->_load_program
    _board_event_loop1->_bus_master_operation
    _board_event_loop->_bus_master_operation
    _bus_master_operation->_unimon_console
    _unimon_console->_str_inf

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _URT3Rx_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _URT3Rx_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _URT3Rx_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _URT3Rx_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _URT3Rx_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _URT3Rx_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _URT3Rx_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _URT3Rx_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _URT3Rx_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _URT3Rx_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _URT3Rx_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _URT3Rx_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _URT3Rx_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _URT3Rx_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _URT3Rx_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _URT3Rx_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _URT3Rx_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _URT3Rx_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _URT3Rx_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _URT3Rx_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _URT3Rx_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _URT3Rx_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _URT3Rx_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _URT3Rx_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _URT3Rx_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _Default_ISR in BANK32

    None.

Critical Paths under _TIMER0_ISR in BANK32

    None.

Critical Paths under _URT3Rx_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _Default_ISR in BANK33

    None.

Critical Paths under _TIMER0_ISR in BANK33

    None.

Critical Paths under _URT3Rx_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _Default_ISR in BANK34

    None.

Critical Paths under _TIMER0_ISR in BANK34

    None.

Critical Paths under _URT3Rx_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _Default_ISR in BANK35

    None.

Critical Paths under _TIMER0_ISR in BANK35

    None.

Critical Paths under _URT3Rx_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _Default_ISR in BANK36

    None.

Critical Paths under _TIMER0_ISR in BANK36

    None.

Critical Paths under _URT3Rx_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0 405911174
                                            145 BANK7     13    13      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _boot_file *
                   _change_directory *
                           _clc_init
                           _clk_init
                          _disk_init
                           _f_getcwd
                          _flash_apl *
                           _get_line
                        _load_config
                          _load_file *
                           _mem_dump *
                           _mem_init
                           _mon_prog *
                          _port_init
                          _print_com *
                          _print_reg *
                             _printf
                          _reset_clk
                          _reset_cpu
                       _restart_prog *
                         _return_cpu *
                         _scan_files *
                        _scan_files1 *
                           _see_file *
                            _set_arg
                      _setup_monitor
                           _setup_sd
                             _strlen
                             _strstr
                          _uart_init
                _wait_for_programmer
                        _wstart_prog *
 ---------------------------------------------------------------------------------
 (1) _wstart_prog                                          1     1      0 56888682
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _wait_for_programmer                                  2     2      0   25827
                                             93 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_sd                                             2     2      0   87420
                                            117 BANK5      2     2      0
                        _SDCard_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCard_init                                         16    10      6   61593
                                            101 BANK5     16    10      6
                     _SDCard_command
             _SDCard_end_transaction
                       _SPI_SD_begin
           _SPI_SD_begin_transaction
                   _SPI_SD_configure
                _SPI_SD_dummy_clocks
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_configure                                    10     4      6   26040
                                             93 BANK5      8     2      6
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_begin                                         4     2      2      46
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SDCard_command                                      15     7      8    6144
                                             42 COMRAM    15     7      8
             _SDCard_end_transaction
                     _SPI_SD_receive
                ___SDCard_command_r1
 ---------------------------------------------------------------------------------
 (1) _setup_monitor                                        5     3      2 63056123
                                             22 BANK7      4     2      2
                          _drive_cpu
                       _load_program
                             _printf
                       _setup_tomer0
                          _start_W65
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_W65                                            0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _setup_tomer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_arg                                              4     2      2     227
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _see_file                                             9     9      0 6114661
                                              0 BANK7      9     9      0
                            _f_close
                             _f_open
                             _f_read
                             _printf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _scan_files1                                         70    70      0 13679206
                                             75 BANK7     70    70      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scan_files                                          69    69      0 13679181
                                             75 BANK7     69    69      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_readdir                                            7     3      4 2362798
                                            137 BANK6      7     3      4
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_opendir                                            7     3      4 2486891
                                            175 BANK6      7     3      4
                            _dir_sdi
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (2) _f_getcwd                                            84    80      4 3181525
                                            175 BANK6      9     5      4
                                              0 BANK7     75    75      0
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _ld_clust
                       _mount_volume
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_fileinfo                                        13     9      4    1244
                                             16 COMRAM    13     9      4
                           _ld_dword
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_read                                            13     9      4 1166130
                                            124 BANK6     13     9      4
                           _dir_next
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_closedir                                           5     3      2   26421
                                            105 BANK5      5     3      2
                           _validate
 ---------------------------------------------------------------------------------
 (1) _return_cpu                                           1     1      0 56888020
                                             22 BANK7      1     1      0
                    _continue_action
                          _drive_cpu
 ---------------------------------------------------------------------------------
 (2) _continue_action                                      0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (1) _restart_prog                                         1     1      0 56888682
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_cpu                                            4     4      0   27336
                                             93 BANK5      2     2      0
                       _bus_hold_req
                    _bus_release_req
                             _memcmp
                             _printf
                          _read_sram
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_clk                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_reg                                            9     9      0   26840
                                             93 BANK5      9     9      0
                             _printf
                          _read_sram
 ---------------------------------------------------------------------------------
 (1) _print_com                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mon_prog                                             4     4      0 56915329
                                             22 BANK7      4     4      0
                          _drive_cpu
                             _printf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_init                                            14    10      4   54606
                                            126 BANK5     14    10      4
                             _memcmp
                             _printf
                          _read_sram
                      _util_addrdump
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             6     6      0   27583
                                            126 BANK5      6     6      0
                            _get_hex
                          _read_sram
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (1) _load_file                                            2     2      0 6142670
                                             21 BANK7      2     2      0
                            _get_hex
                       _load_program
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _get_hex                                             19    15      4     273
                                              3 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 (1) _load_config                                         27    25      2 6117714
                                              0 BANK7     21    19      2
                          ___strtoxl
                          _del_space
                            _f_close
                             _f_gets
                             _f_open
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _f_gets                                              21    15      6  493453
                                            159 BANK5      1     1      0
                                            105 BANK6     20    14      6
                             _f_read
 ---------------------------------------------------------------------------------
 (2) _del_space                                            6     4      2     253
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___strtoxl                                           30    23      7    2131
                                             15 COMRAM    30    23      7
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _get_line                                             7     3      4   26327
                                             93 BANK5      7     3      4
                              _getch
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _getch                                                5     3      2      23
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _flash_apl                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _disk_init                                            2     0      2  638831
                                            187 BANK6      2     0      2
                            _f_mount
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5  613004
                                            175 BANK6     12     7      5
                       _get_ldnumber
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _clk_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change_directory                                     0     0      0 2252507
                            _f_chdir
 ---------------------------------------------------------------------------------
 (2) _f_chdir                                             45    43      2 2252507
                                            175 BANK6     45    43      2
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _boot_file                                            5     5      0 63108631
                                             22 BANK7      3     3      0
                          _drive_cpu
                       _load_program
                             _printf
                         _prt_reload
                            _sprintf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_cpu                                            2     2      0       0
                                              3 COMRAM     2     2      0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _prt_reload                                           0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (2) _load_program                                        22    20      2 6141586
                                            159 BANK5      1     1      0
                                              0 BANK7     21    19      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
                            _sprintf
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4     777
                                             10 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6     182
                                              3 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2      95
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6   25620
                                             77 BANK5     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _drive_cpu                                            1     1      0 56887986
                                            255 BANK6      1     1      0
                   _board_event_loop
                  _board_event_loop1
                          _timer_off
                           _timer_on
 ---------------------------------------------------------------------------------
 (3) _timer_on                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _board_event_loop1                                    0     0      0 28443976
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (3) _board_event_loop                                     0     0      0 28443976
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
                           _make_irq
 ---------------------------------------------------------------------------------
 (4) _make_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bus_release_req                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_master_operation                                 6     6      0 28443976
                                             16 BANK7      6     6      0
                            _dsk_err
                            _get_str *
                            _in_file *
                              _putch
                        _read_sector
                          _read_sram
                        _setup_drive
                            _str_inf *
                            _u_getch *
                     _unimon_console
                       _write_sector
                         _write_sram
 ---------------------------------------------------------------------------------
 (5) _write_sector                                        10     8      2 2427312
                                            154 BANK6     10     8      2
                             _f_sync
                            _f_write
                             _printf
                          _read_sram
                          _seek_disk
                   _util_hexdump_sum
 ---------------------------------------------------------------------------------
 (6) _f_write                                             43    35      8  729073
                                             98 BANK6     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (5) _unimon_console                                       6     6      0 12228513
                                             10 BANK7      6     6      0
                            _get_str *
                            _in_file *
                              _putch
                          _read_sram
                            _str_inf *
                            _u_getch *
                         _write_sram
 ---------------------------------------------------------------------------------
 (6) _u_getch                                              5     3      2      34
                                            159 BANK5      1     1      0
                                              0 BANK7      4     2      2
 ---------------------------------------------------------------------------------
 (6) _str_inf                                             10     7      3 6113456
                                              0 BANK7     10     7      3
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (6) _read_sram                                           14     6      8     542
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (6) _in_file                                              3     1      2 6113246
                                            159 BANK5      1     1      0
                                              0 BANK7      2     0      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_open                                              82    77      5 4936483
                                            175 BANK6     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _follow_path
                            _get_fat
                        _get_fattime
                           _ld_clust
                           _ld_dword
                             _memset
                       _mount_volume
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (8) _remove_chain                                        25    15     10  467531
                                             69 BANK6     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (8) _mount_volume                                        46    41      5  611792
                                            129 BANK6     46    41      5
                            ___lldiv
                             ___lmul
                    _disk_initialize
                        _disk_status
                        _find_volume
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_ldnumber                                        15    13      2     634
                                              3 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (9) _find_volume                                         30    26      4  233954
                                             50 BANK6     30    26      4
                           _check_fs
                           _ld_dword
 ---------------------------------------------------------------------------------
 (10) _check_fs                                           14     8      6  232900
                                             36 BANK6     14     8      6
                           _ld_dword
                            _ld_word
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _disk_initialize                                    133   133      0  115800
                                            155 BANK5      4     4      0
                                              0 BANK6    129   129      0
                     _SDCard_read512
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (8) _follow_path                                         16    12      4 1639548
                                            132 BANK6     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (8) _ld_clust                                            12     8      4     374
                                             10 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (9) _dir_find                                             8     6      2 1400805
                                            124 BANK6      8     6      2
                           _dir_next
                            _dir_sdi
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (11) _memcmp                                             12     6      6     308
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _create_name                                         23    19      4    2865
                                             11 COMRAM    23    19      4
                            _dbc_1st
                            _dbc_2nd
                             _memset
                             _strchr
 ---------------------------------------------------------------------------------
 (10) _strchr                                              6     2      4     136
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _dbc_2nd                                             3     1      2     282
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) _dbc_1st                                             3     1      2     188
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _dir_register                                         5     3      2 1632506
                                            136 BANK6      5     3      2
                          _dir_alloc
                             _memcpy
                             _memset
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_alloc                                           12     8      4 1400410
                                            124 BANK6     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_sdi                                             30    24      6  234447
                                             62 BANK6     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (10) _dir_next                                           30    26      4  934263
                                             98 BANK6     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (11) _dir_clear                                          18    12      6  231129
                                            157 BANK5      2     2      0
                                             26 BANK6     16    10      6
                          _clst2sect
                         _disk_write
                             _memset
                        _sync_window
 ---------------------------------------------------------------------------------
 (7) _f_close                                              5     3      2  657986
                                             47 BANK6      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (6) _f_sync                                              11     9      2  631473
                                             36 BANK6     11     9      2
                         _disk_write
                        _get_fattime
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (7) _sync_fs                                             11     9      2  257470
                                            157 BANK5      1     1      0
                                             26 BANK6     10     8      2
                         _disk_ioctl
                         _disk_write
                             _memset
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6     200
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           5     2      3   26119
                                             93 BANK5      5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (7) _st_clust                                             9     1      8     372
                                              7 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (7) _get_fattime                                          4     0      4       0
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _get_str                                              9     6      3     198
                                              0 BANK7      9     6      3
 ---------------------------------------------------------------------------------
 (5) _setup_drive                                          4     2      2       0
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _read_sector                                         10     8      2 1559638
                                            154 BANK6     10     8      2
                             _f_read
                             _printf
                          _seek_disk
                   _util_hexdump_sum
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _write_sram                                          16     8      8     659
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) _util_hexdump_sum                                    11     5      6   52714
                                            122 BANK5     11     5      6
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (7) _util_hexdump                                        29    23      6   26572
                                             93 BANK5     29    23      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _seek_disk                                           17    15      2  987445
                                            139 BANK6     15    13      2
                            _f_lseek
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_lseek                                             41    35      6  961516
                                             98 BANK6     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        29    23      6  468618
                                             69 BANK6     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (9) _put_fat                                             33    23     10  233769
                                             36 BANK6     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (10) _st_word                                             4     0      4     163
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _st_dword                                            6     0      6     341
                                              3 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     259
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _f_read                                              43    35      8  492820
                                             62 BANK6     43    35      8
                          _clst2sect
                          _disk_read
                         _disk_write
                            _get_fat
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                            11     7      4   26275
                                             94 BANK5     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          1     1      0   25874
                                             93 BANK5      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (8) _get_fat                                             26    20      6  232831
                                             36 BANK6     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         11     5      6  231239
                                            158 BANK5      1     1      0
                                             26 BANK6     10     4      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (10) _sync_window                                        19    17      2  115229
                                            156 BANK5      1     1      0
                                              8 BANK6     18    16      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (11) _disk_write                                         11     3      8  114780
                                            153 BANK5      3     3      0
                                              0 BANK6      8     0      8
                    _SDCard_write512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _SDCard_write512                                    27    17     10   61872
                                            126 BANK5     27    17     10
             _SDCard_end_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          11     3      8  115568
                                            155 BANK5      3     3      0
                                              0 BANK6      8     0      8
                     _SDCard_read512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (11) _SDCard_read512                                     29    19     10   62696
                                            126 BANK5     29    19     10
             _SDCard_end_transaction
                     _SPI_SD_receive
                _SPI_SD_receive_byte
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _util_addrdump                                      33    23     10   26669
                                             93 BANK5     33    23     10
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              18     4     14   25827
                                             77 BANK5     16     2     14
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             8     2      6   25260
                                             69 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          18    12      6   24976
                                             51 BANK5     18    12      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (11) _xtoa                                               21    14      7    1801
                                             29 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (11) _stoa                                               14    10      4     901
                                             13 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _read_prec_or_width                                  9     5      4     272
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (11) _efgtoa                                             54    47      7   16824
                                             87 COMRAM     2     2      0
                                              0 BANK5     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (12) _strcpy                                              6     2      4     115
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _memcpy                                             11     5      6     298
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _labs                                                8     4      4     102
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _floorf                                             20    16      4     495
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fpclassifyf                                      14    10      4     207
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (12) ___fltol                                            10     6      4     349
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3055
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            16     8      8    2966
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (12) ___flneg                                             4     0      4      68
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) ___flmul                                            25    17      8    2265
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) ___flge                                             12     4      8     314
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fleq                                             12     4      8     148
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___fldiv                                            25    17      8    1767
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) _dtoa                                               15     9      6    2846
                                             29 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (12) _pad                                                 9     3      6    1254
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (13) _fputs                                               7     3      4     552
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4     400
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0      47
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _abs                                                 4     2      2      96
                                             13 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (12) ___almod                                            10     2      8     439
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (12) ___aldiv                                            14     6      8     451
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (13) ___SDCard_crc16                                     13     7      6     459
                                              3 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (13) ___SDCard_command_r1                                16    10      6    3748
                                             26 COMRAM    16    10      6
                         _SDCard_crc
           _SPI_SD_begin_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
             ___SDCard_wait_response
 ---------------------------------------------------------------------------------
 (13) ___SDCard_wait_response                              6     4      2    1409
                                             20 COMRAM     6     4      2
                _SPI_SD_receive_byte
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_receive_byte                                 3     1      2    1217
                                             17 COMRAM     3     1      2
                     _SPI_SD_receive
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_receive                                     14     8      6     998
                                              3 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_begin_transaction                            2     0      2     244
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _acquire_bus
 ---------------------------------------------------------------------------------
 (14) _SDCard_crc                                         11     7      4     343
                                              3 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (13) _SDCard_end_transaction                              2     2      0    1064
                                             20 COMRAM     2     2      0
                _SPI_SD_dummy_clocks
             _SPI_SD_end_transaction
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_end_transaction                              2     0      2     210
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_select                                       4     0      4      43
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_dummy_clocks                                 7     3      4     789
                                             13 COMRAM     7     3      4
                        _SPI_SD_send
                        _acquire_bus
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _release_bus                                         4     2      2     102
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _acquire_bus                                         4     2      2     133
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_send                                        11     5      6     323
                                              3 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _ld_word                                              7     5      2     190
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) _ld_dword                                            13     9      4     302
                                              3 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (8) _clst2sect                                           12     6      6     366
                                             15 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     160
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dsk_err                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_hold_req                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _URT3Rx_ISR                                          3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _boot_file *
     _drive_cpu
       _board_event_loop
         _bus_hold_req
         _bus_master_operation
           _dsk_err
           _get_str *
           _in_file *
             _f_close
               _f_sync
                 _disk_write
                   _SDCard_write512
                     _SDCard_end_transaction
                       _SPI_SD_dummy_clocks
                         _SPI_SD_send
                         _acquire_bus
                         _release_bus
                       _SPI_SD_end_transaction
                         _SPI_SD_select
                         _release_bus
                     _SPI_SD_dummy_clocks
                     _SPI_SD_send
                     ___SDCard_command_r1
                       _SDCard_crc
                       _SPI_SD_begin_transaction
                         _SPI_SD_select
                         _acquire_bus
                       _SPI_SD_dummy_clocks
                       _SPI_SD_send
                       ___SDCard_wait_response
                         _SPI_SD_receive_byte
                           _SPI_SD_receive
                     ___SDCard_crc16
                     ___SDCard_wait_response
                     _printf
                       ___xxtofl (ARG)
                       _vfprintf (ARG)
                         _vfpfcnvrt
                           _dtoa
                             ___aldiv
                             ___almod
                             _abs
                               ___almod (ARG)
                             _pad
                               _fputc
                                 _putch
                               _fputs
                                 _fputc
                           _efgtoa
                             ___fladd
                             ___fldiv
                             ___fleq
                             ___flge
                               ___flmul (ARG)
                             ___flmul
                             ___flneg
                             ___flsub
                               ___fladd
                               ___flmul (ARG)
                             ___fltol
                             ___fpclassifyf
                             _floorf
                               ___fldiv (ARG)
                             _labs
                             _memcpy
                             _pad
                             _strcpy
                           _fputc
                           _read_prec_or_width
                           _stoa
                             _fputc
                           _xtoa
                             _pad
                     _util_addrdump
                       _printf
                   _printf
                   _util_addrdump
                 _get_fattime
                 _move_window
                   _disk_read
                     _SDCard_read512
                       _SDCard_end_transaction
                       _SPI_SD_receive
                       _SPI_SD_receive_byte
                       ___SDCard_command_r1
                       ___SDCard_crc16
                       ___SDCard_wait_response
                       _printf
                       _util_addrdump
                     _printf
                     _util_addrdump
                   _sync_window
                     _disk_write
                 _st_clust
                   _st_word
                 _st_dword
                 _st_word
                 _sync_fs
                   _disk_ioctl
                     _printf
                   _disk_write
                   _memset
                   _st_dword
                   _st_word
                   _sync_window
                 _validate
                   _disk_status
                     _printf
               _validate
             _f_open
               _clst2sect
                 ___lmul
               _dir_register
                 _dir_alloc
                   _dir_next
                     _clst2sect
                     _create_chain
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                       _put_fat
                         _ld_dword
                         _move_window
                         _st_dword
                         _st_word
                     _dir_clear
                       _clst2sect
                       _disk_write
                       _memset
                       _sync_window
                     _get_fat
                   _dir_sdi
                     _clst2sect
                     _get_fat
                   _move_window
                 _memcpy
                 _memset
                 _move_window
               _disk_read
               _follow_path
                 _create_name
                   _dbc_1st
                   _dbc_2nd
                   _memset
                   _strchr
                 _dir_find
                   _dir_next
                   _dir_sdi
                   _memcmp
                   _move_window
                 _dir_sdi
                 _ld_clust
                   _ld_word
               _get_fat
               _get_fattime
               _ld_clust
               _ld_dword
               _memset
               _mount_volume
                 ___lldiv
                 ___lmul
                 _disk_initialize
                   _SDCard_read512
                   _printf
                   _util_hexdump
                     _printf
                 _disk_status
                 _find_volume
                   _check_fs
                     _ld_dword
                     _ld_word
                     _memcmp
                     _move_window
                   _ld_dword
                 _get_ldnumber
                 _ld_dword
                 _ld_word
                 _move_window
               _move_window
               _remove_chain
                 _get_fat
                 _put_fat
               _st_clust
               _st_dword
             _f_read
               _clst2sect
               _disk_read
               _disk_write
               _get_fat
               _memcpy
               _validate
             _printf
           _putch *
           _read_sector *
             _f_read
             _printf
             _seek_disk
               _f_lseek
                 ___lldiv
                 _clst2sect
                 _create_chain
                 _disk_read
                 _disk_write
                 _get_fat
                 _validate
               _printf
             _util_hexdump_sum
               _printf
               _util_hexdump
             _write_sram
           _read_sram *
           _setup_drive *
           _str_inf *
             _f_close
             _f_open
             _f_read
             _printf
           _u_getch *
           _unimon_console *
             _get_str *
             _in_file *
             _putch *
             _read_sram *
             _str_inf *
             _u_getch *
             _write_sram *
           _write_sector *
             _f_sync
             _f_write
               _clst2sect
               _create_chain
               _disk_read
               _disk_write
               _memcpy
               _validate
             _printf
             _read_sram
             _seek_disk
             _util_hexdump_sum
           _write_sram *
         _bus_release_req
         _make_irq
       _board_event_loop1
         _bus_hold_req
         _bus_master_operation
         _bus_release_req
       _timer_off
       _timer_on
     _load_program
       _f_close
       _f_open
       _f_read
       _printf
       _sprintf
         _vfprintf
       _strstr
         _strchr
         _strlen
         _strncmp
       _write_sram
     _printf
     _prt_reload
       _printf
     _sprintf
     _start_cpu
       _bus_release_req
     _strstr
     _write_sram
   _change_directory *
     _f_chdir
       _follow_path
       _ld_clust
       _mount_volume
   _clc_init *
   _clk_init *
   _disk_init *
     _f_mount
       _get_ldnumber
       _mount_volume
     _printf
   _f_getcwd *
     _dir_next
     _dir_read
       _dir_next
       _move_window
     _dir_sdi
     _get_fileinfo
       _ld_dword
       _ld_word
     _ld_clust
     _mount_volume
     _move_window
   _flash_apl *
     _printf
   _get_line *
     _getch
     _printf
     _putch
   _load_config *
     ___strtoxl
       ___lmul
     _del_space
     _f_close
     _f_gets
       _f_read
     _f_open
     _printf
     _strlen
     _strstr
   _load_file *
     _get_hex
     _load_program
     _strstr
   _mem_dump *
     _get_hex
     _read_sram
     _util_addrdump
   _mem_init *
     _memcmp
     _printf
     _read_sram
     _util_addrdump
     _write_sram
   _mon_prog *
     _drive_cpu
     _printf
     _start_cpu
     _strstr
     _write_sram
   _port_init *
   _print_com *
     _printf
   _print_reg *
     _printf
     _read_sram
   _printf *
   _reset_clk *
   _reset_cpu *
     _bus_hold_req
     _bus_release_req
     _memcmp
     _printf
     _read_sram
     _write_sram
   _restart_prog *
     _drive_cpu
     _start_cpu
     _write_sram
   _return_cpu *
     _continue_action
       _bus_release_req
     _drive_cpu
   _scan_files *
     _f_close
     _f_closedir
       _validate
     _f_getcwd
     _f_open
     _f_opendir
       _dir_sdi
       _follow_path
       _ld_clust
       _mount_volume
     _f_readdir
       _dir_next
       _dir_read
       _dir_sdi
       _get_fileinfo
       _validate
     _printf
   _scan_files1 *
     _f_close
     _f_closedir
     _f_getcwd
     _f_open
     _f_opendir
     _f_readdir
     _printf
   _see_file *
     _f_close
     _f_open
     _f_read
     _printf
     _strstr
   _set_arg *
   _setup_monitor *
     _drive_cpu
     _load_program
     _printf
     _setup_tomer0
     _start_W65
       _bus_release_req
     _write_sram
   _setup_sd *
     _SDCard_init
       _SDCard_command
         _SDCard_end_transaction
         _SPI_SD_receive
         ___SDCard_command_r1
       _SDCard_end_transaction
       _SPI_SD_begin
       _SPI_SD_begin_transaction
       _SPI_SD_configure
         _printf
       _SPI_SD_dummy_clocks
       _printf
     _printf
   _strlen *
   _strstr *
   _uart_init *
   _wait_for_programmer *
     _printf
   _wstart_prog *
     _drive_cpu
     _start_cpu
     _write_sram

 _Default_ISR (ROOT)

 _TIMER0_ISR (ROOT)

 _URT3Rx_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0    2680     32.7%
BITBIGSFRh        1065      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0     128     50.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0     209     81.6%
BITBANK9           256      0       0      0.0%
BANK9              256      0     179     69.9%
BITBANK8           256      0       0      0.0%
BANK8              256      0     223     87.1%
BITBANK7           256      0       0      0.0%
BANK7              256    158     256    100.0%
BITBANK6           256      0       0      0.0%
BANK6              256    256     256    100.0%
BITBANK5           160      0       0      0.0%
BANK5              160    160     160    100.0%
BITBIGSFRll        128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    4186      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 08 21:12:11 2024

                    del_space@bytes 0504                          _URT3Rx_ISR F4D8  
                       get_fat@clst 0626                        ___fldiv@aexp 0543  
                      ___fldiv@bexp 0542                _bus_master_operation 8BA2  
                    ?_SPI_SD_select 0504                        ___fldiv@sign 053B  
                      create_name@c 0522                        create_name@d 0517  
                      create_name@i 051A                        create_name@p 051E  
                  get_ldnumber@path 0504                     ?_SPI_SD_receive 0504  
                                _fh 08A2                                  _fs 0B80  
                 ?_SPI_SD_configure 05BD                   SDCard_command@spi 0534  
                    ??_dir_register 055A                        return_cpu@rs 0716  
                  disk_write@sector 0602                       create_name@dp 050C  
                     create_name@ni 0518                       create_name@si 0520  
                    create_chain@cs 065E                      create_chain@fs 065C  
               __end_of_wstart_prog EAFC                   SDCard_read512@crc 05F8  
                 SDCard_read512@buf 05E4                                 l311 0208  
                               l320 FAE4                                 l314 021A  
                               l331 EE3C                                 l403 EFD0  
                               l412 026C                                 l308 FB2A  
                               l333 EE44                                 l421 EC3C  
                               l341 DF0C                                 l510 EF2C  
                               l326 F5B8                                 l422 EC02  
                               l430 F3EA                                 l342 DF0C  
                               l406 FF32                                 l350 FD3E  
                               l503 EF3E                                 l327 F580  
                               l415 EBA0                                 l319 FAB0  
                               l512 EF3A                                 l336 EEA0  
                               l424 EC10                                 l432 F3F8  
                               l344 DF54                                 l409 0262  
                               l521 803C                                 l361 D16E  
                               l337 EEAA                                 l281 FFE4  
                               l353 0188                                 l506 EF00  
                               l530 809E                                 l522 8040  
                               l434 F45E                                 l442 FB3E  
                               l363 D23E                                 l283 FFF2  
                               l419 EBD0                                 l435 F42A  
                               l347 F6F2                                 l508 EF0E  
                               l516 82E4                                 l372 E446  
                               l284 FFFC                                 l356 01D4  
                               l444 FB4C                                 l620 948A  
                               l612 9604                                 l604 93A8  
                               l533 80C0                                 l517 809A  
                               l365 D1DC                                 l437 F438  
                               l429 F3EA                                 l381 FE26  
                               l461 FF60                                 l454 F90C  
                               l542 8126                                 l526 8078  
                               l390 C292                                 l446 FB70  
                               l519 802E                                 l367 D240  
                               l287 01BC                                 l552 81AE  
                               l536 80E2                                 l376 E494  
                               l384 0286                                 l464 CAE0  
                 SDCard_read512@spi 05F6                                 l553 81B2  
                               l545 8148                                 l481 CBE6  
                               l458 FD02                                 l562 8218  
                               l802 CD04                                 l378 E4D2  
                               l571 827E                                 l539 8104  
                               l731 85D4                                 l387 0282  
                               l467 CB20                                 l651 95A2  
                               l635 957E                                 l740 F224  
                               l484 0148                                 l556 81D4  
                               l548 816A                                 l468 CB1C  
                               l644 9590                                 l565 823A  
                               l469 CB1C                                 l742 F236  
                               l574 82A0                                 l670 E6FA  
                               l750 E416                                 l902 926E  
                               l398 EF74                                 l487 016A  
                               l559 81F6                                 l807 BB1C  
                               l903 926E                                 l735 F36E  
                               l399 EF74                                 l832 0274  
                               l592 0204                                 l744 F272  
                               l568 825C                                 l840 ACE2  
                               l817 C6C4                                 l586 F7B4  
                               l578 82D2                                 l666 FBFC  
                               l827 F4D4                                 l852 ADC6  
                               l860 8E2C                                 l908 937E  
                               l589 0126                                 l749 E40E  
                               l853 AE08                                 l837 AE04  
                               l846 ACE8                                 l599 FF8A  
                               l863 8C8A                  ??_SPI_SD_configure 05C3  
                               l697 90F6                                 l881 8DDE  
                               l882 8E54                                 l869 8C90  
                               _GIE 26B7                                 _RA5 2675  
  __end_of_debug_flags@diskio$F4076 F20D                                 _abs FED0  
                               _cmd 0900                                 _arg 079E  
                               _pad EC3E                                 _mon 07C8  
                               _rom F20F                                 prod 04F3  
                    ??_create_chain 064B                                 tosl 04FD  
                               wreg 04E8                         disk_write@i 05FA  
                      ___flmul@aexp 051F                        ___flmul@bexp 0524  
                      ___flmul@sign 051E                        ___flmul@temp 0529  
                      ___flmul@prod 0525                    _util_hexdump_sum F170  
                    create_name@sfn 051C                     create_chain@ncl 0658  
                   create_chain@obj 0645             SPI_SD_receive_byte@ctx_ 0512  
                   create_chain@scl 0654                     create_chain@res 0653  
                       ld_clust@dir 050D                  SDCard_read512@addr 05DE  
                      ___fltol@exp1 050D                                l1122 725A  
                              l2011 D91C                                l1123 725A  
                              ?_abs 050E                                l2004 F80C  
                              l1116 71F0                                l2013 D8BE  
                              l1117 71F0                                l1214 CF2C  
                              l1126 731A                                l2103 DBD8  
                              l1311 023C                                l1127 731A  
                              l1152 619C                                l1129 7346  
                              l2018 D91E                                l1314 024A  
                              l1322 E58C                                l2035 5122  
                              l2107 DBDA                                l1331 EAFA  
                              l1148 E900                                l1340 D82C  
                              l2061 212E                                l1237 9AA6  
                              l1510 6DD8                                l2054 25B4  
                              l1158 60BA                                l1174 F95E  
                              l1350 584E                                l2055 1E64  
                              l1183 F05C                                l1191 719E  
                              l1327 EE10                                l1335 EA52  
                              l1319 B15E                                l1343 F3E8  
                              l1281 FD7A                                l1169 618A  
                              l2049 53D2                                l2226 DA0A  
                              l1346 5428                                l1443 FECE  
                              l3211 7746                                l1531 4508  
                              l1515 40F6                                l1259 9872  
                              l1355 5544                                l1347 586E  
                              l3220 778C                                l1452 F624  
                              l1612 7C6C                                l1540 9CD8  
                              l1284 01EC                                l1276 AFB6  
                              l1292 7DAA                                l3221 77AA  
                              l1381 C11E                                l1357 5590  
                              l1446 E644                                l3222 7802  
                              l3214 770A                                l1534 4592  
                              l2086 BFA4                                l1358 561A  
                              l1294 7FBC                                l3223 77F0  
                              l2511 F702                                l1463 DD9C  
                              l2087 BF86                                l1720 4A6E  
                              l1800 88C0                                l1392 AAA4  
                              l1704 A50C                                l1376 FC82  
                              l1296 7F00                                l3209 78E2  
                              l3241 668C                                l2505 E7A8  
                              l1473 B7EC                                l1449 FFB2  
                              l2521 F756                                l1457 ED76  
                              l2089 BF20                                l1297 7ECA  
                              l3250 68F8                                l1482 A0FE  
                              l1618 7B5A                                l3402 F9FE  
                              l2098 FDEE                                l3251 68E6  
                              l3155 4C58                                l1563 40A6  
                              l2531 C46E                                l3172 4D72  
                              l3164 4F24                                l3156 4C46  
                              l3308 D640                                l1468 B7E8  
                              l1492 6A58                                l2436 022C  
                              l2516 F708                                l1644 651C  
                              l1636 65C6                                l1628 620E  
                              l2460 B534                                l1396 A9FC  
                              l3245 69EC                                l3181 4E40  
                              l3157 4C0C                                l2541 C30C  
                              l1565 3C4A                                l1485 A102  
                              l3341 5A4E                                l3182 4E2E  
                              l3502 12B0                                l1662 CAB2  
                              l2446 B64A                                l1902 26C0  
                              l2622 C806                                l1479 E026  
                              l1495 6DC8                                l1671 FA9A  
                              l1663 CAB4                                l2439 B4AC  
                              l1911 28B4                                l1903 26AE  
                              l3351 5B2A                                l3432 EC76  
                              l3248 6882                                l2536 C566  
                              l2552 F1F0                                l2448 B4C4  
                              l1816 A572                                l3344 5ADC  
                              l2624 C816                                l1489 E1BE  
                              l3249 68A0                                l3169 4E00  
                              l1497 6A64                                l1817 A700  
                              l3361 5BD4                                l3345 5B22  
                              l3282 AAFC                                l2706 D036  
                              l3442 A740                                l3258 69AE  
                              l2546 C404                                l2482 E7AA  
                              l1586 4056                                l1682 B302  
                              l3435 ECB8                                l3531 B942  
                              l2491 E856                                l2475 FCC4  
                              l1587 4096                                l1595 C966  
                              l1667 F2F2                                l3444 A748  
                              l3188 4EE8                                l3524 B892  
                              l1940 336C                                l1772 8B08  
                              l1852 0422                                l1836 0AD6  
                              l3356 5B86                                l3285 AC58  
                              l3437 ECDA                                l3445 A78E  
                              l2901 FE96                                l3197 FBB6  
                              l3541 BB48                                l2661 EB9E  
                              l1589 408E                                l1781 8BA0  
                              l1917 2D14                                l1909 28D4  
                              l3365 5C6C                  SDCard_read512@offs 05E2  
                              l2638 F67E                                l3614 3984  
                              l3630 F862                                l2654 EB8E  
                              l1686 BE26                                l1774 8AF2  
                              l3702 F9AE                                l2639 F68E  
                              l2719 DAF4                                l3543 BB50  
                              l1935 3448                                l3383 D542  
                              l1863 0880                                l3296 ABF0  
                              l3472 0E68                                l3536 B98A  
                              l2496 E6FC                                l1880 D444  
                              l1696 DCBC                                l3289 AB94  
                              l3561 E0EA                                l1785 B4A6  
                              l3369 5D0A                                l3634 FEEA  
                              l3458 A8DE                                l3474 0CAE  
                              l1794 B498                                l1970 1886  
                              l1962 1DB2                                l3722 CE20  
                              l3643 A314                                l3395 FE5E  
                              l1891 2D34                                l3715 DE7A  
                              l2924 D13C                                l1884 D73A  
                              l3637 FF02                                l3389 FA4E  
                              l3469 1536                                l3565 E0F2  
                              l3557 BCA2                                l1885 D6C0  
                              l3646 A258                                ?_pad 0515  
                              l3583 35A0                                l1879 D432  
                              l1991 1D80                                l1896 2D14  
                              l3657 F8B8                                l3593 3AF6  
                              l3585 35A8                                l1969 1C28  
                              l3594 381A                                l2892 D2FE  
                              l3684 FFDA                                l3669 E352  
                              l3677 FC40                                l2886 E9AA  
                              l1998 9EEE                                l3687 F0EA  
                              l3696 FDB6                                l2897 D344  
                              l3689 F16E                                STR_1 F28B  
                              STR_2 FA56                                STR_3 F28B  
                              STR_4 FC85                                STR_5 FE6C  
                              STR_6 F6B4                                STR_7 FDC6  
                              STR_8 F419                                STR_9 FDC6  
                              _LATB 04BF                                _LATC 04C0  
                              _LATD 04C1                         boot_file@rs 0718  
                              _U3ON 1697                      ??_get_fileinfo 0515  
                              _WPUB 0409                                _WPUC 0411  
                              _WPUD 0419                                _Fsid 07B5  
                              abs@a 050E                                _dbuf 0828  
                              _binv 0878                                _labs F864  
                              _main 71A0                                _dtoa A702  
                              _ctx_ 07A8                        find_volume@i 064E  
                              _prec 055A                                _mtod F1E9  
                              pad@i 051C                                pad@p 0519  
                              fsr0h 04EA                                fsr1h 04E2  
                              indf0 04EF                                fsr2h 04DA  
                              fsr0l 04E9                                indf1 04E7  
                              indf2 04DF                                fsr1l 04E1  
                              fsr2l 04D9                                _stoa B7EE  
                       ld_dword@ptr 0504                                _xtoa BB1E  
                     disk_ioctl@cmd 05BD                       disk_read@buff 0600  
                     disk_ioctl@res 05C1                       ___fpclassifyf D544  
                     disk_read@pdrv 05FB                                prodh 04F4  
                              prodl 04F3                      ??_get_ldnumber 0506  
                              start 0102         SPI_SD_configure@clock_speed 05BF  
                 ??_continue_action 0504                     ___fldiv@new_exp 053C  
                     get_hex@hexval 0512              ___SDCard_command_r1@r1 051F  
                disk_initialize@buf 0600                        ?_follow_path 0684  
                      ___param_bank 0000               ?_bus_master_operation 0501  
                     write_sector@n 06A2                    print_reg@reg_816 05C4  
                   create_name@path 050E                    create_chain@clst 0647  
                     write_sram@buf 0508                               ??_abs 0510  
                     write_sram@len 050A            SPI_SD_receive_byte@dummy 0514  
                       ?_TIMER0_ISR 0501                       get_fileinfo@c 051B  
                             ??_pad 051B                 SDCard_read512@i_684 05EE  
                      SPI_SD_send@i 050A                        SPI_SD_send@p 050C  
                       _sync_window B64C                        ?_load_config 0700  
                             l20001 D08E                               l20003 D09E  
                             l20101 A734                               l20013 D0C8  
                             l20005 D0A2                               l20111 A782  
                             l20103 A750                               l20031 D12C  
                             l20023 D0F0                               l20015 D0D2  
                             l20007 D0B0                               l20041 EC6E  
                             l20121 A7E6                               l20113 A78A  
                             l20105 A760                               l20025 D0FC  
                             l20017 D0DC                               l21001 840A  
                             l20051 FED0                               l20043 EC82  
                             l20035 EC3E                               l20131 A856  
                             l20123 A7EC                               l20115 A796  
                             l20107 A766                               l20027 D10C  
                             l20211 0CBE                               l21011 8442  
                             l20053 FEDE                               l20045 EC96  
                             l20037 EC4C                               l20141 A8AE  
                             l20133 A870                               l20125 A7F2  
                             l20117 A79E                               l20109 A776  
                             l20029 D11C                               l20061 F872  
                             l20301 1202                               l20221 0DA6  
                             l20213 0CC4                               l20205 0C5E  
                             l21101 8F64                               l21021 84E2  
                             l21013 845E                               l21005 8422  
                             l20047 EC9A                               l20039 EC60  
                             l20143 A8BE                               l20135 A88A  
                             l20119 A7A4                               l20127 A826  
                             l20071 A17A                               l20063 F886  
                             l20055 FD7C                               l20311 12D0  
                             l20303 120E                               l20223 0DBA  
                             l20231 0E36                               l20215 0CF8  
                             l20207 0C78                               l20151 0AFA  
                             l21111 8FD8                               l21103 8F7A  
                             l21031 8524                               l21023 84E6  
                             l21015 8472                               l21007 8432  
                             l20049 ECC6                               l20129 A840  
                             l20137 A898                               l20081 A248  
                             l20073 A18E                               l20057 FD84  
                             l20321 1302                               l20313 12E0  
                             l20305 1286                               l20241 0E9C  
                             l20233 0E70                               l20225 0DEE  
                             l20217 0D36                               l20161 0B44  
                             l20153 0AFE                               l20401 B8CC  
                             l21113 8FE8                               l21105 8F96  
                             l21041 8558                               l21033 8530  
                             l21025 8502                               l21017 848E  
                             l21009 843E                               l22001 F290  
                             l20139 A8A8                               l20091 A304  
                             l20075 A19C                               l20083 A27C  
                             l20067 A104                               l20059 F864  
                             l20331 1336                               l20323 1306  
                             l20315 12E4                               l20307 12A6  
                             l20251 0EEC                               l20243 0EA2  
                             l20235 0E7E                               l20227 0DF6  
                             l20219 0D68                               l20171 0B92  
                             l20163 0B54                               l20155 0B22  
                             l20147 0AD8                               l20411 B954  
                             l20403 B8EE                               l21131 9092  
                             l21115 8FF8                               l21107 8FA6  
                             l21203 E818                               l21211 E81E  
                             l21051 85AC                               l21043 8578  
                             l21027 8514                               l21019 84C6  
                             l22011 FA68                               l22003 F2AA  
                             l21301 E0F4                               l20501 8086  
                             l20085 A2B8                               l20069 A124  
                             l20341 13D4                               l20333 133A  
                             l20325 130C                               l20317 12EA  
                             l20309 12C2                               l20261 0F84  
                             l20245 0EB4                               l20253 0EF4  
                             l20237 0E8A                               l20181 0BCE  
                             l20173 0BA4                               l20165 0B60  
                             l20157 0B2C                               l20149 0AEC  
                             l20413 B968                               l20405 B924  
                             l20421 BB2E                               l21141 90E0  
                             l21125 905C                               l21117 901C  
                             l21109 8FCA                               l21213 E82C  
                             l21061 85CC                               l21045 8584  
                             l21037 8544                               l22013 FA82  
                             l22101 472A                               l22021 BCE6  
                             l22005 F2E2                               l21303 E100  
                             l21231 E634                               l21223 FE98  
                             l20511 80CE                               l20503 8092  
                             l20095 A702                               l20087 A2CC  
                             l20079 A20C                               l20351 1428  
                             l20335 1340                               l20319 12F2  
                             l20327 1312                               l20343 13D8  
                             l20271 1068                               l20263 0FDC  
                             l20255 0EFC                               l20247 0EC2  
                             l20239 0E94                               l20191 0C30  
                             l20183 0BD8                               l20175 0BA8  
                             l20167 0B68                               l20159 0B34  
                             l20415 B96C                               l20407 B928  
                             l20431 BB7E                               l20423 BB3C  
                             l21135 90AC                               l21127 906E  
                             l21119 9022                               l21143 90EA  
                             l21071 8E68                               l21215 E830  
                             l21151 E6FC                               l22111 4784  
                             l22103 475A                               l22031 BD2E  
                             l22015 BCA4                               l21305 E142  
                             l21225 FEC6                               l20521 8100  
                             l20513 80DA                               l20505 80AC  
                             l20097 A724                               l20089 A2F4  
                             l20361 1490                               l20353 1458  
                             l20345 13F6                               l20337 1398  
                             l20329 1324                               l20281 1102  
                             l20273 109A                               l20265 1010  
                             l20257 0F0C                               l20249 0EDA  
                             l20193 0C34                               l20177 0BAE  
                             l20169 0B6C                               l20441 BBAE  
                             l20433 BB8A                               l20425 BB58  
                             l20417 BB1E                               l21145 90EE  
                             l21137 90CC                               l21129 9082  
                             l21081 8EC2                               l21073 8E8E  
                             l21065 8E56                               l21217 E836  
                             l21057 85C0                               l21049 859A  
                             l21153 E70A                               l21321 6A6C  
                             l21313 69EE                               l23001 2E3C  
                             l21241 FFA2                               l21401 42B2  
                             l22009 FA50                               l22121 4830  
                             l22113 479A                               l22105 475E  
                             l22041 BDB6                               l22033 BD4E  
                             l22025 BCEE                               l22017 BCB4  
                             l22201 B332                               l20531 8140  
                             l20523 8112                               l20515 80DE  
                             l20507 80B8                               l20099 A726  
                             l20371 14F8                               l20363 14A6  
                             l20355 1466                               l20347 1412  
                             l20339 13CC                               l20291 11DA  
                             l20283 1136                               l20275 10B0  
                             l20259 0F20                               l20267 1016  
                             l20195 0C3A                               l20179 0BB6  
                             l20187 0BF8                               l20451 BBD8  
                             l20443 BBB6                               l20435 BB92  
                             l20427 BB6A                               l20419 BB2C  
                             l20611 3492                               l20603 344A  
                             l21139 90D8                               l21091 8F06  
                             l21083 8ED4                               l21067 8E5E  
                             l21219 E854                               l21059 85C8  
                             l21171 E788                               l21331 6B1E  
                             l21323 6A7E                               l21315 69FE  
                             l23011 2EFC                               l21251 F5D8  
                             l21243 FFAE                               l21235 FF8C  
                             l21403 42EE                               l22131 4870  
                             l22123 4846                               l22115 479E  
                             l22035 BD5E                               l22027 BD1A  
                             l22019 BCD6                               l22211 B362  
                             l22203 B33A                               l21309 E156  
                             l21229 E58E                               l20541 8178  
                             l20533 8144                               l20525 811E  
                             l20517 80F0                               l20509 80BC  
                             l20373 150E                               l20365 14AC  
                             l20357 147E                               l20349 141A  
                             l20285 118C                               l20293 11DE  
                             l20277 10E2                               l20269 1034  
                             l20197 0C42                               l20189 0C1E  
                             l20381 B808                               l20461 BC74  
                             l20445 BBBC                               l20437 BB98  
                             l20453 BC0E                               l20429 BB76  
                             l20701 38F2                               l20621 34B6  
                             l20613 349A                               l20605 3472  
                             l21093 8F1A                               l21085 8EE4  
                             l21077 8EA6                               l21173 E7A6  
                             l21157 E76A                               l21165 E770  
                             l21181 B66E                               l21341 6BE0  
                             l21317 6A1A                               l23101 3406  
                             l23021 2FA2                               l23013 2F1E  
                             l23005 2E52                               l21261 F614  
                             l21253 F5E4                               l21245 F5BA  
                             l21237 FF98                               l21413 43B0  
                             l21405 431A                               l21501 3D5A  
                             l22141 48E8                               l22125 485A  
                             l22133 4884                               l22117 47DC  
                             l22109 4772                               l22061 45DC  
                             l22053 4594                               l22045 BDF8  
                             l22037 BD66                               l22221 B3D2  
                             l22213 B372                               l22205 B35E  
                             l20551 81CC                               l20543 8184  
                             l20535 8156                               l20527 8122  
                             l20519 80FC                               l20375 1516  
                             l20367 14CA                               l20295 11EE  
                             l20287 1192                               l20279 10F2  
                             l20471 E058                               l20391 B86C  
                             l20383 B810                               l20455 BC2A  
                             l20463 BC82                               l20447 BBCC  
                             l20439 BB9E                               l20711 394E  
                             l20631 3520                               l20615 349C  
                             l20623 34DA                               l20607 3480  
                             l21095 8F2A                               l21087 8EF0  
                             l21079 8EB6                               l21167 E77E  
                             l21183 B6C0                               l21191 B7E2  
                             l21271 DFAC                               l21263 DF56  
                             l21351 6CCC                               l21343 6C00  
                             l21335 6B8A                               l21327 6AEA  
                             l21319 6A44                               l23103 3410  
                             l23015 2F3E                               l23007 2E8C  
                             l23111 3446                               l21255 F5F6  
                             l21247 F5C6                               l21239 FF9C  
                             l21415 43EE                               l21407 433A  
                             l21431 456A                               l21511 3DF0  
                             l21503 3D7A                               l22151 4922  
                             l22135 489C                               l22119 481E  
                             l22071 4668                               l22063 45E4  
                             l22055 45A4                               l22047 BE12  
                             l22039 BD90                               l22231 B47C  
                             l22223 B406                               l22215 B384  
                             l22207 B362                               l20561 8204  
                             l20553 81D0                               l20545 8188  
                             l20537 8162                               l20529 8134  
                             l20801 0106                               l20369 14E8  
                             l20297 11F6                               l20289 11C6  
                             l20473 E092                               l20393 B88A  
                             l20385 B81C                               l20457 BC40  
                             l20449 BBD2                               l20721 398A  
                             l20713 395E                               l20705 3906  
                             l20641 3598                               l20633 3548  
                             l20625 34EA                               l20617 34AE  
                             l20609 348E                               l21097 8F3A  
                             l21169 E782                               l21185 B6D0  
                             l21177 B64C                               l21273 DFF4  
                             l21265 DF5A                               l21345 6C10  
                             l21337 6BC2                               l21329 6B1A  
                             l23105 3420                               l23033 2FDA  
                             l23025 2FA8                               l23017 2F76  
                             l23009 2EEA                               l21257 F602  
                             l21249 F5CA                               l21425 4482  
                             l21417 4404                               l21409 439C  
                             l21433 4590                               l21361 40A8  
                             l21521 3E42                               l21513 3E00  
                             l21505 3D90                               l22401 9D04  
                             l22161 4972                               l22137 48CC  
                             l22153 493A                               l22081 46BE  
                             l22073 4682                               l22065 4622  
                             l22057 45B0                               l21441 D468  
                             l22321 B56C                               l22305 B50A  
                             l22241 A54A                               l22233 B48C  
                             l22225 B42A                               l22217 B396  
                             l23201 28F4                               l23121 25D0  
                             l24001 CB5C                               l21291 F65E  
                             l21283 F626                               l20571 8236  
                             l20563 8210                               l20555 81E2  
                             l20547 81A6                               l20539 8166  
                             l20491 8030                               l20483 7FDC  
                             l20803 0108                               l20299 11FA  
                             l20475 E0B0                               l20467 E028  
                             l20387 B820                               l20379 B7EE  
                             l20459 BC5A                               l20731 3A34  
                             l20723 39A8                               l20715 3974  
                             l20707 3916                               l20651 35FE  
                             l20643 35A0                               l20635 3556  
                             l20627 3506                               l20811 F81A  
                             l21099 8F5E                               l21187 B74A  
                             l21179 B650                               l21275 DFFE  
                             l21267 DF8C                               l21355 6D46  
                             l21339 6BD0                               l23107 3428  
                             l23051 309C                               l23027 2FC4  
                             l23019 2F92                               l23035 2FF6  
                             l21259 F606                               l21427 4554  
                             l21419 446E                               l21371 4110  
                             l21363 40AE                               l21523 3E6C  
                             l21531 3E9A                               l21507 3DAC  
                             l21515 3E10                               l22411 9D90  
                             l22403 9D1E                               l21603 ED2A  
                             l21611 ED6E                               l22171 49BA  
                             l22163 4982                               l22147 490E  
                             l22139 48D0                               l22091 4700  
                             l22083 46CE                               l22075 4692  
                             l22067 4652                               l22059 45CC  
                             l21443 D47A                               l22323 B57E  
                             l22315 B538                               l22307 B51E  
                             l22243 A560                               l22251 A57E  
                             l22227 B45A                               l22219 B39E  
                             l23211 29B0                               l23203 291C  
                             l23131 2600                               l23115 25B6  
                             l24003 CB66                               l21285 F636  
                             l20581 8276                               l20573 8248  
                             l20565 8214                               l20557 81EE  
                             l20549 81C0                               l20493 804E  
                             l20485 7FE2                               l20805 0124  
                             l20901 E662                               l20477 E0BE  
                             l20469 E030                               l20397 B8B4  
                             l20389 B85E                               l20741 3A9C  
                             l20733 3A4A                               l20725 39CC  
                             l20717 397C                               l20661 36A2  
                             l20653 3622                               l20637 3572  
                             l20629 3516                               l20813 F838  
                             l20821 FFBE                               l21197 E7AA  
                             l21189 B768                               l21277 E004  
                             l21269 DF9C                               l21349 6C82  
                             l23053 30CA                               l23045 305A  
                             l23037 302E                               l23029 2FD4  
                             l21381 41A8                               l21373 416C  
                             l21365 40C8                               l21541 3F18  
                             l21533 3EC6                               l21525 3E7C  
                             l21517 3E26                               l21509 3DC6  
                             l21461 3B52                               l21453 3AF8  
                             l21293 FE28                               l22421 9E18  
                             l22405 9D38                               l22413 9DA2  
                             l21605 ED4A                               l22181 49F6  
                             l22165 4986                               l22149 491E  
                             l22093 470C                               l22077 469A  
                             l22069 4656                               l21445 D4D0  
                             l21437 D446                               l22325 B590  
                             l22317 B548                               l22333 B5A6  
                             l22261 A5F2                               l22237 A50E  
                             l22229 B474                               l23221 2A16  
                             l23213 29D0                               l23205 2930  
                             l23141 2642                               l23133 2608  
                             l23125 25D0                               l23117 25CA  
                             l23301 F5AA                               l24101 B2EC  
                             l24021 F32C                               l24005 CB70  
                             l21287 F644                               l20831 015E  
                             l20591 82AE                               l20583 827A  
                             l20575 8254                               l20567 8226  
                             l20559 81F2                               l20495 805A  
                             l20487 7FE6                               l20479 7FBE  
                             l20911 E6BA                               l20903 E666  
                             l20399 B8C8                               l20735 3A6A  
                             l20727 3A00                               l20743 3AB8  
                             l20671 3722                               l20663 36BE  
                             l20655 3658                               l20647 35AE  
                             l20639 3582                               l20815 F858  
                             l21199 E7B8                               l21279 E022  
                             l21359 6DA2                               l22351 D35E  
                             l23063 3142                               l23055 30EA  
                             l23071 322E                               l23047 306A  
                             l23039 3046                               l21391 4210  
                             l21383 41B6                               l21551 3F80  
                             l21519 3E36                               l21463 3B7C  
                             l21455 3B08                               l21295 FE34  
                             l22431 9EDC                               l22423 9E50  
                             l22415 9DB6                               l22407 9D8A  
                             l21711 7B4A                               l21703 7B02  
                             l22511 DC42                               l22503 DBDC  
                             l21631 DD50                               l21623 DD0C  
                             l21615 DCC0                               l22183 4A06  
                             l22167 4996                               l22159 4962  
                             l22095 4714                               l22079 46AC  
                             l22087 46D4                               l21447 D4E2  
                             l21439 D45A                               l22343 B648  
                             l22335 B5B2                               l22319 B55A  
                             l22271 A668                               l22263 A608  
                             l22239 A534                               l23231 2AD2  
                             l23223 2A36                               l23215 29E0  
                             l23207 2940                               l23151 2690  
                             l23143 2658                               l23135 2620  
                             l23127 25D4                               l23311 EE14  
                             l23303 F5B0                               l24031 DD9E  
                             l24103 B300                               l24111 A34A  
                             l24023 F33E                               l21289 F654  
                             l20761 F8F8                               l20753 F8BA  
                             l20841 F78E                               l20833 F758  
                             l20825 0128                               l20593 82BA  
                             l20585 828C                               l20577 8258  
                             l20569 8232                               l20497 805E  
                             l20489 8004                               l20921 E6F2  
                             l20913 E6CA                               l20905 E67E  
                             l20681 37C4                               l20673 375A  
                             l20649 35DE                               l20809 F80E  
                             l22353 D378                               l22361 D406  
                             l23073 325E                               l23065 315E  
                             l23057 312C                               l23049 308A  
                             l21393 426C                               l21385 41C0  
                             l21377 4180                               l21369 40FE  
                             l21561 4040                               l21553 3F96  
                             l21537 3EE2                               l21473 3BEC  
                             l21481 3C5A                               l21457 3B20  
                             l21465 3B90                               l23401 F1A4  
                             l21297 FE40                               l22425 9E7E  
                             l22417 9DE4                               l22433 9EEC  
                             l21713 7B78                               l21705 7B1C  
                             l22513 DC52                               l22505 DBEC  
                             l21633 DD70                               l21625 DD2C  
                             l21617 DCE0                               l22185 4A46  
                             l22177 49D0                               l22169 499E  
                             l22097 4724                               l22089 46F0  
                             l21449 D4EE                               l22521 88C2  
                             l22337 B5E4                               l22273 A674  
                             l22265 A61A                               l22257 A586  
                             l22601 0050                               l22441 9AB8  
                             l23241 2B5A                               l23233 2AEE  
                             l23225 2A46                               l23217 29EE  
                             l23209 29A0                               l23161 26F2  
                             l23153 26A6                               l23145 2668  
                             l23137 2630                               l23129 25F0  
                             l23321 EE80                               l23313 EE32  
                             l23305 F5B2                               l16121 F970  
                             l24041 DE02                               l24033 DDB0  
                             l25001 91C6                               l24121 A39C  
                             l24113 A35E                               l24017 F2F6  
                             l24009 CB90                               l24201 9466  
                             l20763 F8FA                               l20755 F8C2  
                             l20771 FCCE                               l20843 F792  
                             l20835 F75A                               l20827 0134  
                             l20595 82BE                               l20587 8298  
                             l20579 826A                               l20499 8062  
                             l20851 FBD0                               l20915 E6D6  
                             l20907 E68A                               l20931 E38C  
                             l20691 3844                               l20667 36DE  
                             l20659 368C                               l20747 3ACA  
                             l20819 FFB4                               l22363 D416  
                             l22355 D3A0                               l22347 D346  
                             l23083 32E0                               l23075 3278  
                             l23067 31BC                               l21387 41F4  
                             l21379 41A4                               l21563 406A  
                             l21555 3FC6                               l21539 3EF8  
                             l21547 3F40                               l21491 3CC4  
                             l21483 3C7C                               l21475 3C08  
                             l21467 3BBC                               l21459 3B3C  
                             l23403 F1B0                               l22371 021C  
                             l21643 F6F8                               l21299 FE44  
                             l22427 9EA0                               l22419 9DF4  
                             l21731 61AE                               l21723 7BF4  
                             l21715 7BB2                               l22515 DCA8  
                             l22507 DC06                               l21619 DD00  
                             l22187 4A52                               l22179 49EA  
                             l22523 88D2                               l22339 B616  
                             l22283 B4AC                               l22275 A6B8  
                             l22267 A626                               l22259 A5EE  
                             l22195 B304                               l22611 007A  
                             l22603 0062                               l22443 9AD4  
                             l23251 2BB8                               l23243 2B76  
                             l23235 2B0E                               l23227 2A68  
                             l23219 2A02                               l23171 2790  
                             l23163 2714                               l23155 26BC  
                             l23147 267A                               l23139 263E  
                             l23315 EE50                               l23323 EE86  
                             l23411 1538                               l24051 F9B0  
                             l16123 F9A2                               l24035 DDC8  
                             l24043 DE2E                               l25011 92B2  
                             l25003 91F4                               l24131 A3E6  
                             l24123 A3AE                               l24115 A382  
                             l24107 A316                               l24027 F346  
                             l24019 F306                               l24211 9496  
                             l24203 9474                               l20765 F8FC  
                             l20757 F8DE                               l20773 FCEC  
                             l20845 F7A8                               l20837 F766  
                             l20829 014A                               l20861 F1F4  
                             l20589 829C                               l20597 82C0  
                             l20853 FBE2                               l20917 E6E6  
                             l20909 E69E                               l20933 E390  
                             l20925 E354                               l20693 3852  
                             l20669 36FE                               l20677 378E  
                             l20941 C294                               l22365 D422  
                             l22357 D3D8                               l22349 D34C  
                             l23077 32CA                               l23085 32F2  
                             l23093 334E                               l23069 320A  
                             l22381 EB2A                               l21397 4280  
                             l21389 4200                               l21565 407A  
                             l21557 3FD6                               l21549 3F70  
                             l21493 3CDC                               l21477 3C1C  
                             l21469 3BD8                               l23405 F1B4  
                             l23333 D180                               l23341 D1C2  
                             l23325 D13E                               l21645 F708  
                             l21653 F752                               l22429 9ECC  
                             l21581 C8B2                               l21573 C83A  
                             l21813 653A                               l21805 64EC  
                             l21741 61FA                               l21725 7C6A  
                             l21717 7BCE                               l21661 78F4  
                             l22509 DC16                               l22517 DCBA  
                             l22189 4A5A                               l22541 899C  
                             l22525 8904                               l22293 B4C4  
                             l22277 A6CC                               l22269 A632  
                             l22197 B308                               l22701 039C  
                             l22621 00D4                               l22613 0092  
                             l22461 9B5A                               l22445 9AFE  
                             l22437 9AA8                               l23261 2C56  
                             l23253 2BD4                               l23245 2B7A  
                             l23237 2B3A                               l23229 2A90  
                             l23181 2826                               l23173 27B2  
                             l23165 2736                               l23157 26D0  
                             l23149 268A                               l23317 EE68  
                             l23309 EE12                               l23501 197E  
                             l23421 1596                               l23413 1540  
                             l24053 F9C2                               l16117 F960  
                             l16141 CD9E                               l16133 CD2C  
                             l24045 DE40                               l24037 DDF6  
                             l25101 7188                               l25013 92E0  
                             l25005 9272                               l24141 A49C  
                             l24125 A3B2                               l24117 A386  
                             l24133 A406                               l24301 FF2A  
                             l16221 FF4A                               l20791 EEE4  
                             l20783 EECA                               l20759 F8E8  
                             l20767 F8FE                               l20775 FCF2  
                             l20839 F772                               l20863 F20C  
                             l20855 FBFA                               l20847 FBBA  
                             l20935 E3B8                               l20927 E36C  
                             l20695 385A                               l20687 37F6  
                             l20679 37A4                               l20951 C34E  
                             l20943 C2B6                               l21903 FC9A  
                             l22367 D442                               l22359 D404  
                             l23095 339C                               l23087 3338  
                             l22391 EB7C                               l22383 EB36  
                             l22375 EAFC                               l21399 42A4  
                             l21559 3FF2                               l21495 3D06  
                             l21487 3C90                               l23407 F1B8  
                             l23343 D1E6                               l23335 D1B0  
                             l23351 D228                               l23327 D14E  
                             l21591 C93C                               l21583 C8BA  
                             l21575 C866                               l21567 C818  
                             l21751 629C                               l21815 6574  
                             l21743 6230                               l21735 61E4  
                             l21639 DD94                               l21831 F166  
                             l21823 F0EA                               l22551 8A4E  
                             l22543 89CE                               l22535 8936  
                             l22287 B4BE                               l22279 A6E2  
                             l22199 B320                               l22711 0402  
                             l22631 00EA                               l22615 00A8  
                             l22607 0068                               l22471 9BA8  
                             l22439 9AA8                               l23271 2D32  
                             l23263 2C5E                               l23255 2BE4  
                             l23239 2B56                               l23247 2B8A  
                             l23191 28AC                               l23183 2836  
                             l23175 27C4                               l23167 275A  
                             l23159 26DE                               l23319 EE6C  
                             l23511 1A0E                               l23503 198E  
                             l23415 154C                               l24055 F9CA  
                             l16119 F96C                               l16143 CDE2  
                             l16135 CD3A                               l16127 CD06  
                             l24047 DE72                               l24151 FDFA  
                             l25031 F954                               l25023 F90E  
                             l25103 7194                               l25015 92F2  
                             l24311 FB34                               l24063 B160  
                             l24143 A4D4                               l24135 A41C  
                             l24127 A3C6                               l24303 FF2E  
                             l25111 E878                               l16231 FF5C  
                             l16223 FF4E                               l24223 9500  
                             l24207 948A                               l20793 EEF0  
                             l20785 EED0                               l20769 FCC6  
                             l20777 01EE                               l20881 F270  
                             l20873 F232                               l20865 F218  
                             l20849 FBC2                               l20937 E3D6  
                             l20929 E37C                               l20697 3882  
                             l20689 381C                               l20961 C3D4  
                             l20953 C36A                               l20945 C2C2  
                             l23097 33B2                               l22393 EB7E  
                             l22385 EB44                               l22377 EB0C  
                             l21497 3D16                               l21489 3CA0  
                             l21921 C428                               l23409 F1CE  
                             l23345 D216                               l23337 D1B2  
                             l23329 D156                               l21649 F724  
                             l23281 F7F0                               l21585 C8C6  
                             l21577 C884                               l21569 C834  
                             l21817 6590                               l21761 638C  
                             l21753 6300                               l21729 619E  
                             l21673 7940                               l21665 78F4  
                             l21657 78E4                               l21825 F11C  
                             l22561 8A9A                               l22553 8A66  
                             l22537 8964                               l22545 89E4  
                             l22801 095E                               l22721 04A4  
                             l22713 043C                               l22641 0124  
                             l22633 0100                               l22625 00DA  
                             l22617 00B6                               l22609 0078  
                             l22457 9B1A                               l22465 9B60  
                             l22449 9B04                               l23265 2CB8  
                             l23257 2C12                               l23249 2B9A  
                             l23193 28C2                               l23185 2856  
                             l23177 27DA                               l23169 276C  
                             l23361 E466                               l23353 E418  
                             l23601 C09C                               l23521 1AC6  
                             l23513 1A50                               l23505 19AE  
                             l23441 164C                               l23433 15BC  
                             l23425 159C                               l23417 1566  
                             l24057 F9D2                               l16137 CD6C  
                             l16129 CD20                               l24161 FE1E  
                             l24153 FDFC                               l24145 FDF0  
                             l25025 F938                               l25201 CE7C  
                             l25041 6E00                               l25017 931A  
                             l25009 928E                               l24321 FB54  
                             l24313 FB38                               l24081 B220  
                             l24073 B1BA                               l24065 B166  
                             l24137 A436                               l24129 A3E2  
                             l24401 52A6                               l24305 FF30  
                             l25121 E8A6                               l25113 E880  
                             l16225 FF50                               l16217 FF34  
                             l24241 955A                               l24225 9504  
                             l24217 949E                               l20795 EEFC  
                             l20787 EED4                               l20779 EEAC  
                             l20875 F23A                               l20867 F21C  
                             l20859 F1F2                               l20891 E648  
                             l20939 E3F8                               l20699 38BA  
                             l20963 C3E8                               l20955 C396  
                             l20947 C2E0                               l21915 FCC2  
                             l21907 FCA0                               l23099 33BA  
                             l22395 EB88                               l22387 EB4E  
                             l22379 EB22                               l21499 3D42  
                             l21931 C4CC                               l21923 C434  
                             l23347 D218                               l23339 D1B6  
                             l23283 F800                               l23275 F7B6  
                             l21587 C8D0                               l21579 C8A4  
                             l21819 65C4                               l21771 6402  
                             l21763 63C4                               l21747 6236  
                             l21739 61E4                               l21691 7A40  
                             l21683 79C2                               l21675 7978  
                             l21667 790C                               l21595 ECDE  
                             l22571 8ADC                               l22563 8AAA  
                             l22547 8A1A                               l22539 896A  
                             l21851 868C                               l21843 863C  
                             l21835 85D6                               l22811 0A38  
                             l22803 0994                               l22707 03CE  
                             l22651 0168                               l22635 010E  
                             l22619 00C6                               l22467 9B8C  
                             l22459 9B4A                               l23267 2D0A  
                             l23259 2C3E                               l23195 28D0  
                             l23179 27F6                               l23187 288E  
                             l23371 E4B8                               l23363 E476  
                             l23355 E428                               l23291 F560  
                             l23611 C0D4                               l23603 C0B0  
                             l23531 1BAE                               l23523 1B14  
                             l23507 19C0                               l23451 1734  
                             l23443 1686                               l23435 161A  
                             l23427 15B6                               l23419 1576  
                             l24059 F9EE                               l16139 CD8C  
                             l24163 FE20                               l24155 FE14  
                             l24147 FDF4                               l25027 F946  
                             l25211 CEC0                               l25203 CE86  
                             l25051 6E62                               l25043 6E08  
                             l25035 6DDA                               l25019 936E  
                             l24323 FB68                               l24315 FB3C  
                             l24307 FB2C                               l24083 B232  
                             l24091 B28E                               l24075 B1DA  
                             l24067 B17A                               l24139 A460  
                             l24411 5384                               l24403 52B6  
                             l24331 4F72                               l16411 01A4  
                             l25131 E8F2                               l25123 E8BA  
                             l25115 E888                               l25107 E858  
                             l16227 FF56                               l16219 FF3C  
                             l24219 94EA                               l24171 9392  
                             l20797 EF12                               l20789 EEE0  
                             l20885 FF62                               l20877 F23E  
                             l20893 E650                               l20957 C3B2  
                             l20949 C330                               l20965 C3EE  
                             l20981 8302                               l22389 EB6C  
                             l22901 222E                               l23381 CC92  
                             l21941 C54A                               l21933 C4F8  
                             l21925 C452                               l23349 D21C  
                             l22397 9CDA                               l23277 F7C6  
                             l21589 C8F2                               l21765 63E0  
                             l21749 6264                               l21685 79D8  
                             l21693 7A6C                               l21677 798E  
                             l21669 793A                               l21597 ECFE  
                             l21829 F128                               l22573 8AEC  
                             l22565 8ABC                               l22557 8A7A  
                             l22549 8A2A                               l21861 86F6  
                             l21853 869E                               l21845 8656  
                             l21837 8602                               l22805 09A4  
                             l22813 0A96                               l22741 055C  
                             l22709 03EC                               l22661 018A  
                             l22629 00E0                               l22493 9C28  
                             l22485 9BE4                               l22477 9BC2  
                             l23269 2D26                               l23197 28E4  
                             l23189 289E                               l23365 E47A  
                             l23373 E4BC                               l23613 C0E2  
                             l23605 C0B6                               l23541 1C58  
                             l23533 1BF4                               l23525 1B26  
                             l23509 19EE                               l23461 17CE  
                             l23453 174A                               l23445 16E4  
                             l23437 1636                               l23701 B9FE  
                             l24501 610E                               l24421 5D0C  
                             l24165 FE22                               l24157 FE18  
                             l24149 FDF8                               l25221 CF00  
                             l25205 CE98                               l25061 6EAE  
                             l25045 6E1E                               l25037 6DE4  
                             l17301 F69E                               l24317 FB4E  
                             l24309 FB30                               l24093 B2A6  
                             l24085 B244                               l24077 B1EA  
                             l24069 B1A6                               l24413 538A  
                             l24405 52D6                               l24341 4FB2  
                             l24333 4F82                               l24325 4F26  
                             l16421 01BA                               l16413 01AE  
                             l25133 E8F6                               l25125 E8C6  
                             l25117 E890                               l25109 E866  
                             l16229 FF5A                               l24245 9572  
                             l24237 9534                               l24229 9520  
                             l24181 93E6                               l24173 939C  
                             l25141 9896                               l25301 7CBE  
                             l20799 EF16                               l20887 FF6A  
                             l20879 F25A                               l20895 E656  
                             l20959 C3D2                               l20991 8372  
                             l20983 830E                               l20967 82E6  
                             l22911 227A                               l22903 224C  
                             l22831 1DFE                               l22823 1DB4  
                             l23383 CCE4                               l23375 CBE8  
                             l21935 C514                               l21927 C492  
                             l21943 C550                               l21919 C406  
                             l21951 9F2A                               l22399 9CF4  
                             l23279 F7D6                               l21775 6408  
                             l21759 6318                               l21695 7AB2  
                             l21679 79A6                               l21599 ED1E  
                             l22583 8B38                               l22575 8B00  
                             l22567 8ACA                               l22559 8A8A  
                             l21871 876E                               l21863 8710  
                             l21855 86B6                               l21847 8668  
                             l21839 862E                               l22815 0AA2  
                             l22807 09CC                               l22743 0578  
                             l22735 052E                               l22727 04C6  
                             l22719 0454                               l22671 01EE  
                             l22663 01A6                               l22655 016E  
                             l22647 0136                               l22639 0114  
                             l22591 000C                               l22495 9C76  
                             l22487 9C14                               l22479 9BDE  
                             l23199 28F2                               l23367 E49C  
                             l23359 E45A                               l23631 A920  
                             l23295 F56C                               l23287 F54C  
                             l23615 C0E6                               l23623 C108  
                             l23607 C0BC                               l23551 1CDC  
                             l23543 1C6E                               l23519 1A66  
                             l23527 1B48                               l23471 1816  
                             l23463 17E4                               l23455 177A  
                             l23447 16F6                               l23711 BABC  
                             l23703 BA0E                               l24511 617C  
                             l24503 6116                               l24423 5D1E  
                             l24159 FE1C                               l16431 FAD6  
                             l16423 FA9C                               l25223 CF10  
                             l25215 CECC                               l25207 CEAA  
                             l25071 6F02                               l25055 6E6C  
                             l25047 6E3C                               l25039 6DF4  
                             l17311 F6A8                               l17303 F6A0  
                             l24319 FB52                               l24087 B256  
                             l24079 B1F2                               l24415 538E  
                             l24407 5314                               l24343 4FD4  
                             l24335 4F8A                               l24327 4F2E  
                             l16415 01B2                               l25127 E8EA  
                             l25119 E892                               l24191 9422  
                             l24183 93EA                               l24167 9380  
                             l25151 9910                               l25143 98A6  
                             l25231 9606                               l25311 7D1C  
                             l25303 7CC4                               l20889 FF76  
                             l20897 E65A                               l20993 8380  
                             l20985 8332                               l20977 82F8  
                             l20969 82EE                               l22913 22A4  
                             l22921 22D4                               l22841 1EAC  
                             l22825 1DCE                               l23377 CC24  
                             l21937 C534                               l21929 C4B0  
                             l23393 F170                               l21961 A0F8  
                             l21953 9F48                               l21945 9EF0  
                             l21793 64B2                               l21785 645C  
                             l21777 6432                               l21769 63E6  
                             l21697 7ADE                               l22585 8B9E  
                             l21881 881C                               l21873 877E  
                             l21865 8722                               l21857 86E8  
                             l21849 867A                               l22817 0ABE  
                             l22809 0A02                               l22745 0580  
                             l22737 0536                               l22729 0512  
                             l22681 027A                               l22673 0204  
                             l22657 0184                               l22649 0152  
                             l22593 0020                               l22497 9C9C  
                             l23369 E4A8                               l23641 A958  
                             l23633 A936                               l23297 F582  
                             l23289 F550                               l23617 C0F8  
                             l23609 C0C2                               l23801 AD16  
                             l23561 1D64                               l23553 1CEC  
                             l23545 1C76                               l23529 1B78  
                             l23481 18A0                               l23473 1826  
                             l23465 17F4                               l23457 17B2  
                             l23449 1718                               l23721 BAFC  
                             l23705 BA50                               l24521 FD56  
                             l24441 5DD0                               l24505 6128  
                             l24433 5D66                               l24425 5D3C  
                             l17401 016C                               l16433 FADC  
                             l16425 FA9C                               l25225 CF14  
                             l25217 CEE8                               l25209 CEB4  
                             l24601 5954                               l25057 6E78  
                             l25049 6E4C                               l17161 C71A  
                             l17153 C6C6                               l17321 F6B2  
                             l17313 F6AA                               l17305 F6A2  
                             l24097 B2BA                               l24409 5326  
                             l24361 5076                               l24353 501C  
                             l24417 53AC                               l24329 4F54  
                             l16417 01B6                               l25129 E8EE  
                             l24281 95FA                               l24257 9590  
                             l24177 93C6                               l24169 938A  
                             l25161 9990                               l25153 992E  
                             l25145 98AE                               l25137 9874  
                             l25241 9644                               l25233 960E  
                             l25401 7F7C                               l25321 7D46  
                             l25313 7D26                               l25305 7CC8  
                             l20899 E65E                               l20995 83A4  
                             l20987 8338                               l20979 8300  
                             l22931 2380                               l22923 22F2  
                             l22851 2054                               l22843 1EC2  
                             l22835 1E04                               l22827 1DDE  
                             l23379 CC2E                               l21939 C536  
                             l23395 F18C                               l23731 C568  
                             l21955 A022                               l21947 9F00  
                             l21787 6494                               l21779 6444  
                             l21699 7AFC                               l21971 C9AA  
                             l22579 8B1A                               l21883 8844  
                             l21875 87A4                               l21867 8748  
                             l21891 8892                               l22771 06D0  
                             l22755 05BA                               l22747 059C  
                             l22739 0554                               l22691 0302  
                             l22675 0224                               l22595 0030  
                             l22499 9CD6                               l23635 A93A  
                             l23643 A964                               l23627 A8E0  
                             l23299 F594                               l23619 C0FC  
                             l23571 BFA6                               l23811 AD86  
                             l23803 AD24                               l23555 1CF4  
                             l23547 1CC2                               l23539 1C0A  
                             l23483 18F2                               l23491 191A  
                             l23707 BA6E                               l24531 FD72  
                             l24523 FD5A                               l24507 6138  
                             l24451 5E58                               l24443 5DE6  
                             l24435 5D76                               l24427 5D4C  
                             l17403 017A                               l16435 FADE  
                             l16427 FAB2                               l25227 CF20  
                             l25219 CEEE                               l24611 59A0  
                             l24603 5968                               l25075 6F54  
                             l25067 6EB8                               l25059 6E92  
                             l25091 710A                               l17171 C77E  
                             l17163 C72A                               l17155 C6E2  
                             l17331 F6BC                               l17323 F6B4  
                             l17315 F6AC                               l17307 F6A4  
                             l17411 01BE                               l24099 B2DC  
                             l24371 50E2                               l24363 5090  
                             l24355 5040                               l24347 4FE8  
                             l24339 4F92                               l16419 01B8  
                             l24291 FF12                               l24267 95A2  
                             l24195 942E                               l24187 9410  
                             l24179 93D2                               l25171 99D0  
                             l25163 99A4                               l25155 9948  
                             l25147 98C4                               l25139 987C  
                             l25251 96DE                               l25243 965A  
                             l25235 9612                               l25403 7F7E  
                             l25331 7D96                               l25323 7D5C  
                             l25315 7D2C                               l25307 7CEE  
                             l20997 83AA                               l20989 834E  
                             l22941 2400                               l22925 230E  
                             l22909 2260                               l22861 20DA  
                             l22853 2070                               l22845 1F04  
                             l22837 1E2E                               l22829 1DEE  
                             l23389 CCFC                               l23397 F190  
                             l23741 C5F0                               l23733 C582  
                             l21957 A074                               l21949 9F10  
                             l21789 64AC                               l21981 CA20  
                             l21973 C9B2                               l21965 C968  
                             l21893 88AC                               l21885 886A  
                             l21877 87C6                               l21869 875A  
                             l22781 0762                               l22773 06FE  
                             l22765 06AC                               l22757 0672  
                             l22749 05A4                               l22693 0320  
                             l22677 0242                               l22669 01CE  
                             l22589 0000                               l23661 AA04  
                             l23645 A976                               l23629 A8F6  
                             l23573 BFBC                               l23813 AD8A  
                             l23805 AD2A                               l23557 1D0E  
                             l23549 1CD4                               l23493 1952  
                             l23477 182C                               l23469 17FA  
                             l23565 1DA0                               l23709 BAA8  
                             l23821 FFDC                               l23901 EBA4  
                             l24533 FD76                               l24525 FD62  
                             l24517 FD40                               l24509 616A  
                             l24461 5EA2                               l24453 5E62  
                             l24445 5DFC                               l24437 5D96  
                             l24429 5D5A                               l17421 C13C  
                             l17413 C120                               l17405 017C  
                             l24541 D65E                               l16429 FAC2  
                             l25229 CF24                               l24621 59F2  
                             l24613 59B2                               l24701 D920  
                             l25093 713C                               l25085 7068  
                             l25077 6F9A                               l17165 C746  
                             l17157 C706                               l17341 F6C6  
                             l17333 F6BE                               l17325 F6B6  
                             l17317 F6AE                               l17309 F6A6  
                             l24381 5136                               l24373 50FC  
                             l24357 5062                               l24349 5008  
                             l24293 FF14                               l24285 FF04  
                             l24277 95DE                               l24269 95C8  
                             l25181 9A56                               l25173 99EA  
                             l25157 9966                               l25149 98F6  
                             l25261 9746                               l25253 96FC  
                             l25245 968C                               l25237 962C  
                             l25501 E9E8                               l25413 7FA8  
                             l25405 7F82                               l25341 7DD4  
                             l25333 7D9A                               l25325 7D6C  
                             l25317 7D3E                               l25309 7CF6  
                             l23831 0258                               l20999 83E4  
                             l22951 24BC                               l22943 2428  
                             l22927 233C                               l22919 22B8  
                             l22855 2086                               l22847 1F1A  
                             l22839 1E48                               l23399 F198  
                             l23751 C622                               l23735 C59A  
                             l21959 A0C6                               l21799 64CC  
                             l21991 CA8C                               l21983 CA4C  
                             l21975 C9DE                               l21967 C978  
                             l21895 88B8                               l21879 87FA  
                             l22783 07B2                               l22759 0686  
                             l22775 0740                               l22687 029C  
                             l22679 025E                               l22599 0036  
                             l23671 AA44                               l23663 AA14  
                             l23647 A97E                               l23639 A946  
                             l23591 C046                               l23575 BFE6  
                             l23583 C00C                               l23815 AD9E  
                             l23807 AD30                               l23567 1DB0  
                             l23559 1D44                               l23495 196A  
                             l23479 186A                               l23727 BB14  
                             l23719 BADC                               l23823 FFE2  
                             l23903 EBB6                               l23911 EBC2  
                             l24527 FD66                               l24519 FD44  
                             l24471 5F16                               l24463 5ECE  
                             l24455 5E80                               l24447 5E20  
                             l24439 5DC0                               l17431 C19A  
                             l17423 C13E                               l17415 C124  
                             l17407 017E                               l24551 D6A0  
                             l24543 D66E                               l25191 CE2C  
                             l24631 5A66                               l24623 5A02  
                             l24615 59C6                               l24607 597E  
                             l24703 D92A                               l25095 7168  
                             l25079 701E                               l25087 70E8  
                             l17167 C756                               l17159 C70A  
                             l17175 C7D4                               l17351 F6D0  
                             l17343 F6C8                               l17335 F6C0  
                             l17327 F6B8                               l17319 F6B0  
                             l24391 51BC                               l24383 514A  
                             l24375 510C                               l24367 50A4  
                             l24295 FF20                               l24287 FF08  
                             l24199 9454                               l25183 9A66  
                             l25167 99BA                               l25175 9A14  
                             l25159 9980                               l25271 9784  
                             l25263 9758                               l25255 9716  
                             l25247 96A6                               l25239 963C  
                             l25431 023E                               l25503 EA42  
                             l25423 022E                               l25511 D73C  
                             l25415 7FAC                               l25407 7F94  
                             l25351 7E0C                               l25335 7DA2  
                             l25319 7D42                               l22953 250E  
                             l22961 2536                               l22945 2438  
                             l22937 2394                               l22929 2368  
                             l22881 2174                               l22873 2112  
                             l22865 20E0                               l22857 20B2  
                             l22849 1FA4                               l23753 C632  
                             l23737 C5A4                               l21993 CA9C  
                             l21969 C99A                               l22793 08DC  
                             l22785 07C6                               l22689 02DA  
                             l23681 AA78                               l23665 AA20  
                             l23649 A9B4                               l23657 A9D4  
                             l23593 C07C                               l23585 C01E  
                             l23577 BFFC                               l23809 AD48  
                             l23489 1908                               l23841 8BDC  
                             l23833 0264                               l23825 FFF4  
                             l23921 EBF4                               l23913 EBD6  
                             l23905 EBBA                               l24529 FD6A  
                             l24481 5F74                               l24473 5F2A  
                             l24465 5EDE                               l24457 5E90  
                             l24449 5E4A                               l17441 C1C8  
                             l17433 C19C                               l17425 C144  
                             l17417 C138                               l17409 0180  
                             l24561 D706                               l24553 D6B6  
                             l24537 D642                               l25193 CE36  
                             l24641 5ABA                               l24633 5A82  
                             l24625 5A1E                               l24617 59D8  
                             l24609 5990                               l24721 D990  
                             l24713 D97A                               l24705 D932  
                             l25089 70EE                               l17169 C766  
                             l17361 F6DA                               l17353 F6D2  
                             l17345 F6CA                               l17337 F6C2  
                             l17329 F6BA                               l24393 51C4  
                             l24385 5158                               l24377 511E  
                             l24801 DBD2                               l24297 FF24  
                             l24289 FF0E                               l25185 9AA2  
                             l25169 99C2                               l25177 9A26  
                             l25281 97D8                               l25273 979E  
                             l25257 9726                               l25249 96C4  
                             l25505 EA46                               l25425 0232  
                             l25441 AFF4                               l25521 D80E  
                             l25513 D73C                               l25601 5716  
                             l25417 7FB4                               l25361 7E3E  
                             l25353 7E1C                               l25329 7D72  
                             l21899 FC88                               l22963 257C  
                             l22947 2472                               l22883 2190  
                             l22867 20FC                               l22859 20CA  
                             l22875 214A                               l22939 23CA  
                             l23755 C674                               l23739 C5DC  
                             l23763 F460                               l21995 CAAE  
                             l21987 CA6C                               l21979 C9F2  
                             l22795 0918                               l22787 0852  
                             l22699 0376                               l23683 AA8A  
                             l23675 AA4E                               l23667 AA30  
                             l23659 A9F2                               l23579 C000  
                             l23587 C02A                               l23819 ADCE  
                             l23691 B98C                               l23851 8C5E  
                             l23843 8C04                               l23835 8BA2  
                             l23827 FFF8                               l23931 EC16  
                             l23923 EBF8                               l23915 EBDA  
                             l23907 EBBC                               l24491 60B4  
                             l24475 5F3E                               l24467 5EFA  
                             l24483 5F96                               l17451 C1FA  
                             l17443 C1CE                               l17435 C1A2  
                             l17427 C146                               l17419 C13A  
                             l24563 D716                               l24555 D6D2  
                             l24547 D674                               l24539 D64A  
                             l25195 CE48                               l24651 5B0E  
                             l24635 5A9A                               l24627 5A36  
                             l24619 59EA                               l24643 5AC2  
                             l24723 D994                               l24731 D9D8  
                             l24707 D93C                               l17371 F6E4  
                             l17363 F6DC                               l17355 F6D4  
                             l17347 F6CC                               l17339 F6C4  
                             l24811 FDE2                               l24395 522C  
                             l24387 515E                               l24803 DBD8  
                             l24299 FF28                               l25179 9A38  
                             l25291 9832                               l25275 97B4  
                             l25267 976E                               l25283 97E0  
                             l25259 9736                               l25507 EA4E  
                             l25427 023A                               l25443 B076  
                             l25435 AFB8                               l25523 D812  
                             l25515 D760                               l25531 F370  
                             l25611 57CC                               l25603 5728  
                             l25371 7E7C                               l25355 7E2E  
                             l25363 7E58                               l25347 7DE8  
                             l25339 7DAC                               l23781 026E  
                             l22981 2D64                               l22949 24A2  
                             l22893 21AA                               l22869 210C  
                             l23757 C696                               l23749 C610  
                             l23773 F4A2                               l23765 F464  
                             l21989 CA74                               l22797 0928  
                             l23685 AA98                               l23677 AA5A  
                             l23669 AA34                               l23589 C03E  
                             l23693 B9A6                               l23861 8CBE  
                             l23853 8C70                               l23845 8C10  
                             l23837 8BC6                               l23829 FFFA  
                             l23941 EC32                               l23933 EC18  
                             l23925 EBFC                               l23917 EBDE  
                             l23909 EBC0                               l24485 606C  
                             l24477 5F4C                               l24469 5F00  
                             l24493 60BA                               l24821 D85C  
                             l17461 C228                               l17453 C1FC  
                             l17445 C1D0                               l17437 C1A4  
                             l17429 C170                               l24557 D6E2  
                             l24549 D68E                               l25197 CE62  
                             l25189 CE22                               l24661 5B90  
                             l24653 5B3A                               l24645 5AD4  
                             l24629 5A40                               l24637 5AA6  
                             l24581 58A6                               l24573 5870  
                             l24733 D9E2                               l24725 D998  
                             l24709 D962                               l17381 F6EE  
                             l17373 F6E6                               l17365 F6DE  
                             l17357 F6D6                               l17349 F6CE  
                             l17293 F690                               l24397 5240  
                             l24389 518C                               l24741 BE28  
                             l25293 986E                               l25277 97B8  
                             l25269 9776                               l25285 97F2  
                             l25461 ED7E                               l25445 B0C8  
                             l25437 AFD8                               l25525 D81A  
                             l25517 D7C2                               l25533 F378  
                             l25605 573A                               l25613 5822  
                             l25621 FC42                               l25453 E4D4  
                             l25365 7E6A                               l25357 7E38  
                             l25373 7E92                               l25349 7DFA  
                             l22991 2DB4                               l22983 2D74  
                             l22975 2D36                               l22959 2524  
                             l22895 21D6                               l22879 2164  
                             l23759 C6BA                               l23767 F474  
                             l21999 F274                               l22799 093C  
                             l23687 AA9C                               l23679 AA5E  
                             l23791 ACB6                               l23783 AC5A  
                             l23695 B9BE                               l23871 8D06  
                             l23863 8CCC                               l23855 8C7C  
                             l23847 8C44                               l23839 8BD8  
                             l23935 EC1A                               l23927 EC00  
                             l23951 F41C                               l23943 F3FE  
                             l24495 60DE                               l24487 607C  
                             l24479 5F60                               l24815 01D6  
                             l24831 D8CC                               l24823 D864  
                             l17471 C252                               l17463 C246  
                             l17455 C21E                               l17447 C1F2  
                             l17439 C1C6                               l24567 D71C  
                             l24559 D6EC                               l25199 CE74  
                             l24671 5C20                               l24663 5BA8  
                             l24655 5B56                               l24647 5AEC  
                             l24639 5AA8                               l24591 5904  
                             l24583 58B8                               l24575 5872  
                             l24735 D9F6                               l24719 D984  
                             l17383 F6F0                               l17375 F6E8  
                             l17367 F6E0                               l17359 F6D8  
                             l17295 F696                               l24807 FDB8  
                             l24399 527E                               l24751 BE6E  
                             l24743 BE3C                               l17391 FD12  
                             l25287 9804                               l25279 97CA  
                             l25471 EDFA                               l25463 EDAE  
                             l25447 B0D2                               l25439 AFEA  
                             l25527 D828                               l25519 D7EA  
                             l25535 F394                               l25607 5766  
                             l25615 584E                               l25551 5422  
                             l25543 53D4                               l25623 FC54  
                             l25455 E58A                               l25391 7F40  
                             l25383 7ED2                               l25375 7EA4  
                             l25367 7E74                               l25359 7E3A  
               SDCard_read512@count 05E6                               l18361 AAC6  
                             l19401 4B4C                               l22985 2D94  
                             l22977 2D3E                               l22969 2592  
                             l22897 21EE                               l23777 F4CC  
                             l23769 F47C                               l23793 ACC8  
                             l23785 AC68                               l23697 B9C8  
                             l23881 8D44                               l23873 8D0E  
                             l23865 8CD2                               l23857 8C82  
                             l23849 8C4E                               l23937 EC1C  
                             l23929 EC12                               l23961 F43E  
                             l23953 F420                               l23945 F402  
                             l24497 60F0                               l24489 60A4  
                             l24833 D902                               l24825 D87C  
                             l24817 D82E                               l17481 C284  
                             l17473 C270                               l17465 C248  
                             l17457 C220                               l17449 C1F4  
                             l24569 D738                               l24673 5C3E  
                             l24681 5C88                               l24665 5BAC  
                             l24657 5B6E                               l24649 5AFA  
                             l24593 5914                               l24585 58C6  
                             l24577 5882                               l24737 DA02  
                             l24729 D9B4                               l17377 F6EA  
                             l17369 F6E2                               l17297 F69A  
                             l24809 FDD2                               l24761 BEDA  
                             l24753 BE7E                               l17393 FD18  
                             l17385 FD04                               l25481 EA5A  
                             l25289 9822                               l25473 EDFE  
                             l25465 EDCE                               l25449 B15C  
                             l25537 F3B8                               l25609 57AE  
                             l25561 548C                               l25545 53E6  
                             l25625 FC6A                               l25393 7F52  
                             l25385 7F24                               l25377 7EB6  
                             l25369 7E78                               l25297 7C6E  
                             l25801 71AC                               l18371 AB3E  
                             l18363 AB0C                               l19411 4B78  
                             l19403 4B5E                               l22995 2DBA  
                             l22979 2D4A                               l22899 2202  
                             l23795 ACD4                               l23787 AC9C  
                             l23699 B9EC                               l23891 8DB6  
                             l23867 8CD8                               l23859 8C96  
                             l23939 EC20                               l23963 F440  
                             l23955 F424                               l23947 F406  
                             l24499 60F8                               l24827 D88C  
                             l24835 D906                               l24819 D84C  
                             l17483 C286                               l17475 C276  
                             l17467 C24A                               l17459 C226  
                             l24691 5CD4                               l24683 5C98  
                             l24675 5C4E                               l24659 5B78  
                             l24595 5926                               l24587 58D8  
                             l24579 588A                               l17379 F6EC  
                             l17299 F69C                               l24931 DE80  
                             l24771 BF82                               l24763 BF1C  
                             l24755 BE96                               l24747 BE42  
                             l23971 CABA                               l17395 FD1A  
                             l17387 FD0E                               l24923 FAE6  
                             l25483 EA6C                               l25491 EAF6  
                             l25475 EE0E                               l25467 EDDE  
                             l25459 ED78                               l25539 F3E6  
                             l25571 5536                               l25563 54B8  
                             l25555 5434                               l25547 5404  
                             l25627 FC72                               l25395 7F64  
                             l25387 7F28                               l25299 7CA0  
                             l25811 71CC                               l25803 71BE  
                             l18381 ABC6                               l18373 AB4A  
                             l18365 AB22                               l18357 AAA8  
                             l19341 0208                               l19501 4DB6  
                             l19421 4B8C                               l19413 4B7C  
                             l19405 4B6C                               l22997 2E0A  
                             l22989 2D9A                               l23797 ACDA  
                             l23789 ACA6                               l23885 8D60  
                             l23877 8D2A                               l23869 8CF0  
                             l23893 8DE6                               l23965 F454  
                             l23957 F428                               l24837 D918  
                             l24829 D89A                               l17485 C28E  
                             l17477 C27C                               l17469 C250  
                             l24693 5CE2                               l24677 5C7C  
                             l24669 5BE2                               l24685 5C9E  
                             l24597 593E                               l24589 58F4  
                             l24941 DEFE                               l24933 DE84  
                             l24773 BF96                               l24765 BF30  
                             l24757 BEA6                               l24749 BE5E  
                             l24781 DB10                               l23981 CAC4  
                             l23973 CABC                               l17397 FD20  
                             l17389 FD10                               l24925 FB02  
                             l25485 EA90                               l25469 EDEE  
                             l25581 55F6                               l25573 5552  
                             l25565 54CA                               l25557 545E  
                             l25549 5414                               l25629 FC80  
                             l25397 7F6C                               l25389 7F30  
                             l25901 751C                               l25821 71F4  
                             l25813 71D0                               l25805 71C0  
                             l18391 AC04                               l18383 ABD2  
                             l18375 AB7C                               l18359 AAB8  
                             l19343 0216                               l19351 E2B8  
                             l19511 4DE0                               l19503 4DC4  
                             l19431 4BA0                               l19423 4B90  
                             l19415 4B80                               l19407 4B70  
                             l22999 2E34                               l23799 ACEE  
                             l23895 8E30                               l23887 8D9E  
                             l23959 F43A                               l17479 C27E  
                             l24695 5CEA                               l24687 5CB2  
                             l24679 5C86                               l24599 5950  
                             l16871 EFEC                               l24951 DF32  
                             l24943 DF10                               l24935 DEA8  
                             l24775 BFA2                               l24767 BF50  
                             l24759 BEC0                               l24791 DB80  
                             l24783 DB20                               l23991 CB26  
                             l23983 CAD8                               l23975 CABE  
                             l23967 CAB6                               l17399 FD3C  
                             l24927 FB1C                               l25487 EAEA  
                             l25479 EA54                               l25495 E9AC  
                             l25591 56A2                               l25583 5646  
                             l25575 5570                               l25567 5508  
                             l25559 546E                               l25399 7F74  
                             l25903 752E                               l25831 7238  
                             l25823 71FA                               l25815 71D4  
                             l25807 71C4                               l18393 AC28  
                             l18385 ABE0                               l18377 AB7E  
                             l18369 AB36                               l19601 CF4E  
                             l19353 E2D6                               l19345 E28A  
                             l19513 4DF0                               l19505 4DC6  
                             l19441 4BF4                               l19433 4BA4  
                             l19425 4B94                               l19417 4B84  
                             l19409 4B74                               l19361 4A7C  
                             l23889 8DA2                               l23897 0284  
                             l24697 5CFA                               l24689 5CC2  
                             l16881 F04C                               l16873 EFFE  
                             l24953 DF34                               l24945 DF14  
                             l24937 DECC                               l24929 DE7C  
                             l24769 BF70                               l24793 DB82  
                             l24785 DB32                               l17761 AE0A  
                             l23993 CB34                               l23985 CAE4  
                             l23977 CAC0                               l23969 CAB6  
                             l24961 EF66                               l25489 EAEE  
                             l25497 E9B2                               l25593 56C0  
                             l25585 5666                               l25577 5582  
                             l25569 5524                               l25905 753E  
                             l25841 72EE                               l25833 7246  
                             l25825 721C                               l25817 71D8  
                             l25809 71C8                               l18395 AC38  
                             l18387 ABFE                               l18379 AB8A  
                             l19611 CF84                               l19603 CF52  
                             l19355 E30C                               l19347 E29C  
                             l19523 4E50                               l19531 4EA6  
                             l19507 4DD4                               l19515 4DF2  
                             l19451 4C38                               l19443 4C04  
                             l19435 4BA8                               l19427 4B98  
                             l19419 4B88                               l19371 4ABC  
                             l19363 4A8A                               l23899 0280  
                             l16875 F014                               l16867 EFD2  
                             l24971 90F8                               l24955 DF36  
                             l24947 DF16                               l24939 DEFA  
                             l24795 DB92                               l24787 DB56  
                             l24779 DAF6                               l17763 AE16  
                             l23995 CB3E                               l23987 CAF6  
                             l23979 CAC2                               l24963 EF78  
                             l25499 E9C4                               l25595 56D2  
                             l25587 5682                               l25579 55D8  
                             l25851 7334                               l25843 72F2  
                             l25835 725E                               l25827 7220  
                             l25819 71DC                               l18397 AC46  
                             l18389 AC00                               l19621 CFC6  
                             l19613 CF9A                               l19605 CF60  
                             l19349 E2AE                               l19701 75D4  
                             l19541 4EFC                               l19533 4EB6  
                             l19525 4E5C                               l19517 4E10  
                             l19509 4DDC                               l19453 4C3A  
                             l19445 4C1A                               l19429 4B9C  
                             l19437 4BAC                               l19381 4AEC  
                             l19373 4ABE                               l19365 4A8C  
                             l16877 F024                               l16869 EFDA  
                             l24981 912A                               l24949 DF18  
                             l24797 DBA6                               l24789 DB6E  
                             l17773 AE9C                               l17765 AE1A  
                             l23997 CB48                               l23989 CB02  
                             l24957 EF40                               l25597 56E4  
                             l25589 5694                               l25861 737C  
                             l25853 7338                               l25845 72F4  
                             l25837 72CC                               l25829 7232  
                             l18399 AC48                               l19623 CFE4  
                             l19615 CFA2                               l19631 D006  
                             l19607 CF70                               l19703 75E4  
                             l19711 760C                               l19543 4EFE  
                             l19535 4EC6                               l19527 4E6A  
                             l19519 4E26                               l19471 4CC2  
                             l19463 4C8A                               l19455 4C44  
                             l19447 4C26                               l19439 4BD8  
                             l19391 4B14                               l19383 4AEE  
                             l19367 4A9C                               l19375 4AC4  
                             l19359 4A70                               l16879 F026  
                             l24991 9166                               l24983 913A  
                             l24799 DBC0                               l17783 AF3A  
                             l17775 AEA0                               l17767 AE4C  
                             l17791 AF9A                               l23999 CB52  
                             l24967 EFAE                               l24959 EF4A  
                             l25599 5704                               l25871 73A0  
                             l25855 7342                               l25847 730C  
                             l25839 72EA                               l19633 D016  
                             l19625 CFF4                               l19617 CFAE  
                             l19609 CF74                               l19641 DA0E  
                             l19553 FBFE                               l19801 78D6  
                             l19721 764E                               l19713 761C  
                             l19705 75F4                               l19545 4F04  
                             l19537 4EE6                               l19529 4EA4  
                             l19473 4CC6                               l19465 4C9A  
                             l19457 4C66                               l19481 4CE6  
                             l19449 4C2A                               l19393 4B24  
                             l19385 4AF4                               l19377 4AD4  
                             l19369 4AAC                               l19561 FA00  
                             l24993 916E                               l24977 9102  
                             l17785 AF6C                               l17777 AED2  
                             l17769 AE66                               l24969 EFC6  
                             l25873 73BC                               l25857 7350  
                             l25849 731E                               l19635 D026  
                             l19627 CFF6                               l19619 CFBC  
                             l19651 DA4E                               l19643 DA1C  
                             l19555 FC0A                               l19803 78D8  
                             l19715 7632                               l19707 7604  
                             l19811 65C8                               l19547 4F12  
                             l19539 4EF6                               l19483 4D0C  
                             l19491 4D62                               l19475 4CD4  
                             l19467 4CA8                               l19459 4C76  
                             l19395 4B34                               l19387 4B02  
                             l19379 4ADA                               l19563 FA14  
                             l19571 FA34                               l24995 9176  
                             l24979 9122                               l17787 AF92  
                             l17779 AF04                               l26595 CBA8  
                             l25891 748E                               l25883 73F4  
                             l25867 7386                               l25859 7366  
                             l19629 D000                               l19661 DAA4  
                             l19653 DA64                               l19645 DA2C  
                             l19557 FC1C                               l19741 76D0  
                             l19733 7686                               l19717 7642  
                             l19725 7662                               l19709 7606  
                             l19901 68B0                               l19821 6604  
                             l19813 65D4                               l19549 4F14  
                             l19493 4D88                               l19485 4D40  
                             l19477 4CD6                               l19469 4CB6  
                             l19397 4B36                               l19389 4B04  
                             l19581 D5D6                               l19573 D544  
                             l19565 FA20                               l24997 917E  
                             l24989 914A                               l17789 AF96  
                             l25893 74AA                               l25885 7442  
                             l25877 73EA                               l25869 739C  
                             l19671 DAE4                               l19663 DAB4  
                             l19655 DA6C                               l19647 DA30  
                             l19639 DA0C                               l19559 FC20  
                             l19751 7714                               l19743 76D6  
                             l19735 76A0                               l19727 7672  
                             l19719 764A                               l19911 6922  
                             l19903 68DE                               l19831 6636  
                             l19823 6614                               l19815 65E2  
                             l19495 4D98                               l19487 4D42  
                             l19479 4CE0                               l19399 4B3C  
                             l19591 D638                               l19575 D564  
                             l19567 FA24                               l24999 91A2  
                             l25895 74C0                               l25887 747A  
                             l25799 71A0                       ___fltol@sign1 050C  
                             l19665 DABE                               l19657 DA78  
                             l19649 DA3E                               l19761 776C  
                             l19753 7732                               l19745 76E6  
                             l19737 76B0                               l19729 7672  
                             l19681 7570                               l19921 6998  
                             l19913 694C                               l19841 6676  
                             l19833 6644                               l19825 661A  
                             l19817 65E4                               l19489 4D52  
                             l19577 D5A2                               l19585 D5E2  
                             l19569 FA30                               l25897 74CC  
                             l25889 748A                     __end_of___aldiv D038  
                             l19595 CF2E                               l19659 DA86  
                             l19667 DAC4                               l19771 77BA  
                             l19763 7772                               l19755 7734  
                             l19747 76FA                               l19739 76C0  
                             l19683 7580                               l19691 75A8  
                             l19675 7554                               l19931 69D2  
                             l19923 69A8                               l19907 6908  
                             l19915 6950                               l19851 66C0  
                             l19843 667C                               l19835 6646  
                             l19827 662A                               l19819 65F4  
                             l19499 4DAC                               l19587 D5F4  
                             l19579 D5CA                               l25899 750A  
                             l19597 CF30                               l19669 DAD4  
                             l19781 782C                               l19773 77E8  
                             l19765 777C                               l19757 7744  
                             l19749 7708                               l19693 75B8  
                             l19685 7590                               l19677 7560  
                             l19925 69B2                               l19933 69D8  
                             l19917 696A                               l19909 6914  
                             l19861 6710                               l19853 66CC  
                             l19845 669C                               l19837 6656  
                             l19829 6630                               l19941 FB82  
                             l19599 CF3E                               l19791 78A4  
                             l19783 7856                               l19767 778A  
                             l19759 7756                               l19695 75BE  
                             l19687 75A0                               l19679 756E  
                             l19951 E96E                               l19935 69DC  
                             l19927 69C2                               l19919 697E  
                             l19871 6752                               l19863 671C  
                             l19855 66D6                               l19847 66AC  
                             l19839 6666                               l19793 78BC  
                             l19777 7812                               l19785 785A  
                             l19769 779C                               l19697 75C4  
                             l19689 75A2                               l19953 E97E  
                             l19945 E902                               l19961 D242  
                             l19929 69D0                               l19881 67B4  
                             l19873 675E                               l19865 6728  
                             l19857 66EC                               l19795 78BE  
                             l19787 7874                               l19779 781E  
                             l19699 75D2                               l19955 E9A2  
                             l19947 E930                               l19971 D2CC  
                             l19963 D270                               l19891 684A  
                             l19883 67C0                               l19875 676E  
                             l19867 6736                               l19859 66F8  
                             l19939 FB72                               l19797 78C2  
                             l19789 788A                               l19957 E9A8  
                             l19949 E940                               l19973 D2DE  
                             l19965 D280                               l19893 6868  
                             l19885 67DC                               l19877 6788  
                             l19869 6742                       ?_bus_hold_req 0501  
                             l19799 78D0                               l19975 D2EC  
                             l19967 D2AE                               l19895 6872  
                             l19887 6806                               l19879 6798  
                             l19983 FE60                               l19991 D038  
                             l19977 D33C                               l19969 D2BE  
                             l19897 6880                               l19889 683C  
                             l19985 FE76                               l19993 D04E  
                             l19979 D342                               l19899 6892  
                             l19987 FE86                               l19997 D062  
                             l19999 D08C                               ?_labs 0504  
                   __end_of___almod DAF6                     __end_of___fladd 4F26  
                             ?_main 0501                               ?_dtoa 051E  
                             _G2POL 06B9                               _G3POL 06BA  
                   __end_of___fldiv 78E4                     __end_of___flneg FE98  
                             STR_10 F967                               STR_11 FAED  
                             STR_12 FD5B                               STR_20 F68E  
                             STR_21 F5C9                               STR_13 F446  
                             STR_22 FD92                               STR_14 FAD4  
                             STR_30 F35A                               STR_15 F9B9  
                             STR_23 F7F3                               STR_31 F78C  
                             STR_40 FABB                               STR_16 F769  
                             STR_24 F6FE                               STR_32 F54D  
                             STR_41 FA3C                               STR_17 F3EB  
                             STR_33 F3BC                               STR_25 F2F6  
                             STR_26 FFD0                               STR_42 FFCB  
                             STR_34 FC30                               STR_18 F722  
                             STR_50 FED8                               STR_43 FFC6  
                             STR_35 FF9D                               STR_19 F522  
                             STR_27 F257                               STR_51 FEE3  
                             STR_44 FBC1                               STR_36 F877  
                             STR_28 F328                               STR_60 FFB7  
                             STR_52 FF58                               STR_37 FC70  
                             STR_45 F746                               STR_61 FFE5  
                             STR_53 FF60                               STR_70 FBAA  
                             STR_38 F8D5                               STR_62 FF68  
                             STR_54 FFF6                               STR_46 FF50  
                             STR_39 FF9D                               STR_71 FB65  
                             STR_63 FF97                               STR_55 FFE9  
                             STR_47 F4F7                               STR_72 FE5E  
                             STR_80 FA89                               STR_64 FFC1  
                             STR_56 FFF3                               STR_48 FEC2  
                             STR_81 FFF9                               STR_73 FE50  
                             STR_65 FF91                               STR_57 FFB2  
                             STR_49 FECD                               STR_74 FFA3  
                             STR_90 FCE9                               STR_82 F641  
                             STR_66 FFBC                               STR_58 FF77  
                             STR_91 FB90                               STR_83 FCFC  
                             STR_75 F9EE                               STR_67 FFFC  
                             STR_59 FF7E                               STR_84 FFAD  
                             STR_92 FF1E                               STR_76 F5F2  
                             STR_68 FB7B                               STR_93 FEEE  
                             STR_69 FBEE                               STR_85 F99E  
                             STR_77 F6DA                               STR_78 FC5D  
                             STR_86 FEA0                               STR_94 FE94  
                             STR_95 FE16                               STR_79 FB1E  
                             STR_87 FAA2                               STR_96 FC9A  
                             STR_88 FB7C                     __end_of___flmul 69EE  
                             STR_97 FC9A                               STR_89 FE34  
                             STR_98 FF1E                               STR_99 FEEE  
                   __end_of_dbc_2nd DD9E                 SDCard_read512@retry 05F0  
                   __end_of___flsub FBB8                     __end_of___fltol D13E  
                   __end_of_dbc_1st ED78                               ?_stoa 050E  
                   __end_of___lldiv EBA0                         ?_SDCard_crc 0504  
                             ?_xtoa 051E                               u30000 4982  
                             u30001 497E                               u30010 49CC  
                             u30011 49C8                               u30020 49EA  
                             u30100 B396                               u20500 CD20  
                             u22100 C756                               u30021 49E6  
                             u30101 B392                               u20501 CD1C  
                             u22101 C752                               u30030 4A06  
                             u30110 B3C0                               u20510 CD5C  
                             u22110 C766                               u30031 4A02  
                             u22111 C762                               u30040 4A34  
                             u30200 A572                               u30120 B3D2  
                             u31000 0450                               u20520 CD6C  
                             u30201 A56E                               u30121 B3CE  
                             u31001 044C                               u20521 CD68  
                             u30050 4A46                               u30210 A608  
                             u30130 B3F4                               u20530 CD8C  
                             u22130 C7D0                               _LATA0 25F0  
                             u30051 4A42                               u30211 A604  
                             u20531 CD88                               u22131 C7CC  
                             _LATA1 25F1                               u30300 B530  
                             u30220 A61A                               u30140 B406  
                             u30060 B332                               u31100 06CC  
                             u31020 04C2                               u20540 CD9E  
                             u21500 F04C                               u22140 C7F6  
                             _LATA2 25F2                               u30301 B52C  
                             u30221 A616                               u30141 B402  
                             u30117 B3B6                               u30061 B32E  
                             u31101 06C8                               u31021 04BE  
                             u20541 CD9A                               u20517 CD52  
                             u21501 F048                               u22125 C790  
                             _LATA3 25F3                               u30310 B548  
                             u30230 A668                               u30150 B42A  
                             u30070 B35C                               u31030 052A  
                             u20550 CDE2                               u22150 C806  
                             u22070 C704                               _LATA4 25F4  
                             u30047 4A2A                               u30311 B544  
                             u30231 A664                               u30151 B426  
                             u31031 0526                               u31015 046C  
                             u20551 CDDE                               u22151 C802  
                             u30400 D3D8                               u30320 B55A  
                             u30240 A6CC                               u30160 B44C  
                             u30080 B372                               u31200 0A02  
                             u31120 075E                               u31040 0554  
                             u32000 2BB8                               u20480 F992  
                             u20560 CE04                               u22080 C71A  
                             _LATA6 25F6                               u30401 D3D4  
                             u30321 B556                               u30241 A6C8  
                             u30137 B3EA                               u30081 B36E  
                             u31201 09FE                               u31121 075A  
                             u31041 0550                               u32001 2BB4  
                             u22081 C716                               u30410 D404  
                             u30330 B56C                               u30250 A6E2  
                             u30170 B474                               u30090 B384  
                             u31210 0A38                               u31130 07C6  
                             u31050 0578                               u32010 2BE4  
                             u20490 F9A2                               u22090 C72A  
                             _LATE0 2610                               u30411 D400  
                             u30331 B568                               u30251 A6DE  
                             u30171 B470                               u30091 B380  
                             u31211 0A34                               u31131 07C2  
                             u31115 071C                               u31051 0574  
                             u32011 2BE0                               u20491 F99E  
                             u20555 CDD2                               u22147 C7EC  
                             u22091 C726                               _LATE1 2611  
                             u30420 D416                               u31300 2086  
                             u31220 1DDE                               u30500 9DF4  
                             u30340 B57E                               u30260 A6FC  
                             u30180 A54A                               u31140 08A8  
                             u31060 059C                               u32020 2C12  
                             u32100 F580                               u20900 FAB0  
                             _LATE2 2612                               u30421 D412  
                             u31301 2082                               u31221 1DDA  
                             u30501 9DF0                               u30341 B57A  
                             u30261 A6F8                               u30181 A546  
                             u30077 B352                               u31061 0598  
                             u32021 2C0E                               u32101 F57C  
                             u20557 CDC8                               u20901 FAAC  
                             u22077 C6FA                               u30430 EB22  
                             u31310 20CA                               u31230 1DFE  
                             u30350 B590                               u30270 B4BE  
                             u30190 A560                               u31150 08D8  
                             u31070 05B6                               u30510 9AD4  
                             u32030 2C56                               u32110 EE32  
                             u21470 EFEC                               u30431 EB1E  
                             u31311 20C6                               u31231 1DFA  
                             u30351 B58C                               u30271 B4BA  
                             u30191 A55C                               u30167 B442  
                             u31151 08D4                               u31071 05B2  
                             u30511 9AD0                               u32031 2C52  
                             u32111 EE2E                               u20487 F988  
                             u20567 CDFA                               u21471 EFE8  
                             u30440 EB44                               u31400 233C  
                             u31320 20FC                               u31240 1E2E  
                             u30360 B5A2                               u30280 B506  
                             u31160 093C                               u31080 0686  
                             u30600 9CD6                               u30520 9AFE  
                             u32040 2C7E                               u32200 E4D2  
                             u32120 EEA0                               u33000 8D26  
                             u21480 EFFE                               u30441 EB40  
                             u31401 2338                               u31321 20F8  
                             u31241 1E2A                               u30361 B59E  
                             u30281 B502                               u31161 0938  
                             u31145 089E                               u31081 0682  
                             u30601 9CD2                               u30521 9AFA  
                             u32201 E4CE                               u32121 EE9C  
                             u33001 8D22                               u21481 EFFA  
                             u30370 D35E                               u30450 EB6C  
                             u31410 2380                               u31330 2160  
                             u31250 1E48                               u32210 CC24  
                             u32130 D16A                               u30610 DC16  
                             u30290 B51E                               u31170 095E  
                             u31090 06A8                               u30530 9B1A  
                             u32050 2D0A                               u33010 8D40  
                             u21490 F010                               u30371 D35A  
                             u30451 EB68                               u31411 237C  
                             u31331 215C                               u31251 1E44  
                             u32211 CC20                               u32131 D166  
                             u30611 DC12                               u30291 B51A  
                             u31171 095A                               u31091 06A4  
                             u30531 9B16                               u32051 2D06  
                             u33011 8D3C                               u21491 F00C  
                             _U3BRG 02D4                               u23500 AAB8  
                             u30380 D378                               u31500 2D94  
                             u31420 23B4                               u31340 21AA  
                             u31260 1EC2                               u32140 D1AE  
                             u30460 9D04                               u30620 DC52  
                             u30700 89CE                               u31180 0994  
                             u30540 9B5A                               u32060 2D26  
                             u32300 1686                               u33020 8D5C  
                             u33100 F3F8                               u22700 AEC2  
                             u23501 AAB4                               u30381 D374  
                             u31501 2D90                               u31341 21A6  
                             u31261 1EBE                               u30461 9D00  
                             u30621 DC4E                               u30701 89CA  
                             u31181 0990                               u30541 9B56  
                             u32061 2D22                               u32045 2C74  
                             u32301 1682                               u33021 8D58  
                             u33101 F3F4                               u23510 AAC6  
                             u30390 D3A0                               u31510 2DB4  
                             u31430 2400                               u31350 21EE  
                             u32230 CCE4                               u32150 D1D8  
                             u30470 9D1E                               u32070 F7D6  
                             u30710 8A06                               u30630 88F4  
                             u31190 09CC                               u30550 9BA4  
                             u32310 16B2                               u33110 F418  
                             u22710 AED2                               u23511 AAC2  
                             u30391 D39C                               u31511 2DB0  
                             u31431 23FC                               u31351 21EA  
                             u32231 CCE0                               u32151 D1D4  
                             u30471 9D1A                               u32071 F7D2  
                             u31191 09C8                               u30551 9BA0  
                             u33111 F414                               u22711 AECE  
                             u23520 AB22                               u25200 E2D6  
                             u26000 7812                               u31600 3046  
                             u31520 2E34                               u31440 2472  
                             u31360 224C                               u31280 1F1A  
                             u32240 F1CE                               u32160 D214  
                             u30480 9D38                               u32080 F800  
                             u30800 8B34                               u30720 8A1A  
                             u30640 8904                               u30560 9BBE  
                             u32400 18F2                               u32320 16F6  
                             u33040 8DB6                               u33120 F438  
                             u33200 DE62                               u34000 5950  
                             u22720 AEF4                               u23521 AB1E  
                             u25201 E2D2                               u26001 780E  
                             u31601 3042                               u31521 2E30  
                             u31441 246E                               u31425 23AA  
                             u31361 2248                               u31281 1F16  
                             u32225 CCAC                               u32241 F1CA  
                             u30481 9D34                               u32081 F7FC  
                             u30801 8B30                               u30721 8A16  
                             u30641 8900                               u30561 9BBA  
                             u32401 18EE                               u32321 16F2  
                             u33041 8DB2                               u33121 F434  
                             u34001 594C                               u23530 AB78  
                             u25210 E30C                               u26010 782C  
                             u31530 2E4E                               u31450 24A2  
                             u31370 227A                               u31290 1FA4  
                             u32170 D23E                               u30490 9D8A  
                             u30730 8A76                               u30650 8926  
                             u30810 0030                               u30570 9BDE  
                             u32090 F560                               u32410 196A  
                             u32330 1718                               u32250 1576  
                             u33050 EBB6                               u33130 F454  
                             u33210 DE72                               u34010 597A  
                             u22730 AF04                               u23531 AB74  
                             u25211 E308                               u26011 7828  
                             u31531 2E4A                               u31451 249E  
                             u31371 2276                               u31291 1FA0  
                             u31275 1EE4                               u32171 D23A  
                             u32147 D1A4                               u30491 9D86  
                             u30731 8A72                               u30811 002C  
                             u30571 9BDA                               u32091 F55C  
                             u32411 1966                               u32331 1714  
                             u32315 16A8                               u32251 1572  
                             u33051 EBB2                               u33131 F450  
                             u33211 DE6E                               u34011 5976  
                             u22731 AF00                               u22707 AEB8  
                             u23540 ABC2                               u26020 7874  
                             u26100 6666                               u25300 4B6C  
                             u25220 4A8A                               u31700 3278  
                             u31620 309C                               u31540 2E8C  
                             u31460 24BC                               u31380 22A4  
                             u30740 8AAA                               u30660 8936  
                             u30900 0168                               u30820 0062  
                             u30580 9C24                               u32180 E442  
                             u32500 1BAE                               u32340 174A  
                             u32260 1596                               u33060 EBD0  
                             u34100 5A82                               u34020 5990  
                             u33300 B2B6                               u33220 B1B6  
                             u22740 AF26                               u22660 AE3C  
                             u33140 CAD8                               u23541 ABBE  
                             u26021 7870                               u26101 6662  
                             u25301 4B68                               u25221 4A86  
                             u31701 3274                               u31621 3098  
                             u31541 2E88                               u31461 24B8  
                             u31381 22A0                               u30741 8AA6  
                             u30717 89FC                               u30661 8932  
                             u30637 88EA                               u30901 0164  
                             u30821 005E                               u30581 9C20  
                             u32181 E43E                               u32501 1BAA  
                             u32341 1746                               u32261 1592  
                             u33061 EBCC                               u34101 5A7E  
                             u34021 598C                               u33301 B2B2  
                             u33221 B1B2                               u33141 CAD4  
                             u23550 ABE0                               u26030 78A4  
                             u26110 669C                               u25310 4BD8  
                             u25230 4A9C                               u31710 32CA  
                             u31630 30CA                               u31550 2EB8  
                             u31470 250E                               u31390 22F2  
                             u30750 8ABC                               u30670 898C  
                             u30910 0184                               u30830 0092  
                             u30590 9C76                               u32190 E490  
                             u32510 1BF4                               u32430 19C0  
                             u32350 17CA                               u32270 15B6  
                             u33038 8D82                               u33070 EBF0  
                             u34110 5A9A                               u34030 59B2  
                             u33310 B2DC                               u33230 B1EA  
                             u22750 AF36                               u22670 AE4C  
                             u33150 CAF6                               u23551 ABDC  
                             u26031 78A0                               u26111 6698  
                             u25311 4BD4                               u25231 4A98  
                             u31711 32C6                               u31631 30C6  
                             u31615 3076                               u31471 250A  
                             u31391 22EE                               u32167 D20A  
                             u30751 8AB8                               u30911 0180  
                             u30831 008E                               u30591 9C72  
                             u32191 E48C                               u32511 1BF0  
                             u32431 19BC                               u32351 17C6  
                             u32271 15B2                               u33039 8D96  
                             u33071 EBEC                               u33207 DE58  
                             u34111 5A96                               u34031 59AE  
                             u33311 B2D8                               u33231 B1E6  
                             u22751 AF32                               u22727 AEEA  
                             u22671 AE48                               u33151 CAF2  
                             u23560 ABF0                               u26040 78D0  
                             u26200 6922                               u26120 66AC  
                             u25400 4CB6                               u25320 4BF0  
                             u25240 4AAC                               u27000 148C  
                             u31720 3338                               u31640 312C  
                             u31560 2EFC                               u31480 257C  
                             u30760 8ACA                               u30680 899C  
                             u30920 01CA                               u30840 00B6  
                             u31800 267A                               u32600 C11A  
                             u32520 1C6E                               u32440 19EE  
                             u32360 17E4                               u32280 161A  
                             u33080 EC10                               u34200 5BE2  
                             u34120 5ABA                               u34040 59C6  
                             u33320 B2EC                               u33240 B232  
                             u22760 AF5C                               u22680 AE88  
                             u33160 F33E                               u33400 9474  
                             u35000 963C                               u23561 ABEC  
                             u26041 78CC                               u26201 691E  
                             u26121 66A8                               u25401 4CB2  
                             u25321 4BEA                               u25241 4AA8  
                             u27001 1488                               u31721 3334  
                             u31641 3128                               u31561 2EF8  
                             u31481 2578                               u30761 8AC6  
                             u30681 8998                               u30657 891C  
                             u30921 01C6                               u30841 00B2  
                             u31801 2676                               u32601 C116  
                             u32521 1C6A                               u32441 19EA  
                             u32425 199A                               u32361 17E0  
                             u32281 1616                               u33081 EC0C  
                             u34201 5BDE                               u34121 5AB6  
                             u34041 59C2                               u33321 B2E8  
                             u33241 B22E                               u33161 F33A  
                             u33401 9470                               u35001 9638  
                             u23570 ABFE                               u25170 0216  
                             u26210 696A                               u26130 6826  
                             u26050 65E2                               u25410 4CD4  
                             u25330 4BF2                               u25250 4AEC  
                             u27010 14CA                               u31730 33B2  
                             u31650 315E                               u31570 2F1E  
                             u31490 2D74                               u30770 8AD8  
                             u30690 89BE                               u30930 0204  
                             u30850 00C6                               u31810 26A6  
                             u32610 A8F6                               u32530 1D44  
                             u32450 1A50                               u32370 1816  
                             u32290 1648                               u33090 EC32  
                             u33170 DDB0                               u34210 5C3E  
                             u34130 5AD4                               u34050 59D8  
                             u33250 B244                               u33330 A346  
                             u22770 AF6C                               u22690 AE98  
                             u33410 9486                               u35010 967C  
                             u23571 ABFA                               u25171 0212  
                             u26211 6966                               u26051 65DE  
                             u25411 4CD0                               u25251 4AE8  
                             u27011 14C6                               u31731 33AE  
                             u31651 315A                               u31571 2F1A  
                             u31555 2EAE                               u31491 2D70  
                             u30771 8AD4                               u30931 0200  
                             u30851 00C2                               u31811 26A2  
                             u32611 A8F2                               u32531 1D40  
                             u32451 1A4C                               u32371 1812  
                             u32291 1644                               u33091 EC2E  
                             u33171 DDAC                               u34211 5C3A  
                             u34131 5AD0                               u34051 59D4  
                             u33251 B240                               u33331 A342  
                             u22771 AF68                               u22747 AF1C  
                             u22691 AE94                               u22667 AE32  
                             u33411 9482                               u23580 AC38  
                             u25180 E29C                               u26300 D2EC  
                             u26220 6998                               u26140 6880  
                             u26060 65F4                               u25500 4E10  
                             u25420 4D0C                               u25340 4C1A  
                             u25260 4B02                               u27020 14E8  
                             u27100 B8EA                               u31660 31BC  
                             u31580 2F92                               u30780 8B00  
                             u30940 027A                               u30860 00D4  
                             u31900 28D0                               u31820 26BC  
                             u31740 25CA                               u32620 A920  
                             u32540 BFBC                               u32460 1AC6  
                             u32380 186A                               u32700 B9FE  
                             u33180 DDF6                               u34220 5C4E  
                             u34140 5AEC                               u34060 59EA  
                             u34300 D9F6                               u33500 FB68  
                             u33260 B256                               u33340 A398  
                             u22780 AF92                               u33420 94FC  
                             u35100 9804                               u35020 968C  
                             u23581 AC34                               u25181 E298  
                             u26301 D2E8                               u26221 6994  
                             u26141 687C                               u26061 65F0  
                             u25501 4E0C                               u25421 4D08  
                             u25341 4C16                               u25261 4AFE  
                             u27021 14E4                               u27101 B8E6  
                             u31661 31B8                               u31581 2F8E  
                             u30781 8AFC                               u30677 8982  
                             u30941 0276                               u30861 00D0  
                             u31901 28CC                               u31821 26B8  
                             u31741 25C6                               u32621 A91C  
                             u32541 BFB8                               u32461 1AC2  
                             u32381 1866                               u32701 B9FA  
                             u33181 DDF2                               u34221 5C4A  
                             u34141 5AE8                               u34061 59E6  
                             u34301 D9F2                               u33501 FB64  
                             u33261 B252                               u33341 A394  
                             u33421 94F8                               u35101 9800  
                             u35021 9688                               u23590 AC46  
                             u25190 E2AE                               u26310 D33C  
                             u26230 69D0                               u26150 68A0  
                             u26070 6604                               u25510 4E26  
                             u25430 4D52                               u25350 4C38  
                             u25270 4B14                               u27030 14F8  
                             u27110 B910                               u31590 2FC4  
                             u30790 8B16                               u30950 0298  
                             u30870 010E                               u31910 28E4  
                             u31830 26D0                               u31750 2600  
                             u32630 A976                               u32550 BFE6  
                             u32390 18A0                               u32710 BA0E  
                             u33190 DE40                               u34230 5C6C  
                             u34150 5AFA                               u34070 5A1E  
                             u33270 B26C                               u33350 A3AE  
                             u33510 4F54                               u34310 BE3C  
                             u22790 AFB6                               u33430 9520  
                             u35110 9832                               u35030 96C4  
                             u23591 AC42                               u25191 E2AA  
                             u26311 D338                               u26231 69CC  
                             u26151 689C                               u26135 681C  
                             u26071 6600                               u25511 4E22  
                             u25431 4D4E                               u25351 4C34  
                             u25271 4B10                               u27031 14F4  
                             u31591 2FC0                               u30791 8B12  
                             u30951 0294                               u30871 010A  
                             u31911 28E0                               u31831 26CC  
                             u31751 25FC                               u32631 A972  
                             u32551 BFE2                               u32391 189C  
                             u32711 BA0A                               u33191 DE3C  
                             u34231 5C68                               u34151 5AF6  
                             u34071 5A1A                               u33271 B266  
                             u33351 A3AA                               u34311 BE38  
                             u22791 AFB2                               u22767 AF52  
                             u22687 AE7E                               u33431 951C  
                             u35111 982E                               u35031 96C0  
                             u26400 EC4C                               u26240 E930  
                             u26160 68B0                               u26080 6644  
                             u26320 FE76                               u25600 4F12  
                             u25520 4E3C                               u25440 4D88  
                             u25360 4C58                               u25280 4B24  
                             u27120 B942                               u27040 B808  
                             u27200 BC2A                               u28000 8EE4  
                             u32800 C622                               u30960 0320  
                             u30880 0124                               u31920 28F2  
                             u31840 26DE                               u31760 2630  
                             u32640 A9B4                               u32560 C03E  
                             u34240 5CB2                               u34160 5B56  
                             u34080 5A36                               u33280 B26E  
                             u33360 A3C6                               u33600 5132  
                             u33520 4F82                               u34320 BE6E  
                             u34400 DB32                               u33440 9530  
                             u35040 9726                               u35200 7E0C  
                             u35120 7C90                               u26401 EC48  
                             u26241 E92C                               u26161 68AC  
                             u26081 6640                               u26321 FE72  
                             u25601 4F0E                               u25521 4E38  
                             u25441 4D84                               u25361 4C54  
                             u25281 4B20                               u27121 B93E  
                             u27041 B804                               u27201 BC26  
                             u28001 8EE0                               u32801 C61E  
                             u30697 89B4                               u30961 031C  
                             u30881 0120                               u31921 28EE  
                             u31841 26DA                               u31761 262C  
                             u32641 A9B0                               u32561 C03A  
                             u34241 5CAE                               u34161 5B52  
                             u34081 5A32                               u33361 A3C2  
                             u33601 512E                               u33521 4F7E  
                             u34321 BE6A                               u34401 DB2E  
                             u33441 952C                               u35041 9722  
                             u35017 9672                               u35201 7E08  
                             u25610 FC40                               u26410 EC6E  
                             u26250 E96E                               u26170 68DE  
                             u26090 6656                               u25530 4E50  
                             u25450 4D98                               u25370 4C66  
                             u25290 4B5E                               u26330 D04E  
                             u27130 B950                               u27050 B84E  
                             u27210 BC40                               u28010 8F02  
                             u31690 325E                               u32810 C632  
                             u30970 0372                               u30890 0132  
                             u31930 2940                               u31850 27DA  
                             u31770 263E                               u32650 A9F2  
                             u32570 C07C                               u32490 1B78  
                             u32730 BA50                               u34250 5CD4  
                             u34170 5B6E                               u34090 5A66  
                             u33290 B28A                               u33370 A41C  
                             u33610 518C                               u33530 4FE4  
                             u34330 BEA6                               u34410 DB80  
                             u33450 9572                               u35050 9736  
                             u35210 7E1C                               u35130 7CA0  
                             u25611 FC3C                               u26411 EC6A  
                             u26251 E96A                               u26171 68DA  
                             u26091 6652                               u25531 4E4C  
                             u25451 4D94                               u25371 4C62  
                             u25291 4B5A                               u26331 D04A  
                             u27131 B94C                               u27211 BC3C  
                             u28011 8EFE                               u31691 325A  
                             u31675 31DA                               u32811 C62E  
                             u30971 036E                               u30891 012E  
                             u31931 293C                               u31851 27D6  
                             u31771 263A                               u32651 A9EE  
                             u32571 C078                               u32491 1B74  
                             u32475 1AF0                               u32731 BA4C  
                             u34251 5CD0                               u34171 5B6A  
                             u34091 5A62                               u33291 B286  
                             u33371 A418                               u33611 5188  
                             u33531 4FE0                               u34331 BEA2  
                             u34411 DB7C                               u22787 AF86  
                             u33451 956E                               u35051 9732  
                             u35211 7E18                               u35131 7C9C  
                             u27300 804E                               u25700 CF3E  
                             u26420 ECB8                               u26260 E9A2  
                             u26180 68F4                               u25540 4E6A  
                             u25460 4DC4                               u25380 4C76  
                             u26340 D082                               u25620 FA4E  
                             u27140 B98A                               u27060 B85E  
                             u27220 BC5A                               u28020 8F3A  
                             u28100 E76A                               u30980 03CA  
                             u31940 2A46                               u31860 2836  
                             u31780 2658                               u32660 AA44  
                             u32580 C0D4                               u32900 AD44  
                             u32740 BAA8                               u32724 BA28  
                             u34260 5CE2                               u34180 5BA8  
                             u33700 5326                               u33620 51BC  
                             u33540 5018                               u34340 BEC0  
                             u34420 DB92                               u33460 958C  
                             u33380 9422                               u35060 9746  
                             u35300 AFEA                               u35220 7E2E  
                             u35140 7CEE                               u27301 804A  
                             u25701 CF3A                               u26421 ECB4  
                             u26261 E99E                               u26181 68F0  
                             u25541 4E66                               u25461 4DC0  
                             u25381 4C72                               u25621 FA4A  
                             u27141 B986                               u27117 B906  
                             u27061 B85A                               u27221 BC56  
                             u28021 8F36                               u28101 E766  
                             u31685 3214                               u30981 03C6  
                             u31941 2A42                               u31861 2832  
                             u31781 2654                               u32661 AA40  
                             u32581 C0D0                               u32901 AD40  
                             u32485 1B30                               u32741 BAA4  
                             u32725 BA22                               u34261 5CDE  
                             u34181 5BA4                               u33701 5322  
                             u33621 51B8                               u33541 5014  
                             u33517 4F48                               u34341 BEBC  
                             u34421 DB8E                               u33461 9588  
                             u33381 941E                               u35061 9742  
                             u35301 AFE6                               u35221 7E2A  
                             u35141 7CEA                               u27310 8078  
                             u25710 CF60                               u26430 ECC6  
                             u26270 D270                               u26190 6908  
                             u25550 4EA4                               u25470 4DD4  
                             u25390 4CA8                               u26350 D0B0  
                             u25630 D584                               u26510 A208  
                             u27070 B86C                               u27230 BC74  
                             u27150 BB2C                               u28030 8F7A  
                             u28110 E7A6                               u32830 C674  
                             u30990 0402                               u31950 2A68  
                             u31870 289E                               u31790 2668  
                             u32670 AA78                               u32590 C0F8  
                             u32750 BABC                               u34190 5BD0  
                             u34270 D976                               u33710 535A  
                             u33630 522C                               u33550 5072  
                             u34350 BEDA                               u34430 DBD2  
                             u33470 959E                               u33390 9466  
                             u35070 976A                               u35310 EDAE  
                             u35230 7E6A                               u35150 7D1C  
                             u27311 8074                               u25711 CF5C  
                             u26431 ECC2                               u26271 D26C  
                             u26191 6904                               u25551 4EA0  
                             u25471 4DD0                               u25391 4CA4  
                             u26351 D0AC                               u26511 A204  
                             u27071 B868                               u27231 BC70  
                             u27151 BB28                               u28031 8F76  
                             u28111 E7A2                               u32831 C670  
                             u30991 03FE                               u31951 2A64  
                             u31871 289A                               u31791 2664  
                             u32671 AA74                               u32591 C0F4  
                             u32751 BAB8                               u34191 5BCC  
                             u34271 D972                               u33551 506E  
                             u34351 BED6                               u34431 DBCE  
                             u33471 959A                               u33391 9462  
                             u35071 9766                               u35311 EDAA  
                             u35231 7E66                               u35151 7D18  
                             u35127 7C86                               u27400 81C0  
                             u27320 8086                               u25720 CF9A  
                             u25800 DAA4                               u26440 FEDE  
                             u26600 A734                               u26280 D2AE  
                             u25560 4EB6                               u25480 4DF0  
                             u26360 D0C4                               u25640 D5A2  
                             u26520 A22C                               u27080 B88A  
                             u27240 BC82                               u27160 BB3C  
                             u28040 8FA6                               u28120 B66E  
                             u28200 DFF4                               u32824 C64C  
                             u32840 F474                               u29000 7A18  
                             u31880 28AC                               u32680 AA8A  
                             u32920 AD9E                               u32760 BAFC  
                             u33800 5E80                               u34280 D9B0  
                             u34440 FDE2                               u33720 5384  
                             u33640 5240                               u33560 50A0  
                             u34360 BF30                               u33480 95DA  
                             u35320 EA6C                               u35080 9784  
                             u35400 55F6                               u35240 7EA4  
                             u35160 7D3E                               u27401 81BC  
                             u27321 8082                               u25721 CF96  
                             u25801 DAA0                               u26441 FEDA  
                             u26601 A730                               u26281 D2AA  
                             u25561 4EB2                               u25481 4DEC  
                             u26361 D0C0                               u26345 D078  
                             u25641 D59E                               u26505 A1B0  
                             u27081 B886                               u27057 B844  
                             u27241 BC7E                               u27161 BB38  
                             u28041 8FA2                               u28121 B66A  
                             u28201 DFF0                               u32825 C646  
                             u32841 F470                               u31881 28A8  
                             u32681 AA86                               u32921 AD9A  
                             u32761 BAF8                               u33801 5E7C  
                             u34281 D9AC                               u34441 FDDE  
                             u33641 523C                               u33561 509C  
                             u34361 BF2C                               u33481 95D6  
                             u35321 EA68                               u35081 9780  
                             u35401 55F2                               u35241 7EA0  
                             u35161 7D3A                               u28210 F644  
                             u27410 81E2                               u27330 80AC  
                             u25730 CFBC                               u25810 DAD4  
                             u26610 A760                               u26290 D2CC  
                             u25570 4EC6                               u25490 4E00  
                             u26370 D0EC                               u25650 D5CA  
                             u26530 A248                               u26506 A1BA  
                             u26450 FDB6                               u27250 E058  
                             u27090 B8B0                               u27170 BB6A  
                             u28050 8FF8                               u28130 B6C0  
                             u32770 C59A                               u32850 F49E  
                             u29010 7A3C                               u31970 2B56  
                             u31890 28C2                               u32690 B9BE  
                             u32930 FFF2                               u33810 5E90  
                             u34450 D85C                               u34290 D9D8  
                             u34610 DEFA                               u33490 FB4C  
                             u33730 53AC                               u33650 527E  
                             u33570 50DE                               u34370 BF82  
                             u35090 97CA                               u35330 E9C4  
                             u35410 5666                               u35250 7EC6  
                             u35170 7D6C                               u28211 F640  
                             u27411 81DE                               u27331 80A8  
                             u25731 CFB8                               u25811 DAD0  
                             u26611 A75C                               u26291 D2C8  
                             u25571 4EC2                               u25491 4DFC  
                             u26371 D0E8                               u25651 D5C6  
                             u25635 D57A                               u26531 A244  
                             u26507 A1CA                               u26451 FDB2  
                             u27251 E054                               u27091 B8AC  
                             u27171 BB66                               u28051 8FF4  
                             u28131 B6BC                               u32771 C596  
                             u32851 F49A                               u29011 7A38  
                             u31971 2B52                               u31891 28BE  
                             u32691 B9BA                               u32931 FFEE  
                             u33811 5E8C                               u34451 D858  
                             u34291 D9D4                               u34611 DEF6  
                             u33491 FB48                               u33731 53A8  
                             u33571 50DA                               u34371 BF7E  
                             u35091 97C6                               u35331 E9C0  
                             u35411 5662                               u35251 7EC2  
                             u35171 7D68                               u28220 F67E  
                             u27420 8204                               u27340 80CE  
                             u25740 CFE4                               u26620 A776  
                             u25900 76E6                               u25820 756E  
                             u25580 4EE6                               u26380 D10C  
                             u25660 D5F4                               u26540 A29C  
                             u26460 F872                               u26700 0B44  
                             u27260 E0EA                               u27180 BBAE  
                             u27500 3472                               u28060 905C  
                             u28140 B74A                               u28300 6B86  
                             u32780 C5DC                               u32860 F4C8  
                             u29100 6230                               u31980 2B76  
                             u32940 8BD8                               u33820 5EDE  
                             u34460 D88C                               u33900 D66E  
                             u34700 F938                               u33740 53D2  
                             u33660 52A6                               u33580 510C  
                             u34380 BF96                               u34620 EF66  
                             u35340 D7C2                               u35420 5682  
                             u35260 7F40                               u35180 7DE4  
                             u28221 F67A                               u27421 8200  
                             u27341 80CA                               u25741 CFE0  
                             u26621 A772                               u25901 76E2  
                             u25821 756A                               u25581 4EE2  
                             u26381 D108                               u25661 D5F0  
                             u26525 A222                               u26461 F86E  
                             u26701 0B40                               u27261 E0E6  
                             u27181 BBAA                               u27501 346E  
                             u28061 9058                               u28141 B746  
                             u28301 6B82                               u32781 C5D8  
                             u32861 F4C4                               u29101 622C  
                             u29005 7A0E                               u31981 2B72  
                             u31965 2AB2                               u32941 8BD4  
                             u33821 5EDA                               u34461 D888  
                             u33901 D66A                               u34701 F934  
                             u33717 5350                               u33661 52A2  
                             u33637 5220                               u33581 5108  
                             u34381 BF92                               u34621 EF62  
                             u35341 D7BE                               u35421 567E  
                             u35261 7F3C                               u35181 7DE0  
                             u27430 8226                               u27350 80F0  
                             u27270 7FD8                               u25750 D016  
                             u26630 A840                               u25910 7708  
                             u25830 7580                               u25590 4EF6  
                             u26390 D11C                               u26550 A2B8  
                             u26470 A14C                               u26710 0B54  
                             u27190 BBF8                               u27510 34EA  
                             u28070 9092                               u28150 B768  
                             u28310 6BD0                               u32790 C5F0  
                             u28230 FE5E                               u29110 6264  
                             u29030 7AFC                               u31990 2B9A  
                             u32918 AD6A                               u33830 5EFA  
                             u33750 5D4C                               u34470 D89A  
                             u33910 D6A0                               u34710 6DF4  
                             u33670 52B6                               u33590 511E  
                             u34390 DB20                               u34630 EFAA  
                             u35430 56C0                               u35350 5414  
                             u35270 7F52                               u35190 7DFA  
                             u27431 8222                               u27351 80EC  
                             u27271 7FD4                               u25751 D012  
                             u26631 A83C                               u25911 7704  
                             u25831 757C                               u25591 4EF2  
                             u26391 D118                               u26551 A2B4  
                             u26711 0B50                               u27511 34E6  
                             u28071 908E                               u28151 B764  
                             u28311 6BCC                               u32791 C5EC  
                             u28231 FE5A                               u29111 6260  
                             u29031 7AF8                               u31991 2B96  
                             u32919 AD7E                               u33831 5EF6  
                             u33751 5D48                               u34471 D896  
                             u33911 D69C                               u34711 6DF0  
                             u33727 5378                               u33671 52B2  
                             u33591 511A                               u34391 DB1C  
                             u34631 EFA6                               u35431 56BC  
                             u35351 5410                               u35271 7F4E  
                             u35191 7DF6                               u28240 E142  
                             u27440 8248                               u27360 8112  
                             u27280 8004                               u25760 DA1C  
                             u26640 A856                               u25920 7732  
                             u25840 7590                               u25680 D62E  
                             u26560 A2F4                               u26480 A17A  
                             u26800 0E32                               u26720 0B92  
                             u27600 38BA                               u27520 3516  
                             u28080 90AC                               u28160 E818  
                             u28400 41B6                               u29200 6444  
                             u29120 629C                               u29040 7B1C  
                             u32880 ACB6                               u32960 8C5E  
                             u33840 60B4                               u33760 5DD0  
                             u34480 D8CC                               u33920 D6D2  
                             u34800 7168                               u34720 6E4C  
                             u34640 913A                               u33680 52D6  
                             u35440 57CC                               u35360 546E  
                             u35280 7F64                               u28241 E13E  
                             u27441 8244                               u27361 810E  
                             u27281 8000                               u25761 DA18  
                             u26641 A852                               u25921 772E  
                             u25841 758C                               u25681 D628  
                             u26561 A2F0                               u26545 A292  
                             u26481 A176                               u26801 0E2E  
                             u26721 0B8E                               u27601 38B6  
                             u27521 3512                               u28081 90A8  
                             u28161 E814                               u28401 41B2  
                             u29201 6440                               u29121 6298  
                             u29041 7B18                               u29025 7A8E  
                             u32881 ACB2                               u32961 8C5A  
                             u33841 60B0                               u33761 5DCC  
                             u34481 D8C8                               u33921 D6CE  
                             u34801 7164                               u34721 6E48  
                             u34641 9136                               u33681 52D2  
                             u33657 5272                               u35441 57C8  
                             u35361 546A                               u35281 7F60  
                             u27450 826A                               u27370 8134  
                             u27290 802E                               u25770 DA3E  
                             u26650 A870                               u26570 A712  
                             u25930 7756                               u25850 75D2  
                             u25690 D630                               u26490 A19C  
                             u26810 0E68                               u26730 0BA4  
                             u27610 38F2                               u27530 3548  
                             u28090 90CC                               u28170 E854  
                             u28330 6C7E                               u28250 6A1A  
                             u29210 64AC                               u29130 62DC  
                             u29050 7B46                               u32890 ACC8  
                             u32970 8C70                               u33850 610E  
                             u33770 5DE6                               u34490 D918  
                             u33930 D716                               u34730 6E92  
                             u34650 91F4                               u33690 5314  
                             u34810 E878                               u35370 54B8  
                             u35450 FC54                               u35290 7FA4  
                             u27451 8266                               u27371 8130  
                             u27291 802A                               u25771 DA3A  
                             u26651 A86C                               u26571 A70C  
                             u25931 7752                               u25851 75CE  
                             u25675 D606                               u26491 A198  
                             u26475 A142                               u26811 0E64  
                             u26731 0BA0                               u27195 BBEE  
                             u27611 38EE                               u27531 3544  
                             u28091 90C8                               u28171 E850  
                             u28331 6C7A                               u28251 6A16  
                             u29211 64A8                               u29051 7B42  
                             u32891 ACC4                               u32971 8C6C  
                             u33851 610A                               u33771 5DE2  
                             u34491 D914                               u33931 D712  
                             u34731 6E8E                               u34651 91F0  
                             u33747 53C6                               u34811 E874  
                             u35371 54B4                               u35451 FC50  
                             u35291 7FA0                               u27700 EF2C  
                             u27460 828C                               u27380 8156  
                             u25780 DA64                               u26660 A88A  
                             u26580 A714                               u25940 776C  
                             u25860 75E4                               u26900 118C  
                             u26820 0E7E                               u26740 0C1E  
                             u27620 3916                               u27540 35FE  
                             u28180 DF8C                               u28340 6D10  
                             u28260 6A44                               u28420 427C  
                             u29220 64C8                               u29140 6300  
                             u29060 7B78                               u28500 D4D0  
                             u29300 867A                               u32980 8CEC  
                             u33860 6128                               u33780 5DFC  
                             u33940 58A6                               u34740 6EAA  
                             u34660 928A                               u34820 E8BA  
                             u34900 99D0                               u35380 5524  
                             u35700 71F0                               u27701 EF28  
                             u27461 8288                               u27381 8152  
                             u25781 DA60                               u26661 A886  
                             u25941 7768                               u25861 75E0  
                             u26901 1188                               u26821 0E7A  
                             u26741 0C1A                               u27621 3912  
                             u27541 35FA                               u28181 DF88  
                             u28325 6BEC                               u28261 6A40  
                             u28421 4278                               u29221 64C4  
                             u29141 62FC                               u29061 7B74  
                             u28501 D4CC                               u29301 8676  
                             u32981 8CE8                               u33861 6124  
                             u33781 5DF8                               u33941 58A2  
                             u34741 6EA6                               u34661 9286  
                             u34821 E8B6                               u34901 99CC  
                             u35381 5520                               u35701 71EC  
                             u27710 EF3A                               u27470 82AE  
                             u27390 8178                               u25790 DA86  
                             u26670 A898                               u26590 A724  
                             u25950 778A                               u25870 75F4  
                             u26910 11DA                               u26830 0EB4  
                             u26750 0C30                               u27630 39C8  
                             u27550 361E                               u28190 DFAC  
                             u28350 6D42                               u28430 42B2  
                             u29230 64E8                               u29150 6358  
                             u29070 7BF0                               u28510 D4E2  
                             u29310 868C                               u32878 AC7E  
                             u32990 8D06                               u32958 8C26  
                             u33870 6138                               u33790 5E4A  
                             u33950 58B8                               u34750 6EFE  
                             u34670 92E0                               u34910 9A38  
                             u34830 98A6                               u35390 5570  
                             u35710 721C                               u27711 EF36  
                             u27471 82AA                               u27391 8174  
                             u25791 DA82                               u26671 A894  
                             u26591 A720                               u25951 7786  
                             u25871 75F0                               u26911 11D6  
                             u26831 0EB0                               u26751 0C2C  
                             u27631 39C4                               u27551 361A  
                             u28191 DFA8                               u28351 6D3E  
                             u28431 42AE                               u28415 4240  
                             u29231 64E4                               u29135 62D2  
                             u29071 7BEC                               u28511 D4DE  
                             u29311 8688                               u32879 AC92  
                             u32991 8D02                               u32959 8C3A  
                             u33871 6134                               u33791 5E46  
                             u33951 58B4                               u34751 6EFA  
                             u34671 92DC                               u34911 9A34  
                             u34831 98A2                               u35391 556C  
                             u35711 7218                               u27640 F8DE  
                             u27480 82D2                               u26680 A8A8  
                             u25960 77AA                               u25880 7632  
                             u26920 1286                               u26840 0EC2  
                             u26760 0CAA                               u27560 36FE  
                             u27720 F858                               u28280 6AE6  
                             u28440 430E                               u28360 40C8  
                             u28600 3C7C                               u29240 6518  
                             u29160 638C                               u29080 7C14  
                             u28520 D510                               u29400 87C6  
                             u29320 869E                               u33880 617C  
                             u33960 58D8                               u34760 6F50  
                             u34680 931A                               u34920 9A66  
                             u34840 98E6                               u35800 751C  
                             u35720 725A                               u27641 F8DA  
                             u27481 82CE                               u26681 A8A4  
                             u25961 77A6                               u25881 762E  
                             u26921 1282                               u26841 0EBE  
                             u26761 0CA6                               u27561 36FA  
                             u27721 F854                               u28345 6D06  
                             u28281 6AE2                               u28361 40C4  
                             u28601 3C78                               u29241 6514  
                             u29161 6388                               u28505 D4C0  
                             u29401 87C2                               u29321 869A  
                             u33881 6178                               u33961 58D4  
                             u34761 6F4C                               u34681 9316  
                             u33697 5308                               u37057 FB0E  
                             u34921 9A62                               u35801 7518  
                             u35721 7256                               u27650 FCEC  
                             u27730 F7A8                               u27490 82E0  
                             u25970 77BA                               u25890 7672  
                             u26930 12C2                               u26850 0EEC  
                             u26770 0D36                               u26690 0AFA  
                             u27570 371E                               u28450 43AC  
                             u28370 40F2                               u28610 3CC4  
                             u29170 63E0                               u29090 61FA  
                             u29250 F10C                               u28530 D534  
                             u29410 87FA                               u29330 86B6  
                             u33890 FD56                               u34930 CE48  
                             u33970 58F0                               u34770 701E  
                             u34690 935C                               u34850 98F6  
                             u35810 753E                               u35730 730C  
                             u27651 FCE8                               u27731 F7A4  
                             u27491 82DC                               u25971 77B6  
                             u25891 766E                               u26931 12BE  
                             u26851 0EE8                               u26771 0D32  
                             u26691 0AF6                               u27571 371A  
                             u28275 6AAE                               u28451 43A8  
                             u28371 40EE                               u28611 3CC0  
                             u29171 63DC                               u29155 634E  
                             u29091 61F6                               u28507 D4B6  
                             u29411 87F6                               u29331 86B2  
                             u33891 FD52                               u34931 CE44  
                             u33971 58EC                               u34771 701A  
                             u37067 EFBA                               u34851 98F2  
                             u35811 753A                               u35731 7308  
                             u27660 0202                               u27740 FBE2  
                             u25980 77E8                               u26940 12D0  
                             u26860 1034                               u26780 0D68  
                             u27580 3844                               u27900 83E4  
                             u28460 4448                               u28700 3E96  
                             u28620 3D06                               u28540 3B20  
                             u29500 C4B0                               u29180 6402  
                             u29260 F11C                               u29420 881C  
                             u29340 86E8                               u34940 CE62  
                             u33980 5926                               u34780 710A  
                             u34860 992E                               u35740 73BC  
                             u27661 01FC                               u27741 FBDE  
                             u27805 E39C                               u25981 77E4  
                             u26941 12CC                               u26861 1030  
                             u26781 0D64                               u27581 3840  
                             u27901 83E0                               u28445 4304  
                             u28701 3E92                               u28621 3D02  
                             u28541 3B1C                               u29501 C4AC  
                             u29181 63FE                               u29085 7C0A  
                             u29261 F118                               u29421 8818  
                             u29341 86E4                               u34941 CE5E  
                             u33981 5922                               u34781 7106  
                             u37077 DF24                               u34861 992A  
                             u35741 73B8                               u27750 FBFA  
                             u27830 E40E                               u25990 77FE  
                             u26950 1324                               u26870 109A  
                             u26790 0DA6                               u27590 3882  
                             u27910 841E                               u28470 447E  
                             u28390 417C                               u28710 3EDE  
                             u28630 3D5A                               u28550 3B52  
                             u29510 C4CC                               u29190 6432  
                             u29270 F156                               u29430 8844  
                             u29350 8748                               u34950 CE98  
                             u33990 593E                               u34790 713C  
                             u34870 9990                               u35750 73E6  
                             u27751 FBF6                               u27831 E40A  
                             u27815 E3C2                               u25991 77FA  
                             u26951 1320                               u26871 1096  
                             u26791 0DA2                               u27591 387E  
                             u27911 841A                               u28295 6B4E  
                             u28471 447A                               u28391 4178  
                             u28711 3EDA                               u28631 3D56  
                             u28551 3B4E                               u29511 C4C8  
                             u29191 642E                               u28527 D506  
                             u29431 8840                               u29351 8744  
                             u34951 CE94                               u33991 593A  
                             u34791 7138                               u34695 9352  
                             u37087 DF42                               u34871 998C  
                             u34847 98DC                               u35751 73E2  
                             u27680 EEC6                               u27760 F232  
                             u26960 13F6                               u26880 10E2  
                             u27840 C2E0                               u27920 8432  
                             u28720 3EF8                               u28640 3D76  
                             u28560 3B7C                               u29520 C534  
                             u28800 C834                               u29600 CA20  
                             u29280 F166                               u28480 D47A  
                             u29440 886A                               u29360 875A  
                             u34960 CEAA                               u34880 99A0  
                             u35760 7442                               u27681 EEC2  
                             u27761 F22E                               u27825 E3E4  
                             u26961 13F2                               u26881 10DE  
                             u27841 C2DC                               u27921 842E  
                             u28465 443E                               u28385 4140  
                             u28721 3EF4                               u28641 3D72  
                             u28561 3B78                               u29521 C530  
                             u28801 C830                               u29601 CA1C  
                             u29281 F162                               u29257 F102  
                             u28537 D52A                               u28481 D476  
                             u29441 8866                               u29361 8756  
                             u37097 FE06                               u34961 CEA6  
                             u34881 999C                               u35761 743E  
                             u27690 EF0E                               u27770 F25A  
                             u26970 1412                               u26890 10F2  
                             u27850 C34E                               u27930 8524  
                             u28730 3F14                               u28650 3D90  
                             u28570 3BD8                               u29530 C566  
                             u28810 C8F2                               u29610 CA4C  
                             u28490 D49C                               u29450 888E  
                             u29370 876E                               u29290 862E  
                             u34970 CEE8                               u34890 99B6  
                             u35770 74AA                               u27691 EF0A  
                             u27675 0204                               u27771 F256  
                             u26971 140E                               u26891 10EE  
                             u27851 C34A                               u27931 8520  
                             u28731 3F10                               u28651 3D8C  
                             u28571 3BD4                               u29531 C562  
                             u28811 C8EE                               u29611 CA48  
                             u29451 888A                               u29371 876A  
                             u29291 862A                               u34971 CEE4  
                             u34891 99B2                               u35771 74A6  
                             u27780 F270                               u26980 1478  
                             u27860 C36A                               u27940 8544  
                             u28740 3F3C                               u28660 3DC6  
                             u28580 3C08                               u29540 9F10  
                             u28820 C93C                               u29620 CA68  
                             u28900 DD00                               u29700 BDB6  
                             u29460 88AC                               u29380 877E  
                             u34980 CF00                               u35780 74C0  
                             _MFOEN 059D                               u27781 F26C  
                             u26981 1472                               u27861 C366  
                             u27941 8540                               u28741 3F38  
                             u28661 3DC2                               u28581 3C04  
                             u29541 9F0C                               u28821 C938  
                             u29621 CA64                               u28901 DCFC  
                             u29277 F14C                               u29701 BDB2  
                             u29461 88A8                               u29381 877A  
                             u34981 CEFC                               u35781 74BC  
                             u27790 E6E6                               u26990 147A  
                             u27870 C3D2                               u27950 8558  
                             u29470 FC9A                               u28750 3F80  
                             u28670 3DF0                               u28590 3C46  
                             u29550 9F2A                               u28830 C964  
                             u29630 CA9C                               u28910 DD2C  
                             u29710 BDF4                               u29390 87A4  
                             u34990 CF10                               u27791 E6E2  
                             u27871 C3CE                               u27951 8554  
                             u29471 FC96                               u28751 3F7C  
                             u28671 3DEC                               u28591 3C42  
                             u29551 9F26                               u28831 C95E  
                             u29631 CA98                               u28911 DD28  
                             u29711 BDF0                               u29391 87A0  
                             u34991 CF0C                               u27880 C404  
                             u27960 8578                               u29480 FCBE  
                             u28760 3F96                               u28680 3E26  
                             u29560 9F48                               u28840 C966  
                             u29640 CAAE                               u28920 DD4C  
                             u29800 46CE                               u29720 BE22  
                             u27881 C400                               u27961 8574  
                             u29481 FCBA                               u28761 3F92  
                             u28681 3E22                               u29561 9F44  
                             u29641 CAAA                               u28921 DD48  
                             u29801 46CA                               u28497 D492  
                             u29721 BE1E                               u27970 85BC  
                             u27890 834E                               u28770 3FD6  
                             u28690 3E6C                               u29490 C452  
                             u29570 A0F8                               u28850 ECFE  
                             u28930 DD70                               u29810 4700  
                             u29730 4612                               u29650 F2AA  
                             u27971 85B8                               u27891 834A  
                             u28771 3FD2                               u28691 3E68  
                             u29491 C44E                               u29571 A0F4  
                             u28851 ECFA                               u28931 DD6C  
                             u29811 46FC                               u29651 F2A6  
                             u27980 8EA2                               u28780 4040  
                             u29660 FA82                               u29580 C9AA  
                             u28860 ED1E                               u28940 DD90  
                             u29900 4830                               u29820 4758  
                             u29740 4622                               u27981 8E9E  
                             u28781 403C                               u29661 FA7E  
                             u29581 C9A6                               u28861 ED1A  
                             u28941 DD8C                               u29901 482C  
                             u29741 461E                               u27990 8EB6  
                             u28790 407A                               u28950 790C  
                             u29590 C9EE                               u28870 ED4A  
                             u29910 4846                               u29830 476E  
                             u29750 4650                               u29670 BCE6  
                             u35798 74F2                               u27991 8EB2  
                             u28791 4076                               u28951 7908  
                             u29591 C9EA                               u28871 ED46  
                             u29911 4842                               u29831 476A  
                             u29671 BCE2                               u35799 7506  
                             u28960 793A                               u28880 ED6A  
                             u29920 485A                               u29840 4784  
                             u29760 4668                               u29680 BD2A  
                             i2l305 F54A                               u28961 7936  
                             u28881 ED66                               u29921 4856  
                             u29841 4780                               u29761 4664  
                             u29737 4608                               u29681 BD26  
                             u28970 798E                               u28890 DCE0  
                             u29930 486C                               u29850 4796  
                             u29770 467E                               u29690 BD5E  
                             _U3RXB 02C7                               u28971 798A  
                             u28891 DCDC                               u29931 4868  
                             u29851 4792                               u29827 474E  
                             u29771 467A                               u29691 BD5A  
                             u28980 79A6                               u29940 489C  
                             u29860 47CC                               u29780 46AC  
                             u28981 79A2                               u29941 4898  
                             u29781 46A8                               u29757 4646  
                             u28990 79D8                               u29950 48CA  
                             u29870 47DC                               u29790 46BE  
                             u28991 79D4                               u29871 47D8  
                             u29791 46BA                               u29960 48E8  
                             u29880 480A                               u29961 48E4  
                             u29970 490A                               u29890 481A  
                             _U3TXB 02C9                               u29971 4906  
                             u29891 4816                               u29867 47C2  
                             i2l292 0288                               u29980 495E  
                             u29981 495A                               u29957 48C0  
                             u29990 4972                               u29991 496E  
                             u29887 4800                               i2l297 027E  
                      vfpfcnvrt@fmt 0595                               _TMR0H 0319  
                             _TMR0L 0318                               _PORTB 04CF  
                   __end_of_f_chdir D920                               _TRISB 04C7  
                             _TRISC 04C8                               _TRISD 04C9  
                   _bioreq_cbuffadr 0824                         _Default_ISR 0288  
                             _WPUA0 2008                               _WPUA1 2009  
                             _WPUA2 200A                               _WPUA3 200B  
                             _WPUA4 200C                               _WPUA5 200D  
                             _WPUE0 2108                               _WPUE1 2109  
                             _WPUE2 210A                     __end_of_f_close F80E  
                             _FatFs 07B7                       scan_files1@fn 074B  
                   __end_of_f_lseek 25B6                 ___lmul@multiplicand 0508  
                   __end_of_f_mount D73C                     __end_of_dir_sdi 7C6E  
                   __end_of_f_write 1DB4                     __end_of_get_fat 6DDA  
               SPI_SD_select@select 0506           SPI_SD_configure@data_mode 05C2  
                   __end_of_get_hex C818                       scan_files@dir 0768  
                     scan_files@fno 0752                       scan_files@res 074F  
                   __end_of_get_str EEAC                     __end_of_dsk_err 0276  
                   __end_of_in_file C120                     __end_of_ld_word FED0  
                             _debug 0816                        ?_read_sector 069A  
                             _flags 055C             ?_SDCard_end_transaction 0501  
                             _mon02 07F4                               _getch FA9C  
                             _mon16 07F2                               _in_fl 0DB4  
                             _mezID 07FC                               _fsdir 098B  
               read_prec_or_width@c 050A                               _errno 07B3  
               read_prec_or_width@n 050B                               _fputc E28A  
                     find_volume@fs 0632                               _fputs FBFE  
                             labs@a 0504                               pad@fp 0515  
                             _width 07B1                    SPI_SD_begin@ctx_ 0504  
                             _putch 0206                               _rx_rp 07C3  
                             main@c 079C                               _rx_wp 07C5  
                             dtoa@d 0520                     __end_of_u_getch F5BA  
                             dtoa@i 052B                               dtoa@p 0526  
                             dtoa@s 052A                               dtoa@w 0528  
                   util_hexdump@buf 05D6                       setup_sd@retry 07BF  
              SDCard_command@length 0531           SPI_SD_configure@bit_order 05C1  
                    disk_ioctl@buff 05BE                     __end_of_set_arg AFB8  
                             pclath 04FA                      disk_read@count 0606  
                             tablat 04F5                      SDCard_crc@endp 0508  
                    disk_ioctl@pdrv 05C0         ___SDCard_command_r1@command 0521  
              SDCard_command@result 0536                               plusw2 04DB  
                             stoa@l 051A                               stoa@p 0514  
                             stoa@s 0510                     __end_of_put_fat 4594  
                             stoa@w 0516                        ?_scan_files1 0501  
                             status 04D8                     __end_of_st_word FFB4  
          ??_SPI_SD_end_transaction 050A                     __end_of_sprintf FA00  
                    ?___fpclassifyf 0504                               xtoa@a 0529  
                             xtoa@c 0530                               xtoa@d 0520  
                   ??_setup_monitor 055A                               xtoa@i 0531  
                   __end_of_str_inf AAA6                               xtoa@p 052C  
                             xtoa@w 052E                               xtoa@x 0524  
                   __end_of_sync_fs A104                     __end_of_strncmp CE22  
                 write_sector@filep 069F                       get_ldnumber@i 0508  
                       drive_cpu@rs 06FF                        _util_hexdump C406  
                   _bioreq_ubuffadr 07DB                     ??_SPI_SD_select 0508  
                   __initialization E1C0                      SDCard_init@buf 05D0  
                    SDCard_init@spi 05CE             ___SDCard_command_r1@buf 0522  
           ___SDCard_command_r1@spi 0529                 disk_initialize@pdrv 0680  
                       _wstart_prog EA54                         ?_URT3Rx_ISR 0501  
                      __end_of_labs F8BA                        __end_of_main 7554  
                      __end_of_dtoa A8E0                        __end_of_mtod F201  
                      __end_of_stoa B98C                        __end_of_xtoa BCA4  
                    ??_bus_hold_req 0504                      write_sram@addr 0504  
                            ??_labs 0508                      get_fileinfo@di 051C  
                    get_fileinfo@dp 0511                              ??_main 0791  
                            ??_dtoa 0524                      get_fileinfo@si 0519  
                      ?_release_bus 0504                              ??_stoa 0512  
                            ??_xtoa 0525                       __activetblptr 0003  
                SDCard_init@timeout 05C9          __end_of_read_prec_or_width E0F4  
    __end_of_SDCard_end_transaction FF8C                              ?_getch 0504  
                            ?_fputc 0505                       see_file@rdbuf 0702  
                            STR_100 FE94                              STR_101 FB90  
                            STR_102 FF48                              STR_110 F897  
                            ?_fputs 050E                              STR_103 FF40  
                            STR_111 F28E                              STR_104 FB90  
                            STR_200 FFD5                              STR_120 FEAC  
                            STR_112 F857                              STR_105 FC9A  
                            STR_121 FEB7                              STR_113 F21F  
                            STR_130 FFC4                              STR_122 FF27  
                            STR_106 FCAE                              STR_114 F38C  
                            STR_131 FB90                              STR_107 FFF9  
                            STR_203 FFD9                              STR_123 FF38  
                            STR_115 F5A0                              STR_132 FFA8  
                            STR_124 FD22                              STR_140 FCC2  
                            STR_108 FBD8                              STR_116 FB36  
                            STR_125 FEF8                              STR_133 FC5B  
                            STR_141 FA08                              STR_109 F7AF  
                            STR_117 F577                              STR_206 FF70  
                            STR_126 FE7A                              STR_150 FD35  
                            STR_142 FC1A                              STR_118 FB93  
                            STR_134 F911                              STR_127 FFF0  
                            STR_119 FDD7                              STR_143 FDA4  
                            STR_151 FD80                              STR_135 F8B6  
                            STR_152 FCC2                              STR_128 FFF0  
                            STR_160 FE25                              STR_144 FDB5  
                            STR_136 F92E                              STR_153 FA08  
                            STR_137 FE87                              STR_161 F983  
                            STR_145 F7D1                              STR_154 FC1A  
                            STR_170 FFE1                              STR_138 FE42  
                            STR_162 FC04                              STR_146 F836  
                            STR_171 FFDD                              STR_139 FF02  
                            STR_147 FDF7                              STR_163 FD0F  
                            STR_155 FA22                              STR_156 FDA4  
                            STR_164 FC04                              STR_172 FFED  
                            STR_148 FD48                              STR_180 FC46  
                            STR_165 FD0F                              STR_157 FDB5  
                            STR_149 FDE7                              STR_181 F815  
                            STR_166 FE07                              STR_174 FA70  
                            STR_158 F668                              STR_190 F473  
                            STR_159 FB90                              STR_167 FE07  
                            STR_183 FD6E                              STR_175 FB4E  
                            STR_191 F2C4                              STR_192 FF30  
                            STR_168 FF15                              STR_176 F61A  
                            STR_184 F49F                              STR_169 FF15  
                            STR_193 FF85                              STR_177 F9D4  
                            STR_185 F94B                              STR_194 FE58  
                            STR_186 FF8B                              STR_195 FF0C  
                            STR_179 FCD6                              STR_187 F4CB  
                            STR_196 FF85                              STR_188 F8F4  
                            STR_197 FE58                    _change_directory 023E  
                            STR_198 FB06                              STR_199 FB7B  
              SDCard_read512@result 05F4                              _ANSELA 0400  
                            ?_putch 0501                              _ANSELB 0408  
                            _ANSELC 0410                              _ANSELD 0418  
                            _T0CON0 031A                              _T0CON1 031B  
                      ?_SDCard_init 05C5                       boot_file@flag 0716  
                            _RA0PPS 0201                              _NCO1EN 2237  
                            _RA2PPS 0203                              _RB0PPS 0209  
                            _RA3PPS 0204                              _RB1PPS 020A  
                            _RA6PPS 0207                       ?_load_program 0700  
                            _U3RXIE 2538                              _U3RXEN 168C  
                            _U3TXIF 25B9                              _U3TXEN 168D  
                            _OSCFRQ 00B1                       vfpfcnvrt@done 059D  
                            _TMR0IE 250F                              _TMR0IF 258F  
                            _TRISA0 2630                              _TRISA1 2631  
                            _TRISA2 2632                              _TRISB0 2638  
                            _TRISA3 2633                              _TRISB1 2639  
                            _TRISA4 2634                              _TRISB2 263A  
                            _TRISA5 2635                              _TRISA6 2636  
                            _TRISA7 2637                              _TRISE0 2650  
                            _TRISE1 2651                              _TRISE2 2652  
              __end_of_dir_register DCBE                              _DbcTbl F201  
                  __end_of___xxtofl AC5A                    __end_of_check_fs 88C2  
                  __end_of_f_getcwd 53D4                    __end_of_clc_init C294  
                    scan_files1@dir 0769                      scan_files1@fno 0753  
                    scan_files1@res 0750                     load_config@conf 070F  
                  __end_of_clk_init 018A                    __end_of_dir_find BE28  
            ??_bus_master_operation 055A                    __end_of_dir_read B304  
                  __end_of_dir_next 65C8                        ?_move_window 061A  
              __end_of_create_chain 40A8                        _write_sector B98C  
                      ___strtoxl@cp 052B                        vfprintf@cfmt 05AB  
                  __end_of_get_line CF2E                    __end_of_ld_clust F2F4  
                    scan_files@path 0750                              ___flge D242  
                            ___fleq E902                    __end_of_ld_dword E646  
                            ___lmul F626                           ??___aldiv 050C  
                  __end_of_make_irq FFFE                           ??___almod 050C  
                         ??___fladd 050C                           ??___fldiv 0533  
                         ??___flneg 0508                              _f_gets D920  
                         ??___flmul 051A                           ??_dbc_2nd 0506  
                            _conf02 07F8                           ??___flsub 0533  
                         ??___fltol 0508                              _conf16 07F6  
                         ??_dbc_1st 0506                              _f_read 2D36  
                         ??___lldiv 050C                              _f_open 25B6  
                            _cin_no 07CA                              _clk_fs 07DF  
                            _efgtoa 0AD8                              _f_sync 9CDA  
                  __end_of_mem_dump F3EA                    __end_of_mem_init 9380  
                            _floorf A104                           ??_f_chdir 055A  
                            _memcmp D446                              _memcpy FA00  
              read_prec_or_width@ap 0506                              _memset FE28  
                         ??_f_close 055A                      find_volume@fmt 064C  
                  ___strtoxl@endptr 0512                              _t_conf 07E6  
                            clear_0 E228                              clear_1 E23A  
                            clear_2 E246                              clear_3 E252  
                            clear_4 E25E                              clear_5 E26A  
               _wait_for_programmer FAE6                           ??_f_lseek 0668  
              __end_of_get_fileinfo A50E                              isa$std 0001  
                         ??_f_mount 055A             ?___SDCard_wait_response 0515  
                            _rom_fl 0FD6                              _printf FFB4  
                  __end_of_see_file 5870                              pad@buf 0517  
                            getch@c 0508               SDCard_command@command 0533  
                            _rx_buf 0B00                              _rx_cnt 07C1  
                         ??_dir_sdi 0644                           ??_f_write 066A  
                 ?_board_event_loop 0501                    util_hexdump@addr 05BF  
                         ??_get_fat 062A                           ??_get_hex 0508  
                            dtoa@fp 051E                              main@rs 0799  
                            _strchr F0EA                    ___strtoxl@prev_a 051A  
                    get_line@length 05BF                              _strcpy FD7C  
                            _strlen F960                           ??_get_str 0703  
                            _strstr DD9E                           ??_dsk_err 0504  
                         ??_in_file 055A                    __end_of_mon_prog D82E  
                  util_hexdump@size 05C1                           ??_ld_word 0506  
                            fputc@c 0505                    __end_of_validate D446  
                            fputs@c 0512                              fputs@i 0513  
                            fputs@s 050E                  ??_board_event_loop 055A  
                   SDCard_crc@count 0506                __end_of_get_ldnumber B4A8  
                   ___fpclassifyf@e 050C                     ___fpclassifyf@u 050E  
                   ___fpclassifyf@x 0504                           ??_u_getch 0702  
                     _util_addrdump C294                        __mediumconst F1E8  
                   disk_read@sector 0602                    __end_of_timer_on 0284  
                         ??_set_arg 0506                              tblptrh 04F7  
                            tblptrl 04F6                              tblptru 04F8  
                  __end_of_setup_sd EFD2                    __end_of_st_clust FA9C  
                  __end_of_st_dword F626                              stoa@cp 0518  
                            stoa@fp 050E                              putch@c 0504  
                  __end_of_vfprintf F864                           ??_put_fat 062E  
                         ??_st_word 0508                           ??_sprintf 055A  
                         ??_str_inf 0703                              xtoa@fp 051E  
                         ??_sync_fs 061C                           ??_strncmp 050A  
                    ??_load_program 05FF                        ?_setup_drive 0504  
                        ___flge@ff1 052B                          ___flge@ff2 052F  
                   ??___fpclassifyf 0508                         read_sram@ab 050E  
              ?_wait_for_programmer 0501                        ___xxtofl@arg 050E  
                      ___xxtofl@exp 050D                        ___xxtofl@val 0504  
                        ___fleq@ff1 0504                          ___fleq@ff2 0508  
           SDCard_write512@response 05F8                    SPI_SD_send@count 0508  
                    _unimon_console AC5A                          __accesstop 0560  
           __end_of__initialization E284                        ?_SPI_SD_send 0504  
                    get_ldnumber@tc 050A                          ___flneg@f1 0504  
                    disk_write@buff 0600                      get_ldnumber@tp 050F  
                    get_ldnumber@tt 050B                      disk_write@pdrv 05F9  
               _SPI_SD_dummy_clocks F758                     SDCard_read512@i 05EC  
                     ___rparam_used 0001                          ___fltol@f1 0504  
                  ??_SPI_SD_receive 050A                     seek_disk@sector 0693  
                    __pcstackCOMRAM 0501            __end_of_util_hexdump_sum F1F2  
                      __pidataBANK7 018A                        __pidataBANK8 024C  
                      __pidataBANK9 F05E                       __end_of_getch FAE6  
                       scan_files@p 074D                      ivt0x8_undefint 0100  
                     __end_of_fputc E354                       __end_of_fputs FC42  
    __end_of___SDCard_wait_response FBFE                   ??_bus_release_req 0504  
               ___SDCard_crc16@endp 050D                       f_closedir@res 05CD  
                     __end_of_putch 021C     ___SDCard_wait_response@attempts 0515  
              ?_SPI_SD_dummy_clocks 050E                      ?_util_addrdump 05BD  
                    _SDCard_command F2F4                      _SDCard_read512 8E56  
            SDCard_init@clock_speed 05C7                     _continue_action FB2C  
                           ??_getch 0506                     get_fileinfo@fno 0513  
                           ??_fputc 0509     ___SDCard_wait_response@response 051A  
                           ??_fputs 0512              __end_of_unimon_console AE0A  
                           ??_putch 0504               ??_wait_for_programmer 05BD  
                    SPI_SD_send@buf 0506                          __pbssBANK7 079E  
                        __pbssBANK8 0800                          __pbssBANK9 098B  
             SDCard_write512@result 05F2                          _f_closedir FDB8  
                     seek_disk@fres 0699                __end_of_bus_hold_req 0264  
                 unimon_console@buf 070C                   unimon_console@cnt 070E  
               SDCard_write512@addr 05DE                             IVTBASEH 045E  
                           IVTBASEL 045D                             IVTBASEU 045F  
               SDCard_write512@offs 05E2                 _SPI_SD_receive_byte 0106  
         ?_SPI_SD_begin_transaction 0508                             ?___flge 052B  
                           ?___fleq 0504                        mem_dump@addr 05E0  
                           ?___lmul 0504                          _board_name 07FA  
                           ?_f_gets 0669                  util_addrdump@chars 05C9  
                    see_file@header 0707                             ?_f_read 063E  
                      mem_init@addr 05E8                        ??_TIMER0_ISR 0501  
                           ?_f_open 06AF                             ?_efgtoa 0560  
                           ?_f_sync 0624                   ??_disk_initialize 05FB  
                           ?_floorf 0544                             ?_memcmp 0504  
                           ?_memcpy 0504                             ?_memset 0504  
                      ?_sync_window 0608                      ___lmul@product 050C  
                           _CLC8OUT 06A7               ??_SPI_SD_dummy_clocks 0512  
                           ?_printf 05AD                             _ANSELE0 2100  
                           _ANSELE1 2101                             _ANSELE2 2102  
            __end_of_SDCard_command F370              __end_of_SDCard_read512 90F8  
                           ?_strchr 0504              _SPI_SD_end_transaction 014A  
                           ?_strcpy 0504                        ??_SDCard_crc 0508  
                           ?_strlen 0504                             _CLCnCON 00D6  
                           _CLCnPOL 00D7                             ?_strstr 050B  
                           _NCO1CLK 0447                             _NCO1INC 0443  
                           _NCO1PFM 2230                             _NCO1OUT 2235  
              ?_SPI_SD_receive_byte 0512                        ?_Default_ISR 0501  
                           i2l18411 F4EE                             i2l18403 0278  
                           i2l18421 F546                             i2l18413 F500  
                           i2l18405 027C                             i2l18415 F50A  
                           i2l18407 F4D8                             i2l18417 F522  
                           i2l18409 F4DC                             i2l18419 F532  
                     wstart_prog@rs 0716                           ?___xxtofl 0504  
                         ?_check_fs 0624                           ?_f_getcwd 06AF  
                        _disk_ioctl F6F4                             _U3RXPPS 0276  
                        _cpm_drives 094B                             _IVTBASE 045D  
                         ?_clc_init 0501                      follow_path@res 0691  
                        _disk_write E6FC                             _IVTLOCK 0459  
                           _SPI1CLK 008C                             _SPI1RXB 0080  
                           _SPI1TXB 0081                           ?_clk_init 0501  
                    remove_chain@fs 065C                           ?_dir_find 067C  
                 __end_of___strtoxl 5D0C                           ?_dir_read 067C  
                         ?_dir_next 0662                           ?_get_line 05BD  
               _pic18f47q43_spi_ctx 08CF                           ?_ld_clust 050B  
                   ?_unimon_console 0501                           ?_ld_dword 0504  
                         ?_make_irq 0501                   ??_SDCard_write512 05E8  
                         ?_mem_dump 0501                 ___SDCard_command_r1 E646  
                         ?_mem_init 05DE                   __end_of_f_readdir DBDC  
                        f_chdir@res 06B1                   __end_of_del_space F05E  
                __end_of_TIMER0_ISR 0280                     scan_files1@fcnt 074D  
                     ?_remove_chain 0645                     scan_files1@path 0751  
___SDCard_wait_response@no_response 0517                   __end_of_f_opendir BFA6  
                       SDCard_crc@i 050A                         SDCard_crc@p 050D  
                         ?_see_file 0501                             _CurrVol 07C7  
                 __end_of_dir_clear C968                   __end_of_dir_alloc CAB6  
                         ?_mon_prog 0501                             __Hparam 0000  
                __end_of_SDCard_crc F274                   __end_of_clst2sect E1C0  
                           __Lparam 0000                        load_config@a 070D  
                         ?_validate 05BE                        load_config@i 0713  
                         _CLCSELECT 00D5                   __end_of_disk_init F960  
                 __end_of_disk_read E858                   __end_of_flash_apl FC84  
                      ?_wstart_prog 0501                        ??_URT3Rx_ISR 0501  
                         ?_timer_on 0501                             ___aldiv CF2E  
                 __end_of_boot_file 7FBE                        _f_write$3223 0676  
                           ___almod DA0C                           ?_setup_sd 0501  
                        f_close@res 0633                             ___fladd 4A70  
                           ___fldiv 7554                             ___flneg FE60  
                         ?_st_clust 0508                             ___flmul 65C8  
                           _dbc_2nd DCBE                             ___flsub FB72  
                           ___fltol D038                             _dbc_1st ECDC  
                         ?_st_dword 0504                          f_gets@buff 0669  
                           ___lldiv EAFC            __end_of_change_directory 024C  
                        check_fs@fs 0624                           ?_vfprintf 05A5  
                        f_getcwd@dj 0723                          f_getcwd@fs 0720  
                        f_getcwd@tp 0704                             _f_chdir D82E  
              __end_of_load_program 619E                             _f_close F7B6  
                           __pcinit E1C0                      ___SDCard_crc16 E354  
              ?___SDCard_command_r1 051B                   __end_of_drive_cpu FD7C  
                           _f_lseek 1DB4                        _get_fat$2170 0632  
                           __ramtop 2600                             _f_mount D642  
                   ??_util_addrdump 05C7                             __ptext0 71A0  
                           __ptext1 7C6E                             __ptext2 E4D4  
                           __ptext3 FC42                             __ptext4 53D4  
                           __ptext5 F370                             __ptext6 D73C  
                           __ptext7 AFB8                             __ptext8 022E  
                           __ptext9 E9AC                             _dir_sdi 78E4  
                   ?_SDCard_command 052B                             _f_write 1538  
                           _fin_cnt 07E3                     ?_SDCard_read512 05DE  
                       validate@obj 05BE                             _get_fat 69EE  
                       validate@res 05C8                             _get_hex C6C6  
                       validate@rfs 05C0                             _get_str EE12  
           __end_of_continue_action FB72                             _cpu_flg 07E5  
                      _dir_register DBDC                             _dsk_err 026E  
                           _in_file BFA6                             _frd_ptr 07BD  
             ??_SPI_SD_receive_byte 0514                             _ld_word FE98  
                 __end_of_load_file EE12                   URT3Rx_ISR@rx_data 0503  
                           f_gets@p 0671                             f_gets@s 0679  
                        f_read@buff 0640                          f_read@clst 0657  
                        _scan_files 9874               read_prec_or_width@fmt 0504  
                        ??___xxtofl 0508                          f_read@sect 0663  
                        f_read@rcnt 0661                          ??_check_fs 062A  
                        ??_f_getcwd 06B3                             _irq_flg 07CB  
                   find_volume@part 0634                             _nmi_sig 07CD  
                           _u_getch F54C                    ___aldiv@dividend 0504  
                 __end_of_read_sram E4D4                   _board_event_loop1 F3EA  
                        ??_clc_init 0504           SDCard_end_transaction@spi 0515  
                           _req_tbl 07CE                             _set_arg AE0A  
                           efgtoa@c 0566                             efgtoa@d 0572  
                           efgtoa@e 0576                             efgtoa@f 0562  
                           efgtoa@g 0589                             efgtoa@h 057E  
                           efgtoa@i 0586                             efgtoa@l 0582  
                           efgtoa@m 0574            SPI_SD_dummy_clocks@dummy 0514  
                           efgtoa@n 058D                             efgtoa@p 0569  
                           efgtoa@t 056B                             efgtoa@u 058F  
                           efgtoa@w 057C              util_addrdump@addr_offs 05BF  
                      _create_chain 3AF8                          ??_clk_init 0504  
            SDCard_command@argument 052B                          ??_dir_find 067E  
                           _tmp_buf 13F8                          del_space@c 0509  
                        del_space@i 0507                          ??_dir_read 0680  
                           _put_fat 40A8                          ??_dir_next 0666  
                ?_board_event_loop1 0501                       ?_restart_prog 0501  
                           _st_word FF8C                             main@buf 079A  
                           _sprintf F9B0                             _str_inf A8E0  
                           main@res 0797                   util_hexdump@chars 05C5  
                 __end_of_seek_disk CD06                          ??_get_line 055A  
                        f_lseek@bcs 0681                          ??_ld_clust 050F  
                           _sync_fs 9EF0                          f_lseek@ofs 0664  
                           _strncmp CD06                          f_lseek@res 0680  
                        ??_ld_dword 0508                end_of_initialization E284  
                     ??_acquire_bus 0506                             _wup_flg 07CC  
                        ??_make_irq 0504                             floorf@e 0552  
                           floorf@m 054E                  __end_of_URT3Rx_ISR F54C  
                           floorf@u 0554                             floorf@x 0544  
                       ?_f_closedir 05C9                   mount_volume@bsect 069E  
                        f_open@clst 06D0                          f_open@mode 06B3  
                        f_open@path 06B1                      ??_remove_chain 064F  
                           memcmp@l 050C                             memcmp@n 0508  
                           memcmp@r 050E                   mount_volume@nclst 06A3  
                           memcpy@d 050B                             memcpy@n 0508  
                           memcpy@s 050D                          ??_mem_dump 055A  
                        ??_mem_init 05E2                             fputc@fp 0507  
                 mount_volume@tsect 069A                        _get_fileinfo A316  
                           memset@c 0506                             memset@n 0508  
                           memset@p 050A                   __end_of_reset_clk 01D6  
                 __end_of_reset_cpu DF56                             fputs@fp 0510  
         SPI_SD_dummy_clocks@clocks 0510                 ??_board_event_loop1 055A  
                     ?_mount_volume 0681                  _read_prec_or_width E028  
                   disk_status@pdrv 05BD                          ??_see_file 0700  
                         i2u2360_40 F4EE                           i2u2360_41 F4EA  
                    util_addrdump@i 05DC                           i2u2361_40 F500  
                         i2u2361_41 F4FC                           i2u2362_40 F522  
                   load_program@adr 070A                           i2u2362_41 F51E  
                   load_program@cnt 070E                     load_program@btr 0708  
                 __end_of_uart_init FD40               __end_of_setup_monitor E902  
                   ___lldiv@divisor 0508                          f_mount@cfs 06B7  
                 util_hexdump_sum@i 05E2                          f_mount@res 06B4  
                 util_hexdump_sum@p 05E0                          ??_mon_prog 055A  
                        f_mount@opt 06B3                          f_mount@vol 06B9  
                 __end_of_timer_off 0288                     ___lldiv@counter 0510  
                      _get_ldnumber B304                          ??_validate 05C2  
                 __end_of_print_com E58E                   __end_of_print_reg B160  
                 __end_of_vfpfcnvrt 3AF8                          efgtoa@mode 0570  
                 __end_of_port_init F6F4                          efgtoa@sign 0588  
                         _SPI1TCNTH 0083                           _SPI1TCNTL 0082  
                  ___aldiv@quotient 050E                          ??_timer_on 0504  
                           postdec1 04E5                             postdec2 04DD  
               ?_read_prec_or_width 0504                          ??_setup_sd 05D5  
                           postinc0 04EE                             postinc1 04E6  
                           postinc2 04DE                   __end_of_start_W65 FF34  
             __end_of_SPI_SD_select 0206                    vfpfcnvrt@convarg 059E  
                        ??_st_clust 0510              __end_of___SDCard_crc16 E418  
                    move_window@res 05FE                          ??_st_dword 050A  
                 __end_of_start_cpu FE28                          ??_vfprintf 055A  
                           strchr@c 0506                          dir_clear@n 0628  
                           strchr@s 0504               ??___SDCard_command_r1 0521  
                        dir_alloc@n 0685                   SPI_SD_receive@buf 0506  
                           strcpy@d 0508                             strlen@a 0506  
                           strlen@s 0504                    remove_chain@clst 0647  
                        dir_find@dp 067C                          dir_find@fs 0680  
                           strstr@h 050B                             strstr@n 050D  
                        _return_cpu 022E                          dir_read@dp 067C  
                        dir_read@fs 0684           __end_of_board_event_loop1 F460  
                        dir_sdi@csz 064E                        read_sector@n 06A2  
                        dir_sdi@ofs 0640                          dir_next@dp 0662  
                        dir_next@fs 0676                         ___fladd@grs 0513  
                       ?_disk_ioctl 05BD                        read_sram@buf 0508  
                      read_sram@len 050A                     release_bus@ctx_ 0504  
                        f_write@btw 0666                       ___xxtofl@sign 050C  
                        f_write@res 067A                       ?_SPI_SD_begin 0504  
                       ?_disk_write 0600                       ?_setup_tomer0 0501  
                        _prt_reload 01D6                      ??_restart_prog 055A  
                        get_fat@obj 0624                          get_fat@val 0636  
              ??_read_prec_or_width 0508                         ___fldiv@grs 053E  
                       ___fldiv@rem 0537                     get_ldnumber@vol 050D  
                   disk_write@count 0606                          disk_read@i 05FC  
                        get_hex@buf 0504                    _SPI_SD_configure CAB6  
                     ??_create_name 0510                         ___flmul@grs 0520  
                    ??_mount_volume 0686                          ld_clust@cl 0513  
                        ld_clust@fs 050B                     _bus_release_req 0264  
               __end_of_debug_flags F20F                          boot_file@m 0717  
                     ??_get_fattime 0508                   SPI_SD_select@ctx_ 0504  
                        get_str@buf 0700                          get_str@cnt 0702  
                     ??_find_volume 0636                          ld_dword@rv 050D  
                    __end_of_DbcTbl F20B                       ??_disk_status 055A  
               __end_of_acquire_bus F90E                     setup_monitor@rs 0718  
    SDCard_init@initial_clock_speed 05C5                     print_reg@reg_02 05C2  
                        _strin_func 08D3                        write_sram@ab 0510  
                 ?_util_hexdump_sum 05DA                     ?___SDCard_crc16 0504  
                        in_file@chr 05FF                      __end_of___flge D346  
                    __end_of___fleq E9AC                      __end_of___lmul F690  
                       vfpfcnvrt@ap 0597                         st_clust@dir 050A  
                       vfpfcnvrt@cp 05A3                         vfpfcnvrt@fp 0593  
                    __end_of_f_gets DA0C                  ??_util_hexdump_sum 055A  
                    __end_of_f_read 344A                        scan_files1@p 074E  
                    __end_of_f_open 2D36                      __end_of_efgtoa 1538  
                    __end_of_f_sync 9EF0                        scan_files@fn 074B  
                        _write_sram D13E                      __end_of_floorf A316  
                    __end_of_memcmp D544                      __end_of_memcpy FA50  
                        floorf@F521 081C                      __end_of_memset FE60  
                      _bus_hold_req 0258                     SPI_SD_begin@ctx 0506  
                        ld_word@ptr 0504                    ?_continue_action 0501  
                     SDCard_crc@crc 050C                       SDCard_crc@buf 0504  
              ___SDCard_crc16@count 0508                      __end_of_printf FFDC  
                       ?_scan_files 0501                      __end_of_strchr F170  
                    __end_of_strcpy FDB8                      __end_of_strlen F9B0  
                    ??_SPI_SD_begin 0506                      __end_of_strstr DE7C  
                    ??_setup_tomer0 0504                 start_initialization E1C0  
                  write_sector@fres 06A1                         st_dword@val 0506  
                       st_dword@ptr 0504                         __end_of_abs FF04  
        ___SDCard_wait_response@spi 0518                         __end_of_pad ECDC  
                       __end_of_rom F21F    __end_of_SPI_SD_begin_transaction 014A  
                        ivt0x8_base 0008                         put_fat@clst 0626  
          _debug_flags@diskio$F4076 F20B               __end_of___fpclassifyf D642  
                   _disk_initialize B4A8                SPI_SD_dummy_clocks@i 0512  
                    load_config@buf 070A                          load_file@p 0715  
                    load_config@str 0711                       ??_follow_path 0688  
                       ___strtoxl@a 0527                         ___strtoxl@c 052D  
                       ___strtoxl@s 0510                 __end_of_create_name 4A70  
                       vfprintf@fmt 05A7                            ??___flge 0533  
                          ??___fleq 050C                            ??___lmul 050C  
                   ___strtoxl@flags 0526                            ??_f_gets 05FF  
                          ??_f_read 0646                 __end_of_get_fattime 022E  
                          ??_f_open 06B4                     ___strtoxl@limit 0522  
                          ??_efgtoa 0558             ?_SPI_SD_end_transaction 0508  
                          ??_f_sync 055A                         __pdataBANK7 07E6  
                       __pdataBANK8 08D3                         __pdataBANK9 0900  
                          ??_floorf 0548                 __end_of_find_volume A702  
                          ??_memcmp 050A                 __end_of_disk_status FCC6  
                          ??_memcpy 050A                       ??_load_config 0702  
                          ??_memset 050A            ??_SDCard_end_transaction 0515  
                        memset@dest 0504                            ??_printf 055A  
                       ?_return_cpu 0501                __end_of_remove_chain 9CDA  
                   SPI_SD_receive@i 050D                     SPI_SD_receive@p 0510  
                          ??_strchr 0508                            ??_strcpy 0508  
                          ??_strlen 0506                            ??_strstr 050F  
                         ___fladd@a 0508                           ___fladd@b 0504  
                       __pbssBANK10 0A00                         __pbssBANK11 0B00  
                        read_sram@i 050C                     SPI_SD_send@ctx_ 0504  
                         ___fldiv@a 052F                           ___fldiv@b 052B  
                       __pbssBIGRAM 0B80                     _SDCard_write512 82E6  
                  ??_unimon_console 055A                           ___flmul@a 0516  
                         ___flmul@b 0512                         __pbssCOMRAM 055A  
                    seek_disk@filep 0697         __end_of_wait_for_programmer FB2C  
                         ___flsub@a 052F                           ___flsub@b 052B  
                     __pcstackBANK5 0560                       __pcstackBANK6 0600  
                     __pcstackBANK7 0700                         ?_prt_reload 0501  
                     ??_read_sector 069C             __end_of_bus_release_req 026E  
                ___SDCard_crc16@crc 0504                  ___SDCard_crc16@buf 0506  
                      f_closedir@dp 05C9                        f_closedir@fs 05CB  
                       _debug_flags F20D                        check_fs@sect 0626  
                      check_fs@sign 062D                        f_getcwd@buff 06AF  
              SDCard_write512@i_701 05EE                          see_file@br 0704  
                        see_file@fr 0706                         _acquire_bus F8BA  
                     f_opendir@path 06B1                        _load_program 5D0C  
                         ___strtoxl 5870                       ??_scan_files1 055A  
              SDCard_write512@count 05E6                SDCard_write512@retry 05F0  
                     ?_util_hexdump 05BD                    ___SDCard_crc16@p 050F  
           bus_master_operation@buf 0712             bus_master_operation@cnt 0714  
                SDCard_write512@crc 05F4                  SDCard_write512@buf 05E4  
                         _f_readdir DAF6                         _efgtoa$4827 056D  
                         _del_space EFD2                           _main$5421 0793  
                SDCard_write512@spi 05F6                    SDCard_write512@i 05EC  
                         _dtoa$4796 0524                           _f_opendir BE28  
       __end_of_SPI_SD_dummy_clocks F7B6      __end_of_SPI_SD_end_transaction 016C  
                 util_addrdump@addr 05C3                       __pmediumconst F1E8  
                  ??_SDCard_command 0533                    ??_SDCard_read512 05E8  
                          ?___aldiv 0504                __end_of_restart_prog EA54  
                          ?___almod 0504                            ?___fladd 0504  
                 util_addrdump@size 05C5                            ?___fldiv 052B  
                         __ptext100 C568                           __ptext101 D13E  
                         __ptext110 EAFC                           __ptext102 F170  
                          ?___flneg 0504                           __ptext111 2D36  
                         __ptext103 C406                           __ptext120 8E56  
                         __ptext112 D346                           __ptext104 CBE8  
                         __ptext121 C294                           __ptext113 FC84  
                         __ptext105 1DB4                           __ptext130 FA00  
                         __ptext122 FFB4                           __ptext114 69EE  
                         __ptext106 3AF8                           __ptext131 F864  
                         __ptext123 F80E                           __ptext115 DF56  
                         __ptext107 40A8                           __ptext140 E902  
                         __ptext132 A104                           __ptext124 344A  
                         __ptext116 B64C                           __ptext108 FF8C  
                         __ptext141 7554                           __ptext133 D544  
                         __ptext125 BB1E                           __ptext117 E6FC  
                         __ptext109 F5BA                           __ptext150 E354  
                         __ptext142 A702                           __ptext134 D038  
                         __ptext126 B7EE                           __ptext118 82E6  
                         __ptext151 E646                           __ptext143 EC3E  
                         __ptext135 FB72                           __ptext127 E028  
                         __ptext119 E7AA                           __ptext160 F758  
                         __ptext152 FBB8                           __ptext144 FBFE  
                         __ptext136 4A70                           __ptext128 0AD8  
                         __ptext161 FCC6                           __ptext153 0106  
                         __ptext145 E28A                           __ptext137 FE60  
                         __ptext129 FD7C                           __ptext170 AAA6  
                         __ptext162 F8BA                           __ptext154 7FBE  
                         __ptext146 0206                           __ptext138 65C8  
                         __ptext171 0288                           __ptext163 EEAC  
                         __ptext155 0128                           __ptext147 FED0  
                         __ptext139 D242                           __ptext172 0278  
                         __ptext164 FE98                           __ptext156 F1F2  
                         __ptext148 DA0C                           __ptext173 F4D8  
                         __ptext165 E58E                           __ptext157 FF62  
                         __ptext149 CF2E                           __ptext166 E0F4  
                         __ptext158 014A                           __ptext167 F626  
                         __ptext159 01EE                           __ptext168 026E  
                         __ptext169 0258                            ?___flmul 0512  
                         _dir_clear C818                            ?_dbc_2nd 0504  
                         _dir_alloc C968                            ?___flsub 052B  
                          ?___fltol 0504                  load_program@header 0713  
                          ?_dbc_1st 0504                            ?___lldiv 0504  
                         _clst2sect E0F4                   ?_change_directory 0501  
                          ?_f_chdir 06AF                           _file_size 07B9  
                    dir_alloc@n_ent 067E                            ?_f_close 062F  
                         _disk_init F90E                           _disk_read E7AA  
                         _flash_apl FC42                 util_addrdump@header 05BD  
                     follow_path@dp 0684                       follow_path@fs 068E  
                          ?_f_lseek 0662                       follow_path@ns 0690  
                       ?_write_sram 0504                    ___almod@dividend 0504  
               __end_of_follow_path 8BA2                       _validate$2906 05C6  
                          ?_f_mount 06AF                          mon_prog@rs 0718  
                        mon_prog@sw 0719                           _boot_file 7C6E  
                     ??_release_bus 0506                            ?_dir_sdi 063E  
                ??_change_directory 055A                            ?_f_write 0662  
                          ?_get_fat 0624                            ?_get_hex 0504  
                          ?_get_str 0700                __end_of_mount_volume 0AD8  
                          ?_dsk_err 0501                            ?_in_file 0700  
                          ?_ld_word 0504                           f_chdir@dj 06B4  
                         f_chdir@fs 06B2                           _drive_cpu FD40  
                          ?_u_getch 0700                util_hexdump_sum@addr 05DC  
               __end_of_load_config 71A0              SDCard_read512@resp_crc 05F2  
                          ?_set_arg 0504                util_hexdump_sum@size 05DE  
            SDCard_read512@response 05FA                           f_close@fp 062F  
                         f_close@fs 0631                           _load_file ED78  
                         f_gets@len 066B                           check_fs@b 0631  
                          ?_put_fat 0624                           check_fs@w 062F  
                         f_getcwd@i 0708                           f_getcwd@n 0706  
                        set_arg@buf 0504                            ?_st_word 0504  
           __end_of_disk_initialize B64C                            ?_sprintf 05AD  
                          ?_str_inf 0700                            _CLCnGLS0 00DC  
                          _CLCnGLS1 00DD                            _CLCnGLS2 00DE  
                          _CLCnGLS3 00DF                            ?_sync_fs 061A  
                          ?_strncmp 0504                            _CLCnSEL0 00D8  
                          _CLCnSEL1 00D9                            _CLCnSEL2 00DA  
                          _CLCnSEL3 00DB                       ??_SDCard_init 05CB  
                         _read_sram E418                        f_read@remain 0652  
                      ??_f_closedir 055A                           f_read@btr 0642  
                         f_read@res 0656                   find_volume@mbr_pt 063C  
                  _board_event_loop EBA0                     ___aldiv@divisor 0508  
           SPI_SD_dummy_clocks@ctx_ 050E                          ?___strtoxl 0510  
                   ___aldiv@counter 050C                         _create_name 4594  
                         _seek_disk CBE8            _SPI_SD_begin_transaction 0128  
                         f_lseek@fp 0662                           f_lseek@fs 0685  
               __end_of_read_sector C6C6                      ??_util_hexdump 05C3  
                         f_open@bcs 06BC                           f_open@ofs 06CC  
                         f_open@res 06D6                    mount_volume@mode 0685  
                  mount_volume@path 0681                    mount_volume@nrsv 0698  
                       _get_fattime 021C                    mount_volume@stat 06A2  
     SDCard_command@response_buffer 052F            ??___SDCard_wait_response 0517  
                      _SPI1CON0bits 0084                        _SPI1CON1bits 0085  
                      _SPI1CON2bits 0086                      load_program@br 0710  
                        ?_f_readdir 0689                      load_program@fr 0712  
                       _find_volume A50E                          ?_del_space 0504  
                       _disk_status FC84                       ??_move_window 0620  
                         f_mount@fs 06AF                           f_mount@rp 06B5  
                     ?_write_sector 069A                     follow_path@path 0686  
              __end_of_SPI_SD_begin FF62                           _reset_clk 01BE  
                         _reset_cpu DE7C                            _SPI1BAUD 0089  
              __end_of_setup_tomer0 01BE                            _SPI1CON0 0084  
                          _SPI1CON1 0085                            _SPI1INTE 008B  
                        ?_f_opendir 06AF                 ___strtoxl@is_signed 0516  
                          _SPI1RXIF 2588                 __end_of_scan_files1 9874  
                     move_window@fs 061A                           _uart_init FD04  
                        ?_dir_clear 061A                           dir_find@c 0682  
                        ?_dir_alloc 067C                     remove_chain@obj 0645  
                   remove_chain@res 065B                     remove_chain@nxt 0657  
       __end_of_SPI_SD_receive_byte 0128                           _timer_off 0284  
                        ?_clst2sect 0510                           f_sync@dir 062B  
                      f_readdir@fno 068B             __end_of_SDCard_write512 85D6  
                      f_readdir@res 068F                           f_sync@res 062A  
                         dir_read@b 0687            __end_of_SPI_SD_configure CBE8  
                         dir_sdi@dp 063E                           dir_sdi@fs 0656  
                         _print_com E4D4                           _print_reg AFB8  
                        ?_disk_init 06BB                          ?_disk_read 0600  
                         _vfpfcnvrt 344A                      release_bus@ctx 0506  
                        ?_flash_apl 0501                           f_write@cc 067F  
                         _port_init F690                           f_write@bw 0668  
                         f_write@fp 0662                           f_write@fs 068B  
                         _xtoa$4849 052A                           get_fat@bc 063A  
                      del_space@pos 0508                           get_fat@fs 063C  
                        ?_boot_file 0501                           get_fat@wc 0634  
                         _start_W65 FF04                           get_hex@ch 0516  
                __end_of_f_closedir FDF0                           _start_lba 07EE  
                         _start_cpu FDF0                           get_line@c 05C1  
                         get_line@n 05C3                           get_line@s 05BD  
             __end_of_util_addrdump C406                     acquire_bus@ctx_ 0504  
                      ??_disk_ioctl 055A                          ?_drive_cpu 0501  
         _bus_master_operation$1043 0710                        ??_disk_write 055A  
                       f_chdir@path 06AF                        f_lseek@ifptr 0678  
                       write_sram@i 050E                        f_lseek@nsect 067C  
                        ?_load_file 0501                 __end_of_release_bus FD04  
                        st_clust@cl 050C                          vfpfcnvrt@c 05A2  
                        st_clust@fs 0508                    ?_bus_release_req 0501  
                 ___lmul@multiplier 0504                           copy_data0 E1D4  
                         copy_data1 E1F4                           copy_data2 E214  
                        ?_read_sram 0504                       util_hexdump@i 05D8  
                         ld_word@rv 0509                       ??_setup_drive 0506  
                     ??_SPI_SD_send 050A                      ___strtoxl$4682 051E  
                    ___strtoxl$4683 0520                        SDCard_init@i 05CC  
                        ?_seek_disk 068B                          put_fat@res 0644  
                        put_fat@val 062A                           mem_dump@p 05DE  
            util_hexdump_sum@header 05DA                           mem_init@i 05E6  
                  ??___SDCard_crc16 050A                     dir_next@stretch 0664  
               __end_of_SDCard_init 9606                      ??_write_sector 069C  
                          __Hrparam 0000         __end_of___SDCard_command_r1 E6FC  
                        ?_reset_clk 0501                       load_config@fr 070C  
                        ?_reset_cpu 0501                      restart_prog@rs 0716  
                         memcpy@tmp 050A                          vfprintf@ap 05A9  
                          __Lrparam 0000                          vfprintf@fp 05A5  
                       _follow_path 88C2                      ___strtoxl@base 0514  
                __end_of_disk_ioctl F758                          ?_uart_init 0501  
                __end_of_disk_write E7AA                          ?_timer_off 0501  
                        st_word@val 0506                          st_word@ptr 0504  
                        ?_print_com 0501                          ?_print_reg 0501  
                        ?_vfpfcnvrt 0593                          ?_port_init 0501  
               __end_of_move_window E028                         _load_config 6DDA  
      ___SDCard_command_r1@argument 051B                          ?_start_W65 0501  
                       f_getcwd@ccl 0700                         f_getcwd@fno 070A  
                       f_getcwd@len 06B1                          ?_start_cpu 0501  
                ___fpclassifyf@F465 0820                         f_getcwd@res 0722  
                      f_opendir@res 06B5                            dbc_2nd@c 0506  
                      ??_scan_files 055A                          sprintf@fmt 05AF  
                          dbc_1st@c 0506                            ___xxtofl AAA6  
                          _check_fs 85D6                            _f_getcwd 4F26  
                        str_inf@buf 0700                          str_inf@cnt 0702  
                          _clc_init C120                            _cin_file 11F8  
                          __pivt0x8 0008                     dir_register@res 068C  
      __end_of_bus_master_operation 8E56                       dir_clear@ibuf 0620  
                     dir_clear@clst 061C                    util_addrdump@buf 05DA  
                          _clk_init 016C                    read_sector@filep 069F  
                     dir_clear@sect 0622                            __ptext10 ED78  
                          __ptext11 023E                            __ptext20 FF34  
                          __ptext12 9606                            __ptext21 F2F4  
                          __ptext13 9874                            __ptext30 B160  
                          __ptext22 E858                            __ptext14 EA54  
                          __ptext31 FDB8                            __ptext23 FF04  
                          __ptext15 FAE6                            __ptext40 EFD2  
                          __ptext32 FB2C                            __ptext24 01A4  
                          __ptext16 FD04                            __ptext41 5870  
                          __ptext33 DE7C                            __ptext25 AE0A  
                          __ptext17 EF40                            __ptext50 01D6  
                          __ptext42 CE22                            __ptext34 01BE  
                          __ptext26 DAF6                            __ptext18 9380  
                          __ptext51 5D0C                            __ptext43 FA9C  
                          __ptext35 F690                            __ptext27 BE28  
                          __ptext19 CAB6                            __ptext60 EBA0  
                          __ptext52 DD9E                            __ptext44 F90E  
                          __ptext36 90F8                            __ptext28 4F26  
                          __ptext61 FFDC                            __ptext53 CD06  
                          __ptext45 D642                            __ptext37 C6C6  
                          __ptext29 A316                            __ptext70 A8E0  
                          __ptext62 0264                            __ptext54 F960  
                          __ptext46 016C                            __ptext38 6DDA  
                          __ptext71 E418                            __ptext63 8BA2  
                          __ptext55 F9B0                            __ptext47 C120  
                          __ptext39 D920                            __ptext80 F274  
                          __ptext72 25B6                            __ptext64 B98C  
                          __ptext56 FD40                            __ptext48 D82E  
                          __ptext81 BCA4                            __ptext73 9AA8  
                          __ptext65 1538                            __ptext57 0280  
                          __ptext49 FDF0                            __ptext90 619E  
                          __ptext82 D446                            __ptext74 0000  
                          __ptext66 AC5A                            __ptext58 0284  
                          __ptext91 C818                            __ptext83 4594  
                          __ptext75 B304                            __ptext67 BFA6  
                          __ptext59 F3EA                            __ptext92 F7B6  
                          __ptext84 F0EA                            __ptext76 A50E  
                          __ptext68 F54C                            _dir_find BCA4  
                          __ptext93 9CDA                            __ptext85 DCBE  
                          __ptext77 85D6                            __ptext69 EE12  
                          __ptext94 9EF0                            __ptext86 ECDC  
                          __ptext78 B4A8                            __ptext95 FE28  
                          __ptext87 DBDC                            __ptext79 88C2  
                          __ptext96 F6F4                            __ptext88 C968  
                          __ptext97 FA50                            __ptext89 78E4  
                          __ptext98 021C                            __ptext99 F460  
                 load_program@fname 0700                            _dir_read B160  
                          _dir_next 619E                         _read_sector C568  
                          _get_char 08D9                            _disk_buf 0A00  
                          _fin_name 08C2                   load_program@rdbuf 0706  
                          _fileinfo 0800                    ?_disk_initialize 0501  
                          _get_line CE22                            _fin_size 07BB  
                         mon_prog@p 0716                            _ld_clust F274  
                          _ld_dword E58E                     ___almod@divisor 0508  
                    sync_window@res 05FC                            _make_irq FFDC  
                   ___almod@counter 050C        ___SDCard_command_r1@response 0528  
                        strcpy@dest 0504              _SDCard_end_transaction FF62  
                       ??___strtoxl 0517                            _mem_dump F370  
               util_hexdump_sum@sum 05E4                            _mem_init 90F8  
              SPI_SD_receive@repeat 050C                            f_gets@dc 0673  
                          _load_flg 07C9                            f_gets@fp 066D  
                          f_gets@nc 066F                            f_gets@rc 0677  
                          _line_buf 0A80                         f_read@csect 065D  
                       _scan_files1 9606                          sync_fs@res 05FD  
                      _remove_chain 9AA8                         f_read@rbuff 065B  
                          f_read@cc 065F                            f_read@br 0644  
                          f_read@fp 063E                            f_read@fs 0667  
                          _see_file 53D4                            _raw_addr 07AD  
                          f_open@dj 06D7                            f_open@cl 06C4  
                          f_open@fp 06AF                            f_open@fs 06D4  
                          f_open@sc 06C8                     mount_volume@fmt 06AB  
                          f_open@tm 06C0                         _IVTLOCKbits 0459  
                   mount_volume@rfs 0683                         ??_f_readdir 055A  
                          _mon_prog D73C                     mount_volume@vol 0692  
               __end_of_setup_drive F4D6                         ??_del_space 0506  
                          _validate D346                            efgtoa@fp 0560  
                          efgtoa@ne 0567                            efgtoa@pp 056F  
                          efgtoa@ou 0578                         ??_f_opendir 055A  
               __end_of_SPI_SD_send EF40                  __end_of_scan_files 9AA8  
                          isa$xinst 0000                            _timer_on 0280  
                       f_readdir@dp 0689                         f_readdir@fs 068D  
                          f_sync@fp 0624                            f_sync@fs 062D  
                          f_sync@tm 0626                            _setup_sd EF40  
                       ??_dir_clear 05FD                         ??_dir_alloc 0680  
                          _st_clust FA50                            _st_dword F5BA  
                       ??_clst2sect 0516                            get_hex@c 050C  
                          get_hex@d 050E                            _vfprintf F80E  
                  ?_SDCard_write512 05DE                       ??_sync_window 060A  
                         printf@fmt 05AD                      acquire_bus@ctx 0506  
                       ??_disk_init 055A                         ??_disk_read 055A  
                       ??_flash_apl 055A                            get_str@c 0705  
                          get_str@i 0707                  util_hexdump@header 05BD  
                       f_lseek@clst 0687                        ??_return_cpu 055A  
                       ??_boot_file 055A                      _SPI_SD_receive 7FBE  
                       _release_bus FCC6                       ??_Default_ISR 0501  
              __end_of_util_hexdump C568                SPI_SD_configure@ctx_ 05BD  
                mount_volume@fasize 06A7                         ??_drive_cpu 055A  
                         put_fat@bc 0642                           put_fat@fs 0624  
                          memcmp@vl 0504                            memcmp@vr 0506  
                      ??_prt_reload 055A                            memcpy@d1 0504  
                          memcpy@s1 0506                         ??_load_file 055A  
                mount_volume@szbfat 068E                  mount_volume@sysect 0694  
                      _restart_prog E9AC                         ??_read_sram 050C  
                     clst2sect@clst 0512                         f_opendir@dp 06AF  
                       f_opendir@fs 06B3                            intlevel2 0000  
                      ?_acquire_bus 0504                         _SDCard_init 9380  
                         sprintf@ap 05B3                            u_getch@c 05FF  
               SPI_SD_receive@i_600 050F                      dir_register@dp 0688  
                    dir_register@fs 068A                    load_program@adr0 0702  
                   read_sector@fres 06A1                        dir_clear@szb 0626  
                       ??_seek_disk 068D                    ___lldiv@dividend 0504  
                      dir_alloc@res 0687                       sync_window@fs 0608  
                       _SLRCONBbits 040B                 SPI_SD_receive@count 0508  
                      _mount_volume 0000                         f_mount@path 06B1  
                         strcpy@src 0506                            set_arg@i 0506  
                         sync_fs@fs 061A                  __end_of_return_cpu 023E  
           SDCard_command@responsep 0538                      mount_volume@fs 06AD  
                       ??_reset_clk 0504                         ??_reset_cpu 05BD  
                     _setup_monitor E858                         _move_window DF56  
                     ??_wstart_prog 055A                         efgtoa@nmode 0571  
                        _SPI1SCKPPS 026A                          _SPI1SDIPPS 026B  
                       ??_uart_init 0504                            printf@ap 05BB  
                __end_of_prt_reload 01EE                         ??_timer_off 0504  
                        _SPI1TWIDTH 0088                          _TIMER0_ISR 0278  
            __end_of_SPI_SD_receive 82E6                       _SPI_SD_select 01EE  
                       ??_print_com 055A                         ??_print_reg 05BD  
                       ??_vfpfcnvrt 0599                         ??_port_init 0504  
                          put_fat@p 0640                     move_window@sect 061C  
                      ??_write_sram 050C            __end_of_board_event_loop EC3E  
                       ??_start_W65 0504                       ?_dir_register 0688  
                       ??_start_cpu 0504                          _SDCard_crc F1F2  
                      dir_read@attr 0686                            sprintf@f 05B5  
                          sprintf@s 05AD                            str_inf@a 0707  
                          str_inf@c 0705                            str_inf@i 0708  
                       dir_clear@fs 061A                         dir_alloc@dp 067C  
                       dir_alloc@fs 0683                    ___lldiv@quotient 050C  
                SPI_SD_receive@ctx_ 0504              ___SDCard_wait_response FBB8  
               __end_of_sync_window B7EE                         dir_find@res 0683  
                          strncmp@l 0504                            strncmp@n 0508  
                          strncmp@r 0506                   remove_chain@pclst 064B  
              __end_of_write_sector BB1E                        ___aldiv@sign 050D  
                     ?_create_chain 0645          ??_SPI_SD_begin_transaction 050A  
                      _SPI_SD_begin FF34        SPI_SD_begin_transaction@ctx_ 0508  
                      _setup_tomer0 01A4                            strstr@nl 050F  
                      dir_next@clst 0678                    _create_name$2703 0513  
                  _create_name$2707 0515                       ___fladd@signs 0510  
               _unimon_console$1038 070A                 __end_of_Default_ISR 028A  
                       clst2sect@fs 0510                         dir_read@res 0688  
                       dir_read@vol 067E                         dir_sdi@clst 0652  
                       _setup_drive F460                        ___almod@sign 050D  
                     ?_get_fileinfo 0511                        ?_create_name 050C  
                      ___fladd@aexp 0511                        ___fladd@bexp 0512  
                       _SPI_SD_send EEAC                         dir_next@ofs 0672  
                      f_write@csect 067D                       read_sram@addr 0504  
                      f_write@wbuff 067B                        ?_get_fattime 0504  
                __end_of_write_sram D242                        _put_fat$2200 063C  
                      _put_fat$2201 063E                          _SPI_SD_ctx 07FE  
                       f_write@buff 0664                         f_write@clst 0681  
                    ?_setup_monitor 0716                         f_write@sect 0687  
                      ?_find_volume 0632                         f_write@wcnt 0685  
                     ?_get_ldnumber 0504                        ?_disk_status 0501  
        SPI_SD_end_transaction@ctx_ 0508  
